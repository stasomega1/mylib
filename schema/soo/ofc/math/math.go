//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package math

import (
	_f "encoding/xml"
	_b "fmt"
	_bf "github.com/unidoc/unioffice"
	_g "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes"
	_d "strconv"
)

type CT_CtrlPr struct{}
type CT_UnSignedInteger struct{ ValAttr uint32 }

func (_ded *CT_BreakBin) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ggca := range start.Attr {
		if _ggca.Name.Local == "\u0076\u0061\u006c" {
			_ded.ValAttr.UnmarshalXMLAttr(_ggca)
			continue
		}
	}
	for {
		_cbfc, _dge := d.Token()
		if _dge != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e\u003a\u0020\u0025\u0073", _dge)
		}
		if _cg, _cfg := _cbfc.(_f.EndElement); _cfg && _cg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OMathArg struct {
	ArgPr                *CT_OMathArgPr
	EG_OMathMathElements []*EG_OMathMathElements
	CtrlPr               *CT_CtrlPr
}

func NewCT_TopBot() *CT_TopBot { _cddb := &CT_TopBot{}; _cddb.ValAttr = ST_TopBot(1); return _cddb }

type CT_PhantPr struct {
	Show     *CT_OnOff
	ZeroWid  *CT_OnOff
	ZeroAsc  *CT_OnOff
	ZeroDesc *CT_OnOff
	Transp   *CT_OnOff
	CtrlPr   *CT_CtrlPr
}

func (_cacf *CT_MPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cacf.BaseJc != nil {
		_eaec := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0061\u0073\u0065\u004a\u0063"}}
		e.EncodeElement(_cacf.BaseJc, _eaec)
	}
	if _cacf.PlcHide != nil {
		_cgcf := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u006c\u0063\u0048\u0069\u0064e"}}
		e.EncodeElement(_cacf.PlcHide, _cgcf)
	}
	if _cacf.RSpRule != nil {
		_gdbfb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u0053\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_cacf.RSpRule, _gdbfb)
	}
	if _cacf.CGpRule != nil {
		_eacb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0063\u0047\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_cacf.CGpRule, _eacb)
	}
	if _cacf.RSp != nil {
		_cfde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072S\u0070"}}
		e.EncodeElement(_cacf.RSp, _cfde)
	}
	if _cacf.CSp != nil {
		_cade := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063S\u0070"}}
		e.EncodeElement(_cacf.CSp, _cade)
	}
	if _cacf.CGp != nil {
		_addc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063G\u0070"}}
		e.EncodeElement(_cacf.CGp, _addc)
	}
	if _cacf.Mcs != nil {
		_dbea := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006dc\u0073"}}
		e.EncodeElement(_cacf.Mcs, _dbea)
	}
	if _cacf.CtrlPr != nil {
		_ddde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cacf.CtrlPr, _ddde)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_MathPr() *CT_MathPr { _dafd := &CT_MathPr{}; return _dafd }

// ValidateWithPath validates the CT_SSubPr and its children, prefixing error messages with path
func (_fbgc *CT_SSubPr) ValidateWithPath(path string) error {
	if _fbgc.CtrlPr != nil {
		if _gdfeb := _fbgc.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gdfeb != nil {
			return _gdfeb
		}
	}
	return nil
}

// Validate validates the CT_LimUpp and its children
func (_cagb *CT_LimUpp) Validate() error {
	return _cagb.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u0055\u0070p")
}
func (_gdcd ST_TopBot) String() string {
	switch _gdcd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0062\u006f\u0074"
	}
	return ""
}

// Validate validates the EG_OMathMathElements and its children
func (_gced *EG_OMathMathElements) Validate() error {
	return _gced.ValidateWithPath("E\u0047_\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006den\u0074\u0073")
}
func NewCT_PhantPr() *CT_PhantPr { _gfce := &CT_PhantPr{}; return _gfce }

// Validate validates the CT_SSubPr and its children
func (_fdbd *CT_SSubPr) Validate() error {
	return _fdbd.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0062\u0050r")
}

type CT_TopBot struct{ ValAttr ST_TopBot }

func NewCT_Bar() *CT_Bar { _bda := &CT_Bar{}; _bda.E = NewCT_OMathArg(); return _bda }

type CT_AccPr struct {
	Chr    *CT_Char
	CtrlPr *CT_CtrlPr
}

func (_baee *CT_BorderBoxPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gab:
	for {
		_edb, _bc := d.Token()
		if _bc != nil {
			return _bc
		}
		switch _caa := _edb.(type) {
		case _f.StartElement:
			switch _caa.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0054\u006f\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0054\u006f\u0070"}:
				_baee.HideTop = NewCT_OnOff()
				if _cff := d.DecodeElement(_baee.HideTop, &_caa); _cff != nil {
					return _cff
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0042\u006f\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0042\u006f\u0074"}:
				_baee.HideBot = NewCT_OnOff()
				if _ggf := d.DecodeElement(_baee.HideBot, &_caa); _ggf != nil {
					return _ggf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}:
				_baee.HideLeft = NewCT_OnOff()
				if _ggc := d.DecodeElement(_baee.HideLeft, &_caa); _ggc != nil {
					return _ggc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0052\u0069\u0067\u0068t"}:
				_baee.HideRight = NewCT_OnOff()
				if _debb := d.DecodeElement(_baee.HideRight, &_caa); _debb != nil {
					return _debb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0048"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0048"}:
				_baee.StrikeH = NewCT_OnOff()
				if _bbag := d.DecodeElement(_baee.StrikeH, &_caa); _bbag != nil {
					return _bbag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0056"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0056"}:
				_baee.StrikeV = NewCT_OnOff()
				if _eb := d.DecodeElement(_baee.StrikeV, &_caa); _eb != nil {
					return _eb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}:
				_baee.StrikeBLTR = NewCT_OnOff()
				if _gdd := d.DecodeElement(_baee.StrikeBLTR, &_caa); _gdd != nil {
					return _gdd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}:
				_baee.StrikeTLBR = NewCT_OnOff()
				if _gfc := d.DecodeElement(_baee.StrikeTLBR, &_caa); _gfc != nil {
					return _gfc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_baee.CtrlPr = NewCT_CtrlPr()
				if _ef := d.DecodeElement(_baee.CtrlPr, &_caa); _ef != nil {
					return _ef
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0042o\u0078P\u0072\u0020\u0025\u0076", _caa.Name)
				if _bgb := d.Skip(); _bgb != nil {
					return _bgb
				}
			}
		case _f.EndElement:
			break _gab
		case _f.CharData:
		}
	}
	return nil
}

type CT_Text struct {
	SpaceAttr *string
	Content   string
}

func (_ggegb *CT_SpacingRule) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ggegb.ValAttr = 0
	for _, _cdf := range start.Attr {
		if _cdf.Name.Local == "\u0076\u0061\u006c" {
			_cbbcf, _dgbee := _d.ParseInt(_cdf.Value, 10, 64)
			if _dgbee != nil {
				return _dgbee
			}
			_ggegb.ValAttr = _cbbcf
			continue
		}
	}
	for {
		_fcce, _baaf := d.Token()
		if _baaf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0070\u0061\u0063\u0069\u006e\u0067\u0052\u0075\u006c\u0065:\u0020\u0025\u0073", _baaf)
		}
		if _dbaa, _fgga := _fcce.(_f.EndElement); _fgga && _dbaa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LimLow struct {
	LimLowPr *CT_LimLowPr
	E        *CT_OMathArg
	Lim      *CT_OMathArg
}

// Validate validates the CT_D and its children
func (_aada *CT_D) Validate() error { return _aada.ValidateWithPath("\u0043\u0054\u005f\u0044") }

// ValidateWithPath validates the CT_EqArr and its children, prefixing error messages with path
func (_ageg *CT_EqArr) ValidateWithPath(path string) error {
	if _ageg.EqArrPr != nil {
		if _ebad := _ageg.EqArrPr.ValidateWithPath(path + "\u002f\u0045\u0071\u0041\u0072\u0072\u0050\u0072"); _ebad != nil {
			return _ebad
		}
	}
	for _bdf, _fgg := range _ageg.E {
		if _bbgc := _fgg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _bdf)); _bbgc != nil {
			return _bbgc
		}
	}
	return nil
}

type CT_GroupChr struct {
	GroupChrPr *CT_GroupChrPr
	E          *CT_OMathArg
}

func NewMathPr() *MathPr { _babb := &MathPr{}; _babb.CT_MathPr = *NewCT_MathPr(); return _babb }

// Validate validates the CT_TopBot and its children
func (_gcbe *CT_TopBot) Validate() error {
	return _gcbe.ValidateWithPath("\u0043T\u005f\u0054\u006f\u0070\u0042\u006ft")
}

// Validate validates the CT_ManualBreak and its children
func (_bgbf *CT_ManualBreak) Validate() error {
	return _bgbf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u006e\u0075\u0061\u006cB\u0072\u0065\u0061\u006b")
}
func (_ccab *CT_YAlign) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_ebfbb, _gdbb := _ccab.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _gdbb != nil {
		return _gdbb
	}
	start.Attr = append(start.Attr, _ebfbb)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OMathPara and its children
func (_daff *CT_OMathPara) Validate() error {
	return _daff.ValidateWithPath("\u0043\u0054\u005fO\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061")
}
func NewCT_Nary() *CT_Nary {
	_gaedd := &CT_Nary{}
	_gaedd.Sub = NewCT_OMathArg()
	_gaedd.Sup = NewCT_OMathArg()
	_gaedd.E = NewCT_OMathArg()
	return _gaedd
}

// ValidateWithPath validates the CT_PhantPr and its children, prefixing error messages with path
func (_adff *CT_PhantPr) ValidateWithPath(path string) error {
	if _adff.Show != nil {
		if _bacg := _adff.Show.ValidateWithPath(path + "\u002f\u0053\u0068o\u0077"); _bacg != nil {
			return _bacg
		}
	}
	if _adff.ZeroWid != nil {
		if _gbac := _adff.ZeroWid.ValidateWithPath(path + "\u002f\u005a\u0065\u0072\u006f\u0057\u0069\u0064"); _gbac != nil {
			return _gbac
		}
	}
	if _adff.ZeroAsc != nil {
		if _cgcgb := _adff.ZeroAsc.ValidateWithPath(path + "\u002f\u005a\u0065\u0072\u006f\u0041\u0073\u0063"); _cgcgb != nil {
			return _cgcgb
		}
	}
	if _adff.ZeroDesc != nil {
		if _aegf := _adff.ZeroDesc.ValidateWithPath(path + "\u002fZ\u0065\u0072\u006f\u0044\u0065\u0073c"); _aegf != nil {
			return _aegf
		}
	}
	if _adff.Transp != nil {
		if _agfg := _adff.Transp.ValidateWithPath(path + "\u002fT\u0072\u0061\u006e\u0073\u0070"); _agfg != nil {
			return _agfg
		}
	}
	if _adff.CtrlPr != nil {
		if _aedcb := _adff.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aedcb != nil {
			return _aedcb
		}
	}
	return nil
}

type ST_LimLoc byte

func (_dccfe *CT_RChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aegfe:
	for {
		_cadg, _edagae := d.Token()
		if _edagae != nil {
			return _edagae
		}
		switch _gbcf := _cadg.(type) {
		case _f.StartElement:
			switch _gbcf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074"}:
				_adged := NewCT_Text()
				if _debd := d.DecodeElement(_adged, &_gbcf); _debd != nil {
					return _debd
				}
				_dccfe.T = append(_dccfe.T, _adged)
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fR\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gbcf.Name)
				if _abe := d.Skip(); _abe != nil {
					return _abe
				}
			}
		case _f.EndElement:
			break _aegfe
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PhantPr and its children
func (_bcbd *CT_PhantPr) Validate() error {
	return _bcbd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0050\u0072")
}

type CT_LimLoc struct{ ValAttr ST_LimLoc }

func (_ffaca *MathPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ffaca.CT_MathPr = *NewCT_MathPr()
_gga:
	for {
		_dgee, _bbbda := d.Token()
		if _bbbda != nil {
			return _bbbda
		}
		switch _eeabe := _dgee.(type) {
		case _f.StartElement:
			switch _eeabe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}:
				_ffaca.MathFont = NewCT_String()
				if _bcgb := d.DecodeElement(_ffaca.MathFont, &_eeabe); _bcgb != nil {
					return _bcgb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}:
				_ffaca.BrkBin = NewCT_BreakBin()
				if _adgec := d.DecodeElement(_ffaca.BrkBin, &_eeabe); _adgec != nil {
					return _adgec
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}:
				_ffaca.BrkBinSub = NewCT_BreakBinSub()
				if _acgc := d.DecodeElement(_ffaca.BrkBinSub, &_eeabe); _acgc != nil {
					return _acgc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}:
				_ffaca.SmallFrac = NewCT_OnOff()
				if _gcdg := d.DecodeElement(_ffaca.SmallFrac, &_eeabe); _gcdg != nil {
					return _gcdg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}:
				_ffaca.DispDef = NewCT_OnOff()
				if _abafd := d.DecodeElement(_ffaca.DispDef, &_eeabe); _abafd != nil {
					return _abafd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}:
				_ffaca.LMargin = NewCT_TwipsMeasure()
				if _ecaf := d.DecodeElement(_ffaca.LMargin, &_eeabe); _ecaf != nil {
					return _ecaf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}:
				_ffaca.RMargin = NewCT_TwipsMeasure()
				if _dacb := d.DecodeElement(_ffaca.RMargin, &_eeabe); _dacb != nil {
					return _dacb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}:
				_ffaca.DefJc = NewCT_OMathJc()
				if _dbfag := d.DecodeElement(_ffaca.DefJc, &_eeabe); _dbfag != nil {
					return _dbfag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}:
				_ffaca.PreSp = NewCT_TwipsMeasure()
				if _eefa := d.DecodeElement(_ffaca.PreSp, &_eeabe); _eefa != nil {
					return _eefa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}:
				_ffaca.PostSp = NewCT_TwipsMeasure()
				if _agfe := d.DecodeElement(_ffaca.PostSp, &_eeabe); _agfe != nil {
					return _agfe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}:
				_ffaca.InterSp = NewCT_TwipsMeasure()
				if _bcbf := d.DecodeElement(_ffaca.InterSp, &_eeabe); _bcbf != nil {
					return _bcbf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}:
				_ffaca.IntraSp = NewCT_TwipsMeasure()
				if _ffgeb := d.DecodeElement(_ffaca.IntraSp, &_eeabe); _ffgeb != nil {
					return _ffgeb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_ffaca.Choice = NewCT_MathPrChoice()
				if _dgfed := d.DecodeElement(&_ffaca.Choice.WrapIndent, &_eeabe); _dgfed != nil {
					return _dgfed
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_ffaca.Choice = NewCT_MathPrChoice()
				if _dgdce := d.DecodeElement(&_ffaca.Choice.WrapRight, &_eeabe); _dgdce != nil {
					return _dgdce
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}:
				_ffaca.IntLim = NewCT_LimLoc()
				if _edfd := d.DecodeElement(_ffaca.IntLim, &_eeabe); _edfd != nil {
					return _edfd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}:
				_ffaca.NaryLim = NewCT_LimLoc()
				if _ddef := d.DecodeElement(_ffaca.NaryLim, &_eeabe); _ddef != nil {
					return _ddef
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0061\u0074\u0068\u0050\u0072\u0020\u0025\u0076", _eeabe.Name)
				if _bgfe := d.Skip(); _bgfe != nil {
					return _bgfe
				}
			}
		case _f.EndElement:
			break _gga
		case _f.CharData:
		}
	}
	return nil
}
func (_aabg *CT_D) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gaea:
	for {
		_gbbc, _cefg := d.Token()
		if _cefg != nil {
			return _cefg
		}
		switch _aeeb := _gbbc.(type) {
		case _f.StartElement:
			switch _aeeb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0050\u0072"}:
				_aabg.DPr = NewCT_DPr()
				if _egb := d.DecodeElement(_aabg.DPr, &_aeeb); _egb != nil {
					return _egb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_efe := NewCT_OMathArg()
				if _bgc := d.DecodeElement(_efe, &_aeeb); _bgc != nil {
					return _bgc
				}
				_aabg.E = append(_aabg.E, _efe)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0044\u0020\u0025\u0076", _aeeb.Name)
				if _cfca := d.Skip(); _cfca != nil {
					return _cfca
				}
			}
		case _f.EndElement:
			break _gaea
		case _f.CharData:
		}
	}
	return nil
}

type CT_LimUpp struct {
	LimUppPr *CT_LimUppPr
	E        *CT_OMathArg
	Lim      *CT_OMathArg
}
type CT_FPr struct {
	Type   *CT_FType
	CtrlPr *CT_CtrlPr
}

// Validate validates the EG_OMathElements and its children
func (_gacd *EG_OMathElements) Validate() error {
	return _gacd.ValidateWithPath("\u0045\u0047_\u004f\u004d\u0061t\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073")
}

const (
	ST_JcUnset       ST_Jc = 0
	ST_JcLeft        ST_Jc = 1
	ST_JcRight       ST_Jc = 2
	ST_JcCenter      ST_Jc = 3
	ST_JcCenterGroup ST_Jc = 4
)

type CT_EqArrPr struct {
	BaseJc  *CT_YAlign
	MaxDist *CT_OnOff
	ObjDist *CT_OnOff
	RSpRule *CT_SpacingRule
	RSp     *CT_UnSignedInteger
	CtrlPr  *CT_CtrlPr
}
type ST_Style byte

// Validate validates the CT_Nary and its children
func (_gec *CT_Nary) Validate() error {
	return _gec.ValidateWithPath("\u0043T\u005f\u004e\u0061\u0072\u0079")
}
func (_edeg *CT_SSupPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgefb:
	for {
		_ade, _agbc := d.Token()
		if _agbc != nil {
			return _agbc
		}
		switch _eefdb := _ade.(type) {
		case _f.StartElement:
			switch _eefdb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_edeg.CtrlPr = NewCT_CtrlPr()
				if _acaff := d.DecodeElement(_edeg.CtrlPr, &_eefdb); _acaff != nil {
					return _acaff
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0053\u0075p\u0050\u0072 \u0025\u0076", _eefdb.Name)
				if _dgc := d.Skip(); _dgc != nil {
					return _dgc
				}
			}
		case _f.EndElement:
			break _fgefb
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_LimUppPr() *CT_LimUppPr { _gagd := &CT_LimUppPr{}; return _gagd }

// Validate validates the CT_YAlign and its children
func (_aacfc *CT_YAlign) Validate() error {
	return _aacfc.ValidateWithPath("\u0043T\u005f\u0059\u0041\u006c\u0069\u0067n")
}
func (_cffc *CT_TwipsMeasure) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", _cffc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_afc *CT_Integer255) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", _afc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_gaf *CT_Box) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gaf.E = NewCT_OMathArg()
_cfcd:
	for {
		_gaee, _adc := d.Token()
		if _adc != nil {
			return _adc
		}
		switch _cdc := _gaee.(type) {
		case _f.StartElement:
			switch _cdc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078P\u0072"}:
				_gaf.BoxPr = NewCT_BoxPr()
				if _caf := d.DecodeElement(_gaf.BoxPr, &_cdc); _caf != nil {
					return _caf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dce := d.DecodeElement(_gaf.E, &_cdc); _dce != nil {
					return _dce
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0078\u0020\u0025\u0076", _cdc.Name)
				if _cdb := d.Skip(); _cdb != nil {
					return _cdb
				}
			}
		case _f.EndElement:
			break _cfcd
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TopBot and its children, prefixing error messages with path
func (_bfgb *CT_TopBot) ValidateWithPath(path string) error {
	if _bfgb.ValAttr == ST_TopBotUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbbd := _bfgb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bbbd != nil {
		return _bbbd
	}
	return nil
}
func (_ddff ST_Jc) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_cccaa := _f.Attr{}
	_cccaa.Name = name
	switch _ddff {
	case ST_JcUnset:
		_cccaa.Value = ""
	case ST_JcLeft:
		_cccaa.Value = "\u006c\u0065\u0066\u0074"
	case ST_JcRight:
		_cccaa.Value = "\u0072\u0069\u0067h\u0074"
	case ST_JcCenter:
		_cccaa.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_JcCenterGroup:
		_cccaa.Value = "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	}
	return _cccaa, nil
}
func (_cfgfa *CT_FType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cfgfa.ValAttr = ST_FType(1)
	for _, _aca := range start.Attr {
		if _aca.Name.Local == "\u0076\u0061\u006c" {
			_cfgfa.ValAttr.UnmarshalXMLAttr(_aca)
			continue
		}
	}
	for {
		_acab, _cafb := d.Token()
		if _cafb != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0054\u0079\u0070\u0065: \u0025\u0073", _cafb)
		}
		if _bcef, _gfaed := _acab.(_f.EndElement); _gfaed && _bcef.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LimUppPr struct{ CtrlPr *CT_CtrlPr }

func NewCT_RadPr() *CT_RadPr { _aegc := &CT_RadPr{}; return _aegc }

type CT_String struct{ ValAttr *string }

func NewCT_BreakBin() *CT_BreakBin { _aae := &CT_BreakBin{}; return _aae }

type CT_OMath struct{ EG_OMathMathElements []*EG_OMathMathElements }

func (_ffgc *CT_OMathArg) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fceb:
	for {
		_acd, _bbaa := d.Token()
		if _bbaa != nil {
			return _bbaa
		}
		switch _cgcg := _acd.(type) {
		case _f.StartElement:
			switch _cgcg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0072\u0067P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0072\u0067P\u0072"}:
				_ffgc.ArgPr = NewCT_OMathArgPr()
				if _bged := d.DecodeElement(_ffgc.ArgPr, &_cgcg); _bged != nil {
					return _bged
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_acgb := NewEG_OMathMathElements()
				_acgb.Acc = NewCT_Acc()
				if _bbgb := d.DecodeElement(_acgb.Acc, &_cgcg); _bbgb != nil {
					return _bbgb
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _acgb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_cdd := NewEG_OMathMathElements()
				_cdd.Bar = NewCT_Bar()
				if _cbgf := d.DecodeElement(_cdd.Bar, &_cgcg); _cbgf != nil {
					return _cbgf
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _cdd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_faed := NewEG_OMathMathElements()
				_faed.Box = NewCT_Box()
				if _fdbb := d.DecodeElement(_faed.Box, &_cgcg); _fdbb != nil {
					return _fdbb
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _faed)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_gadaf := NewEG_OMathMathElements()
				_gadaf.BorderBox = NewCT_BorderBox()
				if _bgbg := d.DecodeElement(_gadaf.BorderBox, &_cgcg); _bgbg != nil {
					return _bgbg
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _gadaf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_acce := NewEG_OMathMathElements()
				_acce.D = NewCT_D()
				if _debba := d.DecodeElement(_acce.D, &_cgcg); _debba != nil {
					return _debba
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _acce)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_ebfg := NewEG_OMathMathElements()
				_ebfg.EqArr = NewCT_EqArr()
				if _fbbf := d.DecodeElement(_ebfg.EqArr, &_cgcg); _fbbf != nil {
					return _fbbf
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _ebfg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_beg := NewEG_OMathMathElements()
				_beg.F = NewCT_F()
				if _dbdb := d.DecodeElement(_beg.F, &_cgcg); _dbdb != nil {
					return _dbdb
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _beg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_beaa := NewEG_OMathMathElements()
				_beaa.Func = NewCT_Func()
				if _cdbd := d.DecodeElement(_beaa.Func, &_cgcg); _cdbd != nil {
					return _cdbd
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _beaa)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_bgfa := NewEG_OMathMathElements()
				_bgfa.GroupChr = NewCT_GroupChr()
				if _cceg := d.DecodeElement(_bgfa.GroupChr, &_cgcg); _cceg != nil {
					return _cceg
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _bgfa)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_acda := NewEG_OMathMathElements()
				_acda.LimLow = NewCT_LimLow()
				if _ceed := d.DecodeElement(_acda.LimLow, &_cgcg); _ceed != nil {
					return _ceed
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _acda)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_bdff := NewEG_OMathMathElements()
				_bdff.LimUpp = NewCT_LimUpp()
				if _bdcdg := d.DecodeElement(_bdff.LimUpp, &_cgcg); _bdcdg != nil {
					return _bdcdg
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _bdff)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_ccgf := NewEG_OMathMathElements()
				_ccgf.M = NewCT_M()
				if _egag := d.DecodeElement(_ccgf.M, &_cgcg); _egag != nil {
					return _egag
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _ccgf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_dccg := NewEG_OMathMathElements()
				_dccg.Nary = NewCT_Nary()
				if _gdad := d.DecodeElement(_dccg.Nary, &_cgcg); _gdad != nil {
					return _gdad
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _dccg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_bdfef := NewEG_OMathMathElements()
				_bdfef.Phant = NewCT_Phant()
				if _fdd := d.DecodeElement(_bdfef.Phant, &_cgcg); _fdd != nil {
					return _fdd
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _bdfef)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_dagd := NewEG_OMathMathElements()
				_dagd.Rad = NewCT_Rad()
				if _aaef := d.DecodeElement(_dagd.Rad, &_cgcg); _aaef != nil {
					return _aaef
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _dagd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_bbfdf := NewEG_OMathMathElements()
				_bbfdf.SPre = NewCT_SPre()
				if _dbca := d.DecodeElement(_bbfdf.SPre, &_cgcg); _dbca != nil {
					return _dbca
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _bbfdf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_egfc := NewEG_OMathMathElements()
				_egfc.SSub = NewCT_SSub()
				if _aeab := d.DecodeElement(_egfc.SSub, &_cgcg); _aeab != nil {
					return _aeab
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _egfc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_bbfa := NewEG_OMathMathElements()
				_bbfa.SSubSup = NewCT_SSubSup()
				if _fade := d.DecodeElement(_bbfa.SSubSup, &_cgcg); _fade != nil {
					return _fade
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _bbfa)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_aabea := NewEG_OMathMathElements()
				_aabea.SSup = NewCT_SSup()
				if _cdda := d.DecodeElement(_aabea.SSup, &_cgcg); _cdda != nil {
					return _cdda
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _aabea)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_aaeb := NewEG_OMathMathElements()
				_aaeb.R = NewCT_R()
				if _bdad := d.DecodeElement(_aaeb.R, &_cgcg); _bdad != nil {
					return _bdad
				}
				_ffgc.EG_OMathMathElements = append(_ffgc.EG_OMathMathElements, _aaeb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_ffgc.CtrlPr = NewCT_CtrlPr()
				if _ccbfe := d.DecodeElement(_ffgc.CtrlPr, &_cgcg); _ccbfe != nil {
					return _ccbfe
				}
			default:
				_bf.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0020\u0025\u0076", _cgcg.Name)
				if _bfea := d.Skip(); _bfea != nil {
					return _bfea
				}
			}
		case _f.EndElement:
			break _fceb
		case _f.CharData:
		}
	}
	return nil
}

type CT_OMathParaPr struct{ Jc *CT_OMathJc }
type CT_D struct {
	DPr *CT_DPr
	E   []*CT_OMathArg
}

func (_bfcb *CT_OMathArgPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bfcb.ArgSz != nil {
		_eeab := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0061\u0072\u0067\u0053\u007a"}}
		e.EncodeElement(_bfcb.ArgSz, _eeab)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_gbaa ST_BreakBin) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gbaa.String(), start)
}

type CT_BreakBin struct{ ValAttr ST_BreakBin }
type CT_XAlign struct{ ValAttr _g.ST_XAlign }

// ValidateWithPath validates the CT_M and its children, prefixing error messages with path
func (_fcgc *CT_M) ValidateWithPath(path string) error {
	if _fcgc.MPr != nil {
		if _bddb := _fcgc.MPr.ValidateWithPath(path + "\u002f\u004d\u0050\u0072"); _bddb != nil {
			return _bddb
		}
	}
	for _dggc, _bdab := range _fcgc.Mr {
		if _aadg := _bdab.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u004d\u0072\u005b\u0025\u0064]", path, _dggc)); _aadg != nil {
			return _aadg
		}
	}
	return nil
}
func (_bgdb *CT_DPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bgdb.BegChr != nil {
		_ccb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0065\u0067\u0043\u0068\u0072"}}
		e.EncodeElement(_bgdb.BegChr, _ccb)
	}
	if _bgdb.SepChr != nil {
		_cce := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0065\u0070\u0043\u0068\u0072"}}
		e.EncodeElement(_bgdb.SepChr, _cce)
	}
	if _bgdb.EndChr != nil {
		_adf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065\u006e\u0064\u0043\u0068\u0072"}}
		e.EncodeElement(_bgdb.EndChr, _adf)
	}
	if _bgdb.Grow != nil {
		_cfgf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0077"}}
		e.EncodeElement(_bgdb.Grow, _cfgf)
	}
	if _bgdb.Shp != nil {
		_gccb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073h\u0070"}}
		e.EncodeElement(_bgdb.Shp, _gccb)
	}
	if _bgdb.CtrlPr != nil {
		_dde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bgdb.CtrlPr, _dde)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_eebe *CT_OnOff) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _eebe.ValAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_eebe.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FPr and its children, prefixing error messages with path
func (_cbb *CT_FPr) ValidateWithPath(path string) error {
	if _cbb.Type != nil {
		if _ddfb := _cbb.Type.ValidateWithPath(path + "\u002f\u0054\u0079p\u0065"); _ddfb != nil {
			return _ddfb
		}
	}
	if _cbb.CtrlPr != nil {
		if _afg := _cbb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _afg != nil {
			return _afg
		}
	}
	return nil
}
func (_bebf *CT_OMathParaPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bafc:
	for {
		_afe, _fcdg := d.Token()
		if _fcdg != nil {
			return _fcdg
		}
		switch _cafbc := _afe.(type) {
		case _f.StartElement:
			switch _cafbc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006a\u0063"}:
				_bebf.Jc = NewCT_OMathJc()
				if _gcffg := d.DecodeElement(_bebf.Jc, &_cafbc); _gcffg != nil {
					return _gcffg
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050\u0061r\u0061P\u0072\u0020\u0025\u0076", _cafbc.Name)
				if _baag := d.Skip(); _baag != nil {
					return _baag
				}
			}
		case _f.EndElement:
			break _bafc
		case _f.CharData:
		}
	}
	return nil
}
func (_baff ST_Script) String() string {
	switch _baff {
	case 0:
		return ""
	case 1:
		return "\u0072\u006f\u006da\u006e"
	case 2:
		return "\u0073\u0063\u0072\u0069\u0070\u0074"
	case 3:
		return "\u0066r\u0061\u006b\u0074\u0075\u0072"
	case 4:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b"
	case 5:
		return "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066"
	case 6:
		return "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e"
	}
	return ""
}
func (_gdbc *CT_TwipsMeasure) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fdde := range start.Attr {
		if _fdde.Name.Local == "\u0076\u0061\u006c" {
			_abdg, _afcgc := ParseUnionST_TwipsMeasure(_fdde.Value)
			if _afcgc != nil {
				return _afcgc
			}
			_gdbc.ValAttr = _abdg
			continue
		}
	}
	for {
		_geaf, _eacce := d.Token()
		if _eacce != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0077\u0069\u0070\u0073\u004de\u0061\u0073\u0075r\u0065:\u0020\u0025\u0073", _eacce)
		}
		if _gbae, _bafe := _geaf.(_f.EndElement); _bafe && _gbae.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_FPr() *CT_FPr { _fgeg := &CT_FPr{}; return _fgeg }

// ValidateWithPath validates the CT_MPr and its children, prefixing error messages with path
func (_bcec *CT_MPr) ValidateWithPath(path string) error {
	if _bcec.BaseJc != nil {
		if _aefb := _bcec.BaseJc.ValidateWithPath(path + "\u002fB\u0061\u0073\u0065\u004a\u0063"); _aefb != nil {
			return _aefb
		}
	}
	if _bcec.PlcHide != nil {
		if _ebae := _bcec.PlcHide.ValidateWithPath(path + "\u002f\u0050\u006c\u0063\u0048\u0069\u0064\u0065"); _ebae != nil {
			return _ebae
		}
	}
	if _bcec.RSpRule != nil {
		if _aabf := _bcec.RSpRule.ValidateWithPath(path + "\u002f\u0052\u0053\u0070\u0052\u0075\u006c\u0065"); _aabf != nil {
			return _aabf
		}
	}
	if _bcec.CGpRule != nil {
		if _dbfa := _bcec.CGpRule.ValidateWithPath(path + "\u002f\u0043\u0047\u0070\u0052\u0075\u006c\u0065"); _dbfa != nil {
			return _dbfa
		}
	}
	if _bcec.RSp != nil {
		if _cbaa := _bcec.RSp.ValidateWithPath(path + "\u002f\u0052\u0053\u0070"); _cbaa != nil {
			return _cbaa
		}
	}
	if _bcec.CSp != nil {
		if _cdeag := _bcec.CSp.ValidateWithPath(path + "\u002f\u0043\u0053\u0070"); _cdeag != nil {
			return _cdeag
		}
	}
	if _bcec.CGp != nil {
		if _fagg := _bcec.CGp.ValidateWithPath(path + "\u002f\u0043\u0047\u0070"); _fagg != nil {
			return _fagg
		}
	}
	if _bcec.Mcs != nil {
		if _dcda := _bcec.Mcs.ValidateWithPath(path + "\u002f\u004d\u0063\u0073"); _dcda != nil {
			return _dcda
		}
	}
	if _bcec.CtrlPr != nil {
		if _ecga := _bcec.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _ecga != nil {
			return _ecga
		}
	}
	return nil
}

type CT_ManualBreak struct{ AlnAtAttr *int64 }

// ValidateWithPath validates the CT_OMath and its children, prefixing error messages with path
func (_cfdb *CT_OMath) ValidateWithPath(path string) error {
	for _bbadd, _cacefg := range _cfdb.EG_OMathMathElements {
		if _dgf := _cacefg.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0045\u0047\u005f\u004fM\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006ce\u006d\u0065\u006et\u0073[\u0025\u0064\u005d", path, _bbadd)); _dgf != nil {
			return _dgf
		}
	}
	return nil
}
func (_afdc *CT_F) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _afdc.FPr != nil {
		_dea := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066P\u0072"}}
		e.EncodeElement(_afdc.FPr, _dea)
	}
	_gca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006eu\u006d"}}
	e.EncodeElement(_afdc.Num, _gca)
	_dded := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064e\u006e"}}
	e.EncodeElement(_afdc.Den, _dded)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_OMathPara struct {
	OMathParaPr *CT_OMathParaPr
	OMath       []*CT_OMath
}
type CT_R struct {
	RPr    *CT_RPR
	Choice []*CT_RChoice
}

func (_ddfdd *CT_SSup) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ddfdd.E = NewCT_OMathArg()
	_ddfdd.Sup = NewCT_OMathArg()
_ebbb:
	for {
		_abafe, _aadf := d.Token()
		if _aadf != nil {
			return _aadf
		}
		switch _efgcb := _abafe.(type) {
		case _f.StartElement:
			switch _efgcb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070\u0050\u0072"}:
				_ddfdd.SSupPr = NewCT_SSupPr()
				if _caeeg := d.DecodeElement(_ddfdd.SSupPr, &_efgcb); _caeeg != nil {
					return _caeeg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dace := d.DecodeElement(_ddfdd.E, &_efgcb); _dace != nil {
					return _dace
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _dbdg := d.DecodeElement(_ddfdd.Sup, &_efgcb); _dbdg != nil {
					return _dbdg
				}
			default:
				_bf.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0053\u0075\u0070\u0020\u0025\u0076", _efgcb.Name)
				if _cbbc := d.Skip(); _cbbc != nil {
					return _cbbc
				}
			}
		case _f.EndElement:
			break _ebbb
		case _f.CharData:
		}
	}
	return nil
}
func (_cgc *CT_CtrlPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for {
		_bag, _dgd := d.Token()
		if _dgd != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0074\u0072l\u0050\u0072\u003a\u0020\u0025\u0073", _dgd)
		}
		if _cgb, _ebc := _bag.(_f.EndElement); _ebc && _cgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efda *OMath) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_efda.CT_OMath = *NewCT_OMath()
_dccc:
	for {
		_bade, _bdbfb := d.Token()
		if _bdbfb != nil {
			return _bdbfb
		}
		switch _fedg := _bade.(type) {
		case _f.StartElement:
			switch _fedg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_daac := NewEG_OMathMathElements()
				_daac.Acc = NewCT_Acc()
				if _abgce := d.DecodeElement(_daac.Acc, &_fedg); _abgce != nil {
					return _abgce
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _daac)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_feddc := NewEG_OMathMathElements()
				_feddc.Bar = NewCT_Bar()
				if _dccgb := d.DecodeElement(_feddc.Bar, &_fedg); _dccgb != nil {
					return _dccgb
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _feddc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_bdfd := NewEG_OMathMathElements()
				_bdfd.Box = NewCT_Box()
				if _bebdb := d.DecodeElement(_bdfd.Box, &_fedg); _bebdb != nil {
					return _bebdb
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _bdfd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_dcge := NewEG_OMathMathElements()
				_dcge.BorderBox = NewCT_BorderBox()
				if _dgff := d.DecodeElement(_dcge.BorderBox, &_fedg); _dgff != nil {
					return _dgff
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _dcge)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_bgeb := NewEG_OMathMathElements()
				_bgeb.D = NewCT_D()
				if _gbcde := d.DecodeElement(_bgeb.D, &_fedg); _gbcde != nil {
					return _gbcde
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _bgeb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_cdbdc := NewEG_OMathMathElements()
				_cdbdc.EqArr = NewCT_EqArr()
				if _bgab := d.DecodeElement(_cdbdc.EqArr, &_fedg); _bgab != nil {
					return _bgab
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _cdbdc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_cead := NewEG_OMathMathElements()
				_cead.F = NewCT_F()
				if _efagd := d.DecodeElement(_cead.F, &_fedg); _efagd != nil {
					return _efagd
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _cead)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_fdbdd := NewEG_OMathMathElements()
				_fdbdd.Func = NewCT_Func()
				if _adae := d.DecodeElement(_fdbdd.Func, &_fedg); _adae != nil {
					return _adae
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _fdbdd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_ccfg := NewEG_OMathMathElements()
				_ccfg.GroupChr = NewCT_GroupChr()
				if _ecbag := d.DecodeElement(_ccfg.GroupChr, &_fedg); _ecbag != nil {
					return _ecbag
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _ccfg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_aagca := NewEG_OMathMathElements()
				_aagca.LimLow = NewCT_LimLow()
				if _dbdd := d.DecodeElement(_aagca.LimLow, &_fedg); _dbdd != nil {
					return _dbdd
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _aagca)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_bedgg := NewEG_OMathMathElements()
				_bedgg.LimUpp = NewCT_LimUpp()
				if _ceeb := d.DecodeElement(_bedgg.LimUpp, &_fedg); _ceeb != nil {
					return _ceeb
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _bedgg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_acdd := NewEG_OMathMathElements()
				_acdd.M = NewCT_M()
				if _dgegd := d.DecodeElement(_acdd.M, &_fedg); _dgegd != nil {
					return _dgegd
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _acdd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_bfdc := NewEG_OMathMathElements()
				_bfdc.Nary = NewCT_Nary()
				if _aceeb := d.DecodeElement(_bfdc.Nary, &_fedg); _aceeb != nil {
					return _aceeb
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _bfdc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_aaac := NewEG_OMathMathElements()
				_aaac.Phant = NewCT_Phant()
				if _gdbbd := d.DecodeElement(_aaac.Phant, &_fedg); _gdbbd != nil {
					return _gdbbd
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _aaac)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_dgeb := NewEG_OMathMathElements()
				_dgeb.Rad = NewCT_Rad()
				if _edec := d.DecodeElement(_dgeb.Rad, &_fedg); _edec != nil {
					return _edec
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _dgeb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_agdc := NewEG_OMathMathElements()
				_agdc.SPre = NewCT_SPre()
				if _gdda := d.DecodeElement(_agdc.SPre, &_fedg); _gdda != nil {
					return _gdda
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _agdc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_dfgfg := NewEG_OMathMathElements()
				_dfgfg.SSub = NewCT_SSub()
				if _fdba := d.DecodeElement(_dfgfg.SSub, &_fedg); _fdba != nil {
					return _fdba
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _dfgfg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_afea := NewEG_OMathMathElements()
				_afea.SSubSup = NewCT_SSubSup()
				if _efcd := d.DecodeElement(_afea.SSubSup, &_fedg); _efcd != nil {
					return _efcd
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _afea)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_cdbdd := NewEG_OMathMathElements()
				_cdbdd.SSup = NewCT_SSup()
				if _cbge := d.DecodeElement(_cdbdd.SSup, &_fedg); _cbge != nil {
					return _cbge
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _cdbdd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_gefb := NewEG_OMathMathElements()
				_gefb.R = NewCT_R()
				if _adgac := d.DecodeElement(_gefb.R, &_fedg); _adgac != nil {
					return _adgac
				}
				_efda.EG_OMathMathElements = append(_efda.EG_OMathMathElements, _gefb)
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004f\u004d\u0061t\u0068 \u0025\u0076", _fedg.Name)
				if _baaa := d.Skip(); _baaa != nil {
					return _baaa
				}
			}
		case _f.EndElement:
			break _dccc
		case _f.CharData:
		}
	}
	return nil
}
func (_bcdc ST_BreakBin) String() string {
	switch _bcdc {
	case 0:
		return ""
	case 1:
		return "\u0062\u0065\u0066\u006f\u0072\u0065"
	case 2:
		return "\u0061\u0066\u0074e\u0072"
	case 3:
		return "\u0072\u0065\u0070\u0065\u0061\u0074"
	}
	return ""
}
func (_baab *CT_PhantPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _baab.Show != nil {
		_bfge := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0068\u006f\u0077"}}
		e.EncodeElement(_baab.Show, _bfge)
	}
	if _baab.ZeroWid != nil {
		_dcee := _f.StartElement{Name: _f.Name{Local: "\u006d:\u007a\u0065\u0072\u006f\u0057\u0069d"}}
		e.EncodeElement(_baab.ZeroWid, _dcee)
	}
	if _baab.ZeroAsc != nil {
		_aece := _f.StartElement{Name: _f.Name{Local: "\u006d:\u007a\u0065\u0072\u006f\u0041\u0073c"}}
		e.EncodeElement(_baab.ZeroAsc, _aece)
	}
	if _baab.ZeroDesc != nil {
		_fagd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}}
		e.EncodeElement(_baab.ZeroDesc, _fagd)
	}
	if _baab.Transp != nil {
		_eccb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0074\u0072\u0061\u006e\u0073\u0070"}}
		e.EncodeElement(_baab.Transp, _eccb)
	}
	if _baab.CtrlPr != nil {
		_ddfbb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_baab.CtrlPr, _ddfbb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_bddf *ST_BreakBin) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fadbg, _dgcc := d.Token()
	if _dgcc != nil {
		return _dgcc
	}
	if _dfcaf, _gafbf := _fadbg.(_f.EndElement); _gafbf && _dfcaf.Name == start.Name {
		*_bddf = 1
		return nil
	}
	if _afbea, _gfebg := _fadbg.(_f.CharData); !_gfebg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fadbg)
	} else {
		switch string(_afbea) {
		case "":
			*_bddf = 0
		case "\u0062\u0065\u0066\u006f\u0072\u0065":
			*_bddf = 1
		case "\u0061\u0066\u0074e\u0072":
			*_bddf = 2
		case "\u0072\u0065\u0070\u0065\u0061\u0074":
			*_bddf = 3
		}
	}
	_fadbg, _dgcc = d.Token()
	if _dgcc != nil {
		return _dgcc
	}
	if _fdgdg, _cgee := _fadbg.(_f.EndElement); _cgee && _fdgdg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fadbg)
}
func (_dbbda *CT_XAlign) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_beba, _gfdeg := _dbbda.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _gfdeg != nil {
		return _gfdeg
	}
	start.Attr = append(start.Attr, _beba)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_MR struct{ E []*CT_OMathArg }

// ValidateWithPath validates the CT_BorderBox and its children, prefixing error messages with path
func (_bdb *CT_BorderBox) ValidateWithPath(path string) error {
	if _bdb.BorderBoxPr != nil {
		if _def := _bdb.BorderBoxPr.ValidateWithPath(path + "\u002f\u0042\u006fr\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"); _def != nil {
			return _def
		}
	}
	if _acbb := _bdb.E.ValidateWithPath(path + "\u002f\u0045"); _acbb != nil {
		return _acbb
	}
	return nil
}
func (_gbb *CT_BorderBoxPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gbb.HideTop != nil {
		_be := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0068\u0069\u0064\u0065\u0054\u006fp"}}
		e.EncodeElement(_gbb.HideTop, _be)
	}
	if _gbb.HideBot != nil {
		_fb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0068\u0069\u0064\u0065\u0042\u006ft"}}
		e.EncodeElement(_gbb.HideBot, _fb)
	}
	if _gbb.HideLeft != nil {
		_cef := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}}
		e.EncodeElement(_gbb.HideLeft, _cef)
	}
	if _gbb.HideRight != nil {
		_eec := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0068\u0069\u0064\u0065\u0052\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_gbb.HideRight, _eec)
	}
	if _gbb.StrikeH != nil {
		_bba := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0074\u0072\u0069\u006b\u0065H"}}
		e.EncodeElement(_gbb.StrikeH, _bba)
	}
	if _gbb.StrikeV != nil {
		_edc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0074\u0072\u0069\u006b\u0065V"}}
		e.EncodeElement(_gbb.StrikeV, _edc)
	}
	if _gbb.StrikeBLTR != nil {
		_ggg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073t\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}}
		e.EncodeElement(_gbb.StrikeBLTR, _ggg)
	}
	if _gbb.StrikeTLBR != nil {
		_fcd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073t\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}}
		e.EncodeElement(_gbb.StrikeTLBR, _fcd)
	}
	if _gbb.CtrlPr != nil {
		_ced := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gbb.CtrlPr, _ced)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_ceffg *ST_BreakBinSub) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dcdgf, _bgecb := d.Token()
	if _bgecb != nil {
		return _bgecb
	}
	if _gfaf, _ddbd := _dcdgf.(_f.EndElement); _ddbd && _gfaf.Name == start.Name {
		*_ceffg = 1
		return nil
	}
	if _eeaeb, _efacf := _dcdgf.(_f.CharData); !_efacf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcdgf)
	} else {
		switch string(_eeaeb) {
		case "":
			*_ceffg = 0
		case "\u002d\u002d":
			*_ceffg = 1
		case "\u002d\u002b":
			*_ceffg = 2
		case "\u002b\u002d":
			*_ceffg = 3
		}
	}
	_dcdgf, _bgecb = d.Token()
	if _bgecb != nil {
		return _bgecb
	}
	if _eccgf, _gcda := _dcdgf.(_f.EndElement); _gcda && _eccgf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcdgf)
}

// Validate validates the CT_MathPrChoice and its children
func (_bagde *CT_MathPrChoice) Validate() error {
	return _bagde.ValidateWithPath("\u0043T\u005fM\u0061\u0074\u0068\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_LimUpp and its children, prefixing error messages with path
func (_afcc *CT_LimUpp) ValidateWithPath(path string) error {
	if _afcc.LimUppPr != nil {
		if _gaac := _afcc.LimUppPr.ValidateWithPath(path + "\u002fL\u0069\u006d\u0055\u0070\u0070\u0050r"); _gaac != nil {
			return _gaac
		}
	}
	if _acae := _afcc.E.ValidateWithPath(path + "\u002f\u0045"); _acae != nil {
		return _acae
	}
	if _ggfgf := _afcc.Lim.ValidateWithPath(path + "\u002f\u004c\u0069\u006d"); _ggfgf != nil {
		return _ggfgf
	}
	return nil
}

type CT_EqArr struct {
	EqArrPr *CT_EqArrPr
	E       []*CT_OMathArg
}

func (_dacg *CT_LimUppPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bdbf:
	for {
		_eedd, _egbc := d.Token()
		if _egbc != nil {
			return _egbc
		}
		switch _dccf := _eedd.(type) {
		case _f.StartElement:
			switch _dccf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_dacg.CtrlPr = NewCT_CtrlPr()
				if _cdgc := d.DecodeElement(_dacg.CtrlPr, &_dccf); _cdgc != nil {
					return _cdgc
				}
			default:
				_bf.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072\u0020\u0025\u0076", _dccf.Name)
				if _bbdc := d.Skip(); _bbdc != nil {
					return _bbdc
				}
			}
		case _f.EndElement:
			break _bdbf
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_SSubPr() *CT_SSubPr { _bbbca := &CT_SSubPr{}; return _bbbca }
func (_gcaef *ST_Style) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_gcaef = 0
	case "\u0070":
		*_gcaef = 1
	case "\u0062":
		*_gcaef = 2
	case "\u0069":
		*_gcaef = 3
	case "\u0062\u0069":
		*_gcaef = 4
	}
	return nil
}
func (_eggbe *CT_Script) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cfgg := range start.Attr {
		if _cfgg.Name.Local == "\u0076\u0061\u006c" {
			_eggbe.ValAttr.UnmarshalXMLAttr(_cfgg)
			continue
		}
	}
	for {
		_beea, _aff := d.Token()
		if _aff != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0063\u0072i\u0070\u0074\u003a\u0020\u0025\u0073", _aff)
		}
		if _ccbe, _afcg := _beea.(_f.EndElement); _afcg && _ccbe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SSubSup and its children
func (_bbce *CT_SSubSup) Validate() error {
	return _bbce.ValidateWithPath("\u0043\u0054\u005f\u0053\u0053\u0075\u0062\u0053\u0075\u0070")
}

// Validate validates the CT_GroupChrPr and its children
func (_cdaf *CT_GroupChrPr) Validate() error {
	return _cdaf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072")
}

// Validate validates the CT_BarPr and its children
func (_dcb *CT_BarPr) Validate() error {
	return _dcb.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072")
}

type EG_OMathMathElements struct {
	Acc       *CT_Acc
	Bar       *CT_Bar
	Box       *CT_Box
	BorderBox *CT_BorderBox
	D         *CT_D
	EqArr     *CT_EqArr
	F         *CT_F
	Func      *CT_Func
	GroupChr  *CT_GroupChr
	LimLow    *CT_LimLow
	LimUpp    *CT_LimUpp
	M         *CT_M
	Nary      *CT_Nary
	Phant     *CT_Phant
	Rad       *CT_Rad
	SPre      *CT_SPre
	SSub      *CT_SSub
	SSubSup   *CT_SSubSup
	SSup      *CT_SSup
	R         *CT_R
}

func (_bdaf ST_TopBot) Validate() error { return _bdaf.ValidateWithPath("") }
func (_bca *CT_LimUpp) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bca.LimUppPr != nil {
		_ede := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}}
		e.EncodeElement(_bca.LimUppPr, _ede)
	}
	_agba := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_bca.E, _agba)
	_dbag := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006ci\u006d"}}
	e.EncodeElement(_bca.Lim, _dbag)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_Integer255() *CT_Integer255 { _daf := &CT_Integer255{}; _daf.ValAttr = 1; return _daf }
func (_gfad *CT_NaryPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gfad.Chr != nil {
		_cfce := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_gfad.Chr, _cfce)
	}
	if _gfad.LimLoc != nil {
		_dadde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0063"}}
		e.EncodeElement(_gfad.LimLoc, _dadde)
	}
	if _gfad.Grow != nil {
		_bbad := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0077"}}
		e.EncodeElement(_gfad.Grow, _bbad)
	}
	if _gfad.SubHide != nil {
		_cgaa := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0075\u0062\u0048\u0069\u0064e"}}
		e.EncodeElement(_gfad.SubHide, _cgaa)
	}
	if _gfad.SupHide != nil {
		_gbeg := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0075\u0070\u0048\u0069\u0064e"}}
		e.EncodeElement(_gfad.SupHide, _gbeg)
	}
	if _gfad.CtrlPr != nil {
		_edba := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gfad.CtrlPr, _edba)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MathPr and its children, prefixing error messages with path
func (_cdac *CT_MathPr) ValidateWithPath(path string) error {
	if _cdac.MathFont != nil {
		if _afdb := _cdac.MathFont.ValidateWithPath(path + "\u002fM\u0061\u0074\u0068\u0046\u006f\u006et"); _afdb != nil {
			return _afdb
		}
	}
	if _cdac.BrkBin != nil {
		if _ecf := _cdac.BrkBin.ValidateWithPath(path + "\u002fB\u0072\u006b\u0042\u0069\u006e"); _ecf != nil {
			return _ecf
		}
	}
	if _cdac.BrkBinSub != nil {
		if _gfaedg := _cdac.BrkBinSub.ValidateWithPath(path + "\u002f\u0042\u0072\u006b\u0042\u0069\u006e\u0053\u0075\u0062"); _gfaedg != nil {
			return _gfaedg
		}
	}
	if _cdac.SmallFrac != nil {
		if _bcd := _cdac.SmallFrac.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u006c\u006c\u0046\u0072\u0061\u0063"); _bcd != nil {
			return _bcd
		}
	}
	if _cdac.DispDef != nil {
		if _fbbd := _cdac.DispDef.ValidateWithPath(path + "\u002f\u0044\u0069\u0073\u0070\u0044\u0065\u0066"); _fbbd != nil {
			return _fbbd
		}
	}
	if _cdac.LMargin != nil {
		if _fae := _cdac.LMargin.ValidateWithPath(path + "\u002f\u004c\u004d\u0061\u0072\u0067\u0069\u006e"); _fae != nil {
			return _fae
		}
	}
	if _cdac.RMargin != nil {
		if _ebfb := _cdac.RMargin.ValidateWithPath(path + "\u002f\u0052\u004d\u0061\u0072\u0067\u0069\u006e"); _ebfb != nil {
			return _ebfb
		}
	}
	if _cdac.DefJc != nil {
		if _aadgc := _cdac.DefJc.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u004a\u0063"); _aadgc != nil {
			return _aadgc
		}
	}
	if _cdac.PreSp != nil {
		if _efd := _cdac.PreSp.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0053\u0070"); _efd != nil {
			return _efd
		}
	}
	if _cdac.PostSp != nil {
		if _bcdb := _cdac.PostSp.ValidateWithPath(path + "\u002fP\u006f\u0073\u0074\u0053\u0070"); _bcdb != nil {
			return _bcdb
		}
	}
	if _cdac.InterSp != nil {
		if _ddee := _cdac.InterSp.ValidateWithPath(path + "\u002f\u0049\u006e\u0074\u0065\u0072\u0053\u0070"); _ddee != nil {
			return _ddee
		}
	}
	if _cdac.IntraSp != nil {
		if _bcac := _cdac.IntraSp.ValidateWithPath(path + "\u002f\u0049\u006e\u0074\u0072\u0061\u0053\u0070"); _bcac != nil {
			return _bcac
		}
	}
	if _cdac.Choice != nil {
		if _gba := _cdac.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _gba != nil {
			return _gba
		}
	}
	if _cdac.IntLim != nil {
		if _gfb := _cdac.IntLim.ValidateWithPath(path + "\u002fI\u006e\u0074\u004c\u0069\u006d"); _gfb != nil {
			return _gfb
		}
	}
	if _cdac.NaryLim != nil {
		if _gbcc := _cdac.NaryLim.ValidateWithPath(path + "\u002f\u004e\u0061\u0072\u0079\u004c\u0069\u006d"); _gbcc != nil {
			return _gbcc
		}
	}
	return nil
}
func NewCT_Rad() *CT_Rad {
	_abde := &CT_Rad{}
	_abde.Deg = NewCT_OMathArg()
	_abde.E = NewCT_OMathArg()
	return _abde
}
func (_fdgf *CT_Rad) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fdgf.Deg = NewCT_OMathArg()
	_fdgf.E = NewCT_OMathArg()
_cbc:
	for {
		_agae, _bffd := d.Token()
		if _bffd != nil {
			return _bffd
		}
		switch _bbab := _agae.(type) {
		case _f.StartElement:
			switch _bbab.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064P\u0072"}:
				_fdgf.RadPr = NewCT_RadPr()
				if _defa := d.DecodeElement(_fdgf.RadPr, &_bbab); _defa != nil {
					return _defa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0067"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0067"}:
				if _ccgg := d.DecodeElement(_fdgf.Deg, &_bbab); _ccgg != nil {
					return _ccgg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _gfg := d.DecodeElement(_fdgf.E, &_bbab); _gfg != nil {
					return _gfg
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0061\u0064\u0020\u0025\u0076", _bbab.Name)
				if _afgd := d.Skip(); _afgd != nil {
					return _afgd
				}
			}
		case _f.EndElement:
			break _cbc
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_SPrePr() *CT_SPrePr { _agfb := &CT_SPrePr{}; return _agfb }

// Validate validates the CT_MPr and its children
func (_bfdd *CT_MPr) Validate() error {
	return _bfdd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0050\u0072")
}
func NewEG_ScriptStyle() *EG_ScriptStyle { _egef := &EG_ScriptStyle{}; return _egef }

// ValidateWithPath validates the CT_Integer255 and its children, prefixing error messages with path
func (_ffdf *CT_Integer255) ValidateWithPath(path string) error {
	if _ffdf.ValAttr < 1 {
		return _b.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ffdf.ValAttr)
	}
	if _ffdf.ValAttr > 255 {
		return _b.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0032\u0035\u0035\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ffdf.ValAttr)
	}
	return nil
}
func (_aagbb *EG_OMathElements) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _aagbb.EG_OMathMathElements != nil {
		for _, _dfae := range _aagbb.EG_OMathMathElements {
			_dfae.MarshalXML(e, _f.StartElement{})
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TwipsMeasure and its children, prefixing error messages with path
func (_dgac *CT_TwipsMeasure) ValidateWithPath(path string) error {
	if _gdfb := _dgac.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gdfb != nil {
		return _gdfb
	}
	return nil
}

type CT_YAlign struct{ ValAttr _g.ST_YAlign }

func (_eadb ST_Shp) String() string {
	switch _eadb {
	case 0:
		return ""
	case 1:
		return "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064"
	case 2:
		return "\u006d\u0061\u0074c\u0068"
	}
	return ""
}

// Validate validates the CT_OMathParaPr and its children
func (_dcba *CT_OMathParaPr) Validate() error {
	return _dcba.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061\u0050\u0072")
}

// ValidateWithPath validates the CT_F and its children, prefixing error messages with path
func (_defc *CT_F) ValidateWithPath(path string) error {
	if _defc.FPr != nil {
		if _ccf := _defc.FPr.ValidateWithPath(path + "\u002f\u0046\u0050\u0072"); _ccf != nil {
			return _ccf
		}
	}
	if _gfae := _defc.Num.ValidateWithPath(path + "\u002f\u004e\u0075\u006d"); _gfae != nil {
		return _gfae
	}
	if _fggc := _defc.Den.ValidateWithPath(path + "\u002f\u0044\u0065\u006e"); _fggc != nil {
		return _fggc
	}
	return nil
}
func (_dfa *CT_SPre) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dfa.SPrePr != nil {
		_acafb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0050\u0072\u0065\u0050\u0072"}}
		e.EncodeElement(_dfa.SPrePr, _acafb)
	}
	_bfefb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_dfa.Sub, _bfefb)
	_gfbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_dfa.Sup, _gfbg)
	_eadg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_dfa.E, _eadg)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_fcea *CT_MCS) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eda:
	for {
		_gcbc, _ffc := d.Token()
		if _ffc != nil {
			return _ffc
		}
		switch _eceg := _gcbc.(type) {
		case _f.StartElement:
			switch _eceg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063"}:
				_aefd := NewCT_MC()
				if _deg := d.DecodeElement(_aefd, &_eceg); _deg != nil {
					return _deg
				}
				_fcea.Mc = append(_fcea.Mc, _aefd)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0043\u0053\u0020\u0025\u0076", _eceg.Name)
				if _dfgc := d.Skip(); _dfgc != nil {
					return _dfgc
				}
			}
		case _f.EndElement:
			break _eda
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupChr and its children, prefixing error messages with path
func (_cfag *CT_GroupChr) ValidateWithPath(path string) error {
	if _cfag.GroupChrPr != nil {
		if _ada := _cfag.GroupChrPr.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"); _ada != nil {
			return _ada
		}
	}
	if _bfee := _cfag.E.ValidateWithPath(path + "\u002f\u0045"); _bfee != nil {
		return _bfee
	}
	return nil
}

type CT_RPRChoice struct{ Nor *CT_OnOff }

// ValidateWithPath validates the CT_LimLowPr and its children, prefixing error messages with path
func (_feda *CT_LimLowPr) ValidateWithPath(path string) error {
	if _feda.CtrlPr != nil {
		if _ebgd := _feda.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _ebgd != nil {
			return _ebgd
		}
	}
	return nil
}

const (
	ST_BreakBinUnset  ST_BreakBin = 0
	ST_BreakBinBefore ST_BreakBin = 1
	ST_BreakBinAfter  ST_BreakBin = 2
	ST_BreakBinRepeat ST_BreakBin = 3
)

func (_fc *CT_Acc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fc.E = NewCT_OMathArg()
_fcb:
	for {
		_bfg, _cb := d.Token()
		if _cb != nil {
			return _cb
		}
		switch _aa := _bfg.(type) {
		case _f.StartElement:
			switch _aa.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063P\u0072"}:
				_fc.AccPr = NewCT_AccPr()
				if _ae := d.DecodeElement(_fc.AccPr, &_aa); _ae != nil {
					return _ae
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ba := d.DecodeElement(_fc.E, &_aa); _ba != nil {
					return _ba
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0063\u0063\u0020\u0025\u0076", _aa.Name)
				if _da := d.Skip(); _da != nil {
					return _da
				}
			}
		case _f.EndElement:
			break _fcb
		case _f.CharData:
		}
	}
	return nil
}

type CT_MCPr struct {
	Count *CT_Integer255
	McJc  *CT_XAlign
}

func NewCT_String() *CT_String { _cefge := &CT_String{}; return _cefge }
func (_c *CT_Acc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _c.AccPr != nil {
		_gb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0061\u0063\u0063\u0050\u0072"}}
		e.EncodeElement(_c.AccPr, _gb)
	}
	_dd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_c.E, _dd)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_eeg *CT_Char) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fca := range start.Attr {
		if _fca.Name.Local == "\u0076\u0061\u006c" {
			_ddf, _dbc := _fca.Value, error(nil)
			if _dbc != nil {
				return _dbc
			}
			_eeg.ValAttr = _ddf
			continue
		}
	}
	for {
		_fdf, _edd := d.Token()
		if _edd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0073", _edd)
		}
		if _ggd, _fcac := _fdf.(_f.EndElement); _fcac && _ggd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_BreakBinSub and its children
func (_aabc *CT_BreakBinSub) Validate() error {
	return _aabc.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042i\u006e\u0053\u0075\u0062")
}
func (_gafcc ST_TopBot) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gafcc.String(), start)
}

type CT_SSubSupPr struct {
	AlnScr *CT_OnOff
	CtrlPr *CT_CtrlPr
}
type ST_BreakBinSub byte

// ValidateWithPath validates the CT_Shp and its children, prefixing error messages with path
func (_geda *CT_Shp) ValidateWithPath(path string) error {
	if _geda.ValAttr == ST_ShpUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _geec := _geda.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _geec != nil {
		return _geec
	}
	return nil
}

type CT_Rad struct {
	RadPr *CT_RadPr
	Deg   *CT_OMathArg
	E     *CT_OMathArg
}

func (_fagb *CT_RadPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gccbe:
	for {
		_dadb, _gfdg := d.Token()
		if _gfdg != nil {
			return _gfdg
		}
		switch _dceab := _dadb.(type) {
		case _f.StartElement:
			switch _dceab.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064e\u0067\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064e\u0067\u0048\u0069\u0064\u0065"}:
				_fagb.DegHide = NewCT_OnOff()
				if _bgafb := d.DecodeElement(_fagb.DegHide, &_dceab); _bgafb != nil {
					return _bgafb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fagb.CtrlPr = NewCT_CtrlPr()
				if _fdbe := d.DecodeElement(_fagb.CtrlPr, &_dceab); _fdbe != nil {
					return _fdbe
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072\u0020\u0025\u0076", _dceab.Name)
				if _bdaa := d.Skip(); _bdaa != nil {
					return _bdaa
				}
			}
		case _f.EndElement:
			break _gccbe
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_MPr() *CT_MPr { _dagf := &CT_MPr{}; return _dagf }

// Validate validates the CT_MR and its children
func (_ebcf *CT_MR) Validate() error { return _ebcf.ValidateWithPath("\u0043\u0054\u005fM\u0052") }
func (_dbad *CT_FPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dbad.Type != nil {
		_dgbcg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0074\u0079\u0070\u0065"}}
		e.EncodeElement(_dbad.Type, _dgbcg)
	}
	if _dbad.CtrlPr != nil {
		_agfd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_dbad.CtrlPr, _agfd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LimLoc and its children, prefixing error messages with path
func (_gce *CT_LimLoc) ValidateWithPath(path string) error {
	if _gce.ValAttr == ST_LimLocUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ebg := _gce.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ebg != nil {
		return _ebg
	}
	return nil
}
func (_dgge *CT_MCPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cdcb:
	for {
		_ddcg, _ggge := d.Token()
		if _ggge != nil {
			return _ggge
		}
		switch _cfee := _ddcg.(type) {
		case _f.StartElement:
			switch _cfee.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u006f\u0075n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u006f\u0075n\u0074"}:
				_dgge.Count = NewCT_Integer255()
				if _faf := d.DecodeElement(_dgge.Count, &_cfee); _faf != nil {
					return _faf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u004a\u0063"}:
				_dgge.McJc = NewCT_XAlign()
				if _dgdc := d.DecodeElement(_dgge.McJc, &_cfee); _dgdc != nil {
					return _dgdc
				}
			default:
				_bf.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004d\u0043\u0050\u0072\u0020\u0025\u0076", _cfee.Name)
				if _feeg := d.Skip(); _feeg != nil {
					return _feeg
				}
			}
		case _f.EndElement:
			break _cdcb
		case _f.CharData:
		}
	}
	return nil
}
func (_ebd *CT_BoxPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ebd.OpEmu != nil {
		_dfb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006f\u0070\u0045\u006d\u0075"}}
		e.EncodeElement(_ebd.OpEmu, _dfb)
	}
	if _ebd.NoBreak != nil {
		_ead := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006e\u006f\u0042\u0072\u0065\u0061k"}}
		e.EncodeElement(_ebd.NoBreak, _ead)
	}
	if _ebd.Diff != nil {
		_fdg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064\u0069\u0066\u0066"}}
		e.EncodeElement(_ebd.Diff, _fdg)
	}
	if _ebd.Brk != nil {
		_beb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062r\u006b"}}
		e.EncodeElement(_ebd.Brk, _beb)
	}
	if _ebd.Aln != nil {
		_gfd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061l\u006e"}}
		e.EncodeElement(_ebd.Aln, _gfd)
	}
	if _ebd.CtrlPr != nil {
		_edf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ebd.CtrlPr, _edf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Acc and its children, prefixing error messages with path
func (_fa *CT_Acc) ValidateWithPath(path string) error {
	if _fa.AccPr != nil {
		if _ac := _fa.AccPr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0050\u0072"); _ac != nil {
			return _ac
		}
	}
	if _gg := _fa.E.ValidateWithPath(path + "\u002f\u0045"); _gg != nil {
		return _gg
	}
	return nil
}

// Validate validates the CT_Bar and its children
func (_fad *CT_Bar) Validate() error {
	return _fad.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0072")
}

type CT_SPrePr struct{ CtrlPr *CT_CtrlPr }

// ValidateWithPath validates the CT_GroupChrPr and its children, prefixing error messages with path
func (_eab *CT_GroupChrPr) ValidateWithPath(path string) error {
	if _eab.Chr != nil {
		if _adfg := _eab.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _adfg != nil {
			return _adfg
		}
	}
	if _eab.Pos != nil {
		if _efeaf := _eab.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _efeaf != nil {
			return _efeaf
		}
	}
	if _eab.VertJc != nil {
		if _dga := _eab.VertJc.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u004a\u0063"); _dga != nil {
			return _dga
		}
	}
	if _eab.CtrlPr != nil {
		if _bbgd := _eab.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bbgd != nil {
			return _bbgd
		}
	}
	return nil
}
func (_eeggae *CT_Style) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _abgf := range start.Attr {
		if _abgf.Name.Local == "\u0076\u0061\u006c" {
			_eeggae.ValAttr.UnmarshalXMLAttr(_abgf)
			continue
		}
	}
	for {
		_caea, _dabaf := d.Token()
		if _dabaf != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0074\u0079\u006c\u0065: \u0025\u0073", _dabaf)
		}
		if _beef, _gegc := _caea.(_f.EndElement); _gegc && _beef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dafb *CT_TopBot) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dafb.ValAttr = ST_TopBot(1)
	for _, _afga := range start.Attr {
		if _afga.Name.Local == "\u0076\u0061\u006c" {
			_dafb.ValAttr.UnmarshalXMLAttr(_afga)
			continue
		}
	}
	for {
		_dbecd, _bebd := d.Token()
		if _bebd != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0054\u006f\u0070B\u006f\u0074\u003a\u0020\u0025\u0073", _bebd)
		}
		if _gabd, _accec := _dbecd.(_f.EndElement); _accec && _gabd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gc *CT_BoxPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dad:
	for {
		_aef, _bgd := d.Token()
		if _bgd != nil {
			return _bgd
		}
		switch _ddc := _aef.(type) {
		case _f.StartElement:
			switch _ddc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u0070\u0045m\u0075"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u0070\u0045m\u0075"}:
				_gc.OpEmu = NewCT_OnOff()
				if _aag := d.DecodeElement(_gc.OpEmu, &_ddc); _aag != nil {
					return _aag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006eo\u0042\u0072\u0065\u0061\u006b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006eo\u0042\u0072\u0065\u0061\u006b"}:
				_gc.NoBreak = NewCT_OnOff()
				if _dbb := d.DecodeElement(_gc.NoBreak, &_ddc); _dbb != nil {
					return _dbb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0069\u0066\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0069\u0066\u0066"}:
				_gc.Diff = NewCT_OnOff()
				if _defd := d.DecodeElement(_gc.Diff, &_ddc); _defd != nil {
					return _defd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b"}:
				_gc.Brk = NewCT_ManualBreak()
				if _cee := d.DecodeElement(_gc.Brk, &_ddc); _cee != nil {
					return _cee
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e"}:
				_gc.Aln = NewCT_OnOff()
				if _gddd := d.DecodeElement(_gc.Aln, &_ddc); _gddd != nil {
					return _gddd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gc.CtrlPr = NewCT_CtrlPr()
				if _ceda := d.DecodeElement(_gc.CtrlPr, &_ddc); _ceda != nil {
					return _ceda
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072\u0020\u0025\u0076", _ddc.Name)
				if _gag := d.Skip(); _gag != nil {
					return _gag
				}
			}
		case _f.EndElement:
			break _dad
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_BorderBoxPr() *CT_BorderBoxPr { _eac := &CT_BorderBoxPr{}; return _eac }
func NewCT_MR() *CT_MR                   { _ddb := &CT_MR{}; return _ddb }
func NewCT_BarPr() *CT_BarPr             { _dc := &CT_BarPr{}; return _dc }
func (_cfbe ST_Style) Validate() error   { return _cfbe.ValidateWithPath("") }

// Validate validates the CT_MCS and its children
func (_dabc *CT_MCS) Validate() error {
	return _dabc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0043\u0053")
}
func (_dfe *CT_LimLow) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dfe.LimLowPr != nil {
		_gaeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_dfe.LimLowPr, _gaeg)
	}
	_eddd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_dfe.E, _eddd)
	_cbee := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006ci\u006d"}}
	e.EncodeElement(_dfe.Lim, _cbee)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BoxPr and its children
func (_fccb *CT_BoxPr) Validate() error {
	return _fccb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072")
}
func (_fabc *OMathPara) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u003a\u006f\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061"
	return _fabc.CT_OMathPara.MarshalXML(e, start)
}

type CT_OnOff struct{ ValAttr *_g.ST_OnOff }

func NewCT_OnOff() *CT_OnOff { _dcbe := &CT_OnOff{}; return _dcbe }
func (_deag *CT_FuncPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _deag.CtrlPr != nil {
		_gea := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_deag.CtrlPr, _gea)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MathPrChoice and its children, prefixing error messages with path
func (_egd *CT_MathPrChoice) ValidateWithPath(path string) error {
	if _egd.WrapIndent != nil {
		if _dgbfg := _egd.WrapIndent.ValidateWithPath(path + "/\u0057\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"); _dgbfg != nil {
			return _dgbfg
		}
	}
	if _egd.WrapRight != nil {
		if _cfcc := _egd.WrapRight.ValidateWithPath(path + "\u002f\u0057\u0072\u0061\u0070\u0052\u0069\u0067\u0068\u0074"); _cfcc != nil {
			return _cfcc
		}
	}
	return nil
}
func (_acb *CT_BarPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _acb.Pos != nil {
		_aac := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0070o\u0073"}}
		e.EncodeElement(_acb.Pos, _aac)
	}
	if _acb.CtrlPr != nil {
		_gf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_acb.CtrlPr, _gf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_bdbdc *CT_RPR) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bdbdc.Lit != nil {
		_ebbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006ci\u0074"}}
		e.EncodeElement(_bdbdc.Lit, _ebbg)
	}
	if _bdbdc.Choice != nil {
		_bdbdc.Choice.MarshalXML(e, _f.StartElement{})
	}
	if _bdbdc.Brk != nil {
		_dcdbf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062r\u006b"}}
		e.EncodeElement(_bdbdc.Brk, _dcdbf)
	}
	if _bdbdc.Aln != nil {
		_afad := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061l\u006e"}}
		e.EncodeElement(_bdbdc.Aln, _afad)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MCPr and its children
func (_caad *CT_MCPr) Validate() error {
	return _caad.ValidateWithPath("\u0043T\u005f\u004d\u0043\u0050\u0072")
}
func NewCT_BoxPr() *CT_BoxPr { _ggfg := &CT_BoxPr{}; return _ggfg }
func NewCT_Phant() *CT_Phant { _fcdf := &CT_Phant{}; _fcdf.E = NewCT_OMathArg(); return _fcdf }
func (_ffae ST_LimLoc) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_badb := _f.Attr{}
	_badb.Name = name
	switch _ffae {
	case ST_LimLocUnset:
		_badb.Value = ""
	case ST_LimLocUndOvr:
		_badb.Value = "\u0075\u006e\u0064\u004f\u0076\u0072"
	case ST_LimLocSubSup:
		_badb.Value = "\u0073\u0075\u0062\u0053\u0075\u0070"
	}
	return _badb, nil
}

// ValidateWithPath validates the CT_SSup and its children, prefixing error messages with path
func (_dagg *CT_SSup) ValidateWithPath(path string) error {
	if _dagg.SSupPr != nil {
		if _efbea := _dagg.SSupPr.ValidateWithPath(path + "\u002fS\u0053\u0075\u0070\u0050\u0072"); _efbea != nil {
			return _efbea
		}
	}
	if _eccdc := _dagg.E.ValidateWithPath(path + "\u002f\u0045"); _eccdc != nil {
		return _eccdc
	}
	if _eefg := _dagg.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _eefg != nil {
		return _eefg
	}
	return nil
}

// ValidateWithPath validates the CT_Nary and its children, prefixing error messages with path
func (_gcge *CT_Nary) ValidateWithPath(path string) error {
	if _gcge.NaryPr != nil {
		if _cace := _gcge.NaryPr.ValidateWithPath(path + "\u002fN\u0061\u0072\u0079\u0050\u0072"); _cace != nil {
			return _cace
		}
	}
	if _eafc := _gcge.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _eafc != nil {
		return _eafc
	}
	if _adbg := _gcge.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _adbg != nil {
		return _adbg
	}
	if _cfaa := _gcge.E.ValidateWithPath(path + "\u002f\u0045"); _cfaa != nil {
		return _cfaa
	}
	return nil
}
func (_fgcf *CT_OMath) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fgcf.EG_OMathMathElements != nil {
		for _, _bgfg := range _fgcf.EG_OMathMathElements {
			_bgfg.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_dffcd *CT_Rad) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dffcd.RadPr != nil {
		_eafg := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u0061\u0064\u0050\u0072"}}
		e.EncodeElement(_dffcd.RadPr, _eafg)
	}
	_dfbee := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064e\u0067"}}
	e.EncodeElement(_dffcd.Deg, _dfbee)
	_gaca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_dffcd.E, _gaca)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

const (
	ST_BreakBinSubUnset ST_BreakBinSub = 0
	ST_BreakBinSub__    ST_BreakBinSub = 1
	ST_BreakBinSub___   ST_BreakBinSub = 2
	ST_BreakBinSub____  ST_BreakBinSub = 3
)

func (_egee ST_Style) ValidateWithPath(path string) error {
	switch _egee {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egee))
	}
	return nil
}
func NewCT_SPre() *CT_SPre {
	_cabgd := &CT_SPre{}
	_cabgd.Sub = NewCT_OMathArg()
	_cabgd.Sup = NewCT_OMathArg()
	_cabgd.E = NewCT_OMathArg()
	return _cabgd
}
func (_cdeaa ST_TopBot) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_cabf := _f.Attr{}
	_cabf.Name = name
	switch _cdeaa {
	case ST_TopBotUnset:
		_cabf.Value = ""
	case ST_TopBotTop:
		_cabf.Value = "\u0074\u006f\u0070"
	case ST_TopBotBot:
		_cabf.Value = "\u0062\u006f\u0074"
	}
	return _cabf, nil
}
func (_bfc *CT_EqArrPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dgbc:
	for {
		_bgg, _gcd := d.Token()
		if _gcd != nil {
			return _gcd
		}
		switch _caeb := _bgg.(type) {
		case _f.StartElement:
			switch _caeb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}:
				_bfc.BaseJc = NewCT_YAlign()
				if _fed := d.DecodeElement(_bfc.BaseJc, &_caeb); _fed != nil {
					return _fed
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006da\u0078\u0044\u0069\u0073\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006da\u0078\u0044\u0069\u0073\u0074"}:
				_bfc.MaxDist = NewCT_OnOff()
				if _bbda := d.DecodeElement(_bfc.MaxDist, &_caeb); _bbda != nil {
					return _bbda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006fb\u006a\u0044\u0069\u0073\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006fb\u006a\u0044\u0069\u0073\u0074"}:
				_bfc.ObjDist = NewCT_OnOff()
				if _gdca := d.DecodeElement(_bfc.ObjDist, &_caeb); _gdca != nil {
					return _gdca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}:
				_bfc.RSpRule = NewCT_SpacingRule()
				if _cece := d.DecodeElement(_bfc.RSpRule, &_caeb); _cece != nil {
					return _cece
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0053\u0070"}:
				_bfc.RSp = NewCT_UnSignedInteger()
				if _bfcg := d.DecodeElement(_bfc.RSp, &_caeb); _bfcg != nil {
					return _bfcg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bfc.CtrlPr = NewCT_CtrlPr()
				if _fffg := d.DecodeElement(_bfc.CtrlPr, &_caeb); _fffg != nil {
					return _fffg
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fE\u0071\u0041\u0072\u0072\u0050\u0072\u0020\u0025\u0076", _caeb.Name)
				if _dba := d.Skip(); _dba != nil {
					return _dba
				}
			}
		case _f.EndElement:
			break _dgbc
		case _f.CharData:
		}
	}
	return nil
}

type CT_FuncPr struct{ CtrlPr *CT_CtrlPr }

// ValidateWithPath validates the CT_Integer2 and its children, prefixing error messages with path
func (_ccda *CT_Integer2) ValidateWithPath(path string) error {
	if _ccda.ValAttr < -2 {
		return _b.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003e\u003d\u0020\u002d2 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ccda.ValAttr)
	}
	if _ccda.ValAttr > 2 {
		return _b.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0032\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ccda.ValAttr)
	}
	return nil
}
func NewCT_R() *CT_R { _afbd := &CT_R{}; return _afbd }
func (_aadd *CT_OMath) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fga:
	for {
		_eeefb, _eeeb := d.Token()
		if _eeeb != nil {
			return _eeeb
		}
		switch _ccfd := _eeefb.(type) {
		case _f.StartElement:
			switch _ccfd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_cbdb := NewEG_OMathMathElements()
				_cbdb.Acc = NewCT_Acc()
				if _ddfd := d.DecodeElement(_cbdb.Acc, &_ccfd); _ddfd != nil {
					return _ddfd
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _cbdb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_acad := NewEG_OMathMathElements()
				_acad.Bar = NewCT_Bar()
				if _fgba := d.DecodeElement(_acad.Bar, &_ccfd); _fgba != nil {
					return _fgba
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _acad)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_bacb := NewEG_OMathMathElements()
				_bacb.Box = NewCT_Box()
				if _eccfa := d.DecodeElement(_bacb.Box, &_ccfd); _eccfa != nil {
					return _eccfa
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _bacb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_dacf := NewEG_OMathMathElements()
				_dacf.BorderBox = NewCT_BorderBox()
				if _becb := d.DecodeElement(_dacf.BorderBox, &_ccfd); _becb != nil {
					return _becb
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _dacf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_fadaf := NewEG_OMathMathElements()
				_fadaf.D = NewCT_D()
				if _gbad := d.DecodeElement(_fadaf.D, &_ccfd); _gbad != nil {
					return _gbad
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _fadaf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_ffbf := NewEG_OMathMathElements()
				_ffbf.EqArr = NewCT_EqArr()
				if _cgbd := d.DecodeElement(_ffbf.EqArr, &_ccfd); _cgbd != nil {
					return _cgbd
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _ffbf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_cccf := NewEG_OMathMathElements()
				_cccf.F = NewCT_F()
				if _gegg := d.DecodeElement(_cccf.F, &_ccfd); _gegg != nil {
					return _gegg
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _cccf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_feaad := NewEG_OMathMathElements()
				_feaad.Func = NewCT_Func()
				if _cfbfd := d.DecodeElement(_feaad.Func, &_ccfd); _cfbfd != nil {
					return _cfbfd
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _feaad)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_eggb := NewEG_OMathMathElements()
				_eggb.GroupChr = NewCT_GroupChr()
				if _edff := d.DecodeElement(_eggb.GroupChr, &_ccfd); _edff != nil {
					return _edff
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _eggb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_agac := NewEG_OMathMathElements()
				_agac.LimLow = NewCT_LimLow()
				if _cacef := d.DecodeElement(_agac.LimLow, &_ccfd); _cacef != nil {
					return _cacef
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _agac)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_adgc := NewEG_OMathMathElements()
				_adgc.LimUpp = NewCT_LimUpp()
				if _gffc := d.DecodeElement(_adgc.LimUpp, &_ccfd); _gffc != nil {
					return _gffc
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _adgc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_ebff := NewEG_OMathMathElements()
				_ebff.M = NewCT_M()
				if _bbfg := d.DecodeElement(_ebff.M, &_ccfd); _bbfg != nil {
					return _bbfg
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _ebff)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_cdcg := NewEG_OMathMathElements()
				_cdcg.Nary = NewCT_Nary()
				if _dcdg := d.DecodeElement(_cdcg.Nary, &_ccfd); _dcdg != nil {
					return _dcdg
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _cdcg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_eegg := NewEG_OMathMathElements()
				_eegg.Phant = NewCT_Phant()
				if _bcad := d.DecodeElement(_eegg.Phant, &_ccfd); _bcad != nil {
					return _bcad
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _eegg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_egde := NewEG_OMathMathElements()
				_egde.Rad = NewCT_Rad()
				if _dcae := d.DecodeElement(_egde.Rad, &_ccfd); _dcae != nil {
					return _dcae
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _egde)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_dege := NewEG_OMathMathElements()
				_dege.SPre = NewCT_SPre()
				if _fdbg := d.DecodeElement(_dege.SPre, &_ccfd); _fdbg != nil {
					return _fdbg
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _dege)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_efge := NewEG_OMathMathElements()
				_efge.SSub = NewCT_SSub()
				if _daaec := d.DecodeElement(_efge.SSub, &_ccfd); _daaec != nil {
					return _daaec
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _efge)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_ebe := NewEG_OMathMathElements()
				_ebe.SSubSup = NewCT_SSubSup()
				if _aed := d.DecodeElement(_ebe.SSubSup, &_ccfd); _aed != nil {
					return _aed
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _ebe)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_agee := NewEG_OMathMathElements()
				_agee.SSup = NewCT_SSup()
				if _fefd := d.DecodeElement(_agee.SSup, &_ccfd); _fefd != nil {
					return _fefd
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _agee)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_eaca := NewEG_OMathMathElements()
				_eaca.R = NewCT_R()
				if _aedc := d.DecodeElement(_eaca.R, &_ccfd); _aedc != nil {
					return _aedc
				}
				_aadd.EG_OMathMathElements = append(_aadd.EG_OMathMathElements, _eaca)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0020\u0025\u0076", _ccfd.Name)
				if _dgdf := d.Skip(); _dgdf != nil {
					return _dgdf
				}
			}
		case _f.EndElement:
			break _fga
		case _f.CharData:
		}
	}
	return nil
}
func (_cbfd *CT_SPrePr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_febf:
	for {
		_dggd, _cgfa := d.Token()
		if _cgfa != nil {
			return _cgfa
		}
		switch _agd := _dggd.(type) {
		case _f.StartElement:
			switch _agd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cbfd.CtrlPr = NewCT_CtrlPr()
				if _bdabf := d.DecodeElement(_cbfd.CtrlPr, &_agd); _bdabf != nil {
					return _bdabf
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0050\u0072e\u0050\u0072 \u0025\u0076", _agd.Name)
				if _abea := d.Skip(); _abea != nil {
					return _abea
				}
			}
		case _f.EndElement:
			break _febf
		case _f.CharData:
		}
	}
	return nil
}
func (_fbgb *CT_RChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fbgb.T != nil {
		_ceaf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0074"}}
		for _, _geb := range _fbgb.T {
			e.EncodeElement(_geb, _ceaf)
		}
	}
	return nil
}
func (_dfgg *CT_Nary) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dfgg.Sub = NewCT_OMathArg()
	_dfgg.Sup = NewCT_OMathArg()
	_dfgg.E = NewCT_OMathArg()
_fgfc:
	for {
		_afab, _badg := d.Token()
		if _badg != nil {
			return _badg
		}
		switch _cfdec := _afab.(type) {
		case _f.StartElement:
			switch _cfdec.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079\u0050\u0072"}:
				_dfgg.NaryPr = NewCT_NaryPr()
				if _eagb := d.DecodeElement(_dfgg.NaryPr, &_cfdec); _eagb != nil {
					return _eagb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _cgf := d.DecodeElement(_dfgg.Sub, &_cfdec); _cgf != nil {
					return _cgf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _feddg := d.DecodeElement(_dfgg.Sup, &_cfdec); _feddg != nil {
					return _feddg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _gadda := d.DecodeElement(_dfgg.E, &_cfdec); _gadda != nil {
					return _gadda
				}
			default:
				_bf.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u0061\u0072\u0079\u0020\u0025\u0076", _cfdec.Name)
				if _edcd := d.Skip(); _edcd != nil {
					return _edcd
				}
			}
		case _f.EndElement:
			break _fgfc
		case _f.CharData:
		}
	}
	return nil
}
func (_cdfe *OMathPara) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cdfe.CT_OMathPara = *NewCT_OMathPara()
_feaef:
	for {
		_beff, _daad := d.Token()
		if _daad != nil {
			return _daad
		}
		switch _cgfad := _beff.(type) {
		case _f.StartElement:
			switch _cgfad.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}:
				_cdfe.OMathParaPr = NewCT_OMathParaPr()
				if _fdeae := d.DecodeElement(_cdfe.OMathParaPr, &_cgfad); _fdeae != nil {
					return _fdeae
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}:
				_daga := NewCT_OMath()
				if _gfaca := d.DecodeElement(_daga, &_cgfad); _gfaca != nil {
					return _gfaca
				}
				_cdfe.OMath = append(_cdfe.OMath, _daga)
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061 \u0025\u0076", _cgfad.Name)
				if _dffg := d.Skip(); _dffg != nil {
					return _dffg
				}
			}
		case _f.EndElement:
			break _feaef
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OMathArg and its children, prefixing error messages with path
func (_egga *CT_OMathArg) ValidateWithPath(path string) error {
	if _egga.ArgPr != nil {
		if _dbde := _egga.ArgPr.ValidateWithPath(path + "\u002f\u0041\u0072\u0067\u0050\u0072"); _dbde != nil {
			return _dbde
		}
	}
	for _agcc, _gfag := range _egga.EG_OMathMathElements {
		if _fdca := _gfag.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0045\u0047\u005f\u004fM\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006ce\u006d\u0065\u006et\u0073[\u0025\u0064\u005d", path, _agcc)); _fdca != nil {
			return _fdca
		}
	}
	if _egga.CtrlPr != nil {
		if _dfgd := _egga.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dfgd != nil {
			return _dfgd
		}
	}
	return nil
}
func NewEG_OMathElements() *EG_OMathElements { _gebb := &EG_OMathElements{}; return _gebb }
func (_eacdd ST_BreakBin) Validate() error   { return _eacdd.ValidateWithPath("") }

// ValidateWithPath validates the CT_XAlign and its children, prefixing error messages with path
func (_fbf *CT_XAlign) ValidateWithPath(path string) error {
	if _fbf.ValAttr == _g.ST_XAlignUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aefg := _fbf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aefg != nil {
		return _aefg
	}
	return nil
}

type MathPr struct{ CT_MathPr }

// ValidateWithPath validates the CT_OMathJc and its children, prefixing error messages with path
func (_abg *CT_OMathJc) ValidateWithPath(path string) error {
	if _gbcd := _abg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gbcd != nil {
		return _gbcd
	}
	return nil
}
func NewCT_RPR() *CT_RPR { _abgc := &CT_RPR{}; return _abgc }

// Validate validates the CT_Char and its children
func (_bddd *CT_Char) Validate() error {
	return _bddd.ValidateWithPath("\u0043T\u005f\u0043\u0068\u0061\u0072")
}

// ValidateWithPath validates the CT_OMathParaPr and its children, prefixing error messages with path
func (_adab *CT_OMathParaPr) ValidateWithPath(path string) error {
	if _adab.Jc != nil {
		if _fccg := _adab.Jc.ValidateWithPath(path + "\u002f\u004a\u0063"); _fccg != nil {
			return _fccg
		}
	}
	return nil
}
func (_aaee *CT_MCS) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_gfde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0063"}}
	for _, _cgce := range _aaee.Mc {
		e.EncodeElement(_cgce, _gfde)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_ed *CT_Bar) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ed.E = NewCT_OMathArg()
_aab:
	for {
		_cba, _bff := d.Token()
		if _bff != nil {
			return _bff
		}
		switch _fcc := _cba.(type) {
		case _f.StartElement:
			switch _fcc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072P\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072P\u0072"}:
				_ed.BarPr = NewCT_BarPr()
				if _cfa := d.DecodeElement(_ed.BarPr, &_fcc); _cfa != nil {
					return _cfa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _de := d.DecodeElement(_ed.E, &_fcc); _de != nil {
					return _de
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0072\u0020\u0025\u0076", _fcc.Name)
				if _bbf := d.Skip(); _bbf != nil {
					return _bbf
				}
			}
		case _f.EndElement:
			break _aab
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_Acc() *CT_Acc       { _a := &CT_Acc{}; _a.E = NewCT_OMathArg(); return _a }
func NewCT_NaryPr() *CT_NaryPr { _dbbe := &CT_NaryPr{}; return _dbbe }

const (
	ST_ShpUnset    ST_Shp = 0
	ST_ShpCentered ST_Shp = 1
	ST_ShpMatch    ST_Shp = 2
)

// ValidateWithPath validates the CT_Phant and its children, prefixing error messages with path
func (_ccbg *CT_Phant) ValidateWithPath(path string) error {
	if _ccbg.PhantPr != nil {
		if _fedf := _ccbg.PhantPr.ValidateWithPath(path + "\u002f\u0050\u0068\u0061\u006e\u0074\u0050\u0072"); _fedf != nil {
			return _fedf
		}
	}
	if _fdad := _ccbg.E.ValidateWithPath(path + "\u002f\u0045"); _fdad != nil {
		return _fdad
	}
	return nil
}

// ValidateWithPath validates the CT_D and its children, prefixing error messages with path
func (_adb *CT_D) ValidateWithPath(path string) error {
	if _adb.DPr != nil {
		if _ccc := _adb.DPr.ValidateWithPath(path + "\u002f\u0044\u0050\u0072"); _ccc != nil {
			return _ccc
		}
	}
	for _fdfc, _ggef := range _adb.E {
		if _bde := _ggef.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _fdfc)); _bde != nil {
			return _bde
		}
	}
	return nil
}

type CT_FType struct{ ValAttr ST_FType }

// Validate validates the CT_OMathArgPr and its children
func (_cbdbc *CT_OMathArgPr) Validate() error {
	return _cbdbc.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072")
}
func (_fcafc ST_Shp) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_ffgcf := _f.Attr{}
	_ffgcf.Name = name
	switch _fcafc {
	case ST_ShpUnset:
		_ffgcf.Value = ""
	case ST_ShpCentered:
		_ffgcf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064"
	case ST_ShpMatch:
		_ffgcf.Value = "\u006d\u0061\u0074c\u0068"
	}
	return _ffgcf, nil
}

// Validate validates the CT_MC and its children
func (_bdcda *CT_MC) Validate() error { return _bdcda.ValidateWithPath("\u0043\u0054\u005fM\u0043") }
func (_ebdd *CT_MR) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ggee:
	for {
		_bgcc, _fec := d.Token()
		if _fec != nil {
			return _fec
		}
		switch _aced := _bgcc.(type) {
		case _f.StartElement:
			switch _aced.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_ecea := NewCT_OMathArg()
				if _aade := d.DecodeElement(_ecea, &_aced); _aade != nil {
					return _aade
				}
				_ebdd.E = append(_ebdd.E, _ecea)
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fM\u0052 \u0025\u0076", _aced.Name)
				if _bgcf := d.Skip(); _bgcf != nil {
					return _bgcf
				}
			}
		case _f.EndElement:
			break _ggee
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Rad and its children, prefixing error messages with path
func (_dgdfa *CT_Rad) ValidateWithPath(path string) error {
	if _dgdfa.RadPr != nil {
		if _ebcb := _dgdfa.RadPr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0050\u0072"); _ebcb != nil {
			return _ebcb
		}
	}
	if _abdaa := _dgdfa.Deg.ValidateWithPath(path + "\u002f\u0044\u0065\u0067"); _abdaa != nil {
		return _abdaa
	}
	if _ebgb := _dgdfa.E.ValidateWithPath(path + "\u002f\u0045"); _ebgb != nil {
		return _ebgb
	}
	return nil
}
func (_ddcb *ST_Jc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aeaa, _efffa := d.Token()
	if _efffa != nil {
		return _efffa
	}
	if _afff, _fddfb := _aeaa.(_f.EndElement); _fddfb && _afff.Name == start.Name {
		*_ddcb = 1
		return nil
	}
	if _caddf, _ddfbd := _aeaa.(_f.CharData); !_ddfbd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeaa)
	} else {
		switch string(_caddf) {
		case "":
			*_ddcb = 0
		case "\u006c\u0065\u0066\u0074":
			*_ddcb = 1
		case "\u0072\u0069\u0067h\u0074":
			*_ddcb = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ddcb = 3
		case "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_ddcb = 4
		}
	}
	_aeaa, _efffa = d.Token()
	if _efffa != nil {
		return _efffa
	}
	if _bcgc, _fgbd := _aeaa.(_f.EndElement); _fgbd && _bcgc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeaa)
}

// Validate validates the CT_FType and its children
func (_deab *CT_FType) Validate() error {
	return _deab.ValidateWithPath("\u0043\u0054\u005f\u0046\u0054\u0079\u0070\u0065")
}

const (
	ST_ScriptUnset         ST_Script = 0
	ST_ScriptRoman         ST_Script = 1
	ST_ScriptScript        ST_Script = 2
	ST_ScriptFraktur       ST_Script = 3
	ST_ScriptDouble_struck ST_Script = 4
	ST_ScriptSans_serif    ST_Script = 5
	ST_ScriptMonospace     ST_Script = 6
)

// Validate validates the CT_String and its children
func (_aaefg *CT_String) Validate() error {
	return _aaefg.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}

// Validate validates the CT_OMath and its children
func (_afdf *CT_OMath) Validate() error {
	return _afdf.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068")
}

// Validate validates the OMathPara and its children
func (_dbdc *OMathPara) Validate() error {
	return _dbdc.ValidateWithPath("\u004fM\u0061\u0074\u0068\u0050\u0061\u0072a")
}
func (_bbcff *CT_NaryPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fbac:
	for {
		_egg, _ecec := d.Token()
		if _ecec != nil {
			return _ecec
		}
		switch _gfeb := _egg.(type) {
		case _f.StartElement:
			switch _gfeb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_bbcff.Chr = NewCT_Char()
				if _aagf := d.DecodeElement(_bbcff.Chr, &_gfeb); _aagf != nil {
					return _aagf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0063"}:
				_bbcff.LimLoc = NewCT_LimLoc()
				if _aebd := d.DecodeElement(_bbcff.LimLoc, &_gfeb); _aebd != nil {
					return _aebd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}:
				_bbcff.Grow = NewCT_OnOff()
				if _bbcfa := d.DecodeElement(_bbcff.Grow, &_gfeb); _bbcfa != nil {
					return _bbcfa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073u\u0062\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073u\u0062\u0048\u0069\u0064\u0065"}:
				_bbcff.SubHide = NewCT_OnOff()
				if _feb := d.DecodeElement(_bbcff.SubHide, &_gfeb); _feb != nil {
					return _feb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073u\u0070\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073u\u0070\u0048\u0069\u0064\u0065"}:
				_bbcff.SupHide = NewCT_OnOff()
				if _bbcd := d.DecodeElement(_bbcff.SupHide, &_gfeb); _bbcd != nil {
					return _bbcd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bbcff.CtrlPr = NewCT_CtrlPr()
				if _eeef := d.DecodeElement(_bbcff.CtrlPr, &_gfeb); _eeef != nil {
					return _eeef
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0061\u0072y\u0050\u0072 \u0025\u0076", _gfeb.Name)
				if _gcca := d.Skip(); _gcca != nil {
					return _gcca
				}
			}
		case _f.EndElement:
			break _fbac
		case _f.CharData:
		}
	}
	return nil
}
func (_efgc *CT_GroupChrPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _efgc.Chr != nil {
		_aecc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_efgc.Chr, _aecc)
	}
	if _efgc.Pos != nil {
		_facc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0070o\u0073"}}
		e.EncodeElement(_efgc.Pos, _facc)
	}
	if _efgc.VertJc != nil {
		_debc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0076\u0065\u0072\u0074\u004a\u0063"}}
		e.EncodeElement(_efgc.VertJc, _debc)
	}
	if _efgc.CtrlPr != nil {
		_dbd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_efgc.CtrlPr, _dbd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_MCPr() *CT_MCPr { _gcae := &CT_MCPr{}; return _gcae }

// Validate validates the CT_AccPr and its children
func (_gd *CT_AccPr) Validate() error {
	return _gd.ValidateWithPath("\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072")
}
func (_fdgg *EG_OMathMathElements) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eagbg:
	for {
		_ffcf, _fbad := d.Token()
		if _fbad != nil {
			return _fbad
		}
		switch _daef := _ffcf.(type) {
		case _f.StartElement:
			switch _daef.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_fdgg.Acc = NewCT_Acc()
				if _edaa := d.DecodeElement(_fdgg.Acc, &_daef); _edaa != nil {
					return _edaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_fdgg.Bar = NewCT_Bar()
				if _ddfba := d.DecodeElement(_fdgg.Bar, &_daef); _ddfba != nil {
					return _ddfba
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_fdgg.Box = NewCT_Box()
				if _gbbb := d.DecodeElement(_fdgg.Box, &_daef); _gbbb != nil {
					return _gbbb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_fdgg.BorderBox = NewCT_BorderBox()
				if _afca := d.DecodeElement(_fdgg.BorderBox, &_daef); _afca != nil {
					return _afca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_fdgg.D = NewCT_D()
				if _cbde := d.DecodeElement(_fdgg.D, &_daef); _cbde != nil {
					return _cbde
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_fdgg.EqArr = NewCT_EqArr()
				if _cdcc := d.DecodeElement(_fdgg.EqArr, &_daef); _cdcc != nil {
					return _cdcc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_fdgg.F = NewCT_F()
				if _ffgeg := d.DecodeElement(_fdgg.F, &_daef); _ffgeg != nil {
					return _ffgeg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_fdgg.Func = NewCT_Func()
				if _dgaf := d.DecodeElement(_fdgg.Func, &_daef); _dgaf != nil {
					return _dgaf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_fdgg.GroupChr = NewCT_GroupChr()
				if _eddaa := d.DecodeElement(_fdgg.GroupChr, &_daef); _eddaa != nil {
					return _eddaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_fdgg.LimLow = NewCT_LimLow()
				if _caagc := d.DecodeElement(_fdgg.LimLow, &_daef); _caagc != nil {
					return _caagc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_fdgg.LimUpp = NewCT_LimUpp()
				if _gcbcd := d.DecodeElement(_fdgg.LimUpp, &_daef); _gcbcd != nil {
					return _gcbcd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_fdgg.M = NewCT_M()
				if _cefdg := d.DecodeElement(_fdgg.M, &_daef); _cefdg != nil {
					return _cefdg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_fdgg.Nary = NewCT_Nary()
				if _fabb := d.DecodeElement(_fdgg.Nary, &_daef); _fabb != nil {
					return _fabb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_fdgg.Phant = NewCT_Phant()
				if _bcada := d.DecodeElement(_fdgg.Phant, &_daef); _bcada != nil {
					return _bcada
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_fdgg.Rad = NewCT_Rad()
				if _adbeb := d.DecodeElement(_fdgg.Rad, &_daef); _adbeb != nil {
					return _adbeb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_fdgg.SPre = NewCT_SPre()
				if _gdgbe := d.DecodeElement(_fdgg.SPre, &_daef); _gdgbe != nil {
					return _gdgbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_fdgg.SSub = NewCT_SSub()
				if _dffe := d.DecodeElement(_fdgg.SSub, &_daef); _dffe != nil {
					return _dffe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_fdgg.SSubSup = NewCT_SSubSup()
				if _edee := d.DecodeElement(_fdgg.SSubSup, &_daef); _edee != nil {
					return _edee
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_fdgg.SSup = NewCT_SSup()
				if _egdd := d.DecodeElement(_fdgg.SSup, &_daef); _egdd != nil {
					return _egdd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_fdgg.R = NewCT_R()
				if _gdaaa := d.DecodeElement(_fdgg.R, &_daef); _gdaaa != nil {
					return _gdaaa
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _daef.Name)
				if _ecge := d.Skip(); _ecge != nil {
					return _ecge
				}
			}
		case _f.EndElement:
			break _eagbg
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_MC() *CT_MC { _cebd := &CT_MC{}; return _cebd }
func (_caga *ST_Shp) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_caga = 0
	case "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064":
		*_caga = 1
	case "\u006d\u0061\u0074c\u0068":
		*_caga = 2
	}
	return nil
}

// Validate validates the CT_Shp and its children
func (_cbfbb *CT_Shp) Validate() error {
	return _cbfbb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0070")
}
func (_gcbg ST_Script) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_decb := _f.Attr{}
	_decb.Name = name
	switch _gcbg {
	case ST_ScriptUnset:
		_decb.Value = ""
	case ST_ScriptRoman:
		_decb.Value = "\u0072\u006f\u006da\u006e"
	case ST_ScriptScript:
		_decb.Value = "\u0073\u0063\u0072\u0069\u0070\u0074"
	case ST_ScriptFraktur:
		_decb.Value = "\u0066r\u0061\u006b\u0074\u0075\u0072"
	case ST_ScriptDouble_struck:
		_decb.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b"
	case ST_ScriptSans_serif:
		_decb.Value = "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066"
	case ST_ScriptMonospace:
		_decb.Value = "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e"
	}
	return _decb, nil
}

// ValidateWithPath validates the CT_FType and its children, prefixing error messages with path
func (_fdb *CT_FType) ValidateWithPath(path string) error {
	if _fdb.ValAttr == ST_FTypeUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bga := _fdb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bga != nil {
		return _bga
	}
	return nil
}
func (_fdgff ST_FType) Validate() error { return _fdgff.ValidateWithPath("") }
func NewCT_OMathPara() *CT_OMathPara    { _aebb := &CT_OMathPara{}; return _aebb }
func (_aaae *CT_String) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _aaae.ValAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_aaae.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_aeege *CT_SSub) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aeege.E = NewCT_OMathArg()
	_aeege.Sub = NewCT_OMathArg()
_bada:
	for {
		_agfdd, _cecd := d.Token()
		if _cecd != nil {
			return _cecd
		}
		switch _ffgea := _agfdd.(type) {
		case _f.StartElement:
			switch _ffgea.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062\u0050\u0072"}:
				_aeege.SSubPr = NewCT_SSubPr()
				if _efag := d.DecodeElement(_aeege.SSubPr, &_ffgea); _efag != nil {
					return _efag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dcab := d.DecodeElement(_aeege.E, &_ffgea); _dcab != nil {
					return _dcab
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _agdd := d.DecodeElement(_aeege.Sub, &_ffgea); _agdd != nil {
					return _agdd
				}
			default:
				_bf.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0053\u0075\u0062\u0020\u0025\u0076", _ffgea.Name)
				if _bfgg := d.Skip(); _bfgg != nil {
					return _bfgg
				}
			}
		case _f.EndElement:
			break _bada
		case _f.CharData:
		}
	}
	return nil
}
func (_bedggf *ST_Script) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bgecc, _gddbg := d.Token()
	if _gddbg != nil {
		return _gddbg
	}
	if _dfcbg, _aead := _bgecc.(_f.EndElement); _aead && _dfcbg.Name == start.Name {
		*_bedggf = 1
		return nil
	}
	if _dbcd, _dgag := _bgecc.(_f.CharData); !_dgag {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgecc)
	} else {
		switch string(_dbcd) {
		case "":
			*_bedggf = 0
		case "\u0072\u006f\u006da\u006e":
			*_bedggf = 1
		case "\u0073\u0063\u0072\u0069\u0070\u0074":
			*_bedggf = 2
		case "\u0066r\u0061\u006b\u0074\u0075\u0072":
			*_bedggf = 3
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b":
			*_bedggf = 4
		case "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066":
			*_bedggf = 5
		case "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e":
			*_bedggf = 6
		}
	}
	_bgecc, _gddbg = d.Token()
	if _gddbg != nil {
		return _gddbg
	}
	if _fece, _gaede := _bgecc.(_f.EndElement); _gaede && _fece.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgecc)
}

// Validate validates the CT_BorderBoxPr and its children
func (_gae *CT_BorderBoxPr) Validate() error {
	return _gae.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072B\u006f\u0078\u0050\u0072")
}
func (_fcacb *EG_ScriptStyle) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "\u006d\u003aE\u0047\u005f\u0053c\u0072\u0069\u0070\u0074\u0053\u0074\u0079\u006c\u0065"
	if _fcacb.Scr != nil {
		_cebdg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073c\u0072"}}
		e.EncodeElement(_fcacb.Scr, _cebdg)
	}
	if _fcacb.Sty != nil {
		_gbeeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073t\u0079"}}
		e.EncodeElement(_fcacb.Sty, _gbeeg)
	}
	return nil
}
func NewCT_SSup() *CT_SSup {
	_aggd := &CT_SSup{}
	_aggd.E = NewCT_OMathArg()
	_aggd.Sup = NewCT_OMathArg()
	return _aggd
}
func (_adfc *ST_LimLoc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ffad, _feddga := d.Token()
	if _feddga != nil {
		return _feddga
	}
	if _acca, _aegfef := _ffad.(_f.EndElement); _aegfef && _acca.Name == start.Name {
		*_adfc = 1
		return nil
	}
	if _dbed, _eccgb := _ffad.(_f.CharData); !_eccgb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffad)
	} else {
		switch string(_dbed) {
		case "":
			*_adfc = 0
		case "\u0075\u006e\u0064\u004f\u0076\u0072":
			*_adfc = 1
		case "\u0073\u0075\u0062\u0053\u0075\u0070":
			*_adfc = 2
		}
	}
	_ffad, _feddga = d.Token()
	if _feddga != nil {
		return _feddga
	}
	if _ddfdc, _eaac := _ffad.(_f.EndElement); _eaac && _ddfdc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffad)
}
func NewCT_SSubSup() *CT_SSubSup {
	_aedg := &CT_SSubSup{}
	_aedg.E = NewCT_OMathArg()
	_aedg.Sub = NewCT_OMathArg()
	_aedg.Sup = NewCT_OMathArg()
	return _aedg
}
func (_fffgd *CT_OMathJc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fffgd.ValAttr != ST_JcUnset {
		_ebef, _eddc := _fffgd.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _eddc != nil {
			return _eddc
		}
		start.Attr = append(start.Attr, _ebef)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_aeb *CT_BorderBox) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aeb.E = NewCT_OMathArg()
_gac:
	for {
		_eg, _aee := d.Token()
		if _aee != nil {
			return _aee
		}
		switch _fg := _eg.(type) {
		case _f.StartElement:
			switch _fg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "b\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "b\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}:
				_aeb.BorderBoxPr = NewCT_BorderBoxPr()
				if _bg := d.DecodeElement(_aeb.BorderBoxPr, &_fg); _bg != nil {
					return _bg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _deb := d.DecodeElement(_aeb.E, &_fg); _deb != nil {
					return _deb
				}
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u0072d\u0065\u0072\u0042\u006f\u0078\u0020\u0025\u0076", _fg.Name)
				if _ega := d.Skip(); _ega != nil {
					return _ega
				}
			}
		case _f.EndElement:
			break _gac
		case _f.CharData:
		}
	}
	return nil
}
func (_ecaff ST_Jc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_ecaff.String(), start)
}
func (_agfa *CT_Shp) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agfa.ValAttr = ST_Shp(1)
	for _, _aefbc := range start.Attr {
		if _aefbc.Name.Local == "\u0076\u0061\u006c" {
			_agfa.ValAttr.UnmarshalXMLAttr(_aefbc)
			continue
		}
	}
	for {
		_dagc, _cbgfe := d.Token()
		if _cbgfe != nil {
			return _b.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0053h\u0070\u003a\u0020\u0025\u0073", _cbgfe)
		}
		if _adgf, _afadb := _dagc.(_f.EndElement); _afadb && _adgf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beda *MathPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u003a\u006d\u0061\u0074\u0068\u0050\u0072"
	return _beda.CT_MathPr.MarshalXML(e, start)
}
func NewCT_LimLoc() *CT_LimLoc { _cdbg := &CT_LimLoc{}; _cdbg.ValAttr = ST_LimLoc(1); return _cdbg }

// Validate validates the CT_SpacingRule and its children
func (_gccd *CT_SpacingRule) Validate() error {
	return _gccd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0070\u0061\u0063\u0069\u006eg\u0052\u0075\u006c\u0065")
}

// Validate validates the CT_FuncPr and its children
func (_ccdb *CT_FuncPr) Validate() error {
	return _ccdb.ValidateWithPath("\u0043T\u005f\u0046\u0075\u006e\u0063\u0050r")
}

// ValidateWithPath validates the CT_ManualBreak and its children, prefixing error messages with path
func (_efbf *CT_ManualBreak) ValidateWithPath(path string) error {
	if _efbf.AlnAtAttr != nil {
		if *_efbf.AlnAtAttr < 1 {
			return _b.Errorf("\u0025\u0073/\u006d\u002e\u0041\u006cn\u0041\u0074A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_efbf.AlnAtAttr)
		}
		if *_efbf.AlnAtAttr > 255 {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0041\u006c\u006e\u0041\u0074\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0032\u0035\u0035\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_efbf.AlnAtAttr)
		}
	}
	return nil
}
func (_gdgb *EG_OMathElements) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eeebg:
	for {
		_dgbd, _edagb := d.Token()
		if _edagb != nil {
			return _edagb
		}
		switch _ggcag := _dgbd.(type) {
		case _f.StartElement:
			switch _ggcag.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_fefe := NewEG_OMathMathElements()
				_fefe.Acc = NewCT_Acc()
				if _aedcf := d.DecodeElement(_fefe.Acc, &_ggcag); _aedcf != nil {
					return _aedcf
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _fefe)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_fdee := NewEG_OMathMathElements()
				_fdee.Bar = NewCT_Bar()
				if _fadae := d.DecodeElement(_fdee.Bar, &_ggcag); _fadae != nil {
					return _fadae
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _fdee)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_ecae := NewEG_OMathMathElements()
				_ecae.Box = NewCT_Box()
				if _cedg := d.DecodeElement(_ecae.Box, &_ggcag); _cedg != nil {
					return _cedg
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _ecae)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_fbga := NewEG_OMathMathElements()
				_fbga.BorderBox = NewCT_BorderBox()
				if _abfg := d.DecodeElement(_fbga.BorderBox, &_ggcag); _abfg != nil {
					return _abfg
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _fbga)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_ecgd := NewEG_OMathMathElements()
				_ecgd.D = NewCT_D()
				if _ffgd := d.DecodeElement(_ecgd.D, &_ggcag); _ffgd != nil {
					return _ffgd
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _ecgd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_eccc := NewEG_OMathMathElements()
				_eccc.EqArr = NewCT_EqArr()
				if _ggdg := d.DecodeElement(_eccc.EqArr, &_ggcag); _ggdg != nil {
					return _ggdg
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _eccc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_gabdc := NewEG_OMathMathElements()
				_gabdc.F = NewCT_F()
				if _bbgf := d.DecodeElement(_gabdc.F, &_ggcag); _bbgf != nil {
					return _bbgf
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _gabdc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_bgeg := NewEG_OMathMathElements()
				_bgeg.Func = NewCT_Func()
				if _cdeae := d.DecodeElement(_bgeg.Func, &_ggcag); _cdeae != nil {
					return _cdeae
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _bgeg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_cggdb := NewEG_OMathMathElements()
				_cggdb.GroupChr = NewCT_GroupChr()
				if _fabe := d.DecodeElement(_cggdb.GroupChr, &_ggcag); _fabe != nil {
					return _fabe
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _cggdb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_abc := NewEG_OMathMathElements()
				_abc.LimLow = NewCT_LimLow()
				if _ggdb := d.DecodeElement(_abc.LimLow, &_ggcag); _ggdb != nil {
					return _ggdb
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _abc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_bfcf := NewEG_OMathMathElements()
				_bfcf.LimUpp = NewCT_LimUpp()
				if _eeba := d.DecodeElement(_bfcf.LimUpp, &_ggcag); _eeba != nil {
					return _eeba
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _bfcf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_aefdb := NewEG_OMathMathElements()
				_aefdb.M = NewCT_M()
				if _ffaf := d.DecodeElement(_aefdb.M, &_ggcag); _ffaf != nil {
					return _ffaf
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _aefdb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_bbeg := NewEG_OMathMathElements()
				_bbeg.Nary = NewCT_Nary()
				if _bedg := d.DecodeElement(_bbeg.Nary, &_ggcag); _bedg != nil {
					return _bedg
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _bbeg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_cdbdb := NewEG_OMathMathElements()
				_cdbdb.Phant = NewCT_Phant()
				if _faec := d.DecodeElement(_cdbdb.Phant, &_ggcag); _faec != nil {
					return _faec
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _cdbdb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_ebefc := NewEG_OMathMathElements()
				_ebefc.Rad = NewCT_Rad()
				if _edcf := d.DecodeElement(_ebefc.Rad, &_ggcag); _edcf != nil {
					return _edcf
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _ebefc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_fgfcd := NewEG_OMathMathElements()
				_fgfcd.SPre = NewCT_SPre()
				if _beee := d.DecodeElement(_fgfcd.SPre, &_ggcag); _beee != nil {
					return _beee
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _fgfcd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_aedgd := NewEG_OMathMathElements()
				_aedgd.SSub = NewCT_SSub()
				if _aabab := d.DecodeElement(_aedgd.SSub, &_ggcag); _aabab != nil {
					return _aabab
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _aedgd)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_dbecf := NewEG_OMathMathElements()
				_dbecf.SSubSup = NewCT_SSubSup()
				if _bbdcf := d.DecodeElement(_dbecf.SSubSup, &_ggcag); _bbdcf != nil {
					return _bbdcf
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _dbecf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_fged := NewEG_OMathMathElements()
				_fged.SSup = NewCT_SSup()
				if _gfge := d.DecodeElement(_fged.SSup, &_ggcag); _gfge != nil {
					return _gfge
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _fged)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_cedfb := NewEG_OMathMathElements()
				_cedfb.R = NewCT_R()
				if _gegd := d.DecodeElement(_cedfb.R, &_ggcag); _gegd != nil {
					return _gegd
				}
				_gdgb.EG_OMathMathElements = append(_gdgb.EG_OMathMathElements, _cedfb)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0020\u0025v", _ggcag.Name)
				if _aeacg := d.Skip(); _aeacg != nil {
					return _aeacg
				}
			}
		case _f.EndElement:
			break _eeebg
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_MCS() *CT_MCS { _bfef := &CT_MCS{}; return _bfef }
func (_ecbg *CT_LimLoc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ecbg.ValAttr = ST_LimLoc(1)
	for _, _cge := range start.Attr {
		if _cge.Name.Local == "\u0076\u0061\u006c" {
			_ecbg.ValAttr.UnmarshalXMLAttr(_cge)
			continue
		}
	}
	for {
		_ecad, _eea := d.Token()
		if _eea != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004c\u0069\u006dL\u006f\u0063\u003a\u0020\u0025\u0073", _eea)
		}
		if _ecg, _daa := _ecad.(_f.EndElement); _daa && _ecg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_F and its children
func (_fbaf *CT_F) Validate() error { return _fbaf.ValidateWithPath("\u0043\u0054\u005f\u0046") }

// Validate validates the CT_Style and its children
func (_facf *CT_Style) Validate() error {
	return _facf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065")
}
func (_bgce *CT_OMathPara) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gggge:
	for {
		_gdac, _abaf := d.Token()
		if _abaf != nil {
			return _abaf
		}
		switch _bddg := _gdac.(type) {
		case _f.StartElement:
			switch _bddg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}:
				_bgce.OMathParaPr = NewCT_OMathParaPr()
				if _ceg := d.DecodeElement(_bgce.OMathParaPr, &_bddg); _ceg != nil {
					return _ceg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}:
				_dgea := NewCT_OMath()
				if _bddda := d.DecodeElement(_dgea, &_bddg); _bddda != nil {
					return _bddda
				}
				_bgce.OMath = append(_bgce.OMath, _dgea)
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u004d\u0061t\u0068\u0050\u0061\u0072\u0061\u0020\u0025\u0076", _bddg.Name)
				if _eegc := d.Skip(); _eegc != nil {
					return _eegc
				}
			}
		case _f.EndElement:
			break _gggge
		case _f.CharData:
		}
	}
	return nil
}
func (_eeeaa ST_BreakBinSub) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_bcgg := _f.Attr{}
	_bcgg.Name = name
	switch _eeeaa {
	case ST_BreakBinSubUnset:
		_bcgg.Value = ""
	case ST_BreakBinSub__:
		_bcgg.Value = "\u002d\u002d"
	case ST_BreakBinSub___:
		_bcgg.Value = "\u002d\u002b"
	case ST_BreakBinSub____:
		_bcgg.Value = "\u002b\u002d"
	}
	return _bcgg, nil
}

// ValidateWithPath validates the CT_OnOff and its children, prefixing error messages with path
func (_gfdc *CT_OnOff) ValidateWithPath(path string) error {
	if _gfdc.ValAttr != nil {
		if _eegdf := _gfdc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eegdf != nil {
			return _eegdf
		}
	}
	return nil
}

// Validate validates the CT_SSupPr and its children
func (_gebg *CT_SSupPr) Validate() error {
	return _gebg.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0070\u0050r")
}
func (_cfbg *ST_Style) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bffc, _gece := d.Token()
	if _gece != nil {
		return _gece
	}
	if _fgbc, _bfgf := _bffc.(_f.EndElement); _bfgf && _fgbc.Name == start.Name {
		*_cfbg = 1
		return nil
	}
	if _fgbad, _gfadc := _bffc.(_f.CharData); !_gfadc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bffc)
	} else {
		switch string(_fgbad) {
		case "":
			*_cfbg = 0
		case "\u0070":
			*_cfbg = 1
		case "\u0062":
			*_cfbg = 2
		case "\u0069":
			*_cfbg = 3
		case "\u0062\u0069":
			*_cfbg = 4
		}
	}
	_bffc, _gece = d.Token()
	if _gece != nil {
		return _gece
	}
	if _fgfa, _gdfbe := _bffc.(_f.EndElement); _gdfbe && _fgfa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bffc)
}
func (_cdafg *CT_LimLowPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cdafg.CtrlPr != nil {
		_gda := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cdafg.CtrlPr, _gda)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_acgf *CT_OMathPara) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _acgf.OMathParaPr != nil {
		_bbde := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006f\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}}
		e.EncodeElement(_acgf.OMathParaPr, _bbde)
	}
	_bggb := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006f\u004d\u0061\u0074\u0068"}}
	for _, _befc := range _acgf.OMath {
		e.EncodeElement(_befc, _bggb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_OMathArgPr struct{ ArgSz *CT_Integer2 }

func (_agga *CT_SSubPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dccfd:
	for {
		_fgde, _aaea := d.Token()
		if _aaea != nil {
			return _aaea
		}
		switch _afac := _fgde.(type) {
		case _f.StartElement:
			switch _afac.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_agga.CtrlPr = NewCT_CtrlPr()
				if _dfcce := d.DecodeElement(_agga.CtrlPr, &_afac); _dfcce != nil {
					return _dfcce
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0053\u0075b\u0050\u0072 \u0025\u0076", _afac.Name)
				if _edbc := d.Skip(); _edbc != nil {
					return _edbc
				}
			}
		case _f.EndElement:
			break _dccfd
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_Integer2() *CT_Integer2 { _dab := &CT_Integer2{}; _dab.ValAttr = -2; return _dab }

type ST_BreakBin byte

func (_adbec *ST_FType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_adbec = 0
	case "\u0062\u0061\u0072":
		*_adbec = 1
	case "\u0073\u006b\u0077":
		*_adbec = 2
	case "\u006c\u0069\u006e":
		*_adbec = 3
	case "\u006e\u006f\u0042a\u0072":
		*_adbec = 4
	}
	return nil
}

type CT_Script struct{ ValAttr ST_Script }

func (_feee *CT_MC) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _feee.McPr != nil {
		_ece := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0063\u0050\u0072"}}
		e.EncodeElement(_feee.McPr, _ece)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RChoice and its children
func (_gee *CT_RChoice) Validate() error {
	return _gee.ValidateWithPath("\u0043\u0054\u005f\u0052\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_cdce *CT_RadPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cdce.DegHide != nil {
		_dgfe := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0064\u0065\u0067\u0048\u0069\u0064e"}}
		e.EncodeElement(_cdce.DegHide, _dgfe)
	}
	if _cdce.CtrlPr != nil {
		_agbe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cdce.CtrlPr, _agbe)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_RChoice struct{ T []*CT_Text }

func (_egdg *CT_SSup) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _egdg.SSupPr != nil {
		_abgcd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0070\u0050\u0072"}}
		e.EncodeElement(_egdg.SSupPr, _abgcd)
	}
	_ddaa := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_egdg.E, _ddaa)
	_ddbe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_egdg.Sup, _ddbe)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_RPRChoice() *CT_RPRChoice { _beaf := &CT_RPRChoice{}; return _beaf }
func (_cccb ST_Jc) ValidateWithPath(path string) error {
	switch _cccb {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cccb))
	}
	return nil
}
func (_dbfe *CT_Func) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dbfe.FuncPr != nil {
		_gcg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066\u0075\u006e\u0063\u0050\u0072"}}
		e.EncodeElement(_dbfe.FuncPr, _gcg)
	}
	_agff := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0066\u004e\u0061\u006d\u0065"}}
	e.EncodeElement(_dbfe.FName, _agff)
	_baga := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_dbfe.E, _baga)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the OMath and its children, prefixing error messages with path
func (_baagg *OMath) ValidateWithPath(path string) error {
	if _edcb := _baagg.CT_OMath.ValidateWithPath(path); _edcb != nil {
		return _edcb
	}
	return nil
}
func (_fddff *ST_Shp) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcec, _bebfd := d.Token()
	if _bebfd != nil {
		return _bebfd
	}
	if _dedb, _ffeb := _gcec.(_f.EndElement); _ffeb && _dedb.Name == start.Name {
		*_fddff = 1
		return nil
	}
	if _dfbf, _acfg := _gcec.(_f.CharData); !_acfg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcec)
	} else {
		switch string(_dfbf) {
		case "":
			*_fddff = 0
		case "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064":
			*_fddff = 1
		case "\u006d\u0061\u0074c\u0068":
			*_fddff = 2
		}
	}
	_gcec, _bebfd = d.Token()
	if _bebfd != nil {
		return _bebfd
	}
	if _bdfdg, _bfabc := _gcec.(_f.EndElement); _bfabc && _bdfdg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcec)
}
func (_ffbba *CT_RPRChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gafce:
	for {
		_fabf, _bbbf := d.Token()
		if _bbbf != nil {
			return _bbbf
		}
		switch _cccfg := _fabf.(type) {
		case _f.StartElement:
			switch _cccfg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u006f\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u006f\u0072"}:
				_ffbba.Nor = NewCT_OnOff()
				if _bfgc := d.DecodeElement(_ffbba.Nor, &_cccfg); _bfgc != nil {
					return _bfgc
				}
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0050\u0052C\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _cccfg.Name)
				if _eeae := d.Skip(); _eeae != nil {
					return _eeae
				}
			}
		case _f.EndElement:
			break _gafce
		case _f.CharData:
		}
	}
	return nil
}
func (_adbe *CT_SSubSup) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_adbe.E = NewCT_OMathArg()
	_adbe.Sub = NewCT_OMathArg()
	_adbe.Sup = NewCT_OMathArg()
_eccg:
	for {
		_afde, _cbgb := d.Token()
		if _cbgb != nil {
			return _cbgb
		}
		switch _gecd := _afde.(type) {
		case _f.StartElement:
			switch _gecd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070\u0050r"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070\u0050r"}:
				_adbe.SSubSupPr = NewCT_SSubSupPr()
				if _cdcgb := d.DecodeElement(_adbe.SSubSupPr, &_gecd); _cdcgb != nil {
					return _cdcgb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _gabf := d.DecodeElement(_adbe.E, &_gecd); _gabf != nil {
					return _gabf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _fddf := d.DecodeElement(_adbe.Sub, &_gecd); _fddf != nil {
					return _fddf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _dceae := d.DecodeElement(_adbe.Sup, &_gecd); _dceae != nil {
					return _dceae
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0020\u0025\u0076", _gecd.Name)
				if _bagdf := d.Skip(); _bagdf != nil {
					return _bagdf
				}
			}
		case _f.EndElement:
			break _eccg
		case _f.CharData:
		}
	}
	return nil
}
func (_cf *CT_AccPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cf.Chr != nil {
		_bfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_cf.Chr, _bfe)
	}
	if _cf.CtrlPr != nil {
		_cc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cf.CtrlPr, _cc)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_gfgc *CT_String) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _bbgg := range start.Attr {
		if _bbgg.Name.Local == "\u0076\u0061\u006c" {
			_ffea, _dbcc := _bbgg.Value, error(nil)
			if _dbcc != nil {
				return _dbcc
			}
			_gfgc.ValAttr = &_ffea
			continue
		}
	}
	for {
		_cefd, _cdbgd := d.Token()
		if _cdbgd != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0074\u0072i\u006e\u0067\u003a\u0020\u0025\u0073", _cdbgd)
		}
		if _cggde, _gbee := _cefd.(_f.EndElement); _gbee && _cggde.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BorderBoxPr struct {
	HideTop    *CT_OnOff
	HideBot    *CT_OnOff
	HideLeft   *CT_OnOff
	HideRight  *CT_OnOff
	StrikeH    *CT_OnOff
	StrikeV    *CT_OnOff
	StrikeBLTR *CT_OnOff
	StrikeTLBR *CT_OnOff
	CtrlPr     *CT_CtrlPr
}

// Validate validates the CT_LimLow and its children
func (_ggcd *CT_LimLow) Validate() error {
	return _ggcd.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u004c\u006fw")
}

// ValidateWithPath validates the CT_LimUppPr and its children, prefixing error messages with path
func (_gabe *CT_LimUppPr) ValidateWithPath(path string) error {
	if _gabe.CtrlPr != nil {
		if _bdgb := _gabe.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bdgb != nil {
			return _bdgb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BoxPr and its children, prefixing error messages with path
func (_ddd *CT_BoxPr) ValidateWithPath(path string) error {
	if _ddd.OpEmu != nil {
		if _ec := _ddd.OpEmu.ValidateWithPath(path + "\u002f\u004f\u0070\u0045\u006d\u0075"); _ec != nil {
			return _ec
		}
	}
	if _ddd.NoBreak != nil {
		if _dda := _ddd.NoBreak.ValidateWithPath(path + "\u002f\u004e\u006f\u0042\u0072\u0065\u0061\u006b"); _dda != nil {
			return _dda
		}
	}
	if _ddd.Diff != nil {
		if _aeg := _ddd.Diff.ValidateWithPath(path + "\u002f\u0044\u0069f\u0066"); _aeg != nil {
			return _aeg
		}
	}
	if _ddd.Brk != nil {
		if _ecb := _ddd.Brk.ValidateWithPath(path + "\u002f\u0042\u0072\u006b"); _ecb != nil {
			return _ecb
		}
	}
	if _ddd.Aln != nil {
		if _cedaa := _ddd.Aln.ValidateWithPath(path + "\u002f\u0041\u006c\u006e"); _cedaa != nil {
			return _cedaa
		}
	}
	if _ddd.CtrlPr != nil {
		if _bdbd := _ddd.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bdbd != nil {
			return _bdbd
		}
	}
	return nil
}
func (_efdae ST_Shp) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_efdae.String(), start)
}

// Validate validates the CT_RPRChoice and its children
func (_degea *CT_RPRChoice) Validate() error {
	return _degea.ValidateWithPath("\u0043\u0054\u005fR\u0050\u0052\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_BreakBin and its children, prefixing error messages with path
func (_ffe *CT_BreakBin) ValidateWithPath(path string) error {
	if _dfcgd := _ffe.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dfcgd != nil {
		return _dfcgd
	}
	return nil
}
func (_gde ST_Script) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gde.String(), start)
}

type CT_Style struct{ ValAttr ST_Style }

// ValidateWithPath validates the CT_LimLow and its children, prefixing error messages with path
func (_dfcc *CT_LimLow) ValidateWithPath(path string) error {
	if _dfcc.LimLowPr != nil {
		if _dac := _dfcc.LimLowPr.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0077\u0050r"); _dac != nil {
			return _dac
		}
	}
	if _gada := _dfcc.E.ValidateWithPath(path + "\u002f\u0045"); _gada != nil {
		return _gada
	}
	if _dadf := _dfcc.Lim.ValidateWithPath(path + "\u002f\u004c\u0069\u006d"); _dadf != nil {
		return _dadf
	}
	return nil
}
func (_cfe *CT_FType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_eeb, _bbe := _cfe.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _bbe != nil {
		return _bbe
	}
	start.Attr = append(start.Attr, _eeb)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_agccd *CT_RPRChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _agccd.Nor != nil {
		_abda := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006eo\u0072"}}
		e.EncodeElement(_agccd.Nor, _abda)
	}
	return nil
}

// ValidateWithPath validates the CT_OMathPara and its children, prefixing error messages with path
func (_baedg *CT_OMathPara) ValidateWithPath(path string) error {
	if _baedg.OMathParaPr != nil {
		if _gdbe := _baedg.OMathParaPr.ValidateWithPath(path + "\u002f\u004f\u004da\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"); _gdbe != nil {
			return _gdbe
		}
	}
	for _ccgc, _gcbcc := range _baedg.OMath {
		if _eeaf := _gcbcc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fO\u004d\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _ccgc)); _eeaf != nil {
			return _eeaf
		}
	}
	return nil
}
func NewCT_OMathArgPr() *CT_OMathArgPr { _eccfe := &CT_OMathArgPr{}; return _eccfe }
func (_bdcd *CT_LimUpp) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bdcd.E = NewCT_OMathArg()
	_bdcd.Lim = NewCT_OMathArg()
_fda:
	for {
		_dgaa, _bcbe := d.Token()
		if _bcbe != nil {
			return _bcbe
		}
		switch _bea := _dgaa.(type) {
		case _f.StartElement:
			switch _bea.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}:
				_bdcd.LimUppPr = NewCT_LimUppPr()
				if _gdbf := d.DecodeElement(_bdcd.LimUppPr, &_bea); _gdbf != nil {
					return _gdbf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _efef := d.DecodeElement(_bdcd.E, &_bea); _efef != nil {
					return _efef
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d"}:
				if _bac := d.DecodeElement(_bdcd.Lim, &_bea); _bac != nil {
					return _bac
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004c\u0069\u006dU\u0070\u0070 \u0025\u0076", _bea.Name)
				if _aea := d.Skip(); _aea != nil {
					return _aea
				}
			}
		case _f.EndElement:
			break _fda
		case _f.CharData:
		}
	}
	return nil
}

type CT_Bar struct {
	BarPr *CT_BarPr
	E     *CT_OMathArg
}

func (_eccfc *CT_SSubSupPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aabaf:
	for {
		_gegb, _badaa := d.Token()
		if _badaa != nil {
			return _badaa
		}
		switch _ageea := _gegb.(type) {
		case _f.StartElement:
			switch _ageea.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e\u0053\u0063\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e\u0053\u0063\u0072"}:
				_eccfc.AlnScr = NewCT_OnOff()
				if _eegga := d.DecodeElement(_eccfc.AlnScr, &_ageea); _eegga != nil {
					return _eegga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_eccfc.CtrlPr = NewCT_CtrlPr()
				if _adfbg := d.DecodeElement(_eccfc.CtrlPr, &_ageea); _adfbg != nil {
					return _adfbg
				}
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0053\u0075b\u0053\u0075\u0070\u0050\u0072\u0020\u0025\u0076", _ageea.Name)
				if _fega := d.Skip(); _fega != nil {
					return _fega
				}
			}
		case _f.EndElement:
			break _aabaf
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SPrePr and its children, prefixing error messages with path
func (_gebc *CT_SPrePr) ValidateWithPath(path string) error {
	if _gebc.CtrlPr != nil {
		if _aeae := _gebc.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aeae != nil {
			return _aeae
		}
	}
	return nil
}

// Validate validates the CT_EqArrPr and its children
func (_egbf *CT_EqArrPr) Validate() error {
	return _egbf.ValidateWithPath("\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0050\u0072")
}

type CT_BorderBox struct {
	BorderBoxPr *CT_BorderBoxPr
	E           *CT_OMathArg
}
type CT_Box struct {
	BoxPr *CT_BoxPr
	E     *CT_OMathArg
}

// Validate validates the CT_NaryPr and its children
func (_efac *CT_NaryPr) Validate() error {
	return _efac.ValidateWithPath("\u0043T\u005f\u004e\u0061\u0072\u0079\u0050r")
}

// Validate validates the CT_SSub and its children
func (_ccdbe *CT_SSub) Validate() error {
	return _ccdbe.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0062")
}

type CT_SSup struct {
	SSupPr *CT_SSupPr
	E      *CT_OMathArg
	Sup    *CT_OMathArg
}

func (_bddgd ST_Jc) Validate() error { return _bddgd.ValidateWithPath("") }
func NewCT_SSubSupPr() *CT_SSubSupPr { _cbeg := &CT_SSubSupPr{}; return _cbeg }

// ValidateWithPath validates the CT_MR and its children, prefixing error messages with path
func (_bed *CT_MR) ValidateWithPath(path string) error {
	for _bggf, _fcfb := range _bed.E {
		if _fffe := _fcfb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _bggf)); _fffe != nil {
			return _fffe
		}
	}
	return nil
}
func NewCT_LimLow() *CT_LimLow {
	_cacd := &CT_LimLow{}
	_cacd.E = NewCT_OMathArg()
	_cacd.Lim = NewCT_OMathArg()
	return _cacd
}
func (_cbf *CT_BorderBox) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cbf.BorderBoxPr != nil {
		_cae := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}}
		e.EncodeElement(_cbf.BorderBoxPr, _cae)
	}
	_bbc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_cbf.E, _bbc)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_decd *CT_SSubPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _decd.CtrlPr != nil {
		_ebfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_decd.CtrlPr, _ebfe)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_egae *CT_Char) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", _egae.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_EqArr() *CT_EqArr { _ecc := &CT_EqArr{}; return _ecc }

// ValidateWithPath validates the CT_FuncPr and its children, prefixing error messages with path
func (_gaaf *CT_FuncPr) ValidateWithPath(path string) error {
	if _gaaf.CtrlPr != nil {
		if _cagd := _gaaf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _cagd != nil {
			return _cagd
		}
	}
	return nil
}
func NewCT_Func() *CT_Func {
	_aba := &CT_Func{}
	_aba.FName = NewCT_OMathArg()
	_aba.E = NewCT_OMathArg()
	return _aba
}
func NewCT_Box() *CT_Box { _dfcg := &CT_Box{}; _dfcg.E = NewCT_OMathArg(); return _dfcg }

// Validate validates the MathPr and its children
func (_ebdfd *MathPr) Validate() error {
	return _ebdfd.ValidateWithPath("\u004d\u0061\u0074\u0068\u0050\u0072")
}

// Validate validates the CT_RadPr and its children
func (_gbgd *CT_RadPr) Validate() error {
	return _gbgd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072")
}

// Validate validates the CT_EqArr and its children
func (_dbgd *CT_EqArr) Validate() error {
	return _dbgd.ValidateWithPath("\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072")
}

type CT_SSupPr struct{ CtrlPr *CT_CtrlPr }

func (_fefb *CT_FPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bcb:
	for {
		_fac, _dfg := d.Token()
		if _dfg != nil {
			return _dfg
		}
		switch _ggfc := _fac.(type) {
		case _f.StartElement:
			switch _ggfc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074\u0079\u0070\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074\u0079\u0070\u0065"}:
				_fefb.Type = NewCT_FType()
				if _afb := d.DecodeElement(_fefb.Type, &_ggfc); _afb != nil {
					return _afb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fefb.CtrlPr = NewCT_CtrlPr()
				if _efeb := d.DecodeElement(_fefb.CtrlPr, &_ggfc); _efeb != nil {
					return _efeb
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0050\u0072\u0020\u0025\u0076", _ggfc.Name)
				if _gaa := d.Skip(); _gaa != nil {
					return _gaa
				}
			}
		case _f.EndElement:
			break _bcb
		case _f.CharData:
		}
	}
	return nil
}
func (_ffeg *CT_BreakBinSub) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cfb := range start.Attr {
		if _cfb.Name.Local == "\u0076\u0061\u006c" {
			_ffeg.ValAttr.UnmarshalXMLAttr(_cfb)
			continue
		}
	}
	for {
		_gfa, _ag := d.Token()
		if _ag != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b\u0042\u0069\u006e\u0053\u0075\u0062:\u0020\u0025\u0073", _ag)
		}
		if _edgd, _egaa := _gfa.(_f.EndElement); _egaa && _edgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efae *ST_BreakBin) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_efae = 0
	case "\u0062\u0065\u0066\u006f\u0072\u0065":
		*_efae = 1
	case "\u0061\u0066\u0074e\u0072":
		*_efae = 2
	case "\u0072\u0065\u0070\u0065\u0061\u0074":
		*_efae = 3
	}
	return nil
}
func NewCT_XAlign() *CT_XAlign { _bdeb := &CT_XAlign{}; _bdeb.ValAttr = _g.ST_XAlign(1); return _bdeb }
func (_fgbf *CT_Style) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fgbf.ValAttr != ST_StyleUnset {
		_bcce, _acee := _fgbf.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _acee != nil {
			return _acee
		}
		start.Attr = append(start.Attr, _bcce)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BreakBinSub and its children, prefixing error messages with path
func (_dbg *CT_BreakBinSub) ValidateWithPath(path string) error {
	if _gcc := _dbg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gcc != nil {
		return _gcc
	}
	return nil
}
func NewCT_ManualBreak() *CT_ManualBreak { _gbca := &CT_ManualBreak{}; return _gbca }

// Validate validates the CT_SSubSupPr and its children
func (_eefdc *CT_SSubSupPr) Validate() error {
	return _eefdc.ValidateWithPath("\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072")
}
func (_adgcd *CT_SSupPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _adgcd.CtrlPr != nil {
		_aged := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_adgcd.CtrlPr, _aged)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_ged *CT_MathPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ged.MathFont != nil {
		_ebge := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_ged.MathFont, _ebge)
	}
	if _ged.BrkBin != nil {
		_fcdc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0072\u006b\u0042\u0069\u006e"}}
		e.EncodeElement(_ged.BrkBin, _fcdc)
	}
	if _ged.BrkBinSub != nil {
		_bbb := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0062\u0072\u006b\u0042\u0069\u006e\u0053\u0075\u0062"}}
		e.EncodeElement(_ged.BrkBinSub, _bbb)
	}
	if _ged.SmallFrac != nil {
		_cdbgf := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0073\u006d\u0061\u006c\u006c\u0046\u0072\u0061\u0063"}}
		e.EncodeElement(_ged.SmallFrac, _cdbgf)
	}
	if _ged.DispDef != nil {
		_bdbc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0064\u0069\u0073\u0070\u0044\u0065f"}}
		e.EncodeElement(_ged.DispDef, _bdbc)
	}
	if _ged.LMargin != nil {
		_eaedf := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006c\u004d\u0061\u0072\u0067\u0069n"}}
		e.EncodeElement(_ged.LMargin, _eaedf)
	}
	if _ged.RMargin != nil {
		_ddfc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u004d\u0061\u0072\u0067\u0069n"}}
		e.EncodeElement(_ged.RMargin, _ddfc)
	}
	if _ged.DefJc != nil {
		_bdcdc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0064\u0065\u0066\u004a\u0063"}}
		e.EncodeElement(_ged.DefJc, _bdcdc)
	}
	if _ged.PreSp != nil {
		_egc := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u0072\u0065\u0053\u0070"}}
		e.EncodeElement(_ged.PreSp, _egc)
	}
	if _ged.PostSp != nil {
		_feg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0070\u006f\u0073\u0074\u0053\u0070"}}
		e.EncodeElement(_ged.PostSp, _feg)
	}
	if _ged.InterSp != nil {
		_dead := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0069\u006e\u0074\u0065\u0072\u0053p"}}
		e.EncodeElement(_ged.InterSp, _dead)
	}
	if _ged.IntraSp != nil {
		_edbd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0069\u006e\u0074\u0072\u0061\u0053p"}}
		e.EncodeElement(_ged.IntraSp, _edbd)
	}
	if _ged.Choice != nil {
		_ged.Choice.MarshalXML(e, _f.StartElement{})
	}
	if _ged.IntLim != nil {
		_edda := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0069\u006e\u0074\u004c\u0069\u006d"}}
		e.EncodeElement(_ged.IntLim, _edda)
	}
	if _ged.NaryLim != nil {
		_feaa := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006e\u0061\u0072\u0079\u004c\u0069m"}}
		e.EncodeElement(_ged.NaryLim, _feaa)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_OMath() *CT_OMath { _gbg := &CT_OMath{}; return _gbg }

// Validate validates the CT_FPr and its children
func (_dgda *CT_FPr) Validate() error {
	return _dgda.ValidateWithPath("\u0043\u0054\u005f\u0046\u0050\u0072")
}

type CT_Integer255 struct{ ValAttr int64 }

// ValidateWithPath validates the CT_AccPr and its children, prefixing error messages with path
func (_fef *CT_AccPr) ValidateWithPath(path string) error {
	if _fef.Chr != nil {
		if _ee := _fef.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _ee != nil {
			return _ee
		}
	}
	if _fef.CtrlPr != nil {
		if _bb := _fef.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bb != nil {
			return _bb
		}
	}
	return nil
}

// ValidateWithPath validates the OMathPara and its children, prefixing error messages with path
func (_bgbb *OMathPara) ValidateWithPath(path string) error {
	if _aaf := _bgbb.CT_OMathPara.ValidateWithPath(path); _aaf != nil {
		return _aaf
	}
	return nil
}
func (_cdbe *CT_OMathArg) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _cdbe.ArgPr != nil {
		_dbbd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0061\u0072\u0067\u0050\u0072"}}
		e.EncodeElement(_cdbe.ArgPr, _dbbd)
	}
	if _cdbe.EG_OMathMathElements != nil {
		for _, _aebe := range _cdbe.EG_OMathMathElements {
			_aebe.MarshalXML(e, _f.StartElement{})
		}
	}
	if _cdbe.CtrlPr != nil {
		_ecba := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cdbe.CtrlPr, _ecba)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_ScriptStyle and its children
func (_gebge *EG_ScriptStyle) Validate() error {
	return _gebge.ValidateWithPath("\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074S\u0074\u0079\u006c\u0065")
}
func (_aaa *CT_Bar) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aaa.BarPr != nil {
		_bae := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0062\u0061\u0072\u0050\u0072"}}
		e.EncodeElement(_aaa.BarPr, _bae)
	}
	_bdd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aaa.E, _bdd)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OnOff and its children
func (_agea *CT_OnOff) Validate() error {
	return _agea.ValidateWithPath("\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066")
}

type CT_Char struct{ ValAttr string }

func (_ffa *CT_Integer2) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", _ffa.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_dcbg *CT_YAlign) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dcbg.ValAttr = _g.ST_YAlign(1)
	for _, _afgf := range start.Attr {
		if _afgf.Name.Local == "\u0076\u0061\u006c" {
			_dcbg.ValAttr.UnmarshalXMLAttr(_afgf)
			continue
		}
	}
	for {
		_ffab, _gdcfc := d.Token()
		if _gdcfc != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0059\u0041\u006ci\u0067\u006e\u003a\u0020\u0025\u0073", _gdcfc)
		}
		if _cdad, _aeed := _ffab.(_f.EndElement); _aeed && _cdad.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_LimLoc and its children
func (_cafg *CT_LimLoc) Validate() error {
	return _cafg.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u004c\u006fc")
}
func (_dbfb *CT_SpacingRule) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", _dbfb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TopBotUnset ST_TopBot = 0
	ST_TopBotTop   ST_TopBot = 1
	ST_TopBotBot   ST_TopBot = 2
)

// ValidateWithPath validates the CT_BorderBoxPr and its children, prefixing error messages with path
func (_cad *CT_BorderBoxPr) ValidateWithPath(path string) error {
	if _cad.HideTop != nil {
		if _dcc := _cad.HideTop.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0054\u006f\u0070"); _dcc != nil {
			return _dcc
		}
	}
	if _cad.HideBot != nil {
		if _gdcf := _cad.HideBot.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0042\u006f\u0074"); _gdcf != nil {
			return _gdcf
		}
	}
	if _cad.HideLeft != nil {
		if _ff := _cad.HideLeft.ValidateWithPath(path + "\u002fH\u0069\u0064\u0065\u004c\u0065\u0066t"); _ff != nil {
			return _ff
		}
	}
	if _cad.HideRight != nil {
		if _db := _cad.HideRight.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0052\u0069\u0067\u0068\u0074"); _db != nil {
			return _db
		}
	}
	if _cad.StrikeH != nil {
		if _dg := _cad.StrikeH.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u0048"); _dg != nil {
			return _dg
		}
	}
	if _cad.StrikeV != nil {
		if _afd := _cad.StrikeV.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u0056"); _afd != nil {
			return _afd
		}
	}
	if _cad.StrikeBLTR != nil {
		if _ffg := _cad.StrikeBLTR.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"); _ffg != nil {
			return _ffg
		}
	}
	if _cad.StrikeTLBR != nil {
		if _ad := _cad.StrikeTLBR.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"); _ad != nil {
			return _ad
		}
	}
	if _cad.CtrlPr != nil {
		if _gge := _cad.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gge != nil {
			return _gge
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BarPr and its children, prefixing error messages with path
func (_fee *CT_BarPr) ValidateWithPath(path string) error {
	if _fee.Pos != nil {
		if _aad := _fee.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _aad != nil {
			return _aad
		}
	}
	if _fee.CtrlPr != nil {
		if _fd := _fee.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _fd != nil {
			return _fd
		}
	}
	return nil
}
func NewCT_BreakBinSub() *CT_BreakBinSub   { _gagc := &CT_BreakBinSub{}; return _gagc }
func NewCT_TwipsMeasure() *CT_TwipsMeasure { _acdf := &CT_TwipsMeasure{}; return _acdf }
func (_fedb ST_Style) String() string {
	switch _fedb {
	case 0:
		return ""
	case 1:
		return "\u0070"
	case 2:
		return "\u0062"
	case 3:
		return "\u0069"
	case 4:
		return "\u0062\u0069"
	}
	return ""
}
func (_bdag *CT_MathPrChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bdag.WrapIndent != nil {
		_babf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0077r\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}}
		e.EncodeElement(_bdag.WrapIndent, _babf)
	}
	if _bdag.WrapRight != nil {
		_gggf := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0077\u0072\u0061\u0070\u0052\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_bdag.WrapRight, _gggf)
	}
	return nil
}
func (_egfeb ST_Shp) Validate() error { return _egfeb.ValidateWithPath("") }
func (_gceb *CT_OMathJc) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _bfaa := range start.Attr {
		if _bfaa.Name.Local == "\u0076\u0061\u006c" {
			_gceb.ValAttr.UnmarshalXMLAttr(_bfaa)
			continue
		}
	}
	for {
		_aeea, _caab := d.Token()
		if _caab != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063\u003a\u0020%\u0073", _caab)
		}
		if _feag, _cfaaf := _aeea.(_f.EndElement); _cfaaf && _feag.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Box and its children, prefixing error messages with path
func (_fdc *CT_Box) ValidateWithPath(path string) error {
	if _fdc.BoxPr != nil {
		if _aec := _fdc.BoxPr.ValidateWithPath(path + "\u002f\u0042\u006f\u0078\u0050\u0072"); _aec != nil {
			return _aec
		}
	}
	if _fde := _fdc.E.ValidateWithPath(path + "\u002f\u0045"); _fde != nil {
		return _fde
	}
	return nil
}

type CT_SSubSup struct {
	SSubSupPr *CT_SSubSupPr
	E         *CT_OMathArg
	Sub       *CT_OMathArg
	Sup       *CT_OMathArg
}

func (_efa *CT_Nary) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _efa.NaryPr != nil {
		_cfed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006e\u0061\u0072\u0079\u0050\u0072"}}
		e.EncodeElement(_efa.NaryPr, _cfed)
	}
	_aebf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_efa.Sub, _aebf)
	_dfbe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_efa.Sup, _dfbe)
	_gffg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_efa.E, _gffg)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_fagaf ST_BreakBin) ValidateWithPath(path string) error {
	switch _fagaf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fagaf))
	}
	return nil
}
func NewCT_EqArrPr() *CT_EqArrPr { _bec := &CT_EqArrPr{}; return _bec }
func NewCT_Script() *CT_Script   { _dae := &CT_Script{}; return _dae }
func (_dbec *CT_M) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dbec.MPr != nil {
		_dddg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006dP\u0072"}}
		e.EncodeElement(_dbec.MPr, _dddg)
	}
	_ccdd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0072"}}
	for _, _bdce := range _dbec.Mr {
		e.EncodeElement(_bdce, _ccdd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_MC struct{ McPr *CT_MCPr }

func (_bgcea *ST_Jc) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bgcea = 0
	case "\u006c\u0065\u0066\u0074":
		*_bgcea = 1
	case "\u0072\u0069\u0067h\u0074":
		*_bgcea = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_bgcea = 3
	case "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_bgcea = 4
	}
	return nil
}
func (_fegc *CT_OMathParaPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _fegc.Jc != nil {
		_fdeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006a\u0063"}}
		e.EncodeElement(_fegc.Jc, _fdeg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MCPr and its children, prefixing error messages with path
func (_dffc *CT_MCPr) ValidateWithPath(path string) error {
	if _dffc.Count != nil {
		if _ffdc := _dffc.Count.ValidateWithPath(path + "\u002f\u0043\u006f\u0075\u006e\u0074"); _ffdc != nil {
			return _ffdc
		}
	}
	if _dffc.McJc != nil {
		if _gbbgf := _dffc.McJc.ValidateWithPath(path + "\u002f\u004d\u0063J\u0063"); _gbbgf != nil {
			return _gbbgf
		}
	}
	return nil
}
func NewCT_MathPrChoice() *CT_MathPrChoice { _eged := &CT_MathPrChoice{}; return _eged }
func NewCT_FType() *CT_FType               { _bce := &CT_FType{}; _bce.ValAttr = ST_FType(1); return _bce }
func (_eddf *CT_OMathArgPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_adgb:
	for {
		_eefe, _aebdc := d.Token()
		if _aebdc != nil {
			return _aebdc
		}
		switch _fffge := _eefe.(type) {
		case _f.StartElement:
			switch _fffge.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0072\u0067S\u007a"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0072\u0067S\u007a"}:
				_eddf.ArgSz = NewCT_Integer2()
				if _edae := d.DecodeElement(_eddf.ArgSz, &_fffge); _edae != nil {
					return _edae
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fM\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072 \u0025\u0076", _fffge.Name)
				if _gabg := d.Skip(); _gabg != nil {
					return _gabg
				}
			}
		case _f.EndElement:
			break _adgb
		case _f.CharData:
		}
	}
	return nil
}
func (_eafgd *CT_SSub) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _eafgd.SSubPr != nil {
		_gefc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_eafgd.SSubPr, _gefc)
	}
	_edfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_eafgd.E, _edfe)
	_cdca := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_eafgd.Sub, _cdca)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_aeee *CT_UnSignedInteger) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fcfbd := range start.Attr {
		if _fcfbd.Name.Local == "\u0076\u0061\u006c" {
			_cbab, _agfbc := _d.ParseUint(_fcfbd.Value, 10, 32)
			if _agfbc != nil {
				return _agfbc
			}
			_aeee.ValAttr = uint32(_cbab)
			continue
		}
	}
	for {
		_fbc, _eggbee := d.Token()
		if _eggbee != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0055\u006e\u0053\u0069\u0067\u006e\u0065d\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _eggbee)
		}
		if _cacc, _acfe := _fbc.(_f.EndElement); _acfe && _cacc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_Shp byte
type CT_SSubPr struct{ CtrlPr *CT_CtrlPr }

// ValidateWithPath validates the CT_RChoice and its children, prefixing error messages with path
func (_gafc *CT_RChoice) ValidateWithPath(path string) error {
	for _dfcb, _edbac := range _gafc.T {
		if _fggce := _edbac.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0054\u005b\u0025\u0064\u005d", path, _dfcb)); _fggce != nil {
			return _fggce
		}
	}
	return nil
}
func (_fggde ST_LimLoc) ValidateWithPath(path string) error {
	switch _fggde {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fggde))
	}
	return nil
}
func (_bgff *CT_SPrePr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bgff.CtrlPr != nil {
		_bedb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bgff.CtrlPr, _bedb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Style and its children, prefixing error messages with path
func (_dbda *CT_Style) ValidateWithPath(path string) error {
	if _gaga := _dbda.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gaga != nil {
		return _gaga
	}
	return nil
}

// Validate validates the CT_SPre and its children
func (_efbcf *CT_SPre) Validate() error {
	return _efbcf.ValidateWithPath("\u0043T\u005f\u0053\u0050\u0072\u0065")
}

type ST_FType byte

func (_efgg *CT_SSubSup) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _efgg.SSubSupPr != nil {
		_agddf := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0073\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072"}}
		e.EncodeElement(_efgg.SSubSupPr, _agddf)
	}
	_fdea := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_efgg.E, _fdea)
	_facb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_efgg.Sub, _facb)
	_efeg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_efgg.Sup, _efeg)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

const (
	ST_LimLocUnset  ST_LimLoc = 0
	ST_LimLocUndOvr ST_LimLoc = 1
	ST_LimLocSubSup ST_LimLoc = 2
)

type CT_MathPr struct {
	MathFont  *CT_String
	BrkBin    *CT_BreakBin
	BrkBinSub *CT_BreakBinSub
	SmallFrac *CT_OnOff
	DispDef   *CT_OnOff
	LMargin   *CT_TwipsMeasure
	RMargin   *CT_TwipsMeasure
	DefJc     *CT_OMathJc
	PreSp     *CT_TwipsMeasure
	PostSp    *CT_TwipsMeasure
	InterSp   *CT_TwipsMeasure
	IntraSp   *CT_TwipsMeasure
	Choice    *CT_MathPrChoice
	IntLim    *CT_LimLoc
	NaryLim   *CT_LimLoc
}

// ValidateWithPath validates the CT_SSub and its children, prefixing error messages with path
func (_edeb *CT_SSub) ValidateWithPath(path string) error {
	if _edeb.SSubPr != nil {
		if _geag := _edeb.SSubPr.ValidateWithPath(path + "\u002fS\u0053\u0075\u0062\u0050\u0072"); _geag != nil {
			return _geag
		}
	}
	if _cdga := _edeb.E.ValidateWithPath(path + "\u002f\u0045"); _cdga != nil {
		return _cdga
	}
	if _beed := _edeb.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _beed != nil {
		return _beed
	}
	return nil
}
func NewCT_OMathArg() *CT_OMathArg { _agbaf := &CT_OMathArg{}; return _agbaf }

// ValidateWithPath validates the CT_CtrlPr and its children, prefixing error messages with path
func (_ecd *CT_CtrlPr) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_NaryPr and its children, prefixing error messages with path
func (_effa *CT_NaryPr) ValidateWithPath(path string) error {
	if _effa.Chr != nil {
		if _efgd := _effa.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _efgd != nil {
			return _efgd
		}
	}
	if _effa.LimLoc != nil {
		if _bcbb := _effa.LimLoc.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0063"); _bcbb != nil {
			return _bcbb
		}
	}
	if _effa.Grow != nil {
		if _caeg := _effa.Grow.ValidateWithPath(path + "\u002f\u0047\u0072o\u0077"); _caeg != nil {
			return _caeg
		}
	}
	if _effa.SubHide != nil {
		if _gfab := _effa.SubHide.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0048\u0069\u0064\u0065"); _gfab != nil {
			return _gfab
		}
	}
	if _effa.SupHide != nil {
		if _aaeea := _effa.SupHide.ValidateWithPath(path + "\u002f\u0053\u0075\u0070\u0048\u0069\u0064\u0065"); _aaeea != nil {
			return _aaeea
		}
	}
	if _effa.CtrlPr != nil {
		if _dfda := _effa.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dfda != nil {
			return _dfda
		}
	}
	return nil
}
func NewCT_BorderBox() *CT_BorderBox { _dee := &CT_BorderBox{}; _dee.E = NewCT_OMathArg(); return _dee }
func (_gdcg *CT_M) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dcd:
	for {
		_ffgg, _fccfg := d.Token()
		if _fccfg != nil {
			return _fccfg
		}
		switch _cga := _ffgg.(type) {
		case _f.StartElement:
			switch _cga.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0050\u0072"}:
				_gdcg.MPr = NewCT_MPr()
				if _gddc := d.DecodeElement(_gdcg.MPr, &_cga); _gddc != nil {
					return _gddc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0072"}:
				_ffb := NewCT_MR()
				if _bfab := d.DecodeElement(_ffb, &_cga); _bfab != nil {
					return _bfab
				}
				_gdcg.Mr = append(_gdcg.Mr, _ffb)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u004d\u0020\u0025\u0076", _cga.Name)
				if _eefb := d.Skip(); _eefb != nil {
					return _eefb
				}
			}
		case _f.EndElement:
			break _dcd
		case _f.CharData:
		}
	}
	return nil
}

type CT_Acc struct {
	AccPr *CT_AccPr
	E     *CT_OMathArg
}

func (_deeg *CT_Integer255) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_deeg.ValAttr = 1
	for _, _gaed := range start.Attr {
		if _gaed.Name.Local == "\u0076\u0061\u006c" {
			_cbfb, _adge := _d.ParseInt(_gaed.Value, 10, 64)
			if _adge != nil {
				return _adge
			}
			_deeg.ValAttr = _cbfb
			continue
		}
	}
	for {
		_acg, _cgba := d.Token()
		if _cgba != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0074e\u0067e\u0072\u0032\u0035\u0035\u003a\u0020\u0025s", _cgba)
		}
		if _acbf, _acaf := _acg.(_f.EndElement); _acaf && _acbf.Name == start.Name {
			break
		}
	}
	return nil
}
func ParseUnionST_TwipsMeasure(s string) (_g.ST_TwipsMeasure, error) {
	_cbeed := _g.ST_TwipsMeasure{}
	if _g.ST_PositiveUniversalMeasurePatternRe.MatchString(s) {
		_cbeed.ST_PositiveUniversalMeasure = &s
	} else {
		_daaef, _ecbab := _d.ParseFloat(s, 64)
		if _ecbab != nil {
			return _cbeed, _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0075\u0069\u006e\u0074\u003a\u0020%\u0073", s, _ecbab)
		}
		_cbeed.ST_UnsignedDecimalNumber = _bf.Uint64(uint64(_daaef))
	}
	return _cbeed, nil
}
func (_egac ST_BreakBinSub) String() string {
	switch _egac {
	case 0:
		return ""
	case 1:
		return "\u002d\u002d"
	case 2:
		return "\u002d\u002b"
	case 3:
		return "\u002b\u002d"
	}
	return ""
}
func NewCT_UnSignedInteger() *CT_UnSignedInteger { _fbe := &CT_UnSignedInteger{}; return _fbe }

type OMathPara struct{ CT_OMathPara }

func (_cdgcc ST_BreakBinSub) ValidateWithPath(path string) error {
	switch _cdgcc {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdgcc))
	}
	return nil
}
func (_efff *CT_MathPrChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bbbc:
	for {
		_agec, _gccfc := d.Token()
		if _gccfc != nil {
			return _gccfc
		}
		switch _ccec := _agec.(type) {
		case _f.StartElement:
			switch _ccec.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_efff.WrapIndent = NewCT_TwipsMeasure()
				if _adga := d.DecodeElement(_efff.WrapIndent, &_ccec); _adga != nil {
					return _adga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_efff.WrapRight = NewCT_OnOff()
				if _dgbcf := d.DecodeElement(_efff.WrapRight, &_ccec); _dgbcf != nil {
					return _dgbcf
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0074h\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ccec.Name)
				if _cadd := d.Skip(); _cadd != nil {
					return _cadd
				}
			}
		case _f.EndElement:
			break _bbbc
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SSup and its children
func (_ddcc *CT_SSup) Validate() error {
	return _ddcc.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0070")
}

// ValidateWithPath validates the CT_YAlign and its children, prefixing error messages with path
func (_bcdgf *CT_YAlign) ValidateWithPath(path string) error {
	if _bcdgf.ValAttr == _g.ST_YAlignUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _becd := _bcdgf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _becd != nil {
		return _becd
	}
	return nil
}
func (_fdcc *CT_RPR) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ebded:
	for {
		_ebgdd, _gebe := d.Token()
		if _gebe != nil {
			return _gebe
		}
		switch _aecd := _ebgdd.(type) {
		case _f.StartElement:
			switch _aecd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u0074"}:
				_fdcc.Lit = NewCT_OnOff()
				if _badd := d.DecodeElement(_fdcc.Lit, &_aecd); _badd != nil {
					return _badd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u006f\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u006f\u0072"}:
				_fdcc.Choice = NewCT_RPRChoice()
				if _edga := d.DecodeElement(&_fdcc.Choice.Nor, &_aecd); _edga != nil {
					return _edga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b"}:
				_fdcc.Brk = NewCT_ManualBreak()
				if _eacd := d.DecodeElement(_fdcc.Brk, &_aecd); _eacd != nil {
					return _eacd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e"}:
				_fdcc.Aln = NewCT_OnOff()
				if _ffec := d.DecodeElement(_fdcc.Aln, &_aecd); _ffec != nil {
					return _ffec
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0050\u0052\u0020\u0025\u0076", _aecd.Name)
				if _egbdd := d.Skip(); _egbdd != nil {
					return _egbdd
				}
			}
		case _f.EndElement:
			break _ebded
		case _f.CharData:
		}
	}
	return nil
}

type OMath struct{ CT_OMath }

func (_dcgd *OMath) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d:\u006f\u004d\u0061\u0074\u0068"
	return _dcgd.CT_OMath.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_RPR and its children, prefixing error messages with path
func (_gabc *CT_RPR) ValidateWithPath(path string) error {
	if _gabc.Lit != nil {
		if _acfa := _gabc.Lit.ValidateWithPath(path + "\u002f\u004c\u0069\u0074"); _acfa != nil {
			return _acfa
		}
	}
	if _gabc.Choice != nil {
		if _fcad := _gabc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _fcad != nil {
			return _fcad
		}
	}
	if _gabc.Brk != nil {
		if _efgcd := _gabc.Brk.ValidateWithPath(path + "\u002f\u0042\u0072\u006b"); _efgcd != nil {
			return _efgcd
		}
	}
	if _gabc.Aln != nil {
		if _dbgc := _gabc.Aln.ValidateWithPath(path + "\u002f\u0041\u006c\u006e"); _dbgc != nil {
			return _dbgc
		}
	}
	return nil
}
func NewCT_DPr() *CT_DPr { _fea := &CT_DPr{}; return _fea }
func (_edgdb *CT_DPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eaddg:
	for {
		_efea, _cag := d.Token()
		if _cag != nil {
			return _cag
		}
		switch _aacd := _efea.(type) {
		case _f.StartElement:
			switch _aacd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0065\u0067\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0065\u0067\u0043\u0068\u0072"}:
				_edgdb.BegChr = NewCT_Char()
				if _cdg := d.DecodeElement(_edgdb.BegChr, &_aacd); _cdg != nil {
					return _cdg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0065\u0070\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0065\u0070\u0043\u0068\u0072"}:
				_edgdb.SepChr = NewCT_Char()
				if _egf := d.DecodeElement(_edgdb.SepChr, &_aacd); _egf != nil {
					return _egf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u006e\u0064\u0043\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u006e\u0064\u0043\u0068\u0072"}:
				_edgdb.EndChr = NewCT_Char()
				if _bbd := d.DecodeElement(_edgdb.EndChr, &_aacd); _bbd != nil {
					return _bbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}:
				_edgdb.Grow = NewCT_OnOff()
				if _cedf := d.DecodeElement(_edgdb.Grow, &_aacd); _cedf != nil {
					return _cedf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0068\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0068\u0070"}:
				_edgdb.Shp = NewCT_Shp()
				if _gcf := d.DecodeElement(_edgdb.Shp, &_aacd); _gcf != nil {
					return _gcf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_edgdb.CtrlPr = NewCT_CtrlPr()
				if _ab := d.DecodeElement(_edgdb.CtrlPr, &_aacd); _ab != nil {
					return _ab
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0050\u0072\u0020\u0025\u0076", _aacd.Name)
				if _fff := d.Skip(); _fff != nil {
					return _fff
				}
			}
		case _f.EndElement:
			break _eaddg
		case _f.CharData:
		}
	}
	return nil
}
func (_ccg *CT_Box) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ccg.BoxPr != nil {
		_fada := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0062\u006f\u0078\u0050\u0072"}}
		e.EncodeElement(_ccg.BoxPr, _fada)
	}
	_gddb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_ccg.E, _gddb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_OMathMathElements and its children, prefixing error messages with path
func (_affg *EG_OMathMathElements) ValidateWithPath(path string) error {
	if _affg.Acc != nil {
		if _dcbeg := _affg.Acc.ValidateWithPath(path + "\u002f\u0041\u0063\u0063"); _dcbeg != nil {
			return _dcbeg
		}
	}
	if _affg.Bar != nil {
		if _eaag := _affg.Bar.ValidateWithPath(path + "\u002f\u0042\u0061\u0072"); _eaag != nil {
			return _eaag
		}
	}
	if _affg.Box != nil {
		if _ggdbf := _affg.Box.ValidateWithPath(path + "\u002f\u0042\u006f\u0078"); _ggdbf != nil {
			return _ggdbf
		}
	}
	if _affg.BorderBox != nil {
		if _bcdd := _affg.BorderBox.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078"); _bcdd != nil {
			return _bcdd
		}
	}
	if _affg.D != nil {
		if _ageb := _affg.D.ValidateWithPath(path + "\u002f\u0044"); _ageb != nil {
			return _ageb
		}
	}
	if _affg.EqArr != nil {
		if _egab := _affg.EqArr.ValidateWithPath(path + "\u002f\u0045\u0071\u0041\u0072\u0072"); _egab != nil {
			return _egab
		}
	}
	if _affg.F != nil {
		if _bcbg := _affg.F.ValidateWithPath(path + "\u002f\u0046"); _bcbg != nil {
			return _bcbg
		}
	}
	if _affg.Func != nil {
		if _aggg := _affg.Func.ValidateWithPath(path + "\u002f\u0046\u0075n\u0063"); _aggg != nil {
			return _aggg
		}
	}
	if _affg.GroupChr != nil {
		if _bbcee := _affg.GroupChr.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0043\u0068r"); _bbcee != nil {
			return _bbcee
		}
	}
	if _affg.LimLow != nil {
		if _gdab := _affg.LimLow.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0077"); _gdab != nil {
			return _gdab
		}
	}
	if _affg.LimUpp != nil {
		if _afaa := _affg.LimUpp.ValidateWithPath(path + "\u002fL\u0069\u006d\u0055\u0070\u0070"); _afaa != nil {
			return _afaa
		}
	}
	if _affg.M != nil {
		if _fefa := _affg.M.ValidateWithPath(path + "\u002f\u004d"); _fefa != nil {
			return _fefa
		}
	}
	if _affg.Nary != nil {
		if _baeb := _affg.Nary.ValidateWithPath(path + "\u002f\u004e\u0061r\u0079"); _baeb != nil {
			return _baeb
		}
	}
	if _affg.Phant != nil {
		if _babe := _affg.Phant.ValidateWithPath(path + "\u002f\u0050\u0068\u0061\u006e\u0074"); _babe != nil {
			return _babe
		}
	}
	if _affg.Rad != nil {
		if _bfcgc := _affg.Rad.ValidateWithPath(path + "\u002f\u0052\u0061\u0064"); _bfcgc != nil {
			return _bfcgc
		}
	}
	if _affg.SPre != nil {
		if _ecgf := _affg.SPre.ValidateWithPath(path + "\u002f\u0053\u0050r\u0065"); _ecgf != nil {
			return _ecgf
		}
	}
	if _affg.SSub != nil {
		if _gdbcf := _affg.SSub.ValidateWithPath(path + "\u002f\u0053\u0053u\u0062"); _gdbcf != nil {
			return _gdbcf
		}
	}
	if _affg.SSubSup != nil {
		if _cefca := _affg.SSubSup.ValidateWithPath(path + "\u002f\u0053\u0053\u0075\u0062\u0053\u0075\u0070"); _cefca != nil {
			return _cefca
		}
	}
	if _affg.SSup != nil {
		if _ffdfc := _affg.SSup.ValidateWithPath(path + "\u002f\u0053\u0053u\u0070"); _ffdfc != nil {
			return _ffdfc
		}
	}
	if _affg.R != nil {
		if _fcaf := _affg.R.ValidateWithPath(path + "\u002f\u0052"); _fcaf != nil {
			return _fcaf
		}
	}
	return nil
}
func (_eccf *CT_MC) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aagc:
	for {
		_eaed, _acff := d.Token()
		if _acff != nil {
			return _acff
		}
		switch _gdcc := _eaed.(type) {
		case _f.StartElement:
			switch _gdcc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u0050\u0072"}:
				_eccf.McPr = NewCT_MCPr()
				if _gef := d.DecodeElement(_eccf.McPr, &_gdcc); _gef != nil {
					return _gef
				}
			default:
				_bf.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fM\u0043 \u0025\u0076", _gdcc.Name)
				if _fbb := d.Skip(); _fbb != nil {
					return _fbb
				}
			}
		case _f.EndElement:
			break _aagc
		case _f.CharData:
		}
	}
	return nil
}
func (_faggf *CT_R) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _faggf.RPr != nil {
		_gdfe := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072P\u0072"}}
		e.EncodeElement(_faggf.RPr, _gdfe)
	}
	if _faggf.Choice != nil {
		for _, _cgge := range _faggf.Choice {
			_cgge.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Script and its children, prefixing error messages with path
func (_bgfce *CT_Script) ValidateWithPath(path string) error {
	if _cdcf := _bgfce.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cdcf != nil {
		return _cdcf
	}
	return nil
}
func NewCT_FuncPr() *CT_FuncPr { _ege := &CT_FuncPr{}; return _ege }

// Validate validates the CT_UnSignedInteger and its children
func (_egaag *CT_UnSignedInteger) Validate() error {
	return _egaag.ValidateWithPath("\u0043T\u005fU\u006e\u0053\u0069\u0067\u006ee\u0064\u0049n\u0074\u0065\u0067\u0065\u0072")
}
func NewCT_F() *CT_F {
	_gdb := &CT_F{}
	_gdb.Num = NewCT_OMathArg()
	_gdb.Den = NewCT_OMathArg()
	return _gdb
}

// ValidateWithPath validates the CT_DPr and its children, prefixing error messages with path
func (_ebde *CT_DPr) ValidateWithPath(path string) error {
	if _ebde.BegChr != nil {
		if _dbf := _ebde.BegChr.ValidateWithPath(path + "\u002fB\u0065\u0067\u0043\u0068\u0072"); _dbf != nil {
			return _dbf
		}
	}
	if _ebde.SepChr != nil {
		if _gbbg := _ebde.SepChr.ValidateWithPath(path + "\u002fS\u0065\u0070\u0043\u0068\u0072"); _gbbg != nil {
			return _gbbg
		}
	}
	if _ebde.EndChr != nil {
		if _adg := _ebde.EndChr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0068\u0072"); _adg != nil {
			return _adg
		}
	}
	if _ebde.Grow != nil {
		if _cecc := _ebde.Grow.ValidateWithPath(path + "\u002f\u0047\u0072o\u0077"); _cecc != nil {
			return _cecc
		}
	}
	if _ebde.Shp != nil {
		if _ge := _ebde.Shp.ValidateWithPath(path + "\u002f\u0053\u0068\u0070"); _ge != nil {
			return _ge
		}
	}
	if _ebde.CtrlPr != nil {
		if _fdfcc := _ebde.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _fdfcc != nil {
			return _fdfcc
		}
	}
	return nil
}

// Validate validates the CT_Rad and its children
func (_fdegf *CT_Rad) Validate() error {
	return _fdegf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0064")
}
func NewCT_LimUpp() *CT_LimUpp {
	_cacg := &CT_LimUpp{}
	_cacg.E = NewCT_OMathArg()
	_cacg.Lim = NewCT_OMathArg()
	return _cacg
}

type CT_Nary struct {
	NaryPr *CT_NaryPr
	Sub    *CT_OMathArg
	Sup    *CT_OMathArg
	E      *CT_OMathArg
}

func (_bgda *CT_SSubSupPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bgda.AlnScr != nil {
		_cdebf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061\u006c\u006e\u0053\u0063\u0072"}}
		e.EncodeElement(_bgda.AlnScr, _cdebf)
	}
	if _bgda.CtrlPr != nil {
		_adgcb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bgda.CtrlPr, _adgcb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_RChoice() *CT_RChoice { _eaaa := &CT_RChoice{}; return _eaaa }
func (_aga *CT_CtrlPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OMathArgPr and its children, prefixing error messages with path
func (_ecag *CT_OMathArgPr) ValidateWithPath(path string) error {
	if _ecag.ArgSz != nil {
		if _gefa := _ecag.ArgSz.ValidateWithPath(path + "\u002f\u0041\u0072\u0067\u0053\u007a"); _gefa != nil {
			return _gefa
		}
	}
	return nil
}
func (_cbe *CT_GroupChr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cbe.E = NewCT_OMathArg()
_dcbd:
	for {
		_ggba, _bcbc := d.Token()
		if _bcbc != nil {
			return _bcbc
		}
		switch _fce := _ggba.(type) {
		case _f.StartElement:
			switch _fce.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}:
				_cbe.GroupChrPr = NewCT_GroupChrPr()
				if _gcdf := d.DecodeElement(_cbe.GroupChrPr, &_fce); _gcdf != nil {
					return _gcdf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ggbad := d.DecodeElement(_cbe.E, &_fce); _ggbad != nil {
					return _ggbad
				}
			default:
				_bf.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0020\u0025\u0076", _fce.Name)
				if _fag := d.Skip(); _fag != nil {
					return _fag
				}
			}
		case _f.EndElement:
			break _dcbd
		case _f.CharData:
		}
	}
	return nil
}
func NewEG_OMathMathElements() *EG_OMathMathElements { _cggc := &EG_OMathMathElements{}; return _cggc }

type CT_SpacingRule struct{ ValAttr int64 }

func (_cea *CT_FuncPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_abf:
	for {
		_dfgf, _eef := d.Token()
		if _eef != nil {
			return _eef
		}
		switch _gfe := _dfgf.(type) {
		case _f.StartElement:
			switch _gfe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cea.CtrlPr = NewCT_CtrlPr()
				if _ceb := d.DecodeElement(_cea.CtrlPr, &_gfe); _ceb != nil {
					return _ceb
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u0075\u006ec\u0050\u0072 \u0025\u0076", _gfe.Name)
				if _dfbb := d.Skip(); _dfbb != nil {
					return _dfbb
				}
			}
		case _f.EndElement:
			break _abf
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_AccPr() *CT_AccPr { _cd := &CT_AccPr{}; return _cd }

// ValidateWithPath validates the EG_ScriptStyle and its children, prefixing error messages with path
func (_gdgbg *EG_ScriptStyle) ValidateWithPath(path string) error {
	if _gdgbg.Scr != nil {
		if _eege := _gdgbg.Scr.ValidateWithPath(path + "\u002f\u0053\u0063\u0072"); _eege != nil {
			return _eege
		}
	}
	if _gdgbg.Sty != nil {
		if _afacd := _gdgbg.Sty.ValidateWithPath(path + "\u002f\u0053\u0074\u0079"); _afacd != nil {
			return _afacd
		}
	}
	return nil
}
func (_aagbc *ST_TopBot) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_aagbc = 0
	case "\u0074\u006f\u0070":
		*_aagbc = 1
	case "\u0062\u006f\u0074":
		*_aagbc = 2
	}
	return nil
}

// Validate validates the CT_MathPr and its children
func (_eegf *CT_MathPr) Validate() error {
	return _eegf.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0074\u0068\u0050r")
}
func (_egdf ST_Style) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_ebfee := _f.Attr{}
	_ebfee.Name = name
	switch _egdf {
	case ST_StyleUnset:
		_ebfee.Value = ""
	case ST_StyleP:
		_ebfee.Value = "\u0070"
	case ST_StyleB:
		_ebfee.Value = "\u0062"
	case ST_StyleI:
		_ebfee.Value = "\u0069"
	case ST_StyleBi:
		_ebfee.Value = "\u0062\u0069"
	}
	return _ebfee, nil
}
func (_fbbb *ST_LimLoc) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_fbbb = 0
	case "\u0075\u006e\u0064\u004f\u0076\u0072":
		*_fbbb = 1
	case "\u0073\u0075\u0062\u0053\u0075\u0070":
		*_fbbb = 2
	}
	return nil
}
func NewCT_GroupChr() *CT_GroupChr { _afdd := &CT_GroupChr{}; _afdd.E = NewCT_OMathArg(); return _afdd }
func NewCT_SSupPr() *CT_SSupPr     { _dfca := &CT_SSupPr{}; return _dfca }

type CT_Func struct {
	FuncPr *CT_FuncPr
	FName  *CT_OMathArg
	E      *CT_OMathArg
}

func NewOMathPara() *OMathPara {
	_cgdbb := &OMathPara{}
	_cgdbb.CT_OMathPara = *NewCT_OMathPara()
	return _cgdbb
}

type CT_Integer2 struct{ ValAttr int64 }

func (_gff *CT_EqArr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dgbe:
	for {
		_adfb, _dbe := d.Token()
		if _dbe != nil {
			return _dbe
		}
		switch _gbe := _adfb.(type) {
		case _f.StartElement:
			switch _gbe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065q\u0041\u0072\u0072\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065q\u0041\u0072\u0072\u0050\u0072"}:
				_gff.EqArrPr = NewCT_EqArrPr()
				if _age := d.DecodeElement(_gff.EqArrPr, &_gbe); _age != nil {
					return _age
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_agbb := NewCT_OMathArg()
				if _aacf := d.DecodeElement(_agbb, &_gbe); _aacf != nil {
					return _aacf
				}
				_gff.E = append(_gff.E, _agbb)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0020\u0025\u0076", _gbe.Name)
				if _efbc := d.Skip(); _efbc != nil {
					return _efbc
				}
			}
		case _f.EndElement:
			break _dgbe
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_Style() *CT_Style { _fcdd := &CT_Style{}; return _fcdd }

// Validate validates the CT_Text and its children
func (_bdef *CT_Text) Validate() error {
	return _bdef.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074")
}
func NewCT_GroupChrPr() *CT_GroupChrPr { _gad := &CT_GroupChrPr{}; return _gad }
func (_babed ST_BreakBin) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_ecef := _f.Attr{}
	_ecef.Name = name
	switch _babed {
	case ST_BreakBinUnset:
		_ecef.Value = ""
	case ST_BreakBinBefore:
		_ecef.Value = "\u0062\u0065\u0066\u006f\u0072\u0065"
	case ST_BreakBinAfter:
		_ecef.Value = "\u0061\u0066\u0074e\u0072"
	case ST_BreakBinRepeat:
		_ecef.Value = "\u0072\u0065\u0070\u0065\u0061\u0074"
	}
	return _ecef, nil
}
func (_agb *CT_D) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _agb.DPr != nil {
		_acf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064P\u0072"}}
		e.EncodeElement(_agb.DPr, _acf)
	}
	_eba := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	for _, _fgb := range _agb.E {
		e.EncodeElement(_fgb, _eba)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_fafa *CT_MathPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ebf:
	for {
		_faa, _eag := d.Token()
		if _eag != nil {
			return _eag
		}
		switch _bfdgg := _faa.(type) {
		case _f.StartElement:
			switch _bfdgg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}:
				_fafa.MathFont = NewCT_String()
				if _cbd := d.DecodeElement(_fafa.MathFont, &_bfdgg); _cbd != nil {
					return _cbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}:
				_fafa.BrkBin = NewCT_BreakBin()
				if _ccge := d.DecodeElement(_fafa.BrkBin, &_bfdgg); _ccge != nil {
					return _ccge
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}:
				_fafa.BrkBinSub = NewCT_BreakBinSub()
				if _dcdb := d.DecodeElement(_fafa.BrkBinSub, &_bfdgg); _dcdb != nil {
					return _dcdb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}:
				_fafa.SmallFrac = NewCT_OnOff()
				if _fgc := d.DecodeElement(_fafa.SmallFrac, &_bfdgg); _fgc != nil {
					return _fgc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}:
				_fafa.DispDef = NewCT_OnOff()
				if _edaga := d.DecodeElement(_fafa.DispDef, &_bfdgg); _edaga != nil {
					return _edaga
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}:
				_fafa.LMargin = NewCT_TwipsMeasure()
				if _adad := d.DecodeElement(_fafa.LMargin, &_bfdgg); _adad != nil {
					return _adad
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}:
				_fafa.RMargin = NewCT_TwipsMeasure()
				if _bbgdg := d.DecodeElement(_fafa.RMargin, &_bfdgg); _bbgdg != nil {
					return _bbgdg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}:
				_fafa.DefJc = NewCT_OMathJc()
				if _gfaa := d.DecodeElement(_fafa.DefJc, &_bfdgg); _gfaa != nil {
					return _gfaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}:
				_fafa.PreSp = NewCT_TwipsMeasure()
				if _ccbf := d.DecodeElement(_fafa.PreSp, &_bfdgg); _ccbf != nil {
					return _ccbf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}:
				_fafa.PostSp = NewCT_TwipsMeasure()
				if _gadd := d.DecodeElement(_fafa.PostSp, &_bfdgg); _gadd != nil {
					return _gadd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}:
				_fafa.InterSp = NewCT_TwipsMeasure()
				if _gcff := d.DecodeElement(_fafa.InterSp, &_bfdgg); _gcff != nil {
					return _gcff
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}:
				_fafa.IntraSp = NewCT_TwipsMeasure()
				if _fadb := d.DecodeElement(_fafa.IntraSp, &_bfdgg); _fadb != nil {
					return _fadb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_fafa.Choice = NewCT_MathPrChoice()
				if _eeea := d.DecodeElement(&_fafa.Choice.WrapIndent, &_bfdgg); _eeea != nil {
					return _eeea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_fafa.Choice = NewCT_MathPrChoice()
				if _fgef := d.DecodeElement(&_fafa.Choice.WrapRight, &_bfdgg); _fgef != nil {
					return _fgef
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}:
				_fafa.IntLim = NewCT_LimLoc()
				if _ceaca := d.DecodeElement(_fafa.IntLim, &_bfdgg); _ceaca != nil {
					return _ceaca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}:
				_fafa.NaryLim = NewCT_LimLoc()
				if _baed := d.DecodeElement(_fafa.NaryLim, &_bfdgg); _baed != nil {
					return _baed
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0074h\u0050\u0072 \u0025\u0076", _bfdgg.Name)
				if _ecdc := d.Skip(); _ecdc != nil {
					return _ecdc
				}
			}
		case _f.EndElement:
			break _ebf
		case _f.CharData:
		}
	}
	return nil
}
func (_dfaee *EG_ScriptStyle) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cbef:
	for {
		_gabb, _gebcc := d.Token()
		if _gebcc != nil {
			return _gebcc
		}
		switch _cdgd := _gabb.(type) {
		case _f.StartElement:
			switch _cdgd.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0063\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0063\u0072"}:
				_dfaee.Scr = NewCT_Script()
				if _acgbf := d.DecodeElement(_dfaee.Scr, &_cdgd); _acgbf != nil {
					return _acgbf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0079"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0079"}:
				_dfaee.Sty = NewCT_Style()
				if _geeg := d.DecodeElement(_dfaee.Sty, &_cdgd); _geeg != nil {
					return _geeg
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074\u0053t\u0079l\u0065\u0020\u0025\u0076", _cdgd.Name)
				if _dfab := d.Skip(); _dfab != nil {
					return _dfab
				}
			}
		case _f.EndElement:
			break _cbef
		case _f.CharData:
		}
	}
	return nil
}
func (_gfac *CT_Text) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _gfac.SpaceAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u003a\u0073\u0070\u0061\u0063e"}, Value: _b.Sprintf("\u0025\u0076", *_gfac.SpaceAttr)})
	}
	e.EncodeElement(_gfac.Content, start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_LimLowPr struct{ CtrlPr *CT_CtrlPr }
type CT_BoxPr struct {
	OpEmu   *CT_OnOff
	NoBreak *CT_OnOff
	Diff    *CT_OnOff
	Brk     *CT_ManualBreak
	Aln     *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

// Validate validates the CT_DPr and its children
func (_bee *CT_DPr) Validate() error {
	return _bee.ValidateWithPath("\u0043\u0054\u005f\u0044\u0050\u0072")
}
func (_bebdg ST_LimLoc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_bebdg.String(), start)
}
func (_bcecb *ST_BreakBinSub) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bcecb = 0
	case "\u002d\u002d":
		*_bcecb = 1
	case "\u002d\u002b":
		*_bcecb = 2
	case "\u002b\u002d":
		*_bcecb = 3
	}
	return nil
}
func (_gdce ST_Shp) ValidateWithPath(path string) error {
	switch _gdce {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdce))
	}
	return nil
}

type EG_OMathElements struct{ EG_OMathMathElements []*EG_OMathMathElements }

func (_fagc ST_LimLoc) String() string {
	switch _fagc {
	case 0:
		return ""
	case 1:
		return "\u0075\u006e\u0064\u004f\u0076\u0072"
	case 2:
		return "\u0073\u0075\u0062\u0053\u0075\u0070"
	}
	return ""
}

type CT_F struct {
	FPr *CT_FPr
	Num *CT_OMathArg
	Den *CT_OMathArg
}

func (_fedc ST_BreakBinSub) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_fedc.String(), start)
}
func NewCT_YAlign() *CT_YAlign { _gfff := &CT_YAlign{}; _gfff.ValAttr = _g.ST_YAlign(1); return _gfff }
func (_dgbed ST_TopBot) ValidateWithPath(path string) error {
	switch _dgbed {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgbed))
	}
	return nil
}
func (_dbcde ST_Script) ValidateWithPath(path string) error {
	switch _dbcde {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbcde))
	}
	return nil
}

// ValidateWithPath validates the CT_SPre and its children, prefixing error messages with path
func (_deea *CT_SPre) ValidateWithPath(path string) error {
	if _deea.SPrePr != nil {
		if _adcb := _deea.SPrePr.ValidateWithPath(path + "\u002fS\u0050\u0072\u0065\u0050\u0072"); _adcb != nil {
			return _adcb
		}
	}
	if _efdd := _deea.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _efdd != nil {
		return _efdd
	}
	if _bgac := _deea.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _bgac != nil {
		return _bgac
	}
	if _ebbe := _deea.E.ValidateWithPath(path + "\u002f\u0045"); _ebbe != nil {
		return _ebbe
	}
	return nil
}

type CT_MathPrChoice struct {
	WrapIndent *CT_TwipsMeasure
	WrapRight  *CT_OnOff
}

// ValidateWithPath validates the CT_R and its children, prefixing error messages with path
func (_dbgb *CT_R) ValidateWithPath(path string) error {
	if _dbgb.RPr != nil {
		if _gfcd := _dbgb.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _gfcd != nil {
			return _gfcd
		}
	}
	for _dgbce, _ddded := range _dbgb.Choice {
		if _fafaa := _ddded.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _dgbce)); _fafaa != nil {
			return _fafaa
		}
	}
	return nil
}
func (_bagdc *EG_OMathMathElements) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bagdc.Acc != nil {
		_abed := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0061c\u0063"}}
		e.EncodeElement(_bagdc.Acc, _abed)
	}
	if _bagdc.Bar != nil {
		_abge := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062a\u0072"}}
		e.EncodeElement(_bagdc.Bar, _abge)
	}
	if _bagdc.Box != nil {
		_dbfbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062o\u0078"}}
		e.EncodeElement(_bagdc.Box, _dbfbg)
	}
	if _bagdc.BorderBox != nil {
		_acga := _f.StartElement{Name: _f.Name{Local: "m\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078"}}
		e.EncodeElement(_bagdc.BorderBox, _acga)
	}
	if _bagdc.D != nil {
		_fgfff := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0064"}}
		e.EncodeElement(_bagdc.D, _fgfff)
	}
	if _bagdc.EqArr != nil {
		_baec := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0065\u0071\u0041\u0072\u0072"}}
		e.EncodeElement(_bagdc.EqArr, _baec)
	}
	if _bagdc.F != nil {
		_bccc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066"}}
		e.EncodeElement(_bagdc.F, _bccc)
	}
	if _bagdc.Func != nil {
		_aaec := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0066\u0075\u006e\u0063"}}
		e.EncodeElement(_bagdc.Func, _aaec)
	}
	if _bagdc.GroupChr != nil {
		_fgbb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}}
		e.EncodeElement(_bagdc.GroupChr, _fgbb)
	}
	if _bagdc.LimLow != nil {
		_cafa := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0077"}}
		e.EncodeElement(_bagdc.LimLow, _cafa)
	}
	if _bagdc.LimUpp != nil {
		_debcf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u0055\u0070\u0070"}}
		e.EncodeElement(_bagdc.LimUpp, _debcf)
	}
	if _bagdc.M != nil {
		_aaddg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d"}}
		e.EncodeElement(_bagdc.M, _aaddg)
	}
	if _bagdc.Nary != nil {
		_bbddf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006e\u0061\u0072\u0079"}}
		e.EncodeElement(_bagdc.Nary, _bbddf)
	}
	if _bagdc.Phant != nil {
		_deaa := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u0068\u0061\u006e\u0074"}}
		e.EncodeElement(_bagdc.Phant, _deaa)
	}
	if _bagdc.Rad != nil {
		_ecfb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072a\u0064"}}
		e.EncodeElement(_bagdc.Rad, _ecfb)
	}
	if _bagdc.SPre != nil {
		_gggec := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0050\u0072\u0065"}}
		e.EncodeElement(_bagdc.SPre, _gggec)
	}
	if _bagdc.SSub != nil {
		_efdf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0062"}}
		e.EncodeElement(_bagdc.SSub, _efdf)
	}
	if _bagdc.SSubSup != nil {
		_gdfa := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0073\u0053\u0075\u0062\u0053\u0075p"}}
		e.EncodeElement(_bagdc.SSubSup, _gdfa)
	}
	if _bagdc.SSup != nil {
		_deegb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0070"}}
		e.EncodeElement(_bagdc.SSup, _deegb)
	}
	if _bagdc.R != nil {
		_fgbg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072"}}
		e.EncodeElement(_bagdc.R, _fgbg)
	}
	return nil
}
func (_cgd *CT_F) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgd.Num = NewCT_OMathArg()
	_cgd.Den = NewCT_OMathArg()
_dcbf:
	for {
		_ggb, _ggeg := d.Token()
		if _ggeg != nil {
			return _ggeg
		}
		switch _ace := _ggb.(type) {
		case _f.StartElement:
			switch _ace.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0050\u0072"}:
				_cgd.FPr = NewCT_FPr()
				if _ecdb := d.DecodeElement(_cgd.FPr, &_ace); _ecdb != nil {
					return _ecdb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0075\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0075\u006d"}:
				if _bgf := d.DecodeElement(_cgd.Num, &_ace); _bgf != nil {
					return _bgf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u006e"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u006e"}:
				if _dcg := d.DecodeElement(_cgd.Den, &_ace); _dcg != nil {
					return _dcg
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0046\u0020\u0025\u0076", _ace.Name)
				if _dfd := d.Skip(); _dfd != nil {
					return _dfd
				}
			}
		case _f.EndElement:
			break _dcbf
		case _f.CharData:
		}
	}
	return nil
}

type CT_M struct {
	MPr *CT_MPr
	Mr  []*CT_MR
}

// ValidateWithPath validates the MathPr and its children, prefixing error messages with path
func (_gcgg *MathPr) ValidateWithPath(path string) error {
	if _fgeb := _gcgg.CT_MathPr.ValidateWithPath(path); _fgeb != nil {
		return _fgeb
	}
	return nil
}

// Validate validates the CT_GroupChr and its children
func (_egbd *CT_GroupChr) Validate() error {
	return _egbd.ValidateWithPath("C\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072")
}

// Validate validates the CT_Script and its children
func (_edgab *CT_Script) Validate() error {
	return _edgab.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0072\u0069\u0070t")
}
func (_adcbf *CT_Shp) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_egea, _ffac := _adcbf.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _ffac != nil {
		return _ffac
	}
	start.Attr = append(start.Attr, _egea)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_dgbf *CT_BreakBin) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _dgbf.ValAttr != ST_BreakBinUnset {
		_dag, _fdga := _dgbf.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _fdga != nil {
			return _fdga
		}
		start.Attr = append(start.Attr, _dag)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

const (
	ST_StyleUnset ST_Style = 0
	ST_StyleP     ST_Style = 1
	ST_StyleB     ST_Style = 2
	ST_StyleI     ST_Style = 3
	ST_StyleBi    ST_Style = 4
)

// ValidateWithPath validates the CT_SSupPr and its children, prefixing error messages with path
func (_ccce *CT_SSupPr) ValidateWithPath(path string) error {
	if _ccce.CtrlPr != nil {
		if _efca := _ccce.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _efca != nil {
			return _efca
		}
	}
	return nil
}

// Validate validates the CT_Func and its children
func (_acc *CT_Func) Validate() error {
	return _acc.ValidateWithPath("\u0043T\u005f\u0046\u0075\u006e\u0063")
}
func (_cefc *CT_ManualBreak) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cefc.AlnAtAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d:\u0061\u006c\u006e\u0041\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_cefc.AlnAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_DPr struct {
	BegChr *CT_Char
	SepChr *CT_Char
	EndChr *CT_Char
	Grow   *CT_OnOff
	Shp    *CT_Shp
	CtrlPr *CT_CtrlPr
}
type CT_SPre struct {
	SPrePr *CT_SPrePr
	Sub    *CT_OMathArg
	Sup    *CT_OMathArg
	E      *CT_OMathArg
}

func NewOMath() *OMath { _bccfg := &OMath{}; _bccfg.CT_OMath = *NewCT_OMath(); return _bccfg }
func (_cgg *CT_Func) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgg.FName = NewCT_OMathArg()
	_cgg.E = NewCT_OMathArg()
_bdg:
	for {
		_gdf, _efc := d.Token()
		if _efc != nil {
			return _efc
		}
		switch _gggc := _gdf.(type) {
		case _f.StartElement:
			switch _gggc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063\u0050\u0072"}:
				_cgg.FuncPr = NewCT_FuncPr()
				if _bbac := d.DecodeElement(_cgg.FuncPr, &_gggc); _bbac != nil {
					return _bbac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u004e\u0061m\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u004e\u0061m\u0065"}:
				if _caee := d.DecodeElement(_cgg.FName, &_gggc); _caee != nil {
					return _caee
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _add := d.DecodeElement(_cgg.E, &_gggc); _add != nil {
					return _add
				}
			default:
				_bf.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u006e\u0063\u0020\u0025\u0076", _gggc.Name)
				if _egfe := d.Skip(); _egfe != nil {
					return _egfe
				}
			}
		case _f.EndElement:
			break _bdg
		case _f.CharData:
		}
	}
	return nil
}
func (_ffcd ST_FType) ValidateWithPath(path string) error {
	switch _ffcd {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcd))
	}
	return nil
}

// ValidateWithPath validates the CT_SSubSupPr and its children, prefixing error messages with path
func (_cggdg *CT_SSubSupPr) ValidateWithPath(path string) error {
	if _cggdg.AlnScr != nil {
		if _gabed := _cggdg.AlnScr.ValidateWithPath(path + "\u002fA\u006c\u006e\u0053\u0063\u0072"); _gabed != nil {
			return _gabed
		}
	}
	if _cggdg.CtrlPr != nil {
		if _aeac := _cggdg.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aeac != nil {
			return _aeac
		}
	}
	return nil
}
func NewCT_Text() *CT_Text { _cadb := &CT_Text{}; return _cadb }
func NewCT_D() *CT_D       { _fdeb := &CT_D{}; return _fdeb }

// Validate validates the OMath and its children
func (_acfc *OMath) Validate() error { return _acfc.ValidateWithPath("\u004f\u004d\u0061t\u0068") }
func NewCT_Shp() *CT_Shp             { _cgdf := &CT_Shp{}; _cgdf.ValAttr = ST_Shp(1); return _cgdf }
func (_eacc *CT_MPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dca:
	for {
		_dddf, _faga := d.Token()
		if _faga != nil {
			return _faga
		}
		switch _cfbb := _dddf.(type) {
		case _f.StartElement:
			switch _cfbb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}:
				_eacc.BaseJc = NewCT_YAlign()
				if _cgde := d.DecodeElement(_eacc.BaseJc, &_cfbb); _cgde != nil {
					return _cgde
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070l\u0063\u0048\u0069\u0064\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070l\u0063\u0048\u0069\u0064\u0065"}:
				_eacc.PlcHide = NewCT_OnOff()
				if _cffb := d.DecodeElement(_eacc.PlcHide, &_cfbb); _cffb != nil {
					return _cffb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}:
				_eacc.RSpRule = NewCT_SpacingRule()
				if _caeed := d.DecodeElement(_eacc.RSpRule, &_cfbb); _caeed != nil {
					return _caeed
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063G\u0070\u0052\u0075\u006c\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063G\u0070\u0052\u0075\u006c\u0065"}:
				_eacc.CGpRule = NewCT_SpacingRule()
				if _gggg := d.DecodeElement(_eacc.CGpRule, &_cfbb); _gggg != nil {
					return _gggg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0053\u0070"}:
				_eacc.RSp = NewCT_UnSignedInteger()
				if _dadd := d.DecodeElement(_eacc.RSp, &_cfbb); _dadd != nil {
					return _dadd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0053\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0053\u0070"}:
				_eacc.CSp = NewCT_UnSignedInteger()
				if _cdeb := d.DecodeElement(_eacc.CSp, &_cfbb); _cdeb != nil {
					return _cdeb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0047\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0047\u0070"}:
				_eacc.CGp = NewCT_UnSignedInteger()
				if _bef := d.DecodeElement(_eacc.CGp, &_cfbb); _bef != nil {
					return _bef
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u0073"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u0073"}:
				_eacc.Mcs = NewCT_MCS()
				if _dfdc := d.DecodeElement(_eacc.Mcs, &_cfbb); _dfdc != nil {
					return _dfdc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_eacc.CtrlPr = NewCT_CtrlPr()
				if _fcbe := d.DecodeElement(_eacc.CtrlPr, &_cfbb); _fcbe != nil {
					return _fcbe
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0050\u0072\u0020\u0025\u0076", _cfbb.Name)
				if _afdce := d.Skip(); _afdce != nil {
					return _afdce
				}
			}
		case _f.EndElement:
			break _dca
		case _f.CharData:
		}
	}
	return nil
}

type CT_BreakBinSub struct{ ValAttr ST_BreakBinSub }

func (_ea *CT_AccPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fcf:
	for {
		_df, _cfc := d.Token()
		if _cfc != nil {
			return _cfc
		}
		switch _fcg := _df.(type) {
		case _f.StartElement:
			switch _fcg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_ea.Chr = NewCT_Char()
				if _bab := d.DecodeElement(_ea.Chr, &_fcg); _bab != nil {
					return _bab
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_ea.CtrlPr = NewCT_CtrlPr()
				if _bd := d.DecodeElement(_ea.CtrlPr, &_fcg); _bd != nil {
					return _bd
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072\u0020\u0025\u0076", _fcg.Name)
				if _eaf := d.Skip(); _eaf != nil {
					return _eaf
				}
			}
		case _f.EndElement:
			break _fcf
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Integer2 and its children
func (_dbfca *CT_Integer2) Validate() error {
	return _dbfca.ValidateWithPath("C\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032")
}

type CT_NaryPr struct {
	Chr     *CT_Char
	LimLoc  *CT_LimLoc
	Grow    *CT_OnOff
	SubHide *CT_OnOff
	SupHide *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

// ValidateWithPath validates the CT_RPRChoice and its children, prefixing error messages with path
func (_dec *CT_RPRChoice) ValidateWithPath(path string) error {
	if _dec.Nor != nil {
		if _ebaec := _dec.Nor.ValidateWithPath(path + "\u002f\u004e\u006f\u0072"); _ebaec != nil {
			return _ebaec
		}
	}
	return nil
}
func (_cabgb *ST_Script) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cabgb = 0
	case "\u0072\u006f\u006da\u006e":
		*_cabgb = 1
	case "\u0073\u0063\u0072\u0069\u0070\u0074":
		*_cabgb = 2
	case "\u0066r\u0061\u006b\u0074\u0075\u0072":
		*_cabgb = 3
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b":
		*_cabgb = 4
	case "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066":
		*_cabgb = 5
	case "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e":
		*_cabgb = 6
	}
	return nil
}

// Validate validates the CT_Integer255 and its children
func (_efbe *CT_Integer255) Validate() error {
	return _efbe.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u0035\u0035")
}

// Validate validates the CT_OMathJc and its children
func (_fced *CT_OMathJc) Validate() error {
	return _fced.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063")
}

// Validate validates the CT_M and its children
func (_gafb *CT_M) Validate() error { return _gafb.ValidateWithPath("\u0043\u0054\u005f\u004d") }
func NewCT_CtrlPr() *CT_CtrlPr      { _eae := &CT_CtrlPr{}; return _eae }
func NewCT_Char() *CT_Char          { _fadf := &CT_Char{}; return _fadf }
func (_cgea *CT_Phant) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgea.E = NewCT_OMathArg()
_dgbb:
	for {
		_afcf, _cfeg := d.Token()
		if _cfeg != nil {
			return _cfeg
		}
		switch _ebb := _afcf.(type) {
		case _f.StartElement:
			switch _ebb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070h\u0061\u006e\u0074\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070h\u0061\u006e\u0074\u0050\u0072"}:
				_cgea.PhantPr = NewCT_PhantPr()
				if _ecde := d.DecodeElement(_cgea.PhantPr, &_ebb); _ecde != nil {
					return _ecde
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _bgaf := d.DecodeElement(_cgea.E, &_ebb); _bgaf != nil {
					return _bgaf
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0020\u0025\u0076", _ebb.Name)
				if _fbg := d.Skip(); _fbg != nil {
					return _fbg
				}
			}
		case _f.EndElement:
			break _dgbb
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MC and its children, prefixing error messages with path
func (_bfdg *CT_MC) ValidateWithPath(path string) error {
	if _bfdg.McPr != nil {
		if _fgdb := _bfdg.McPr.ValidateWithPath(path + "\u002f\u004d\u0063P\u0072"); _fgdb != nil {
			return _fgdb
		}
	}
	return nil
}
func (_ddbb ST_BreakBinSub) Validate() error { return _ddbb.ValidateWithPath("") }

// ValidateWithPath validates the CT_Bar and its children, prefixing error messages with path
func (_ca *CT_Bar) ValidateWithPath(path string) error {
	if _ca.BarPr != nil {
		if _ga := _ca.BarPr.ValidateWithPath(path + "\u002f\u0042\u0061\u0072\u0050\u0072"); _ga != nil {
			return _ga
		}
	}
	if _baa := _ca.E.ValidateWithPath(path + "\u002f\u0045"); _baa != nil {
		return _baa
	}
	return nil
}

// ValidateWithPath validates the CT_RadPr and its children, prefixing error messages with path
func (_dgae *CT_RadPr) ValidateWithPath(path string) error {
	if _dgae.DegHide != nil {
		if _afcfa := _dgae.DegHide.ValidateWithPath(path + "\u002f\u0044\u0065\u0067\u0048\u0069\u0064\u0065"); _afcfa != nil {
			return _afcfa
		}
	}
	if _dgae.CtrlPr != nil {
		if _eeggf := _dgae.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _eeggf != nil {
			return _eeggf
		}
	}
	return nil
}
func (_ccbc *CT_EqArrPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ccbc.BaseJc != nil {
		_dgg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0062\u0061\u0073\u0065\u004a\u0063"}}
		e.EncodeElement(_ccbc.BaseJc, _dgg)
	}
	if _ccbc.MaxDist != nil {
		_fgf := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006d\u0061\u0078\u0044\u0069\u0073t"}}
		e.EncodeElement(_ccbc.MaxDist, _fgf)
	}
	if _ccbc.ObjDist != nil {
		_fba := _f.StartElement{Name: _f.Name{Local: "\u006d:\u006f\u0062\u006a\u0044\u0069\u0073t"}}
		e.EncodeElement(_ccbc.ObjDist, _fba)
	}
	if _ccbc.RSpRule != nil {
		_bbdd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0072\u0053\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_ccbc.RSpRule, _bbdd)
	}
	if _ccbc.RSp != nil {
		_dbcb := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0072S\u0070"}}
		e.EncodeElement(_ccbc.RSp, _dbcb)
	}
	if _ccbc.CtrlPr != nil {
		_efg := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ccbc.CtrlPr, _efg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_geecf ST_FType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_geecf.String(), start)
}

type ST_Script byte

func (_cbgd *CT_TopBot) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_dbdad, _caddg := _cbgd.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _caddg != nil {
		return _caddg
	}
	start.Attr = append(start.Attr, _dbdad)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Phant and its children
func (_ffbb *CT_Phant) Validate() error {
	return _ffbb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074")
}
func NewCT_SpacingRule() *CT_SpacingRule { _cebg := &CT_SpacingRule{}; _cebg.ValAttr = 0; return _cebg }
func (_eddad ST_Script) Validate() error { return _eddad.ValidateWithPath("") }
func (_dcef *CT_LimLoc) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_bfac, _dfde := _dcef.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _dfde != nil {
		return _dfde
	}
	start.Attr = append(start.Attr, _bfac)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_fdfb *CT_MR) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_adag := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	for _, _efba := range _fdfb.E {
		e.EncodeElement(_efba, _adag)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_bgfc *CT_OnOff) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fbacb := range start.Attr {
		if _fbacb.Name.Local == "\u0076\u0061\u006c" {
			_dgdcd, _eade := ParseUnionST_OnOff(_fbacb.Value)
			if _eade != nil {
				return _eade
			}
			_bgfc.ValAttr = &_dgdcd
			continue
		}
	}
	for {
		_eefce, _aabb := d.Token()
		if _aabb != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fO\u006e\u004f\u0066\u0066: \u0025\u0073", _aabb)
		}
		if _efgda, _bbea := _eefce.(_f.EndElement); _bbea && _efgda.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_OMathJc() *CT_OMathJc { _cabc := &CT_OMathJc{}; return _cabc }

type CT_Shp struct{ ValAttr ST_Shp }

func (_edg *CT_BarPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fcbb:
	for {
		_gdc, _ce := d.Token()
		if _ce != nil {
			return _ce
		}
		switch _cec := _gdc.(type) {
		case _f.StartElement:
			switch _cec.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073"}:
				_edg.Pos = NewCT_TopBot()
				if _af := d.DecodeElement(_edg.Pos, &_cec); _af != nil {
					return _af
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_edg.CtrlPr = NewCT_CtrlPr()
				if _baea := d.DecodeElement(_edg.CtrlPr, &_cec); _baea != nil {
					return _baea
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072\u0020\u0025\u0076", _cec.Name)
				if _eed := d.Skip(); _eed != nil {
					return _eed
				}
			}
		case _f.EndElement:
			break _fcbb
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CtrlPr and its children
func (_cedc *CT_CtrlPr) Validate() error {
	return _cedc.ValidateWithPath("\u0043T\u005f\u0043\u0074\u0072\u006c\u0050r")
}
func (_fadaa ST_LimLoc) Validate() error { return _fadaa.ValidateWithPath("") }
func (_faba *CT_Script) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _faba.ValAttr != ST_ScriptUnset {
		_bbcef, _egagd := _faba.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _egagd != nil {
			return _egagd
		}
		start.Attr = append(start.Attr, _bbcef)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Text and its children, prefixing error messages with path
func (_cfaf *CT_Text) ValidateWithPath(path string) error { return nil }
func NewCT_M() *CT_M                                      { _fggd := &CT_M{}; return _fggd }

// ValidateWithPath validates the CT_Func and its children, prefixing error messages with path
func (_fgd *CT_Func) ValidateWithPath(path string) error {
	if _fgd.FuncPr != nil {
		if _acbg := _fgd.FuncPr.ValidateWithPath(path + "\u002fF\u0075\u006e\u0063\u0050\u0072"); _acbg != nil {
			return _acbg
		}
	}
	if _gbc := _fgd.FName.ValidateWithPath(path + "\u002f\u0046\u004e\u0061\u006d\u0065"); _gbc != nil {
		return _gbc
	}
	if _gdfc := _fgd.E.ValidateWithPath(path + "\u002f\u0045"); _gdfc != nil {
		return _gdfc
	}
	return nil
}

// Validate validates the CT_Acc and its children
func (_fe *CT_Acc) Validate() error {
	return _fe.ValidateWithPath("\u0043\u0054\u005f\u0041\u0063\u0063")
}

type EG_ScriptStyle struct {
	Scr *CT_Script
	Sty *CT_Style
}
type CT_MPr struct {
	BaseJc  *CT_YAlign
	PlcHide *CT_OnOff
	RSpRule *CT_SpacingRule
	CGpRule *CT_SpacingRule
	RSp     *CT_UnSignedInteger
	CSp     *CT_UnSignedInteger
	CGp     *CT_UnSignedInteger
	Mcs     *CT_MCS
	CtrlPr  *CT_CtrlPr
}

func (_efgb ST_Style) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_efgb.String(), start)
}
func (_aaba *CT_EqArr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aaba.EqArrPr != nil {
		_dff := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0065\u0071\u0041\u0072\u0072\u0050r"}}
		e.EncodeElement(_aaba.EqArrPr, _dff)
	}
	_gccf := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	for _, _eff := range _aaba.E {
		e.EncodeElement(_eff, _gccf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TwipsMeasure and its children
func (_beab *CT_TwipsMeasure) Validate() error {
	return _beab.ValidateWithPath("\u0043T\u005fT\u0077\u0069\u0070\u0073\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
}

// ValidateWithPath validates the CT_Char and its children, prefixing error messages with path
func (_cde *CT_Char) ValidateWithPath(path string) error { return nil }
func (_ddfgg *CT_ManualBreak) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _eegd := range start.Attr {
		if _eegd.Name.Local == "\u0061\u006c\u006eA\u0074" {
			_dfce, _agg := _d.ParseInt(_eegd.Value, 10, 64)
			if _agg != nil {
				return _agg
			}
			_ddfgg.AlnAtAttr = &_dfce
			continue
		}
	}
	for {
		_bdfe, _afa := d.Token()
		if _afa != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fM\u0061\u006e\u0075\u0061\u006c\u0042\u0072\u0065\u0061\u006b:\u0020\u0025\u0073", _afa)
		}
		if _cdcbd, _dcf := _bdfe.(_f.EndElement); _dcf && _cdcbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_baedb *CT_SPre) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_baedb.Sub = NewCT_OMathArg()
	_baedb.Sup = NewCT_OMathArg()
	_baedb.E = NewCT_OMathArg()
_agcb:
	for {
		_bbcfe, _cdge := d.Token()
		if _cdge != nil {
			return _cdge
		}
		switch _edaef := _bbcfe.(type) {
		case _f.StartElement:
			switch _edaef.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065\u0050\u0072"}:
				_baedb.SPrePr = NewCT_SPrePr()
				if _afbe := d.DecodeElement(_baedb.SPrePr, &_edaef); _afbe != nil {
					return _afbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _bfcgd := d.DecodeElement(_baedb.Sub, &_edaef); _bfcgd != nil {
					return _bfcgd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _dfea := d.DecodeElement(_baedb.Sup, &_edaef); _dfea != nil {
					return _dfea
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _egdc := d.DecodeElement(_baedb.E, &_edaef); _egdc != nil {
					return _egdc
				}
			default:
				_bf.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0050\u0072\u0065\u0020\u0025\u0076", _edaef.Name)
				if _bbdg := d.Skip(); _bbdg != nil {
					return _bbdg
				}
			}
		case _f.EndElement:
			break _agcb
		case _f.CharData:
		}
	}
	return nil
}

type CT_RPR struct {
	Lit    *CT_OnOff
	Choice *CT_RPRChoice
	Brk    *CT_ManualBreak
	Aln    *CT_OnOff
}

func (_bgbc *CT_XAlign) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bgbc.ValAttr = _g.ST_XAlign(1)
	for _, _egbcb := range start.Attr {
		if _egbcb.Name.Local == "\u0076\u0061\u006c" {
			_bgbc.ValAttr.UnmarshalXMLAttr(_egbcb)
			continue
		}
	}
	for {
		_cdag, _fecf := d.Token()
		if _fecf != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0058\u0041\u006ci\u0067\u006e\u003a\u0020\u0025\u0073", _fecf)
		}
		if _dgeg, _efgf := _cdag.(_f.EndElement); _efgf && _dgeg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eee *CT_GroupChr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _eee.GroupChrPr != nil {
		_bdc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0067r\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}}
		e.EncodeElement(_eee.GroupChrPr, _bdc)
	}
	_bfd := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_eee.E, _bfd)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_bgcd *CT_LimLow) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bgcd.E = NewCT_OMathArg()
	_bgcd.Lim = NewCT_OMathArg()
_bagd:
	for {
		_ffge, _cdea := d.Token()
		if _cdea != nil {
			return _cdea
		}
		switch _aabe := _ffge.(type) {
		case _f.StartElement:
			switch _aabe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}:
				_bgcd.LimLowPr = NewCT_LimLowPr()
				if _eaa := d.DecodeElement(_bgcd.LimLowPr, &_aabe); _eaa != nil {
					return _eaa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _baf := d.DecodeElement(_bgcd.E, &_aabe); _baf != nil {
					return _baf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d"}:
				if _eccd := d.DecodeElement(_bgcd.Lim, &_aabe); _eccd != nil {
					return _eccd
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004c\u0069\u006dL\u006f\u0077 \u0025\u0076", _aabe.Name)
				if _geg := d.Skip(); _geg != nil {
					return _geg
				}
			}
		case _f.EndElement:
			break _bagd
		case _f.CharData:
		}
	}
	return nil
}
func (_aadb *CT_UnSignedInteger) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _b.Sprintf("\u0025\u0076", _aadb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MCS and its children, prefixing error messages with path
func (_bcf *CT_MCS) ValidateWithPath(path string) error {
	for _adbd, _ffca := range _bcf.Mc {
		if _cfge := _ffca.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u004d\u0063\u005b\u0025\u0064]", path, _adbd)); _cfge != nil {
			return _cfge
		}
	}
	return nil
}
func (_cfbf *CT_LimLowPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cbg:
	for {
		_feef, _cca := d.Token()
		if _cca != nil {
			return _cca
		}
		switch _aeeg := _feef.(type) {
		case _f.StartElement:
			switch _aeeg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cfbf.CtrlPr = NewCT_CtrlPr()
				if _bad := d.DecodeElement(_cfbf.CtrlPr, &_aeeg); _bad != nil {
					return _bad
				}
			default:
				_bf.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072\u0020\u0025\u0076", _aeeg.Name)
				if _eefc := d.Skip(); _eefc != nil {
					return _eefc
				}
			}
		case _f.EndElement:
			break _cbg
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_SSub() *CT_SSub {
	_gbbf := &CT_SSub{}
	_gbbf.E = NewCT_OMathArg()
	_gbbf.Sub = NewCT_OMathArg()
	return _gbbf
}
func ParseUnionST_OnOff(s string) (_g.ST_OnOff, error) { return _g.ParseUnionST_OnOff(s) }
func (_aegg *CT_Phant) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _aegg.PhantPr != nil {
		_bbdef := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0070\u0068\u0061\u006e\u0074\u0050r"}}
		e.EncodeElement(_aegg.PhantPr, _bbdef)
	}
	_faab := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aegg.E, _faab)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_daeb *CT_String) ValidateWithPath(path string) error { return nil }

type CT_SSub struct {
	SSubPr *CT_SSubPr
	E      *CT_OMathArg
	Sub    *CT_OMathArg
}

// ValidateWithPath validates the CT_SpacingRule and its children, prefixing error messages with path
func (_aaeae *CT_SpacingRule) ValidateWithPath(path string) error {
	if _aaeae.ValAttr < 0 {
		return _b.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _aaeae.ValAttr)
	}
	if _aaeae.ValAttr > 4 {
		return _b.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0034\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _aaeae.ValAttr)
	}
	return nil
}

// Validate validates the CT_SPrePr and its children
func (_fgff *CT_SPrePr) Validate() error {
	return _fgff.ValidateWithPath("\u0043T\u005f\u0053\u0050\u0072\u0065\u0050r")
}

type CT_TwipsMeasure struct{ ValAttr _g.ST_TwipsMeasure }

func (_daae *CT_MCPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _daae.Count != nil {
		_efbd := _f.StartElement{Name: _f.Name{Local: "\u006d:\u0063\u006f\u0075\u006e\u0074"}}
		e.EncodeElement(_daae.Count, _efbd)
	}
	if _daae.McJc != nil {
		_ffff := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u006d\u0063\u004a\u0063"}}
		e.EncodeElement(_daae.McJc, _ffff)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_Phant struct {
	PhantPr *CT_PhantPr
	E       *CT_OMathArg
}

func NewCT_OMathParaPr() *CT_OMathParaPr { _cabg := &CT_OMathParaPr{}; return _cabg }

// ValidateWithPath validates the EG_OMathElements and its children, prefixing error messages with path
func (_ceff *EG_OMathElements) ValidateWithPath(path string) error {
	for _bffa, _fdge := range _ceff.EG_OMathMathElements {
		if _bgcfb := _fdge.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0045\u0047\u005f\u004fM\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006ce\u006d\u0065\u006et\u0073[\u0025\u0064\u005d", path, _bffa)); _bgcfb != nil {
			return _bgcfb
		}
	}
	return nil
}
func (_dgfa *ST_TopBot) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gfbb, _bdcf := d.Token()
	if _bdcf != nil {
		return _bdcf
	}
	if _agdda, _ecgfa := _gfbb.(_f.EndElement); _ecgfa && _agdda.Name == start.Name {
		*_dgfa = 1
		return nil
	}
	if _gadb, _gacb := _gfbb.(_f.CharData); !_gacb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfbb)
	} else {
		switch string(_gadb) {
		case "":
			*_dgfa = 0
		case "\u0074\u006f\u0070":
			*_dgfa = 1
		case "\u0062\u006f\u0074":
			*_dgfa = 2
		}
	}
	_gfbb, _bdcf = d.Token()
	if _bdcf != nil {
		return _bdcf
	}
	if _eeda, _feab := _gfbb.(_f.EndElement); _feab && _eeda.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfbb)
}
func (_afeb *CT_Text) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _gcgb := range start.Attr {
		if _gcgb.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _gcgb.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_fcae, _gagb := _gcgb.Value, error(nil)
			if _gagb != nil {
				return _gagb
			}
			_afeb.SpaceAttr = &_fcae
			continue
		}
	}
	for {
		_ecage, _ccbfc := d.Token()
		if _ccbfc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _ccbfc)
		}
		if _geadf, _bdba := _ecage.(_f.CharData); _bdba {
			_afeb.Content = string(_geadf)
		}
		if _eddfd, _ccca := _ecage.(_f.EndElement); _ccca && _eddfd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_LimLowPr() *CT_LimLowPr { _ffdb := &CT_LimLowPr{}; return _ffdb }
func (_eefd *CT_GroupChrPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_acfd:
	for {
		_dffa, _bcc := d.Token()
		if _bcc != nil {
			return _bcc
		}
		switch _feae := _dffa.(type) {
		case _f.StartElement:
			switch _feae.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_eefd.Chr = NewCT_Char()
				if _bfa := d.DecodeElement(_eefd.Chr, &_feae); _bfa != nil {
					return _bfa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073"}:
				_eefd.Pos = NewCT_TopBot()
				if _dbfc := d.DecodeElement(_eefd.Pos, &_feae); _dbfc != nil {
					return _dbfc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0076\u0065\u0072\u0074\u004a\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0076\u0065\u0072\u0074\u004a\u0063"}:
				_eefd.VertJc = NewCT_TopBot()
				if _agc := d.DecodeElement(_eefd.VertJc, &_feae); _agc != nil {
					return _agc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_eefd.CtrlPr = NewCT_CtrlPr()
				if _bgec := d.DecodeElement(_eefd.CtrlPr, &_feae); _bgec != nil {
					return _bgec
				}
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072 \u0025\u0076", _feae.Name)
				if _fedd := d.Skip(); _fedd != nil {
					return _fedd
				}
			}
		case _f.EndElement:
			break _acfd
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Box and its children
func (_dgb *CT_Box) Validate() error {
	return _dgb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0078")
}

// Validate validates the CT_LimLowPr and its children
func (_fgda *CT_LimLowPr) Validate() error {
	return _fgda.ValidateWithPath("C\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072")
}
func (_gdaa *CT_LimUppPr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gdaa.CtrlPr != nil {
		_badc := _f.StartElement{Name: _f.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gdaa.CtrlPr, _badc)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EqArrPr and its children, prefixing error messages with path
func (_ffd *CT_EqArrPr) ValidateWithPath(path string) error {
	if _ffd.BaseJc != nil {
		if _eca := _ffd.BaseJc.ValidateWithPath(path + "\u002fB\u0061\u0073\u0065\u004a\u0063"); _eca != nil {
			return _eca
		}
	}
	if _ffd.MaxDist != nil {
		if _bbcf := _ffd.MaxDist.ValidateWithPath(path + "\u002f\u004d\u0061\u0078\u0044\u0069\u0073\u0074"); _bbcf != nil {
			return _bbcf
		}
	}
	if _ffd.ObjDist != nil {
		if _ccea := _ffd.ObjDist.ValidateWithPath(path + "\u002f\u004f\u0062\u006a\u0044\u0069\u0073\u0074"); _ccea != nil {
			return _ccea
		}
	}
	if _ffd.RSpRule != nil {
		if _ddfg := _ffd.RSpRule.ValidateWithPath(path + "\u002f\u0052\u0053\u0070\u0052\u0075\u006c\u0065"); _ddfg != nil {
			return _ddfg
		}
	}
	if _ffd.RSp != nil {
		if _agf := _ffd.RSp.ValidateWithPath(path + "\u002f\u0052\u0053\u0070"); _agf != nil {
			return _agf
		}
	}
	if _ffd.CtrlPr != nil {
		if _fab := _ffd.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _fab != nil {
			return _fab
		}
	}
	return nil
}

// Validate validates the CT_BorderBox and its children
func (_dfc *CT_BorderBox) Validate() error {
	return _dfc.ValidateWithPath("\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078")
}

// Validate validates the CT_LimUppPr and its children
func (_gcb *CT_LimUppPr) Validate() error {
	return _gcb.ValidateWithPath("C\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072")
}
func (_acea ST_Jc) String() string {
	switch _acea {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0072\u0069\u0067h\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	}
	return ""
}
func (_gfdcg *ST_FType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_edea, _fdce := d.Token()
	if _fdce != nil {
		return _fdce
	}
	if _dfbg, _ebcff := _edea.(_f.EndElement); _ebcff && _dfbg.Name == start.Name {
		*_gfdcg = 1
		return nil
	}
	if _aaca, _fgcfe := _edea.(_f.CharData); !_fgcfe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edea)
	} else {
		switch string(_aaca) {
		case "":
			*_gfdcg = 0
		case "\u0062\u0061\u0072":
			*_gfdcg = 1
		case "\u0073\u006b\u0077":
			*_gfdcg = 2
		case "\u006c\u0069\u006e":
			*_gfdcg = 3
		case "\u006e\u006f\u0042a\u0072":
			*_gfdcg = 4
		}
	}
	_edea, _fdce = d.Token()
	if _fdce != nil {
		return _fdce
	}
	if _ddag, _eefeg := _edea.(_f.EndElement); _eefeg && _ddag.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edea)
}
func (_beca *CT_R) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_cgca:
	for {
		_abd, _gdg := d.Token()
		if _gdg != nil {
			return _gdg
		}
		switch _ebcg := _abd.(type) {
		case _f.StartElement:
			switch _ebcg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0050\u0072"}:
				_beca.RPr = NewCT_RPR()
				if _gfec := d.DecodeElement(_beca.RPr, &_ebcg); _gfec != nil {
					return _gfec
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074"}:
				_addcb := NewCT_RChoice()
				if _bdgf := d.DecodeElement(&_addcb.T, &_ebcg); _bdgf != nil {
					return _bdgf
				}
				_beca.Choice = append(_beca.Choice, _addcb)
			default:
				_bf.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0052\u0020\u0025\u0076", _ebcg.Name)
				if _bcg := d.Skip(); _bcg != nil {
					return _bcg
				}
			}
		case _f.EndElement:
			break _cgca
		case _f.CharData:
		}
	}
	return nil
}
func (_ecbc ST_FType) String() string {
	switch _ecbc {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0072"
	case 2:
		return "\u0073\u006b\u0077"
	case 3:
		return "\u006c\u0069\u006e"
	case 4:
		return "\u006e\u006f\u0042a\u0072"
	}
	return ""
}

type CT_BarPr struct {
	Pos    *CT_TopBot
	CtrlPr *CT_CtrlPr
}

// Validate validates the CT_RPR and its children
func (_agce *CT_RPR) Validate() error {
	return _agce.ValidateWithPath("\u0043\u0054\u005f\u0052\u0050\u0052")
}

// ValidateWithPath validates the CT_SSubSup and its children, prefixing error messages with path
func (_ddg *CT_SSubSup) ValidateWithPath(path string) error {
	if _ddg.SSubSupPr != nil {
		if _fdag := _ddg.SSubSupPr.ValidateWithPath(path + "\u002f\u0053\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072"); _fdag != nil {
			return _fdag
		}
	}
	if _cacefe := _ddg.E.ValidateWithPath(path + "\u002f\u0045"); _cacefe != nil {
		return _cacefe
	}
	if _dacgg := _ddg.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _dacgg != nil {
		return _dacgg
	}
	if _gbd := _ddg.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _gbd != nil {
		return _gbd
	}
	return nil
}

// Validate validates the CT_R and its children
func (_cabga *CT_R) Validate() error { return _cabga.ValidateWithPath("\u0043\u0054\u005f\u0052") }

const (
	ST_FTypeUnset ST_FType = 0
	ST_FTypeBar   ST_FType = 1
	ST_FTypeSkw   ST_FType = 2
	ST_FTypeLin   ST_FType = 3
	ST_FTypeNoBar ST_FType = 4
)

// Validate validates the CT_OMathArg and its children
func (_ccff *CT_OMathArg) Validate() error {
	return _ccff.ValidateWithPath("C\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067")
}

type CT_GroupChrPr struct {
	Chr    *CT_Char
	Pos    *CT_TopBot
	VertJc *CT_TopBot
	CtrlPr *CT_CtrlPr
}

// Validate validates the CT_XAlign and its children
func (_cacefa *CT_XAlign) Validate() error {
	return _cacefa.ValidateWithPath("\u0043T\u005f\u0058\u0041\u006c\u0069\u0067n")
}

type ST_Jc byte

func (_bcba ST_FType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_acddc := _f.Attr{}
	_acddc.Name = name
	switch _bcba {
	case ST_FTypeUnset:
		_acddc.Value = ""
	case ST_FTypeBar:
		_acddc.Value = "\u0062\u0061\u0072"
	case ST_FTypeSkw:
		_acddc.Value = "\u0073\u006b\u0077"
	case ST_FTypeLin:
		_acddc.Value = "\u006c\u0069\u006e"
	case ST_FTypeNoBar:
		_acddc.Value = "\u006e\u006f\u0042a\u0072"
	}
	return _acddc, nil
}
func (_cgdef *CT_PhantPr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gcde:
	for {
		_bcdg, _gfded := d.Token()
		if _gfded != nil {
			return _gfded
		}
		switch _dcgb := _bcdg.(type) {
		case _f.StartElement:
			switch _dcgb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0068\u006f\u0077"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0068\u006f\u0077"}:
				_cgdef.Show = NewCT_OnOff()
				if _aagg := d.DecodeElement(_cgdef.Show, &_dcgb); _aagg != nil {
					return _aagg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007ae\u0072\u006f\u0057\u0069\u0064"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007ae\u0072\u006f\u0057\u0069\u0064"}:
				_cgdef.ZeroWid = NewCT_OnOff()
				if _bcbbf := d.DecodeElement(_cgdef.ZeroWid, &_dcgb); _bcbbf != nil {
					return _bcbbf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007ae\u0072\u006f\u0041\u0073\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007ae\u0072\u006f\u0041\u0073\u0063"}:
				_cgdef.ZeroAsc = NewCT_OnOff()
				if _edagf := d.DecodeElement(_cgdef.ZeroAsc, &_dcgb); _edagf != nil {
					return _edagf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}:
				_cgdef.ZeroDesc = NewCT_OnOff()
				if _bccf := d.DecodeElement(_cgdef.ZeroDesc, &_dcgb); _bccf != nil {
					return _bccf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074\u0072\u0061\u006e\u0073\u0070"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074\u0072\u0061\u006e\u0073\u0070"}:
				_cgdef.Transp = NewCT_OnOff()
				if _cggd := d.DecodeElement(_cgdef.Transp, &_dcgb); _cggd != nil {
					return _cggd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cgdef.CtrlPr = NewCT_CtrlPr()
				if _cdafb := d.DecodeElement(_cgdef.CtrlPr, &_dcgb); _cdafb != nil {
					return _cdafb
				}
			default:
				_bf.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0068\u0061\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _dcgb.Name)
				if _fbd := d.Skip(); _fbd != nil {
					return _fbd
				}
			}
		case _f.EndElement:
			break _gcde
		case _f.CharData:
		}
	}
	return nil
}

type ST_TopBot byte
type CT_RadPr struct {
	DegHide *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

func (_gead *CT_Integer2) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gead.ValAttr = -2
	for _, _ebdf := range start.Attr {
		if _ebdf.Name.Local == "\u0076\u0061\u006c" {
			_ffef, _caag := _d.ParseInt(_ebdf.Value, 10, 64)
			if _caag != nil {
				return _caag
			}
			_gead.ValAttr = _ffef
			continue
		}
	}
	for {
		_ceac, _fccf := d.Token()
		if _fccf != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u003a\u0020\u0025\u0073", _fccf)
		}
		if _bdae, _bbfd := _ceac.(_f.EndElement); _bbfd && _bdae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edfb *CT_BreakBinSub) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _edfb.ValAttr != ST_BreakBinSubUnset {
		_bbg, _eacf := _edfb.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _eacf != nil {
			return _eacf
		}
		start.Attr = append(start.Attr, _bbg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_MCS struct{ Mc []*CT_MC }
type CT_OMathJc struct{ ValAttr ST_Jc }

// Validate validates the CT_BreakBin and its children
func (_eadd *CT_BreakBin) Validate() error {
	return _eadd.ValidateWithPath("C\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e")
}

// ValidateWithPath validates the CT_UnSignedInteger and its children, prefixing error messages with path
func (_aagb *CT_UnSignedInteger) ValidateWithPath(path string) error { return nil }
func init() {
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u0035\u0035", NewCT_Integer255)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032", NewCT_Integer2)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0070\u0061\u0063\u0069\u006eg\u0052\u0075\u006c\u0065", NewCT_SpacingRule)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005fU\u006e\u0053\u0069\u0067\u006ee\u0064\u0049n\u0074\u0065\u0067\u0065\u0072", NewCT_UnSignedInteger)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0043\u0068\u0061\u0072", NewCT_Char)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066", NewCT_OnOff)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0058\u0041\u006c\u0069\u0067n", NewCT_XAlign)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0059\u0041\u006c\u0069\u0067n", NewCT_YAlign)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0068\u0070", NewCT_Shp)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046\u0054\u0079\u0070\u0065", NewCT_FType)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u004c\u006fc", NewCT_LimLoc)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0054\u006f\u0070\u0042\u006ft", NewCT_TopBot)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0063\u0072\u0069\u0070t", NewCT_Script)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065", NewCT_Style)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0061\u006e\u0075\u0061\u006cB\u0072\u0065\u0061\u006b", NewCT_ManualBreak)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0050\u0052", NewCT_RPR)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0054\u0065\u0078\u0074", NewCT_Text)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052", NewCT_R)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0043\u0074\u0072\u006c\u0050r", NewCT_CtrlPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072", NewCT_AccPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0041\u0063\u0063", NewCT_Acc)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072", NewCT_BarPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0061\u0072", NewCT_Bar)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072", NewCT_BoxPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0078", NewCT_Box)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072B\u006f\u0078\u0050\u0072", NewCT_BorderBoxPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078", NewCT_BorderBox)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0044\u0050\u0072", NewCT_DPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0044", NewCT_D)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0050\u0072", NewCT_EqArrPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072", NewCT_EqArr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046\u0050\u0072", NewCT_FPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046", NewCT_F)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0046\u0075\u006e\u0063\u0050r", NewCT_FuncPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0046\u0075\u006e\u0063", NewCT_Func)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072", NewCT_GroupChrPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072", NewCT_GroupChr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072", NewCT_LimLowPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u004c\u006fw", NewCT_LimLow)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072", NewCT_LimUppPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u0055\u0070p", NewCT_LimUpp)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004d\u0043\u0050\u0072", NewCT_MCPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fM\u0043", NewCT_MC)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0043\u0053", NewCT_MCS)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0050\u0072", NewCT_MPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fM\u0052", NewCT_MR)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d", NewCT_M)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004e\u0061\u0072\u0079\u0050r", NewCT_NaryPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004e\u0061\u0072\u0079", NewCT_Nary)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0050\u0072", NewCT_PhantPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074", NewCT_Phant)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072", NewCT_RadPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0061\u0064", NewCT_Rad)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0050\u0072\u0065\u0050r", NewCT_SPrePr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0050\u0072\u0065", NewCT_SPre)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0062\u0050r", NewCT_SSubPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0062", NewCT_SSub)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072", NewCT_SSubSupPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0053\u0075\u0062\u0053\u0075\u0070", NewCT_SSubSup)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0070\u0050r", NewCT_SSupPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0070", NewCT_SSup)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072", NewCT_OMathArgPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067", NewCT_OMathArg)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063", NewCT_OMathJc)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061\u0050\u0072", NewCT_OMathParaPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005fT\u0077\u0069\u0070\u0073\u004d\u0065\u0061\u0073\u0075\u0072\u0065", NewCT_TwipsMeasure)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e", NewCT_BreakBin)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042i\u006e\u0053\u0075\u0062", NewCT_BreakBinSub)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004d\u0061\u0074\u0068\u0050r", NewCT_MathPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fO\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061", NewCT_OMathPara)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068", NewCT_OMath)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006d\u0061\u0074\u0068\u0050\u0072", NewMathPr)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006fM\u0061\u0074\u0068\u0050\u0061\u0072a", NewOMathPara)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006f\u004d\u0061t\u0068", NewOMath)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074S\u0074\u0079\u006c\u0065", NewEG_ScriptStyle)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "E\u0047_\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006den\u0074\u0073", NewEG_OMathMathElements)
	_bf.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0045\u0047_\u004f\u004d\u0061t\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073", NewEG_OMathElements)
}
