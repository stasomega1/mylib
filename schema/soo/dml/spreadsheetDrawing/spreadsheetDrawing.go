//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package spreadsheetDrawing

import (
	_f "encoding/xml"
	_bf "fmt"
	_g "github.com/stasomega1/mylib"
	_a "github.com/stasomega1/mylib/schema/soo/dml"
	_b "strconv"
)

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_gfae *CT_Rel) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_AnchorClientData and its children, prefixing error messages with path
func (_de *CT_AnchorClientData) ValidateWithPath(path string) error { return nil }
func (_e *CT_AbsoluteAnchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_ea := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0070\u006f\u0073"}}
	e.EncodeElement(_e.Pos, _ea)
	_ba := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0065\u0078\u0074"}}
	e.EncodeElement(_e.Ext, _ba)
	if _e.Choice != nil {
		_e.Choice.MarshalXML(e, _f.StartElement{})
	}
	_eb := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006c\u0069\u0065\u006et\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_e.ClientData, _eb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewTo() *To { _fcfa := &To{}; _fcfa.CT_Marker = *NewCT_Marker(); return _fcfa }
func (_fgfae *WsDr) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0078\u0064\u0072\u003a\u0077\u0073\u0044\u0072"
	return _fgfae.CT_Drawing.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_cfg *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _ccd := _cfg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ccd != nil {
		return _ccd
	}
	if _dba := _cfg.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _dba != nil {
		return _dba
	}
	return nil
}
func NewCT_OneCellAnchor() *CT_OneCellAnchor {
	_fdg := &CT_OneCellAnchor{}
	_fdg.From = NewCT_Marker()
	_fdg.Ext = _a.NewCT_PositiveSize2D()
	_fdg.ClientData = NewCT_AnchorClientData()
	return _fdg
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_gfg *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _bdga := _gfg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bdga != nil {
		return _bdga
	}
	if _cbeg := _gfg.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _cbeg != nil {
		return _cbeg
	}
	return nil
}
func _efdf(_gbge bool) uint8 {
	if _gbge {
		return 1
	}
	return 0
}
func (_abfa *CT_GroupShapeChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ecec:
	for {
		_afe, _ffbf := d.Token()
		if _ffbf != nil {
			return _ffbf
		}
		switch _caeb := _afe.(type) {
		case _f.StartElement:
			switch _caeb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_dgc := NewCT_Shape()
				if _bcg := d.DecodeElement(_dgc, &_caeb); _bcg != nil {
					return _bcg
				}
				_abfa.Sp = append(_abfa.Sp, _dgc)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_bce := NewCT_GroupShape()
				if _bec := d.DecodeElement(_bce, &_caeb); _bec != nil {
					return _bec
				}
				_abfa.GrpSp = append(_abfa.GrpSp, _bce)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gaa := NewCT_GraphicalObjectFrame()
				if _cea := d.DecodeElement(_gaa, &_caeb); _cea != nil {
					return _cea
				}
				_abfa.GraphicFrame = append(_abfa.GraphicFrame, _gaa)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bge := NewCT_Connector()
				if _ccc := d.DecodeElement(_bge, &_caeb); _ccc != nil {
					return _ccc
				}
				_abfa.CxnSp = append(_abfa.CxnSp, _bge)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bfbb := NewCT_Picture()
				if _acc := d.DecodeElement(_bfbb, &_caeb); _acc != nil {
					return _acc
				}
				_abfa.Pic = append(_abfa.Pic, _bfbb)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _caeb.Name)
				if _caea := d.Skip(); _caea != nil {
					return _caea
				}
			}
		case _f.EndElement:
			break _ecec
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OneCellAnchor and its children, prefixing error messages with path
func (_fggb *CT_OneCellAnchor) ValidateWithPath(path string) error {
	if _bff := _fggb.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _bff != nil {
		return _bff
	}
	if _fadf := _fggb.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _fadf != nil {
		return _fadf
	}
	if _fggb.Choice != nil {
		if _addc := _fggb.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _addc != nil {
			return _addc
		}
	}
	if _gcef := _fggb.ClientData.ValidateWithPath(path + "/\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"); _gcef != nil {
		return _gcef
	}
	return nil
}
func (_bafb *ST_EditAs) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cdcf, _bagf := d.Token()
	if _bagf != nil {
		return _bagf
	}
	if _dca, _defg := _cdcf.(_f.EndElement); _defg && _dca.Name == start.Name {
		*_bafb = 1
		return nil
	}
	if _dcdb, _gacb := _cdcf.(_f.CharData); !_gacb {
		return _bf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdcf)
	} else {
		switch string(_dcdb) {
		case "":
			*_bafb = 0
		case "\u0074w\u006f\u0043\u0065\u006c\u006c":
			*_bafb = 1
		case "\u006fn\u0065\u0043\u0065\u006c\u006c":
			*_bafb = 2
		case "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065":
			*_bafb = 3
		}
	}
	_cdcf, _bagf = d.Token()
	if _bagf != nil {
		return _bagf
	}
	if _dfbb, _agfg := _cdcf.(_f.EndElement); _agfg && _dfbb.Name == start.Name {
		return nil
	}
	return _bf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdcf)
}

// Validate validates the CT_GraphicalObjectFrame and its children
func (_daff *CT_GraphicalObjectFrame) Validate() error {
	return _daff.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_deae := &CT_ShapeNonVisual{}
	_deae.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_deae.CNvSpPr = _a.NewCT_NonVisualDrawingShapeProps()
	return _deae
}

// ValidateWithPath validates the From and its children, prefixing error messages with path
func (_dcec *From) ValidateWithPath(path string) error {
	if _daaa := _dcec.CT_Marker.ValidateWithPath(path); _daaa != nil {
		return _daaa
	}
	return nil
}

type CT_GroupShapeNonVisual struct {
	CNvPr      *_a.CT_NonVisualDrawingProps
	CNvGrpSpPr *_a.CT_NonVisualGroupDrawingShapeProps
}
type CT_Marker struct {
	Col    int32
	ColOff _a.ST_Coordinate
	Row    int32
	RowOff _a.ST_Coordinate
}

// Validate validates the CT_Connector and its children
func (_af *CT_Connector) Validate() error {
	return _af.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_age := &CT_GroupShapeNonVisual{}
	_age.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_age.CNvGrpSpPr = _a.NewCT_NonVisualGroupDrawingShapeProps()
	return _age
}
func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_bga := &CT_GraphicalObjectFrameNonVisual{}
	_bga.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_bga.CNvGraphicFramePr = _a.NewCT_NonVisualGraphicFrameProperties()
	return _bga
}
func (_ae *CT_GraphicalObjectFrame) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ae.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _bf.Sprintf("\u0025\u0076", *_ae.MacroAttr)})
	}
	if _ae.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_ae.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_cce := _f.StartElement{Name: _f.Name{Local: "x\u0064r\u003a\u006e\u0076\u0047\u0072\u0061\u0070\u0068i\u0063\u0046\u0072\u0061me\u0050\u0072"}}
	e.EncodeElement(_ae.NvGraphicFramePr, _cce)
	_ccgg := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_ae.Xfrm, _ccgg)
	_bef := _f.StartElement{Name: _f.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_ae.Graphic, _bef)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TwoCellAnchor and its children, prefixing error messages with path
func (_fgea *CT_TwoCellAnchor) ValidateWithPath(path string) error {
	if _afc := _fgea.EditAsAttr.ValidateWithPath(path + "/\u0045\u0064\u0069\u0074\u0041\u0073\u0041\u0074\u0074\u0072"); _afc != nil {
		return _afc
	}
	if _dfc := _fgea.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _dfc != nil {
		return _dfc
	}
	if _bbd := _fgea.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _bbd != nil {
		return _bbd
	}
	if _fgea.Choice != nil {
		if _efda := _fgea.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _efda != nil {
			return _efda
		}
	}
	if _gab := _fgea.ClientData.ValidateWithPath(path + "/\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"); _gab != nil {
		return _gab
	}
	return nil
}
func (_ace *CT_GroupShape) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_adg := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ace.NvGrpSpPr, _adg)
	_fdff := _f.StartElement{Name: _f.Name{Local: "x\u0064\u0072\u003a\u0067\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ace.GrpSpPr, _fdff)
	if _ace.Choice != nil {
		for _, _gcb := range _ace.Choice {
			_gcb.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_gcf *CT_OneCellAnchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcf.From = NewCT_Marker()
	_gcf.Ext = _a.NewCT_PositiveSize2D()
	_gcf.ClientData = NewCT_AnchorClientData()
_ecb:
	for {
		_aee, _ddd := d.Token()
		if _ddd != nil {
			return _ddd
		}
		switch _bae := _aee.(type) {
		case _f.StartElement:
			switch _bae.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _gggb := d.DecodeElement(_gcf.From, &_bae); _gggb != nil {
					return _gggb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _gac := d.DecodeElement(_gcf.Ext, &_bae); _gac != nil {
					return _gac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_gcf.Choice = NewEG_ObjectChoicesChoice()
				if _bgbe := d.DecodeElement(&_gcf.Choice.Sp, &_bae); _bgbe != nil {
					return _bgbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_gcf.Choice = NewEG_ObjectChoicesChoice()
				if _bdgd := d.DecodeElement(&_gcf.Choice.GrpSp, &_bae); _bdgd != nil {
					return _bdgd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gcf.Choice = NewEG_ObjectChoicesChoice()
				if _agbd := d.DecodeElement(&_gcf.Choice.GraphicFrame, &_bae); _agbd != nil {
					return _agbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_gcf.Choice = NewEG_ObjectChoicesChoice()
				if _fad := d.DecodeElement(&_gcf.Choice.CxnSp, &_bae); _fad != nil {
					return _fad
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_gcf.Choice = NewEG_ObjectChoicesChoice()
				if _gagb := d.DecodeElement(&_gcf.Choice.Pic, &_bae); _gagb != nil {
					return _gagb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_gcf.Choice = NewEG_ObjectChoicesChoice()
				if _dfa := d.DecodeElement(&_gcf.Choice.ContentPart, &_bae); _dfa != nil {
					return _dfa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}:
				if _dddf := d.DecodeElement(_gcf.ClientData, &_bae); _dddf != nil {
					return _dddf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _bae.Name)
				if _deba := d.Skip(); _deba != nil {
					return _deba
				}
			}
		case _f.EndElement:
			break _ecb
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_TwoCellAnchor() *CT_TwoCellAnchor {
	_gbb := &CT_TwoCellAnchor{}
	_gbb.From = NewCT_Marker()
	_gbb.To = NewCT_Marker()
	_gbb.ClientData = NewCT_AnchorClientData()
	return _gbb
}

// Validate validates the CT_GroupShape and its children
func (_daa *CT_GroupShape) Validate() error {
	return _daa.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}
func (_ffg *CT_Connector) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ffg.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_ffg.SpPr = _a.NewCT_ShapeProperties()
	for _, _fga := range start.Attr {
		if _fga.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bb, _ce := _fga.Value, error(nil)
			if _ce != nil {
				return _ce
			}
			_ffg.MacroAttr = &_bb
			continue
		}
		if _fga.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_cbe, _da := _b.ParseBool(_fga.Value)
			if _da != nil {
				return _da
			}
			_ffg.FPublishedAttr = &_cbe
			continue
		}
	}
_gfa:
	for {
		_bbb, _fe := d.Token()
		if _fe != nil {
			return _fe
		}
		switch _gef := _bbb.(type) {
		case _f.StartElement:
			switch _gef.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _caa := d.DecodeElement(_ffg.NvCxnSpPr, &_gef); _caa != nil {
					return _caa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _bgcc := d.DecodeElement(_ffg.SpPr, &_gef); _bgcc != nil {
					return _bgcc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_ffg.Style = _a.NewCT_ShapeStyle()
				if _gec := d.DecodeElement(_ffg.Style, &_gef); _gec != nil {
					return _gec
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _gef.Name)
				if _eae := d.Skip(); _eae != nil {
					return _eae
				}
			}
		case _f.EndElement:
			break _gfa
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AbsoluteAnchor and its children
func (_ac *CT_AbsoluteAnchor) Validate() error {
	return _ac.ValidateWithPath("\u0043\u0054\u005f\u0041\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072")
}

// Validate validates the CT_Drawing and its children
func (_ef *CT_Drawing) Validate() error {
	return _ef.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_ccg *CT_Drawing) ValidateWithPath(path string) error {
	for _ffgc, _ece := range _ccg.EG_Anchor {
		if _gfeg := _ece.ValidateWithPath(_bf.Sprintf("\u0025\u0073/\u0045\u0047\u005fA\u006e\u0063\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _ffgc)); _gfeg != nil {
			return _gfeg
		}
	}
	return nil
}
func (_bcce *EG_ObjectChoicesChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_dag:
	for {
		_abg, _gbgg := d.Token()
		if _gbgg != nil {
			return _gbgg
		}
		switch _gbbg := _abg.(type) {
		case _f.StartElement:
			switch _gbbg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_bcce.Sp = NewCT_Shape()
				if _addfc := d.DecodeElement(_bcce.Sp, &_gbbg); _addfc != nil {
					return _addfc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_bcce.GrpSp = NewCT_GroupShape()
				if _begb := d.DecodeElement(_bcce.GrpSp, &_gbbg); _begb != nil {
					return _begb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bcce.GraphicFrame = NewCT_GraphicalObjectFrame()
				if _bagb := d.DecodeElement(_bcce.GraphicFrame, &_gbbg); _bagb != nil {
					return _bagb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bcce.CxnSp = NewCT_Connector()
				if _ffbfd := d.DecodeElement(_bcce.CxnSp, &_gbbg); _ffbfd != nil {
					return _ffbfd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bcce.Pic = NewCT_Picture()
				if _eadc := d.DecodeElement(_bcce.Pic, &_gbbg); _eadc != nil {
					return _eadc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_bcce.ContentPart = NewCT_Rel()
				if _acec := d.DecodeElement(_bcce.ContentPart, &_gbbg); _acec != nil {
					return _acec
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u004f\u0062\u006a\u0065c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gbbg.Name)
				if _bfe := d.Skip(); _bfe != nil {
					return _bfe
				}
			}
		case _f.EndElement:
			break _dag
		case _f.CharData:
		}
	}
	return nil
}

const (
	ST_EditAsUnset    ST_EditAs = 0
	ST_EditAsTwoCell  ST_EditAs = 1
	ST_EditAsOneCell  ST_EditAs = 2
	ST_EditAsAbsolute ST_EditAs = 3
)

type CT_OneCellAnchor struct {
	From       *CT_Marker
	Ext        *_a.CT_PositiveSize2D
	Choice     *EG_ObjectChoicesChoice
	ClientData *CT_AnchorClientData
}

func (_dcg *CT_Picture) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dcg.NvPicPr = NewCT_PictureNonVisual()
	_dcg.BlipFill = _a.NewCT_BlipFillProperties()
	_dcg.SpPr = _a.NewCT_ShapeProperties()
	for _, _egd := range start.Attr {
		if _egd.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_gage, _agge := _egd.Value, error(nil)
			if _agge != nil {
				return _agge
			}
			_dcg.MacroAttr = &_gage
			continue
		}
		if _egd.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_bfc, _efa := _b.ParseBool(_egd.Value)
			if _efa != nil {
				return _efa
			}
			_dcg.FPublishedAttr = &_bfc
			continue
		}
	}
_adda:
	for {
		_ccf, _adc := d.Token()
		if _adc != nil {
			return _adc
		}
		switch _caab := _ccf.(type) {
		case _f.StartElement:
			switch _caab.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _bda := d.DecodeElement(_dcg.NvPicPr, &_caab); _bda != nil {
					return _bda
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _cdc := d.DecodeElement(_dcg.BlipFill, &_caab); _cdc != nil {
					return _cdc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _ebd := d.DecodeElement(_dcg.SpPr, &_caab); _ebd != nil {
					return _ebd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_dcg.Style = _a.NewCT_ShapeStyle()
				if _fab := d.DecodeElement(_dcg.Style, &_caab); _fab != nil {
					return _fab
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _caab.Name)
				if _fdga := d.Skip(); _fdga != nil {
					return _fdga
				}
			}
		case _f.EndElement:
			break _adda
		case _f.CharData:
		}
	}
	return nil
}

type WsDr struct{ CT_Drawing }

// Validate validates the CT_PictureNonVisual and its children
func (_faa *CT_PictureNonVisual) Validate() error {
	return _faa.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the EG_ObjectChoicesChoice and its children, prefixing error messages with path
func (_ccff *EG_ObjectChoicesChoice) ValidateWithPath(path string) error {
	if _ccff.Sp != nil {
		if _dcd := _ccff.Sp.ValidateWithPath(path + "\u002f\u0053\u0070"); _dcd != nil {
			return _dcd
		}
	}
	if _ccff.GrpSp != nil {
		if _afcg := _ccff.GrpSp.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070"); _afcg != nil {
			return _afcg
		}
	}
	if _ccff.GraphicFrame != nil {
		if _cfd := _ccff.GraphicFrame.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"); _cfd != nil {
			return _cfd
		}
	}
	if _ccff.CxnSp != nil {
		if _efb := _ccff.CxnSp.ValidateWithPath(path + "\u002f\u0043\u0078\u006e\u0053\u0070"); _efb != nil {
			return _efb
		}
	}
	if _ccff.Pic != nil {
		if _dfed := _ccff.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _dfed != nil {
			return _dfed
		}
	}
	if _ccff.ContentPart != nil {
		if _dbf := _ccff.ContentPart.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"); _dbf != nil {
			return _dbf
		}
	}
	return nil
}
func (_eac *CT_Rel) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ageg := range start.Attr {
		if _ageg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ageg.Name.Local == "\u0069\u0064" || _ageg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ageg.Name.Local == "\u0069\u0064" {
			_dabe, _dgeeb := _ageg.Value, error(nil)
			if _dgeeb != nil {
				return _dgeeb
			}
			_eac.IdAttr = _dabe
			continue
		}
	}
	for {
		_gdf, _fge := d.Token()
		if _fge != nil {
			return _bf.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _fge)
		}
		if _bgeb, _ggcg := _gdf.(_f.EndElement); _ggcg && _bgeb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_GroupShape() *CT_GroupShape {
	_aagf := &CT_GroupShape{}
	_aagf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_aagf.GrpSpPr = _a.NewCT_GroupShapeProperties()
	return _aagf
}

type EG_Anchor struct {
	TwoCellAnchor  *CT_TwoCellAnchor
	OneCellAnchor  *CT_OneCellAnchor
	AbsoluteAnchor *CT_AbsoluteAnchor
}

func (_fcde *CT_ShapeNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fcde.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_fcde.CNvSpPr = _a.NewCT_NonVisualDrawingShapeProps()
_fee:
	for {
		_bag, _cfbcc := d.Token()
		if _cfbcc != nil {
			return _cfbcc
		}
		switch _gfdg := _bag.(type) {
		case _f.StartElement:
			switch _gfdg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _egf := d.DecodeElement(_fcde.CNvPr, &_gfdg); _egf != nil {
					return _egf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _bfcf := d.DecodeElement(_fcde.CNvSpPr, &_gfdg); _bfcf != nil {
					return _bfcf
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gfdg.Name)
				if _cad := d.Skip(); _cad != nil {
					return _cad
				}
			}
		case _f.EndElement:
			break _fee
		case _f.CharData:
		}
	}
	return nil
}
func (_abff *CT_PictureNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_abff.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_abff.CNvPicPr = _a.NewCT_NonVisualPictureProperties()
_debe:
	for {
		_efg, _edd := d.Token()
		if _edd != nil {
			return _edd
		}
		switch _ffe := _efg.(type) {
		case _f.StartElement:
			switch _ffe.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ged := d.DecodeElement(_abff.CNvPr, &_ffe); _ged != nil {
					return _ged
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _baea := d.DecodeElement(_abff.CNvPicPr, &_ffe); _baea != nil {
					return _baea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ffe.Name)
				if _aab := d.Skip(); _aab != nil {
					return _aab
				}
			}
		case _f.EndElement:
			break _debe
		case _f.CharData:
		}
	}
	return nil
}
func (_bgfe *CT_GraphicalObjectFrame) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bgfe.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_bgfe.Xfrm = _a.NewCT_Transform2D()
	_bgfe.Graphic = _a.NewGraphic()
	for _, _ebag := range start.Attr {
		if _ebag.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_fac, _ddc := _ebag.Value, error(nil)
			if _ddc != nil {
				return _ddc
			}
			_bgfe.MacroAttr = &_fac
			continue
		}
		if _ebag.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_fbf, _ffb := _b.ParseBool(_ebag.Value)
			if _ffb != nil {
				return _ffb
			}
			_bgfe.FPublishedAttr = &_fbf
			continue
		}
	}
_gecg:
	for {
		_bgg, _deg := d.Token()
		if _deg != nil {
			return _deg
		}
		switch _bea := _bgg.(type) {
		case _f.StartElement:
			switch _bea.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _cgag := d.DecodeElement(_bgfe.NvGraphicFramePr, &_bea); _cgag != nil {
					return _cgag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}:
				if _cd := d.DecodeElement(_bgfe.Xfrm, &_bea); _cd != nil {
					return _cd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _bfa := d.DecodeElement(_bgfe.Graphic, &_bea); _bfa != nil {
					return _bfa
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _bea.Name)
				if _agc := d.Skip(); _agc != nil {
					return _agc
				}
			}
		case _f.EndElement:
			break _gecg
		case _f.CharData:
		}
	}
	return nil
}
func (_bbgg *CT_Shape) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bbgg.NvSpPr = NewCT_ShapeNonVisual()
	_bbgg.SpPr = _a.NewCT_ShapeProperties()
	for _, _gbae := range start.Attr {
		if _gbae.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_afbd, _dcb := _gbae.Value, error(nil)
			if _dcb != nil {
				return _dcb
			}
			_bbgg.MacroAttr = &_afbd
			continue
		}
		if _gbae.Name.Local == "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b" {
			_ecfa, _egb := _gbae.Value, error(nil)
			if _egb != nil {
				return _egb
			}
			_bbgg.TextlinkAttr = &_ecfa
			continue
		}
		if _gbae.Name.Local == "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074" {
			_cge, _edf := _b.ParseBool(_gbae.Value)
			if _edf != nil {
				return _edf
			}
			_bbgg.FLocksTextAttr = &_cge
			continue
		}
		if _gbae.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_dfba, _cda := _b.ParseBool(_gbae.Value)
			if _cda != nil {
				return _cda
			}
			_bbgg.FPublishedAttr = &_dfba
			continue
		}
	}
_eacd:
	for {
		_gaac, _bde := d.Token()
		if _bde != nil {
			return _bde
		}
		switch _beag := _gaac.(type) {
		case _f.StartElement:
			switch _beag.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _gdc := d.DecodeElement(_bbgg.NvSpPr, &_beag); _gdc != nil {
					return _gdc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _dbd := d.DecodeElement(_bbgg.SpPr, &_beag); _dbd != nil {
					return _dbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_bbgg.Style = _a.NewCT_ShapeStyle()
				if _def := d.DecodeElement(_bbgg.Style, &_beag); _def != nil {
					return _def
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_bbgg.TxBody = _a.NewCT_TextBody()
				if _efd := d.DecodeElement(_bbgg.TxBody, &_beag); _efd != nil {
					return _efd
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _beag.Name)
				if _daded := d.Skip(); _daded != nil {
					return _daded
				}
			}
		case _f.EndElement:
			break _eacd
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AnchorClientData and its children
func (_ge *CT_AnchorClientData) Validate() error {
	return _ge.ValidateWithPath("\u0043\u0054\u005f\u0041nc\u0068\u006f\u0072\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061")
}

// Validate validates the EG_Anchor and its children
func (_dfef *EG_Anchor) Validate() error {
	return _dfef.ValidateWithPath("\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr")
}

// ValidateWithPath validates the EG_ObjectChoices and its children, prefixing error messages with path
func (_cefc *EG_ObjectChoices) ValidateWithPath(path string) error {
	if _cefc.Choice != nil {
		if _dce := _cefc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dce != nil {
			return _dce
		}
	}
	return nil
}
func (_bg *CT_AbsoluteAnchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bg.Pos = _a.NewCT_Point2D()
	_bg.Ext = _a.NewCT_PositiveSize2D()
	_bg.ClientData = NewCT_AnchorClientData()
_ga:
	for {
		_ff, _fb := d.Token()
		if _fb != nil {
			return _fb
		}
		switch _gc := _ff.(type) {
		case _f.StartElement:
			switch _gc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u006f\u0073"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u006f\u0073"}:
				if _ad := d.DecodeElement(_bg.Pos, &_gc); _ad != nil {
					return _ad
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _gd := d.DecodeElement(_bg.Ext, &_gc); _gd != nil {
					return _gd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_bg.Choice = NewEG_ObjectChoicesChoice()
				if _ebe := d.DecodeElement(&_bg.Choice.Sp, &_gc); _ebe != nil {
					return _ebe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_bg.Choice = NewEG_ObjectChoicesChoice()
				if _cf := d.DecodeElement(&_bg.Choice.GrpSp, &_gc); _cf != nil {
					return _cf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bg.Choice = NewEG_ObjectChoicesChoice()
				if _bgc := d.DecodeElement(&_bg.Choice.GraphicFrame, &_gc); _bgc != nil {
					return _bgc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bg.Choice = NewEG_ObjectChoicesChoice()
				if _aa := d.DecodeElement(&_bg.Choice.CxnSp, &_gc); _aa != nil {
					return _aa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bg.Choice = NewEG_ObjectChoicesChoice()
				if _bfb := d.DecodeElement(&_bg.Choice.Pic, &_gc); _bfb != nil {
					return _bfb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_bg.Choice = NewEG_ObjectChoicesChoice()
				if _cb := d.DecodeElement(&_bg.Choice.ContentPart, &_gc); _cb != nil {
					return _cb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}:
				if _cg := d.DecodeElement(_bg.ClientData, &_gc); _cg != nil {
					return _cg
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _gc.Name)
				if _cgg := d.Skip(); _cgg != nil {
					return _cgg
				}
			}
		case _f.EndElement:
			break _ga
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the EG_ObjectChoicesChoice and its children
func (_fcb *EG_ObjectChoicesChoice) Validate() error {
	return _fcb.ValidateWithPath("\u0045\u0047\u005f\u004fbj\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069c\u0065")
}

// Validate validates the From and its children
func (_eeg *From) Validate() error { return _eeg.ValidateWithPath("\u0046\u0072\u006f\u006d") }
func (_bgf *CT_AnchorClientData) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fdf := range start.Attr {
		if _fdf.Name.Local == "\u0066L\u006fc\u006b\u0073\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074" {
			_bfd, _be := _b.ParseBool(_fdf.Value)
			if _be != nil {
				return _be
			}
			_bgf.FLocksWithSheetAttr = &_bfd
			continue
		}
		if _fdf.Name.Local == "\u0066\u0050r\u0069\u006e\u0074s\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074" {
			_dd, _cba := _b.ParseBool(_fdf.Value)
			if _cba != nil {
				return _cba
			}
			_bgf.FPrintsWithSheetAttr = &_dd
			continue
		}
	}
	for {
		_fdfe, _ab := d.Token()
		if _ab != nil {
			return _bf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006e\u0063\u0068\u006fr\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _ab)
		}
		if _eg, _cc := _fdfe.(_f.EndElement); _cc && _eg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ConnectorNonVisual struct {
	CNvPr      *_a.CT_NonVisualDrawingProps
	CNvCxnSpPr *_a.CT_NonVisualConnectorProperties
}

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_fgf *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _bc := _fgf.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _bc != nil {
		return _bc
	}
	if _gdd := _fgf.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _gdd != nil {
		return _gdd
	}
	if _ebf := _fgf.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _ebf != nil {
		return _ebf
	}
	return nil
}
func (_ca *CT_Connector) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ca.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _bf.Sprintf("\u0025\u0076", *_ca.MacroAttr)})
	}
	if _ca.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_ca.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_dfb := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ca.NvCxnSpPr, _dfb)
	_fg := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ca.SpPr, _fg)
	if _ca.Style != nil {
		_gg := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0073\u0074\u0079\u006ce"}}
		e.EncodeElement(_ca.Style, _gg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_fdb *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _ccde := _fdb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ccde != nil {
		return _ccde
	}
	if _gcbg := _fdb.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _gcbg != nil {
		return _gcbg
	}
	return nil
}
func (_fcd *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fcd.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_fcd.CNvGraphicFramePr = _a.NewCT_NonVisualGraphicFrameProperties()
_cfbf:
	for {
		_bbe, _ecf := d.Token()
		if _ecf != nil {
			return _ecf
		}
		switch _dgf := _bbe.(type) {
		case _f.StartElement:
			switch _dgf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fgg := d.DecodeElement(_fcd.CNvPr, &_dgf); _fgg != nil {
					return _fgg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _dea := d.DecodeElement(_fcd.CNvGraphicFramePr, &_dgf); _dea != nil {
					return _dea
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _dgf.Name)
				if _bdf := d.Skip(); _bdf != nil {
					return _bdf
				}
			}
		case _f.EndElement:
			break _cfbf
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OneCellAnchor and its children
func (_dgcd *CT_OneCellAnchor) Validate() error {
	return _dgcd.ValidateWithPath("\u0043\u0054_\u004f\u006e\u0065C\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072")
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_cbbf *CT_Picture) ValidateWithPath(path string) error {
	if _cbbe := _cbbf.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _cbbe != nil {
		return _cbbe
	}
	if _gacf := _cbbf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gacf != nil {
		return _gacf
	}
	if _adbd := _cbbf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _adbd != nil {
		return _adbd
	}
	if _cbbf.Style != nil {
		if _ddcb := _cbbf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ddcb != nil {
			return _ddcb
		}
	}
	return nil
}

type ST_EditAs byte

func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_cae := &CT_ConnectorNonVisual{}
	_cae.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_cae.CNvCxnSpPr = _a.NewCT_NonVisualConnectorProperties()
	return _cae
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_fc *CT_Connector) ValidateWithPath(path string) error {
	if _gbg := _fc.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _gbg != nil {
		return _gbg
	}
	if _ffa := _fc.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _ffa != nil {
		return _ffa
	}
	if _fc.Style != nil {
		if _bd := _fc.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bd != nil {
			return _bd
		}
	}
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
}
type CT_Shape struct {
	MacroAttr      *string
	TextlinkAttr   *string
	FLocksTextAttr *bool
	FPublishedAttr *bool
	NvSpPr         *CT_ShapeNonVisual
	SpPr           *_a.CT_ShapeProperties
	Style          *_a.CT_ShapeStyle
	TxBody         *_a.CT_TextBody
}

func (_dg *CT_ConnectorNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dg.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_dg.CNvCxnSpPr = _a.NewCT_NonVisualConnectorProperties()
_gae:
	for {
		_fef, _cec := d.Token()
		if _cec != nil {
			return _cec
		}
		switch _beb := _fef.(type) {
		case _f.StartElement:
			switch _beb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fa := d.DecodeElement(_dg.CNvPr, &_beb); _fa != nil {
					return _fa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _afb := d.DecodeElement(_dg.CNvCxnSpPr, &_beb); _afb != nil {
					return _afb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _beb.Name)
				if _bdg := d.Skip(); _bdg != nil {
					return _bdg
				}
			}
		case _f.EndElement:
			break _gae
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_dc *CT_ConnectorNonVisual) Validate() error {
	return _dc.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_defc *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _dbda := _defc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dbda != nil {
		return _dbda
	}
	if _cfe := _defc.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _cfe != nil {
		return _cfe
	}
	return nil
}

// ValidateWithPath validates the To and its children, prefixing error messages with path
func (_eeb *To) ValidateWithPath(path string) error {
	if _cadg := _eeb.CT_Marker.ValidateWithPath(path); _cadg != nil {
		return _cadg
	}
	return nil
}
func (_fgfa *CT_GroupShapeNonVisual) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fgfa.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_fgfa.CNvGrpSpPr = _a.NewCT_NonVisualGroupDrawingShapeProps()
_fefc:
	for {
		_fca, _gfgb := d.Token()
		if _gfgb != nil {
			return _gfgb
		}
		switch _cfac := _fca.(type) {
		case _f.StartElement:
			switch _cfac.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _bebg := d.DecodeElement(_fgfa.CNvPr, &_cfac); _bebg != nil {
					return _bebg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _dge := d.DecodeElement(_fgfa.CNvGrpSpPr, &_cfac); _dge != nil {
					return _dge
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _cfac.Name)
				if _fefa := d.Skip(); _fefa != nil {
					return _fefa
				}
			}
		case _f.EndElement:
			break _fefc
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ShapeNonVisual and its children
func (_fdec *CT_ShapeNonVisual) Validate() error {
	return _fdec.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the EG_Anchor and its children, prefixing error messages with path
func (_faca *EG_Anchor) ValidateWithPath(path string) error {
	if _faca.TwoCellAnchor != nil {
		if _fbdf := _faca.TwoCellAnchor.ValidateWithPath(path + "\u002f\u0054\u0077\u006f\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"); _fbdf != nil {
			return _fbdf
		}
	}
	if _faca.OneCellAnchor != nil {
		if _aeae := _faca.OneCellAnchor.ValidateWithPath(path + "\u002f\u004f\u006e\u0065\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"); _aeae != nil {
			return _aeae
		}
	}
	if _faca.AbsoluteAnchor != nil {
		if _ebfd := _faca.AbsoluteAnchor.ValidateWithPath(path + "\u002fA\u0062s\u006f\u006c\u0075\u0074\u0065\u0041\u006e\u0063\u0068\u006f\u0072"); _ebfd != nil {
			return _ebfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_bebb *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _gda, _bdd := range _bebb.Sp {
		if _acf := _bdd.ValidateWithPath(_bf.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _gda)); _acf != nil {
			return _acf
		}
	}
	for _dae, _agf := range _bebb.GrpSp {
		if _ggg := _agf.ValidateWithPath(_bf.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _dae)); _ggg != nil {
			return _ggg
		}
	}
	for _fcfg, _fbb := range _bebb.GraphicFrame {
		if _dade := _fbb.ValidateWithPath(_bf.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _fcfg)); _dade != nil {
			return _dade
		}
	}
	for _aaf, _ega := range _bebb.CxnSp {
		if _fea := _ega.ValidateWithPath(_bf.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _aaf)); _fea != nil {
			return _fea
		}
	}
	for _dda, _ffaf := range _bebb.Pic {
		if _aea := _ffaf.ValidateWithPath(_bf.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _dda)); _aea != nil {
			return _aea
		}
	}
	return nil
}
func NewCT_AnchorClientData() *CT_AnchorClientData { _gff := &CT_AnchorClientData{}; return _gff }
func (_abbf *CT_GroupShapeNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_gfaf := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_abbf.CNvPr, _gfaf)
	_dgcg := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u004e\u0076\u0047\u0072p\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_abbf.CNvGrpSpPr, _dgcg)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type EG_ObjectChoices struct{ Choice *EG_ObjectChoicesChoice }

// Validate validates the EG_ObjectChoices and its children
func (_cfcf *EG_ObjectChoices) Validate() error {
	return _cfcf.ValidateWithPath("\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073")
}
func (_fde *CT_Shape) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fde.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _bf.Sprintf("\u0025\u0076", *_fde.MacroAttr)})
	}
	if _fde.TextlinkAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b"}, Value: _bf.Sprintf("\u0025\u0076", *_fde.TextlinkAttr)})
	}
	if _fde.FLocksTextAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_fde.FLocksTextAttr))})
	}
	if _fde.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_fde.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_abc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fde.NvSpPr, _abc)
	_ffga := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fde.SpPr, _ffga)
	if _fde.Style != nil {
		_gdae := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0073\u0074\u0079\u006ce"}}
		e.EncodeElement(_fde.Style, _gdae)
	}
	if _fde.TxBody != nil {
		_gdb := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_fde.TxBody, _gdb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Marker and its children, prefixing error messages with path
func (_dead *CT_Marker) ValidateWithPath(path string) error {
	if _dead.Col < 0 {
		return _bf.Errorf("\u0025\u0073\u002fm\u002e\u0043\u006f\u006c \u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dead.Col)
	}
	if _cafb := _dead.ColOff.ValidateWithPath(path + "\u002fC\u006f\u006c\u004f\u0066\u0066"); _cafb != nil {
		return _cafb
	}
	if _dead.Row < 0 {
		return _bf.Errorf("\u0025\u0073\u002fm\u002e\u0052\u006f\u0077 \u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dead.Row)
	}
	if _gbfe := _dead.RowOff.ValidateWithPath(path + "\u002fR\u006f\u0077\u004f\u0066\u0066"); _gbfe != nil {
		return _gbfe
	}
	return nil
}
func (_aba *CT_Marker) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aba.Col = 0
	_aba.Row = 0
_ada:
	for {
		_eade, _gag := d.Token()
		if _gag != nil {
			return _gag
		}
		switch _feg := _eade.(type) {
		case _f.StartElement:
			switch _feg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}:
				if _gefd := d.DecodeElement(&_aba.Col, &_feg); _gefd != nil {
					return _gefd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}:
				if _dbb := d.DecodeElement(&_aba.ColOff, &_feg); _dbb != nil {
					return _dbb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}:
				if _dgee := d.DecodeElement(&_aba.Row, &_feg); _dgee != nil {
					return _dgee
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}:
				if _beg := d.DecodeElement(&_aba.RowOff, &_feg); _beg != nil {
					return _beg
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0072k\u0065\u0072 \u0025\u0076", _feg.Name)
				if _ebba := d.Skip(); _ebba != nil {
					return _ebba
				}
			}
		case _f.EndElement:
			break _ada
		case _f.CharData:
		}
	}
	return nil
}

type CT_GroupShape struct {
	NvGrpSpPr *CT_GroupShapeNonVisual
	GrpSpPr   *_a.CT_GroupShapeProperties
	Choice    []*CT_GroupShapeChoice
}

func (_bafe *CT_PictureNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_fced := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_bafe.CNvPr, _fced)
	_dcfa := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072:\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_bafe.CNvPicPr, _dcfa)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_Drawing struct{ EG_Anchor []*EG_Anchor }

func NewFrom() *From { _agd := &From{}; _agd.CT_Marker = *NewCT_Marker(); return _agd }

// Validate validates the WsDr and its children
func (_eaa *WsDr) Validate() error { return _eaa.ValidateWithPath("\u0057\u0073\u0044\u0072") }
func (_fbe *EG_ObjectChoices) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_aca:
	for {
		_edfg, _dgb := d.Token()
		if _dgb != nil {
			return _dgb
		}
		switch _becb := _edfg.(type) {
		case _f.StartElement:
			switch _becb.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_fbe.Choice = NewEG_ObjectChoicesChoice()
				if _ccfa := d.DecodeElement(&_fbe.Choice.Sp, &_becb); _ccfa != nil {
					return _ccfa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_fbe.Choice = NewEG_ObjectChoicesChoice()
				if _gcc := d.DecodeElement(&_fbe.Choice.GrpSp, &_becb); _gcc != nil {
					return _gcc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_fbe.Choice = NewEG_ObjectChoicesChoice()
				if _bffg := d.DecodeElement(&_fbe.Choice.GraphicFrame, &_becb); _bffg != nil {
					return _bffg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_fbe.Choice = NewEG_ObjectChoicesChoice()
				if _ggcc := d.DecodeElement(&_fbe.Choice.CxnSp, &_becb); _ggcc != nil {
					return _ggcc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_fbe.Choice = NewEG_ObjectChoicesChoice()
				if _cafa := d.DecodeElement(&_fbe.Choice.Pic, &_becb); _cafa != nil {
					return _cafa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_fbe.Choice = NewEG_ObjectChoicesChoice()
				if _addf := d.DecodeElement(&_fbe.Choice.ContentPart, &_becb); _addf != nil {
					return _addf
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0020\u0025v", _becb.Name)
				if _addfa := d.Skip(); _addfa != nil {
					return _addfa
				}
			}
		case _f.EndElement:
			break _aca
		case _f.CharData:
		}
	}
	return nil
}
func (_gbggc ST_EditAs) ValidateWithPath(path string) error {
	switch _gbggc {
	case 0, 1, 2, 3:
	default:
		return _bf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbggc))
	}
	return nil
}
func NewEG_Anchor() *EG_Anchor { _dgcge := &EG_Anchor{}; return _dgcge }

type CT_AbsoluteAnchor struct {
	Pos        *_a.CT_Point2D
	Ext        *_a.CT_PositiveSize2D
	Choice     *EG_ObjectChoicesChoice
	ClientData *CT_AnchorClientData
}

// ValidateWithPath validates the CT_AbsoluteAnchor and its children, prefixing error messages with path
func (_d *CT_AbsoluteAnchor) ValidateWithPath(path string) error {
	if _gf := _d.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _gf != nil {
		return _gf
	}
	if _gb := _d.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _gb != nil {
		return _gb
	}
	if _d.Choice != nil {
		if _baa := _d.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _baa != nil {
			return _baa
		}
	}
	if _df := _d.ClientData.ValidateWithPath(path + "/\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"); _df != nil {
		return _df
	}
	return nil
}
func (_fcf *CT_GroupShapeChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fcf.Sp != nil {
		_cfbc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070"}}
		for _, _dad := range _fcf.Sp {
			e.EncodeElement(_dad, _cfbc)
		}
	}
	if _fcf.GrpSp != nil {
		_cbb := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0067\u0072\u0070\u0053p"}}
		for _, _bbgc := range _fcf.GrpSp {
			e.EncodeElement(_bbgc, _cbb)
		}
	}
	if _fcf.GraphicFrame != nil {
		_egc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064r\u003a\u0067\u0072a\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		for _, _gcbe := range _fcf.GraphicFrame {
			e.EncodeElement(_gcbe, _egc)
		}
	}
	if _fcf.CxnSp != nil {
		_fbg := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u0078\u006e\u0053p"}}
		for _, _dee := range _fcf.CxnSp {
			e.EncodeElement(_dee, _fbg)
		}
	}
	if _fcf.Pic != nil {
		_ebg := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0070\u0069\u0063"}}
		for _, _gba := range _fcf.Pic {
			e.EncodeElement(_gba, _ebg)
		}
	}
	return nil
}
func (_dab *CT_OneCellAnchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_fdbf := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_dab.From, _fdbf)
	_ccdd := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0065\u0078\u0074"}}
	e.EncodeElement(_dab.Ext, _ccdd)
	if _dab.Choice != nil {
		_dab.Choice.MarshalXML(e, _f.StartElement{})
	}
	_add := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006c\u0069\u0065\u006et\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_dab.ClientData, _add)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewCT_Connector() *CT_Connector {
	_bac := &CT_Connector{}
	_bac.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_bac.SpPr = _a.NewCT_ShapeProperties()
	return _bac
}
func (_cga *CT_AnchorClientData) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cga.FLocksWithSheetAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066L\u006fc\u006b\u0073\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_cga.FLocksWithSheetAttr))})
	}
	if _cga.FPrintsWithSheetAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050r\u0069\u006e\u0074s\u0057\u0069\u0074\u0068\u0053\u0068\u0065\u0065\u0074"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_cga.FPrintsWithSheetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_afg *EG_ObjectChoicesChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _afg.Sp != nil {
		_efc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070"}}
		e.EncodeElement(_afg.Sp, _efc)
	}
	if _afg.GrpSp != nil {
		_fff := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0067\u0072\u0070\u0053p"}}
		e.EncodeElement(_afg.GrpSp, _fff)
	}
	if _afg.GraphicFrame != nil {
		_cfbfd := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064r\u003a\u0067\u0072a\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		e.EncodeElement(_afg.GraphicFrame, _cfbfd)
	}
	if _afg.CxnSp != nil {
		_eadf := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u0078\u006e\u0053p"}}
		e.EncodeElement(_afg.CxnSp, _eadf)
	}
	if _afg.Pic != nil {
		_aeaec := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0070\u0069\u0063"}}
		e.EncodeElement(_afg.Pic, _aeaec)
	}
	if _afg.ContentPart != nil {
		_ddab := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072:\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		e.EncodeElement(_afg.ContentPart, _ddab)
	}
	return nil
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_egbf *CT_Shape) ValidateWithPath(path string) error {
	if _fegf := _egbf.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _fegf != nil {
		return _fegf
	}
	if _bad := _egbf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _bad != nil {
		return _bad
	}
	if _egbf.Style != nil {
		if _gfd := _egbf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _gfd != nil {
			return _gfd
		}
	}
	if _egbf.TxBody != nil {
		if _ebdf := _egbf.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _ebdf != nil {
			return _ebdf
		}
	}
	return nil
}
func (_gaea *CT_Rel) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _bf.Sprintf("\u0025\u0076", _gaea.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewEG_ObjectChoicesChoice() *EG_ObjectChoicesChoice {
	_fabf := &EG_ObjectChoicesChoice{}
	return _fabf
}

type CT_Connector struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvCxnSpPr      *CT_ConnectorNonVisual
	SpPr           *_a.CT_ShapeProperties
	Style          *_a.CT_ShapeStyle
}

func NewWsDr() *WsDr { _cdg := &WsDr{}; _cdg.CT_Drawing = *NewCT_Drawing(); return _cdg }

// Validate validates the CT_Marker and its children
func (_gee *CT_Marker) Validate() error {
	return _gee.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r")
}

// ValidateWithPath validates the WsDr and its children, prefixing error messages with path
func (_cefe *WsDr) ValidateWithPath(path string) error {
	if _aagc := _cefe.CT_Drawing.ValidateWithPath(path); _aagc != nil {
		return _aagc
	}
	return nil
}

type To struct{ CT_Marker }

func (_aaa *CT_GroupShape) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aaa.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_aaa.GrpSpPr = _a.NewCT_GroupShapeProperties()
_fgga:
	for {
		_dafd, _bbg := d.Token()
		if _bbg != nil {
			return _bbg
		}
		switch _eede := _dafd.(type) {
		case _f.StartElement:
			switch _eede.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _agb := d.DecodeElement(_aaa.NvGrpSpPr, &_eede); _agb != nil {
					return _agb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _gaeg := d.DecodeElement(_aaa.GrpSpPr, &_eede); _gaeg != nil {
					return _gaeg
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_caag := NewCT_GroupShapeChoice()
				if _acd := d.DecodeElement(&_caag.Sp, &_eede); _acd != nil {
					return _acd
				}
				_aaa.Choice = append(_aaa.Choice, _caag)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_bbf := NewCT_GroupShapeChoice()
				if _bgccb := d.DecodeElement(&_bbf.GrpSp, &_eede); _bgccb != nil {
					return _bgccb
				}
				_aaa.Choice = append(_aaa.Choice, _bbf)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_ecfg := NewCT_GroupShapeChoice()
				if _aad := d.DecodeElement(&_ecfg.GraphicFrame, &_eede); _aad != nil {
					return _aad
				}
				_aaa.Choice = append(_aaa.Choice, _ecfg)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_dfe := NewCT_GroupShapeChoice()
				if _agbe := d.DecodeElement(&_dfe.CxnSp, &_eede); _agbe != nil {
					return _agbe
				}
				_aaa.Choice = append(_aaa.Choice, _dfe)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_fgfg := NewCT_GroupShapeChoice()
				if _cafg := d.DecodeElement(&_fgfg.Pic, &_eede); _cafg != nil {
					return _cafg
				}
				_aaa.Choice = append(_aaa.Choice, _fgfg)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _eede.Name)
				if _agg := d.Skip(); _agg != nil {
					return _agg
				}
			}
		case _f.EndElement:
			break _fgga
		case _f.CharData:
		}
	}
	return nil
}

type CT_TwoCellAnchor struct {
	EditAsAttr ST_EditAs
	From       *CT_Marker
	To         *CT_Marker
	Choice     *EG_ObjectChoicesChoice
	ClientData *CT_AnchorClientData
}

func (_addfd *From) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_addfd.CT_Marker = *NewCT_Marker()
_abcc:
	for {
		_cde, _faad := d.Token()
		if _faad != nil {
			return _faad
		}
		switch _bagbc := _cde.(type) {
		case _f.StartElement:
			switch _bagbc.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}:
				if _eaca := d.DecodeElement(&_addfd.Col, &_bagbc); _eaca != nil {
					return _eaca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}:
				if _ebdc := d.DecodeElement(&_addfd.ColOff, &_bagbc); _ebdc != nil {
					return _ebdc
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}:
				if _bcf := d.DecodeElement(&_addfd.Row, &_bagbc); _bcf != nil {
					return _bcf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}:
				if _ebagb := d.DecodeElement(&_addfd.RowOff, &_bagbc); _ebagb != nil {
					return _ebagb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0046\u0072o\u006d\u0020\u0025\u0076", _bagbc.Name)
				if _ebcg := d.Skip(); _ebcg != nil {
					return _ebcg
				}
			}
		case _f.EndElement:
			break _abcc
		case _f.CharData:
		}
	}
	return nil
}
func (_dgcc *EG_Anchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _dgcc.TwoCellAnchor != nil {
		_efde := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_dgcc.TwoCellAnchor, _efde)
	}
	if _dgcc.OneCellAnchor != nil {
		_bcc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041n\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_dgcc.OneCellAnchor, _bcc)
	}
	if _dgcc.AbsoluteAnchor != nil {
		_eff := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072:\u0061\u0062\u0073\u006f\u006cu\u0074\u0065A\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_dgcc.AbsoluteAnchor, _eff)
	}
	return nil
}
func (_dadd *EG_Anchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgcg:
	for {
		_dbcg, _ggad := d.Token()
		if _ggad != nil {
			return _ggad
		}
		switch _fdcg := _dbcg.(type) {
		case _f.StartElement:
			switch _fdcg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_dadd.TwoCellAnchor = NewCT_TwoCellAnchor()
				if _gfeb := d.DecodeElement(_dadd.TwoCellAnchor, &_fdcg); _gfeb != nil {
					return _gfeb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_dadd.OneCellAnchor = NewCT_OneCellAnchor()
				if _gdca := d.DecodeElement(_dadd.OneCellAnchor, &_fdcg); _gdca != nil {
					return _gdca
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}:
				_dadd.AbsoluteAnchor = NewCT_AbsoluteAnchor()
				if _becf := d.DecodeElement(_dadd.AbsoluteAnchor, &_fdcg); _becf != nil {
					return _becf
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0041\u006e\u0063h\u006f\u0072 \u0025\u0076", _fdcg.Name)
				if _bffe := d.Skip(); _bffe != nil {
					return _bffe
				}
			}
		case _f.EndElement:
			break _fgcg
		case _f.CharData:
		}
	}
	return nil
}
func (_fdffe ST_EditAs) String() string {
	switch _fdffe {
	case 0:
		return ""
	case 1:
		return "\u0074w\u006f\u0043\u0065\u006c\u006c"
	case 2:
		return "\u006fn\u0065\u0043\u0065\u006c\u006c"
	case 3:
		return "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065"
	}
	return ""
}
func (_cfga *ST_EditAs) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cfga = 0
	case "\u0074w\u006f\u0043\u0065\u006c\u006c":
		*_cfga = 1
	case "\u006fn\u0065\u0043\u0065\u006c\u006c":
		*_cfga = 2
	case "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065":
		*_cfga = 3
	}
	return nil
}
func (_gbcg *EG_ObjectChoices) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _gbcg.Choice != nil {
		_gbcg.Choice.MarshalXML(e, _f.StartElement{})
	}
	return nil
}

// Validate validates the CT_Shape and its children
func (_gbca *CT_Shape) Validate() error {
	return _gbca.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_Picture and its children
func (_cecf *CT_Picture) Validate() error {
	return _cecf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

type CT_Picture struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvPicPr        *CT_PictureNonVisual
	BlipFill       *_a.CT_BlipFillProperties
	SpPr           *_a.CT_ShapeProperties
	Style          *_a.CT_ShapeStyle
}

func NewCT_AbsoluteAnchor() *CT_AbsoluteAnchor {
	_ag := &CT_AbsoluteAnchor{}
	_ag.Pos = _a.NewCT_Point2D()
	_ag.Ext = _a.NewCT_PositiveSize2D()
	_ag.ClientData = NewCT_AnchorClientData()
	return _ag
}
func (_adag *CT_Picture) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _adag.MacroAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _bf.Sprintf("\u0025\u0076", *_adag.MacroAttr)})
	}
	if _adag.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _bf.Sprintf("\u0025\u0064", _efdf(*_adag.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_dbbb := _f.StartElement{Name: _f.Name{Local: "x\u0064\u0072\u003a\u006e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_adag.NvPicPr, _dbbb)
	_cfbg := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072:\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_adag.BlipFill, _cfbg)
	_ebc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_adag.SpPr, _ebc)
	if _adag.Style != nil {
		_acb := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0073\u0074\u0079\u006ce"}}
		e.EncodeElement(_adag.Style, _acb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_cecfe *CT_TwoCellAnchor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cecfe.From = NewCT_Marker()
	_cecfe.To = NewCT_Marker()
	_cecfe.ClientData = NewCT_AnchorClientData()
	for _, _adba := range start.Attr {
		if _adba.Name.Local == "\u0065\u0064\u0069\u0074\u0041\u0073" {
			_cecfe.EditAsAttr.UnmarshalXMLAttr(_adba)
			continue
		}
	}
_bbga:
	for {
		_ffeg, _fdc := d.Token()
		if _fdc != nil {
			return _fdc
		}
		switch _edg := _ffeg.(type) {
		case _f.StartElement:
			switch _edg.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _gaag := d.DecodeElement(_cecfe.From, &_edg); _gaag != nil {
					return _gaag
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _fead := d.DecodeElement(_cecfe.To, &_edg); _fead != nil {
					return _fead
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0073\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_cecfe.Choice = NewEG_ObjectChoicesChoice()
				if _cbbd := d.DecodeElement(&_cecfe.Choice.Sp, &_edg); _cbbd != nil {
					return _cbbd
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_cecfe.Choice = NewEG_ObjectChoicesChoice()
				if _dcbe := d.DecodeElement(&_cecfe.Choice.GrpSp, &_edg); _dcbe != nil {
					return _dcbe
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_cecfe.Choice = NewEG_ObjectChoicesChoice()
				if _gfdf := d.DecodeElement(&_cecfe.Choice.GraphicFrame, &_edg); _gfdf != nil {
					return _gfdf
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_cecfe.Choice = NewEG_ObjectChoicesChoice()
				if _gcfa := d.DecodeElement(&_cecfe.Choice.CxnSp, &_edg); _gcfa != nil {
					return _gcfa
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_cecfe.Choice = NewEG_ObjectChoicesChoice()
				if _acdb := d.DecodeElement(&_cecfe.Choice.Pic, &_edg); _acdb != nil {
					return _acdb
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_cecfe.Choice = NewEG_ObjectChoicesChoice()
				if _agff := d.DecodeElement(&_cecfe.Choice.ContentPart, &_edg); _agff != nil {
					return _agff
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061"}:
				if _eef := d.DecodeElement(_cecfe.ClientData, &_edg); _eef != nil {
					return _eef
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _edg.Name)
				if _aeaf := d.Skip(); _aeaf != nil {
					return _aeaf
				}
			}
		case _f.EndElement:
			break _bbga
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_cfb := &CT_GraphicalObjectFrame{}
	_cfb.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_cfb.Xfrm = _a.NewCT_Transform2D()
	_cfb.Graphic = _a.NewGraphic()
	return _cfb
}

// Validate validates the CT_GroupShapeChoice and its children
func (_ggc *CT_GroupShapeChoice) Validate() error {
	return _ggc.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_gfdb ST_EditAs) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gfdb.String(), start)
}
func (_beaa *CT_Marker) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_gbc := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u006f\u006c"}}
	e.EncodeElement(_beaa.Col, _gbc)
	_dbc := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006f\u006c\u004f\u0066\u0066"}}
	e.EncodeElement(_beaa.ColOff, _dbc)
	_aggc := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0072\u006f\u0077"}}
	e.EncodeElement(_beaa.Row, _aggc)
	_cff := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0072\u006f\u0077\u004f\u0066\u0066"}}
	e.EncodeElement(_beaa.RowOff, _cff)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the To and its children
func (_gbff *To) Validate() error { return _gbff.ValidateWithPath("\u0054\u006f") }
func NewCT_Drawing() *CT_Drawing  { _bdb := &CT_Drawing{}; return _bdb }
func (_dcge *CT_ShapeNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_aggd := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_dcge.CNvPr, _aggd)
	_dfeb := _f.StartElement{Name: _f.Name{Local: "x\u0064\u0072\u003a\u0063\u004e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dcge.CNvSpPr, _dfeb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_gfc *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _gfc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

type EG_ObjectChoicesChoice struct {
	Sp           *CT_Shape
	GrpSp        *CT_GroupShape
	GraphicFrame *CT_GraphicalObjectFrame
	CxnSp        *CT_Connector
	Pic          *CT_Picture
	ContentPart  *CT_Rel
}
type CT_AnchorClientData struct {
	FLocksWithSheetAttr  *bool
	FPrintsWithSheetAttr *bool
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_fed *CT_GroupShapeNonVisual) Validate() error {
	return _fed.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}
func NewCT_Rel() *CT_Rel { _cfc := &CT_Rel{}; return _cfc }

type CT_ShapeNonVisual struct {
	CNvPr   *_a.CT_NonVisualDrawingProps
	CNvSpPr *_a.CT_NonVisualDrawingShapeProps
}

func NewCT_Picture() *CT_Picture {
	_cfba := &CT_Picture{}
	_cfba.NvPicPr = NewCT_PictureNonVisual()
	_cfba.BlipFill = _a.NewCT_BlipFillProperties()
	_cfba.SpPr = _a.NewCT_ShapeProperties()
	return _cfba
}
func (_aac ST_EditAs) Validate() error { return _aac.ValidateWithPath("") }

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_fceg *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _fbd := _fceg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fbd != nil {
		return _fbd
	}
	if _ebcb := _fceg.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _ebcb != nil {
		return _ebcb
	}
	return nil
}
func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _fce := &CT_GroupShapeChoice{}; return _fce }

type CT_GraphicalObjectFrameNonVisual struct {
	CNvPr             *_a.CT_NonVisualDrawingProps
	CNvGraphicFramePr *_a.CT_NonVisualGraphicFrameProperties
}

func (_fgeg *WsDr) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fgeg.CT_Drawing = *NewCT_Drawing()
_feab:
	for {
		_gad, _dga := d.Token()
		if _dga != nil {
			return _dga
		}
		switch _fgge := _gad.(type) {
		case _f.StartElement:
			switch _fgge.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_gfde := NewEG_Anchor()
				_gfde.TwoCellAnchor = NewCT_TwoCellAnchor()
				if _dgfg := d.DecodeElement(_gfde.TwoCellAnchor, &_fgge); _dgfg != nil {
					return _dgfg
				}
				_fgeg.EG_Anchor = append(_fgeg.EG_Anchor, _gfde)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_dcbb := NewEG_Anchor()
				_dcbb.OneCellAnchor = NewCT_OneCellAnchor()
				if _afbe := d.DecodeElement(_dcbb.OneCellAnchor, &_fgge); _afbe != nil {
					return _afbe
				}
				_fgeg.EG_Anchor = append(_fgeg.EG_Anchor, _dcbb)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}:
				_gbad := NewEG_Anchor()
				_gbad.AbsoluteAnchor = NewCT_AbsoluteAnchor()
				if _dfg := d.DecodeElement(_gbad.AbsoluteAnchor, &_fgge); _dfg != nil {
					return _dfg
				}
				_fgeg.EG_Anchor = append(_fgeg.EG_Anchor, _gbad)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u0073D\u0072\u0020\u0025\u0076", _fgge.Name)
				if _egfe := d.Skip(); _egfe != nil {
					return _egfe
				}
			}
		case _f.EndElement:
			break _feab
		case _f.CharData:
		}
	}
	return nil
}
func NewCT_Shape() *CT_Shape {
	_dff := &CT_Shape{}
	_dff.NvSpPr = NewCT_ShapeNonVisual()
	_dff.SpPr = _a.NewCT_ShapeProperties()
	return _dff
}

// Validate validates the CT_TwoCellAnchor and its children
func (_edae *CT_TwoCellAnchor) Validate() error {
	return _edae.ValidateWithPath("\u0043\u0054_\u0054\u0077\u006fC\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072")
}
func (_efad *CT_TwoCellAnchor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _efad.EditAsAttr != ST_EditAsUnset {
		_acda, _aga := _efad.EditAsAttr.MarshalXMLAttr(_f.Name{Local: "\u0065\u0064\u0069\u0074\u0041\u0073"})
		if _aga != nil {
			return _aga
		}
		start.Attr = append(start.Attr, _acda)
	}
	e.EncodeToken(start)
	_gfga := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_efad.From, _gfga)
	_ebee := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_efad.To, _ebee)
	if _efad.Choice != nil {
		_efad.Choice.MarshalXML(e, _f.StartElement{})
	}
	_abe := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u006c\u0069\u0065\u006et\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_efad.ClientData, _abe)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_dcf *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_eee := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_dcf.CNvPr, _eee)
	_ggb := _f.StartElement{Name: _f.Name{Local: "x\u0064\u0072\u003a\u0063Nv\u0047r\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_dcf.CNvGraphicFramePr, _ggb)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_cfa *CT_Drawing) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_eba:
	for {
		_ebbg, _cfad := d.Token()
		if _cfad != nil {
			return _cfad
		}
		switch _cef := _ebbg.(type) {
		case _f.StartElement:
			switch _cef.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0077\u006f\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_gfe := NewEG_Anchor()
				_gfe.TwoCellAnchor = NewCT_TwoCellAnchor()
				if _abb := d.DecodeElement(_gfe.TwoCellAnchor, &_cef); _abb != nil {
					return _abb
				}
				_cfa.EG_Anchor = append(_cfa.EG_Anchor, _gfe)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006f\u006e\u0065\u0043\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_aag := NewEG_Anchor()
				_aag.OneCellAnchor = NewCT_OneCellAnchor()
				if _caf := d.DecodeElement(_aag.OneCellAnchor, &_cef); _caf != nil {
					return _caf
				}
				_cfa.EG_Anchor = append(_cfa.EG_Anchor, _aag)
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072"}:
				_gfgg := NewEG_Anchor()
				_gfgg.AbsoluteAnchor = NewCT_AbsoluteAnchor()
				if _deb := d.DecodeElement(_gfgg.AbsoluteAnchor, &_cef); _deb != nil {
					return _deb
				}
				_cfa.EG_Anchor = append(_cfa.EG_Anchor, _gfgg)
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0020\u0025\u0076", _cef.Name)
				if _daf := d.Skip(); _daf != nil {
					return _daf
				}
			}
		case _f.EndElement:
			break _eba
		case _f.CharData:
		}
	}
	return nil
}
func (_ccge *From) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"
	return _ccge.CT_Marker.MarshalXML(e, start)
}
func (_eed *CT_Drawing) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _eed.EG_Anchor != nil {
		for _, _db := range _eed.EG_Anchor {
			_db.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type From struct{ CT_Marker }

func (_fgd *To) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0078\u0064\u0072\u003a\u0074\u006f"
	return _fgd.CT_Marker.MarshalXML(e, start)
}

// Validate validates the CT_Rel and its children
func (_dcfb *CT_Rel) Validate() error {
	return _dcfb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}
func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_dcc := &CT_PictureNonVisual{}
	_dcc.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_dcc.CNvPicPr = _a.NewCT_NonVisualPictureProperties()
	return _dcc
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_fcda *CT_GroupShape) ValidateWithPath(path string) error {
	if _ead := _fcda.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _ead != nil {
		return _ead
	}
	if _baf := _fcda.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _baf != nil {
		return _baf
	}
	for _facg, _adgf := range _fcda.Choice {
		if _ccgc := _adgf.ValidateWithPath(_bf.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _facg)); _ccgc != nil {
			return _ccgc
		}
	}
	return nil
}
func NewCT_Marker() *CT_Marker               { _bgb := &CT_Marker{}; _bgb.Col = 0; _bgb.Row = 0; return _bgb }
func NewEG_ObjectChoices() *EG_ObjectChoices { _bgad := &EG_ObjectChoices{}; return _bgad }

type CT_GraphicalObjectFrame struct {
	MacroAttr        *string
	FPublishedAttr   *bool
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual
	Xfrm             *_a.CT_Transform2D
	Graphic          *_a.Graphic
}

func (_adb *CT_ConnectorNonVisual) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_ebb := _f.StartElement{Name: _f.Name{Local: "\u0078d\u0072\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_adb.CNvPr, _ebb)
	_ee := _f.StartElement{Name: _f.Name{Local: "\u0078\u0064\u0072\u003a\u0063\u004e\u0076\u0043\u0078n\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_adb.CNvCxnSpPr, _ee)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_Rel struct{ IdAttr string }

func (_dagc ST_EditAs) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_fffe := _f.Attr{}
	_fffe.Name = name
	switch _dagc {
	case ST_EditAsUnset:
		_fffe.Value = ""
	case ST_EditAsTwoCell:
		_fffe.Value = "\u0074w\u006f\u0043\u0065\u006c\u006c"
	case ST_EditAsOneCell:
		_fffe.Value = "\u006fn\u0065\u0043\u0065\u006c\u006c"
	case ST_EditAsAbsolute:
		_fffe.Value = "\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065"
	}
	return _fffe, nil
}
func (_gcd *To) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcd.CT_Marker = *NewCT_Marker()
_aef:
	for {
		_gdfb, _fabc := d.Token()
		if _fabc != nil {
			return _fabc
		}
		switch _ebcf := _gdfb.(type) {
		case _f.StartElement:
			switch _ebcf.Name {
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c"}:
				if _ffad := d.DecodeElement(&_gcd.Col, &_ebcf); _ffad != nil {
					return _ffad
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u006f\u006c\u004f\u0066\u0066"}:
				if _efae := d.DecodeElement(&_gcd.ColOff, &_ebcf); _efae != nil {
					return _efae
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077"}:
				if _gdcac := d.DecodeElement(&_gcd.Row, &_ebcf); _gdcac != nil {
					return _gdcac
				}
			case _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}, _f.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u006f\u0077\u004f\u0066\u0066"}:
				if _ggce := d.DecodeElement(&_gcd.RowOff, &_ebcf); _ggce != nil {
					return _ggce
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006eg\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020T\u006f\u0020\u0025\u0076", _ebcf.Name)
				if _aeb := d.Skip(); _aeb != nil {
					return _aeb
				}
			}
		case _f.EndElement:
			break _aef
		case _f.CharData:
		}
	}
	return nil
}

type CT_PictureNonVisual struct {
	CNvPr    *_a.CT_NonVisualDrawingProps
	CNvPicPr *_a.CT_NonVisualPictureProperties
}

func init() {
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0041nc\u0068\u006f\u0072\u0043\u006c\u0069\u0065\u006e\u0074\u0044\u0061\u0074\u0061", NewCT_AnchorClientData)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r", NewCT_Marker)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054_\u0054\u0077\u006fC\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_TwoCellAnchor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054_\u004f\u006e\u0065C\u0065\u006c\u006c\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_OneCellAnchor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0041\u0062\u0073\u006f\u006c\u0075\u0074\u0065\u0041n\u0063\u0068\u006f\u0072", NewCT_AbsoluteAnchor)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0066\u0072\u006f\u006d", NewFrom)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0074\u006f", NewTo)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0077\u0073\u0044\u0072", NewWsDr)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073", NewEG_ObjectChoices)
	_g.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", "\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr", NewEG_Anchor)
}
