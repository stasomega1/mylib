//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package chartDrawing

import (
	_e "encoding/xml"
	_ac "fmt"
	_g "github.com/stasomega1/mylib"
	_eg "github.com/stasomega1/mylib/schema/soo/dml"
	_a "strconv"
)

func NewCT_Marker() *CT_Marker { _dcda := &CT_Marker{}; _dcda.X = 0.0; _dcda.Y = 0.0; return _dcda }
func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_ded := &CT_PictureNonVisual{}
	_ded.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_ded.CNvPicPr = _eg.NewCT_NonVisualPictureProperties()
	return _ded
}

type CT_Marker struct {
	X float64
	Y float64
}

// Validate validates the CT_GraphicFrameNonVisual and its children
func (_bef *CT_GraphicFrameNonVisual) Validate() error {
	return _bef.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_fee *CT_GraphicFrame) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fee.NvGraphicFramePr = NewCT_GraphicFrameNonVisual()
	_fee.Xfrm = _eg.NewCT_Transform2D()
	_fee.Graphic = _eg.NewGraphic()
	for _, _af := range start.Attr {
		if _af.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bbd, _gbg := _af.Value, error(nil)
			if _gbg != nil {
				return _gbg
			}
			_fee.MacroAttr = &_bbd
			continue
		}
		if _af.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_adag, _ebc := _a.ParseBool(_af.Value)
			if _ebc != nil {
				return _ebc
			}
			_fee.FPublishedAttr = &_adag
			continue
		}
	}
_gd:
	for {
		_bgf, _dgb := d.Token()
		if _dgb != nil {
			return _dgb
		}
		switch _egd := _bgf.(type) {
		case _e.StartElement:
			switch _egd.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _bbg := d.DecodeElement(_fee.NvGraphicFramePr, &_egd); _bbg != nil {
					return _bbg
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}:
				if _feb := d.DecodeElement(_fee.Xfrm, &_egd); _feb != nil {
					return _feb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _cga := d.DecodeElement(_fee.Graphic, &_egd); _cga != nil {
					return _cga
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _egd.Name)
				if _bfc := d.Skip(); _bfc != nil {
					return _bfc
				}
			}
		case _e.EndElement:
			break _gd
		case _e.CharData:
		}
	}
	return nil
}

type CT_Connector struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvCxnSpPr      *CT_ConnectorNonVisual
	SpPr           *_eg.CT_ShapeProperties
	Style          *_eg.CT_ShapeStyle
}
type CT_ShapeNonVisual struct {
	CNvPr   *_eg.CT_NonVisualDrawingProps
	CNvSpPr *_eg.CT_NonVisualDrawingShapeProps
}

// ValidateWithPath validates the CT_GraphicFrame and its children, prefixing error messages with path
func (_gbe *CT_GraphicFrame) ValidateWithPath(path string) error {
	if _gaa := _gbe.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _gaa != nil {
		return _gaa
	}
	if _fgc := _gbe.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _fgc != nil {
		return _fgc
	}
	if _afc := _gbe.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _afc != nil {
		return _afc
	}
	return nil
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_effc *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _gbca := _effc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gbca != nil {
		return _gbca
	}
	if _ggfb := _effc.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _ggfb != nil {
		return _ggfb
	}
	return nil
}
func NewCT_GroupShape() *CT_GroupShape {
	_dba := &CT_GroupShape{}
	_dba.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_dba.GrpSpPr = _eg.NewCT_GroupShapeProperties()
	return _dba
}
func (_bfb *CT_GroupShape) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bfb.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_bfb.GrpSpPr = _eg.NewCT_GroupShapeProperties()
_bad:
	for {
		_gea, _efe := d.Token()
		if _efe != nil {
			return _efe
		}
		switch _gec := _gea.(type) {
		case _e.StartElement:
			switch _gec.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _dd := d.DecodeElement(_bfb.NvGrpSpPr, &_gec); _dd != nil {
					return _dd
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _cce := d.DecodeElement(_bfb.GrpSpPr, &_gec); _cce != nil {
					return _cce
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_acf := NewCT_GroupShapeChoice()
				if _afb := d.DecodeElement(&_acf.Sp, &_gec); _afb != nil {
					return _afb
				}
				_bfb.Choice = append(_bfb.Choice, _acf)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_ggd := NewCT_GroupShapeChoice()
				if _abe := d.DecodeElement(&_ggd.GrpSp, &_gec); _abe != nil {
					return _abe
				}
				_bfb.Choice = append(_bfb.Choice, _ggd)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bfa := NewCT_GroupShapeChoice()
				if _aacb := d.DecodeElement(&_bfa.GraphicFrame, &_gec); _aacb != nil {
					return _aacb
				}
				_bfb.Choice = append(_bfb.Choice, _bfa)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_gab := NewCT_GroupShapeChoice()
				if _gbef := d.DecodeElement(&_gab.CxnSp, &_gec); _gbef != nil {
					return _gbef
				}
				_bfb.Choice = append(_bfb.Choice, _gab)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bcd := NewCT_GroupShapeChoice()
				if _ced := d.DecodeElement(&_bcd.Pic, &_gec); _ced != nil {
					return _ced
				}
				_bfb.Choice = append(_bfb.Choice, _bcd)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _gec.Name)
				if _fac := d.Skip(); _fac != nil {
					return _fac
				}
			}
		case _e.EndElement:
			break _bad
		case _e.CharData:
		}
	}
	return nil
}
func (_fce *CT_GroupShape) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_dgcd := _e.StartElement{Name: _e.Name{Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_fce.NvGrpSpPr, _dgcd)
	_gegb := _e.StartElement{Name: _e.Name{Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fce.GrpSpPr, _gegb)
	if _fce.Choice != nil {
		for _, _ceab := range _fce.Choice {
			_ceab.MarshalXML(e, _e.StartElement{})
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dg *CT_AbsSizeAnchor) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dg.From = NewCT_Marker()
	_dg.Ext = _eg.NewCT_PositiveSize2D()
_aa:
	for {
		_aaa, _bf := d.Token()
		if _bf != nil {
			return _bf
		}
		switch _ge := _aaa.(type) {
		case _e.StartElement:
			switch _ge.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _bb := d.DecodeElement(_dg.From, &_ge); _bb != nil {
					return _bb
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _dgd := d.DecodeElement(_dg.Ext, &_ge); _dgd != nil {
					return _dgd
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_dg.Choice = NewEG_ObjectChoicesChoice()
				if _gc := d.DecodeElement(&_dg.Choice.Sp, &_ge); _gc != nil {
					return _gc
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_dg.Choice = NewEG_ObjectChoicesChoice()
				if _c := d.DecodeElement(&_dg.Choice.GrpSp, &_ge); _c != nil {
					return _c
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_dg.Choice = NewEG_ObjectChoicesChoice()
				if _f := d.DecodeElement(&_dg.Choice.GraphicFrame, &_ge); _f != nil {
					return _f
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_dg.Choice = NewEG_ObjectChoicesChoice()
				if _da := d.DecodeElement(&_dg.Choice.CxnSp, &_ge); _da != nil {
					return _da
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_dg.Choice = NewEG_ObjectChoicesChoice()
				if _bg := d.DecodeElement(&_dg.Choice.Pic, &_ge); _bg != nil {
					return _bg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _ge.Name)
				if _cb := d.Skip(); _cb != nil {
					return _cb
				}
			}
		case _e.EndElement:
			break _aa
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicFrameNonVisual and its children, prefixing error messages with path
func (_egfg *CT_GraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _eda := _egfg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _eda != nil {
		return _eda
	}
	if _faa := _egfg.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _faa != nil {
		return _faa
	}
	return nil
}

type CT_GroupShape struct {
	NvGrpSpPr *CT_GroupShapeNonVisual
	GrpSpPr   *_eg.CT_GroupShapeProperties
	Choice    []*CT_GroupShapeChoice
}

func NewEG_Anchor() *EG_Anchor { _bgbd := &EG_Anchor{}; return _bgbd }
func (_fbg *CT_ConnectorNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_fg := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_fbg.CNvPr, _fg)
	_cba := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fbg.CNvCxnSpPr, _cba)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func _dfg(_ccb bool) uint8 {
	if _ccb {
		return 1
	}
	return 0
}

// Validate validates the CT_Connector and its children
func (_daa *CT_Connector) Validate() error {
	return _daa.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_badf *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _ffg, _ccf := range _badf.Sp {
		if _ffd := _ccf.ValidateWithPath(_ac.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _ffg)); _ffd != nil {
			return _ffd
		}
	}
	for _faf, _geac := range _badf.GrpSp {
		if _cde := _geac.ValidateWithPath(_ac.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _faf)); _cde != nil {
			return _cde
		}
	}
	for _bcg, _df := range _badf.GraphicFrame {
		if _adbf := _df.ValidateWithPath(_ac.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _bcg)); _adbf != nil {
			return _adbf
		}
	}
	for _fgac, _bea := range _badf.CxnSp {
		if _bca := _bea.ValidateWithPath(_ac.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _fgac)); _bca != nil {
			return _bca
		}
	}
	for _abc, _eca := range _badf.Pic {
		if _gde := _eca.ValidateWithPath(_ac.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _abc)); _gde != nil {
			return _gde
		}
	}
	return nil
}

type CT_RelSizeAnchor struct {
	From   *CT_Marker
	To     *CT_Marker
	Choice *EG_ObjectChoicesChoice
}

func (_cdb *CT_GroupShapeNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cdb.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_cdb.CNvGrpSpPr = _eg.NewCT_NonVisualGroupDrawingShapeProps()
_aee:
	for {
		_bed, _acbf := d.Token()
		if _acbf != nil {
			return _acbf
		}
		switch _gcad := _bed.(type) {
		case _e.StartElement:
			switch _gcad.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gbf := d.DecodeElement(_cdb.CNvPr, &_gcad); _gbf != nil {
					return _gbf
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _ace := d.DecodeElement(_cdb.CNvGrpSpPr, &_gcad); _ace != nil {
					return _ace
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gcad.Name)
				if _fdd := d.Skip(); _fdd != nil {
					return _fdd
				}
			}
		case _e.EndElement:
			break _aee
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AbsSizeAnchor and its children, prefixing error messages with path
func (_ca *CT_AbsSizeAnchor) ValidateWithPath(path string) error {
	if _ed := _ca.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _ed != nil {
		return _ed
	}
	if _ba := _ca.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _ba != nil {
		return _ba
	}
	if _ca.Choice != nil {
		if _dgg := _ca.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dgg != nil {
			return _dgg
		}
	}
	return nil
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_gg *CT_ConnectorNonVisual) Validate() error {
	return _gg.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

type CT_AbsSizeAnchor struct {
	From   *CT_Marker
	Ext    *_eg.CT_PositiveSize2D
	Choice *EG_ObjectChoicesChoice
}

func (_dgba *CT_GroupShapeChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dgba.Sp != nil {
		_gdg := _e.StartElement{Name: _e.Name{Local: "\u0073\u0070"}}
		for _, _adaa := range _dgba.Sp {
			e.EncodeElement(_adaa, _gdg)
		}
	}
	if _dgba.GrpSp != nil {
		_ffa := _e.StartElement{Name: _e.Name{Local: "\u0067\u0072\u0070S\u0070"}}
		for _, _eba := range _dgba.GrpSp {
			e.EncodeElement(_eba, _ffa)
		}
	}
	if _dgba.GraphicFrame != nil {
		_afg := _e.StartElement{Name: _e.Name{Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		for _, _fbgd := range _dgba.GraphicFrame {
			e.EncodeElement(_fbgd, _afg)
		}
	}
	if _dgba.CxnSp != nil {
		_cfb := _e.StartElement{Name: _e.Name{Local: "\u0063\u0078\u006eS\u0070"}}
		for _, _ceaf := range _dgba.CxnSp {
			e.EncodeElement(_ceaf, _cfb)
		}
	}
	if _dgba.Pic != nil {
		_adf := _e.StartElement{Name: _e.Name{Local: "\u0070\u0069\u0063"}}
		for _, _efd := range _dgba.Pic {
			e.EncodeElement(_efd, _adf)
		}
	}
	return nil
}
func (_cac *CT_ConnectorNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cac.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_cac.CNvCxnSpPr = _eg.NewCT_NonVisualConnectorProperties()
_ec:
	for {
		_fe, _fgg := d.Token()
		if _fgg != nil {
			return _fgg
		}
		switch _de := _fe.(type) {
		case _e.StartElement:
			switch _de.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ff := d.DecodeElement(_cac.CNvPr, &_de); _ff != nil {
					return _ff
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _agg := d.DecodeElement(_cac.CNvCxnSpPr, &_de); _agg != nil {
					return _agg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _de.Name)
				if _fed := d.Skip(); _fed != nil {
					return _fed
				}
			}
		case _e.EndElement:
			break _ec
		case _e.CharData:
		}
	}
	return nil
}
func (_gdfg *EG_ObjectChoices) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gba:
	for {
		_cdd, _bgd := d.Token()
		if _bgd != nil {
			return _bgd
		}
		switch _beeg := _cdd.(type) {
		case _e.StartElement:
			switch _beeg.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_gdfg.Choice = NewEG_ObjectChoicesChoice()
				if _dfea := d.DecodeElement(&_gdfg.Choice.Sp, &_beeg); _dfea != nil {
					return _dfea
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_gdfg.Choice = NewEG_ObjectChoicesChoice()
				if _gge := d.DecodeElement(&_gdfg.Choice.GrpSp, &_beeg); _gge != nil {
					return _gge
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gdfg.Choice = NewEG_ObjectChoicesChoice()
				if _gbeb := d.DecodeElement(&_gdfg.Choice.GraphicFrame, &_beeg); _gbeb != nil {
					return _gbeb
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_gdfg.Choice = NewEG_ObjectChoicesChoice()
				if _bfcb := d.DecodeElement(&_gdfg.Choice.CxnSp, &_beeg); _bfcb != nil {
					return _bfcb
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_gdfg.Choice = NewEG_ObjectChoicesChoice()
				if _becb := d.DecodeElement(&_gdfg.Choice.Pic, &_beeg); _becb != nil {
					return _becb
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0020\u0025v", _beeg.Name)
				if _dfeg := d.Skip(); _dfeg != nil {
					return _dfeg
				}
			}
		case _e.EndElement:
			break _gba
		case _e.CharData:
		}
	}
	return nil
}

type EG_ObjectChoices struct{ Choice *EG_ObjectChoicesChoice }

func NewCT_Shape() *CT_Shape {
	_ccd := &CT_Shape{}
	_ccd.NvSpPr = NewCT_ShapeNonVisual()
	_ccd.SpPr = _eg.NewCT_ShapeProperties()
	return _ccd
}
func NewCT_Picture() *CT_Picture {
	_bfbc := &CT_Picture{}
	_bfbc.NvPicPr = NewCT_PictureNonVisual()
	_bfbc.BlipFill = _eg.NewCT_BlipFillProperties()
	_bfbc.SpPr = _eg.NewCT_ShapeProperties()
	return _bfbc
}

type EG_ObjectChoicesChoice struct {
	Sp           *CT_Shape
	GrpSp        *CT_GroupShape
	GraphicFrame *CT_GraphicFrame
	CxnSp        *CT_Connector
	Pic          *CT_Picture
}

func (_ceac *CT_RelSizeAnchor) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ceac.From = NewCT_Marker()
	_ceac.To = NewCT_Marker()
_cedf:
	for {
		_ddbc, _agge := d.Token()
		if _agge != nil {
			return _agge
		}
		switch _bfbd := _ddbc.(type) {
		case _e.StartElement:
			switch _bfbd.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _dbe := d.DecodeElement(_ceac.From, &_bfbd); _dbe != nil {
					return _dbe
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _cfe := d.DecodeElement(_ceac.To, &_bfbd); _cfe != nil {
					return _cfe
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_ceac.Choice = NewEG_ObjectChoicesChoice()
				if _ffgg := d.DecodeElement(&_ceac.Choice.Sp, &_bfbd); _ffgg != nil {
					return _ffgg
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_ceac.Choice = NewEG_ObjectChoicesChoice()
				if _edfe := d.DecodeElement(&_ceac.Choice.GrpSp, &_bfbd); _edfe != nil {
					return _edfe
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_ceac.Choice = NewEG_ObjectChoicesChoice()
				if _dbag := d.DecodeElement(&_ceac.Choice.GraphicFrame, &_bfbd); _dbag != nil {
					return _dbag
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_ceac.Choice = NewEG_ObjectChoicesChoice()
				if _eaf := d.DecodeElement(&_ceac.Choice.CxnSp, &_bfbd); _eaf != nil {
					return _eaf
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_ceac.Choice = NewEG_ObjectChoicesChoice()
				if _ecab := d.DecodeElement(&_ceac.Choice.Pic, &_bfbd); _ecab != nil {
					return _ecab
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _bfbd.Name)
				if _deda := d.Skip(); _deda != nil {
					return _deda
				}
			}
		case _e.EndElement:
			break _cedf
		case _e.CharData:
		}
	}
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
}
type CT_PictureNonVisual struct {
	CNvPr    *_eg.CT_NonVisualDrawingProps
	CNvPicPr *_eg.CT_NonVisualPictureProperties
}

// Validate validates the CT_Drawing and its children
func (_agb *CT_Drawing) Validate() error {
	return _agb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func NewCT_Drawing() *CT_Drawing { _edd := &CT_Drawing{}; return _edd }

// Validate validates the CT_GroupShapeNonVisual and its children
func (_gegf *CT_GroupShapeNonVisual) Validate() error {
	return _gegf.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

type CT_ConnectorNonVisual struct {
	CNvPr      *_eg.CT_NonVisualDrawingProps
	CNvCxnSpPr *_eg.CT_NonVisualConnectorProperties
}

// Validate validates the CT_GroupShapeChoice and its children
func (_adg *CT_GroupShapeChoice) Validate() error {
	return _adg.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_fgcb *CT_GraphicFrameNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_dgc := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_fgcb.CNvPr, _dgc)
	_adb := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_fgcb.CNvGraphicFramePr, _adb)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type EG_Anchor struct {
	RelSizeAnchor *CT_RelSizeAnchor
	AbsSizeAnchor *CT_AbsSizeAnchor
}

// ValidateWithPath validates the EG_ObjectChoices and its children, prefixing error messages with path
func (_fcg *EG_ObjectChoices) ValidateWithPath(path string) error {
	if _fcg.Choice != nil {
		if _gfff := _fcg.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _gfff != nil {
			return _gfff
		}
	}
	return nil
}
func (_bdc *CT_ShapeNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gbba := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_bdc.CNvPr, _gbba)
	_dfe := _e.StartElement{Name: _e.Name{Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_bdc.CNvSpPr, _dfe)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_ead := &CT_ShapeNonVisual{}
	_ead.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_ead.CNvSpPr = _eg.NewCT_NonVisualDrawingShapeProps()
	return _ead
}
func (_dde *EG_ObjectChoices) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dde.Choice != nil {
		_dde.Choice.MarshalXML(e, _e.StartElement{})
	}
	return nil
}
func (_bbf *CT_Picture) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bbf.NvPicPr = NewCT_PictureNonVisual()
	_bbf.BlipFill = _eg.NewCT_BlipFillProperties()
	_bbf.SpPr = _eg.NewCT_ShapeProperties()
	for _, _gcea := range start.Attr {
		if _gcea.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_gdf, _cgd := _gcea.Value, error(nil)
			if _cgd != nil {
				return _cgd
			}
			_bbf.MacroAttr = &_gdf
			continue
		}
		if _gcea.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_cbgd, _edff := _a.ParseBool(_gcea.Value)
			if _edff != nil {
				return _edff
			}
			_bbf.FPublishedAttr = &_cbgd
			continue
		}
	}
_faca:
	for {
		_badfe, _dbab := d.Token()
		if _dbab != nil {
			return _dbab
		}
		switch _gfc := _badfe.(type) {
		case _e.StartElement:
			switch _gfc.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _gff := d.DecodeElement(_bbf.NvPicPr, &_gfc); _gff != nil {
					return _gff
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _fff := d.DecodeElement(_bbf.BlipFill, &_gfc); _fff != nil {
					return _fff
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _ecdc := d.DecodeElement(_bbf.SpPr, &_gfc); _ecdc != nil {
					return _ecdc
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_bbf.Style = _eg.NewCT_ShapeStyle()
				if _afd := d.DecodeElement(_bbf.Style, &_gfc); _afd != nil {
					return _afd
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _gfc.Name)
				if _ddc := d.Skip(); _ddc != nil {
					return _ddc
				}
			}
		case _e.EndElement:
			break _faca
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_gb *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _bgc := _gb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bgc != nil {
		return _bgc
	}
	if _egb := _gb.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _egb != nil {
		return _egb
	}
	return nil
}
func (_abb *EG_ObjectChoicesChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eaae:
	for {
		_fba, _eec := d.Token()
		if _eec != nil {
			return _eec
		}
		switch _ebcf := _fba.(type) {
		case _e.StartElement:
			switch _ebcf.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_abb.Sp = NewCT_Shape()
				if _defa := d.DecodeElement(_abb.Sp, &_ebcf); _defa != nil {
					return _defa
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_abb.GrpSp = NewCT_GroupShape()
				if _fbfd := d.DecodeElement(_abb.GrpSp, &_ebcf); _fbfd != nil {
					return _fbfd
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_abb.GraphicFrame = NewCT_GraphicFrame()
				if _afe := d.DecodeElement(_abb.GraphicFrame, &_ebcf); _afe != nil {
					return _afe
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_abb.CxnSp = NewCT_Connector()
				if _edg := d.DecodeElement(_abb.CxnSp, &_ebcf); _edg != nil {
					return _edg
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_abb.Pic = NewCT_Picture()
				if _aacg := d.DecodeElement(_abb.Pic, &_ebcf); _aacg != nil {
					return _aacg
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u004f\u0062\u006a\u0065c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ebcf.Name)
				if _dfd := d.Skip(); _dfd != nil {
					return _dfd
				}
			}
		case _e.EndElement:
			break _eaae
		case _e.CharData:
		}
	}
	return nil
}
func (_cge *CT_GroupShapeChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gac:
	for {
		_cff, _efde := d.Token()
		if _efde != nil {
			return _efde
		}
		switch _ebb := _cff.(type) {
		case _e.StartElement:
			switch _ebb.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_gdb := NewCT_Shape()
				if _ffac := d.DecodeElement(_gdb, &_ebb); _ffac != nil {
					return _ffac
				}
				_cge.Sp = append(_cge.Sp, _gdb)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_cgf := NewCT_GroupShape()
				if _efdb := d.DecodeElement(_cgf, &_ebb); _efdb != nil {
					return _efdb
				}
				_cge.GrpSp = append(_cge.GrpSp, _cgf)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gbeg := NewCT_GraphicFrame()
				if _bac := d.DecodeElement(_gbeg, &_ebb); _bac != nil {
					return _bac
				}
				_cge.GraphicFrame = append(_cge.GraphicFrame, _gbeg)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_deb := NewCT_Connector()
				if _egc := d.DecodeElement(_deb, &_ebb); _egc != nil {
					return _egc
				}
				_cge.CxnSp = append(_cge.CxnSp, _deb)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_beg := NewCT_Picture()
				if _egbd := d.DecodeElement(_beg, &_ebb); _egbd != nil {
					return _egbd
				}
				_cge.Pic = append(_cge.Pic, _beg)
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ebb.Name)
				if _gca := d.Skip(); _gca != nil {
					return _gca
				}
			}
		case _e.EndElement:
			break _gac
		case _e.CharData:
		}
	}
	return nil
}
func (_dgcg *CT_ShapeNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dgcg.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_dgcg.CNvSpPr = _eg.NewCT_NonVisualDrawingShapeProps()
_bfad:
	for {
		_ebbb, _cdc := d.Token()
		if _cdc != nil {
			return _cdc
		}
		switch _ceb := _ebbb.(type) {
		case _e.StartElement:
			switch _ceb.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _aag := d.DecodeElement(_dgcg.CNvPr, &_ceb); _aag != nil {
					return _aag
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _bfe := d.DecodeElement(_dgcg.CNvSpPr, &_ceb); _bfe != nil {
					return _bfe
				}
			default:
				_g.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ceb.Name)
				if _affe := d.Skip(); _affe != nil {
					return _affe
				}
			}
		case _e.EndElement:
			break _bfad
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AbsSizeAnchor and its children
func (_cg *CT_AbsSizeAnchor) Validate() error {
	return _cg.ValidateWithPath("\u0043\u0054_\u0041\u0062\u0073S\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072")
}
func (_cgeb *EG_Anchor) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cgeb.RelSizeAnchor != nil {
		_cee := _e.StartElement{Name: _e.Name{Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_cgeb.RelSizeAnchor, _cee)
	}
	if _cgeb.AbsSizeAnchor != nil {
		_efa := _e.StartElement{Name: _e.Name{Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_cgeb.AbsSizeAnchor, _efa)
	}
	return nil
}
func (_abg *CT_Drawing) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Name.Local = "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"
	e.EncodeToken(start)
	if _abg.EG_Anchor != nil {
		for _, _fag := range _abg.EG_Anchor {
			_fag.MarshalXML(e, _e.StartElement{})
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_Shape struct {
	MacroAttr      *string
	TextlinkAttr   *string
	FLocksTextAttr *bool
	FPublishedAttr *bool
	NvSpPr         *CT_ShapeNonVisual
	SpPr           *_eg.CT_ShapeProperties
	Style          *_eg.CT_ShapeStyle
	TxBody         *_eg.CT_TextBody
}

func (_bce *CT_Marker) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gcbd := _e.StartElement{Name: _e.Name{Local: "\u0078"}}
	e.EncodeElement(_bce.X, _gcbd)
	_dee := _e.StartElement{Name: _e.Name{Local: "\u0079"}}
	e.EncodeElement(_bce.Y, _dee)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_edb *CT_Drawing) ValidateWithPath(path string) error {
	for _gbc, _cdg := range _edb.EG_Anchor {
		if _ada := _cdg.ValidateWithPath(_ac.Sprintf("\u0025\u0073/\u0045\u0047\u005fA\u006e\u0063\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _gbc)); _ada != nil {
			return _ada
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_dcb *CT_GroupShape) ValidateWithPath(path string) error {
	if _cfg := _dcb.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cfg != nil {
		return _cfg
	}
	if _baa := _dcb.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _baa != nil {
		return _baa
	}
	for _gf, _edc := range _dcb.Choice {
		if _fcb := _edc.ValidateWithPath(_ac.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gf)); _fcb != nil {
			return _fcb
		}
	}
	return nil
}
func (_bfgb *CT_GroupShapeNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_age := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_bfgb.CNvPr, _age)
	_acb := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_bfgb.CNvGrpSpPr, _acb)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_GroupShapeNonVisual struct {
	CNvPr      *_eg.CT_NonVisualDrawingProps
	CNvGrpSpPr *_eg.CT_NonVisualGroupDrawingShapeProps
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_adff *CT_Picture) ValidateWithPath(path string) error {
	if _ddcc := _adff.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _ddcc != nil {
		return _ddcc
	}
	if _facg := _adff.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _facg != nil {
		return _facg
	}
	if _badd := _adff.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _badd != nil {
		return _badd
	}
	if _adff.Style != nil {
		if _bcc := _adff.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bcc != nil {
			return _bcc
		}
	}
	return nil
}
func NewCT_GraphicFrameNonVisual() *CT_GraphicFrameNonVisual {
	_gcb := &CT_GraphicFrameNonVisual{}
	_gcb.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_gcb.CNvGraphicFramePr = _eg.NewCT_NonVisualGraphicFrameProperties()
	return _gcb
}
func NewCT_GraphicFrame() *CT_GraphicFrame {
	_ege := &CT_GraphicFrame{}
	_ege.NvGraphicFramePr = NewCT_GraphicFrameNonVisual()
	_ege.Xfrm = _eg.NewCT_Transform2D()
	_ege.Graphic = _eg.NewGraphic()
	return _ege
}

// ValidateWithPath validates the CT_RelSizeAnchor and its children, prefixing error messages with path
func (_ebf *CT_RelSizeAnchor) ValidateWithPath(path string) error {
	if _aab := _ebf.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _aab != nil {
		return _aab
	}
	if _gbed := _ebf.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _gbed != nil {
		return _gbed
	}
	if _ebf.Choice != nil {
		if _egff := _ebf.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _egff != nil {
			return _egff
		}
	}
	return nil
}
func (_defg *EG_Anchor) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bgef:
	for {
		_beff, _gbcc := d.Token()
		if _gbcc != nil {
			return _gbcc
		}
		switch _gfcd := _beff.(type) {
		case _e.StartElement:
			switch _gfcd.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_defg.RelSizeAnchor = NewCT_RelSizeAnchor()
				if _facf := d.DecodeElement(_defg.RelSizeAnchor, &_gfcd); _facf != nil {
					return _facf
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_defg.AbsSizeAnchor = NewCT_AbsSizeAnchor()
				if _acd := d.DecodeElement(_defg.AbsSizeAnchor, &_gfcd); _acd != nil {
					return _acd
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0041\u006e\u0063h\u006f\u0072 \u0025\u0076", _gfcd.Name)
				if _gefc := d.Skip(); _gefc != nil {
					return _gefc
				}
			}
		case _e.EndElement:
			break _bgef
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_gfa *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _dac := _gfa.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dac != nil {
		return _dac
	}
	if _ede := _gfa.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _ede != nil {
		return _ede
	}
	return nil
}

// Validate validates the CT_ShapeNonVisual and its children
func (_geee *CT_ShapeNonVisual) Validate() error {
	return _geee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}
func (_dbg *CT_PictureNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dbg.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_dbg.CNvPicPr = _eg.NewCT_NonVisualPictureProperties()
_abge:
	for {
		_eaa, _aef := d.Token()
		if _aef != nil {
			return _aef
		}
		switch _eddf := _eaa.(type) {
		case _e.StartElement:
			switch _eddf.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _daad := d.DecodeElement(_dbg.CNvPr, &_eddf); _daad != nil {
					return _daad
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _aff := d.DecodeElement(_dbg.CNvPicPr, &_eddf); _aff != nil {
					return _aff
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _eddf.Name)
				if _cfc := d.Skip(); _cfc != nil {
					return _cfc
				}
			}
		case _e.EndElement:
			break _abge
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Picture and its children
func (_ffb *CT_Picture) Validate() error {
	return _ffb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}
func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_gcd := &CT_ConnectorNonVisual{}
	_gcd.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_gcd.CNvCxnSpPr = _eg.NewCT_NonVisualConnectorProperties()
	return _gcd
}

// Validate validates the CT_GroupShape and its children
func (_gae *CT_GroupShape) Validate() error {
	return _gae.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}
func NewCT_RelSizeAnchor() *CT_RelSizeAnchor {
	_ddb := &CT_RelSizeAnchor{}
	_ddb.From = NewCT_Marker()
	_ddb.To = NewCT_Marker()
	return _ddb
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_befb *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _feag := _befb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _feag != nil {
		return _feag
	}
	if _egbdd := _befb.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _egbdd != nil {
		return _egbdd
	}
	return nil
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_bdaf *CT_Shape) ValidateWithPath(path string) error {
	if _gcf := _bdaf.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _gcf != nil {
		return _gcf
	}
	if _dacb := _bdaf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dacb != nil {
		return _dacb
	}
	if _bdaf.Style != nil {
		if _becg := _bdaf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _becg != nil {
			return _becg
		}
	}
	if _bdaf.TxBody != nil {
		if _gga := _bdaf.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _gga != nil {
			return _gga
		}
	}
	return nil
}

// Validate validates the EG_ObjectChoicesChoice and its children
func (_dedg *EG_ObjectChoicesChoice) Validate() error {
	return _dedg.ValidateWithPath("\u0045\u0047\u005f\u004fbj\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069c\u0065")
}
func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _egbc := &CT_GroupShapeChoice{}; return _egbc }

type CT_GraphicFrame struct {
	MacroAttr        *string
	FPublishedAttr   *bool
	NvGraphicFramePr *CT_GraphicFrameNonVisual
	Xfrm             *_eg.CT_Transform2D
	Graphic          *_eg.Graphic
}

func NewEG_ObjectChoices() *EG_ObjectChoices { _edaa := &EG_ObjectChoices{}; return _edaa }
func (_ged *CT_Connector) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ged.MacroAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _ac.Sprintf("\u0025\u0076", *_ged.MacroAttr)})
	}
	if _ged.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _ac.Sprintf("\u0025\u0064", _dfg(*_ged.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_ce := _e.StartElement{Name: _e.Name{Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}}
	e.EncodeElement(_ged.NvCxnSpPr, _ce)
	_gef := _e.StartElement{Name: _e.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ged.SpPr, _gef)
	if _ged.Style != nil {
		_ag := _e.StartElement{Name: _e.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_ged.Style, _ag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_Anchor and its children, prefixing error messages with path
func (_egaf *EG_Anchor) ValidateWithPath(path string) error {
	if _egaf.RelSizeAnchor != nil {
		if _cae := _egaf.RelSizeAnchor.ValidateWithPath(path + "\u002f\u0052\u0065\u006c\u0053\u0069\u007a\u0065\u0041n\u0063\u0068\u006f\u0072"); _cae != nil {
			return _cae
		}
	}
	if _egaf.AbsSizeAnchor != nil {
		if _egdd := _egaf.AbsSizeAnchor.ValidateWithPath(path + "\u002f\u0041\u0062\u0073\u0053\u0069\u007a\u0065\u0041n\u0063\u0068\u006f\u0072"); _egdd != nil {
			return _egdd
		}
	}
	return nil
}

// Validate validates the CT_Shape and its children
func (_gee *CT_Shape) Validate() error {
	return _gee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}
func (_dbf *CT_RelSizeAnchor) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_eab := _e.StartElement{Name: _e.Name{Local: "\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_dbf.From, _eab)
	_babg := _e.StartElement{Name: _e.Name{Local: "\u0074\u006f"}}
	e.EncodeElement(_dbf.To, _babg)
	if _dbf.Choice != nil {
		_dbf.Choice.MarshalXML(e, _e.StartElement{})
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dc *CT_Connector) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dc.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_dc.SpPr = _eg.NewCT_ShapeProperties()
	for _, _ga := range start.Attr {
		if _ga.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bab, _db := _ga.Value, error(nil)
			if _db != nil {
				return _db
			}
			_dc.MacroAttr = &_bab
			continue
		}
		if _ga.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_dce, _fab := _a.ParseBool(_ga.Value)
			if _fab != nil {
				return _fab
			}
			_dc.FPublishedAttr = &_dce
			continue
		}
	}
_ega:
	for {
		_gce, _cea := d.Token()
		if _cea != nil {
			return _cea
		}
		switch _dbb := _gce.(type) {
		case _e.StartElement:
			switch _dbb.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _ea := d.DecodeElement(_dc.NvCxnSpPr, &_dbb); _ea != nil {
					return _ea
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _dga := d.DecodeElement(_dc.SpPr, &_dbb); _dga != nil {
					return _dga
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_dc.Style = _eg.NewCT_ShapeStyle()
				if _bc := d.DecodeElement(_dc.Style, &_dbb); _bc != nil {
					return _bc
				}
			default:
				_g.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _dbb.Name)
				if _dcd := d.Skip(); _dcd != nil {
					return _dcd
				}
			}
		case _e.EndElement:
			break _ega
		case _e.CharData:
		}
	}
	return nil
}
func (_edcd *CT_Marker) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_edcd.X = 0.0
	_edcd.Y = 0.0
_cfa:
	for {
		_ee, _acc := d.Token()
		if _acc != nil {
			return _acc
		}
		switch _ecd := _ee.(type) {
		case _e.StartElement:
			switch _ecd.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078"}:
				if _becd := d.DecodeElement(&_edcd.X, &_ecd); _becd != nil {
					return _becd
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0079"}:
				if _gfaa := d.DecodeElement(&_edcd.Y, &_ecd); _gfaa != nil {
					return _gfaa
				}
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0072k\u0065\u0072 \u0025\u0076", _ecd.Name)
				if _efb := d.Skip(); _efb != nil {
					return _efb
				}
			}
		case _e.EndElement:
			break _cfa
		case _e.CharData:
		}
	}
	return nil
}
func (_ceg *CT_PictureNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gaab := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_ceg.CNvPr, _gaab)
	_bfdc := _e.StartElement{Name: _e.Name{Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_ceg.CNvPicPr, _bfdc)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_edad *CT_Picture) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _edad.MacroAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _ac.Sprintf("\u0025\u0076", *_edad.MacroAttr)})
	}
	if _edad.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _ac.Sprintf("\u0025\u0064", _dfg(*_edad.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_gcadb := _e.StartElement{Name: _e.Name{Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_edad.NvPicPr, _gcadb)
	_eff := _e.StartElement{Name: _e.Name{Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_edad.BlipFill, _eff)
	_ccg := _e.StartElement{Name: _e.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_edad.SpPr, _ccg)
	if _edad.Style != nil {
		_gace := _e.StartElement{Name: _e.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_edad.Style, _gace)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Marker and its children
func (_ffag *CT_Marker) Validate() error {
	return _ffag.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r")
}
func (_ggag *EG_ObjectChoicesChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ggag.Sp != nil {
		_dcf := _e.StartElement{Name: _e.Name{Local: "\u0073\u0070"}}
		e.EncodeElement(_ggag.Sp, _dcf)
	}
	if _ggag.GrpSp != nil {
		_efdeg := _e.StartElement{Name: _e.Name{Local: "\u0067\u0072\u0070S\u0070"}}
		e.EncodeElement(_ggag.GrpSp, _efdeg)
	}
	if _ggag.GraphicFrame != nil {
		_cacg := _e.StartElement{Name: _e.Name{Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		e.EncodeElement(_ggag.GraphicFrame, _cacg)
	}
	if _ggag.CxnSp != nil {
		_afbe := _e.StartElement{Name: _e.Name{Local: "\u0063\u0078\u006eS\u0070"}}
		e.EncodeElement(_ggag.CxnSp, _afbe)
	}
	if _ggag.Pic != nil {
		_eeg := _e.StartElement{Name: _e.Name{Local: "\u0070\u0069\u0063"}}
		e.EncodeElement(_ggag.Pic, _eeg)
	}
	return nil
}
func NewEG_ObjectChoicesChoice() *EG_ObjectChoicesChoice {
	_cdf := &EG_ObjectChoicesChoice{}
	return _cdf
}
func (_adba *CT_Shape) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_adba.NvSpPr = NewCT_ShapeNonVisual()
	_adba.SpPr = _eg.NewCT_ShapeProperties()
	for _, _gda := range start.Attr {
		if _gda.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_aaf, _ddf := _gda.Value, error(nil)
			if _ddf != nil {
				return _ddf
			}
			_adba.MacroAttr = &_aaf
			continue
		}
		if _gda.Name.Local == "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b" {
			_cace, _fceg := _gda.Value, error(nil)
			if _fceg != nil {
				return _fceg
			}
			_adba.TextlinkAttr = &_cace
			continue
		}
		if _gda.Name.Local == "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074" {
			_cgfg, _aga := _a.ParseBool(_gda.Value)
			if _aga != nil {
				return _aga
			}
			_adba.FLocksTextAttr = &_cgfg
			continue
		}
		if _gda.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_cbf, _gffg := _a.ParseBool(_gda.Value)
			if _gffg != nil {
				return _gffg
			}
			_adba.FPublishedAttr = &_cbf
			continue
		}
	}
_bgca:
	for {
		_fded, _dbbc := d.Token()
		if _dbbc != nil {
			return _dbbc
		}
		switch _ebad := _fded.(type) {
		case _e.StartElement:
			switch _ebad.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _bd := d.DecodeElement(_adba.NvSpPr, &_ebad); _bd != nil {
					return _bd
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _deeg := d.DecodeElement(_adba.SpPr, &_ebad); _deeg != nil {
					return _deeg
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_adba.Style = _eg.NewCT_ShapeStyle()
				if _bda := d.DecodeElement(_adba.Style, &_ebad); _bda != nil {
					return _bda
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_adba.TxBody = _eg.NewCT_TextBody()
				if _eac := d.DecodeElement(_adba.TxBody, &_ebad); _eac != nil {
					return _eac
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _ebad.Name)
				if _gbb := d.Skip(); _gbb != nil {
					return _gbb
				}
			}
		case _e.EndElement:
			break _bgca
		case _e.CharData:
		}
	}
	return nil
}

type CT_Picture struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvPicPr        *CT_PictureNonVisual
	BlipFill       *_eg.CT_BlipFillProperties
	SpPr           *_eg.CT_ShapeProperties
	Style          *_eg.CT_ShapeStyle
}

func (_aac *CT_Drawing) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fgf:
	for {
		_eb, _cf := d.Token()
		if _cf != nil {
			return _cf
		}
		switch _be := _eb.(type) {
		case _e.StartElement:
			switch _be.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_dag := NewEG_Anchor()
				_dag.RelSizeAnchor = NewCT_RelSizeAnchor()
				if _fbf := d.DecodeElement(_dag.RelSizeAnchor, &_be); _fbf != nil {
					return _fbf
				}
				_aac.EG_Anchor = append(_aac.EG_Anchor, _dag)
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_fc := NewEG_Anchor()
				_fc.AbsSizeAnchor = NewCT_AbsSizeAnchor()
				if _cecg := d.DecodeElement(_fc.AbsSizeAnchor, &_be); _cecg != nil {
					return _cecg
				}
				_aac.EG_Anchor = append(_aac.EG_Anchor, _fc)
			default:
				_g.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0020\u0025\u0076", _be.Name)
				if _cc := d.Skip(); _cc != nil {
					return _cc
				}
			}
		case _e.EndElement:
			break _fgf
		case _e.CharData:
		}
	}
	return nil
}
func (_ef *CT_AbsSizeAnchor) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_d := _e.StartElement{Name: _e.Name{Local: "\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_ef.From, _d)
	_ab := _e.StartElement{Name: _e.Name{Local: "\u0065\u0078\u0074"}}
	e.EncodeElement(_ef.Ext, _ab)
	if _ef.Choice != nil {
		_ef.Choice.MarshalXML(e, _e.StartElement{})
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cbg *CT_GraphicFrame) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cbg.MacroAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _ac.Sprintf("\u0025\u0076", *_cbg.MacroAttr)})
	}
	if _cbg.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _ac.Sprintf("\u0025\u0064", _dfg(*_cbg.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_adc := _e.StartElement{Name: _e.Name{Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_cbg.NvGraphicFramePr, _adc)
	_bec := _e.StartElement{Name: _e.Name{Local: "\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_cbg.Xfrm, _bec)
	_dgab := _e.StartElement{Name: _e.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_cbg.Graphic, _dgab)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_AbsSizeAnchor() *CT_AbsSizeAnchor {
	_ad := &CT_AbsSizeAnchor{}
	_ad.From = NewCT_Marker()
	_ad.Ext = _eg.NewCT_PositiveSize2D()
	return _ad
}

// Validate validates the CT_PictureNonVisual and its children
func (_cfce *CT_PictureNonVisual) Validate() error {
	return _cfce.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_cec *CT_Connector) ValidateWithPath(path string) error {
	if _cd := _cec.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _cd != nil {
		return _cd
	}
	if _geg := _cec.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _geg != nil {
		return _geg
	}
	if _cec.Style != nil {
		if _fb := _cec.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _fb != nil {
			return _fb
		}
	}
	return nil
}

type CT_GraphicFrameNonVisual struct {
	CNvPr             *_eg.CT_NonVisualDrawingProps
	CNvGraphicFramePr *_eg.CT_NonVisualGraphicFrameProperties
}

// Validate validates the CT_RelSizeAnchor and its children
func (_dfc *CT_RelSizeAnchor) Validate() error {
	return _dfc.ValidateWithPath("\u0043\u0054_\u0052\u0065\u006cS\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072")
}

// Validate validates the EG_ObjectChoices and its children
func (_aae *EG_ObjectChoices) Validate() error {
	return _aae.ValidateWithPath("\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073")
}
func NewCT_Connector() *CT_Connector {
	_fd := &CT_Connector{}
	_fd.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_fd.SpPr = _eg.NewCT_ShapeProperties()
	return _fd
}

// ValidateWithPath validates the CT_Marker and its children, prefixing error messages with path
func (_bge *CT_Marker) ValidateWithPath(path string) error {
	if _bge.X < 0.0 {
		return _ac.Errorf("\u0025\u0073\u002fm\u002e\u0058\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bge.X)
	}
	if _bge.X > 1.0 {
		return _ac.Errorf("\u0025\u0073\u002fm\u002e\u0058\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0031\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bge.X)
	}
	if _bge.Y < 0.0 {
		return _ac.Errorf("\u0025\u0073\u002fm\u002e\u0059\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bge.Y)
	}
	if _bge.Y > 1.0 {
		return _ac.Errorf("\u0025\u0073\u002fm\u002e\u0059\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0031\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bge.Y)
	}
	return nil
}
func (_ggb *CT_Shape) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ggb.MacroAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _ac.Sprintf("\u0025\u0076", *_ggb.MacroAttr)})
	}
	if _ggb.TextlinkAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b"}, Value: _ac.Sprintf("\u0025\u0076", *_ggb.TextlinkAttr)})
	}
	if _ggb.FLocksTextAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074"}, Value: _ac.Sprintf("\u0025\u0064", _dfg(*_ggb.FLocksTextAttr))})
	}
	if _ggb.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _ac.Sprintf("\u0025\u0064", _dfg(*_ggb.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_gfe := _e.StartElement{Name: _e.Name{Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ggb.NvSpPr, _gfe)
	_fcbd := _e.StartElement{Name: _e.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ggb.SpPr, _fcbd)
	if _ggb.Style != nil {
		_ccdf := _e.StartElement{Name: _e.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_ggb.Style, _ccdf)
	}
	if _ggb.TxBody != nil {
		_ecf := _e.StartElement{Name: _e.Name{Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_ggb.TxBody, _ecf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_Anchor and its children
func (_bbe *EG_Anchor) Validate() error {
	return _bbe.ValidateWithPath("\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr")
}
func (_fea *CT_GraphicFrameNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fea.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_fea.CNvGraphicFramePr = _eg.NewCT_NonVisualGraphicFrameProperties()
_fcc:
	for {
		_ggf, _edf := d.Token()
		if _edf != nil {
			return _edf
		}
		switch _fde := _ggf.(type) {
		case _e.StartElement:
			switch _fde.Name {
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _bee := d.DecodeElement(_fea.CNvPr, &_fde); _bee != nil {
					return _bee
				}
			case _e.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _aaab := d.DecodeElement(_fea.CNvGraphicFramePr, &_fde); _aaab != nil {
					return _aaab
				}
			default:
				_g.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c\u0020%\u0076", _fde.Name)
				if _def := d.Skip(); _def != nil {
					return _def
				}
			}
		case _e.EndElement:
			break _fcc
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_bgb := &CT_GroupShapeNonVisual{}
	_bgb.CNvPr = _eg.NewCT_NonVisualDrawingProps()
	_bgb.CNvGrpSpPr = _eg.NewCT_NonVisualGroupDrawingShapeProps()
	return _bgb
}

type CT_Drawing struct{ EG_Anchor []*EG_Anchor }

// ValidateWithPath validates the EG_ObjectChoicesChoice and its children, prefixing error messages with path
func (_ceafe *EG_ObjectChoicesChoice) ValidateWithPath(path string) error {
	if _ceafe.Sp != nil {
		if _bfca := _ceafe.Sp.ValidateWithPath(path + "\u002f\u0053\u0070"); _bfca != nil {
			return _bfca
		}
	}
	if _ceafe.GrpSp != nil {
		if _effe := _ceafe.GrpSp.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070"); _effe != nil {
			return _effe
		}
	}
	if _ceafe.GraphicFrame != nil {
		if _ccc := _ceafe.GraphicFrame.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"); _ccc != nil {
			return _ccc
		}
	}
	if _ceafe.CxnSp != nil {
		if _aec := _ceafe.CxnSp.ValidateWithPath(path + "\u002f\u0043\u0078\u006e\u0053\u0070"); _aec != nil {
			return _aec
		}
	}
	if _ceafe.Pic != nil {
		if _gbec := _ceafe.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _gbec != nil {
			return _gbec
		}
	}
	return nil
}

// Validate validates the CT_GraphicFrame and its children
func (_egf *CT_GraphicFrame) Validate() error {
	return _egf.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065")
}
func init() {
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicFrameNonVisual)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicFrame)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r", NewCT_Marker)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054_\u0052\u0065\u006cS\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_RelSizeAnchor)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054_\u0041\u0062\u0073S\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_AbsSizeAnchor)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073", NewEG_ObjectChoices)
	_g.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr", NewEG_Anchor)
}
