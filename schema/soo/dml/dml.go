//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package dml

import (
	_b "encoding/xml"
	_bb "fmt"
	_f "github.com/stasomega1/mylib"
	_eb "github.com/stasomega1/mylib/schema/soo/ofc/sharedTypes"
	_c "regexp"
	_a "strconv"
	_ea "time"
)

func (_aebfdb *ST_PresetMaterialType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fffgc, _acecf := d.Token()
	if _acecf != nil {
		return _acecf
	}
	if _effad, _agcgg := _fffgc.(_b.EndElement); _agcgg && _effad.Name == start.Name {
		*_aebfdb = 1
		return nil
	}
	if _aaddfa, _dfeca := _fffgc.(_b.CharData); !_dfeca {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fffgc)
	} else {
		switch string(_aaddfa) {
		case "":
			*_aebfdb = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
			*_aebfdb = 1
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
			*_aebfdb = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
			*_aebfdb = 3
		case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
			*_aebfdb = 4
		case "\u006d\u0061\u0074t\u0065":
			*_aebfdb = 5
		case "\u0070l\u0061\u0073\u0074\u0069\u0063":
			*_aebfdb = 6
		case "\u006d\u0065\u0074a\u006c":
			*_aebfdb = 7
		case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
			*_aebfdb = 8
		case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
			*_aebfdb = 9
		case "\u0070\u006f\u0077\u0064\u0065\u0072":
			*_aebfdb = 10
		case "\u0064\u006b\u0045\u0064\u0067\u0065":
			*_aebfdb = 11
		case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
			*_aebfdb = 12
		case "\u0063\u006c\u0065a\u0072":
			*_aebfdb = 13
		case "\u0066\u006c\u0061\u0074":
			*_aebfdb = 14
		case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
			*_aebfdb = 15
		}
	}
	_fffgc, _acecf = d.Token()
	if _acecf != nil {
		return _acecf
	}
	if _ccgdce, _fedeg := _fffgc.(_b.EndElement); _fedeg && _ccgdce.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fffgc)
}
func (_dfbgd *CT_OfficeArtExtension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eebg := range start.Attr {
		if _eebg.Name.Local == "\u0075\u0072\u0069" {
			_cgafa, _gfdgc := _eebg.Value, error(nil)
			if _gfdgc != nil {
				return _gfdgc
			}
			_dfbgd.UriAttr = _cgafa
			continue
		}
	}
_egdga:
	for {
		_eacd, _bdfbf := d.Token()
		if _bdfbf != nil {
			return _bdfbf
		}
		switch _dagc := _eacd.(type) {
		case _b.StartElement:
			switch _dagc.Name {
			default:
				if _gefaa, _cfbeg := _f.CreateElement(_dagc); _cfbeg != nil {
					return _cfbeg
				} else {
					if _ffedb := d.DecodeElement(_gefaa, &_dagc); _ffedb != nil {
						return _ffedb
					}
					_dfbgd.Any = append(_dfbgd.Any, _gefaa)
				}
			}
		case _b.EndElement:
			break _egdga
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TablePartStyle() *CT_TablePartStyle { _cfcae := &CT_TablePartStyle{}; return _cfcae }

type CT_Transform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
}

// Validate validates the CT_EffectStyleItem and its children
func (_cfbf *CT_EffectStyleItem) Validate() error {
	return _cfbf.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d")
}
func (_fbgcf *CT_TableBackgroundStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_geege:
	for {
		_dcdge, _gbfcg := d.Token()
		if _gbfcg != nil {
			return _gbfcg
		}
		switch _bdfec := _dcdge.(type) {
		case _b.StartElement:
			switch _bdfec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fbgcf.Fill = NewCT_FillProperties()
				if _eaecc := d.DecodeElement(_fbgcf.Fill, &_bdfec); _eaecc != nil {
					return _eaecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_fbgcf.FillRef = NewCT_StyleMatrixReference()
				if _cgfb := d.DecodeElement(_fbgcf.FillRef, &_bdfec); _cgfb != nil {
					return _cgfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_fbgcf.Effect = NewCT_EffectProperties()
				if _bcecg := d.DecodeElement(_fbgcf.Effect, &_bdfec); _bcecg != nil {
					return _bcecg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_fbgcf.EffectRef = NewCT_StyleMatrixReference()
				if _dbdc := d.DecodeElement(_fbgcf.EffectRef, &_bdfec); _dbdc != nil {
					return _dbdc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0042\u0061\u0063\u006bg\u0072\u006f\u0075\u006e\u0064\u0053t\u0079\u006c\u0065 \u0025\u0076", _bdfec.Name)
				if _efedg := d.Skip(); _efedg != nil {
					return _efedg
				}
			}
		case _b.EndElement:
			break _geege
		case _b.CharData:
		}
	}
	return nil
}
func (_egaea *CT_ShapeLocking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egaea.NoTextEditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoTextEditAttr))})
	}
	if _egaea.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoGrpAttr))})
	}
	if _egaea.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoSelectAttr))})
	}
	if _egaea.NoRotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoRotAttr))})
	}
	if _egaea.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoChangeAspectAttr))})
	}
	if _egaea.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoMoveAttr))})
	}
	if _egaea.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoResizeAttr))})
	}
	if _egaea.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoEditPointsAttr))})
	}
	if _egaea.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoAdjustHandlesAttr))})
	}
	if _egaea.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoChangeArrowheadsAttr))})
	}
	if _egaea.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_egaea.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _egaea.ExtLst != nil {
		_eccca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egaea.ExtLst, _eccca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbbag *CT_ThemeableLineStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bbdaa:
	for {
		_cgebde, _dfdcd := d.Token()
		if _dfdcd != nil {
			return _dfdcd
		}
		switch _cgdgg := _cgebde.(type) {
		case _b.StartElement:
			switch _cgdgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_dbbag.Ln = NewCT_LineProperties()
				if _dbbgcb := d.DecodeElement(_dbbag.Ln, &_cgdgg); _dbbgcb != nil {
					return _dbbgcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				_dbbag.LnRef = NewCT_StyleMatrixReference()
				if _caeab := d.DecodeElement(_dbbag.LnRef, &_cgdgg); _caeab != nil {
					return _caeab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _cgdgg.Name)
				if _abgee := d.Skip(); _abgee != nil {
					return _abgee
				}
			}
		case _b.EndElement:
			break _bbdaa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PresetColor and its children, prefixing error messages with path
func (_fdece *CT_PresetColor) ValidateWithPath(path string) error {
	if _fdece.ValAttr == ST_PresetColorValUnset {
		return _bb.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bfgb := _fdece.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bfgb != nil {
		return _bfgb
	}
	for _bcag, _afcee := range _fdece.EG_ColorTransform {
		if _gfdca := _afcee.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _bcag)); _gfdca != nil {
			return _gfdca
		}
	}
	return nil
}

const (
	ST_LightRigDirectionUnset ST_LightRigDirection = 0
	ST_LightRigDirectionTl    ST_LightRigDirection = 1
	ST_LightRigDirectionT     ST_LightRigDirection = 2
	ST_LightRigDirectionTr    ST_LightRigDirection = 3
	ST_LightRigDirectionL     ST_LightRigDirection = 4
	ST_LightRigDirectionR     ST_LightRigDirection = 5
	ST_LightRigDirectionBl    ST_LightRigDirection = 6
	ST_LightRigDirectionB     ST_LightRigDirection = 7
	ST_LightRigDirectionBr    ST_LightRigDirection = 8
)

func (_ebca *CT_PresetGeometry2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebca.PrstAttr = ST_ShapeType(1)
	for _, _dabf := range start.Attr {
		if _dabf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ebca.PrstAttr.UnmarshalXMLAttr(_dabf)
			continue
		}
	}
_gebab:
	for {
		_ggaf, _ggff := d.Token()
		if _ggff != nil {
			return _ggff
		}
		switch _gdea := _ggaf.(type) {
		case _b.StartElement:
			switch _gdea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_ebca.AvLst = NewCT_GeomGuideList()
				if _dcgdb := d.DecodeElement(_ebca.AvLst, &_gdea); _dcgdb != nil {
					return _dcgdb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _gdea.Name)
				if _eedfd := d.Skip(); _eedfd != nil {
					return _eedfd
				}
			}
		case _b.EndElement:
			break _gebab
		case _b.CharData:
		}
	}
	return nil
}

type CT_TextShapeAutofit struct{}

func (_aegdd ST_LineCap) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgccd := _b.Attr{}
	_cgccd.Name = name
	switch _aegdd {
	case ST_LineCapUnset:
		_cgccd.Value = ""
	case ST_LineCapRnd:
		_cgccd.Value = "\u0072\u006e\u0064"
	case ST_LineCapSq:
		_cgccd.Value = "\u0073\u0071"
	case ST_LineCapFlat:
		_cgccd.Value = "\u0066\u006c\u0061\u0074"
	}
	return _cgccd, nil
}
func NewCT_LineStyleList() *CT_LineStyleList { _gbge := &CT_LineStyleList{}; return _gbge }
func (_daeef *EG_TextBulletTypeface) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daeef.BuFontTx != nil {
		_gddcaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_daeef.BuFontTx, _gddcaf)
	}
	if _daeef.BuFont != nil {
		_dcccg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_daeef.BuFont, _dcccg)
	}
	return nil
}

// Validate validates the CT_Path2DQuadBezierTo and its children
func (_edcc *CT_Path2DQuadBezierTo) Validate() error {
	return _edcc.ValidateWithPath("C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f")
}

const (
	ST_TextVertOverflowTypeUnset    ST_TextVertOverflowType = 0
	ST_TextVertOverflowTypeOverflow ST_TextVertOverflowType = 1
	ST_TextVertOverflowTypeEllipsis ST_TextVertOverflowType = 2
	ST_TextVertOverflowTypeClip     ST_TextVertOverflowType = 3
)

func (_cccfg ST_DgmBuildStep) String() string {
	switch _cccfg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070"
	case 2:
		return "\u0062\u0067"
	}
	return ""
}

type CT_TextAutonumberBullet struct {
	TypeAttr    ST_TextAutonumberScheme
	StartAtAttr *int32
}

func (_gefca ST_BlipCompression) ValidateWithPath(path string) error {
	switch _gefca {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gefca))
	}
	return nil
}
func (_ffefdd ST_TextTabAlignType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffefdd.String(), start)
}
func (_ccfbg ST_LineEndWidth) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_degcab := _b.Attr{}
	_degcab.Name = name
	switch _ccfbg {
	case ST_LineEndWidthUnset:
		_degcab.Value = ""
	case ST_LineEndWidthSm:
		_degcab.Value = "\u0073\u006d"
	case ST_LineEndWidthMed:
		_degcab.Value = "\u006d\u0065\u0064"
	case ST_LineEndWidthLg:
		_degcab.Value = "\u006c\u0067"
	}
	return _degcab, nil
}

// ValidateWithPath validates the CT_TextBulletSizePoint and its children, prefixing error messages with path
func (_dacea *CT_TextBulletSizePoint) ValidateWithPath(path string) error {
	if _dacea.ValAttr < 100 {
		return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003e\u003d\u0020\u0031\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _dacea.ValAttr)
	}
	if _dacea.ValAttr > 400000 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _dacea.ValAttr)
	}
	return nil
}

type CT_Blip struct {
	CstateAttr ST_BlipCompression
	Choice     []*CT_BlipChoice
	ExtLst     *CT_OfficeArtExtensionList
	EmbedAttr  *string
	LinkAttr   *string
}

// Validate validates the CT_AudioFile and its children
func (_geaa *CT_AudioFile) Validate() error {
	return _geaa.ValidateWithPath("\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}

type CT_ComplementTransform struct{}

// ValidateWithPath validates the CT_ConnectorLocking and its children, prefixing error messages with path
func (_agbec *CT_ConnectorLocking) ValidateWithPath(path string) error {
	if _agbec.ExtLst != nil {
		if _edfe := _agbec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edfe != nil {
			return _edfe
		}
	}
	return nil
}

// Validate validates the CT_AnimationChartBuildProperties and its children
func (_daa *CT_AnimationChartBuildProperties) Validate() error {
	return _daa.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_PictureLocking() *CT_PictureLocking { _bgef := &CT_PictureLocking{}; return _bgef }
func (_dbecaa *CT_PictureLocking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gegf := range start.Attr {
		if _gegf.Name.Local == "\u006e\u006f\u0043\u0072\u006f\u0070" {
			_edcag, _facdg := _a.ParseBool(_gegf.Value)
			if _facdg != nil {
				return _facdg
			}
			_dbecaa.NoCropAttr = &_edcag
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_gcdfe, _cfefg := _a.ParseBool(_gegf.Value)
			if _cfefg != nil {
				return _cfefg
			}
			_dbecaa.NoGrpAttr = &_gcdfe
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_gebad, _gcecg := _a.ParseBool(_gegf.Value)
			if _gcecg != nil {
				return _gcecg
			}
			_dbecaa.NoSelectAttr = &_gebad
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_dagff, _fefab := _a.ParseBool(_gegf.Value)
			if _fefab != nil {
				return _fefab
			}
			_dbecaa.NoRotAttr = &_dagff
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_bdaad, _gffae := _a.ParseBool(_gegf.Value)
			if _gffae != nil {
				return _gffae
			}
			_dbecaa.NoChangeAspectAttr = &_bdaad
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_bafce, _bgdda := _a.ParseBool(_gegf.Value)
			if _bgdda != nil {
				return _bgdda
			}
			_dbecaa.NoMoveAttr = &_bafce
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_ffcec, _gfeeb := _a.ParseBool(_gegf.Value)
			if _gfeeb != nil {
				return _gfeeb
			}
			_dbecaa.NoResizeAttr = &_ffcec
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_fdae, _bgdf := _a.ParseBool(_gegf.Value)
			if _bgdf != nil {
				return _bgdf
			}
			_dbecaa.NoEditPointsAttr = &_fdae
			continue
		}
		if _gegf.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_ebec, _badcb := _a.ParseBool(_gegf.Value)
			if _badcb != nil {
				return _badcb
			}
			_dbecaa.NoAdjustHandlesAttr = &_ebec
			continue
		}
		if _gegf.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_dccge, _dfecf := _a.ParseBool(_gegf.Value)
			if _dfecf != nil {
				return _dfecf
			}
			_dbecaa.NoChangeArrowheadsAttr = &_dccge
			continue
		}
		if _gegf.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_dada, _gbfcd := _a.ParseBool(_gegf.Value)
			if _gbfcd != nil {
				return _gbfcd
			}
			_dbecaa.NoChangeShapeTypeAttr = &_dada
			continue
		}
	}
_eegba:
	for {
		_cfaeba, _egecd := d.Token()
		if _egecd != nil {
			return _egecd
		}
		switch _gddg := _cfaeba.(type) {
		case _b.StartElement:
			switch _gddg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbecaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbecd := d.DecodeElement(_dbecaa.ExtLst, &_gddg); _fbecd != nil {
					return _fbecd
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _gddg.Name)
				if _cceed := d.Skip(); _cceed != nil {
					return _cceed
				}
			}
		case _b.EndElement:
			break _eegba
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationGraphicalObjectBuildProperties and its children, prefixing error messages with path
func (_dcg *CT_AnimationGraphicalObjectBuildProperties) ValidateWithPath(path string) error {
	if _dcg.BldDgm != nil {
		if _dbcc := _dcg.BldDgm.ValidateWithPath(path + "\u002fB\u006c\u0064\u0044\u0067\u006d"); _dbcc != nil {
			return _dbcc
		}
	}
	if _dcg.BldChart != nil {
		if _dfef := _dcg.BldChart.ValidateWithPath(path + "\u002fB\u006c\u0064\u0043\u0068\u0061\u0072t"); _dfef != nil {
			return _dfef
		}
	}
	return nil
}

// Validate validates the CT_AnimationElementChoice and its children
func (_bdb *CT_AnimationElementChoice) Validate() error {
	return _bdb.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e")
}
func (_bgedf *CT_TableCellProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgedf.MarLAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _bb.Sprintf("\u0025\u0076", *_bgedf.MarLAttr)})
	}
	if _bgedf.MarRAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_bgedf.MarRAttr)})
	}
	if _bgedf.MarTAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0072\u0054"}, Value: _bb.Sprintf("\u0025\u0076", *_bgedf.MarTAttr)})
	}
	if _bgedf.MarBAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0072\u0042"}, Value: _bb.Sprintf("\u0025\u0076", *_bgedf.MarBAttr)})
	}
	if _bgedf.VertAttr != ST_TextVerticalTypeUnset {
		_egeeb, _dcbbd := _bgedf.VertAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _dcbbd != nil {
			return _dcbbd
		}
		start.Attr = append(start.Attr, _egeeb)
	}
	if _bgedf.AnchorAttr != ST_TextAnchoringTypeUnset {
		_agfbb, _efdea := _bgedf.AnchorAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _efdea != nil {
			return _efdea
		}
		start.Attr = append(start.Attr, _agfbb)
	}
	if _bgedf.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_bgedf.AnchorCtrAttr))})
	}
	if _bgedf.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_ebbbg, _babb := _bgedf.HorzOverflowAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _babb != nil {
			return _babb
		}
		start.Attr = append(start.Attr, _ebbbg)
	}
	e.EncodeToken(start)
	if _bgedf.LnL != nil {
		_dgdcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cn\u004c"}}
		e.EncodeElement(_bgedf.LnL, _dgdcf)
	}
	if _bgedf.LnR != nil {
		_begc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cn\u0052"}}
		e.EncodeElement(_bgedf.LnR, _begc)
	}
	if _bgedf.LnT != nil {
		_fcbdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cn\u0054"}}
		e.EncodeElement(_bgedf.LnT, _fcbdb)
	}
	if _bgedf.LnB != nil {
		_cabcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cn\u0042"}}
		e.EncodeElement(_bgedf.LnB, _cabcc)
	}
	if _bgedf.LnTlToBr != nil {
		_cafga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}}
		e.EncodeElement(_bgedf.LnTlToBr, _cafga)
	}
	if _bgedf.LnBlToTr != nil {
		_dacfg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}}
		e.EncodeElement(_bgedf.LnBlToTr, _dacfg)
	}
	if _bgedf.Cell3D != nil {
		_egeea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_bgedf.Cell3D, _egeea)
	}
	if _bgedf.NoFill != nil {
		_cgfdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgedf.NoFill, _cgfdb)
	}
	if _bgedf.SolidFill != nil {
		_acgc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgedf.SolidFill, _acgc)
	}
	if _bgedf.GradFill != nil {
		_agaeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgedf.GradFill, _agaeb)
	}
	if _bgedf.BlipFill != nil {
		_abebcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgedf.BlipFill, _abebcf)
	}
	if _bgedf.PattFill != nil {
		_egfcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgedf.PattFill, _egfcd)
	}
	if _bgedf.GrpFill != nil {
		_cagbga := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bgedf.GrpFill, _cagbga)
	}
	if _bgedf.Headers != nil {
		_ddafg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0065\u0072s"}}
		e.EncodeElement(_bgedf.Headers, _ddafg)
	}
	if _bgedf.ExtLst != nil {
		_gbag := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgedf.ExtLst, _gbag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddcbf *CT_Path2DLineTo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddcbf.Pt = NewCT_AdjPoint2D()
_cacfd:
	for {
		_dddf, _faffe := d.Token()
		if _faffe != nil {
			return _faffe
		}
		switch _fdce := _dddf.(type) {
		case _b.StartElement:
			switch _fdce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _efbeg := d.DecodeElement(_ddcbf.Pt, &_fdce); _efbeg != nil {
					return _efbeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f\u0020\u0025\u0076", _fdce.Name)
				if _daacd := d.Skip(); _daacd != nil {
					return _daacd
				}
			}
		case _b.EndElement:
			break _cacfd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TextLineBreak() *CT_TextLineBreak { _dcebdg := &CT_TextLineBreak{}; return _dcebdg }
func (_gaebf *CT_FixedPercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _gaebf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the VideoFile and its children, prefixing error messages with path
func (_bfbcc *VideoFile) ValidateWithPath(path string) error {
	if _cbcd := _bfbcc.CT_VideoFile.ValidateWithPath(path); _cbcd != nil {
		return _cbcd
	}
	return nil
}

type EG_TextUnderlineFill struct {
	UFillTx *CT_TextUnderlineFillFollowText
	UFill   *CT_TextUnderlineFillGroupWrapper
}

func NewCT_BackgroundFormatting() *CT_BackgroundFormatting {
	_fccb := &CT_BackgroundFormatting{}
	return _fccb
}
func (_aagef *CT_ColorMappingOverrideChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bcdaa:
	for {
		_bgcf, _cebgf := d.Token()
		if _cebgf != nil {
			return _cebgf
		}
		switch _daeg := _bgcf.(type) {
		case _b.StartElement:
			switch _daeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_aagef.MasterClrMapping = NewCT_EmptyElement()
				if _cgbf := d.DecodeElement(_aagef.MasterClrMapping, &_daeg); _cgbf != nil {
					return _cgbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_aagef.OverrideClrMapping = NewCT_ColorMapping()
				if _defg := d.DecodeElement(_aagef.OverrideClrMapping, &_daeg); _defg != nil {
					return _defg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067O\u0076\u0065\u0072\u0072\u0069\u0064e\u0043\u0068o\u0069\u0063e\u0020%\u0076", _daeg.Name)
				if _eegge := d.Skip(); _eegge != nil {
					return _eegge
				}
			}
		case _b.EndElement:
			break _bcdaa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorSchemeList and its children, prefixing error messages with path
func (_ecec *CT_ColorSchemeList) ValidateWithPath(path string) error {
	for _badf, _daaed := range _ecec.ExtraClrScheme {
		if _cbdb := _daaed.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0045\u0078tr\u0061C\u006c\u0072\u0053\u0063\u0068e\u006d\u0065\u005b\u0025\u0064\u005d", path, _badf)); _cbdb != nil {
			return _cbdb
		}
	}
	return nil
}
func (_cagfd ST_TextBulletSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cagfd.ST_TextBulletSizePercent != nil {
		e.EncodeToken(_b.CharData(*_cagfd.ST_TextBulletSizePercent))
	}
	if _cagfd.ST_TextBulletSizeDecimal != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_cagfd.ST_TextBulletSizeDecimal)))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_adcca ST_TextFontScalePercentOrPercentString) String() string {
	if _adcca.ST_TextFontScalePercent != nil {
		return _bb.Sprintf("\u0025\u0076", *_adcca.ST_TextFontScalePercent)
	}
	if _adcca.ST_Percentage != nil {
		return _bb.Sprintf("\u0025\u0076", *_adcca.ST_Percentage)
	}
	return ""
}

// ValidateWithPath validates the CT_ColorScheme and its children, prefixing error messages with path
func (_defa *CT_ColorScheme) ValidateWithPath(path string) error {
	if _abfa := _defa.Dk1.ValidateWithPath(path + "\u002f\u0044\u006b\u0031"); _abfa != nil {
		return _abfa
	}
	if _bfbe := _defa.Lt1.ValidateWithPath(path + "\u002f\u004c\u0074\u0031"); _bfbe != nil {
		return _bfbe
	}
	if _fbaa := _defa.Dk2.ValidateWithPath(path + "\u002f\u0044\u006b\u0032"); _fbaa != nil {
		return _fbaa
	}
	if _caba := _defa.Lt2.ValidateWithPath(path + "\u002f\u004c\u0074\u0032"); _caba != nil {
		return _caba
	}
	if _dgfg := _defa.Accent1.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0031"); _dgfg != nil {
		return _dgfg
	}
	if _dffff := _defa.Accent2.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0032"); _dffff != nil {
		return _dffff
	}
	if _bbefa := _defa.Accent3.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0033"); _bbefa != nil {
		return _bbefa
	}
	if _deec := _defa.Accent4.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0034"); _deec != nil {
		return _deec
	}
	if _bgea := _defa.Accent5.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0035"); _bgea != nil {
		return _bgea
	}
	if _afbcd := _defa.Accent6.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0036"); _afbcd != nil {
		return _afbcd
	}
	if _dgbfe := _defa.Hlink.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b"); _dgbfe != nil {
		return _dgbfe
	}
	if _ggfa := _defa.FolHlink.ValidateWithPath(path + "\u002fF\u006f\u006c\u0048\u006c\u0069\u006ek"); _ggfa != nil {
		return _ggfa
	}
	if _defa.ExtLst != nil {
		if _bbfg := _defa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbfg != nil {
			return _bbfg
		}
	}
	return nil
}

// Validate validates the CT_AnimationDgmBuildProperties and its children
func (_fabff *CT_AnimationDgmBuildProperties) Validate() error {
	return _fabff.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_DashStopList struct{ Ds []*CT_DashStop }

// Validate validates the CT_PresetTextShape and its children
func (_egfbc *CT_PresetTextShape) Validate() error {
	return _egfbc.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065")
}

const (
	ST_ColorSchemeIndexUnset    ST_ColorSchemeIndex = 0
	ST_ColorSchemeIndexDk1      ST_ColorSchemeIndex = 1
	ST_ColorSchemeIndexLt1      ST_ColorSchemeIndex = 2
	ST_ColorSchemeIndexDk2      ST_ColorSchemeIndex = 3
	ST_ColorSchemeIndexLt2      ST_ColorSchemeIndex = 4
	ST_ColorSchemeIndexAccent1  ST_ColorSchemeIndex = 5
	ST_ColorSchemeIndexAccent2  ST_ColorSchemeIndex = 6
	ST_ColorSchemeIndexAccent3  ST_ColorSchemeIndex = 7
	ST_ColorSchemeIndexAccent4  ST_ColorSchemeIndex = 8
	ST_ColorSchemeIndexAccent5  ST_ColorSchemeIndex = 9
	ST_ColorSchemeIndexAccent6  ST_ColorSchemeIndex = 10
	ST_ColorSchemeIndexHlink    ST_ColorSchemeIndex = 11
	ST_ColorSchemeIndexFolHlink ST_ColorSchemeIndex = 12
)

func NewCT_ObjectStyleDefaults() *CT_ObjectStyleDefaults {
	_geec := &CT_ObjectStyleDefaults{}
	return _geec
}

// ValidateWithPath validates the CT_GvmlTextShapeChoice and its children, prefixing error messages with path
func (_agba *CT_GvmlTextShapeChoice) ValidateWithPath(path string) error {
	if _agba.UseSpRect != nil {
		if _agg := _agba.UseSpRect.ValidateWithPath(path + "\u002f\u0055\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"); _agg != nil {
			return _agg
		}
	}
	if _agba.Xfrm != nil {
		if _eace := _agba.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _eace != nil {
			return _eace
		}
	}
	return nil
}

// Validate validates the CT_BaseStyles and its children
func (_afdg *CT_BaseStyles) Validate() error {
	return _afdg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073")
}
func (_cacb *CT_TextBodyProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cacb.RotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.RotAttr)})
	}
	if _cacb.SpcFirstLastParaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.SpcFirstLastParaAttr))})
	}
	if _cacb.VertOverflowAttr != ST_TextVertOverflowTypeUnset {
		_ccdbg, _gfdcg := _cacb.VertOverflowAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _gfdcg != nil {
			return _gfdcg
		}
		start.Attr = append(start.Attr, _ccdbg)
	}
	if _cacb.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_gfged, _bebaf := _cacb.HorzOverflowAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _bebaf != nil {
			return _bebaf
		}
		start.Attr = append(start.Attr, _gfged)
	}
	if _cacb.VertAttr != ST_TextVerticalTypeUnset {
		_bfbged, _cdce := _cacb.VertAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _cdce != nil {
			return _cdce
		}
		start.Attr = append(start.Attr, _bfbged)
	}
	if _cacb.WrapAttr != ST_TextWrappingTypeUnset {
		_caed, _eeba := _cacb.WrapAttr.MarshalXMLAttr(_b.Name{Local: "\u0077\u0072\u0061\u0070"})
		if _eeba != nil {
			return _eeba
		}
		start.Attr = append(start.Attr, _caed)
	}
	if _cacb.LInsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.LInsAttr)})
	}
	if _cacb.TInsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.TInsAttr)})
	}
	if _cacb.RInsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.RInsAttr)})
	}
	if _cacb.BInsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0049\u006e\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.BInsAttr)})
	}
	if _cacb.NumColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.NumColAttr)})
	}
	if _cacb.SpcColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0063\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_cacb.SpcColAttr)})
	}
	if _cacb.RtlColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0074\u006c\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.RtlColAttr))})
	}
	if _cacb.FromWordArtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.FromWordArtAttr))})
	}
	if _cacb.AnchorAttr != ST_TextAnchoringTypeUnset {
		_aaccc, _baccf := _cacb.AnchorAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _baccf != nil {
			return _baccf
		}
		start.Attr = append(start.Attr, _aaccc)
	}
	if _cacb.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.AnchorCtrAttr))})
	}
	if _cacb.ForceAAAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u0063\u0065\u0041\u0041"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.ForceAAAttr))})
	}
	if _cacb.UprightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075p\u0072\u0069\u0067\u0068\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.UprightAttr))})
	}
	if _cacb.CompatLnSpcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cacb.CompatLnSpcAttr))})
	}
	e.EncodeToken(start)
	if _cacb.PrstTxWarp != nil {
		_egacae := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_cacb.PrstTxWarp, _egacae)
	}
	if _cacb.NoAutofit != nil {
		_ecadf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_cacb.NoAutofit, _ecadf)
	}
	if _cacb.NormAutofit != nil {
		_bfcgg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_cacb.NormAutofit, _bfcgg)
	}
	if _cacb.SpAutoFit != nil {
		_dfgeb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_cacb.SpAutoFit, _dfgeb)
	}
	if _cacb.Scene3d != nil {
		_dagbce := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_cacb.Scene3d, _dagbce)
	}
	if _cacb.Sp3d != nil {
		_bccc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_cacb.Sp3d, _bccc)
	}
	if _cacb.FlatTx != nil {
		_daeeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_cacb.FlatTx, _daeeb)
	}
	if _cacb.ExtLst != nil {
		_dfaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cacb.ExtLst, _dfaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_StretchInfoProperties() *CT_StretchInfoProperties {
	_fbcaf := &CT_StretchInfoProperties{}
	return _fbcaf
}
func (_fcfce *CT_Path2DQuadBezierTo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ggcda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _adggb := range _fcfce.Pt {
		e.EncodeElement(_adggb, _ggcda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type EG_TextGeometry struct {
	CustGeom   *CT_CustomGeometry2D
	PrstTxWarp *CT_PresetTextShape
}
type CT_TextBulletSizeFollowText struct{}

func (_bcgg *CT_EffectContainer) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cadgf := range start.Attr {
		if _cadgf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bcgg.TypeAttr.UnmarshalXMLAttr(_cadgf)
			continue
		}
		if _cadgf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_adde, _fgbdc := _cadgf.Value, error(nil)
			if _fgbdc != nil {
				return _fgbdc
			}
			_bcgg.NameAttr = &_adde
			continue
		}
	}
_dafa:
	for {
		_bbcge, _febba := d.Token()
		if _febba != nil {
			return _febba
		}
		switch _ggbf := _bbcge.(type) {
		case _b.StartElement:
			switch _ggbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_bcgg.Cont = NewCT_EffectContainer()
				if _afdb := d.DecodeElement(_bcgg.Cont, &_ggbf); _afdb != nil {
					return _afdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_bcgg.Effect = NewCT_EffectReference()
				if _fdda := d.DecodeElement(_bcgg.Effect, &_ggbf); _fdda != nil {
					return _fdda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_bcgg.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _dagb := d.DecodeElement(_bcgg.AlphaBiLevel, &_ggbf); _dagb != nil {
					return _dagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_bcgg.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _adaaa := d.DecodeElement(_bcgg.AlphaCeiling, &_ggbf); _adaaa != nil {
					return _adaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_bcgg.AlphaFloor = NewCT_AlphaFloorEffect()
				if _aaaac := d.DecodeElement(_bcgg.AlphaFloor, &_ggbf); _aaaac != nil {
					return _aaaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_bcgg.AlphaInv = NewCT_AlphaInverseEffect()
				if _dcbb := d.DecodeElement(_bcgg.AlphaInv, &_ggbf); _dcbb != nil {
					return _dcbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_bcgg.AlphaMod = NewCT_AlphaModulateEffect()
				if _dbga := d.DecodeElement(_bcgg.AlphaMod, &_ggbf); _dbga != nil {
					return _dbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_bcgg.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _adea := d.DecodeElement(_bcgg.AlphaModFix, &_ggbf); _adea != nil {
					return _adea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_bcgg.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _afcf := d.DecodeElement(_bcgg.AlphaOutset, &_ggbf); _afcf != nil {
					return _afcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_bcgg.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _bgega := d.DecodeElement(_bcgg.AlphaRepl, &_ggbf); _bgega != nil {
					return _bgega
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_bcgg.BiLevel = NewCT_BiLevelEffect()
				if _cfde := d.DecodeElement(_bcgg.BiLevel, &_ggbf); _cfde != nil {
					return _cfde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_bcgg.Blend = NewCT_BlendEffect()
				if _dgddc := d.DecodeElement(_bcgg.Blend, &_ggbf); _dgddc != nil {
					return _dgddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_bcgg.Blur = NewCT_BlurEffect()
				if _cgfa := d.DecodeElement(_bcgg.Blur, &_ggbf); _cgfa != nil {
					return _cgfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_bcgg.ClrChange = NewCT_ColorChangeEffect()
				if _bcbc := d.DecodeElement(_bcgg.ClrChange, &_ggbf); _bcbc != nil {
					return _bcbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_bcgg.ClrRepl = NewCT_ColorReplaceEffect()
				if _fcbea := d.DecodeElement(_bcgg.ClrRepl, &_ggbf); _fcbea != nil {
					return _fcbea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_bcgg.Duotone = NewCT_DuotoneEffect()
				if _dcgae := d.DecodeElement(_bcgg.Duotone, &_ggbf); _dcgae != nil {
					return _dcgae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_bcgg.Fill = NewCT_FillEffect()
				if _cbfaf := d.DecodeElement(_bcgg.Fill, &_ggbf); _cbfaf != nil {
					return _cbfaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_bcgg.FillOverlay = NewCT_FillOverlayEffect()
				if _cddd := d.DecodeElement(_bcgg.FillOverlay, &_ggbf); _cddd != nil {
					return _cddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_bcgg.Glow = NewCT_GlowEffect()
				if _egae := d.DecodeElement(_bcgg.Glow, &_ggbf); _egae != nil {
					return _egae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_bcgg.Grayscl = NewCT_GrayscaleEffect()
				if _dffc := d.DecodeElement(_bcgg.Grayscl, &_ggbf); _dffc != nil {
					return _dffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_bcgg.Hsl = NewCT_HSLEffect()
				if _edfce := d.DecodeElement(_bcgg.Hsl, &_ggbf); _edfce != nil {
					return _edfce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_bcgg.InnerShdw = NewCT_InnerShadowEffect()
				if _dgdg := d.DecodeElement(_bcgg.InnerShdw, &_ggbf); _dgdg != nil {
					return _dgdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bcgg.Lum = NewCT_LuminanceEffect()
				if _acedf := d.DecodeElement(_bcgg.Lum, &_ggbf); _acedf != nil {
					return _acedf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_bcgg.OuterShdw = NewCT_OuterShadowEffect()
				if _dgdde := d.DecodeElement(_bcgg.OuterShdw, &_ggbf); _dgdde != nil {
					return _dgdde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_bcgg.PrstShdw = NewCT_PresetShadowEffect()
				if _bddef := d.DecodeElement(_bcgg.PrstShdw, &_ggbf); _bddef != nil {
					return _bddef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bcgg.Reflection = NewCT_ReflectionEffect()
				if _ecbca := d.DecodeElement(_bcgg.Reflection, &_ggbf); _ecbca != nil {
					return _ecbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_bcgg.RelOff = NewCT_RelativeOffsetEffect()
				if _dec := d.DecodeElement(_bcgg.RelOff, &_ggbf); _dec != nil {
					return _dec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_bcgg.SoftEdge = NewCT_SoftEdgesEffect()
				if _edgaf := d.DecodeElement(_bcgg.SoftEdge, &_ggbf); _edgaf != nil {
					return _edgaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bcgg.Tint = NewCT_TintEffect()
				if _acgf := d.DecodeElement(_bcgg.Tint, &_ggbf); _acgf != nil {
					return _acgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_bcgg.Xfrm = NewCT_TransformEffect()
				if _fbbdb := d.DecodeElement(_bcgg.Xfrm, &_ggbf); _fbbdb != nil {
					return _fbbdb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025\u0076", _ggbf.Name)
				if _ggba := d.Skip(); _ggba != nil {
					return _ggba
				}
			}
		case _b.EndElement:
			break _dafa
		case _b.CharData:
		}
	}
	return nil
}
func (_fbgda *ST_TextTabAlignType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdcad, _adcfbc := d.Token()
	if _adcfbc != nil {
		return _adcfbc
	}
	if _efeaa, _bccbb := _cdcad.(_b.EndElement); _bccbb && _efeaa.Name == start.Name {
		*_fbgda = 1
		return nil
	}
	if _febaba, _ebfee := _cdcad.(_b.CharData); !_ebfee {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdcad)
	} else {
		switch string(_febaba) {
		case "":
			*_fbgda = 0
		case "\u006c":
			*_fbgda = 1
		case "\u0063\u0074\u0072":
			*_fbgda = 2
		case "\u0072":
			*_fbgda = 3
		case "\u0064\u0065\u0063":
			*_fbgda = 4
		}
	}
	_cdcad, _adcfbc = d.Token()
	if _adcfbc != nil {
		return _adcfbc
	}
	if _eedeab, _dgcgd := _cdcad.(_b.EndElement); _dgcgd && _eedeab.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdcad)
}
func NewCT_AudioFile() *CT_AudioFile { _egef := &CT_AudioFile{}; return _egef }
func (_egbdfd *EG_FillModeProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egbdfd.Tile != nil {
		_bdddd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_egbdfd.Tile, _bdddd)
	}
	if _egbdfd.Stretch != nil {
		_gbgdg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_egbdfd.Stretch, _gbgdg)
	}
	return nil
}

// ValidateWithPath validates the CT_ColorChangeEffect and its children, prefixing error messages with path
func (_gdbc *CT_ColorChangeEffect) ValidateWithPath(path string) error {
	if _dggd := _gdbc.ClrFrom.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0046\u0072\u006f\u006d"); _dggd != nil {
		return _dggd
	}
	if _fgec := _gdbc.ClrTo.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0054\u006f"); _fgec != nil {
		return _fgec
	}
	return nil
}
func (_egfbe *ST_TextPoint) Validate() error { return _egfbe.ValidateWithPath("") }
func (_facc *CT_NonVisualConnectorProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdcae:
	for {
		_afdeg, _cfdcc := d.Token()
		if _cfdcc != nil {
			return _cfdcc
		}
		switch _bgbb := _afdeg.(type) {
		case _b.StartElement:
			switch _bgbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_facc.CxnSpLocks = NewCT_ConnectorLocking()
				if _bfcgb := d.DecodeElement(_facc.CxnSpLocks, &_bgbb); _bfcgb != nil {
					return _bfcgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}:
				_facc.StCxn = NewCT_Connection()
				if _eaacd := d.DecodeElement(_facc.StCxn, &_bgbb); _eaacd != nil {
					return _eaacd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}:
				_facc.EndCxn = NewCT_Connection()
				if _gcaf := d.DecodeElement(_facc.EndCxn, &_bgbb); _gcaf != nil {
					return _gcaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_facc.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbfee := d.DecodeElement(_facc.ExtLst, &_bgbb); _bbfee != nil {
					return _bbfee
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006cC\u006f\u006en\u0065\u0063\u0074\u006fr\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bgbb.Name)
				if _bgbef := d.Skip(); _bgbef != nil {
					return _bgbef
				}
			}
		case _b.EndElement:
			break _fdcae
		case _b.CharData:
		}
	}
	return nil
}
func (_fbfd *CT_AudioFile) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edgb := range start.Attr {
		if _edgb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edgb.Name.Local == "\u006c\u0069\u006e\u006b" || _edgb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edgb.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cagf, _cbdg := _edgb.Value, error(nil)
			if _cbdg != nil {
				return _cbdg
			}
			_fbfd.LinkAttr = _cagf
			continue
		}
		if _edgb.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_cec, _eae := _edgb.Value, error(nil)
			if _eae != nil {
				return _eae
			}
			_fbfd.ContentTypeAttr = &_cec
			continue
		}
	}
_dag:
	for {
		_eabb, _fcfb := d.Token()
		if _fcfb != nil {
			return _fcfb
		}
		switch _fadd := _eabb.(type) {
		case _b.StartElement:
			switch _fadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbfd.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbc := d.DecodeElement(_fbfd.ExtLst, &_fadd); _gbc != nil {
					return _gbc
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_A\u0075\u0064i\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _fadd.Name)
				if _ffbg := d.Skip(); _ffbg != nil {
					return _ffbg
				}
			}
		case _b.EndElement:
			break _dag
		case _b.CharData:
		}
	}
	return nil
}

type CT_CustomColor struct {
	NameAttr  *string
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewEG_FillProperties() *EG_FillProperties { _fbeaaa := &EG_FillProperties{}; return _fbeaaa }
func ParseUnionST_AdjCoordinate(s string) (ST_AdjCoordinate, error) {
	_dfbcg := ST_AdjCoordinate{}
	if _eb.ST_UniversalMeasurePatternRe.MatchString(s) {
		_dfbcg.ST_Coordinate = &ST_Coordinate{}
		_dfbcg.ST_Coordinate.ST_UniversalMeasure = &s
	} else {
		_gggag, _acaac := _a.ParseInt(s, 10, 64)
		if _acaac != nil {
			_dfbcg.ST_GeomGuideName = &s
		} else {
			_dfbcg.ST_Coordinate = &ST_Coordinate{}
			_dfbcg.ST_Coordinate.ST_CoordinateUnqualified = &_gggag
		}
	}
	return _dfbcg, nil
}
func (_bgcgf *CT_Transform2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgcgf.RotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_bgcgf.RotAttr)})
	}
	if _bgcgf.FlipHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_bgcgf.FlipHAttr))})
	}
	if _bgcgf.FlipVAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_bgcgf.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _bgcgf.Off != nil {
		_cfgfag := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_bgcgf.Off, _cfgfag)
	}
	if _bgcgf.Ext != nil {
		_dccbb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_bgcgf.Ext, _dccbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egf *CT_AlphaReplaceEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061"}, Value: _bb.Sprintf("\u0025\u0076", _egf.AAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func (_dcda *CT_GvmlGroupShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcda.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_dcda.GrpSpPr = NewCT_GroupShapeProperties()
_eecce:
	for {
		_gcgdf, _dbdad := d.Token()
		if _dbdad != nil {
			return _dbdad
		}
		switch _cbcaa := _gcgdf.(type) {
		case _b.StartElement:
			switch _cbcaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _dfebe := d.DecodeElement(_dcda.NvGrpSpPr, &_cbcaa); _dfebe != nil {
					return _dfebe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _fddg := d.DecodeElement(_dcda.GrpSpPr, &_cbcaa); _fddg != nil {
					return _fddg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_gbbba := NewCT_GvmlGroupShapeChoice()
				if _gbbgf := d.DecodeElement(&_gbbba.TxSp, &_cbcaa); _gbbgf != nil {
					return _gbbgf
				}
				_dcda.Choice = append(_dcda.Choice, _gbbba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_ddde := NewCT_GvmlGroupShapeChoice()
				if _acagc := d.DecodeElement(&_ddde.Sp, &_cbcaa); _acagc != nil {
					return _acagc
				}
				_dcda.Choice = append(_dcda.Choice, _ddde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_dfed := NewCT_GvmlGroupShapeChoice()
				if _bgbcf := d.DecodeElement(&_dfed.CxnSp, &_cbcaa); _bgbcf != nil {
					return _bgbcf
				}
				_dcda.Choice = append(_dcda.Choice, _dfed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_defgc := NewCT_GvmlGroupShapeChoice()
				if _acged := d.DecodeElement(&_defgc.Pic, &_cbcaa); _acged != nil {
					return _acged
				}
				_dcda.Choice = append(_dcda.Choice, _defgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_egagf := NewCT_GvmlGroupShapeChoice()
				if _gece := d.DecodeElement(&_egagf.GraphicFrame, &_cbcaa); _gece != nil {
					return _gece
				}
				_dcda.Choice = append(_dcda.Choice, _egagf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_ccfb := NewCT_GvmlGroupShapeChoice()
				if _eccc := d.DecodeElement(&_ccfb.GrpSp, &_cbcaa); _eccc != nil {
					return _eccc
				}
				_dcda.Choice = append(_dcda.Choice, _ccfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcda.ExtLst = NewCT_OfficeArtExtensionList()
				if _cebeg := d.DecodeElement(_dcda.ExtLst, &_cbcaa); _cebeg != nil {
					return _cebeg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _cbcaa.Name)
				if _gccba := d.Skip(); _gccba != nil {
					return _gccba
				}
			}
		case _b.EndElement:
			break _eecce
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectData and its children, prefixing error messages with path
func (_bgbae *CT_GraphicalObjectData) ValidateWithPath(path string) error { return nil }
func (_cgbg *CT_Color) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebcb:
	for {
		_cbaaf, _fbff := d.Token()
		if _fbff != nil {
			return _fbff
		}
		switch _gagd := _cbaaf.(type) {
		case _b.StartElement:
			switch _gagd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cgbg.ScrgbClr = NewCT_ScRgbColor()
				if _eedeb := d.DecodeElement(_cgbg.ScrgbClr, &_gagd); _eedeb != nil {
					return _eedeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cgbg.SrgbClr = NewCT_SRgbColor()
				if _gaffg := d.DecodeElement(_cgbg.SrgbClr, &_gagd); _gaffg != nil {
					return _gaffg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cgbg.HslClr = NewCT_HslColor()
				if _cafg := d.DecodeElement(_cgbg.HslClr, &_gagd); _cafg != nil {
					return _cafg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cgbg.SysClr = NewCT_SystemColor()
				if _bfae := d.DecodeElement(_cgbg.SysClr, &_gagd); _bfae != nil {
					return _bfae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cgbg.SchemeClr = NewCT_SchemeColor()
				if _ddcbd := d.DecodeElement(_cgbg.SchemeClr, &_gagd); _ddcbd != nil {
					return _ddcbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cgbg.PrstClr = NewCT_PresetColor()
				if _dcgac := d.DecodeElement(_cgbg.PrstClr, &_gagd); _dcgac != nil {
					return _dcgac
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _gagd.Name)
				if _dggf := d.Skip(); _dggf != nil {
					return _dggf
				}
			}
		case _b.EndElement:
			break _ebcb
		case _b.CharData:
		}
	}
	return nil
}
func (_fdcdb *CT_FillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdef:
	for {
		_cgdfb, _afcec := d.Token()
		if _afcec != nil {
			return _afcec
		}
		switch _egbdd := _cgdfb.(type) {
		case _b.StartElement:
			switch _egbdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fdcdb.NoFill = NewCT_NoFillProperties()
				if _egba := d.DecodeElement(_fdcdb.NoFill, &_egbdd); _egba != nil {
					return _egba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fdcdb.SolidFill = NewCT_SolidColorFillProperties()
				if _gfecc := d.DecodeElement(_fdcdb.SolidFill, &_egbdd); _gfecc != nil {
					return _gfecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fdcdb.GradFill = NewCT_GradientFillProperties()
				if _dbgaa := d.DecodeElement(_fdcdb.GradFill, &_egbdd); _dbgaa != nil {
					return _dbgaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fdcdb.BlipFill = NewCT_BlipFillProperties()
				if _dcee := d.DecodeElement(_fdcdb.BlipFill, &_egbdd); _dcee != nil {
					return _dcee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fdcdb.PattFill = NewCT_PatternFillProperties()
				if _fadbe := d.DecodeElement(_fdcdb.PattFill, &_egbdd); _fadbe != nil {
					return _fadbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fdcdb.GrpFill = NewCT_GroupFillProperties()
				if _feeac := d.DecodeElement(_fdcdb.GrpFill, &_egbdd); _feeac != nil {
					return _feeac
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _egbdd.Name)
				if _eagef := d.Skip(); _eagef != nil {
					return _eagef
				}
			}
		case _b.EndElement:
			break _cdef
		case _b.CharData:
		}
	}
	return nil
}
func (_ggcdc *CT_NonVisualGroupDrawingShapeProps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgafad:
	for {
		_cefff, _ecbec := d.Token()
		if _ecbec != nil {
			return _ecbec
		}
		switch _gaecb := _cefff.(type) {
		case _b.StartElement:
			switch _gaecb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_ggcdc.GrpSpLocks = NewCT_GroupLocking()
				if _bdabf := d.DecodeElement(_ggcdc.GrpSpLocks, &_gaecb); _bdabf != nil {
					return _bdabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggcdc.ExtLst = NewCT_OfficeArtExtensionList()
				if _beafg := d.DecodeElement(_ggcdc.ExtLst, &_gaecb); _beafg != nil {
					return _beafg
				}
			default:
				_f.Log("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u006f\u0075\u0070\u0044\u0072\u0061\u0077\u0069\u006eg\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073\u0020%\u0076", _gaecb.Name)
				if _aaccf := d.Skip(); _aaccf != nil {
					return _aaccf
				}
			}
		case _b.EndElement:
			break _fgafad
		case _b.CharData:
		}
	}
	return nil
}
func (_ccdde *EG_TextUnderlineFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_daefd:
	for {
		_ffbbd, _dafee := d.Token()
		if _dafee != nil {
			return _dafee
		}
		switch _cegaaa := _ffbbd.(type) {
		case _b.StartElement:
			switch _cegaaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_ccdde.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _cadec := d.DecodeElement(_ccdde.UFillTx, &_cegaaa); _cadec != nil {
					return _cadec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_ccdde.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _egfa := d.DecodeElement(_ccdde.UFill, &_cegaaa); _egfa != nil {
					return _egfa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _cegaaa.Name)
				if _aaecg := d.Skip(); _aaecg != nil {
					return _aaecg
				}
			}
		case _b.EndElement:
			break _daefd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationChartElement and its children, prefixing error messages with path
func (_gbgb *CT_AnimationChartElement) ValidateWithPath(path string) error {
	if _gbgb.BldStepAttr == ST_ChartBuildStepUnset {
		return _bb.Errorf("%\u0073\u002f\u0042\u006c\u0064\u0053t\u0065\u0070\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _fabf := _gbgb.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _fabf != nil {
		return _fabf
	}
	return nil
}
func NewEG_ThemeableFontStyles() *EG_ThemeableFontStyles {
	_eedba := &EG_ThemeableFontStyles{}
	return _eedba
}
func (_bbcbdg *ST_OnOffStyleType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfebgc, _fdcfc := d.Token()
	if _fdcfc != nil {
		return _fdcfc
	}
	if _egace, _aabfd := _dfebgc.(_b.EndElement); _aabfd && _egace.Name == start.Name {
		*_bbcbdg = 1
		return nil
	}
	if _ddfcc, _bggfa := _dfebgc.(_b.CharData); !_bggfa {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfebgc)
	} else {
		switch string(_ddfcc) {
		case "":
			*_bbcbdg = 0
		case "\u006f\u006e":
			*_bbcbdg = 1
		case "\u006f\u0066\u0066":
			*_bbcbdg = 2
		case "\u0064\u0065\u0066":
			*_bbcbdg = 3
		}
	}
	_dfebgc, _fdcfc = d.Token()
	if _fdcfc != nil {
		return _fdcfc
	}
	if _dcddgb, _aebga := _dfebgc.(_b.EndElement); _aebga && _dcddgb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfebgc)
}
func (_cdcac ST_TextCapsType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cggee := _b.Attr{}
	_cggee.Name = name
	switch _cdcac {
	case ST_TextCapsTypeUnset:
		_cggee.Value = ""
	case ST_TextCapsTypeNone:
		_cggee.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextCapsTypeSmall:
		_cggee.Value = "\u0073\u006d\u0061l\u006c"
	case ST_TextCapsTypeAll:
		_cggee.Value = "\u0061\u006c\u006c"
	}
	return _cggee, nil
}
func NewCT_FontCollection() *CT_FontCollection {
	_dgaa := &CT_FontCollection{}
	_dgaa.Latin = NewCT_TextFont()
	_dgaa.Ea = NewCT_TextFont()
	_dgaa.Cs = NewCT_TextFont()
	return _dgaa
}

type CT_NonVisualGraphicFrameProperties struct {
	GraphicFrameLocks *CT_GraphicalObjectFrameLocking
	ExtLst            *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the EG_Text3D and its children, prefixing error messages with path
func (_faaefb *EG_Text3D) ValidateWithPath(path string) error {
	if _faaefb.Sp3d != nil {
		if _ddac := _faaefb.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _ddac != nil {
			return _ddac
		}
	}
	if _faaefb.FlatTx != nil {
		if _caafe := _faaefb.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _caafe != nil {
			return _caafe
		}
	}
	return nil
}

const (
	ST_TileFlipModeUnset ST_TileFlipMode = 0
	ST_TileFlipModeNone  ST_TileFlipMode = 1
	ST_TileFlipModeX     ST_TileFlipMode = 2
	ST_TileFlipModeY     ST_TileFlipMode = 3
	ST_TileFlipModeXy    ST_TileFlipMode = 4
)

func (_bageg ST_ChartBuildStep) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcffd := _b.Attr{}
	_bcffd.Name = name
	switch _bageg {
	case ST_ChartBuildStepUnset:
		_bcffd.Value = ""
	case ST_ChartBuildStepCategory:
		_bcffd.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepPtInCategory:
		_bcffd.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepSeries:
		_bcffd.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepPtInSeries:
		_bcffd.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepAllPts:
		_bcffd.Value = "\u0061\u006c\u006c\u0050\u0074\u0073"
	case ST_ChartBuildStepGridLegend:
		_bcffd.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return _bcffd, nil
}

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_aaff *CT_Hyperlink) ValidateWithPath(path string) error {
	if _aaff.Snd != nil {
		if _ddda := _aaff.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _ddda != nil {
			return _ddda
		}
	}
	if _aaff.ExtLst != nil {
		if _edaac := _aaff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edaac != nil {
			return _edaac
		}
	}
	return nil
}

// ValidateWithPath validates the ThemeOverride and its children, prefixing error messages with path
func (_facbe *ThemeOverride) ValidateWithPath(path string) error {
	if _cfffb := _facbe.CT_BaseStylesOverride.ValidateWithPath(path); _cfffb != nil {
		return _cfffb
	}
	return nil
}
func (_aadcf *CT_TextSpacingPoint) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _aadcf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ContentPartLocking and its children, prefixing error messages with path
func (_acdb *CT_ContentPartLocking) ValidateWithPath(path string) error {
	if _acdb.ExtLst != nil {
		if _egddb := _acdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egddb != nil {
			return _egddb
		}
	}
	return nil
}
func (_ccbb *CT_FontCollection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccbb.Latin = NewCT_TextFont()
	_ccbb.Ea = NewCT_TextFont()
	_ccbb.Cs = NewCT_TextFont()
_ccdef:
	for {
		_bcdc, _fgce := d.Token()
		if _fgce != nil {
			return _fgce
		}
		switch _gdbdd := _bcdc.(type) {
		case _b.StartElement:
			switch _gdbdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				if _dagbf := d.DecodeElement(_ccbb.Latin, &_gdbdd); _dagbf != nil {
					return _dagbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				if _gggc := d.DecodeElement(_ccbb.Ea, &_gdbdd); _gggc != nil {
					return _gggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				if _agec := d.DecodeElement(_ccbb.Cs, &_gdbdd); _agec != nil {
					return _agec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_ccafg := NewCT_SupplementalFont()
				if _bgbc := d.DecodeElement(_ccafg, &_gdbdd); _bgbc != nil {
					return _bgbc
				}
				_ccbb.Font = append(_ccbb.Font, _ccafg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccbb.ExtLst = NewCT_OfficeArtExtensionList()
				if _eeffd := d.DecodeElement(_ccbb.ExtLst, &_gdbdd); _eeffd != nil {
					return _eeffd
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gdbdd.Name)
				if _gebb := d.Skip(); _gebb != nil {
					return _gebb
				}
			}
		case _b.EndElement:
			break _ccdef
		case _b.CharData:
		}
	}
	return nil
}
func (_ggcg *CT_ColorChangeEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggcg.ClrFrom = NewCT_Color()
	_ggcg.ClrTo = NewCT_Color()
	for _, _aaef := range start.Attr {
		if _aaef.Name.Local == "\u0075\u0073\u0065\u0041" {
			_dagf, _fggg := _a.ParseBool(_aaef.Value)
			if _fggg != nil {
				return _fggg
			}
			_ggcg.UseAAttr = &_dagf
			continue
		}
	}
_dfaf:
	for {
		_aegc, _egfeg := d.Token()
		if _egfeg != nil {
			return _egfeg
		}
		switch _eeee := _aegc.(type) {
		case _b.StartElement:
			switch _eeee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}:
				if _gdad := d.DecodeElement(_ggcg.ClrFrom, &_eeee); _gdad != nil {
					return _gdad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}:
				if _ffga := d.DecodeElement(_ggcg.ClrTo, &_eeee); _ffga != nil {
					return _ffga
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061\u006e\u0067\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _eeee.Name)
				if _daagb := d.Skip(); _daagb != nil {
					return _daagb
				}
			}
		case _b.EndElement:
			break _dfaf
		case _b.CharData:
		}
	}
	return nil
}

type CT_GroupLocking struct {
	NoGrpAttr          *bool
	NoUngrpAttr        *bool
	NoSelectAttr       *bool
	NoRotAttr          *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func (_aeeaf *CT_ReflectionEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebebd := range start.Attr {
		if _ebebd.Name.Local == "\u0066a\u0064\u0065\u0044\u0069\u0072" {
			_cbacb, _dcbce := _a.ParseInt(_ebebd.Value, 10, 32)
			if _dcbce != nil {
				return _dcbce
			}
			_dagfe := int32(_cbacb)
			_aeeaf.FadeDirAttr = &_dagfe
			continue
		}
		if _ebebd.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_gefbc, _dcgcd := _a.ParseInt(_ebebd.Value, 10, 64)
			if _dcgcd != nil {
				return _dcgcd
			}
			_aeeaf.BlurRadAttr = &_gefbc
			continue
		}
		if _ebebd.Name.Local == "\u0073\u0074\u0050o\u0073" {
			_cgddc, _gcecb := ParseUnionST_PositiveFixedPercentage(_ebebd.Value)
			if _gcecb != nil {
				return _gcecb
			}
			_aeeaf.StPosAttr = &_cgddc
			continue
		}
		if _ebebd.Name.Local == "\u0065\u006e\u0064\u0041" {
			_bfgad, _efaea := ParseUnionST_PositiveFixedPercentage(_ebebd.Value)
			if _efaea != nil {
				return _efaea
			}
			_aeeaf.EndAAttr = &_bfgad
			continue
		}
		if _ebebd.Name.Local == "\u0065\u006e\u0064\u0050\u006f\u0073" {
			_dedf, _fddde := ParseUnionST_PositiveFixedPercentage(_ebebd.Value)
			if _fddde != nil {
				return _fddde
			}
			_aeeaf.EndPosAttr = &_dedf
			continue
		}
		if _ebebd.Name.Local == "\u0064\u0069\u0073\u0074" {
			_fcebbd, _ecdac := _a.ParseInt(_ebebd.Value, 10, 64)
			if _ecdac != nil {
				return _ecdac
			}
			_aeeaf.DistAttr = &_fcebbd
			continue
		}
		if _ebebd.Name.Local == "\u0064\u0069\u0072" {
			_gacdf, _baeee := _a.ParseInt(_ebebd.Value, 10, 32)
			if _baeee != nil {
				return _baeee
			}
			_abedf := int32(_gacdf)
			_aeeaf.DirAttr = &_abedf
			continue
		}
		if _ebebd.Name.Local == "\u0073\u0074\u0041" {
			_fegec, _aebfc := ParseUnionST_PositiveFixedPercentage(_ebebd.Value)
			if _aebfc != nil {
				return _aebfc
			}
			_aeeaf.StAAttr = &_fegec
			continue
		}
		if _ebebd.Name.Local == "\u0073\u0078" {
			_agbga, _abdb := ParseUnionST_Percentage(_ebebd.Value)
			if _abdb != nil {
				return _abdb
			}
			_aeeaf.SxAttr = &_agbga
			continue
		}
		if _ebebd.Name.Local == "\u0073\u0079" {
			_cgcd, _baegd := ParseUnionST_Percentage(_ebebd.Value)
			if _baegd != nil {
				return _baegd
			}
			_aeeaf.SyAttr = &_cgcd
			continue
		}
		if _ebebd.Name.Local == "\u006b\u0078" {
			_aebfb, _fgee := _a.ParseInt(_ebebd.Value, 10, 32)
			if _fgee != nil {
				return _fgee
			}
			_baabf := int32(_aebfb)
			_aeeaf.KxAttr = &_baabf
			continue
		}
		if _ebebd.Name.Local == "\u006b\u0079" {
			_abdfe, _ccaaf := _a.ParseInt(_ebebd.Value, 10, 32)
			if _ccaaf != nil {
				return _ccaaf
			}
			_aaee := int32(_abdfe)
			_aeeaf.KyAttr = &_aaee
			continue
		}
		if _ebebd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_aeeaf.AlgnAttr.UnmarshalXMLAttr(_ebebd)
			continue
		}
		if _ebebd.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_bdffb, _bffeae := _a.ParseBool(_ebebd.Value)
			if _bffeae != nil {
				return _bffeae
			}
			_aeeaf.RotWithShapeAttr = &_bdffb
			continue
		}
	}
	for {
		_fgfabb, _acffe := d.Token()
		if _acffe != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0066\u006c\u0065c\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _acffe)
		}
		if _ggcbf, _ffafe := _fgfabb.(_b.EndElement); _ffafe && _ggcbf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Path2DClose and its children
func (_cfac *CT_Path2DClose) Validate() error {
	return _cfac.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065")
}
func NewCT_Point3D() *CT_Point3D { _dbcbe := &CT_Point3D{}; return _dbcbe }
func (_aagf ST_ShapeType) ValidateWithPath(path string) error {
	switch _aagf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagf))
	}
	return nil
}

type CT_Path2DLineTo struct{ Pt *CT_AdjPoint2D }

func (_edfcf ST_TextHorzOverflowType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gaaff := _b.Attr{}
	_gaaff.Name = name
	switch _edfcf {
	case ST_TextHorzOverflowTypeUnset:
		_gaaff.Value = ""
	case ST_TextHorzOverflowTypeOverflow:
		_gaaff.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextHorzOverflowTypeClip:
		_gaaff.Value = "\u0063\u006c\u0069\u0070"
	}
	return _gaaff, nil
}
func NewEG_Geometry() *EG_Geometry               { _feebd := &EG_Geometry{}; return _feebd }
func NewCT_EffectStyleList() *CT_EffectStyleList { _dcdcf := &CT_EffectStyleList{}; return _dcdcf }
func (_bcge *CT_DuotoneEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgeea:
	for {
		_ceagc, _cgcc := d.Token()
		if _cgcc != nil {
			return _cgcc
		}
		switch _adge := _ceagc.(type) {
		case _b.StartElement:
			switch _adge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ffaag := NewEG_ColorChoice()
				_ffaag.ScrgbClr = NewCT_ScRgbColor()
				if _ecbcg := d.DecodeElement(_ffaag.ScrgbClr, &_adge); _ecbcg != nil {
					return _ecbcg
				}
				_bcge.EG_ColorChoice = append(_bcge.EG_ColorChoice, _ffaag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cbeg := NewEG_ColorChoice()
				_cbeg.SrgbClr = NewCT_SRgbColor()
				if _gbcg := d.DecodeElement(_cbeg.SrgbClr, &_adge); _gbcg != nil {
					return _gbcg
				}
				_bcge.EG_ColorChoice = append(_bcge.EG_ColorChoice, _cbeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dege := NewEG_ColorChoice()
				_dege.HslClr = NewCT_HslColor()
				if _cdfb := d.DecodeElement(_dege.HslClr, &_adge); _cdfb != nil {
					return _cdfb
				}
				_bcge.EG_ColorChoice = append(_bcge.EG_ColorChoice, _dege)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_fbcb := NewEG_ColorChoice()
				_fbcb.SysClr = NewCT_SystemColor()
				if _eaac := d.DecodeElement(_fbcb.SysClr, &_adge); _eaac != nil {
					return _eaac
				}
				_bcge.EG_ColorChoice = append(_bcge.EG_ColorChoice, _fbcb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gcdd := NewEG_ColorChoice()
				_gcdd.SchemeClr = NewCT_SchemeColor()
				if _gdcab := d.DecodeElement(_gcdd.SchemeClr, &_adge); _gdcab != nil {
					return _gdcab
				}
				_bcge.EG_ColorChoice = append(_bcge.EG_ColorChoice, _gcdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ecgd := NewEG_ColorChoice()
				_ecgd.PrstClr = NewCT_PresetColor()
				if _efdda := d.DecodeElement(_ecgd.PrstClr, &_adge); _efdda != nil {
					return _efdda
				}
				_bcge.EG_ColorChoice = append(_bcge.EG_ColorChoice, _ecgd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0075\u006f\u0074\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025v", _adge.Name)
				if _abac := d.Skip(); _abac != nil {
					return _abac
				}
			}
		case _b.EndElement:
			break _bgeea
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TransformEffect and its children, prefixing error messages with path
func (_ecggd *CT_TransformEffect) ValidateWithPath(path string) error {
	if _ecggd.SxAttr != nil {
		if _ecgbc := _ecggd.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _ecgbc != nil {
			return _ecgbc
		}
	}
	if _ecggd.SyAttr != nil {
		if _gcddba := _ecggd.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _gcddba != nil {
			return _gcddba
		}
	}
	if _ecggd.KxAttr != nil {
		if *_ecggd.KxAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_ecggd.KxAttr)
		}
		if *_ecggd.KxAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ecggd.KxAttr)
		}
	}
	if _ecggd.KyAttr != nil {
		if *_ecggd.KyAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_ecggd.KyAttr)
		}
		if *_ecggd.KyAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ecggd.KyAttr)
		}
	}
	if _ecggd.TxAttr != nil {
		if _fbedfd := _ecggd.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _fbedfd != nil {
			return _fbedfd
		}
	}
	if _ecggd.TyAttr != nil {
		if _edaedg := _ecggd.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _edaedg != nil {
			return _edaedg
		}
	}
	return nil
}

type CT_Table struct {
	TblPr   *CT_TableProperties
	TblGrid *CT_TableGrid
	Tr      []*CT_TableRow
}

func (_deaa *CT_ColorSchemeAndMapping) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deaa.ClrScheme = NewCT_ColorScheme()
_dcgb:
	for {
		_abecf, _dadg := d.Token()
		if _dadg != nil {
			return _dadg
		}
		switch _gdbd := _abecf.(type) {
		case _b.StartElement:
			switch _gdbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _ggdd := d.DecodeElement(_deaa.ClrScheme, &_gdbd); _ggdd != nil {
					return _ggdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				_deaa.ClrMap = NewCT_ColorMapping()
				if _bgffc := d.DecodeElement(_deaa.ClrMap, &_gdbd); _bgffc != nil {
					return _bgffc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u006e\u0064\u004d\u0061p\u0070\u0069\u006e\u0067\u0020%\u0076", _gdbd.Name)
				if _deeeg := d.Skip(); _deeeg != nil {
					return _deeeg
				}
			}
		case _b.EndElement:
			break _dcgb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PictureLocking and its children, prefixing error messages with path
func (_ffffa *CT_PictureLocking) ValidateWithPath(path string) error {
	if _ffffa.ExtLst != nil {
		if _gdbeb := _ffffa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdbeb != nil {
			return _gdbeb
		}
	}
	return nil
}
func (_ccbf *TblStyleLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"
	return _ccbf.CT_TableStyleList.MarshalXML(e, start)
}

type CT_ColorMappingOverrideChoice struct {
	MasterClrMapping   *CT_EmptyElement
	OverrideClrMapping *CT_ColorMapping
}

func (_cgbfca *CT_HslColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgbfca.HueAttr = 0
	for _, _fffd := range start.Attr {
		if _fffd.Name.Local == "\u0068\u0075\u0065" {
			_abbga, _ecff := _a.ParseInt(_fffd.Value, 10, 32)
			if _ecff != nil {
				return _ecff
			}
			_cgbfca.HueAttr = int32(_abbga)
			continue
		}
		if _fffd.Name.Local == "\u0073\u0061\u0074" {
			_fbab, _dfda := ParseUnionST_Percentage(_fffd.Value)
			if _dfda != nil {
				return _dfda
			}
			_cgbfca.SatAttr = _fbab
			continue
		}
		if _fffd.Name.Local == "\u006c\u0075\u006d" {
			_afgf, _ecbcdg := ParseUnionST_Percentage(_fffd.Value)
			if _ecbcdg != nil {
				return _ecbcdg
			}
			_cgbfca.LumAttr = _afgf
			continue
		}
	}
_efdcd:
	for {
		_ebcdf, _gfebd := d.Token()
		if _gfebd != nil {
			return _gfebd
		}
		switch _ecddd := _ebcdf.(type) {
		case _b.StartElement:
			switch _ecddd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_dafg := NewEG_ColorTransform()
				_dafg.Tint = NewCT_PositiveFixedPercentage()
				if _gdbcd := d.DecodeElement(_dafg.Tint, &_ecddd); _gdbcd != nil {
					return _gdbcd
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _dafg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_bcac := NewEG_ColorTransform()
				_bcac.Shade = NewCT_PositiveFixedPercentage()
				if _feef := d.DecodeElement(_bcac.Shade, &_ecddd); _feef != nil {
					return _feef
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _bcac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_aegde := NewEG_ColorTransform()
				_aegde.Comp = NewCT_ComplementTransform()
				if _decg := d.DecodeElement(_aegde.Comp, &_ecddd); _decg != nil {
					return _decg
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _aegde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_agdfg := NewEG_ColorTransform()
				_agdfg.Inv = NewCT_InverseTransform()
				if _gced := d.DecodeElement(_agdfg.Inv, &_ecddd); _gced != nil {
					return _gced
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _agdfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_ebggc := NewEG_ColorTransform()
				_ebggc.Gray = NewCT_GrayscaleTransform()
				if _dcfga := d.DecodeElement(_ebggc.Gray, &_ecddd); _dcfga != nil {
					return _dcfga
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _ebggc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_eeaaa := NewEG_ColorTransform()
				_eeaaa.Alpha = NewCT_PositiveFixedPercentage()
				if _acgba := d.DecodeElement(_eeaaa.Alpha, &_ecddd); _acgba != nil {
					return _acgba
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _eeaaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_fbfc := NewEG_ColorTransform()
				_fbfc.AlphaOff = NewCT_FixedPercentage()
				if _ebeab := d.DecodeElement(_fbfc.AlphaOff, &_ecddd); _ebeab != nil {
					return _ebeab
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _fbfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_ggad := NewEG_ColorTransform()
				_ggad.AlphaMod = NewCT_PositivePercentage()
				if _efgef := d.DecodeElement(_ggad.AlphaMod, &_ecddd); _efgef != nil {
					return _efgef
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _ggad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_dgbb := NewEG_ColorTransform()
				_dgbb.Hue = NewCT_PositiveFixedAngle()
				if _bebd := d.DecodeElement(_dgbb.Hue, &_ecddd); _bebd != nil {
					return _bebd
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _dgbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_gafg := NewEG_ColorTransform()
				_gafg.HueOff = NewCT_Angle()
				if _afdga := d.DecodeElement(_gafg.HueOff, &_ecddd); _afdga != nil {
					return _afdga
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _gafg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_gbgf := NewEG_ColorTransform()
				_gbgf.HueMod = NewCT_PositivePercentage()
				if _cgca := d.DecodeElement(_gbgf.HueMod, &_ecddd); _cgca != nil {
					return _cgca
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _gbgf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_ecdgc := NewEG_ColorTransform()
				_ecdgc.Sat = NewCT_Percentage()
				if _ebead := d.DecodeElement(_ecdgc.Sat, &_ecddd); _ebead != nil {
					return _ebead
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _ecdgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_faabe := NewEG_ColorTransform()
				_faabe.SatOff = NewCT_Percentage()
				if _bcbfgd := d.DecodeElement(_faabe.SatOff, &_ecddd); _bcbfgd != nil {
					return _bcbfgd
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _faabe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_addab := NewEG_ColorTransform()
				_addab.SatMod = NewCT_Percentage()
				if _fccg := d.DecodeElement(_addab.SatMod, &_ecddd); _fccg != nil {
					return _fccg
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _addab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_dedga := NewEG_ColorTransform()
				_dedga.Lum = NewCT_Percentage()
				if _beeaa := d.DecodeElement(_dedga.Lum, &_ecddd); _beeaa != nil {
					return _beeaa
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _dedga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_cecgce := NewEG_ColorTransform()
				_cecgce.LumOff = NewCT_Percentage()
				if _accd := d.DecodeElement(_cecgce.LumOff, &_ecddd); _accd != nil {
					return _accd
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _cecgce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_abdcb := NewEG_ColorTransform()
				_abdcb.LumMod = NewCT_Percentage()
				if _fggba := d.DecodeElement(_abdcb.LumMod, &_ecddd); _fggba != nil {
					return _fggba
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _abdcb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_adfed := NewEG_ColorTransform()
				_adfed.Red = NewCT_Percentage()
				if _cadba := d.DecodeElement(_adfed.Red, &_ecddd); _cadba != nil {
					return _cadba
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _adfed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_eccd := NewEG_ColorTransform()
				_eccd.RedOff = NewCT_Percentage()
				if _deab := d.DecodeElement(_eccd.RedOff, &_ecddd); _deab != nil {
					return _deab
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _eccd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_agcg := NewEG_ColorTransform()
				_agcg.RedMod = NewCT_Percentage()
				if _edaag := d.DecodeElement(_agcg.RedMod, &_ecddd); _edaag != nil {
					return _edaag
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _agcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_dgfed := NewEG_ColorTransform()
				_dgfed.Green = NewCT_Percentage()
				if _becea := d.DecodeElement(_dgfed.Green, &_ecddd); _becea != nil {
					return _becea
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _dgfed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_cdge := NewEG_ColorTransform()
				_cdge.GreenOff = NewCT_Percentage()
				if _egbe := d.DecodeElement(_cdge.GreenOff, &_ecddd); _egbe != nil {
					return _egbe
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _cdge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_ffaaf := NewEG_ColorTransform()
				_ffaaf.GreenMod = NewCT_Percentage()
				if _fddafa := d.DecodeElement(_ffaaf.GreenMod, &_ecddd); _fddafa != nil {
					return _fddafa
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _ffaaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_gefac := NewEG_ColorTransform()
				_gefac.Blue = NewCT_Percentage()
				if _aefbb := d.DecodeElement(_gefac.Blue, &_ecddd); _aefbb != nil {
					return _aefbb
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _gefac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_agdc := NewEG_ColorTransform()
				_agdc.BlueOff = NewCT_Percentage()
				if _dbdbg := d.DecodeElement(_agdc.BlueOff, &_ecddd); _dbdbg != nil {
					return _dbdbg
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _agdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_gffb := NewEG_ColorTransform()
				_gffb.BlueMod = NewCT_Percentage()
				if _edebe := d.DecodeElement(_gffb.BlueMod, &_ecddd); _edebe != nil {
					return _edebe
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _gffb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_dcgda := NewEG_ColorTransform()
				_dcgda.Gamma = NewCT_GammaTransform()
				if _cdcbg := d.DecodeElement(_dcgda.Gamma, &_ecddd); _cdcbg != nil {
					return _cdcbg
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _dcgda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_ffcab := NewEG_ColorTransform()
				_ffcab.InvGamma = NewCT_InverseGammaTransform()
				if _bbag := d.DecodeElement(_ffcab.InvGamma, &_ecddd); _bbag != nil {
					return _bbag
				}
				_cgbfca.EG_ColorTransform = append(_cgbfca.EG_ColorTransform, _ffcab)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _ecddd.Name)
				if _agbeg := d.Skip(); _agbeg != nil {
					return _agbeg
				}
			}
		case _b.EndElement:
			break _efdcd
		case _b.CharData:
		}
	}
	return nil
}
func (_abaef ST_Coordinate32) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _abaef.ST_Coordinate32Unqualified != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_abaef.ST_Coordinate32Unqualified)))
	}
	if _abaef.ST_UniversalMeasure != nil {
		e.EncodeToken(_b.CharData(*_abaef.ST_UniversalMeasure))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_eagec *CT_NonVisualConnectorProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eagec.CxnSpLocks != nil {
		_abff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063x\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_eagec.CxnSpLocks, _abff)
	}
	if _eagec.StCxn != nil {
		_bbgdg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0043\u0078\u006e"}}
		e.EncodeElement(_eagec.StCxn, _bbgdg)
	}
	if _eagec.EndCxn != nil {
		_fcdeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u006e\u0064\u0043\u0078\u006e"}}
		e.EncodeElement(_eagec.EndCxn, _fcdeb)
	}
	if _eagec.ExtLst != nil {
		_bcgga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eagec.ExtLst, _bcgga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbd *CT_AnimationChartElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbd.SeriesIdxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x"}, Value: _bb.Sprintf("\u0025\u0076", *_cbd.SeriesIdxAttr)})
	}
	if _cbd.CategoryIdxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_cbd.CategoryIdxAttr)})
	}
	_bdg, _ade := _cbd.BldStepAttr.MarshalXMLAttr(_b.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
	if _ade != nil {
		return _ade
	}
	start.Attr = append(start.Attr, _bdg)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SRgbColor and its children
func (_ecfcf *CT_SRgbColor) Validate() error {
	return _ecfcf.ValidateWithPath("\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the EG_Effect and its children, prefixing error messages with path
func (_gegce *EG_Effect) ValidateWithPath(path string) error {
	if _gegce.Cont != nil {
		if _deecg := _gegce.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _deecg != nil {
			return _deecg
		}
	}
	if _gegce.Effect != nil {
		if _dgbgcb := _gegce.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _dgbgcb != nil {
			return _dgbgcb
		}
	}
	if _gegce.AlphaBiLevel != nil {
		if _ebdbg := _gegce.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ebdbg != nil {
			return _ebdbg
		}
	}
	if _gegce.AlphaCeiling != nil {
		if _cbgda := _gegce.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _cbgda != nil {
			return _cbgda
		}
	}
	if _gegce.AlphaFloor != nil {
		if _gfggcb := _gegce.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _gfggcb != nil {
			return _gfggcb
		}
	}
	if _gegce.AlphaInv != nil {
		if _bfgfe := _gegce.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _bfgfe != nil {
			return _bfgfe
		}
	}
	if _gegce.AlphaMod != nil {
		if _ceagcc := _gegce.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _ceagcc != nil {
			return _ceagcc
		}
	}
	if _gegce.AlphaModFix != nil {
		if _ffefe := _gegce.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _ffefe != nil {
			return _ffefe
		}
	}
	if _gegce.AlphaOutset != nil {
		if _gcccd := _gegce.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _gcccd != nil {
			return _gcccd
		}
	}
	if _gegce.AlphaRepl != nil {
		if _cgfbd := _gegce.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _cgfbd != nil {
			return _cgfbd
		}
	}
	if _gegce.BiLevel != nil {
		if _fdcde := _gegce.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _fdcde != nil {
			return _fdcde
		}
	}
	if _gegce.Blend != nil {
		if _gagb := _gegce.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _gagb != nil {
			return _gagb
		}
	}
	if _gegce.Blur != nil {
		if _fffea := _gegce.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _fffea != nil {
			return _fffea
		}
	}
	if _gegce.ClrChange != nil {
		if _bfabc := _gegce.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _bfabc != nil {
			return _bfabc
		}
	}
	if _gegce.ClrRepl != nil {
		if _fdbb := _gegce.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _fdbb != nil {
			return _fdbb
		}
	}
	if _gegce.Duotone != nil {
		if _deggg := _gegce.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _deggg != nil {
			return _deggg
		}
	}
	if _gegce.Fill != nil {
		if _acabeg := _gegce.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _acabeg != nil {
			return _acabeg
		}
	}
	if _gegce.FillOverlay != nil {
		if _acffg := _gegce.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _acffg != nil {
			return _acffg
		}
	}
	if _gegce.Glow != nil {
		if _gecbed := _gegce.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _gecbed != nil {
			return _gecbed
		}
	}
	if _gegce.Grayscl != nil {
		if _fdecac := _gegce.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _fdecac != nil {
			return _fdecac
		}
	}
	if _gegce.Hsl != nil {
		if _bbcbd := _gegce.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _bbcbd != nil {
			return _bbcbd
		}
	}
	if _gegce.InnerShdw != nil {
		if _gafff := _gegce.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _gafff != nil {
			return _gafff
		}
	}
	if _gegce.Lum != nil {
		if _cbgeg := _gegce.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _cbgeg != nil {
			return _cbgeg
		}
	}
	if _gegce.OuterShdw != nil {
		if _gdabd := _gegce.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _gdabd != nil {
			return _gdabd
		}
	}
	if _gegce.PrstShdw != nil {
		if _ffdccb := _gegce.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _ffdccb != nil {
			return _ffdccb
		}
	}
	if _gegce.Reflection != nil {
		if _gafgca := _gegce.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _gafgca != nil {
			return _gafgca
		}
	}
	if _gegce.RelOff != nil {
		if _fbbfa := _gegce.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _fbbfa != nil {
			return _fbbfa
		}
	}
	if _gegce.SoftEdge != nil {
		if _baaae := _gegce.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _baaae != nil {
			return _baaae
		}
	}
	if _gegce.Tint != nil {
		if _fafb := _gegce.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _fafb != nil {
			return _fafb
		}
	}
	if _gegce.Xfrm != nil {
		if _eacda := _gegce.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _eacda != nil {
			return _eacda
		}
	}
	return nil
}
func (_caedb ST_LightRigDirection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_caedb.String(), start)
}
func (_ecaebd ST_BlipCompression) String() string {
	switch _ecaebd {
	case 0:
		return ""
	case 1:
		return "\u0065\u006d\u0061i\u006c"
	case 2:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 3:
		return "\u0070\u0072\u0069n\u0074"
	case 4:
		return "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_gbdg *CT_TextField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbdg.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gafef := range start.Attr {
		if _gafef.Name.Local == "\u0069\u0064" {
			_cfgbg, _dececd := _gafef.Value, error(nil)
			if _dececd != nil {
				return _dececd
			}
			_gbdg.IdAttr = _cfgbg
			continue
		}
		if _gafef.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gagae, _dgbc := _gafef.Value, error(nil)
			if _dgbc != nil {
				return _dgbc
			}
			_gbdg.TypeAttr = &_gagae
			continue
		}
	}
_fcdefa:
	for {
		_aadfd, _ddcgge := d.Token()
		if _ddcgge != nil {
			return _ddcgge
		}
		switch _egffa := _aadfd.(type) {
		case _b.StartElement:
			switch _egffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_gbdg.RPr = NewCT_TextCharacterProperties()
				if _cccfb := d.DecodeElement(_gbdg.RPr, &_egffa); _cccfb != nil {
					return _cccfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_gbdg.PPr = NewCT_TextParagraphProperties()
				if _fdaba := d.DecodeElement(_gbdg.PPr, &_egffa); _fdaba != nil {
					return _fdaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_gbdg.T = new(string)
				if _ddffe := d.DecodeElement(_gbdg.T, &_egffa); _ddffe != nil {
					return _ddffe
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _egffa.Name)
				if _ffcdd := d.Skip(); _ffcdd != nil {
					return _ffcdd
				}
			}
		case _b.EndElement:
			break _fcdefa
		case _b.CharData:
		}
	}
	return nil
}
func (_aefde *CT_TextFont) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dggfgf := range start.Attr {
		if _dggfgf.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_fdecg, _fbccd := _dggfgf.Value, error(nil)
			if _fbccd != nil {
				return _fbccd
			}
			_aefde.TypefaceAttr = _fdecg
			continue
		}
		if _dggfgf.Name.Local == "\u0070\u0061\u006e\u006f\u0073\u0065" {
			_daeacb, _fbffe := _dggfgf.Value, error(nil)
			if _fbffe != nil {
				return _fbffe
			}
			_aefde.PanoseAttr = &_daeacb
			continue
		}
		if _dggfgf.Name.Local == "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079" {
			_aefde.PitchFamilyAttr.UnmarshalXMLAttr(_dggfgf)
			continue
		}
		if _dggfgf.Name.Local == "\u0063h\u0061\u0072\u0073\u0065\u0074" {
			_fccaa, _ccgee := _a.ParseInt(_dggfgf.Value, 10, 8)
			if _ccgee != nil {
				return _ccgee
			}
			_ccbce := int8(_fccaa)
			_aefde.CharsetAttr = &_ccbce
			continue
		}
	}
	for {
		_gaeeg, _adcfae := d.Token()
		if _adcfae != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _adcfae)
		}
		if _bgffb, _aeabf := _gaeeg.(_b.EndElement); _aeabf && _bgffb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccecbc *CT_TextBulletSizeFollowText) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorMRU and its children, prefixing error messages with path
func (_ffde *CT_ColorMRU) ValidateWithPath(path string) error {
	for _cbdgc, _gfaag := range _ffde.EG_ColorChoice {
		if _bace := _gfaag.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _cbdgc)); _bace != nil {
			return _bace
		}
	}
	return nil
}
func (_gfc *CT_BiLevelEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _bb.Sprintf("\u0025\u0076", _gfc.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aced *CT_AudioCDTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0061c\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _aced.TrackAttr)})
	if _aced.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_aced.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcfe *CT_TextTabStop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcfe.PosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_fcfe.PosAttr)})
	}
	if _fcfe.AlgnAttr != ST_TextTabAlignTypeUnset {
		_aadca, _ecced := _fcfe.AlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ecced != nil {
			return _ecced
		}
		start.Attr = append(start.Attr, _aadca)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbddc ST_ShapeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gafc := _b.Attr{}
	_gafc.Name = name
	switch _gbddc {
	case ST_ShapeTypeUnset:
		_gafc.Value = ""
	case ST_ShapeTypeLine:
		_gafc.Value = "\u006c\u0069\u006e\u0065"
	case ST_ShapeTypeLineInv:
		_gafc.Value = "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case ST_ShapeTypeTriangle:
		_gafc.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRtTriangle:
		_gafc.Value = "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRect:
		_gafc.Value = "\u0072\u0065\u0063\u0074"
	case ST_ShapeTypeDiamond:
		_gafc.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_ShapeTypeParallelogram:
		_gafc.Value = "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case ST_ShapeTypeTrapezoid:
		_gafc.Value = "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case ST_ShapeTypeNonIsoscelesTrapezoid:
		_gafc.Value = "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case ST_ShapeTypePentagon:
		_gafc.Value = "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHexagon:
		_gafc.Value = "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHeptagon:
		_gafc.Value = "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeOctagon:
		_gafc.Value = "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDecagon:
		_gafc.Value = "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDodecagon:
		_gafc.Value = "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case ST_ShapeTypeStar4:
		_gafc.Value = "\u0073\u0074\u0061r\u0034"
	case ST_ShapeTypeStar5:
		_gafc.Value = "\u0073\u0074\u0061r\u0035"
	case ST_ShapeTypeStar6:
		_gafc.Value = "\u0073\u0074\u0061r\u0036"
	case ST_ShapeTypeStar7:
		_gafc.Value = "\u0073\u0074\u0061r\u0037"
	case ST_ShapeTypeStar8:
		_gafc.Value = "\u0073\u0074\u0061r\u0038"
	case ST_ShapeTypeStar10:
		_gafc.Value = "\u0073\u0074\u0061\u0072\u0031\u0030"
	case ST_ShapeTypeStar12:
		_gafc.Value = "\u0073\u0074\u0061\u0072\u0031\u0032"
	case ST_ShapeTypeStar16:
		_gafc.Value = "\u0073\u0074\u0061\u0072\u0031\u0036"
	case ST_ShapeTypeStar24:
		_gafc.Value = "\u0073\u0074\u0061\u0072\u0032\u0034"
	case ST_ShapeTypeStar32:
		_gafc.Value = "\u0073\u0074\u0061\u0072\u0033\u0032"
	case ST_ShapeTypeRoundRect:
		_gafc.Value = "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case ST_ShapeTypeRound1Rect:
		_gafc.Value = "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2SameRect:
		_gafc.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2DiagRect:
		_gafc.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnipRoundRect:
		_gafc.Value = "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip1Rect:
		_gafc.Value = "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case ST_ShapeTypeSnip2SameRect:
		_gafc.Value = "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip2DiagRect:
		_gafc.Value = "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case ST_ShapeTypePlaque:
		_gafc.Value = "\u0070\u006c\u0061\u0071\u0075\u0065"
	case ST_ShapeTypeEllipse:
		_gafc.Value = "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case ST_ShapeTypeTeardrop:
		_gafc.Value = "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case ST_ShapeTypeHomePlate:
		_gafc.Value = "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case ST_ShapeTypeChevron:
		_gafc.Value = "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case ST_ShapeTypePieWedge:
		_gafc.Value = "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case ST_ShapeTypePie:
		_gafc.Value = "\u0070\u0069\u0065"
	case ST_ShapeTypeBlockArc:
		_gafc.Value = "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case ST_ShapeTypeDonut:
		_gafc.Value = "\u0064\u006f\u006eu\u0074"
	case ST_ShapeTypeNoSmoking:
		_gafc.Value = "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case ST_ShapeTypeRightArrow:
		_gafc.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftArrow:
		_gafc.Value = "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUpArrow:
		_gafc.Value = "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeDownArrow:
		_gafc.Value = "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeStripedRightArrow:
		_gafc.Value = "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeNotchedRightArrow:
		_gafc.Value = "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeBentUpArrow:
		_gafc.Value = "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightArrow:
		_gafc.Value = "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeUpDownArrow:
		_gafc.Value = "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftUpArrow:
		_gafc.Value = "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightUpArrow:
		_gafc.Value = "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeQuadArrow:
		_gafc.Value = "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeLeftArrowCallout:
		_gafc.Value = "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeRightArrowCallout:
		_gafc.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpArrowCallout:
		_gafc.Value = "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeDownArrowCallout:
		_gafc.Value = "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeLeftRightArrowCallout:
		_gafc.Value = "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpDownArrowCallout:
		_gafc.Value = "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeQuadArrowCallout:
		_gafc.Value = "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeBentArrow:
		_gafc.Value = "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUturnArrow:
		_gafc.Value = "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCircularArrow:
		_gafc.Value = "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftCircularArrow:
		_gafc.Value = "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightCircularArrow:
		_gafc.Value = "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case ST_ShapeTypeCurvedRightArrow:
		_gafc.Value = "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedLeftArrow:
		_gafc.Value = "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedUpArrow:
		_gafc.Value = "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedDownArrow:
		_gafc.Value = "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeSwooshArrow:
		_gafc.Value = "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCube:
		_gafc.Value = "\u0063\u0075\u0062\u0065"
	case ST_ShapeTypeCan:
		_gafc.Value = "\u0063\u0061\u006e"
	case ST_ShapeTypeLightningBolt:
		_gafc.Value = "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case ST_ShapeTypeHeart:
		_gafc.Value = "\u0068\u0065\u0061r\u0074"
	case ST_ShapeTypeSun:
		_gafc.Value = "\u0073\u0075\u006e"
	case ST_ShapeTypeMoon:
		_gafc.Value = "\u006d\u006f\u006f\u006e"
	case ST_ShapeTypeSmileyFace:
		_gafc.Value = "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case ST_ShapeTypeIrregularSeal1:
		_gafc.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case ST_ShapeTypeIrregularSeal2:
		_gafc.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case ST_ShapeTypeFoldedCorner:
		_gafc.Value = "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeBevel:
		_gafc.Value = "\u0062\u0065\u0076e\u006c"
	case ST_ShapeTypeFrame:
		_gafc.Value = "\u0066\u0072\u0061m\u0065"
	case ST_ShapeTypeHalfFrame:
		_gafc.Value = "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case ST_ShapeTypeCorner:
		_gafc.Value = "\u0063\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeDiagStripe:
		_gafc.Value = "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_ShapeTypeChord:
		_gafc.Value = "\u0063\u0068\u006fr\u0064"
	case ST_ShapeTypeArc:
		_gafc.Value = "\u0061\u0072\u0063"
	case ST_ShapeTypeLeftBracket:
		_gafc.Value = "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeRightBracket:
		_gafc.Value = "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeLeftBrace:
		_gafc.Value = "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case ST_ShapeTypeRightBrace:
		_gafc.Value = "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case ST_ShapeTypeBracketPair:
		_gafc.Value = "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case ST_ShapeTypeBracePair:
		_gafc.Value = "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case ST_ShapeTypeStraightConnector1:
		_gafc.Value = "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case ST_ShapeTypeBentConnector2:
		_gafc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeBentConnector3:
		_gafc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeBentConnector4:
		_gafc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeBentConnector5:
		_gafc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCurvedConnector2:
		_gafc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeCurvedConnector3:
		_gafc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeCurvedConnector4:
		_gafc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeCurvedConnector5:
		_gafc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCallout1:
		_gafc.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeCallout2:
		_gafc.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeCallout3:
		_gafc.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentCallout1:
		_gafc.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeAccentCallout2:
		_gafc.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeAccentCallout3:
		_gafc.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeBorderCallout1:
		_gafc.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeBorderCallout2:
		_gafc.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeBorderCallout3:
		_gafc.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentBorderCallout1:
		_gafc.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case ST_ShapeTypeAccentBorderCallout2:
		_gafc.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case ST_ShapeTypeAccentBorderCallout3:
		_gafc.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case ST_ShapeTypeWedgeRectCallout:
		_gafc.Value = "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeRoundRectCallout:
		_gafc.Value = "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeEllipseCallout:
		_gafc.Value = "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloudCallout:
		_gafc.Value = "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloud:
		_gafc.Value = "\u0063\u006c\u006fu\u0064"
	case ST_ShapeTypeRibbon:
		_gafc.Value = "\u0072\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeRibbon2:
		_gafc.Value = "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeEllipseRibbon:
		_gafc.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeEllipseRibbon2:
		_gafc.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeLeftRightRibbon:
		_gafc.Value = "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeVerticalScroll:
		_gafc.Value = "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeHorizontalScroll:
		_gafc.Value = "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeWave:
		_gafc.Value = "\u0077\u0061\u0076\u0065"
	case ST_ShapeTypeDoubleWave:
		_gafc.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case ST_ShapeTypePlus:
		_gafc.Value = "\u0070\u006c\u0075\u0073"
	case ST_ShapeTypeFlowChartProcess:
		_gafc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartDecision:
		_gafc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartInputOutput:
		_gafc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case ST_ShapeTypeFlowChartPredefinedProcess:
		_gafc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartInternalStorage:
		_gafc.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartDocument:
		_gafc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case ST_ShapeTypeFlowChartMultidocument:
		_gafc.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case ST_ShapeTypeFlowChartTerminator:
		_gafc.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPreparation:
		_gafc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case ST_ShapeTypeFlowChartManualInput:
		_gafc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case ST_ShapeTypeFlowChartManualOperation:
		_gafc.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartConnector:
		_gafc.Value = "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPunchedCard:
		_gafc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case ST_ShapeTypeFlowChartPunchedTape:
		_gafc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case ST_ShapeTypeFlowChartSummingJunction:
		_gafc.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartOr:
		_gafc.Value = "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case ST_ShapeTypeFlowChartCollate:
		_gafc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case ST_ShapeTypeFlowChartSort:
		_gafc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case ST_ShapeTypeFlowChartExtract:
		_gafc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case ST_ShapeTypeFlowChartMerge:
		_gafc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case ST_ShapeTypeFlowChartOfflineStorage:
		_gafc.Value = "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartOnlineStorage:
		_gafc.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case ST_ShapeTypeFlowChartMagneticTape:
		_gafc.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case ST_ShapeTypeFlowChartMagneticDisk:
		_gafc.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case ST_ShapeTypeFlowChartMagneticDrum:
		_gafc.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case ST_ShapeTypeFlowChartDisplay:
		_gafc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartDelay:
		_gafc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartAlternateProcess:
		_gafc.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case ST_ShapeTypeFlowChartOffpageConnector:
		_gafc.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case ST_ShapeTypeActionButtonBlank:
		_gafc.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case ST_ShapeTypeActionButtonHome:
		_gafc.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case ST_ShapeTypeActionButtonHelp:
		_gafc.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case ST_ShapeTypeActionButtonInformation:
		_gafc.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeActionButtonForwardNext:
		_gafc.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case ST_ShapeTypeActionButtonBackPrevious:
		_gafc.Value = "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case ST_ShapeTypeActionButtonEnd:
		_gafc.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case ST_ShapeTypeActionButtonBeginning:
		_gafc.Value = "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case ST_ShapeTypeActionButtonReturn:
		_gafc.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case ST_ShapeTypeActionButtonDocument:
		_gafc.Value = "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case ST_ShapeTypeActionButtonSound:
		_gafc.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case ST_ShapeTypeActionButtonMovie:
		_gafc.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case ST_ShapeTypeGear6:
		_gafc.Value = "\u0067\u0065\u0061r\u0036"
	case ST_ShapeTypeGear9:
		_gafc.Value = "\u0067\u0065\u0061r\u0039"
	case ST_ShapeTypeFunnel:
		_gafc.Value = "\u0066\u0075\u006e\u006e\u0065\u006c"
	case ST_ShapeTypeMathPlus:
		_gafc.Value = "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case ST_ShapeTypeMathMinus:
		_gafc.Value = "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case ST_ShapeTypeMathMultiply:
		_gafc.Value = "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case ST_ShapeTypeMathDivide:
		_gafc.Value = "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case ST_ShapeTypeMathEqual:
		_gafc.Value = "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case ST_ShapeTypeMathNotEqual:
		_gafc.Value = "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ShapeTypeCornerTabs:
		_gafc.Value = "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeSquareTabs:
		_gafc.Value = "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypePlaqueTabs:
		_gafc.Value = "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeChartX:
		_gafc.Value = "\u0063\u0068\u0061\u0072\u0074\u0058"
	case ST_ShapeTypeChartStar:
		_gafc.Value = "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case ST_ShapeTypeChartPlus:
		_gafc.Value = "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return _gafc, nil
}
func (_fedca ST_PresetPatternVal) ValidateWithPath(path string) error {
	switch _fedca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fedca))
	}
	return nil
}

// ValidateWithPath validates the CT_VideoFile and its children, prefixing error messages with path
func (_eddb *CT_VideoFile) ValidateWithPath(path string) error {
	if _eddb.ExtLst != nil {
		if _bfgfbg := _eddb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfgfbg != nil {
			return _bfgfbg
		}
	}
	return nil
}
func (_cabe *CT_HSLEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abegb := range start.Attr {
		if _abegb.Name.Local == "\u0068\u0075\u0065" {
			_fabgdg, _gace := _a.ParseInt(_abegb.Value, 10, 32)
			if _gace != nil {
				return _gace
			}
			_ecaea := int32(_fabgdg)
			_cabe.HueAttr = &_ecaea
			continue
		}
		if _abegb.Name.Local == "\u0073\u0061\u0074" {
			_gdbbc, _fddad := ParseUnionST_FixedPercentage(_abegb.Value)
			if _fddad != nil {
				return _fddad
			}
			_cabe.SatAttr = &_gdbbc
			continue
		}
		if _abegb.Name.Local == "\u006c\u0075\u006d" {
			_gbdfb, _agge := ParseUnionST_FixedPercentage(_abegb.Value)
			if _agge != nil {
				return _agge
			}
			_cabe.LumAttr = &_gbdfb
			continue
		}
	}
	for {
		_cffgf, _dbdb := d.Token()
		if _dbdb != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0053L\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _dbdb)
		}
		if _gcbfc, _ceaba := _cffgf.(_b.EndElement); _ceaba && _gcbfc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdgcf *CT_TileInfoProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdgcf.TxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_cdgcf.TxAttr)})
	}
	if _cdgcf.TyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_cdgcf.TyAttr)})
	}
	if _cdgcf.SxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_cdgcf.SxAttr)})
	}
	if _cdgcf.SyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_cdgcf.SyAttr)})
	}
	if _cdgcf.FlipAttr != ST_TileFlipModeUnset {
		_gfgee, _gfddf := _cdgcf.FlipAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _gfddf != nil {
			return _gfddf
		}
		start.Attr = append(start.Attr, _gfgee)
	}
	if _cdgcf.AlgnAttr != ST_RectAlignmentUnset {
		_efeec, _eadgg := _cdgcf.AlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _eadgg != nil {
			return _eadgg
		}
		start.Attr = append(start.Attr, _efeec)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_CustomGeometry2D() *CT_CustomGeometry2D {
	_cdg := &CT_CustomGeometry2D{}
	_cdg.PathLst = NewCT_Path2DList()
	return _cdg
}
func NewCT_SoftEdgesEffect() *CT_SoftEdgesEffect {
	_ebeaf := &CT_SoftEdgesEffect{}
	_ebeaf.RadAttr = 0
	return _ebeaf
}
func (_afccce *CT_Scale2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afccce.Sx = NewCT_Ratio()
	_afccce.Sy = NewCT_Ratio()
_gcgb:
	for {
		_adffb, _cdgc := d.Token()
		if _cdgc != nil {
			return _cdgc
		}
		switch _ebga := _adffb.(type) {
		case _b.StartElement:
			switch _ebga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}:
				if _gcaad := d.DecodeElement(_afccce.Sx, &_ebga); _gcaad != nil {
					return _gcaad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}:
				if _ggfdf := d.DecodeElement(_afccce.Sy, &_ebga); _ggfdf != nil {
					return _ggfdf
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0061\u006c\u0065\u0032\u0044\u0020\u0025\u0076", _ebga.Name)
				if _gdegc := d.Skip(); _gdegc != nil {
					return _gdegc
				}
			}
		case _b.EndElement:
			break _gcgb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_SchemeColorValUnset    ST_SchemeColorVal = 0
	ST_SchemeColorValBg1      ST_SchemeColorVal = 1
	ST_SchemeColorValTx1      ST_SchemeColorVal = 2
	ST_SchemeColorValBg2      ST_SchemeColorVal = 3
	ST_SchemeColorValTx2      ST_SchemeColorVal = 4
	ST_SchemeColorValAccent1  ST_SchemeColorVal = 5
	ST_SchemeColorValAccent2  ST_SchemeColorVal = 6
	ST_SchemeColorValAccent3  ST_SchemeColorVal = 7
	ST_SchemeColorValAccent4  ST_SchemeColorVal = 8
	ST_SchemeColorValAccent5  ST_SchemeColorVal = 9
	ST_SchemeColorValAccent6  ST_SchemeColorVal = 10
	ST_SchemeColorValHlink    ST_SchemeColorVal = 11
	ST_SchemeColorValFolHlink ST_SchemeColorVal = 12
	ST_SchemeColorValPhClr    ST_SchemeColorVal = 13
	ST_SchemeColorValDk1      ST_SchemeColorVal = 14
	ST_SchemeColorValLt1      ST_SchemeColorVal = 15
	ST_SchemeColorValDk2      ST_SchemeColorVal = 16
	ST_SchemeColorValLt2      ST_SchemeColorVal = 17
)

// Validate validates the CT_TextCharBullet and its children
func (_dfege *CT_TextCharBullet) Validate() error {
	return _dfege.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074")
}
func (_dcgee *EG_ThemeableFontStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bbegc:
	for {
		_acgcd, _bfaeeb := d.Token()
		if _bfaeeb != nil {
			return _bfaeeb
		}
		switch _eacaa := _acgcd.(type) {
		case _b.StartElement:
			switch _eacaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_dcgee.Font = NewCT_FontCollection()
				if _eabcb := d.DecodeElement(_dcgee.Font, &_eacaa); _eabcb != nil {
					return _eabcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_dcgee.FontRef = NewCT_FontReference()
				if _ceccb := d.DecodeElement(_dcgee.FontRef, &_eacaa); _ceccb != nil {
					return _ceccb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u0054\u0068\u0065\u006de\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006c\u0065\u0073\u0020\u0025\u0076", _eacaa.Name)
				if _dabfe := d.Skip(); _dabfe != nil {
					return _dabfe
				}
			}
		case _b.EndElement:
			break _bbegc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_InnerShadowEffect and its children, prefixing error messages with path
func (_dbcfa *CT_InnerShadowEffect) ValidateWithPath(path string) error {
	if _dbcfa.BlurRadAttr != nil {
		if *_dbcfa.BlurRadAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dbcfa.BlurRadAttr)
		}
		if *_dbcfa.BlurRadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dbcfa.BlurRadAttr)
		}
	}
	if _dbcfa.DistAttr != nil {
		if *_dbcfa.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dbcfa.DistAttr)
		}
		if *_dbcfa.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_dbcfa.DistAttr)
		}
	}
	if _dbcfa.DirAttr != nil {
		if *_dbcfa.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dbcfa.DirAttr)
		}
		if *_dbcfa.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dbcfa.DirAttr)
		}
	}
	if _dbcfa.ScrgbClr != nil {
		if _cgeb := _dbcfa.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cgeb != nil {
			return _cgeb
		}
	}
	if _dbcfa.SrgbClr != nil {
		if _egbbf := _dbcfa.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _egbbf != nil {
			return _egbbf
		}
	}
	if _dbcfa.HslClr != nil {
		if _ggda := _dbcfa.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ggda != nil {
			return _ggda
		}
	}
	if _dbcfa.SysClr != nil {
		if _bega := _dbcfa.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _bega != nil {
			return _bega
		}
	}
	if _dbcfa.SchemeClr != nil {
		if _fgae := _dbcfa.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fgae != nil {
			return _fgae
		}
	}
	if _dbcfa.PrstClr != nil {
		if _gdfa := _dbcfa.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gdfa != nil {
			return _gdfa
		}
	}
	return nil
}

// Validate validates the CT_SolidColorFillProperties and its children
func (_bfdbe *CT_SolidColorFillProperties) Validate() error {
	return _bfdbe.ValidateWithPath("C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

type CT_BlipFillProperties struct {
	DpiAttr          *uint32
	RotWithShapeAttr *bool
	Blip             *CT_Blip
	SrcRect          *CT_RelativeRect
	Tile             *CT_TileInfoProperties
	Stretch          *CT_StretchInfoProperties
}

func (_gddda *ST_ChartBuildStep) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eebdc, _gafbe := d.Token()
	if _gafbe != nil {
		return _gafbe
	}
	if _bbffge, _ffeff := _eebdc.(_b.EndElement); _ffeff && _bbffge.Name == start.Name {
		*_gddda = 1
		return nil
	}
	if _afgfa, _gbda := _eebdc.(_b.CharData); !_gbda {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eebdc)
	} else {
		switch string(_afgfa) {
		case "":
			*_gddda = 0
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gddda = 1
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gddda = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_gddda = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_gddda = 4
		case "\u0061\u006c\u006c\u0050\u0074\u0073":
			*_gddda = 5
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_gddda = 6
		}
	}
	_eebdc, _gafbe = d.Token()
	if _gafbe != nil {
		return _gafbe
	}
	if _ggafd, _dfgfc := _eebdc.(_b.EndElement); _dfgfc && _ggafd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eebdc)
}
func (_gebbg ST_AnimationChartOnlyBuildType) String() string {
	switch _gebbg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 2:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 4:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

type CT_AlphaModulateEffect struct{ Cont *CT_EffectContainer }

func NewCT_BlendEffect() *CT_BlendEffect {
	_gefg := &CT_BlendEffect{}
	_gefg.BlendAttr = ST_BlendMode(1)
	_gefg.Cont = NewCT_EffectContainer()
	return _gefg
}
func (_ecee *CT_EffectList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ecee.Blur != nil {
		_fefdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_ecee.Blur, _fefdb)
	}
	if _ecee.FillOverlay != nil {
		_bgca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_ecee.FillOverlay, _bgca)
	}
	if _ecee.Glow != nil {
		_fdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_ecee.Glow, _fdf)
	}
	if _ecee.InnerShdw != nil {
		_eggf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ecee.InnerShdw, _eggf)
	}
	if _ecee.OuterShdw != nil {
		_dggdc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ecee.OuterShdw, _dggdc)
	}
	if _ecee.PrstShdw != nil {
		_cacff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ecee.PrstShdw, _cacff)
	}
	if _ecee.Reflection != nil {
		_fefe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ecee.Reflection, _fefe)
	}
	if _ecee.SoftEdge != nil {
		_gfga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_ecee.SoftEdge, _gfga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Backdrop and its children
func (_aag *CT_Backdrop) Validate() error {
	return _aag.ValidateWithPath("C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070")
}
func (_abbfe *CT_PathShadeProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeacd := range start.Attr {
		if _aeacd.Name.Local == "\u0070\u0061\u0074\u0068" {
			_abbfe.PathAttr.UnmarshalXMLAttr(_aeacd)
			continue
		}
	}
_agagf:
	for {
		_acad, _cbcfd := d.Token()
		if _cbcfd != nil {
			return _cbcfd
		}
		switch _ebdfd := _acad.(type) {
		case _b.StartElement:
			switch _ebdfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}:
				_abbfe.FillToRect = NewCT_RelativeRect()
				if _ceeeg := d.DecodeElement(_abbfe.FillToRect, &_ebdfd); _ceeeg != nil {
					return _ceeeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u0068S\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ebdfd.Name)
				if _egefb := d.Skip(); _egefb != nil {
					return _egefb
				}
			}
		case _b.EndElement:
			break _agagf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BlipChoice and its children
func (_gddd *CT_BlipChoice) Validate() error {
	return _gddd.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_TextSpacingPoint struct{ ValAttr int32 }
type CT_GvmlPicture struct {
	NvPicPr  *CT_GvmlPictureNonVisual
	BlipFill *CT_BlipFillProperties
	SpPr     *CT_ShapeProperties
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_aegaf ST_LineEndWidth) Validate() error { return _aegaf.ValidateWithPath("") }
func (_gdd *CT_AlphaOutsetEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cedd := range start.Attr {
		if _cedd.Name.Local == "\u0072\u0061\u0064" {
			_bdeg, _gdg := ParseUnionST_Coordinate(_cedd.Value)
			if _gdg != nil {
				return _gdg
			}
			_gdd.RadAttr = &_bdeg
			continue
		}
	}
	for {
		_dgd, _aaa := d.Token()
		if _aaa != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068a\u004fu\u0074\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _aaa)
		}
		if _gbd, _ceb := _dgd.(_b.EndElement); _ceb && _gbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbdf *CT_Camera) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_aacgc, _fdcca := _cbdf.PrstAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _fdcca != nil {
		return _fdcca
	}
	start.Attr = append(start.Attr, _aacgc)
	if _cbdf.FovAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0076"}, Value: _bb.Sprintf("\u0025\u0076", *_cbdf.FovAttr)})
	}
	if _cbdf.ZoomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u006f\u006f\u006d"}, Value: _bb.Sprintf("\u0025\u0076", *_cbdf.ZoomAttr)})
	}
	e.EncodeToken(start)
	if _cbdf.Rot != nil {
		_gacc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_cbdf.Rot, _gacc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_daed *CT_TableCellProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caeb := range start.Attr {
		if _caeb.Name.Local == "\u006d\u0061\u0072\u0052" {
			_dfbgg, _eedbc := ParseUnionST_Coordinate32(_caeb.Value)
			if _eedbc != nil {
				return _eedbc
			}
			_daed.MarRAttr = &_dfbgg
			continue
		}
		if _caeb.Name.Local == "\u006d\u0061\u0072\u0042" {
			_dedgfa, _cbfdce := ParseUnionST_Coordinate32(_caeb.Value)
			if _cbfdce != nil {
				return _cbfdce
			}
			_daed.MarBAttr = &_dedgfa
			continue
		}
		if _caeb.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_daed.AnchorAttr.UnmarshalXMLAttr(_caeb)
			continue
		}
		if _caeb.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_daed.HorzOverflowAttr.UnmarshalXMLAttr(_caeb)
			continue
		}
		if _caeb.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_eggcb, _cgcad := _a.ParseBool(_caeb.Value)
			if _cgcad != nil {
				return _cgcad
			}
			_daed.AnchorCtrAttr = &_eggcb
			continue
		}
		if _caeb.Name.Local == "\u0076\u0065\u0072\u0074" {
			_daed.VertAttr.UnmarshalXMLAttr(_caeb)
			continue
		}
		if _caeb.Name.Local == "\u006d\u0061\u0072\u004c" {
			_fcge, _cdgcc := ParseUnionST_Coordinate32(_caeb.Value)
			if _cdgcc != nil {
				return _cdgcc
			}
			_daed.MarLAttr = &_fcge
			continue
		}
		if _caeb.Name.Local == "\u006d\u0061\u0072\u0054" {
			_gebd, _dccfa := ParseUnionST_Coordinate32(_caeb.Value)
			if _dccfa != nil {
				return _dccfa
			}
			_daed.MarTAttr = &_gebd
			continue
		}
	}
_bdgga:
	for {
		_ggbaa, _ageec := d.Token()
		if _ageec != nil {
			return _ageec
		}
		switch _cdfdg := _ggbaa.(type) {
		case _b.StartElement:
			switch _cdfdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}:
				_daed.LnL = NewCT_LineProperties()
				if _abged := d.DecodeElement(_daed.LnL, &_cdfdg); _abged != nil {
					return _abged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}:
				_daed.LnR = NewCT_LineProperties()
				if _cfgdc := d.DecodeElement(_daed.LnR, &_cdfdg); _cfgdc != nil {
					return _cfgdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}:
				_daed.LnT = NewCT_LineProperties()
				if _fffb := d.DecodeElement(_daed.LnT, &_cdfdg); _fffb != nil {
					return _fffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}:
				_daed.LnB = NewCT_LineProperties()
				if _cebdd := d.DecodeElement(_daed.LnB, &_cdfdg); _cebdd != nil {
					return _cebdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}:
				_daed.LnTlToBr = NewCT_LineProperties()
				if _bedbc := d.DecodeElement(_daed.LnTlToBr, &_cdfdg); _bedbc != nil {
					return _bedbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}:
				_daed.LnBlToTr = NewCT_LineProperties()
				if _caged := d.DecodeElement(_daed.LnBlToTr, &_cdfdg); _caged != nil {
					return _caged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_daed.Cell3D = NewCT_Cell3D()
				if _aadad := d.DecodeElement(_daed.Cell3D, &_cdfdg); _aadad != nil {
					return _aadad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_daed.NoFill = NewCT_NoFillProperties()
				if _gggad := d.DecodeElement(_daed.NoFill, &_cdfdg); _gggad != nil {
					return _gggad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_daed.SolidFill = NewCT_SolidColorFillProperties()
				if _egdc := d.DecodeElement(_daed.SolidFill, &_cdfdg); _egdc != nil {
					return _egdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_daed.GradFill = NewCT_GradientFillProperties()
				if _dfeba := d.DecodeElement(_daed.GradFill, &_cdfdg); _dfeba != nil {
					return _dfeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_daed.BlipFill = NewCT_BlipFillProperties()
				if _fdaeg := d.DecodeElement(_daed.BlipFill, &_cdfdg); _fdaeg != nil {
					return _fdaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_daed.PattFill = NewCT_PatternFillProperties()
				if _ddbcg := d.DecodeElement(_daed.PattFill, &_cdfdg); _ddbcg != nil {
					return _ddbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_daed.GrpFill = NewCT_GroupFillProperties()
				if _ageaeg := d.DecodeElement(_daed.GrpFill, &_cdfdg); _ageaeg != nil {
					return _ageaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}:
				_daed.Headers = NewCT_Headers()
				if _bdaae := d.DecodeElement(_daed.Headers, &_cdfdg); _bdaae != nil {
					return _bdaae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daed.ExtLst = NewCT_OfficeArtExtensionList()
				if _agbae := d.DecodeElement(_daed.ExtLst, &_cdfdg); _agbae != nil {
					return _agbae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cdfdg.Name)
				if _bfeee := d.Skip(); _bfeee != nil {
					return _bfeee
				}
			}
		case _b.EndElement:
			break _bdgga
		case _b.CharData:
		}
	}
	return nil
}
func (_gbdge ST_AnimationDgmOnlyBuildType) Validate() error { return _gbdge.ValidateWithPath("") }
func (_gaaf *CT_GvmlGroupShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dbcfd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gaaf.CNvPr, _dbcfd)
	_cecf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gaaf.CNvGrpSpPr, _cecf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineFillGroupWrapper and its children, prefixing error messages with path
func (_fgfadb *CT_TextUnderlineFillGroupWrapper) ValidateWithPath(path string) error {
	if _fgfadb.NoFill != nil {
		if _eebef := _fgfadb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _eebef != nil {
			return _eebef
		}
	}
	if _fgfadb.SolidFill != nil {
		if _ebaff := _fgfadb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ebaff != nil {
			return _ebaff
		}
	}
	if _fgfadb.GradFill != nil {
		if _cbfec := _fgfadb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cbfec != nil {
			return _cbfec
		}
	}
	if _fgfadb.BlipFill != nil {
		if _ceeea := _fgfadb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ceeea != nil {
			return _ceeea
		}
	}
	if _fgfadb.PattFill != nil {
		if _gcfda := _fgfadb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gcfda != nil {
			return _gcfda
		}
	}
	if _fgfadb.GrpFill != nil {
		if _cdegd := _fgfadb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cdegd != nil {
			return _cdegd
		}
	}
	return nil
}
func (_fgcea ST_EffectContainerType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgcea.String(), start)
}
func (_geada *CT_Scale2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cdgba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0078"}}
	e.EncodeElement(_geada.Sx, _cdgba)
	_fgfcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079"}}
	e.EncodeElement(_geada.Sy, _fgfcb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupTransform2D and its children, prefixing error messages with path
func (_bcgeg *CT_GroupTransform2D) ValidateWithPath(path string) error {
	if _bcgeg.Off != nil {
		if _babcgb := _bcgeg.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _babcgb != nil {
			return _babcgb
		}
	}
	if _bcgeg.Ext != nil {
		if _ceedae := _bcgeg.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _ceedae != nil {
			return _ceedae
		}
	}
	if _bcgeg.ChOff != nil {
		if _fcfc := _bcgeg.ChOff.ValidateWithPath(path + "\u002f\u0043\u0068\u004f\u0066\u0066"); _fcfc != nil {
			return _fcfc
		}
	}
	if _bcgeg.ChExt != nil {
		if _aaega := _bcgeg.ChExt.ValidateWithPath(path + "\u002f\u0043\u0068\u0045\u0078\u0074"); _aaega != nil {
			return _aaega
		}
	}
	return nil
}

type CT_Cell3D struct {
	PrstMaterialAttr ST_PresetMaterialType
	Bevel            *CT_Bevel
	LightRig         *CT_LightRig
	ExtLst           *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_ccgag *CT_TextField) ValidateWithPath(path string) error {
	if !_eb.ST_GuidPatternRe.MatchString(_ccgag.IdAttr) {
		return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eb.ST_GuidPatternRe, _ccgag.IdAttr)
	}
	if _ccgag.RPr != nil {
		if _dagbbf := _ccgag.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _dagbbf != nil {
			return _dagbbf
		}
	}
	if _ccgag.PPr != nil {
		if _fcggc := _ccgag.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _fcggc != nil {
			return _fcggc
		}
	}
	return nil
}
func (_fccca ST_SchemeColorVal) Validate() error { return _fccca.ValidateWithPath("") }
func NewCT_CustomColor() *CT_CustomColor         { _bfeb := &CT_CustomColor{}; return _bfeb }
func (_ecdg *CT_CustomColorList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdac:
	for {
		_gcfe, _bcbfg := d.Token()
		if _bcbfg != nil {
			return _bcbfg
		}
		switch _gccae := _gcfe.(type) {
		case _b.StartElement:
			switch _gccae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}:
				_eddca := NewCT_CustomColor()
				if _edea := d.DecodeElement(_eddca, &_gccae); _edea != nil {
					return _edea
				}
				_ecdg.CustClr = append(_ecdg.CustClr, _eddca)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gccae.Name)
				if _dgdd := d.Skip(); _dgdd != nil {
					return _dgdd
				}
			}
		case _b.EndElement:
			break _gdac
		case _b.CharData:
		}
	}
	return nil
}
func (_dcdcg ST_BlackWhiteMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_afef := _b.Attr{}
	_afef.Name = name
	switch _dcdcg {
	case ST_BlackWhiteModeUnset:
		_afef.Value = ""
	case ST_BlackWhiteModeClr:
		_afef.Value = "\u0063\u006c\u0072"
	case ST_BlackWhiteModeAuto:
		_afef.Value = "\u0061\u0075\u0074\u006f"
	case ST_BlackWhiteModeGray:
		_afef.Value = "\u0067\u0072\u0061\u0079"
	case ST_BlackWhiteModeLtGray:
		_afef.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeInvGray:
		_afef.Value = "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeGrayWhite:
		_afef.Value = "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case ST_BlackWhiteModeBlackGray:
		_afef.Value = "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case ST_BlackWhiteModeBlackWhite:
		_afef.Value = "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case ST_BlackWhiteModeBlack:
		_afef.Value = "\u0062\u006c\u0061c\u006b"
	case ST_BlackWhiteModeWhite:
		_afef.Value = "\u0077\u0068\u0069t\u0065"
	case ST_BlackWhiteModeHidden:
		_afef.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return _afef, nil
}
func (_cfb *CT_Backdrop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_beea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_cfb.Anchor, _beea)
	_fce := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d"}}
	e.EncodeElement(_cfb.Norm, _fce)
	_dfd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0075\u0070"}}
	e.EncodeElement(_cfb.Up, _dfd)
	if _cfb.ExtLst != nil {
		_efde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfb.ExtLst, _efde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PathShadeTypeUnset  ST_PathShadeType = 0
	ST_PathShadeTypeShape  ST_PathShadeType = 1
	ST_PathShadeTypeCircle ST_PathShadeType = 2
	ST_PathShadeTypeRect   ST_PathShadeType = 3
)

func (_gcfef ST_CompoundLine) Validate() error { return _gcfef.ValidateWithPath("") }
func NewEG_TextRun() *EG_TextRun               { _ecggea := &EG_TextRun{}; return _ecggea }
func (_cfada *ST_BevelPresetType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_faabg, _abbcdd := d.Token()
	if _abbcdd != nil {
		return _abbcdd
	}
	if _gcgbb, _fecad := _faabg.(_b.EndElement); _fecad && _gcgbb.Name == start.Name {
		*_cfada = 1
		return nil
	}
	if _fgeac, _ggfeb := _faabg.(_b.CharData); !_ggfeb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _faabg)
	} else {
		switch string(_fgeac) {
		case "":
			*_cfada = 0
		case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
			*_cfada = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_cfada = 2
		case "\u0073\u006c\u006fp\u0065":
			*_cfada = 3
		case "\u0063\u0072\u006fs\u0073":
			*_cfada = 4
		case "\u0061\u006e\u0067l\u0065":
			*_cfada = 5
		case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
			*_cfada = 6
		case "\u0063\u006f\u006e\u0076\u0065\u0078":
			*_cfada = 7
		case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
			*_cfada = 8
		case "\u0064\u0069\u0076o\u0074":
			*_cfada = 9
		case "\u0072\u0069\u0062\u006c\u0065\u0074":
			*_cfada = 10
		case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
			*_cfada = 11
		case "\u0061r\u0074\u0044\u0065\u0063\u006f":
			*_cfada = 12
		}
	}
	_faabg, _abbcdd = d.Token()
	if _abbcdd != nil {
		return _abbcdd
	}
	if _daagbf, _fefbef := _faabg.(_b.EndElement); _fefbef && _daagbf.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _faabg)
}
func (_dcgcf ST_LineCap) ValidateWithPath(path string) error {
	switch _dcgcf {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcgcf))
	}
	return nil
}
func (_gfgbf ST_BevelPresetType) String() string {
	switch _gfgbf {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0073\u006c\u006fp\u0065"
	case 4:
		return "\u0063\u0072\u006fs\u0073"
	case 5:
		return "\u0061\u006e\u0067l\u0065"
	case 6:
		return "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case 7:
		return "\u0063\u006f\u006e\u0076\u0065\u0078"
	case 8:
		return "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case 9:
		return "\u0064\u0069\u0076o\u0074"
	case 10:
		return "\u0072\u0069\u0062\u006c\u0065\u0074"
	case 11:
		return "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return ""
}

type EG_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_eagcb ST_AnimationChartOnlyBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eagcb.String(), start)
}
func (_daaea *CT_EffectReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eegf := range start.Attr {
		if _eegf.Name.Local == "\u0072\u0065\u0066" {
			_abbc, _dbab := _eegf.Value, error(nil)
			if _dbab != nil {
				return _dbab
			}
			_daaea.RefAttr = _abbc
			continue
		}
	}
	for {
		_feeg, _egbf := d.Token()
		if _egbf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0045\u0066\u0066\u0065\u0063\u0074\u0052e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _egbf)
		}
		if _gbad, _adfe := _feeg.(_b.EndElement); _adfe && _gbad.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_XYAdjustHandle and its children
func (_bgbac *CT_XYAdjustHandle) Validate() error {
	return _bgbac.ValidateWithPath("\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065")
}

// Validate validates the CT_TextFont and its children
func (_dfccf *CT_TextFont) Validate() error {
	return _dfccf.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074")
}

type CT_QuickTimeFile struct {
	LinkAttr string
	ExtLst   *CT_OfficeArtExtensionList
}

func (_ggbcd *CT_StretchInfoProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dceca:
	for {
		_efcae, _ccdba := d.Token()
		if _ccdba != nil {
			return _ccdba
		}
		switch _ebad := _efcae.(type) {
		case _b.StartElement:
			switch _ebad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}:
				_ggbcd.FillRect = NewCT_RelativeRect()
				if _ffdae := d.DecodeElement(_ggbcd.FillRect, &_ebad); _ffdae != nil {
					return _ffdae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066\u006f\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _ebad.Name)
				if _agede := d.Skip(); _agede != nil {
					return _agede
				}
			}
		case _b.EndElement:
			break _dceca
		case _b.CharData:
		}
	}
	return nil
}
func (_agedf *CT_GammaTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GraphicalObjectFrameLocking struct {
	NoGrpAttr          *bool
	NoDrilldownAttr    *bool
	NoSelectAttr       *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func (_cceee *ST_EffectContainerType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cceee = 0
	case "\u0073\u0069\u0062":
		*_cceee = 1
	case "\u0074\u0072\u0065\u0065":
		*_cceee = 2
	}
	return nil
}
func (_deaef ST_FontCollectionIndex) String() string {
	switch _deaef {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006ao\u0072"
	case 2:
		return "\u006d\u0069\u006eo\u0072"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_gcdc *ST_AnimationDgmOnlyBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfecb, _facce := d.Token()
	if _facce != nil {
		return _facce
	}
	if _facba, _ebadf := _dfecb.(_b.EndElement); _ebadf && _facba.Name == start.Name {
		*_gcdc = 1
		return nil
	}
	if _cbbgd, _gdgfe := _dfecb.(_b.CharData); !_gdgfe {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfecb)
	} else {
		switch string(_cbbgd) {
		case "":
			*_gcdc = 0
		case "\u006f\u006e\u0065":
			*_gcdc = 1
		case "\u006c\u0076\u006c\u004f\u006e\u0065":
			*_gcdc = 2
		case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_gcdc = 3
		}
	}
	_dfecb, _facce = d.Token()
	if _facce != nil {
		return _facce
	}
	if _fbbcc, _bggga := _dfecb.(_b.EndElement); _bggga && _fbbcc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfecb)
}

type CT_FontCollection struct {
	Latin  *CT_TextFont
	Ea     *CT_TextFont
	Cs     *CT_TextFont
	Font   []*CT_SupplementalFont
	ExtLst *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_EffectStyleList and its children, prefixing error messages with path
func (_fbfgc *CT_EffectStyleList) ValidateWithPath(path string) error {
	for _dbabf, _eebd := range _fbfgc.EffectStyle {
		if _gcadg := _eebd.ValidateWithPath(_bb.Sprintf("\u0025s\u002fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u005b\u0025\u0064\u005d", path, _dbabf)); _gcadg != nil {
			return _gcadg
		}
	}
	return nil
}

type CT_LineProperties struct {
	WAttr     *int32
	CapAttr   ST_LineCap
	CmpdAttr  ST_CompoundLine
	AlgnAttr  ST_PenAlignment
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
	PrstDash  *CT_PresetLineDashProperties
	CustDash  *CT_DashStopList
	Round     *CT_LineJoinRound
	Bevel     *CT_LineJoinBevel
	Miter     *CT_LineJoinMiterProperties
	HeadEnd   *CT_LineEndProperties
	TailEnd   *CT_LineEndProperties
	ExtLst    *CT_OfficeArtExtensionList
}

// Validate validates the CT_FillOverlayEffect and its children
func (_deeef *CT_FillOverlayEffect) Validate() error {
	return _deeef.ValidateWithPath("C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074")
}

// Validate validates the CT_NonVisualConnectorProperties and its children
func (_afad *CT_NonVisualConnectorProperties) Validate() error {
	return _afad.ValidateWithPath("\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_TableCell struct {
	RowSpanAttr  *int32
	GridSpanAttr *int32
	HMergeAttr   *bool
	VMergeAttr   *bool
	IdAttr       *string
	TxBody       *CT_TextBody
	TcPr         *CT_TableCellProperties
	ExtLst       *CT_OfficeArtExtensionList
}

func (_bbdbb *CT_InverseTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_afgdf, _egabd := d.Token()
		if _egabd != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0049\u006e\u0076\u0065\u0072s\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _egabd)
		}
		if _faga, _gbgd := _afgdf.(_b.EndElement); _gbgd && _faga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgfd *CT_Boolean) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffbdc := range start.Attr {
		if _ffbdc.Name.Local == "\u0076\u0061\u006c" {
			_gccf, _cgce := ParseUnionST_OnOff(_ffbdc.Value)
			if _cgce != nil {
				return _cgce
			}
			_fgfd.ValAttr = &_gccf
			continue
		}
	}
	for {
		_gfffg, _gaff := d.Token()
		if _gaff != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e\u003a\u0020%\u0073", _gaff)
		}
		if _bcbf, _aba := _gfffg.(_b.EndElement); _aba && _bcbf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GradientStopList struct{ Gs []*CT_GradientStop }

// Validate validates the CT_StyleMatrixReference and its children
func (_cdad *CT_StyleMatrixReference) Validate() error {
	return _cdad.ValidateWithPath("\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}
func (_afgbac *ST_AdjAngle) ValidateWithPath(path string) error {
	_adfcc := []string{}
	if _afgbac.ST_Angle != nil {
		_adfcc = append(_adfcc, "\u0053\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
	}
	if _afgbac.ST_GeomGuideName != nil {
		_adfcc = append(_adfcc, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_adfcc) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _adfcc)
	}
	return nil
}

// ValidateWithPath validates the CT_DefaultShapeDefinition and its children, prefixing error messages with path
func (_bbdb *CT_DefaultShapeDefinition) ValidateWithPath(path string) error {
	if _dbbdg := _bbdb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dbbdg != nil {
		return _dbbdg
	}
	if _daeb := _bbdb.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _daeb != nil {
		return _daeb
	}
	if _aebf := _bbdb.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _aebf != nil {
		return _aebf
	}
	if _bbdb.Style != nil {
		if _eeccc := _bbdb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _eeccc != nil {
			return _eeccc
		}
	}
	if _bbdb.ExtLst != nil {
		if _gagc := _bbdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gagc != nil {
			return _gagc
		}
	}
	return nil
}
func (_dgfcb *CT_NonVisualContentPartProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egec := range start.Attr {
		if _egec.Name.Local == "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et" {
			_eabcc, _eece := _a.ParseBool(_egec.Value)
			if _eece != nil {
				return _eece
			}
			_dgfcb.IsCommentAttr = &_eabcc
			continue
		}
	}
_gebgc:
	for {
		_cdcff, _beag := d.Token()
		if _beag != nil {
			return _beag
		}
		switch _acfc := _cdcff.(type) {
		case _b.StartElement:
			switch _acfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}:
				_dgfcb.CpLocks = NewCT_ContentPartLocking()
				if _cfbc := d.DecodeElement(_dgfcb.CpLocks, &_acfc); _cfbc != nil {
					return _cfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgfcb.ExtLst = NewCT_OfficeArtExtensionList()
				if _bafcf := d.DecodeElement(_dgfcb.ExtLst, &_acfc); _bafcf != nil {
					return _bafcf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u0050\u0072o\u0070\u0065\u0072t\u0069\u0065\u0073\u0020\u0025\u0076", _acfc.Name)
				if _befe := d.Skip(); _befe != nil {
					return _befe
				}
			}
		case _b.EndElement:
			break _gebgc
		case _b.CharData:
		}
	}
	return nil
}
func (_fefg *CT_ColorMappingOverride) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fefg.Choice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_babcb *CT_BlurEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _babcb.RadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_babcb.RadAttr)})
	}
	if _babcb.GrowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_babcb.GrowAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccfde *CT_GraphicalObjectData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _begfe := range start.Attr {
		if _begfe.Name.Local == "\u0075\u0072\u0069" {
			_ageee, _cfgcg := _begfe.Value, error(nil)
			if _cfgcg != nil {
				return _cfgcg
			}
			_ccfde.UriAttr = _ageee
			continue
		}
	}
_egab:
	for {
		_ecbcd, _bged := d.Token()
		if _bged != nil {
			return _bged
		}
		switch _ccgedf := _ecbcd.(type) {
		case _b.StartElement:
			switch _ccgedf.Name {
			default:
				if _bfedfb, _fbcbg := _f.CreateElement(_ccgedf); _fbcbg != nil {
					return _fbcbg
				} else {
					if _bfdcd := d.DecodeElement(_bfedfb, &_ccgedf); _bfdcd != nil {
						return _bfdcd
					}
					_ccfde.Any = append(_ccfde.Any, _bfedfb)
				}
			}
		case _b.EndElement:
			break _egab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorMappingOverrideChoice and its children, prefixing error messages with path
func (_bbae *CT_ColorMappingOverrideChoice) ValidateWithPath(path string) error {
	if _bbae.MasterClrMapping != nil {
		if _afda := _bbae.MasterClrMapping.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0043\u006c\u0072\u004d\u0061p\u0070\u0069\u006e\u0067"); _afda != nil {
			return _afda
		}
	}
	if _bbae.OverrideClrMapping != nil {
		if _egbd := _bbae.OverrideClrMapping.ValidateWithPath(path + "\u002f\u004f\u0076\u0065rr\u0069\u0064\u0065\u0043\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"); _egbd != nil {
			return _egbd
		}
	}
	return nil
}
func NewCT_BackgroundFillStyleList() *CT_BackgroundFillStyleList {
	_eef := &CT_BackgroundFillStyleList{}
	return _eef
}

// Validate validates the CT_FontScheme and its children
func (_abdc *CT_FontScheme) Validate() error {
	return _abdc.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}
func (_afac *CT_ObjectStyleDefaults) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ddgcf:
	for {
		_edeg, _eebbg := d.Token()
		if _eebbg != nil {
			return _eebbg
		}
		switch _cfeb := _edeg.(type) {
		case _b.StartElement:
			switch _cfeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}:
				_afac.SpDef = NewCT_DefaultShapeDefinition()
				if _gcgef := d.DecodeElement(_afac.SpDef, &_cfeb); _gcgef != nil {
					return _gcgef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}:
				_afac.LnDef = NewCT_DefaultShapeDefinition()
				if _cgdgc := d.DecodeElement(_afac.LnDef, &_cfeb); _cgdgc != nil {
					return _cgdgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}:
				_afac.TxDef = NewCT_DefaultShapeDefinition()
				if _bedbb := d.DecodeElement(_afac.TxDef, &_cfeb); _bedbb != nil {
					return _bedbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afac.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbdeb := d.DecodeElement(_afac.ExtLst, &_cfeb); _fbdeb != nil {
					return _fbdeb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004f\u0062\u006a\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073\u0020\u0025\u0076", _cfeb.Name)
				if _agfc := d.Skip(); _agfc != nil {
					return _agfc
				}
			}
		case _b.EndElement:
			break _ddgcf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RelativeOffsetEffect and its children, prefixing error messages with path
func (_gecag *CT_RelativeOffsetEffect) ValidateWithPath(path string) error {
	if _gecag.TxAttr != nil {
		if _adeaf := _gecag.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _adeaf != nil {
			return _adeaf
		}
	}
	if _gecag.TyAttr != nil {
		if _fabef := _gecag.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _fabef != nil {
			return _fabef
		}
	}
	return nil
}
func NewCT_ColorMRU() *CT_ColorMRU { _ebega := &CT_ColorMRU{}; return _ebega }
func ParseUnionST_AnimationDgmBuildType(s string) (ST_AnimationDgmBuildType, error) {
	_dbbcdb := ST_AnimationDgmBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_dbbcdb.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u006f\u006e\u0065":
		_dbbcdb.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeOne
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		_dbbcdb.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlOne
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		_dbbcdb.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlAtOnce
	}
	return _dbbcdb, nil
}

const (
	ST_LineEndTypeUnset    ST_LineEndType = 0
	ST_LineEndTypeNone     ST_LineEndType = 1
	ST_LineEndTypeTriangle ST_LineEndType = 2
	ST_LineEndTypeStealth  ST_LineEndType = 3
	ST_LineEndTypeDiamond  ST_LineEndType = 4
	ST_LineEndTypeOval     ST_LineEndType = 5
	ST_LineEndTypeArrow    ST_LineEndType = 6
)

type CT_TextCharacterProperties struct {
	KumimojiAttr   *bool
	LangAttr       *string
	AltLangAttr    *string
	SzAttr         *int32
	BAttr          *bool
	IAttr          *bool
	UAttr          ST_TextUnderlineType
	StrikeAttr     ST_TextStrikeType
	KernAttr       *int32
	CapAttr        ST_TextCapsType
	SpcAttr        *ST_TextPoint
	NormalizeHAttr *bool
	BaselineAttr   *ST_Percentage
	NoProofAttr    *bool
	DirtyAttr      *bool
	ErrAttr        *bool
	SmtCleanAttr   *bool
	SmtIdAttr      *uint32
	BmkAttr        *string
	Ln             *CT_LineProperties
	NoFill         *CT_NoFillProperties
	SolidFill      *CT_SolidColorFillProperties
	GradFill       *CT_GradientFillProperties
	BlipFill       *CT_BlipFillProperties
	PattFill       *CT_PatternFillProperties
	GrpFill        *CT_GroupFillProperties
	EffectLst      *CT_EffectList
	EffectDag      *CT_EffectContainer
	Highlight      *CT_Color
	ULnTx          *CT_TextUnderlineLineFollowText
	ULn            *CT_LineProperties
	UFillTx        *CT_TextUnderlineFillFollowText
	UFill          *CT_TextUnderlineFillGroupWrapper
	Latin          *CT_TextFont
	Ea             *CT_TextFont
	Cs             *CT_TextFont
	Sym            *CT_TextFont
	HlinkClick     *CT_Hyperlink
	HlinkMouseOver *CT_Hyperlink
	Rtl            *CT_Boolean
	ExtLst         *CT_OfficeArtExtensionList
}

func NewCT_OfficeStyleSheet() *CT_OfficeStyleSheet {
	_ddefa := &CT_OfficeStyleSheet{}
	_ddefa.ThemeElements = NewCT_BaseStyles()
	return _ddefa
}

type CT_Path2DList struct{ Path []*CT_Path2D }

func (_bacef ST_PresetPatternVal) Validate() error { return _bacef.ValidateWithPath("") }
func NewCT_GvmlGroupShape() *CT_GvmlGroupShape {
	_gcab := &CT_GvmlGroupShape{}
	_gcab.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_gcab.GrpSpPr = NewCT_GroupShapeProperties()
	return _gcab
}
func (_dae *CT_AlphaFloorEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_fdc, _adb := d.Token()
		if _adb != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006c\u0070\u0068\u0061F\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _adb)
		}
		if _ceed, _dbd := _fdc.(_b.EndElement); _dbd && _ceed.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBlipBullet and its children, prefixing error messages with path
func (_daeac *CT_TextBlipBullet) ValidateWithPath(path string) error {
	if _bdacf := _daeac.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _bdacf != nil {
		return _bdacf
	}
	return nil
}
func NewCT_Ratio() *CT_Ratio { _debgb := &CT_Ratio{}; return _debgb }
func (_efgfb *CT_TransformEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edadeb := range start.Attr {
		if _edadeb.Name.Local == "\u0073\u0078" {
			_gfde, _cfggc := ParseUnionST_Percentage(_edadeb.Value)
			if _cfggc != nil {
				return _cfggc
			}
			_efgfb.SxAttr = &_gfde
			continue
		}
		if _edadeb.Name.Local == "\u0073\u0079" {
			_ebggg, _gaffd := ParseUnionST_Percentage(_edadeb.Value)
			if _gaffd != nil {
				return _gaffd
			}
			_efgfb.SyAttr = &_ebggg
			continue
		}
		if _edadeb.Name.Local == "\u006b\u0078" {
			_afdbd, _fafcb := _a.ParseInt(_edadeb.Value, 10, 32)
			if _fafcb != nil {
				return _fafcb
			}
			_eegda := int32(_afdbd)
			_efgfb.KxAttr = &_eegda
			continue
		}
		if _edadeb.Name.Local == "\u006b\u0079" {
			_bcebb, _afdad := _a.ParseInt(_edadeb.Value, 10, 32)
			if _afdad != nil {
				return _afdad
			}
			_bfegf := int32(_bcebb)
			_efgfb.KyAttr = &_bfegf
			continue
		}
		if _edadeb.Name.Local == "\u0074\u0078" {
			_eccfbb, _gafae := ParseUnionST_Coordinate(_edadeb.Value)
			if _gafae != nil {
				return _gafae
			}
			_efgfb.TxAttr = &_eccfbb
			continue
		}
		if _edadeb.Name.Local == "\u0074\u0079" {
			_agbfd, _afgccg := ParseUnionST_Coordinate(_edadeb.Value)
			if _afgccg != nil {
				return _afgccg
			}
			_efgfb.TyAttr = &_agbfd
			continue
		}
	}
	for {
		_fecab, _eacb := d.Token()
		if _eacb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _eacb)
		}
		if _cebab, _aacbb := _fecab.(_b.EndElement); _aacbb && _cebab.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CustomGeometry2D and its children
func (_dafe *CT_CustomGeometry2D) Validate() error {
	return _dafe.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}
func NewCT_GraphicalObjectFrameLocking() *CT_GraphicalObjectFrameLocking {
	_defc := &CT_GraphicalObjectFrameLocking{}
	return _defc
}
func (_cffcd ST_TextAutonumberScheme) String() string {
	switch _cffcd {
	case 0:
		return ""
	case 1:
		return "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 2:
		return "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 3:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 4:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 5:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 6:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 7:
		return "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 8:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 9:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 10:
		return "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case 11:
		return "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 12:
		return "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 13:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 14:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 15:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 16:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 17:
		return "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 18:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case 19:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case 20:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 21:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 22:
		return "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case 23:
		return "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case 24:
		return "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case 25:
		return "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case 26:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 27:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case 28:
		return "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case 29:
		return "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case 30:
		return "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case 31:
		return "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case 32:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 33:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case 34:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case 35:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case 36:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case 37:
		return "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 38:
		return "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 39:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case 40:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case 41:
		return "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return ""
}
func NewCT_TextCharBullet() *CT_TextCharBullet { _caebd := &CT_TextCharBullet{}; return _caebd }

// Validate validates the EG_ColorTransform and its children
func (_gfdgg *EG_ColorTransform) Validate() error {
	return _gfdgg.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

// ValidateWithPath validates the CT_Point3D and its children, prefixing error messages with path
func (_dbbaf *CT_Point3D) ValidateWithPath(path string) error {
	if _bgfg := _dbbaf.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _bgfg != nil {
		return _bgfg
	}
	if _fbca := _dbbaf.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _fbca != nil {
		return _fbca
	}
	if _gaeab := _dbbaf.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _gaeab != nil {
		return _gaeab
	}
	return nil
}

// Validate validates the CT_NoFillProperties and its children
func (_ebagd *CT_NoFillProperties) Validate() error {
	return _ebagd.ValidateWithPath("\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_TextBodyProperties and its children, prefixing error messages with path
func (_deffg *CT_TextBodyProperties) ValidateWithPath(path string) error {
	if _dafgc := _deffg.VertOverflowAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _dafgc != nil {
		return _dafgc
	}
	if _eegea := _deffg.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _eegea != nil {
		return _eegea
	}
	if _bbgbe := _deffg.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _bbgbe != nil {
		return _bbgbe
	}
	if _cdfeb := _deffg.WrapAttr.ValidateWithPath(path + "\u002fW\u0072\u0061\u0070\u0041\u0074\u0074r"); _cdfeb != nil {
		return _cdfeb
	}
	if _deffg.LInsAttr != nil {
		if _effde := _deffg.LInsAttr.ValidateWithPath(path + "\u002fL\u0049\u006e\u0073\u0041\u0074\u0074r"); _effde != nil {
			return _effde
		}
	}
	if _deffg.TInsAttr != nil {
		if _gddgd := _deffg.TInsAttr.ValidateWithPath(path + "\u002fT\u0049\u006e\u0073\u0041\u0074\u0074r"); _gddgd != nil {
			return _gddgd
		}
	}
	if _deffg.RInsAttr != nil {
		if _acgeb := _deffg.RInsAttr.ValidateWithPath(path + "\u002fR\u0049\u006e\u0073\u0041\u0074\u0074r"); _acgeb != nil {
			return _acgeb
		}
	}
	if _deffg.BInsAttr != nil {
		if _cgfcc := _deffg.BInsAttr.ValidateWithPath(path + "\u002fB\u0049\u006e\u0073\u0041\u0074\u0074r"); _cgfcc != nil {
			return _cgfcc
		}
	}
	if _deffg.NumColAttr != nil {
		if *_deffg.NumColAttr < 1 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0031\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_deffg.NumColAttr)
		}
		if *_deffg.NumColAttr > 16 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0036\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_deffg.NumColAttr)
		}
	}
	if _deffg.SpcColAttr != nil {
		if *_deffg.SpcColAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0070\u0063\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0030\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_deffg.SpcColAttr)
		}
	}
	if _eacgc := _deffg.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _eacgc != nil {
		return _eacgc
	}
	if _deffg.PrstTxWarp != nil {
		if _gegg := _deffg.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _gegg != nil {
			return _gegg
		}
	}
	if _deffg.NoAutofit != nil {
		if _gcgfed := _deffg.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _gcgfed != nil {
			return _gcgfed
		}
	}
	if _deffg.NormAutofit != nil {
		if _edcbd := _deffg.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _edcbd != nil {
			return _edcbd
		}
	}
	if _deffg.SpAutoFit != nil {
		if _gdbdg := _deffg.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _gdbdg != nil {
			return _gdbdg
		}
	}
	if _deffg.Scene3d != nil {
		if _cabgb := _deffg.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _cabgb != nil {
			return _cabgb
		}
	}
	if _deffg.Sp3d != nil {
		if _fdfa := _deffg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _fdfa != nil {
			return _fdfa
		}
	}
	if _deffg.FlatTx != nil {
		if _ggbbd := _deffg.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _ggbbd != nil {
			return _ggbbd
		}
	}
	if _deffg.ExtLst != nil {
		if _ebcaa := _deffg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebcaa != nil {
			return _ebcaa
		}
	}
	return nil
}

// Validate validates the CT_EffectList and its children
func (_ebdfb *CT_EffectList) Validate() error {
	return _ebdfb.ValidateWithPath("\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074")
}

type CT_DuotoneEffect struct{ EG_ColorChoice []*EG_ColorChoice }

func NewCT_AlphaFloorEffect() *CT_AlphaFloorEffect { _deg := &CT_AlphaFloorEffect{}; return _deg }

// Validate validates the CT_GvmlTextShapeChoice and its children
func (_cgeeb *CT_GvmlTextShapeChoice) Validate() error {
	return _cgeeb.ValidateWithPath("\u0043\u0054\u005f\u0047vm\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069c\u0065")
}
func (_fgceg ST_AnimationDgmBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fgceg.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_b.CharData(_fgceg.ST_AnimationBuildType.String()))
	}
	if _fgceg.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		e.EncodeToken(_b.CharData(_fgceg.ST_AnimationDgmOnlyBuildType.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

type ST_LineCap byte

// ValidateWithPath validates the CT_EffectContainer and its children, prefixing error messages with path
func (_bdda *CT_EffectContainer) ValidateWithPath(path string) error {
	if _acdae := _bdda.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _acdae != nil {
		return _acdae
	}
	if _bdda.Cont != nil {
		if _gdbeg := _bdda.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _gdbeg != nil {
			return _gdbeg
		}
	}
	if _bdda.Effect != nil {
		if _ccde := _bdda.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _ccde != nil {
			return _ccde
		}
	}
	if _bdda.AlphaBiLevel != nil {
		if _gdae := _bdda.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _gdae != nil {
			return _gdae
		}
	}
	if _bdda.AlphaCeiling != nil {
		if _bdfb := _bdda.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _bdfb != nil {
			return _bdfb
		}
	}
	if _bdda.AlphaFloor != nil {
		if _bcbfe := _bdda.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _bcbfe != nil {
			return _bcbfe
		}
	}
	if _bdda.AlphaInv != nil {
		if _bbfbg := _bdda.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _bbfbg != nil {
			return _bbfbg
		}
	}
	if _bdda.AlphaMod != nil {
		if _dece := _bdda.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _dece != nil {
			return _dece
		}
	}
	if _bdda.AlphaModFix != nil {
		if _bfad := _bdda.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _bfad != nil {
			return _bfad
		}
	}
	if _bdda.AlphaOutset != nil {
		if _aeac := _bdda.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _aeac != nil {
			return _aeac
		}
	}
	if _bdda.AlphaRepl != nil {
		if _fbaaa := _bdda.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _fbaaa != nil {
			return _fbaaa
		}
	}
	if _bdda.BiLevel != nil {
		if _egddg := _bdda.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _egddg != nil {
			return _egddg
		}
	}
	if _bdda.Blend != nil {
		if _cgea := _bdda.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _cgea != nil {
			return _cgea
		}
	}
	if _bdda.Blur != nil {
		if _bgfe := _bdda.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _bgfe != nil {
			return _bgfe
		}
	}
	if _bdda.ClrChange != nil {
		if _dbad := _bdda.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _dbad != nil {
			return _dbad
		}
	}
	if _bdda.ClrRepl != nil {
		if _gcad := _bdda.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _gcad != nil {
			return _gcad
		}
	}
	if _bdda.Duotone != nil {
		if _dabe := _bdda.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _dabe != nil {
			return _dabe
		}
	}
	if _bdda.Fill != nil {
		if _fdbe := _bdda.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _fdbe != nil {
			return _fdbe
		}
	}
	if _bdda.FillOverlay != nil {
		if _eaed := _bdda.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _eaed != nil {
			return _eaed
		}
	}
	if _bdda.Glow != nil {
		if _eedd := _bdda.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _eedd != nil {
			return _eedd
		}
	}
	if _bdda.Grayscl != nil {
		if _gcge := _bdda.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _gcge != nil {
			return _gcge
		}
	}
	if _bdda.Hsl != nil {
		if _dcfdf := _bdda.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _dcfdf != nil {
			return _dcfdf
		}
	}
	if _bdda.InnerShdw != nil {
		if _cgec := _bdda.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _cgec != nil {
			return _cgec
		}
	}
	if _bdda.Lum != nil {
		if _dcfg := _bdda.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _dcfg != nil {
			return _dcfg
		}
	}
	if _bdda.OuterShdw != nil {
		if _edgbc := _bdda.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _edgbc != nil {
			return _edgbc
		}
	}
	if _bdda.PrstShdw != nil {
		if _dbfb := _bdda.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _dbfb != nil {
			return _dbfb
		}
	}
	if _bdda.Reflection != nil {
		if _ecgge := _bdda.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _ecgge != nil {
			return _ecgge
		}
	}
	if _bdda.RelOff != nil {
		if _cedc := _bdda.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _cedc != nil {
			return _cedc
		}
	}
	if _bdda.SoftEdge != nil {
		if _bcfg := _bdda.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _bcfg != nil {
			return _bcfg
		}
	}
	if _bdda.Tint != nil {
		if _cgdc := _bdda.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _cgdc != nil {
			return _cgdc
		}
	}
	if _bdda.Xfrm != nil {
		if _aafe := _bdda.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _aafe != nil {
			return _aafe
		}
	}
	return nil
}
func NewCT_FillStyleList() *CT_FillStyleList { _bcga := &CT_FillStyleList{}; return _bcga }
func (_cdaa *CT_ConnectionSiteList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cabf:
	for {
		_ddae, _cgga := d.Token()
		if _cgga != nil {
			return _cgga
		}
		switch _fede := _ddae.(type) {
		case _b.StartElement:
			switch _fede.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}:
				_edaec := NewCT_ConnectionSite()
				if _dcdc := d.DecodeElement(_edaec, &_fede); _dcdc != nil {
					return _dcdc
				}
				_cdaa.Cxn = append(_cdaa.Cxn, _edaec)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fede.Name)
				if _bgdb := d.Skip(); _bgdb != nil {
					return _bgdb
				}
			}
		case _b.EndElement:
			break _cabf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TableStyleCellStyle() *CT_TableStyleCellStyle {
	_gcdb := &CT_TableStyleCellStyle{}
	return _gcdb
}

// ST_TextFontScalePercentOrPercentString is a union type
type ST_TextFontScalePercentOrPercentString struct {
	ST_TextFontScalePercent *int32
	ST_Percentage           *string
}

func (_cf *AG_Locking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dad := range start.Attr {
		if _dad.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_ba, _ee := _a.ParseBool(_dad.Value)
			if _ee != nil {
				return _ee
			}
			_cf.NoGrpAttr = &_ba
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_bac, _ac := _a.ParseBool(_dad.Value)
			if _ac != nil {
				return _ac
			}
			_cf.NoSelectAttr = &_bac
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_bg, _cd := _a.ParseBool(_dad.Value)
			if _cd != nil {
				return _cd
			}
			_cf.NoRotAttr = &_bg
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_df, _gd := _a.ParseBool(_dad.Value)
			if _gd != nil {
				return _gd
			}
			_cf.NoChangeAspectAttr = &_df
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_ad, _cee := _a.ParseBool(_dad.Value)
			if _cee != nil {
				return _cee
			}
			_cf.NoMoveAttr = &_ad
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_bf, _aff := _a.ParseBool(_dad.Value)
			if _aff != nil {
				return _aff
			}
			_cf.NoResizeAttr = &_bf
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_cb, _ff := _a.ParseBool(_dad.Value)
			if _ff != nil {
				return _ff
			}
			_cf.NoEditPointsAttr = &_cb
			continue
		}
		if _dad.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_ca, _gdc := _a.ParseBool(_dad.Value)
			if _gdc != nil {
				return _gdc
			}
			_cf.NoAdjustHandlesAttr = &_ca
			continue
		}
		if _dad.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_eeg, _fc := _a.ParseBool(_dad.Value)
			if _fc != nil {
				return _fc
			}
			_cf.NoChangeArrowheadsAttr = &_eeg
			continue
		}
		if _dad.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_gf, _ag := _a.ParseBool(_dad.Value)
			if _ag != nil {
				return _ag
			}
			_cf.NoChangeShapeTypeAttr = &_gf
			continue
		}
	}
	for {
		_aca, _acb := d.Token()
		if _acb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u003a\u0020%\u0073", _acb)
		}
		if _fbg, _adf := _aca.(_b.EndElement); _adf && _fbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gccga ST_TextAutonumberScheme) Validate() error { return _gccga.ValidateWithPath("") }
func (_cbbfca *CT_Cell3D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbbfca.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_fgfa, _gfbg := _cbbfca.PrstMaterialAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _gfbg != nil {
			return _gfbg
		}
		start.Attr = append(start.Attr, _fgfa)
	}
	e.EncodeToken(start)
	_gffd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
	e.EncodeElement(_cbbfca.Bevel, _gffd)
	if _cbbfca.LightRig != nil {
		_feaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
		e.EncodeElement(_cbbfca.LightRig, _feaf)
	}
	if _cbbfca.ExtLst != nil {
		_dbdaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbbfca.ExtLst, _dbdaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cceca *ST_Coordinate32) Validate() error { return _cceca.ValidateWithPath("") }
func NewCT_OfficeArtExtensionList() *CT_OfficeArtExtensionList {
	_bgceb := &CT_OfficeArtExtensionList{}
	return _bgceb
}

type CT_AlphaFloorEffect struct{}

func (_gcffde ST_PresetLineDashVal) Validate() error { return _gcffde.ValidateWithPath("") }
func NewCT_FixedPercentage() *CT_FixedPercentage     { _gfbe := &CT_FixedPercentage{}; return _gfbe }
func (_ccad *CT_CustomColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egddf := range start.Attr {
		if _egddf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcba, _fdgb := _egddf.Value, error(nil)
			if _fdgb != nil {
				return _fdgb
			}
			_ccad.NameAttr = &_dcba
			continue
		}
	}
_ccgc:
	for {
		_ebebb, _cbec := d.Token()
		if _cbec != nil {
			return _cbec
		}
		switch _cbbac := _ebebb.(type) {
		case _b.StartElement:
			switch _cbbac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ccad.ScrgbClr = NewCT_ScRgbColor()
				if _ggae := d.DecodeElement(_ccad.ScrgbClr, &_cbbac); _ggae != nil {
					return _ggae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ccad.SrgbClr = NewCT_SRgbColor()
				if _ffdd := d.DecodeElement(_ccad.SrgbClr, &_cbbac); _ffdd != nil {
					return _ffdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ccad.HslClr = NewCT_HslColor()
				if _eaaea := d.DecodeElement(_ccad.HslClr, &_cbbac); _eaaea != nil {
					return _eaaea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ccad.SysClr = NewCT_SystemColor()
				if _cbca := d.DecodeElement(_ccad.SysClr, &_cbbac); _cbca != nil {
					return _cbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ccad.SchemeClr = NewCT_SchemeColor()
				if _cedg := d.DecodeElement(_ccad.SchemeClr, &_cbbac); _cedg != nil {
					return _cedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ccad.PrstClr = NewCT_PresetColor()
				if _ecaf := d.DecodeElement(_ccad.PrstClr, &_cbbac); _ecaf != nil {
					return _ecaf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _cbbac.Name)
				if _fbfde := d.Skip(); _fbfde != nil {
					return _fbfde
				}
			}
		case _b.EndElement:
			break _ccgc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextSpacing and its children, prefixing error messages with path
func (_gbgff *CT_TextSpacing) ValidateWithPath(path string) error {
	if _gbgff.SpcPct != nil {
		if _abdge := _gbgff.SpcPct.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0063\u0074"); _abdge != nil {
			return _abdge
		}
	}
	if _gbgff.SpcPts != nil {
		if _bfeab := _gbgff.SpcPts.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0074\u0073"); _bfeab != nil {
			return _bfeab
		}
	}
	return nil
}
func (_cdfgd ST_RectAlignment) String() string {
	switch _cdfgd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0063\u0074\u0072"
	case 6:
		return "\u0072"
	case 7:
		return "\u0062\u006c"
	case 8:
		return "\u0062"
	case 9:
		return "\u0062\u0072"
	}
	return ""
}
func (_bacdf ST_LightRigType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcdgegd := _b.Attr{}
	_bcdgegd.Name = name
	switch _bacdf {
	case ST_LightRigTypeUnset:
		_bcdgegd.Value = ""
	case ST_LightRigTypeLegacyFlat1:
		_bcdgegd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case ST_LightRigTypeLegacyFlat2:
		_bcdgegd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case ST_LightRigTypeLegacyFlat3:
		_bcdgegd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case ST_LightRigTypeLegacyFlat4:
		_bcdgegd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case ST_LightRigTypeLegacyNormal1:
		_bcdgegd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case ST_LightRigTypeLegacyNormal2:
		_bcdgegd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case ST_LightRigTypeLegacyNormal3:
		_bcdgegd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case ST_LightRigTypeLegacyNormal4:
		_bcdgegd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case ST_LightRigTypeLegacyHarsh1:
		_bcdgegd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case ST_LightRigTypeLegacyHarsh2:
		_bcdgegd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case ST_LightRigTypeLegacyHarsh3:
		_bcdgegd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case ST_LightRigTypeLegacyHarsh4:
		_bcdgegd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case ST_LightRigTypeThreePt:
		_bcdgegd.Value = "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case ST_LightRigTypeBalanced:
		_bcdgegd.Value = "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case ST_LightRigTypeSoft:
		_bcdgegd.Value = "\u0073\u006f\u0066\u0074"
	case ST_LightRigTypeHarsh:
		_bcdgegd.Value = "\u0068\u0061\u0072s\u0068"
	case ST_LightRigTypeFlood:
		_bcdgegd.Value = "\u0066\u006c\u006fo\u0064"
	case ST_LightRigTypeContrasting:
		_bcdgegd.Value = "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case ST_LightRigTypeMorning:
		_bcdgegd.Value = "\u006do\u0072\u006e\u0069\u006e\u0067"
	case ST_LightRigTypeSunrise:
		_bcdgegd.Value = "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case ST_LightRigTypeSunset:
		_bcdgegd.Value = "\u0073\u0075\u006e\u0073\u0065\u0074"
	case ST_LightRigTypeChilly:
		_bcdgegd.Value = "\u0063\u0068\u0069\u006c\u006c\u0079"
	case ST_LightRigTypeFreezing:
		_bcdgegd.Value = "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case ST_LightRigTypeFlat:
		_bcdgegd.Value = "\u0066\u006c\u0061\u0074"
	case ST_LightRigTypeTwoPt:
		_bcdgegd.Value = "\u0074\u0077\u006fP\u0074"
	case ST_LightRigTypeGlow:
		_bcdgegd.Value = "\u0067\u006c\u006f\u0077"
	case ST_LightRigTypeBrightRoom:
		_bcdgegd.Value = "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return _bcdgegd, nil
}

type CT_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_agfd *CT_NonVisualPictureProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agfd.PreferRelativeResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_agfd.PreferRelativeResizeAttr))})
	}
	e.EncodeToken(start)
	if _agfd.PicLocks != nil {
		_gfdfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_agfd.PicLocks, _gfdfb)
	}
	if _agfd.ExtLst != nil {
		_gffdba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agfd.ExtLst, _gffdba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GvmlConnectorNonVisual() *CT_GvmlConnectorNonVisual {
	_fbadb := &CT_GvmlConnectorNonVisual{}
	_fbadb.CNvPr = NewCT_NonVisualDrawingProps()
	_fbadb.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
	return _fbadb
}
func (_ggfea *CT_SRgbColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddgca := range start.Attr {
		if _ddgca.Name.Local == "\u0076\u0061\u006c" {
			_ebfage, _dgdcbd := _ddgca.Value, error(nil)
			if _dgdcbd != nil {
				return _dgdcbd
			}
			_ggfea.ValAttr = _ebfage
			continue
		}
	}
_afegd:
	for {
		_ggbce, _fccfa := d.Token()
		if _fccfa != nil {
			return _fccfa
		}
		switch _bcbfc := _ggbce.(type) {
		case _b.StartElement:
			switch _bcbfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fbba := NewEG_ColorTransform()
				_fbba.Tint = NewCT_PositiveFixedPercentage()
				if _gbfed := d.DecodeElement(_fbba.Tint, &_bcbfc); _gbfed != nil {
					return _gbfed
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _fbba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_fffec := NewEG_ColorTransform()
				_fffec.Shade = NewCT_PositiveFixedPercentage()
				if _bbefe := d.DecodeElement(_fffec.Shade, &_bcbfc); _bbefe != nil {
					return _bbefe
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _fffec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_feadd := NewEG_ColorTransform()
				_feadd.Comp = NewCT_ComplementTransform()
				if _fgbf := d.DecodeElement(_feadd.Comp, &_bcbfc); _fgbf != nil {
					return _fgbf
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _feadd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_baebc := NewEG_ColorTransform()
				_baebc.Inv = NewCT_InverseTransform()
				if _ecdbaf := d.DecodeElement(_baebc.Inv, &_bcbfc); _ecdbaf != nil {
					return _ecdbaf
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _baebc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_ebfef := NewEG_ColorTransform()
				_ebfef.Gray = NewCT_GrayscaleTransform()
				if _aabbe := d.DecodeElement(_ebfef.Gray, &_bcbfc); _aabbe != nil {
					return _aabbe
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _ebfef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_gfef := NewEG_ColorTransform()
				_gfef.Alpha = NewCT_PositiveFixedPercentage()
				if _cebbe := d.DecodeElement(_gfef.Alpha, &_bcbfc); _cebbe != nil {
					return _cebbe
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _gfef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_cebd := NewEG_ColorTransform()
				_cebd.AlphaOff = NewCT_FixedPercentage()
				if _dgaag := d.DecodeElement(_cebd.AlphaOff, &_bcbfc); _dgaag != nil {
					return _dgaag
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _cebd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_ebcbc := NewEG_ColorTransform()
				_ebcbc.AlphaMod = NewCT_PositivePercentage()
				if _edbb := d.DecodeElement(_ebcbc.AlphaMod, &_bcbfc); _edbb != nil {
					return _edbb
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _ebcbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_bdebbf := NewEG_ColorTransform()
				_bdebbf.Hue = NewCT_PositiveFixedAngle()
				if _cabga := d.DecodeElement(_bdebbf.Hue, &_bcbfc); _cabga != nil {
					return _cabga
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _bdebbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_cdbb := NewEG_ColorTransform()
				_cdbb.HueOff = NewCT_Angle()
				if _edfea := d.DecodeElement(_cdbb.HueOff, &_bcbfc); _edfea != nil {
					return _edfea
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _cdbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_gbgec := NewEG_ColorTransform()
				_gbgec.HueMod = NewCT_PositivePercentage()
				if _ffcdc := d.DecodeElement(_gbgec.HueMod, &_bcbfc); _ffcdc != nil {
					return _ffcdc
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _gbgec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_bfbfg := NewEG_ColorTransform()
				_bfbfg.Sat = NewCT_Percentage()
				if _addag := d.DecodeElement(_bfbfg.Sat, &_bcbfc); _addag != nil {
					return _addag
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _bfbfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_gecg := NewEG_ColorTransform()
				_gecg.SatOff = NewCT_Percentage()
				if _cbde := d.DecodeElement(_gecg.SatOff, &_bcbfc); _cbde != nil {
					return _cbde
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _gecg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_daeag := NewEG_ColorTransform()
				_daeag.SatMod = NewCT_Percentage()
				if _fbdff := d.DecodeElement(_daeag.SatMod, &_bcbfc); _fbdff != nil {
					return _fbdff
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _daeag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_ceecb := NewEG_ColorTransform()
				_ceecb.Lum = NewCT_Percentage()
				if _dbceb := d.DecodeElement(_ceecb.Lum, &_bcbfc); _dbceb != nil {
					return _dbceb
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _ceecb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_gfcbb := NewEG_ColorTransform()
				_gfcbb.LumOff = NewCT_Percentage()
				if _bageb := d.DecodeElement(_gfcbb.LumOff, &_bcbfc); _bageb != nil {
					return _bageb
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _gfcbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_bffge := NewEG_ColorTransform()
				_bffge.LumMod = NewCT_Percentage()
				if _eaca := d.DecodeElement(_bffge.LumMod, &_bcbfc); _eaca != nil {
					return _eaca
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _bffge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_eafb := NewEG_ColorTransform()
				_eafb.Red = NewCT_Percentage()
				if _ddeff := d.DecodeElement(_eafb.Red, &_bcbfc); _ddeff != nil {
					return _ddeff
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _eafb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_geecb := NewEG_ColorTransform()
				_geecb.RedOff = NewCT_Percentage()
				if _fagag := d.DecodeElement(_geecb.RedOff, &_bcbfc); _fagag != nil {
					return _fagag
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _geecb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_ccced := NewEG_ColorTransform()
				_ccced.RedMod = NewCT_Percentage()
				if _ffbfdf := d.DecodeElement(_ccced.RedMod, &_bcbfc); _ffbfdf != nil {
					return _ffbfdf
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _ccced)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_dfeac := NewEG_ColorTransform()
				_dfeac.Green = NewCT_Percentage()
				if _cafaeg := d.DecodeElement(_dfeac.Green, &_bcbfc); _cafaeg != nil {
					return _cafaeg
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _dfeac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_edfa := NewEG_ColorTransform()
				_edfa.GreenOff = NewCT_Percentage()
				if _fbfa := d.DecodeElement(_edfa.GreenOff, &_bcbfc); _fbfa != nil {
					return _fbfa
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _edfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fbfaa := NewEG_ColorTransform()
				_fbfaa.GreenMod = NewCT_Percentage()
				if _dfbgb := d.DecodeElement(_fbfaa.GreenMod, &_bcbfc); _dfbgb != nil {
					return _dfbgb
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _fbfaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_bdefe := NewEG_ColorTransform()
				_bdefe.Blue = NewCT_Percentage()
				if _bdebaf := d.DecodeElement(_bdefe.Blue, &_bcbfc); _bdebaf != nil {
					return _bdebaf
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _bdefe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_fegefe := NewEG_ColorTransform()
				_fegefe.BlueOff = NewCT_Percentage()
				if _ebdg := d.DecodeElement(_fegefe.BlueOff, &_bcbfc); _ebdg != nil {
					return _ebdg
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _fegefe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_defff := NewEG_ColorTransform()
				_defff.BlueMod = NewCT_Percentage()
				if _dgdge := d.DecodeElement(_defff.BlueMod, &_bcbfc); _dgdge != nil {
					return _dgdge
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _defff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_gabf := NewEG_ColorTransform()
				_gabf.Gamma = NewCT_GammaTransform()
				if _bcefb := d.DecodeElement(_gabf.Gamma, &_bcbfc); _bcefb != nil {
					return _bcefb
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _gabf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_fabfb := NewEG_ColorTransform()
				_fabfb.InvGamma = NewCT_InverseGammaTransform()
				if _dccc := d.DecodeElement(_fabfb.InvGamma, &_bcbfc); _dccc != nil {
					return _dccc
				}
				_ggfea.EG_ColorTransform = append(_ggfea.EG_ColorTransform, _fabfb)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0052\u0067b\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _bcbfc.Name)
				if _dfcg := d.Skip(); _dfcg != nil {
					return _dfcg
				}
			}
		case _b.EndElement:
			break _afegd
		case _b.CharData:
		}
	}
	return nil
}
func (_efdec *CT_SolidColorFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _efdec.ScrgbClr != nil {
		_ebeff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_efdec.ScrgbClr, _ebeff)
	}
	if _efdec.SrgbClr != nil {
		_bgaeb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_efdec.SrgbClr, _bgaeb)
	}
	if _efdec.HslClr != nil {
		_cacad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_efdec.HslClr, _cacad)
	}
	if _efdec.SysClr != nil {
		_edcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_efdec.SysClr, _edcb)
	}
	if _efdec.SchemeClr != nil {
		_daggg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_efdec.SchemeClr, _daggg)
	}
	if _efdec.PrstClr != nil {
		_fdebbb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_efdec.PrstClr, _fdebbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GraphicalObject and its children
func (_bdgf *CT_GraphicalObject) Validate() error {
	return _bdgf.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074")
}

// Validate validates the CT_RegularTextRun and its children
func (_accafg *CT_RegularTextRun) Validate() error {
	return _accafg.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e")
}

// Validate validates the CT_Vector3D and its children
func (_gedeb *CT_Vector3D) Validate() error {
	return _gedeb.ValidateWithPath("C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044")
}
func (_bgcec *CT_TextShapeAutofit) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_fabbc, _gggbf := d.Token()
		if _gggbf != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053h\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _gggbf)
		}
		if _dfegf, _fafff := _fabbc.(_b.EndElement); _fafff && _dfegf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LineEndProperties struct {
	TypeAttr ST_LineEndType
	WAttr    ST_LineEndWidth
	LenAttr  ST_LineEndLength
}

// ValidateWithPath validates the CT_ThemeableLineStyle and its children, prefixing error messages with path
func (_cgecf *CT_ThemeableLineStyle) ValidateWithPath(path string) error {
	if _cgecf.Ln != nil {
		if _fddcd := _cgecf.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _fddcd != nil {
			return _fddcd
		}
	}
	if _cgecf.LnRef != nil {
		if _dcefb := _cgecf.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _dcefb != nil {
			return _dcefb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextNormalAutofit and its children, prefixing error messages with path
func (_acdcf *CT_TextNormalAutofit) ValidateWithPath(path string) error {
	if _acdcf.FontScaleAttr != nil {
		if _dacga := _acdcf.FontScaleAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006ce\u0041\u0074\u0074\u0072"); _dacga != nil {
			return _dacga
		}
	}
	if _acdcf.LnSpcReductionAttr != nil {
		if _cdeac := _acdcf.LnSpcReductionAttr.ValidateWithPath(path + "\u002f\u004c\u006e\u0053pc\u0052\u0065\u0064\u0075\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _cdeac != nil {
			return _cdeac
		}
	}
	return nil
}
func NewCT_GeomGuide() *CT_GeomGuide { _dggc := &CT_GeomGuide{}; return _dggc }
func (_eebaf ST_AnimationDgmOnlyBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdecfg := _b.Attr{}
	_bdecfg.Name = name
	switch _eebaf {
	case ST_AnimationDgmOnlyBuildTypeUnset:
		_bdecfg.Value = ""
	case ST_AnimationDgmOnlyBuildTypeOne:
		_bdecfg.Value = "\u006f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlOne:
		_bdecfg.Value = "\u006c\u0076\u006c\u004f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlAtOnce:
		_bdecfg.Value = "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _bdecfg, nil
}

type CT_PictureLocking struct {
	NoCropAttr             *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func NewCT_OuterShadowEffect() *CT_OuterShadowEffect {
	_gbeed := &CT_OuterShadowEffect{}
	return _gbeed
}
func (_afbfb *Theme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074\u0068\u0065\u006d\u0065"
	return _afbfb.CT_OfficeStyleSheet.MarshalXML(e, start)
}

// Validate validates the Blip and its children
func (_bed *Blip) Validate() error { return _bed.ValidateWithPath("\u0042\u006c\u0069\u0070") }
func (_fdbed *CT_PresetShadowEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_adfedd, _gbdd := _fdbed.PrstAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _gbdd != nil {
		return _gbdd
	}
	start.Attr = append(start.Attr, _adfedd)
	if _fdbed.DistAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_fdbed.DistAttr)})
	}
	if _fdbed.DirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_fdbed.DirAttr)})
	}
	e.EncodeToken(start)
	if _fdbed.ScrgbClr != nil {
		_gggda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fdbed.ScrgbClr, _gggda)
	}
	if _fdbed.SrgbClr != nil {
		_gabce := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fdbed.SrgbClr, _gabce)
	}
	if _fdbed.HslClr != nil {
		_fbaaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fdbed.HslClr, _fbaaf)
	}
	if _fdbed.SysClr != nil {
		_fbbcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fdbed.SysClr, _fbbcf)
	}
	if _fdbed.SchemeClr != nil {
		_gbed := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fdbed.SchemeClr, _gbed)
	}
	if _fdbed.PrstClr != nil {
		_egcea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fdbed.PrstClr, _egcea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gabd *CT_LuminanceEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdeg := range start.Attr {
		if _fdeg.Name.Local == "\u0062\u0072\u0069\u0067\u0068\u0074" {
			_febda, _eggfb := ParseUnionST_FixedPercentage(_fdeg.Value)
			if _eggfb != nil {
				return _eggfb
			}
			_gabd.BrightAttr = &_febda
			continue
		}
		if _fdeg.Name.Local == "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074" {
			_ceaa, _ggbff := ParseUnionST_FixedPercentage(_fdeg.Value)
			if _ggbff != nil {
				return _ggbff
			}
			_gabd.ContrastAttr = &_ceaa
			continue
		}
	}
	for {
		_ffddc, _cdgde := d.Token()
		if _cdgde != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u004c\u0075\u006d\u0069\u006e\u0061\u006ec\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _cdgde)
		}
		if _gadd, _dfebg := _ffddc.(_b.EndElement); _dfebg && _gadd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextBlipBullet struct{ Blip *CT_Blip }

func (_ffb *CT_AdjustHandleList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cadg:
	for {
		_bfg, _cbb := d.Token()
		if _cbb != nil {
			return _cbb
		}
		switch _bbge := _bfg.(type) {
		case _b.StartElement:
			switch _bbge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}:
				_gg := NewCT_XYAdjustHandle()
				if _facb := d.DecodeElement(_gg, &_bbge); _facb != nil {
					return _facb
				}
				_ffb.AhXY = append(_ffb.AhXY, _gg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}:
				_gee := NewCT_PolarAdjustHandle()
				if _adfg := d.DecodeElement(_gee, &_bbge); _adfg != nil {
					return _adfg
				}
				_ffb.AhPolar = append(_ffb.AhPolar, _gee)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0041\u0064\u006a\u0075\u0073\u0074\u0048an\u0064\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bbge.Name)
				if _fbf := d.Skip(); _fbf != nil {
					return _fbf
				}
			}
		case _b.EndElement:
			break _cadg
		case _b.CharData:
		}
	}
	return nil
}
func (_fbda *CT_ComplementTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GlowEffect() *CT_GlowEffect { _fcgf := &CT_GlowEffect{}; return _fcgf }
func (_fggd *CT_GvmlPicture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fggd.NvPicPr = NewCT_GvmlPictureNonVisual()
	_fggd.BlipFill = NewCT_BlipFillProperties()
	_fggd.SpPr = NewCT_ShapeProperties()
_ageab:
	for {
		_afddd, _dfdg := d.Token()
		if _dfdg != nil {
			return _dfdg
		}
		switch _gcgcb := _afddd.(type) {
		case _b.StartElement:
			switch _gcgcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _edec := d.DecodeElement(_fggd.NvPicPr, &_gcgcb); _edec != nil {
					return _edec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _ddbc := d.DecodeElement(_fggd.BlipFill, &_gcgcb); _ddbc != nil {
					return _ddbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _dced := d.DecodeElement(_fggd.SpPr, &_gcgcb); _dced != nil {
					return _dced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fggd.Style = NewCT_ShapeStyle()
				if _ccfdb := d.DecodeElement(_fggd.Style, &_gcgcb); _ccfdb != nil {
					return _ccfdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fggd.ExtLst = NewCT_OfficeArtExtensionList()
				if _eeccb := d.DecodeElement(_fggd.ExtLst, &_gcgcb); _eeccb != nil {
					return _eeccb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063t\u0075r\u0065\u0020\u0025\u0076", _gcgcb.Name)
				if _cffcf := d.Skip(); _cffcf != nil {
					return _cffcf
				}
			}
		case _b.EndElement:
			break _ageab
		case _b.CharData:
		}
	}
	return nil
}

type ST_OnOffStyleType byte
type CT_CustomGeometry2D struct {
	AvLst   *CT_GeomGuideList
	GdLst   *CT_GeomGuideList
	AhLst   *CT_AdjustHandleList
	CxnLst  *CT_ConnectionSiteList
	Rect    *CT_GeomRect
	PathLst *CT_Path2DList
}
type CT_AlphaReplaceEffect struct{ AAttr ST_PositiveFixedPercentage }

// ValidateWithPath validates the EG_TextAutofit and its children, prefixing error messages with path
func (_dcfdb *EG_TextAutofit) ValidateWithPath(path string) error {
	if _dcfdb.NoAutofit != nil {
		if _ccaga := _dcfdb.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _ccaga != nil {
			return _ccaga
		}
	}
	if _dcfdb.NormAutofit != nil {
		if _eccac := _dcfdb.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _eccac != nil {
			return _eccac
		}
	}
	if _dcfdb.SpAutoFit != nil {
		if _addfe := _dcfdb.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _addfe != nil {
			return _addfe
		}
	}
	return nil
}
func (_faee *CT_GradientFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbfe := range start.Attr {
		if _fbfe.Name.Local == "\u0066\u006c\u0069\u0070" {
			_faee.FlipAttr.UnmarshalXMLAttr(_fbfe)
			continue
		}
		if _fbfe.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_gfdcc, _fccbg := _a.ParseBool(_fbfe.Value)
			if _fccbg != nil {
				return _fccbg
			}
			_faee.RotWithShapeAttr = &_gfdcc
			continue
		}
	}
_afea:
	for {
		_eedeg, _eeea := d.Token()
		if _eeea != nil {
			return _eeea
		}
		switch _cdbgf := _eedeg.(type) {
		case _b.StartElement:
			switch _cdbgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}:
				_faee.GsLst = NewCT_GradientStopList()
				if _gbbde := d.DecodeElement(_faee.GsLst, &_cdbgf); _gbbde != nil {
					return _gbbde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_faee.Lin = NewCT_LinearShadeProperties()
				if _eccf := d.DecodeElement(_faee.Lin, &_cdbgf); _eccf != nil {
					return _eccf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_faee.Path = NewCT_PathShadeProperties()
				if _bead := d.DecodeElement(_faee.Path, &_cdbgf); _bead != nil {
					return _bead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}:
				_faee.TileRect = NewCT_RelativeRect()
				if _bfgff := d.DecodeElement(_faee.TileRect, &_cdbgf); _bfgff != nil {
					return _bfgff
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074F\u0069l\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _cdbgf.Name)
				if _dgfd := d.Skip(); _dgfd != nil {
					return _dgfd
				}
			}
		case _b.EndElement:
			break _afea
		case _b.CharData:
		}
	}
	return nil
}
func (_bcdgc ST_LightRigType) Validate() error { return _bcdgc.ValidateWithPath("") }

// ValidateWithPath validates the CT_Shape3D and its children, prefixing error messages with path
func (_fefeb *CT_Shape3D) ValidateWithPath(path string) error {
	if _fefeb.ZAttr != nil {
		if _eecceb := _fefeb.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _eecceb != nil {
			return _eecceb
		}
	}
	if _fefeb.ExtrusionHAttr != nil {
		if *_fefeb.ExtrusionHAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002fm\u002e\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefeb.ExtrusionHAttr)
		}
		if *_fefeb.ExtrusionHAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0045\u0078t\u0072\u0075\u0073i\u006f\u006e\u0048A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065 <\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefeb.ExtrusionHAttr)
		}
	}
	if _fefeb.ContourWAttr != nil {
		if *_fefeb.ContourWAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0057\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fefeb.ContourWAttr)
		}
		if *_fefeb.ContourWAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075r\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefeb.ContourWAttr)
		}
	}
	if _ffdef := _fefeb.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _ffdef != nil {
		return _ffdef
	}
	if _fefeb.BevelT != nil {
		if _ffcc := _fefeb.BevelT.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0054"); _ffcc != nil {
			return _ffcc
		}
	}
	if _fefeb.BevelB != nil {
		if _ddfdbd := _fefeb.BevelB.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0042"); _ddfdbd != nil {
			return _ddfdbd
		}
	}
	if _fefeb.ExtrusionClr != nil {
		if _aeddd := _fefeb.ExtrusionClr.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"); _aeddd != nil {
			return _aeddd
		}
	}
	if _fefeb.ContourClr != nil {
		if _adaab := _fefeb.ContourClr.ValidateWithPath(path + "/\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"); _adaab != nil {
			return _adaab
		}
	}
	if _fefeb.ExtLst != nil {
		if _edba := _fefeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edba != nil {
			return _edba
		}
	}
	return nil
}
func (_ccab *CT_PresetTextShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccab.PrstAttr = ST_TextShapeType(1)
	for _, _dbecb := range start.Attr {
		if _dbecb.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ccab.PrstAttr.UnmarshalXMLAttr(_dbecb)
			continue
		}
	}
_gebgcd:
	for {
		_bdfg, _gaebe := d.Token()
		if _gaebe != nil {
			return _gaebe
		}
		switch _bagdc := _bdfg.(type) {
		case _b.StartElement:
			switch _bagdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_ccab.AvLst = NewCT_GeomGuideList()
				if _cgbcd := d.DecodeElement(_ccab.AvLst, &_bagdc); _cgbcd != nil {
					return _cgbcd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074T\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _bagdc.Name)
				if _eccfb := d.Skip(); _eccfb != nil {
					return _eccfb
				}
			}
		case _b.EndElement:
			break _gebgcd
		case _b.CharData:
		}
	}
	return nil
}

type CT_NonVisualGroupDrawingShapeProps struct {
	GrpSpLocks *CT_GroupLocking
	ExtLst     *CT_OfficeArtExtensionList
}

// Validate validates the CT_LineJoinRound and its children
func (_febfb *CT_LineJoinRound) Validate() error {
	return _febfb.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064")
}

// ValidateWithPath validates the CT_TextParagraph and its children, prefixing error messages with path
func (_gedee *CT_TextParagraph) ValidateWithPath(path string) error {
	if _gedee.PPr != nil {
		if _cgdge := _gedee.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _cgdge != nil {
			return _cgdge
		}
	}
	for _afedc, _dfdcc := range _gedee.EG_TextRun {
		if _bgcac := _dfdcc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075n\u005b\u0025\u0064\u005d", path, _afedc)); _bgcac != nil {
			return _bgcac
		}
	}
	if _gedee.EndParaRPr != nil {
		if _dbebf := _gedee.EndParaRPr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"); _dbebf != nil {
			return _dbebf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationDgmBuildProperties and its children, prefixing error messages with path
func (_dda *CT_AnimationDgmBuildProperties) ValidateWithPath(path string) error {
	if _dda.BldAttr != nil {
		if _gadf := _dda.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _gadf != nil {
			return _gadf
		}
	}
	return nil
}

const (
	ST_PresetShadowValUnset  ST_PresetShadowVal = 0
	ST_PresetShadowValShdw1  ST_PresetShadowVal = 1
	ST_PresetShadowValShdw2  ST_PresetShadowVal = 2
	ST_PresetShadowValShdw3  ST_PresetShadowVal = 3
	ST_PresetShadowValShdw4  ST_PresetShadowVal = 4
	ST_PresetShadowValShdw5  ST_PresetShadowVal = 5
	ST_PresetShadowValShdw6  ST_PresetShadowVal = 6
	ST_PresetShadowValShdw7  ST_PresetShadowVal = 7
	ST_PresetShadowValShdw8  ST_PresetShadowVal = 8
	ST_PresetShadowValShdw9  ST_PresetShadowVal = 9
	ST_PresetShadowValShdw10 ST_PresetShadowVal = 10
	ST_PresetShadowValShdw11 ST_PresetShadowVal = 11
	ST_PresetShadowValShdw12 ST_PresetShadowVal = 12
	ST_PresetShadowValShdw13 ST_PresetShadowVal = 13
	ST_PresetShadowValShdw14 ST_PresetShadowVal = 14
	ST_PresetShadowValShdw15 ST_PresetShadowVal = 15
	ST_PresetShadowValShdw16 ST_PresetShadowVal = 16
	ST_PresetShadowValShdw17 ST_PresetShadowVal = 17
	ST_PresetShadowValShdw18 ST_PresetShadowVal = 18
	ST_PresetShadowValShdw19 ST_PresetShadowVal = 19
	ST_PresetShadowValShdw20 ST_PresetShadowVal = 20
)

func (_cecfa *EG_FillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cecfa.NoFill != nil {
		_ecbabf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cecfa.NoFill, _ecbabf)
	}
	if _cecfa.SolidFill != nil {
		_gfafg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cecfa.SolidFill, _gfafg)
	}
	if _cecfa.GradFill != nil {
		_aadeff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cecfa.GradFill, _aadeff)
	}
	if _cecfa.BlipFill != nil {
		_abbcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cecfa.BlipFill, _abbcf)
	}
	if _cecfa.PattFill != nil {
		_deaad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cecfa.PattFill, _deaad)
	}
	if _cecfa.GrpFill != nil {
		_geac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cecfa.GrpFill, _geac)
	}
	return nil
}
func (_bbca ST_SystemColorVal) Validate() error { return _bbca.ValidateWithPath("") }

// Validate validates the CT_TintEffect and its children
func (_ffadd *CT_TintEffect) Validate() error {
	return _ffadd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_eabg *CT_ColorMapping) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eabg.Bg1Attr = ST_ColorSchemeIndex(1)
	_eabg.Tx1Attr = ST_ColorSchemeIndex(1)
	_eabg.Bg2Attr = ST_ColorSchemeIndex(1)
	_eabg.Tx2Attr = ST_ColorSchemeIndex(1)
	_eabg.Accent1Attr = ST_ColorSchemeIndex(1)
	_eabg.Accent2Attr = ST_ColorSchemeIndex(1)
	_eabg.Accent3Attr = ST_ColorSchemeIndex(1)
	_eabg.Accent4Attr = ST_ColorSchemeIndex(1)
	_eabg.Accent5Attr = ST_ColorSchemeIndex(1)
	_eabg.Accent6Attr = ST_ColorSchemeIndex(1)
	_eabg.HlinkAttr = ST_ColorSchemeIndex(1)
	_eabg.FolHlinkAttr = ST_ColorSchemeIndex(1)
	for _, _fbdc := range start.Attr {
		if _fbdc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0033" {
			_eabg.Accent3Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0074\u0078\u0031" {
			_eabg.Tx1Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0062\u0067\u0032" {
			_eabg.Bg2Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0074\u0078\u0032" {
			_eabg.Tx2Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0031" {
			_eabg.Accent1Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0032" {
			_eabg.Accent2Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0062\u0067\u0031" {
			_eabg.Bg1Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0034" {
			_eabg.Accent4Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0035" {
			_eabg.Accent5Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0036" {
			_eabg.Accent6Attr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0068\u006c\u0069n\u006b" {
			_eabg.HlinkAttr.UnmarshalXMLAttr(_fbdc)
			continue
		}
		if _fbdc.Name.Local == "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b" {
			_eabg.FolHlinkAttr.UnmarshalXMLAttr(_fbdc)
			continue
		}
	}
_ggab:
	for {
		_cfgfa, _fbcc := d.Token()
		if _fbcc != nil {
			return _fbcc
		}
		switch _ddef := _cfgfa.(type) {
		case _b.StartElement:
			switch _ddef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eabg.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbfe := d.DecodeElement(_eabg.ExtLst, &_ddef); _cbfe != nil {
					return _cbfe
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006co\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u0020\u0025\u0076", _ddef.Name)
				if _ddag := d.Skip(); _ddag != nil {
					return _ddag
				}
			}
		case _b.EndElement:
			break _ggab
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_PresetColor() *CT_PresetColor {
	_dcdeg := &CT_PresetColor{}
	_dcdeg.ValAttr = ST_PresetColorVal(1)
	return _dcdeg
}
func (_aeggfe *EG_TextUnderlineFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aeggfe.UFillTx != nil {
		_dcgg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_aeggfe.UFillTx, _dcgg)
	}
	if _aeggfe.UFill != nil {
		_abdgeg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aeggfe.UFill, _abdgeg)
	}
	return nil
}
func (_ccdcb *CT_VideoFile) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _ccdcb.LinkAttr)})
	if _ccdcb.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_ccdcb.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _ccdcb.ExtLst != nil {
		_egbeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccdcb.ExtLst, _egbeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eeaa *CT_FontReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeaa.IdxAttr = ST_FontCollectionIndex(1)
	for _, _gfdbc := range start.Attr {
		if _gfdbc.Name.Local == "\u0069\u0064\u0078" {
			_eeaa.IdxAttr.UnmarshalXMLAttr(_gfdbc)
			continue
		}
	}
_ebbea:
	for {
		_gfee, _gdfc := d.Token()
		if _gdfc != nil {
			return _gdfc
		}
		switch _gfea := _gfee.(type) {
		case _b.StartElement:
			switch _gfea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eeaa.ScrgbClr = NewCT_ScRgbColor()
				if _gfcg := d.DecodeElement(_eeaa.ScrgbClr, &_gfea); _gfcg != nil {
					return _gfcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eeaa.SrgbClr = NewCT_SRgbColor()
				if _gbfd := d.DecodeElement(_eeaa.SrgbClr, &_gfea); _gbfd != nil {
					return _gbfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_eeaa.HslClr = NewCT_HslColor()
				if _cebe := d.DecodeElement(_eeaa.HslClr, &_gfea); _cebe != nil {
					return _cebe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eeaa.SysClr = NewCT_SystemColor()
				if _cdbfg := d.DecodeElement(_eeaa.SysClr, &_gfea); _cdbfg != nil {
					return _cdbfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eeaa.SchemeClr = NewCT_SchemeColor()
				if _faed := d.DecodeElement(_eeaa.SchemeClr, &_gfea); _faed != nil {
					return _faed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eeaa.PrstClr = NewCT_PresetColor()
				if _ceeda := d.DecodeElement(_eeaa.PrstClr, &_gfea); _ceeda != nil {
					return _ceeda
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025v", _gfea.Name)
				if _ebefa := d.Skip(); _ebefa != nil {
					return _ebefa
				}
			}
		case _b.EndElement:
			break _ebbea
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Path2DCubicBezierTo and its children
func (_geafaf *CT_Path2DCubicBezierTo) Validate() error {
	return _geafaf.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f")
}

// ValidateWithPath validates the CT_PositiveFixedAngle and its children, prefixing error messages with path
func (_geaacc *CT_PositiveFixedAngle) ValidateWithPath(path string) error {
	if _geaacc.ValAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _geaacc.ValAttr)
	}
	if _geaacc.ValAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eV\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _geaacc.ValAttr)
	}
	return nil
}

type CT_PathShadeProperties struct {
	PathAttr   ST_PathShadeType
	FillToRect *CT_RelativeRect
}

func NewCT_TableCellBorderStyle() *CT_TableCellBorderStyle {
	_bgcbd := &CT_TableCellBorderStyle{}
	return _bgcbd
}

type CT_Hyperlink struct {
	IdAttr             *string
	InvalidUrlAttr     *string
	ActionAttr         *string
	TgtFrameAttr       *string
	TooltipAttr        *string
	HistoryAttr        *bool
	HighlightClickAttr *bool
	EndSndAttr         *bool
	Snd                *CT_EmbeddedWAVAudioFile
	ExtLst             *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_LinearShadeProperties and its children, prefixing error messages with path
func (_bccb *CT_LinearShadeProperties) ValidateWithPath(path string) error {
	if _bccb.AngAttr != nil {
		if *_bccb.AngAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0041\u006eg\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_bccb.AngAttr)
		}
		if *_bccb.AngAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eA\u006e\u0067\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bccb.AngAttr)
		}
	}
	return nil
}

type ST_TextUnderlineType byte

func NewCT_SchemeColor() *CT_SchemeColor {
	_fbafa := &CT_SchemeColor{}
	_fbafa.ValAttr = ST_SchemeColorVal(1)
	return _fbafa
}

// Validate validates the CT_NonVisualGroupDrawingShapeProps and its children
func (_cgddb *CT_NonVisualGroupDrawingShapeProps) Validate() error {
	return _cgddb.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073")
}
func (_agdfcc *CT_Path2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agdfcc.WAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", *_agdfcc.WAttr)})
	}
	if _agdfcc.HAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _bb.Sprintf("\u0025\u0076", *_agdfcc.HAttr)})
	}
	if _agdfcc.FillAttr != ST_PathFillModeUnset {
		_bgeaf, _fedbe := _agdfcc.FillAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _fedbe != nil {
			return _fedbe
		}
		start.Attr = append(start.Attr, _bgeaf)
	}
	if _agdfcc.StrokeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072\u006f\u006b\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_agdfcc.StrokeAttr))})
	}
	if _agdfcc.ExtrusionOkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_agdfcc.ExtrusionOkAttr))})
	}
	e.EncodeToken(start)
	if _agdfcc.Close != nil {
		_fccbc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u006c\u006f\u0073\u0065"}}
		for _, _eaff := range _agdfcc.Close {
			e.EncodeElement(_eaff, _fccbc)
		}
	}
	if _agdfcc.MoveTo != nil {
		_accf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006d\u006f\u0076\u0065\u0054\u006f"}}
		for _, _egfdf := range _agdfcc.MoveTo {
			e.EncodeElement(_egfdf, _accf)
		}
	}
	if _agdfcc.LnTo != nil {
		_geede := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006f"}}
		for _, _gdeggd := range _agdfcc.LnTo {
			e.EncodeElement(_gdeggd, _geede)
		}
	}
	if _agdfcc.ArcTo != nil {
		_gfbcd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0072\u0063\u0054\u006f"}}
		for _, _caae := range _agdfcc.ArcTo {
			e.EncodeElement(_caae, _gfbcd)
		}
	}
	if _agdfcc.QuadBezTo != nil {
		_adgg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0071\u0075\u0061\u0064\u0042\u0065\u007a\u0054\u006f"}}
		for _, _caga := range _agdfcc.QuadBezTo {
			e.EncodeElement(_caga, _adgg)
		}
	}
	if _agdfcc.CubicBezTo != nil {
		_aabb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063u\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}}
		for _, _aabab := range _agdfcc.CubicBezTo {
			e.EncodeElement(_aabab, _aabb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RelativeOffsetEffect() *CT_RelativeOffsetEffect {
	_bgbaea := &CT_RelativeOffsetEffect{}
	return _bgbaea
}
func (_bgfeg *CT_Hyperlink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccgea := range start.Attr {
		if _ccgea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccgea.Name.Local == "\u0069\u0064" || _ccgea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ccgea.Name.Local == "\u0069\u0064" {
			_aaacbf, _fgcec := _ccgea.Value, error(nil)
			if _fgcec != nil {
				return _fgcec
			}
			_bgfeg.IdAttr = &_aaacbf
			continue
		}
		if _ccgea.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c" {
			_baagd, _fggf := _ccgea.Value, error(nil)
			if _fggf != nil {
				return _fggf
			}
			_bgfeg.InvalidUrlAttr = &_baagd
			continue
		}
		if _ccgea.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_ggaba, _fabgc := _ccgea.Value, error(nil)
			if _fabgc != nil {
				return _fabgc
			}
			_bgfeg.ActionAttr = &_ggaba
			continue
		}
		if _ccgea.Name.Local == "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065" {
			_fbdf, _feecf := _ccgea.Value, error(nil)
			if _feecf != nil {
				return _feecf
			}
			_bgfeg.TgtFrameAttr = &_fbdf
			continue
		}
		if _ccgea.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_fgfdb, _afgfd := _ccgea.Value, error(nil)
			if _afgfd != nil {
				return _afgfd
			}
			_bgfeg.TooltipAttr = &_fgfdb
			continue
		}
		if _ccgea.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_aefg, _eabec := _a.ParseBool(_ccgea.Value)
			if _eabec != nil {
				return _eabec
			}
			_bgfeg.HistoryAttr = &_aefg
			continue
		}
		if _ccgea.Name.Local == "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b" {
			_cgcf, _cfaa := _a.ParseBool(_ccgea.Value)
			if _cfaa != nil {
				return _cfaa
			}
			_bgfeg.HighlightClickAttr = &_cgcf
			continue
		}
		if _ccgea.Name.Local == "\u0065\u006e\u0064\u0053\u006e\u0064" {
			_eadfe, _fcebb := _a.ParseBool(_ccgea.Value)
			if _fcebb != nil {
				return _fcebb
			}
			_bgfeg.EndSndAttr = &_eadfe
			continue
		}
	}
_gbbe:
	for {
		_fccea, _gade := d.Token()
		if _gade != nil {
			return _gade
		}
		switch _eabea := _fccea.(type) {
		case _b.StartElement:
			switch _eabea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				_bgfeg.Snd = NewCT_EmbeddedWAVAudioFile()
				if _abgcb := d.DecodeElement(_bgfeg.Snd, &_eabea); _abgcb != nil {
					return _abgcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgfeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _abeba := d.DecodeElement(_bgfeg.ExtLst, &_eabea); _abeba != nil {
					return _abeba
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_H\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u0020\u0025\u0076", _eabea.Name)
				if _aeba := d.Skip(); _aeba != nil {
					return _aeba
				}
			}
		case _b.EndElement:
			break _gbbe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColorReplaceEffect and its children
func (_afbe *CT_ColorReplaceEffect) Validate() error {
	return _afbe.ValidateWithPath("C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_fcbeg *CT_Table) ValidateWithPath(path string) error {
	if _fcbeg.TblPr != nil {
		if _cffgg := _fcbeg.TblPr.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0050\u0072"); _cffgg != nil {
			return _cffgg
		}
	}
	if _ageg := _fcbeg.TblGrid.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0047\u0072\u0069\u0064"); _ageg != nil {
		return _ageg
	}
	for _dfgdc, _cgfgg := range _fcbeg.Tr {
		if _eggba := _cgfgg.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _dfgdc)); _eggba != nil {
			return _eggba
		}
	}
	return nil
}
func NewEG_Media() *EG_Media { _bbafc := &EG_Media{}; return _bbafc }

// Validate validates the CT_AlphaModulateFixedEffect and its children
func (_cga *CT_AlphaModulateFixedEffect) Validate() error {
	return _cga.ValidateWithPath("C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_OfficeArtExtension and its children, prefixing error messages with path
func (_efaag *CT_OfficeArtExtension) ValidateWithPath(path string) error { return nil }

type ST_EffectContainerType byte

func (_fegf *CT_GroupTransform2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fegf.RotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_fegf.RotAttr)})
	}
	if _fegf.FlipHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fegf.FlipHAttr))})
	}
	if _fegf.FlipVAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fegf.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _fegf.Off != nil {
		_ecef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_fegf.Off, _ecef)
	}
	if _fegf.Ext != nil {
		_ecgca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_fegf.Ext, _ecgca)
	}
	if _fegf.ChOff != nil {
		_cbdd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u0068\u004f\u0066\u0066"}}
		e.EncodeElement(_fegf.ChOff, _cbdd)
	}
	if _fegf.ChExt != nil {
		_bcfb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u0068\u0045\u0078\u0074"}}
		e.EncodeElement(_fegf.ChExt, _bcfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func ParseStdlibTime(s string) (_ea.Time, error) { return _ea.Time{}, nil }
func (_bdebag *CT_GvmlGroupShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdebag.CNvPr = NewCT_NonVisualDrawingProps()
	_bdebag.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
_dbbgf:
	for {
		_deeg, _aadgg := d.Token()
		if _aadgg != nil {
			return _aadgg
		}
		switch _gcfea := _deeg.(type) {
		case _b.StartElement:
			switch _gcfea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _eefbd := d.DecodeElement(_bdebag.CNvPr, &_gcfea); _eefbd != nil {
					return _eefbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _cdgb := d.DecodeElement(_bdebag.CNvGrpSpPr, &_gcfea); _cdgb != nil {
					return _cdgb
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0047\u0076m\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gcfea.Name)
				if _dafdd := d.Skip(); _dafdd != nil {
					return _dafdd
				}
			}
		case _b.EndElement:
			break _dbbgf
		case _b.CharData:
		}
	}
	return nil
}
func (_bfggb ST_TextFontScalePercentOrPercentString) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bfggb.ST_TextFontScalePercent != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_bfggb.ST_TextFontScalePercent)))
	}
	if _bfggb.ST_Percentage != nil {
		e.EncodeToken(_b.CharData(*_bfggb.ST_Percentage))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

type CT_HSLEffect struct {
	HueAttr *int32
	SatAttr *ST_FixedPercentage
	LumAttr *ST_FixedPercentage
}

func (_ecgfd ST_TextTabAlignType) String() string {
	switch _ecgfd {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064\u0065\u0063"
	}
	return ""
}

// Validate validates the CT_GvmlConnector and its children
func (_dggbb *CT_GvmlConnector) Validate() error {
	return _dggbb.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func (_adagc ST_BevelPresetType) ValidateWithPath(path string) error {
	switch _adagc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adagc))
	}
	return nil
}
func NewCT_FlatText() *CT_FlatText { _baaa := &CT_FlatText{}; return _baaa }

// ValidateWithPath validates the CT_Path2DLineTo and its children, prefixing error messages with path
func (_dgffd *CT_Path2DLineTo) ValidateWithPath(path string) error {
	if _gaea := _dgffd.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _gaea != nil {
		return _gaea
	}
	return nil
}
func NewCT_InverseTransform() *CT_InverseTransform { _adaeb := &CT_InverseTransform{}; return _adaeb }

// Validate validates the CT_PositiveFixedPercentage and its children
func (_fabed *CT_PositiveFixedPercentage) Validate() error {
	return _fabed.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
}

// Validate validates the CT_AdjustHandleList and its children
func (_ced *CT_AdjustHandleList) Validate() error {
	return _ced.ValidateWithPath("\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074")
}
func (_ddaee *ST_TextWrappingType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccdge, _cfaca := d.Token()
	if _cfaca != nil {
		return _cfaca
	}
	if _gebbb, _egaeg := _ccdge.(_b.EndElement); _egaeg && _gebbb.Name == start.Name {
		*_ddaee = 1
		return nil
	}
	if _cgdea, _ccegdf := _ccdge.(_b.CharData); !_ccegdf {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccdge)
	} else {
		switch string(_cgdea) {
		case "":
			*_ddaee = 0
		case "\u006e\u006f\u006e\u0065":
			*_ddaee = 1
		case "\u0073\u0071\u0075\u0061\u0072\u0065":
			*_ddaee = 2
		}
	}
	_ccdge, _cfaca = d.Token()
	if _cfaca != nil {
		return _cfaca
	}
	if _ggafeg, _accbfd := _ccdge.(_b.EndElement); _accbfd && _ggafeg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccdge)
}

type CT_TableRow struct {
	HAttr  ST_Coordinate
	Tc     []*CT_TableCell
	ExtLst *CT_OfficeArtExtensionList
}
type CT_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }
type CT_PresetColor struct {
	ValAttr           ST_PresetColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func (_bffba ST_RectAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_geeag := _b.Attr{}
	_geeag.Name = name
	switch _bffba {
	case ST_RectAlignmentUnset:
		_geeag.Value = ""
	case ST_RectAlignmentTl:
		_geeag.Value = "\u0074\u006c"
	case ST_RectAlignmentT:
		_geeag.Value = "\u0074"
	case ST_RectAlignmentTr:
		_geeag.Value = "\u0074\u0072"
	case ST_RectAlignmentL:
		_geeag.Value = "\u006c"
	case ST_RectAlignmentCtr:
		_geeag.Value = "\u0063\u0074\u0072"
	case ST_RectAlignmentR:
		_geeag.Value = "\u0072"
	case ST_RectAlignmentBl:
		_geeag.Value = "\u0062\u006c"
	case ST_RectAlignmentB:
		_geeag.Value = "\u0062"
	case ST_RectAlignmentBr:
		_geeag.Value = "\u0062\u0072"
	}
	return _geeag, nil
}
func (_dede *ST_AnimationBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbfab, _ddgeg := d.Token()
	if _ddgeg != nil {
		return _ddgeg
	}
	if _efgfbe, _eddgf := _bbfab.(_b.EndElement); _eddgf && _efgfbe.Name == start.Name {
		*_dede = 1
		return nil
	}
	if _bfabcb, _cbgc := _bbfab.(_b.CharData); !_cbgc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbfab)
	} else {
		switch string(_bfabcb) {
		case "":
			*_dede = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_dede = 1
		}
	}
	_bbfab, _ddgeg = d.Token()
	if _ddgeg != nil {
		return _ddgeg
	}
	if _gcbeg, _afecfe := _bbfab.(_b.EndElement); _afecfe && _gcbeg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbfab)
}

// Validate validates the CT_GroupShapeProperties and its children
func (_cagef *CT_GroupShapeProperties) Validate() error {
	return _cagef.ValidateWithPath("\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_CustomColorList() *CT_CustomColorList { _ceagd := &CT_CustomColorList{}; return _ceagd }
func NewEG_ColorChoice() *EG_ColorChoice         { _abfdba := &EG_ColorChoice{}; return _abfdba }
func (_eaggac *EG_EffectProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaggac.EffectLst != nil {
		_facdc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eaggac.EffectLst, _facdc)
	}
	if _eaggac.EffectDag != nil {
		_dbbfe := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_eaggac.EffectDag, _dbbfe)
	}
	return nil
}
func (_cfcbb ST_LineEndType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfcbb.String(), start)
}

// Validate validates the CT_GvmlTextShape and its children
func (_cdec *CT_GvmlTextShape) Validate() error {
	return _cdec.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065")
}

type CT_GvmlPictureNonVisual struct {
	CNvPr    *CT_NonVisualDrawingProps
	CNvPicPr *CT_NonVisualPictureProperties
}

func (_bgbece ST_TextTabAlignType) ValidateWithPath(path string) error {
	switch _bgbece {
	case 0, 1, 2, 3, 4:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgbece))
	}
	return nil
}

const (
	ST_TextWrappingTypeUnset  ST_TextWrappingType = 0
	ST_TextWrappingTypeNone   ST_TextWrappingType = 1
	ST_TextWrappingTypeSquare ST_TextWrappingType = 2
)

// ValidateWithPath validates the CT_NonVisualDrawingShapeProps and its children, prefixing error messages with path
func (_ebbdd *CT_NonVisualDrawingShapeProps) ValidateWithPath(path string) error {
	if _ebbdd.SpLocks != nil {
		if _bededa := _ebbdd.SpLocks.ValidateWithPath(path + "\u002f\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _bededa != nil {
			return _bededa
		}
	}
	if _ebbdd.ExtLst != nil {
		if _gbbbg := _ebbdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbbbg != nil {
			return _gbbbg
		}
	}
	return nil
}

type CT_StyleMatrixReference struct {
	IdxAttr   uint32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}
type CT_TransformEffect struct {
	SxAttr *ST_Percentage
	SyAttr *ST_Percentage
	KxAttr *int32
	KyAttr *int32
	TxAttr *ST_Coordinate
	TyAttr *ST_Coordinate
}

// Validate validates the CT_ScRgbColor and its children
func (_fbdab *CT_ScRgbColor) Validate() error {
	return _fbdab.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func (_geegd *ST_LineCap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbfae, _aeadb := d.Token()
	if _aeadb != nil {
		return _aeadb
	}
	if _dcccf, _cedea := _dbfae.(_b.EndElement); _cedea && _dcccf.Name == start.Name {
		*_geegd = 1
		return nil
	}
	if _dcecg, _bbbed := _dbfae.(_b.CharData); !_bbbed {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbfae)
	} else {
		switch string(_dcecg) {
		case "":
			*_geegd = 0
		case "\u0072\u006e\u0064":
			*_geegd = 1
		case "\u0073\u0071":
			*_geegd = 2
		case "\u0066\u006c\u0061\u0074":
			*_geegd = 3
		}
	}
	_dbfae, _aeadb = d.Token()
	if _aeadb != nil {
		return _aeadb
	}
	if _geeaa, _gaefe := _dbfae.(_b.EndElement); _gaefe && _geeaa.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbfae)
}
func (_fegdg *CT_TintEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fegdg.HueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0075\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_fegdg.HueAttr)})
	}
	if _fegdg.AmtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006d\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_fegdg.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_AdjustHandleList struct {
	AhXY    []*CT_XYAdjustHandle
	AhPolar []*CT_PolarAdjustHandle
}

func (_bgcab ST_LineEndLength) String() string {
	switch _bgcab {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}
func (_fffge *CT_TextBulletSizePoint) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fffge.ValAttr = 100
	for _, _edafb := range start.Attr {
		if _edafb.Name.Local == "\u0076\u0061\u006c" {
			_ddfee, _aagag := _a.ParseInt(_edafb.Value, 10, 32)
			if _aagag != nil {
				return _aagag
			}
			_fffge.ValAttr = int32(_ddfee)
			continue
		}
	}
	for {
		_ccebb, _fbcdc := d.Token()
		if _fbcdc != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0042u\u006cl\u0065t\u0053\u0069\u007a\u0065\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _fbcdc)
		}
		if _bcfae, _edagg := _ccebb.(_b.EndElement); _edagg && _bcfae.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FillOverlayEffect struct {
	BlendAttr ST_BlendMode
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}
type CT_TextSpacingPercent struct {
	ValAttr ST_TextSpacingPercentOrPercentString
}

func (_gbddf *CT_TextTabStop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfffd := range start.Attr {
		if _gfffd.Name.Local == "\u0070\u006f\u0073" {
			_eagg, _adag := ParseUnionST_Coordinate32(_gfffd.Value)
			if _adag != nil {
				return _adag
			}
			_gbddf.PosAttr = &_eagg
			continue
		}
		if _gfffd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_gbddf.AlgnAttr.UnmarshalXMLAttr(_gfffd)
			continue
		}
	}
	for {
		_bdbec, _aabdf := d.Token()
		if _aabdf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0065\u0078\u0074\u0054\u0061\u0062\u0053\u0074\u006f\u0070:\u0020\u0025\u0073", _aabdf)
		}
		if _bccbe, _bdfdf := _bdbec.(_b.EndElement); _bdfdf && _bccbe.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PresetColorValUnset                ST_PresetColorVal = 0
	ST_PresetColorValAliceBlue            ST_PresetColorVal = 1
	ST_PresetColorValAntiqueWhite         ST_PresetColorVal = 2
	ST_PresetColorValAqua                 ST_PresetColorVal = 3
	ST_PresetColorValAquamarine           ST_PresetColorVal = 4
	ST_PresetColorValAzure                ST_PresetColorVal = 5
	ST_PresetColorValBeige                ST_PresetColorVal = 6
	ST_PresetColorValBisque               ST_PresetColorVal = 7
	ST_PresetColorValBlack                ST_PresetColorVal = 8
	ST_PresetColorValBlanchedAlmond       ST_PresetColorVal = 9
	ST_PresetColorValBlue                 ST_PresetColorVal = 10
	ST_PresetColorValBlueViolet           ST_PresetColorVal = 11
	ST_PresetColorValBrown                ST_PresetColorVal = 12
	ST_PresetColorValBurlyWood            ST_PresetColorVal = 13
	ST_PresetColorValCadetBlue            ST_PresetColorVal = 14
	ST_PresetColorValChartreuse           ST_PresetColorVal = 15
	ST_PresetColorValChocolate            ST_PresetColorVal = 16
	ST_PresetColorValCoral                ST_PresetColorVal = 17
	ST_PresetColorValCornflowerBlue       ST_PresetColorVal = 18
	ST_PresetColorValCornsilk             ST_PresetColorVal = 19
	ST_PresetColorValCrimson              ST_PresetColorVal = 20
	ST_PresetColorValCyan                 ST_PresetColorVal = 21
	ST_PresetColorValDarkBlue             ST_PresetColorVal = 22
	ST_PresetColorValDarkCyan             ST_PresetColorVal = 23
	ST_PresetColorValDarkGoldenrod        ST_PresetColorVal = 24
	ST_PresetColorValDarkGray             ST_PresetColorVal = 25
	ST_PresetColorValDarkGrey             ST_PresetColorVal = 26
	ST_PresetColorValDarkGreen            ST_PresetColorVal = 27
	ST_PresetColorValDarkKhaki            ST_PresetColorVal = 28
	ST_PresetColorValDarkMagenta          ST_PresetColorVal = 29
	ST_PresetColorValDarkOliveGreen       ST_PresetColorVal = 30
	ST_PresetColorValDarkOrange           ST_PresetColorVal = 31
	ST_PresetColorValDarkOrchid           ST_PresetColorVal = 32
	ST_PresetColorValDarkRed              ST_PresetColorVal = 33
	ST_PresetColorValDarkSalmon           ST_PresetColorVal = 34
	ST_PresetColorValDarkSeaGreen         ST_PresetColorVal = 35
	ST_PresetColorValDarkSlateBlue        ST_PresetColorVal = 36
	ST_PresetColorValDarkSlateGray        ST_PresetColorVal = 37
	ST_PresetColorValDarkSlateGrey        ST_PresetColorVal = 38
	ST_PresetColorValDarkTurquoise        ST_PresetColorVal = 39
	ST_PresetColorValDarkViolet           ST_PresetColorVal = 40
	ST_PresetColorValDkBlue               ST_PresetColorVal = 41
	ST_PresetColorValDkCyan               ST_PresetColorVal = 42
	ST_PresetColorValDkGoldenrod          ST_PresetColorVal = 43
	ST_PresetColorValDkGray               ST_PresetColorVal = 44
	ST_PresetColorValDkGrey               ST_PresetColorVal = 45
	ST_PresetColorValDkGreen              ST_PresetColorVal = 46
	ST_PresetColorValDkKhaki              ST_PresetColorVal = 47
	ST_PresetColorValDkMagenta            ST_PresetColorVal = 48
	ST_PresetColorValDkOliveGreen         ST_PresetColorVal = 49
	ST_PresetColorValDkOrange             ST_PresetColorVal = 50
	ST_PresetColorValDkOrchid             ST_PresetColorVal = 51
	ST_PresetColorValDkRed                ST_PresetColorVal = 52
	ST_PresetColorValDkSalmon             ST_PresetColorVal = 53
	ST_PresetColorValDkSeaGreen           ST_PresetColorVal = 54
	ST_PresetColorValDkSlateBlue          ST_PresetColorVal = 55
	ST_PresetColorValDkSlateGray          ST_PresetColorVal = 56
	ST_PresetColorValDkSlateGrey          ST_PresetColorVal = 57
	ST_PresetColorValDkTurquoise          ST_PresetColorVal = 58
	ST_PresetColorValDkViolet             ST_PresetColorVal = 59
	ST_PresetColorValDeepPink             ST_PresetColorVal = 60
	ST_PresetColorValDeepSkyBlue          ST_PresetColorVal = 61
	ST_PresetColorValDimGray              ST_PresetColorVal = 62
	ST_PresetColorValDimGrey              ST_PresetColorVal = 63
	ST_PresetColorValDodgerBlue           ST_PresetColorVal = 64
	ST_PresetColorValFirebrick            ST_PresetColorVal = 65
	ST_PresetColorValFloralWhite          ST_PresetColorVal = 66
	ST_PresetColorValForestGreen          ST_PresetColorVal = 67
	ST_PresetColorValFuchsia              ST_PresetColorVal = 68
	ST_PresetColorValGainsboro            ST_PresetColorVal = 69
	ST_PresetColorValGhostWhite           ST_PresetColorVal = 70
	ST_PresetColorValGold                 ST_PresetColorVal = 71
	ST_PresetColorValGoldenrod            ST_PresetColorVal = 72
	ST_PresetColorValGray                 ST_PresetColorVal = 73
	ST_PresetColorValGrey                 ST_PresetColorVal = 74
	ST_PresetColorValGreen                ST_PresetColorVal = 75
	ST_PresetColorValGreenYellow          ST_PresetColorVal = 76
	ST_PresetColorValHoneydew             ST_PresetColorVal = 77
	ST_PresetColorValHotPink              ST_PresetColorVal = 78
	ST_PresetColorValIndianRed            ST_PresetColorVal = 79
	ST_PresetColorValIndigo               ST_PresetColorVal = 80
	ST_PresetColorValIvory                ST_PresetColorVal = 81
	ST_PresetColorValKhaki                ST_PresetColorVal = 82
	ST_PresetColorValLavender             ST_PresetColorVal = 83
	ST_PresetColorValLavenderBlush        ST_PresetColorVal = 84
	ST_PresetColorValLawnGreen            ST_PresetColorVal = 85
	ST_PresetColorValLemonChiffon         ST_PresetColorVal = 86
	ST_PresetColorValLightBlue            ST_PresetColorVal = 87
	ST_PresetColorValLightCoral           ST_PresetColorVal = 88
	ST_PresetColorValLightCyan            ST_PresetColorVal = 89
	ST_PresetColorValLightGoldenrodYellow ST_PresetColorVal = 90
	ST_PresetColorValLightGray            ST_PresetColorVal = 91
	ST_PresetColorValLightGrey            ST_PresetColorVal = 92
	ST_PresetColorValLightGreen           ST_PresetColorVal = 93
	ST_PresetColorValLightPink            ST_PresetColorVal = 94
	ST_PresetColorValLightSalmon          ST_PresetColorVal = 95
	ST_PresetColorValLightSeaGreen        ST_PresetColorVal = 96
	ST_PresetColorValLightSkyBlue         ST_PresetColorVal = 97
	ST_PresetColorValLightSlateGray       ST_PresetColorVal = 98
	ST_PresetColorValLightSlateGrey       ST_PresetColorVal = 99
	ST_PresetColorValLightSteelBlue       ST_PresetColorVal = 100
	ST_PresetColorValLightYellow          ST_PresetColorVal = 101
	ST_PresetColorValLtBlue               ST_PresetColorVal = 102
	ST_PresetColorValLtCoral              ST_PresetColorVal = 103
	ST_PresetColorValLtCyan               ST_PresetColorVal = 104
	ST_PresetColorValLtGoldenrodYellow    ST_PresetColorVal = 105
	ST_PresetColorValLtGray               ST_PresetColorVal = 106
	ST_PresetColorValLtGrey               ST_PresetColorVal = 107
	ST_PresetColorValLtGreen              ST_PresetColorVal = 108
	ST_PresetColorValLtPink               ST_PresetColorVal = 109
	ST_PresetColorValLtSalmon             ST_PresetColorVal = 110
	ST_PresetColorValLtSeaGreen           ST_PresetColorVal = 111
	ST_PresetColorValLtSkyBlue            ST_PresetColorVal = 112
	ST_PresetColorValLtSlateGray          ST_PresetColorVal = 113
	ST_PresetColorValLtSlateGrey          ST_PresetColorVal = 114
	ST_PresetColorValLtSteelBlue          ST_PresetColorVal = 115
	ST_PresetColorValLtYellow             ST_PresetColorVal = 116
	ST_PresetColorValLime                 ST_PresetColorVal = 117
	ST_PresetColorValLimeGreen            ST_PresetColorVal = 118
	ST_PresetColorValLinen                ST_PresetColorVal = 119
	ST_PresetColorValMagenta              ST_PresetColorVal = 120
	ST_PresetColorValMaroon               ST_PresetColorVal = 121
	ST_PresetColorValMedAquamarine        ST_PresetColorVal = 122
	ST_PresetColorValMedBlue              ST_PresetColorVal = 123
	ST_PresetColorValMedOrchid            ST_PresetColorVal = 124
	ST_PresetColorValMedPurple            ST_PresetColorVal = 125
	ST_PresetColorValMedSeaGreen          ST_PresetColorVal = 126
	ST_PresetColorValMedSlateBlue         ST_PresetColorVal = 127
	ST_PresetColorValMedSpringGreen       ST_PresetColorVal = 128
	ST_PresetColorValMedTurquoise         ST_PresetColorVal = 129
	ST_PresetColorValMedVioletRed         ST_PresetColorVal = 130
	ST_PresetColorValMediumAquamarine     ST_PresetColorVal = 131
	ST_PresetColorValMediumBlue           ST_PresetColorVal = 132
	ST_PresetColorValMediumOrchid         ST_PresetColorVal = 133
	ST_PresetColorValMediumPurple         ST_PresetColorVal = 134
	ST_PresetColorValMediumSeaGreen       ST_PresetColorVal = 135
	ST_PresetColorValMediumSlateBlue      ST_PresetColorVal = 136
	ST_PresetColorValMediumSpringGreen    ST_PresetColorVal = 137
	ST_PresetColorValMediumTurquoise      ST_PresetColorVal = 138
	ST_PresetColorValMediumVioletRed      ST_PresetColorVal = 139
	ST_PresetColorValMidnightBlue         ST_PresetColorVal = 140
	ST_PresetColorValMintCream            ST_PresetColorVal = 141
	ST_PresetColorValMistyRose            ST_PresetColorVal = 142
	ST_PresetColorValMoccasin             ST_PresetColorVal = 143
	ST_PresetColorValNavajoWhite          ST_PresetColorVal = 144
	ST_PresetColorValNavy                 ST_PresetColorVal = 145
	ST_PresetColorValOldLace              ST_PresetColorVal = 146
	ST_PresetColorValOlive                ST_PresetColorVal = 147
	ST_PresetColorValOliveDrab            ST_PresetColorVal = 148
	ST_PresetColorValOrange               ST_PresetColorVal = 149
	ST_PresetColorValOrangeRed            ST_PresetColorVal = 150
	ST_PresetColorValOrchid               ST_PresetColorVal = 151
	ST_PresetColorValPaleGoldenrod        ST_PresetColorVal = 152
	ST_PresetColorValPaleGreen            ST_PresetColorVal = 153
	ST_PresetColorValPaleTurquoise        ST_PresetColorVal = 154
	ST_PresetColorValPaleVioletRed        ST_PresetColorVal = 155
	ST_PresetColorValPapayaWhip           ST_PresetColorVal = 156
	ST_PresetColorValPeachPuff            ST_PresetColorVal = 157
	ST_PresetColorValPeru                 ST_PresetColorVal = 158
	ST_PresetColorValPink                 ST_PresetColorVal = 159
	ST_PresetColorValPlum                 ST_PresetColorVal = 160
	ST_PresetColorValPowderBlue           ST_PresetColorVal = 161
	ST_PresetColorValPurple               ST_PresetColorVal = 162
	ST_PresetColorValRed                  ST_PresetColorVal = 163
	ST_PresetColorValRosyBrown            ST_PresetColorVal = 164
	ST_PresetColorValRoyalBlue            ST_PresetColorVal = 165
	ST_PresetColorValSaddleBrown          ST_PresetColorVal = 166
	ST_PresetColorValSalmon               ST_PresetColorVal = 167
	ST_PresetColorValSandyBrown           ST_PresetColorVal = 168
	ST_PresetColorValSeaGreen             ST_PresetColorVal = 169
	ST_PresetColorValSeaShell             ST_PresetColorVal = 170
	ST_PresetColorValSienna               ST_PresetColorVal = 171
	ST_PresetColorValSilver               ST_PresetColorVal = 172
	ST_PresetColorValSkyBlue              ST_PresetColorVal = 173
	ST_PresetColorValSlateBlue            ST_PresetColorVal = 174
	ST_PresetColorValSlateGray            ST_PresetColorVal = 175
	ST_PresetColorValSlateGrey            ST_PresetColorVal = 176
	ST_PresetColorValSnow                 ST_PresetColorVal = 177
	ST_PresetColorValSpringGreen          ST_PresetColorVal = 178
	ST_PresetColorValSteelBlue            ST_PresetColorVal = 179
	ST_PresetColorValTan                  ST_PresetColorVal = 180
	ST_PresetColorValTeal                 ST_PresetColorVal = 181
	ST_PresetColorValThistle              ST_PresetColorVal = 182
	ST_PresetColorValTomato               ST_PresetColorVal = 183
	ST_PresetColorValTurquoise            ST_PresetColorVal = 184
	ST_PresetColorValViolet               ST_PresetColorVal = 185
	ST_PresetColorValWheat                ST_PresetColorVal = 186
	ST_PresetColorValWhite                ST_PresetColorVal = 187
	ST_PresetColorValWhiteSmoke           ST_PresetColorVal = 188
	ST_PresetColorValYellow               ST_PresetColorVal = 189
	ST_PresetColorValYellowGreen          ST_PresetColorVal = 190
)

func NewCT_EffectReference() *CT_EffectReference { _fcde := &CT_EffectReference{}; return _fcde }
func NewCT_TextBody() *CT_TextBody {
	_eegaa := &CT_TextBody{}
	_eegaa.BodyPr = NewCT_TextBodyProperties()
	return _eegaa
}

// ValidateWithPath validates the CT_LineStyleList and its children, prefixing error messages with path
func (_afecdb *CT_LineStyleList) ValidateWithPath(path string) error {
	for _cceg, _dbdfg := range _afecdb.Ln {
		if _dbbdd := _dbdfg.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u004c\u006e\u005b\u0025\u0064]", path, _cceg)); _dbbdd != nil {
			return _dbbdd
		}
	}
	return nil
}
func (_dcgdg *ST_BlipCompression) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcgdg = 0
	case "\u0065\u006d\u0061i\u006c":
		*_dcgdg = 1
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_dcgdg = 2
	case "\u0070\u0072\u0069n\u0074":
		*_dcgdg = 3
	case "\u0068q\u0070\u0072\u0069\u006e\u0074":
		*_dcgdg = 4
	case "\u006e\u006f\u006e\u0065":
		*_dcgdg = 5
	}
	return nil
}
func NewCT_Shape3D() *CT_Shape3D { _deaca := &CT_Shape3D{}; return _deaca }
func (_dceab *CT_Percentage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egcaa := range start.Attr {
		if _egcaa.Name.Local == "\u0076\u0061\u006c" {
			_ecccf, _bgcg := ParseUnionST_Percentage(_egcaa.Value)
			if _bgcg != nil {
				return _bgcg
			}
			_dceab.ValAttr = _ecccf
			continue
		}
	}
	for {
		_fcggg, _fdeeg := d.Token()
		if _fdeeg != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050e\u0072c\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025s", _fdeeg)
		}
		if _gcedf, _ggebg := _fcggg.(_b.EndElement); _ggebg && _gcedf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cagfc *CT_TextCharacterProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caebf := range start.Attr {
		if _caebf.Name.Local == "\u006c\u0061\u006e\u0067" {
			_cfefde, _aafcb := _caebf.Value, error(nil)
			if _aafcb != nil {
				return _aafcb
			}
			_cagfc.LangAttr = &_cfefde
			continue
		}
		if _caebf.Name.Local == "\u0073\u007a" {
			_caebb, _gegd := _a.ParseInt(_caebf.Value, 10, 32)
			if _gegd != nil {
				return _gegd
			}
			_bcgea := int32(_caebb)
			_cagfc.SzAttr = &_bcgea
			continue
		}
		if _caebf.Name.Local == "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069" {
			_ggade, _caace := _a.ParseBool(_caebf.Value)
			if _caace != nil {
				return _caace
			}
			_cagfc.KumimojiAttr = &_ggade
			continue
		}
		if _caebf.Name.Local == "\u0073\u0074\u0072\u0069\u006b\u0065" {
			_cagfc.StrikeAttr.UnmarshalXMLAttr(_caebf)
			continue
		}
		if _caebf.Name.Local == "\u0063\u0061\u0070" {
			_cagfc.CapAttr.UnmarshalXMLAttr(_caebf)
			continue
		}
		if _caebf.Name.Local == "\u0062" {
			_dgbea, _abfcbe := _a.ParseBool(_caebf.Value)
			if _abfcbe != nil {
				return _abfcbe
			}
			_cagfc.BAttr = &_dgbea
			continue
		}
		if _caebf.Name.Local == "\u0069" {
			_bgdde, _edcdb := _a.ParseBool(_caebf.Value)
			if _edcdb != nil {
				return _edcdb
			}
			_cagfc.IAttr = &_bgdde
			continue
		}
		if _caebf.Name.Local == "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e" {
			_cabd, _dgafb := _a.ParseBool(_caebf.Value)
			if _dgafb != nil {
				return _dgafb
			}
			_cagfc.SmtCleanAttr = &_cabd
			continue
		}
		if _caebf.Name.Local == "\u006b\u0065\u0072\u006e" {
			_cdccd, _aeded := _a.ParseInt(_caebf.Value, 10, 32)
			if _aeded != nil {
				return _aeded
			}
			_baaef := int32(_cdccd)
			_cagfc.KernAttr = &_baaef
			continue
		}
		if _caebf.Name.Local == "\u0065\u0072\u0072" {
			_dabfd, _eeggab := _a.ParseBool(_caebf.Value)
			if _eeggab != nil {
				return _eeggab
			}
			_cagfc.ErrAttr = &_dabfd
			continue
		}
		if _caebf.Name.Local == "\u0061l\u0074\u004c\u0061\u006e\u0067" {
			_edecc, _ffcfe := _caebf.Value, error(nil)
			if _ffcfe != nil {
				return _ffcfe
			}
			_cagfc.AltLangAttr = &_edecc
			continue
		}
		if _caebf.Name.Local == "\u006eo\u0050\u0072\u006f\u006f\u0066" {
			_bcdf, _dbfdfd := _a.ParseBool(_caebf.Value)
			if _dbfdfd != nil {
				return _dbfdfd
			}
			_cagfc.NoProofAttr = &_bcdf
			continue
		}
		if _caebf.Name.Local == "\u0075" {
			_cagfc.UAttr.UnmarshalXMLAttr(_caebf)
			continue
		}
		if _caebf.Name.Local == "\u0073\u006d\u0074I\u0064" {
			_ebdae, _ggdg := _a.ParseUint(_caebf.Value, 10, 32)
			if _ggdg != nil {
				return _ggdg
			}
			_ggccf := uint32(_ebdae)
			_cagfc.SmtIdAttr = &_ggccf
			continue
		}
		if _caebf.Name.Local == "\u0073\u0070\u0063" {
			_dfab, _ggadge := ParseUnionST_TextPoint(_caebf.Value)
			if _ggadge != nil {
				return _ggadge
			}
			_cagfc.SpcAttr = &_dfab
			continue
		}
		if _caebf.Name.Local == "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065" {
			_bceg, _bcbeg := ParseUnionST_Percentage(_caebf.Value)
			if _bcbeg != nil {
				return _bcbeg
			}
			_cagfc.BaselineAttr = &_bceg
			continue
		}
		if _caebf.Name.Local == "\u0064\u0069\u0072t\u0079" {
			_fcfca, _fgedf := _a.ParseBool(_caebf.Value)
			if _fgedf != nil {
				return _fgedf
			}
			_cagfc.DirtyAttr = &_fcfca
			continue
		}
		if _caebf.Name.Local == "\u0062\u006d\u006b" {
			_gfeed, _bgadc := _caebf.Value, error(nil)
			if _bgadc != nil {
				return _bgadc
			}
			_cagfc.BmkAttr = &_gfeed
			continue
		}
		if _caebf.Name.Local == "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048" {
			_fagab, _adgbg := _a.ParseBool(_caebf.Value)
			if _adgbg != nil {
				return _adgbg
			}
			_cagfc.NormalizeHAttr = &_fagab
			continue
		}
	}
_bfgge:
	for {
		_cbbcag, _bagea := d.Token()
		if _bagea != nil {
			return _bagea
		}
		switch _eacee := _cbbcag.(type) {
		case _b.StartElement:
			switch _eacee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_cagfc.Ln = NewCT_LineProperties()
				if _afeec := d.DecodeElement(_cagfc.Ln, &_eacee); _afeec != nil {
					return _afeec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cagfc.NoFill = NewCT_NoFillProperties()
				if _eeebg := d.DecodeElement(_cagfc.NoFill, &_eacee); _eeebg != nil {
					return _eeebg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cagfc.SolidFill = NewCT_SolidColorFillProperties()
				if _acbeeb := d.DecodeElement(_cagfc.SolidFill, &_eacee); _acbeeb != nil {
					return _acbeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cagfc.GradFill = NewCT_GradientFillProperties()
				if _gebgca := d.DecodeElement(_cagfc.GradFill, &_eacee); _gebgca != nil {
					return _gebgca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cagfc.BlipFill = NewCT_BlipFillProperties()
				if _eadca := d.DecodeElement(_cagfc.BlipFill, &_eacee); _eadca != nil {
					return _eadca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cagfc.PattFill = NewCT_PatternFillProperties()
				if _gdggf := d.DecodeElement(_cagfc.PattFill, &_eacee); _gdggf != nil {
					return _gdggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cagfc.GrpFill = NewCT_GroupFillProperties()
				if _ccabd := d.DecodeElement(_cagfc.GrpFill, &_eacee); _ccabd != nil {
					return _ccabd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_cagfc.EffectLst = NewCT_EffectList()
				if _ecfde := d.DecodeElement(_cagfc.EffectLst, &_eacee); _ecfde != nil {
					return _ecfde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_cagfc.EffectDag = NewCT_EffectContainer()
				if _gaced := d.DecodeElement(_cagfc.EffectDag, &_eacee); _gaced != nil {
					return _gaced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}:
				_cagfc.Highlight = NewCT_Color()
				if _gddca := d.DecodeElement(_cagfc.Highlight, &_eacee); _gddca != nil {
					return _gddca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_cagfc.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _dgaagb := d.DecodeElement(_cagfc.ULnTx, &_eacee); _dgaagb != nil {
					return _dgaagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_cagfc.ULn = NewCT_LineProperties()
				if _gdagc := d.DecodeElement(_cagfc.ULn, &_eacee); _gdagc != nil {
					return _gdagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_cagfc.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _aedbb := d.DecodeElement(_cagfc.UFillTx, &_eacee); _aedbb != nil {
					return _aedbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_cagfc.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _cfffc := d.DecodeElement(_cagfc.UFill, &_eacee); _cfffc != nil {
					return _cfffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				_cagfc.Latin = NewCT_TextFont()
				if _geebg := d.DecodeElement(_cagfc.Latin, &_eacee); _geebg != nil {
					return _geebg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				_cagfc.Ea = NewCT_TextFont()
				if _cbbdd := d.DecodeElement(_cagfc.Ea, &_eacee); _cbbdd != nil {
					return _cbbdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				_cagfc.Cs = NewCT_TextFont()
				if _bdffg := d.DecodeElement(_cagfc.Cs, &_eacee); _bdffg != nil {
					return _bdffg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}:
				_cagfc.Sym = NewCT_TextFont()
				if _egdbc := d.DecodeElement(_cagfc.Sym, &_eacee); _egdbc != nil {
					return _egdbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_cagfc.HlinkClick = NewCT_Hyperlink()
				if _ecedd := d.DecodeElement(_cagfc.HlinkClick, &_eacee); _ecedd != nil {
					return _ecedd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}:
				_cagfc.HlinkMouseOver = NewCT_Hyperlink()
				if _edfae := d.DecodeElement(_cagfc.HlinkMouseOver, &_eacee); _edfae != nil {
					return _edfae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}:
				_cagfc.Rtl = NewCT_Boolean()
				if _eggeee := d.DecodeElement(_cagfc.Rtl, &_eacee); _eggeee != nil {
					return _eggeee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cagfc.ExtLst = NewCT_OfficeArtExtensionList()
				if _acef := d.DecodeElement(_cagfc.ExtLst, &_eacee); _acef != nil {
					return _acef
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eacee.Name)
				if _abeab := d.Skip(); _abeab != nil {
					return _abeab
				}
			}
		case _b.EndElement:
			break _bfgge
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the EG_TextUnderlineFill and its children
func (_eedbbd *EG_TextUnderlineFill) Validate() error {
	return _eedbbd.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c")
}

// ValidateWithPath validates the CT_Path2DClose and its children, prefixing error messages with path
func (_faegd *CT_Path2DClose) ValidateWithPath(path string) error { return nil }

type CT_PresetTextShape struct {
	PrstAttr ST_TextShapeType
	AvLst    *CT_GeomGuideList
}

func NewCT_DuotoneEffect() *CT_DuotoneEffect { _gefb := &CT_DuotoneEffect{}; return _gefb }

// Validate validates the CT_GeomRect and its children
func (_egcae *CT_GeomRect) Validate() error {
	return _egcae.ValidateWithPath("C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074")
}
func (_gdba ST_EffectContainerType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfec := _b.Attr{}
	_cfec.Name = name
	switch _gdba {
	case ST_EffectContainerTypeUnset:
		_cfec.Value = ""
	case ST_EffectContainerTypeSib:
		_cfec.Value = "\u0073\u0069\u0062"
	case ST_EffectContainerTypeTree:
		_cfec.Value = "\u0074\u0072\u0065\u0065"
	}
	return _cfec, nil
}

// ValidateWithPath validates the CT_StyleMatrixReference and its children, prefixing error messages with path
func (_feadc *CT_StyleMatrixReference) ValidateWithPath(path string) error {
	if _feadc.ScrgbClr != nil {
		if _bebfd := _feadc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bebfd != nil {
			return _bebfd
		}
	}
	if _feadc.SrgbClr != nil {
		if _bfade := _feadc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bfade != nil {
			return _bfade
		}
	}
	if _feadc.HslClr != nil {
		if _bdfge := _feadc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bdfge != nil {
			return _bdfge
		}
	}
	if _feadc.SysClr != nil {
		if _fbedf := _feadc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fbedf != nil {
			return _fbedf
		}
	}
	if _feadc.SchemeClr != nil {
		if _cabef := _feadc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _cabef != nil {
			return _cabef
		}
	}
	if _feadc.PrstClr != nil {
		if _cgdfbc := _feadc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _cgdfbc != nil {
			return _cgdfbc
		}
	}
	return nil
}

type CT_AudioFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}
type CT_GvmlGroupShapeChoice struct {
	TxSp         []*CT_GvmlTextShape
	Sp           []*CT_GvmlShape
	CxnSp        []*CT_GvmlConnector
	Pic          []*CT_GvmlPicture
	GraphicFrame []*CT_GvmlGraphicalObjectFrame
	GrpSp        []*CT_GvmlGroupShape
}
type CT_NonVisualDrawingShapeProps struct {
	TxBoxAttr *bool
	SpLocks   *CT_ShapeLocking
	ExtLst    *CT_OfficeArtExtensionList
}

func (_cdbf *CT_BiLevelEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdff := range start.Attr {
		if _gdff.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_edd, _eff := ParseUnionST_PositiveFixedPercentage(_gdff.Value)
			if _eff != nil {
				return _eff
			}
			_cdbf.ThreshAttr = _edd
			continue
		}
	}
	for {
		_bafb, _cbee := d.Token()
		if _cbee != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0069\u004c\u0065v\u0065l\u0045\u0066\u0066\u0065\u0063\u0074\u003a \u0025\u0073", _cbee)
		}
		if _afec, _dgb := _bafb.(_b.EndElement); _dgb && _afec.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_InnerShadowEffect() *CT_InnerShadowEffect { _fdca := &CT_InnerShadowEffect{}; return _fdca }
func (_eaa *CT_AnimationChartElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaa.BldStepAttr = ST_ChartBuildStep(1)
	for _, _aec := range start.Attr {
		if _aec.Name.Local == "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x" {
			_gad, _afbc := _a.ParseInt(_aec.Value, 10, 32)
			if _afbc != nil {
				return _afbc
			}
			_bbgf := int32(_gad)
			_eaa.SeriesIdxAttr = &_bbgf
			continue
		}
		if _aec.Name.Local == "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078" {
			_cfdd, _eabc := _a.ParseInt(_aec.Value, 10, 32)
			if _eabc != nil {
				return _eabc
			}
			_fdcc := int32(_cfdd)
			_eaa.CategoryIdxAttr = &_fdcc
			continue
		}
		if _aec.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_eaa.BldStepAttr.UnmarshalXMLAttr(_aec)
			continue
		}
	}
	for {
		_egc, _eabf := d.Token()
		if _eabf != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0041nim\u0061ti\u006f\u006e\u0043\u0068\u0061\u0072\u0074El\u0065\u006d\u0065\u006e\u0074\u003a\u0020%\u0073", _eabf)
		}
		if _bgbg, _gcb := _egc.(_b.EndElement); _gcb && _bgbg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SRgbColor and its children, prefixing error messages with path
func (_abddd *CT_SRgbColor) ValidateWithPath(path string) error {
	for _cceec, _gaccc := range _abddd.EG_ColorTransform {
		if _gaaaf := _gaccc.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _cceec)); _gaaaf != nil {
			return _gaaaf
		}
	}
	return nil
}

type EG_TextAutofit struct {
	NoAutofit   *CT_TextNoAutofit
	NormAutofit *CT_TextNormalAutofit
	SpAutoFit   *CT_TextShapeAutofit
}

func (_cfcgg *ST_ColorSchemeIndex) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bebgc, _cedca := d.Token()
	if _cedca != nil {
		return _cedca
	}
	if _eebab, _bdceef := _bebgc.(_b.EndElement); _bdceef && _eebab.Name == start.Name {
		*_cfcgg = 1
		return nil
	}
	if _gcadff, _bgacb := _bebgc.(_b.CharData); !_bgacb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bebgc)
	} else {
		switch string(_gcadff) {
		case "":
			*_cfcgg = 0
		case "\u0064\u006b\u0031":
			*_cfcgg = 1
		case "\u006c\u0074\u0031":
			*_cfcgg = 2
		case "\u0064\u006b\u0032":
			*_cfcgg = 3
		case "\u006c\u0074\u0032":
			*_cfcgg = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_cfcgg = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_cfcgg = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_cfcgg = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_cfcgg = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_cfcgg = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_cfcgg = 10
		case "\u0068\u006c\u0069n\u006b":
			*_cfcgg = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_cfcgg = 12
		}
	}
	_bebgc, _cedca = d.Token()
	if _cedca != nil {
		return _cedca
	}
	if _acbcc, _cdfcc := _bebgc.(_b.EndElement); _cdfcc && _acbcc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bebgc)
}
func (_gefce *CT_DashStop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfddf := range start.Attr {
		if _cfddf.Name.Local == "\u0064" {
			_fgfg, _ggbba := ParseUnionST_PositivePercentage(_cfddf.Value)
			if _ggbba != nil {
				return _ggbba
			}
			_gefce.DAttr = _fgfg
			continue
		}
		if _cfddf.Name.Local == "\u0073\u0070" {
			_bfabe, _fedcf := ParseUnionST_PositivePercentage(_cfddf.Value)
			if _fedcf != nil {
				return _fedcf
			}
			_gefce.SpAttr = _bfabe
			continue
		}
	}
	for {
		_feeb, _gaad := d.Token()
		if _gaad != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u003a\u0020\u0025\u0073", _gaad)
		}
		if _ccca, _cgad := _feeb.(_b.EndElement); _cgad && _ccca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egeb *CT_PositiveFixedAngle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _egeb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewEG_TextBulletColor() *EG_TextBulletColor { _ddaad := &EG_TextBulletColor{}; return _ddaad }
func NewCT_Point2D() *CT_Point2D                 { _fbeaa := &CT_Point2D{}; return _fbeaa }
func (_ceebb *EG_LineDashProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceebb.PrstDash != nil {
		_cdccf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_ceebb.PrstDash, _cdccf)
	}
	if _ceebb.CustDash != nil {
		_gbddacb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_ceebb.CustDash, _gbddacb)
	}
	return nil
}

// Validate validates the CT_Boolean and its children
func (_febb *CT_Boolean) Validate() error {
	return _febb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}
func (_adc *CT_AlphaModulateFixedEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adc.AmtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006d\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_adc.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeProperties and its children, prefixing error messages with path
func (_ffdc *CT_GroupShapeProperties) ValidateWithPath(path string) error {
	if _efbaf := _ffdc.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _efbaf != nil {
		return _efbaf
	}
	if _ffdc.Xfrm != nil {
		if _egdb := _ffdc.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _egdb != nil {
			return _egdb
		}
	}
	if _ffdc.NoFill != nil {
		if _ecafc := _ffdc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ecafc != nil {
			return _ecafc
		}
	}
	if _ffdc.SolidFill != nil {
		if _cfdf := _ffdc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cfdf != nil {
			return _cfdf
		}
	}
	if _ffdc.GradFill != nil {
		if _addf := _ffdc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _addf != nil {
			return _addf
		}
	}
	if _ffdc.BlipFill != nil {
		if _gaec := _ffdc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gaec != nil {
			return _gaec
		}
	}
	if _ffdc.PattFill != nil {
		if _gcgg := _ffdc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gcgg != nil {
			return _gcgg
		}
	}
	if _ffdc.GrpFill != nil {
		if _gabg := _ffdc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gabg != nil {
			return _gabg
		}
	}
	if _ffdc.EffectLst != nil {
		if _agced := _ffdc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _agced != nil {
			return _agced
		}
	}
	if _ffdc.EffectDag != nil {
		if _fbgc := _ffdc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fbgc != nil {
			return _fbgc
		}
	}
	if _ffdc.Scene3d != nil {
		if _defcc := _ffdc.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _defcc != nil {
			return _defcc
		}
	}
	if _ffdc.ExtLst != nil {
		if _gbfdf := _ffdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbfdf != nil {
			return _gbfdf
		}
	}
	return nil
}
func (_fdcac ST_TextVerticalType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gbcecg := _b.Attr{}
	_gbcecg.Name = name
	switch _fdcac {
	case ST_TextVerticalTypeUnset:
		_gbcecg.Value = ""
	case ST_TextVerticalTypeHorz:
		_gbcecg.Value = "\u0068\u006f\u0072\u007a"
	case ST_TextVerticalTypeVert:
		_gbcecg.Value = "\u0076\u0065\u0072\u0074"
	case ST_TextVerticalTypeVert270:
		_gbcecg.Value = "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case ST_TextVerticalTypeWordArtVert:
		_gbcecg.Value = "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeEaVert:
		_gbcecg.Value = "\u0065\u0061\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeMongolianVert:
		_gbcecg.Value = "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeWordArtVertRtl:
		_gbcecg.Value = "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return _gbcecg, nil
}
func (_bagfcd *EG_Text3D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bagfcd.Sp3d != nil {
		_gfffe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_bagfcd.Sp3d, _gfffe)
	}
	if _bagfcd.FlatTx != nil {
		_ddfdg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_bagfcd.FlatTx, _ddfdg)
	}
	return nil
}
func (_ddcc *CT_ColorMappingOverrideChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddcc.MasterClrMapping != nil {
		_fgeb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006da\u0073\u0074\u0065\u0072\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}}
		e.EncodeElement(_ddcc.MasterClrMapping, _fgeb)
	}
	if _ddcc.OverrideClrMapping != nil {
		_edce := _b.StartElement{Name: _b.Name{Local: "a\u003ao\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043l\u0072\u004d\u0061\u0070pi\u006e\u0067"}}
		e.EncodeElement(_ddcc.OverrideClrMapping, _edce)
	}
	return nil
}
func (_ege *CT_AlphaFloorEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GrayscaleTransform struct{}

func NewCT_RelativeRect() *CT_RelativeRect { _aggf := &CT_RelativeRect{}; return _aggf }

// Validate validates the CT_PolarAdjustHandle and its children
func (_cabfcb *CT_PolarAdjustHandle) Validate() error {
	return _cabfcb.ValidateWithPath("C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065")
}
func (_eagee ST_PresetColorVal) Validate() error { return _eagee.ValidateWithPath("") }

// Validate validates the CT_Headers and its children
func (_adcd *CT_Headers) Validate() error {
	return _adcd.ValidateWithPath("\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073")
}

// Validate validates the EG_TextBulletTypeface and its children
func (_cgfcb *EG_TextBulletTypeface) Validate() error {
	return _cgfcb.ValidateWithPath("E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065")
}
func (_bbeece *CT_TableProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbada := range start.Attr {
		if _gbada.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_cgfab, _eedbb := _a.ParseBool(_gbada.Value)
			if _eedbb != nil {
				return _eedbb
			}
			_bbeece.FirstRowAttr = &_cgfab
			continue
		}
		if _gbada.Name.Local == "\u006ca\u0073\u0074\u0052\u006f\u0077" {
			_bdcae, _bcgef := _a.ParseBool(_gbada.Value)
			if _bcgef != nil {
				return _bcgef
			}
			_bbeece.LastRowAttr = &_bdcae
			continue
		}
		if _gbada.Name.Local == "\u0062a\u006e\u0064\u0052\u006f\u0077" {
			_aegec, _cbegg := _a.ParseBool(_gbada.Value)
			if _cbegg != nil {
				return _cbegg
			}
			_bbeece.BandRowAttr = &_aegec
			continue
		}
		if _gbada.Name.Local == "\u0062a\u006e\u0064\u0043\u006f\u006c" {
			_bbea, _fffdac := _a.ParseBool(_gbada.Value)
			if _fffdac != nil {
				return _fffdac
			}
			_bbeece.BandColAttr = &_bbea
			continue
		}
		if _gbada.Name.Local == "\u0072\u0074\u006c" {
			_dceec, _dadc := _a.ParseBool(_gbada.Value)
			if _dadc != nil {
				return _dadc
			}
			_bbeece.RtlAttr = &_dceec
			continue
		}
		if _gbada.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c" {
			_fddab, _ebabe := _a.ParseBool(_gbada.Value)
			if _ebabe != nil {
				return _ebabe
			}
			_bbeece.FirstColAttr = &_fddab
			continue
		}
		if _gbada.Name.Local == "\u006ca\u0073\u0074\u0043\u006f\u006c" {
			_acdgf, _beafa := _a.ParseBool(_gbada.Value)
			if _beafa != nil {
				return _beafa
			}
			_bbeece.LastColAttr = &_acdgf
			continue
		}
	}
_bgaaf:
	for {
		_ggcga, _ecagf := d.Token()
		if _ecagf != nil {
			return _ecagf
		}
		switch _edefd := _ggcga.(type) {
		case _b.StartElement:
			switch _edefd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bbeece.NoFill = NewCT_NoFillProperties()
				if _cgccc := d.DecodeElement(_bbeece.NoFill, &_edefd); _cgccc != nil {
					return _cgccc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bbeece.SolidFill = NewCT_SolidColorFillProperties()
				if _aegeae := d.DecodeElement(_bbeece.SolidFill, &_edefd); _aegeae != nil {
					return _aegeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bbeece.GradFill = NewCT_GradientFillProperties()
				if _aecfb := d.DecodeElement(_bbeece.GradFill, &_edefd); _aecfb != nil {
					return _aecfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bbeece.BlipFill = NewCT_BlipFillProperties()
				if _begeb := d.DecodeElement(_bbeece.BlipFill, &_edefd); _begeb != nil {
					return _begeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bbeece.PattFill = NewCT_PatternFillProperties()
				if _efeaf := d.DecodeElement(_bbeece.PattFill, &_edefd); _efeaf != nil {
					return _efeaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bbeece.GrpFill = NewCT_GroupFillProperties()
				if _ddafgf := d.DecodeElement(_bbeece.GrpFill, &_edefd); _ddafgf != nil {
					return _ddafgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_bbeece.EffectLst = NewCT_EffectList()
				if _afbcda := d.DecodeElement(_bbeece.EffectLst, &_edefd); _afbcda != nil {
					return _afbcda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_bbeece.EffectDag = NewCT_EffectContainer()
				if _dfebaf := d.DecodeElement(_bbeece.EffectDag, &_edefd); _dfebaf != nil {
					return _dfebaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_bbeece.Choice = NewCT_TablePropertiesChoice()
				if _gefde := d.DecodeElement(&_bbeece.Choice.TableStyle, &_edefd); _gefde != nil {
					return _gefde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_bbeece.Choice = NewCT_TablePropertiesChoice()
				if _aebce := d.DecodeElement(&_bbeece.Choice.TableStyleId, &_edefd); _aebce != nil {
					return _aebce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbeece.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbbf := d.DecodeElement(_bbeece.ExtLst, &_edefd); _gbbf != nil {
					return _gbbf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _edefd.Name)
				if _dcbg := d.Skip(); _dcbg != nil {
					return _dcbg
				}
			}
		case _b.EndElement:
			break _bgaaf
		case _b.CharData:
		}
	}
	return nil
}

// ST_Percentage is a union type
type ST_Percentage struct {
	ST_PercentageDecimal *int32
	ST_Percentage        *string
}

func (_dedfd ST_TextUnderlineType) Validate() error { return _dedfd.ValidateWithPath("") }
func (_fdccaf ST_PresetLineDashVal) String() string {
	switch _fdccaf {
	case 0:
		return ""
	case 1:
		return "\u0073\u006f\u006ci\u0064"
	case 2:
		return "\u0064\u006f\u0074"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u006c\u0067\u0044\u0061\u0073\u0068"
	case 5:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 6:
		return "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case 7:
		return "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 8:
		return "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case 9:
		return "\u0073\u0079\u0073\u0044\u006f\u0074"
	case 10:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return ""
}

type CT_GvmlTextShapeChoice struct {
	UseSpRect *CT_GvmlUseShapeRectangle
	Xfrm      *CT_Transform2D
}

// Validate validates the CT_TextNormalAutofit and its children
func (_eeaab *CT_TextNormalAutofit) Validate() error {
	return _eeaab.ValidateWithPath("C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074")
}

// ValidateWithPath validates the CT_Ratio and its children, prefixing error messages with path
func (_ffcac *CT_Ratio) ValidateWithPath(path string) error { return nil }
func (_aegeec ST_PresetPatternVal) String() string {
	switch _aegeec {
	case 0:
		return ""
	case 1:
		return "\u0070\u0063\u0074\u0035"
	case 2:
		return "\u0070\u0063\u00741\u0030"
	case 3:
		return "\u0070\u0063\u00742\u0030"
	case 4:
		return "\u0070\u0063\u00742\u0035"
	case 5:
		return "\u0070\u0063\u00743\u0030"
	case 6:
		return "\u0070\u0063\u00744\u0030"
	case 7:
		return "\u0070\u0063\u00745\u0030"
	case 8:
		return "\u0070\u0063\u00746\u0030"
	case 9:
		return "\u0070\u0063\u00747\u0030"
	case 10:
		return "\u0070\u0063\u00747\u0035"
	case 11:
		return "\u0070\u0063\u00748\u0030"
	case 12:
		return "\u0070\u0063\u00749\u0030"
	case 13:
		return "\u0068\u006f\u0072\u007a"
	case 14:
		return "\u0076\u0065\u0072\u0074"
	case 15:
		return "\u006c\u0074\u0048\u006f\u0072\u007a"
	case 16:
		return "\u006c\u0074\u0056\u0065\u0072\u0074"
	case 17:
		return "\u0064\u006b\u0048\u006f\u0072\u007a"
	case 18:
		return "\u0064\u006b\u0056\u0065\u0072\u0074"
	case 19:
		return "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case 20:
		return "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case 21:
		return "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case 22:
		return "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case 23:
		return "\u0063\u0072\u006fs\u0073"
	case 24:
		return "\u0064\u006e\u0044\u0069\u0061\u0067"
	case 25:
		return "\u0075\u0070\u0044\u0069\u0061\u0067"
	case 26:
		return "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case 27:
		return "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case 28:
		return "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case 29:
		return "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case 30:
		return "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case 31:
		return "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case 32:
		return "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case 33:
		return "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case 34:
		return "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case 35:
		return "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case 36:
		return "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case 37:
		return "\u0073\u006d\u0047\u0072\u0069\u0064"
	case 38:
		return "\u006c\u0067\u0047\u0072\u0069\u0064"
	case 39:
		return "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case 40:
		return "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 41:
		return "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 42:
		return "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case 43:
		return "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case 44:
		return "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case 45:
		return "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case 46:
		return "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case 47:
		return "\u0070\u006c\u0061i\u0064"
	case 48:
		return "\u0073\u0070\u0068\u0065\u0072\u0065"
	case 49:
		return "\u0077\u0065\u0061v\u0065"
	case 50:
		return "\u0064\u0069\u0076o\u0074"
	case 51:
		return "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case 52:
		return "\u0077\u0061\u0076\u0065"
	case 53:
		return "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case 54:
		return "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return ""
}
func (_deeege *ST_CompoundLine) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_deeege = 0
	case "\u0073\u006e\u0067":
		*_deeege = 1
	case "\u0064\u0062\u006c":
		*_deeege = 2
	case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
		*_deeege = 3
	case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
		*_deeege = 4
	case "\u0074\u0072\u0069":
		*_deeege = 5
	}
	return nil
}
func (_cfdeb ST_PresetCameraType) Validate() error { return _cfdeb.ValidateWithPath("") }
func (_fdcab ST_BlackWhiteMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdcab.String(), start)
}

// ValidateWithPath validates the CT_GradientFillProperties and its children, prefixing error messages with path
func (_egaa *CT_GradientFillProperties) ValidateWithPath(path string) error {
	if _dfeb := _egaa.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _dfeb != nil {
		return _dfeb
	}
	if _egaa.GsLst != nil {
		if _ccbea := _egaa.GsLst.ValidateWithPath(path + "\u002f\u0047\u0073\u004c\u0073\u0074"); _ccbea != nil {
			return _ccbea
		}
	}
	if _egaa.Lin != nil {
		if _bbfgd := _egaa.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _bbfgd != nil {
			return _bbfgd
		}
	}
	if _egaa.Path != nil {
		if _gebg := _egaa.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _gebg != nil {
			return _gebg
		}
	}
	if _egaa.TileRect != nil {
		if _gdgc := _egaa.TileRect.ValidateWithPath(path + "\u002fT\u0069\u006c\u0065\u0052\u0065\u0063t"); _gdgc != nil {
			return _gdgc
		}
	}
	return nil
}
func (_dfcgb ST_ColorSchemeIndex) String() string {
	switch _dfcgb {
	case 0:
		return ""
	case 1:
		return "\u0064\u006b\u0031"
	case 2:
		return "\u006c\u0074\u0031"
	case 3:
		return "\u0064\u006b\u0032"
	case 4:
		return "\u006c\u0074\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return ""
}

type CT_FlatText struct{ ZAttr *ST_Coordinate }

func (_cfbab *ST_Coordinate32) ValidateWithPath(path string) error {
	_effaf := []string{}
	if _cfbab.ST_Coordinate32Unqualified != nil {
		_effaf = append(_effaf, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061t\u0065\u0033\u0032\u0055\u006e\u0071\u0075\u0061\u006c\u0069f\u0069\u0065\u0064")
	}
	if _cfbab.ST_UniversalMeasure != nil {
		_effaf = append(_effaf, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_effaf) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _effaf)
	}
	return nil
}
func (_cgffc *CT_GraphicalObjectFrameLocking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feagd := range start.Attr {
		if _feagd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_bacc, _ccga := _a.ParseBool(_feagd.Value)
			if _ccga != nil {
				return _ccga
			}
			_cgffc.NoGrpAttr = &_bacc
			continue
		}
		if _feagd.Name.Local == "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e" {
			_abee, _fbgg := _a.ParseBool(_feagd.Value)
			if _fbgg != nil {
				return _fbgg
			}
			_cgffc.NoDrilldownAttr = &_abee
			continue
		}
		if _feagd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_dddg, _geagg := _a.ParseBool(_feagd.Value)
			if _geagg != nil {
				return _geagg
			}
			_cgffc.NoSelectAttr = &_dddg
			continue
		}
		if _feagd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_aadef, _baag := _a.ParseBool(_feagd.Value)
			if _baag != nil {
				return _baag
			}
			_cgffc.NoChangeAspectAttr = &_aadef
			continue
		}
		if _feagd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_ebegf, _cfabg := _a.ParseBool(_feagd.Value)
			if _cfabg != nil {
				return _cfabg
			}
			_cgffc.NoMoveAttr = &_ebegf
			continue
		}
		if _feagd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_affa, _dgcgc := _a.ParseBool(_feagd.Value)
			if _dgcgc != nil {
				return _dgcgc
			}
			_cgffc.NoResizeAttr = &_affa
			continue
		}
	}
_febaf:
	for {
		_bdgc, _fbgdd := d.Token()
		if _fbgdd != nil {
			return _fbgdd
		}
		switch _dccb := _bdgc.(type) {
		case _b.StartElement:
			switch _dccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgffc.ExtLst = NewCT_OfficeArtExtensionList()
				if _gfgca := d.DecodeElement(_cgffc.ExtLst, &_dccb); _gfgca != nil {
					return _gfgca
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063k\u0069\u006e\u0067\u0020\u0025\u0076", _dccb.Name)
				if _fagb := d.Skip(); _fagb != nil {
					return _fagb
				}
			}
		case _b.EndElement:
			break _febaf
		case _b.CharData:
		}
	}
	return nil
}

type CT_ColorSchemeList struct{ ExtraClrScheme []*CT_ColorSchemeAndMapping }
type CT_Bevel struct {
	WAttr    *int64
	HAttr    *int64
	PrstAttr ST_BevelPresetType
}

// ValidateWithPath validates the CT_ColorMappingOverride and its children, prefixing error messages with path
func (_ffbccg *CT_ColorMappingOverride) ValidateWithPath(path string) error {
	if _abdf := _ffbccg.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _abdf != nil {
		return _abdf
	}
	return nil
}

// ValidateWithPath validates the CT_PresetShadowEffect and its children, prefixing error messages with path
func (_dcff *CT_PresetShadowEffect) ValidateWithPath(path string) error {
	if _dcff.PrstAttr == ST_PresetShadowValUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _afgcc := _dcff.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _afgcc != nil {
		return _afgcc
	}
	if _dcff.DistAttr != nil {
		if *_dcff.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dcff.DistAttr)
		}
		if *_dcff.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_dcff.DistAttr)
		}
	}
	if _dcff.DirAttr != nil {
		if *_dcff.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dcff.DirAttr)
		}
		if *_dcff.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dcff.DirAttr)
		}
	}
	if _dcff.ScrgbClr != nil {
		if _dgbg := _dcff.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _dgbg != nil {
			return _dgbg
		}
	}
	if _dcff.SrgbClr != nil {
		if _gfda := _dcff.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gfda != nil {
			return _gfda
		}
	}
	if _dcff.HslClr != nil {
		if _ebdad := _dcff.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ebdad != nil {
			return _ebdad
		}
	}
	if _dcff.SysClr != nil {
		if _ddbec := _dcff.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ddbec != nil {
			return _ddbec
		}
	}
	if _dcff.SchemeClr != nil {
		if _ffag := _dcff.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ffag != nil {
			return _ffag
		}
	}
	if _dcff.PrstClr != nil {
		if _eaeab := _dcff.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _eaeab != nil {
			return _eaeab
		}
	}
	return nil
}
func (_gabc *CT_ConnectionSite) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _gabc.AngAttr)})
	e.EncodeToken(start)
	_bece := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_gabc.Pos, _bece)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Headers() *CT_Headers         { _edee := &CT_Headers{}; return _edee }
func NewCT_TextTabStop() *CT_TextTabStop { _fdfc := &CT_TextTabStop{}; return _fdfc }
func (_dccgd ST_BlipCompression) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eeegc := _b.Attr{}
	_eeegc.Name = name
	switch _dccgd {
	case ST_BlipCompressionUnset:
		_eeegc.Value = ""
	case ST_BlipCompressionEmail:
		_eeegc.Value = "\u0065\u006d\u0061i\u006c"
	case ST_BlipCompressionScreen:
		_eeegc.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlipCompressionPrint:
		_eeegc.Value = "\u0070\u0072\u0069n\u0074"
	case ST_BlipCompressionHqprint:
		_eeegc.Value = "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case ST_BlipCompressionNone:
		_eeegc.Value = "\u006e\u006f\u006e\u0065"
	}
	return _eeegc, nil
}
func (_edaaa *VideoFile) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edaaa.CT_VideoFile = *NewCT_VideoFile()
	for _, _gcbe := range start.Attr {
		if _gcbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcbe.Name.Local == "\u006c\u0069\u006e\u006b" || _gcbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gcbe.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dfcbdg, _agece := _gcbe.Value, error(nil)
			if _agece != nil {
				return _agece
			}
			_edaaa.LinkAttr = _dfcbdg
			continue
		}
		if _gcbe.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_fecbef, _eeecab := _gcbe.Value, error(nil)
			if _eeecab != nil {
				return _eeecab
			}
			_edaaa.ContentTypeAttr = &_fecbef
			continue
		}
	}
_gffdc:
	for {
		_aedbd, _gccad := d.Token()
		if _gccad != nil {
			return _gccad
		}
		switch _fceda := _aedbd.(type) {
		case _b.StartElement:
			switch _fceda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edaaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _gaega := d.DecodeElement(_edaaa.ExtLst, &_fceda); _gaega != nil {
					return _gaega
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0056\u0069\u0064\u0065\u006f\u0046i\u006c\u0065 \u0025\u0076", _fceda.Name)
				if _aecd := d.Skip(); _aecd != nil {
					return _aecd
				}
			}
		case _b.EndElement:
			break _gffdc
		case _b.CharData:
		}
	}
	return nil
}

type CT_ConnectionSite struct {
	AngAttr ST_AdjAngle
	Pos     *CT_AdjPoint2D
}

// Validate validates the CT_LineJoinBevel and its children
func (_gdbef *CT_LineJoinBevel) Validate() error {
	return _gdbef.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c")
}

type CT_GeomGuide struct {
	NameAttr string
	FmlaAttr string
}

func (_daege *ST_FixedPercentage) ValidateWithPath(path string) error {
	_eegcd := []string{}
	if _daege.ST_FixedPercentageDecimal != nil {
		_eegcd = append(_eegcd, "\u0053T\u005f\u0046\u0069\u0078e\u0064\u0050\u0065\u0072\u0063e\u006et\u0061g\u0065\u0044\u0065\u0063\u0069\u006d\u0061l")
	}
	if _daege.ST_FixedPercentage != nil {
		if _ddbedd := _daege.ST_FixedPercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fFi\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065"); _ddbedd != nil {
			return _ddbedd
		}
		_eegcd = append(_eegcd, "\u0053T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_eegcd) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eegcd)
	}
	return nil
}

type ThemeManager struct{ CT_EmptyElement }

func (_baaee ST_SchemeColorVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_baaee.String(), start)
}

type CT_GeomRect struct {
	LAttr ST_AdjCoordinate
	TAttr ST_AdjCoordinate
	RAttr ST_AdjCoordinate
	BAttr ST_AdjCoordinate
}

func (_ccdf *CT_ColorMRU) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ccdf.EG_ColorChoice != nil {
		for _, _cgbgg := range _ccdf.EG_ColorChoice {
			_cgbgg.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fge *CT_AlphaBiLevelEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _bb.Sprintf("\u0025\u0076", _fge.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_FontReference() *CT_FontReference {
	_bgbdf := &CT_FontReference{}
	_bgbdf.IdxAttr = ST_FontCollectionIndex(1)
	return _bgbdf
}
func (_ggada *CT_Path2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdeddb := range start.Attr {
		if _fdeddb.Name.Local == "\u0077" {
			_gebag, _dcbea := _a.ParseInt(_fdeddb.Value, 10, 64)
			if _dcbea != nil {
				return _dcbea
			}
			_ggada.WAttr = &_gebag
			continue
		}
		if _fdeddb.Name.Local == "\u0068" {
			_fdde, _ffbdg := _a.ParseInt(_fdeddb.Value, 10, 64)
			if _ffbdg != nil {
				return _ffbdg
			}
			_ggada.HAttr = &_fdde
			continue
		}
		if _fdeddb.Name.Local == "\u0066\u0069\u006c\u006c" {
			_ggada.FillAttr.UnmarshalXMLAttr(_fdeddb)
			continue
		}
		if _fdeddb.Name.Local == "\u0073\u0074\u0072\u006f\u006b\u0065" {
			_eaec, _bcdae := _a.ParseBool(_fdeddb.Value)
			if _bcdae != nil {
				return _bcdae
			}
			_ggada.StrokeAttr = &_eaec
			continue
		}
		if _fdeddb.Name.Local == "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b" {
			_gffe, _dagea := _a.ParseBool(_fdeddb.Value)
			if _dagea != nil {
				return _dagea
			}
			_ggada.ExtrusionOkAttr = &_gffe
			continue
		}
	}
_dafaf:
	for {
		_gffda, _feca := d.Token()
		if _feca != nil {
			return _feca
		}
		switch _cagbd := _gffda.(type) {
		case _b.StartElement:
			switch _cagbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}:
				_bdceb := NewCT_Path2DClose()
				if _abeeg := d.DecodeElement(_bdceb, &_cagbd); _abeeg != nil {
					return _abeeg
				}
				_ggada.Close = append(_ggada.Close, _bdceb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}:
				_acecg := NewCT_Path2DMoveTo()
				if _gbfeg := d.DecodeElement(_acecg, &_cagbd); _gbfeg != nil {
					return _gbfeg
				}
				_ggada.MoveTo = append(_ggada.MoveTo, _acecg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}:
				_afbgb := NewCT_Path2DLineTo()
				if _dcab := d.DecodeElement(_afbgb, &_cagbd); _dcab != nil {
					return _dcab
				}
				_ggada.LnTo = append(_ggada.LnTo, _afbgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}:
				_bdfad := NewCT_Path2DArcTo()
				if _bebe := d.DecodeElement(_bdfad, &_cagbd); _bebe != nil {
					return _bebe
				}
				_ggada.ArcTo = append(_ggada.ArcTo, _bdfad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}:
				_bcba := NewCT_Path2DQuadBezierTo()
				if _egdba := d.DecodeElement(_bcba, &_cagbd); _egdba != nil {
					return _egdba
				}
				_ggada.QuadBezTo = append(_ggada.QuadBezTo, _bcba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}:
				_gbfae := NewCT_Path2DCubicBezierTo()
				if _cbbbbb := d.DecodeElement(_gbfae, &_cagbd); _cbbbbb != nil {
					return _cbbbbb
				}
				_ggada.CubicBezTo = append(_ggada.CubicBezTo, _gbfae)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044 \u0025\u0076", _cagbd.Name)
				if _fddea := d.Skip(); _fddea != nil {
					return _fddea
				}
			}
		case _b.EndElement:
			break _dafaf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_PolarAdjustHandle() *CT_PolarAdjustHandle {
	_ebfag := &CT_PolarAdjustHandle{}
	_ebfag.Pos = NewCT_AdjPoint2D()
	return _ebfag
}
func (_bd *Blip) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0062\u006c\u0069\u0070"
	return _bd.CT_Blip.MarshalXML(e, start)
}
func (_bafc *CT_GammaTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_dggdd, _cgfc := d.Token()
		if _cgfc != nil {
			return _bb.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d: \u0025\u0073", _cgfc)
		}
		if _cfdca, _cecgc := _dggdd.(_b.EndElement); _cecgc && _cfdca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffadg *ST_TextFontAlignType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffadg = 0
	case "\u0061\u0075\u0074\u006f":
		*_ffadg = 1
	case "\u0074":
		*_ffadg = 2
	case "\u0063\u0074\u0072":
		*_ffadg = 3
	case "\u0062\u0061\u0073\u0065":
		*_ffadg = 4
	case "\u0062":
		*_ffadg = 5
	}
	return nil
}

type CT_TextParagraph struct {
	PPr        *CT_TextParagraphProperties
	EG_TextRun []*EG_TextRun
	EndParaRPr *CT_TextCharacterProperties
}

func NewBlip() *Blip                             { _ec := &Blip{}; _ec.CT_Blip = *NewCT_Blip(); return _ec }
func NewCT_TableProperties() *CT_TableProperties { _bggbf := &CT_TableProperties{}; return _bggbf }
func (_agbfc *ST_TextSpacingPercentOrPercentString) ValidateWithPath(path string) error {
	_ggefa := []string{}
	if _agbfc.ST_TextSpacingPercent != nil {
		_ggefa = append(_ggefa, "S\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _agbfc.ST_Percentage != nil {
		_ggefa = append(_ggefa, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_ggefa) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ggefa)
	}
	return nil
}
func (_cbfcg ST_PresetCameraType) ValidateWithPath(path string) error {
	switch _cbfcg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbfcg))
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleCellStyle and its children, prefixing error messages with path
func (_bfcbad *CT_TableStyleCellStyle) ValidateWithPath(path string) error {
	if _bfcbad.TcBdr != nil {
		if _dgffg := _bfcbad.TcBdr.ValidateWithPath(path + "\u002f\u0054\u0063\u0042\u0064\u0072"); _dgffg != nil {
			return _dgffg
		}
	}
	if _bfcbad.Fill != nil {
		if _egbaf := _bfcbad.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _egbaf != nil {
			return _egbaf
		}
	}
	if _bfcbad.FillRef != nil {
		if _deedgg := _bfcbad.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _deedgg != nil {
			return _deedgg
		}
	}
	if _bfcbad.Cell3D != nil {
		if _fggdg := _bfcbad.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _fggdg != nil {
			return _fggdg
		}
	}
	return nil
}
func (_cbbg *CT_PolarAdjustHandle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbbg.Pos = NewCT_AdjPoint2D()
	for _, _gbfb := range start.Attr {
		if _gbfb.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0052" {
			_fbdee, _adecb := _gbfb.Value, error(nil)
			if _adecb != nil {
				return _adecb
			}
			_cbbg.GdRefRAttr = &_fbdee
			continue
		}
		if _gbfb.Name.Local == "\u006d\u0069\u006e\u0052" {
			_gcdfcc, _ccdbc := ParseUnionST_AdjCoordinate(_gbfb.Value)
			if _ccdbc != nil {
				return _ccdbc
			}
			_cbbg.MinRAttr = &_gcdfcc
			continue
		}
		if _gbfb.Name.Local == "\u006d\u0061\u0078\u0052" {
			_affae, _defccd := ParseUnionST_AdjCoordinate(_gbfb.Value)
			if _defccd != nil {
				return _defccd
			}
			_cbbg.MaxRAttr = &_affae
			continue
		}
		if _gbfb.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067" {
			_aedee, _febe := _gbfb.Value, error(nil)
			if _febe != nil {
				return _febe
			}
			_cbbg.GdRefAngAttr = &_aedee
			continue
		}
		if _gbfb.Name.Local == "\u006d\u0069\u006e\u0041\u006e\u0067" {
			_dbff, _cbbcf := ParseUnionST_AdjAngle(_gbfb.Value)
			if _cbbcf != nil {
				return _cbbcf
			}
			_cbbg.MinAngAttr = &_dbff
			continue
		}
		if _gbfb.Name.Local == "\u006d\u0061\u0078\u0041\u006e\u0067" {
			_cfgaa, _feece := ParseUnionST_AdjAngle(_gbfb.Value)
			if _feece != nil {
				return _feece
			}
			_cbbg.MaxAngAttr = &_cfgaa
			continue
		}
	}
_dcfbg:
	for {
		_fcced, _daacf := d.Token()
		if _daacf != nil {
			return _daacf
		}
		switch _gefd := _fcced.(type) {
		case _b.StartElement:
			switch _gefd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _bgcb := d.DecodeElement(_cbbg.Pos, &_gefd); _bgcb != nil {
					return _bgcb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _gefd.Name)
				if _bebfb := d.Skip(); _bebfb != nil {
					return _bebfb
				}
			}
		case _b.EndElement:
			break _dcfbg
		case _b.CharData:
		}
	}
	return nil
}
func (_eaegec *EG_LineDashProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgfcg:
	for {
		_faeea, _gbcgag := d.Token()
		if _gbcgag != nil {
			return _gbcgag
		}
		switch _bdee := _faeea.(type) {
		case _b.StartElement:
			switch _bdee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_eaegec.PrstDash = NewCT_PresetLineDashProperties()
				if _edgbbf := d.DecodeElement(_eaegec.PrstDash, &_bdee); _edgbbf != nil {
					return _edgbbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_eaegec.CustDash = NewCT_DashStopList()
				if _gaefc := d.DecodeElement(_eaegec.CustDash, &_bdee); _gaefc != nil {
					return _gaefc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bdee.Name)
				if _cabbe := d.Skip(); _cabbe != nil {
					return _cabbe
				}
			}
		case _b.EndElement:
			break _cgfcg
		case _b.CharData:
		}
	}
	return nil
}

type CT_EffectList struct {
	Blur        *CT_BlurEffect
	FillOverlay *CT_FillOverlayEffect
	Glow        *CT_GlowEffect
	InnerShdw   *CT_InnerShadowEffect
	OuterShdw   *CT_OuterShadowEffect
	PrstShdw    *CT_PresetShadowEffect
	Reflection  *CT_ReflectionEffect
	SoftEdge    *CT_SoftEdgesEffect
}

// Validate validates the CT_TextBulletTypefaceFollowText and its children
func (_fbgec *CT_TextBulletTypefaceFollowText) Validate() error {
	return _fbgec.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

// Validate validates the CT_PresetLineDashProperties and its children
func (_egccf *CT_PresetLineDashProperties) Validate() error {
	return _egccf.ValidateWithPath("C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_InnerShadowEffect and its children
func (_gdec *CT_InnerShadowEffect) Validate() error {
	return _gdec.ValidateWithPath("C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}
func (_eafgc *ST_AdjCoordinate) Validate() error { return _eafgc.ValidateWithPath("") }

// Validate validates the CT_TextCharacterProperties and its children
func (_cdda *CT_TextCharacterProperties) Validate() error {
	return _cdda.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}
func (_aggca ST_TextAnchoringType) ValidateWithPath(path string) error {
	switch _aggca {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aggca))
	}
	return nil
}

type CT_ColorMapping struct {
	Bg1Attr      ST_ColorSchemeIndex
	Tx1Attr      ST_ColorSchemeIndex
	Bg2Attr      ST_ColorSchemeIndex
	Tx2Attr      ST_ColorSchemeIndex
	Accent1Attr  ST_ColorSchemeIndex
	Accent2Attr  ST_ColorSchemeIndex
	Accent3Attr  ST_ColorSchemeIndex
	Accent4Attr  ST_ColorSchemeIndex
	Accent5Attr  ST_ColorSchemeIndex
	Accent6Attr  ST_ColorSchemeIndex
	HlinkAttr    ST_ColorSchemeIndex
	FolHlinkAttr ST_ColorSchemeIndex
	ExtLst       *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_QuickTimeFile and its children, prefixing error messages with path
func (_affaeg *CT_QuickTimeFile) ValidateWithPath(path string) error {
	if _affaeg.ExtLst != nil {
		if _bcfd := _affaeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcfd != nil {
			return _bcfd
		}
	}
	return nil
}
func NewCT_TextNoBullet() *CT_TextNoBullet { _caacgg := &CT_TextNoBullet{}; return _caacgg }
func NewCT_Boolean() *CT_Boolean           { _egfe := &CT_Boolean{}; return _egfe }
func NewCT_GraphicalObjectData() *CT_GraphicalObjectData {
	_ecaff := &CT_GraphicalObjectData{}
	return _ecaff
}
func (_fefcf ST_BlendMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fefcf.String(), start)
}

type Blip struct{ CT_Blip }
type CT_AudioCD struct {
	St     *CT_AudioCDTime
	End    *CT_AudioCDTime
	ExtLst *CT_OfficeArtExtensionList
}
type CT_Angle struct{ ValAttr int32 }

func (_ceafe *CT_LineProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bedbac := range start.Attr {
		if _bedbac.Name.Local == "\u0077" {
			_gadccc, _adbd := _a.ParseInt(_bedbac.Value, 10, 32)
			if _adbd != nil {
				return _adbd
			}
			_ddaa := int32(_gadccc)
			_ceafe.WAttr = &_ddaa
			continue
		}
		if _bedbac.Name.Local == "\u0063\u006d\u0070\u0064" {
			_ceafe.CmpdAttr.UnmarshalXMLAttr(_bedbac)
			continue
		}
		if _bedbac.Name.Local == "\u0063\u0061\u0070" {
			_ceafe.CapAttr.UnmarshalXMLAttr(_bedbac)
			continue
		}
		if _bedbac.Name.Local == "\u0061\u006c\u0067\u006e" {
			_ceafe.AlgnAttr.UnmarshalXMLAttr(_bedbac)
			continue
		}
	}
_cgceg:
	for {
		_afedf, _dggbe := d.Token()
		if _dggbe != nil {
			return _dggbe
		}
		switch _fdad := _afedf.(type) {
		case _b.StartElement:
			switch _fdad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ceafe.NoFill = NewCT_NoFillProperties()
				if _abaa := d.DecodeElement(_ceafe.NoFill, &_fdad); _abaa != nil {
					return _abaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ceafe.SolidFill = NewCT_SolidColorFillProperties()
				if _cfdaf := d.DecodeElement(_ceafe.SolidFill, &_fdad); _cfdaf != nil {
					return _cfdaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ceafe.GradFill = NewCT_GradientFillProperties()
				if _bdbd := d.DecodeElement(_ceafe.GradFill, &_fdad); _bdbd != nil {
					return _bdbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ceafe.PattFill = NewCT_PatternFillProperties()
				if _gfffc := d.DecodeElement(_ceafe.PattFill, &_fdad); _gfffc != nil {
					return _gfffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_ceafe.PrstDash = NewCT_PresetLineDashProperties()
				if _aebcg := d.DecodeElement(_ceafe.PrstDash, &_fdad); _aebcg != nil {
					return _aebcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_ceafe.CustDash = NewCT_DashStopList()
				if _gdcag := d.DecodeElement(_ceafe.CustDash, &_fdad); _gdcag != nil {
					return _gdcag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_ceafe.Round = NewCT_LineJoinRound()
				if _aecedg := d.DecodeElement(_ceafe.Round, &_fdad); _aecedg != nil {
					return _aecedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_ceafe.Bevel = NewCT_LineJoinBevel()
				if _agceb := d.DecodeElement(_ceafe.Bevel, &_fdad); _agceb != nil {
					return _agceb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_ceafe.Miter = NewCT_LineJoinMiterProperties()
				if _aefa := d.DecodeElement(_ceafe.Miter, &_fdad); _aefa != nil {
					return _aefa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}:
				_ceafe.HeadEnd = NewCT_LineEndProperties()
				if _afbd := d.DecodeElement(_ceafe.HeadEnd, &_fdad); _afbd != nil {
					return _afbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}:
				_ceafe.TailEnd = NewCT_LineEndProperties()
				if _gbfa := d.DecodeElement(_ceafe.TailEnd, &_fdad); _gbfa != nil {
					return _gbfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceafe.ExtLst = NewCT_OfficeArtExtensionList()
				if _efgge := d.DecodeElement(_ceafe.ExtLst, &_fdad); _efgge != nil {
					return _efgge
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fdad.Name)
				if _agdfe := d.Skip(); _agdfe != nil {
					return _agdfe
				}
			}
		case _b.EndElement:
			break _cgceg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ColorMapping() *CT_ColorMapping {
	_eeade := &CT_ColorMapping{}
	_eeade.Bg1Attr = ST_ColorSchemeIndex(1)
	_eeade.Tx1Attr = ST_ColorSchemeIndex(1)
	_eeade.Bg2Attr = ST_ColorSchemeIndex(1)
	_eeade.Tx2Attr = ST_ColorSchemeIndex(1)
	_eeade.Accent1Attr = ST_ColorSchemeIndex(1)
	_eeade.Accent2Attr = ST_ColorSchemeIndex(1)
	_eeade.Accent3Attr = ST_ColorSchemeIndex(1)
	_eeade.Accent4Attr = ST_ColorSchemeIndex(1)
	_eeade.Accent5Attr = ST_ColorSchemeIndex(1)
	_eeade.Accent6Attr = ST_ColorSchemeIndex(1)
	_eeade.HlinkAttr = ST_ColorSchemeIndex(1)
	_eeade.FolHlinkAttr = ST_ColorSchemeIndex(1)
	return _eeade
}

type CT_TableCellProperties struct {
	MarLAttr         *ST_Coordinate32
	MarRAttr         *ST_Coordinate32
	MarTAttr         *ST_Coordinate32
	MarBAttr         *ST_Coordinate32
	VertAttr         ST_TextVerticalType
	AnchorAttr       ST_TextAnchoringType
	AnchorCtrAttr    *bool
	HorzOverflowAttr ST_TextHorzOverflowType
	LnL              *CT_LineProperties
	LnR              *CT_LineProperties
	LnT              *CT_LineProperties
	LnB              *CT_LineProperties
	LnTlToBr         *CT_LineProperties
	LnBlToTr         *CT_LineProperties
	Cell3D           *CT_Cell3D
	NoFill           *CT_NoFillProperties
	SolidFill        *CT_SolidColorFillProperties
	GradFill         *CT_GradientFillProperties
	BlipFill         *CT_BlipFillProperties
	PattFill         *CT_PatternFillProperties
	GrpFill          *CT_GroupFillProperties
	Headers          *CT_Headers
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_TextField() *CT_TextField {
	_decbe := &CT_TextField{}
	_decbe.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _decbe
}
func (_begcc *CT_TextBulletSizePercent) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _begcc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GeomGuide and its children, prefixing error messages with path
func (_feaab *CT_GeomGuide) ValidateWithPath(path string) error { return nil }
func (_fegfd ST_TextUnderlineType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgcab := _b.Attr{}
	_fgcab.Name = name
	switch _fegfd {
	case ST_TextUnderlineTypeUnset:
		_fgcab.Value = ""
	case ST_TextUnderlineTypeNone:
		_fgcab.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextUnderlineTypeWords:
		_fgcab.Value = "\u0077\u006f\u0072d\u0073"
	case ST_TextUnderlineTypeSng:
		_fgcab.Value = "\u0073\u006e\u0067"
	case ST_TextUnderlineTypeDbl:
		_fgcab.Value = "\u0064\u0062\u006c"
	case ST_TextUnderlineTypeHeavy:
		_fgcab.Value = "\u0068\u0065\u0061v\u0079"
	case ST_TextUnderlineTypeDotted:
		_fgcab.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_TextUnderlineTypeDottedHeavy:
		_fgcab.Value = "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDash:
		_fgcab.Value = "\u0064\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDashHeavy:
		_fgcab.Value = "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeDashLong:
		_fgcab.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case ST_TextUnderlineTypeDashLongHeavy:
		_fgcab.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDash:
		_fgcab.Value = "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDashHeavy:
		_fgcab.Value = "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDotDash:
		_fgcab.Value = "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDotDashHeavy:
		_fgcab.Value = "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavy:
		_fgcab.Value = "\u0077\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavyHeavy:
		_fgcab.Value = "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeWavyDbl:
		_fgcab.Value = "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return _fgcab, nil
}
func NewCT_TextUnderlineFillFollowText() *CT_TextUnderlineFillFollowText {
	_eaaag := &CT_TextUnderlineFillFollowText{}
	return _eaaag
}

// Validate validates the CT_Scale2D and its children
func (_geef *CT_Scale2D) Validate() error {
	return _geef.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044")
}

// ValidateWithPath validates the CT_TextNoAutofit and its children, prefixing error messages with path
func (_feeed *CT_TextNoAutofit) ValidateWithPath(path string) error { return nil }
func (_gebadf *CT_TextCharBullet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgba := range start.Attr {
		if _fcgba.Name.Local == "\u0063\u0068\u0061\u0072" {
			_aeggae, _gbdbb := _fcgba.Value, error(nil)
			if _gbdbb != nil {
				return _gbdbb
			}
			_gebadf.CharAttr = _aeggae
			continue
		}
	}
	for {
		_bfdfca, _ccfcf := d.Token()
		if _ccfcf != nil {
			return _bb.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042\u0075\u006c\u006c\u0065\u0074: \u0025\u0073", _ccfcf)
		}
		if _aaecc, _baedcb := _bfdfca.(_b.EndElement); _baedcb && _aaecc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LineJoinMiterProperties and its children, prefixing error messages with path
func (_dfcea *CT_LineJoinMiterProperties) ValidateWithPath(path string) error {
	if _dfcea.LimAttr != nil {
		if _dgcdaa := _dfcea.LimAttr.ValidateWithPath(path + "\u002f\u004c\u0069\u006d\u0041\u0074\u0074\u0072"); _dgcdaa != nil {
			return _dgcdaa
		}
	}
	return nil
}

type EG_TextBulletSize struct {
	BuSzTx  *CT_TextBulletSizeFollowText
	BuSzPct *CT_TextBulletSizePercent
	BuSzPts *CT_TextBulletSizePoint
}

func NewCT_InverseGammaTransform() *CT_InverseGammaTransform {
	_efeg := &CT_InverseGammaTransform{}
	return _efeg
}

// ValidateWithPath validates the CT_GvmlShapeNonVisual and its children, prefixing error messages with path
func (_fabgd *CT_GvmlShapeNonVisual) ValidateWithPath(path string) error {
	if _dagd := _fabgd.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dagd != nil {
		return _dagd
	}
	if _aaaaca := _fabgd.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _aaaaca != nil {
		return _aaaaca
	}
	return nil
}
func (_ebee *CT_BlipChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdab:
	for {
		_cafa, _becf := d.Token()
		if _becf != nil {
			return _becf
		}
		switch _cffc := _cafa.(type) {
		case _b.StartElement:
			switch _cffc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_afcd := NewCT_AlphaBiLevelEffect()
				if _fbbd := d.DecodeElement(_afcd, &_cffc); _fbbd != nil {
					return _fbbd
				}
				_ebee.AlphaBiLevel = append(_ebee.AlphaBiLevel, _afcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_aebe := NewCT_AlphaCeilingEffect()
				if _bfbg := d.DecodeElement(_aebe, &_cffc); _bfbg != nil {
					return _bfbg
				}
				_ebee.AlphaCeiling = append(_ebee.AlphaCeiling, _aebe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_afa := NewCT_AlphaFloorEffect()
				if _dbg := d.DecodeElement(_afa, &_cffc); _dbg != nil {
					return _dbg
				}
				_ebee.AlphaFloor = append(_ebee.AlphaFloor, _afa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_aaaab := NewCT_AlphaInverseEffect()
				if _deefe := d.DecodeElement(_aaaab, &_cffc); _deefe != nil {
					return _deefe
				}
				_ebee.AlphaInv = append(_ebee.AlphaInv, _aaaab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_ccgb := NewCT_AlphaModulateEffect()
				if _gde := d.DecodeElement(_ccgb, &_cffc); _gde != nil {
					return _gde
				}
				_ebee.AlphaMod = append(_ebee.AlphaMod, _ccgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_fccd := NewCT_AlphaModulateFixedEffect()
				if _efce := d.DecodeElement(_fccd, &_cffc); _efce != nil {
					return _efce
				}
				_ebee.AlphaModFix = append(_ebee.AlphaModFix, _fccd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_ggcbb := NewCT_AlphaReplaceEffect()
				if _fgcc := d.DecodeElement(_ggcbb, &_cffc); _fgcc != nil {
					return _fgcc
				}
				_ebee.AlphaRepl = append(_ebee.AlphaRepl, _ggcbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_edga := NewCT_BiLevelEffect()
				if _gfae := d.DecodeElement(_edga, &_cffc); _gfae != nil {
					return _gfae
				}
				_ebee.BiLevel = append(_ebee.BiLevel, _edga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_bgeb := NewCT_BlurEffect()
				if _beece := d.DecodeElement(_bgeb, &_cffc); _beece != nil {
					return _beece
				}
				_ebee.Blur = append(_ebee.Blur, _bgeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_gefa := NewCT_ColorChangeEffect()
				if _cadcb := d.DecodeElement(_gefa, &_cffc); _cadcb != nil {
					return _cadcb
				}
				_ebee.ClrChange = append(_ebee.ClrChange, _gefa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_adce := NewCT_ColorReplaceEffect()
				if _agce := d.DecodeElement(_adce, &_cffc); _agce != nil {
					return _agce
				}
				_ebee.ClrRepl = append(_ebee.ClrRepl, _adce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_dfac := NewCT_DuotoneEffect()
				if _fcgg := d.DecodeElement(_dfac, &_cffc); _fcgg != nil {
					return _fcgg
				}
				_ebee.Duotone = append(_ebee.Duotone, _dfac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_eabee := NewCT_FillOverlayEffect()
				if _bdgb := d.DecodeElement(_eabee, &_cffc); _bdgb != nil {
					return _bdgb
				}
				_ebee.FillOverlay = append(_ebee.FillOverlay, _eabee)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_bced := NewCT_GrayscaleEffect()
				if _cdf := d.DecodeElement(_bced, &_cffc); _cdf != nil {
					return _cdf
				}
				_ebee.Grayscl = append(_ebee.Grayscl, _bced)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_efecd := NewCT_HSLEffect()
				if _cbfag := d.DecodeElement(_efecd, &_cffc); _cbfag != nil {
					return _cbfag
				}
				_ebee.Hsl = append(_ebee.Hsl, _efecd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aafg := NewCT_LuminanceEffect()
				if _gcgd := d.DecodeElement(_aafg, &_cffc); _gcgd != nil {
					return _gcgd
				}
				_ebee.Lum = append(_ebee.Lum, _aafg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_cgedg := NewCT_TintEffect()
				if _cdag := d.DecodeElement(_cgedg, &_cffc); _cdag != nil {
					return _cdag
				}
				_ebee.Tint = append(_ebee.Tint, _cgedg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042l\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _cffc.Name)
				if _eaaa := d.Skip(); _eaaa != nil {
					return _eaaa
				}
			}
		case _b.EndElement:
			break _bdab
		case _b.CharData:
		}
	}
	return nil
}
func ParseUnionST_PositivePercentage(s string) (ST_PositivePercentage, error) {
	_caeec := ST_PositivePercentage{}
	if _eb.ST_PositivePercentagePatternRe.MatchString(s) {
		_caeec.ST_PositivePercentage = &ST_Percentage{}
		_caeec.ST_PositivePercentage.ST_Percentage = &s
	} else {
		_ddbdc, _eacbe := _a.ParseInt(s, 10, 32)
		if _eacbe != nil {
			return _caeec, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _eacbe)
		}
		_degdg := int32(_ddbdc)
		_caeec.ST_PositivePercentageDecimal = &_degdg
	}
	return _caeec, nil
}

type CT_StyleMatrix struct {
	NameAttr       *string
	FillStyleLst   *CT_FillStyleList
	LnStyleLst     *CT_LineStyleList
	EffectStyleLst *CT_EffectStyleList
	BgFillStyleLst *CT_BackgroundFillStyleList
}

// Validate validates the EG_EffectProperties and its children
func (_dfdgf *EG_EffectProperties) Validate() error {
	return _dfdgf.ValidateWithPath("\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_GammaTransform struct{}

func (_bacad *ThemeOverride) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bacad.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
_aegfe:
	for {
		_aafge, _fdbf := d.Token()
		if _fdbf != nil {
			return _fdbf
		}
		switch _fdfcd := _aafge.(type) {
		case _b.StartElement:
			switch _fdfcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_bacad.ClrScheme = NewCT_ColorScheme()
				if _efgdc := d.DecodeElement(_bacad.ClrScheme, &_fdfcd); _efgdc != nil {
					return _efgdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_bacad.FontScheme = NewCT_FontScheme()
				if _bcfbb := d.DecodeElement(_bacad.FontScheme, &_fdfcd); _bcfbb != nil {
					return _bcfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_bacad.FmtScheme = NewCT_StyleMatrix()
				if _adggd := d.DecodeElement(_bacad.FmtScheme, &_fdfcd); _adggd != nil {
					return _adggd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0068\u0065\u006de\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065 \u0025\u0076", _fdfcd.Name)
				if _bgedd := d.Skip(); _bgedd != nil {
					return _bgedd
				}
			}
		case _b.EndElement:
			break _aegfe
		case _b.CharData:
		}
	}
	return nil
}

type CT_AdjPoint2D struct {
	XAttr ST_AdjCoordinate
	YAttr ST_AdjCoordinate
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_ecgag *CT_TableStyle) ValidateWithPath(path string) error {
	if !_eb.ST_GuidPatternRe.MatchString(_ecgag.StyleIdAttr) {
		return _bb.Errorf("\u0025\u0073\u002fm\u002e\u0053\u0074\u0079\u006c\u0065\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eb.ST_GuidPatternRe, _ecgag.StyleIdAttr)
	}
	if _ecgag.TblBg != nil {
		if _abffe := _ecgag.TblBg.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0042\u0067"); _abffe != nil {
			return _abffe
		}
	}
	if _ecgag.WholeTbl != nil {
		if _fegga := _ecgag.WholeTbl.ValidateWithPath(path + "\u002fW\u0068\u006f\u006c\u0065\u0054\u0062l"); _fegga != nil {
			return _fegga
		}
	}
	if _ecgag.Band1H != nil {
		if _feage := _ecgag.Band1H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0048"); _feage != nil {
			return _feage
		}
	}
	if _ecgag.Band2H != nil {
		if _dbbgc := _ecgag.Band2H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0048"); _dbbgc != nil {
			return _dbbgc
		}
	}
	if _ecgag.Band1V != nil {
		if _acbc := _ecgag.Band1V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0056"); _acbc != nil {
			return _acbc
		}
	}
	if _ecgag.Band2V != nil {
		if _ggede := _ecgag.Band2V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0056"); _ggede != nil {
			return _ggede
		}
	}
	if _ecgag.LastCol != nil {
		if _beced := _ecgag.LastCol.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0043\u006f\u006c"); _beced != nil {
			return _beced
		}
	}
	if _ecgag.FirstCol != nil {
		if _gdddc := _ecgag.FirstCol.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0043\u006fl"); _gdddc != nil {
			return _gdddc
		}
	}
	if _ecgag.LastRow != nil {
		if _acbb := _ecgag.LastRow.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0052\u006f\u0077"); _acbb != nil {
			return _acbb
		}
	}
	if _ecgag.SeCell != nil {
		if _aaggc := _ecgag.SeCell.ValidateWithPath(path + "\u002fS\u0065\u0043\u0065\u006c\u006c"); _aaggc != nil {
			return _aaggc
		}
	}
	if _ecgag.SwCell != nil {
		if _gcga := _ecgag.SwCell.ValidateWithPath(path + "\u002fS\u0077\u0043\u0065\u006c\u006c"); _gcga != nil {
			return _gcga
		}
	}
	if _ecgag.FirstRow != nil {
		if _gdcbf := _ecgag.FirstRow.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0052\u006fw"); _gdcbf != nil {
			return _gdcbf
		}
	}
	if _ecgag.NeCell != nil {
		if _cecdd := _ecgag.NeCell.ValidateWithPath(path + "\u002fN\u0065\u0043\u0065\u006c\u006c"); _cecdd != nil {
			return _cecdd
		}
	}
	if _ecgag.NwCell != nil {
		if _edgca := _ecgag.NwCell.ValidateWithPath(path + "\u002fN\u0077\u0043\u0065\u006c\u006c"); _edgca != nil {
			return _edgca
		}
	}
	if _ecgag.ExtLst != nil {
		if _bbdfd := _ecgag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbdfd != nil {
			return _bbdfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineLineFollowText and its children, prefixing error messages with path
func (_fcdb *CT_TextUnderlineLineFollowText) ValidateWithPath(path string) error { return nil }
func (_ccag *CT_BlipFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcce := range start.Attr {
		if _fcce.Name.Local == "\u0064\u0070\u0069" {
			_ddba, _fbad := _a.ParseUint(_fcce.Value, 10, 32)
			if _fbad != nil {
				return _fbad
			}
			_daea := uint32(_ddba)
			_ccag.DpiAttr = &_daea
			continue
		}
		if _fcce.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_cccb, _edde := _a.ParseBool(_fcce.Value)
			if _edde != nil {
				return _edde
			}
			_ccag.RotWithShapeAttr = &_cccb
			continue
		}
	}
_cbfd:
	for {
		_gdce, _dfdf := d.Token()
		if _dfdf != nil {
			return _dfdf
		}
		switch _dacfa := _gdce.(type) {
		case _b.StartElement:
			switch _dacfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				_ccag.Blip = NewCT_Blip()
				if _ebeb := d.DecodeElement(_ccag.Blip, &_dacfa); _ebeb != nil {
					return _ebeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}:
				_ccag.SrcRect = NewCT_RelativeRect()
				if _gdbb := d.DecodeElement(_ccag.SrcRect, &_dacfa); _gdbb != nil {
					return _gdbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_ccag.Tile = NewCT_TileInfoProperties()
				if _ebag := d.DecodeElement(_ccag.Tile, &_dacfa); _ebag != nil {
					return _ebag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_ccag.Stretch = NewCT_StretchInfoProperties()
				if _dbda := d.DecodeElement(_ccag.Stretch, &_dacfa); _dbda != nil {
					return _dbda
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u006c\u0069\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dacfa.Name)
				if _bfd := d.Skip(); _bfd != nil {
					return _bfd
				}
			}
		case _b.EndElement:
			break _cbfd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextTabStop and its children, prefixing error messages with path
func (_gbcef *CT_TextTabStop) ValidateWithPath(path string) error {
	if _gbcef.PosAttr != nil {
		if _addb := _gbcef.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _addb != nil {
			return _addb
		}
	}
	if _gbagb := _gbcef.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _gbagb != nil {
		return _gbagb
	}
	return nil
}

// Validate validates the CT_GeomGuideList and its children
func (_fggab *CT_GeomGuideList) Validate() error {
	return _fggab.ValidateWithPath("\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_gfdde *CT_StyleMatrixReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _gfdde.IdxAttr)})
	e.EncodeToken(start)
	if _gfdde.ScrgbClr != nil {
		_bcacf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_gfdde.ScrgbClr, _bcacf)
	}
	if _gfdde.SrgbClr != nil {
		_gefaea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_gfdde.SrgbClr, _gefaea)
	}
	if _gfdde.HslClr != nil {
		_dbcca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_gfdde.HslClr, _dbcca)
	}
	if _gfdde.SysClr != nil {
		_cdgdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_gfdde.SysClr, _cdgdb)
	}
	if _gfdde.SchemeClr != nil {
		_fbdg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_gfdde.SchemeClr, _fbdg)
	}
	if _gfdde.PrstClr != nil {
		_eagf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_gfdde.PrstClr, _eagf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdbbd ST_ChartBuildStep) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdbbd.String(), start)
}
func (_eebgfa ST_BevelPresetType) Validate() error { return _eebgfa.ValidateWithPath("") }
func (_gedd *CT_PositiveFixedAngle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gedd.ValAttr = 0
	for _, _febdg := range start.Attr {
		if _febdg.Name.Local == "\u0076\u0061\u006c" {
			_afbga, _agffa := _a.ParseInt(_febdg.Value, 10, 32)
			if _agffa != nil {
				return _agffa
			}
			_gedd.ValAttr = int32(_afbga)
			continue
		}
	}
	for {
		_cggad, _ggccc := d.Token()
		if _ggccc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046i\u0078\u0065\u0064\u0041\u006e\u0067\u006ce\u003a\u0020\u0025\u0073", _ggccc)
		}
		if _bbaf, _daaddc := _cggad.(_b.EndElement); _daaddc && _bbaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aacbf *CT_GvmlShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aacbf.CNvPr = NewCT_NonVisualDrawingProps()
	_aacbf.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
_ebdff:
	for {
		_cfcg, _dcfb := d.Token()
		if _dcfb != nil {
			return _dcfb
		}
		switch _ceefg := _cfcg.(type) {
		case _b.StartElement:
			switch _ceefg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cggb := d.DecodeElement(_aacbf.CNvPr, &_ceefg); _cggb != nil {
					return _cggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _bdgae := d.DecodeElement(_aacbf.CNvSpPr, &_ceefg); _bdgae != nil {
					return _bdgae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0047\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ceefg.Name)
				if _cadbg := d.Skip(); _cadbg != nil {
					return _cadbg
				}
			}
		case _b.EndElement:
			break _ebdff
		case _b.CharData:
		}
	}
	return nil
}
func (_feed *CT_LineEndProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccgbg := range start.Attr {
		if _ccgbg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_feed.TypeAttr.UnmarshalXMLAttr(_ccgbg)
			continue
		}
		if _ccgbg.Name.Local == "\u0077" {
			_feed.WAttr.UnmarshalXMLAttr(_ccgbg)
			continue
		}
		if _ccgbg.Name.Local == "\u006c\u0065\u006e" {
			_feed.LenAttr.UnmarshalXMLAttr(_ccgbg)
			continue
		}
	}
	for {
		_cagbf, _bgddc := d.Token()
		if _bgddc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065E\u006ed\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _bgddc)
		}
		if _aadc, _dcgcb := _cagbf.(_b.EndElement); _dcgcb && _aadc.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_Text3D struct {
	Sp3d   *CT_Shape3D
	FlatTx *CT_FlatText
}

// ValidateWithPath validates the CT_AlphaOutsetEffect and its children, prefixing error messages with path
func (_eea *CT_AlphaOutsetEffect) ValidateWithPath(path string) error {
	if _eea.RadAttr != nil {
		if _deeb := _eea.RadAttr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0041\u0074\u0074\u0072"); _deeb != nil {
			return _deeb
		}
	}
	return nil
}
func (_egafg *CT_FillStyleList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	for _, _agbb := range _egafg.EG_FillProperties {
		_agbb.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_BlipFillProperties() *CT_BlipFillProperties {
	_abeg := &CT_BlipFillProperties{}
	return _abeg
}

// ValidateWithPath validates the EG_TextBulletColor and its children, prefixing error messages with path
func (_gadgbc *EG_TextBulletColor) ValidateWithPath(path string) error {
	if _gadgbc.BuClrTx != nil {
		if _bfdbb := _gadgbc.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _bfdbb != nil {
			return _bfdbb
		}
	}
	if _gadgbc.BuClr != nil {
		if _feeec := _gadgbc.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _feeec != nil {
			return _feeec
		}
	}
	return nil
}
func (_cbdc *CT_BackgroundFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cbdc.NoFill != nil {
		_aege := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbdc.NoFill, _aege)
	}
	if _cbdc.SolidFill != nil {
		_dfa := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbdc.SolidFill, _dfa)
	}
	if _cbdc.GradFill != nil {
		_gfaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbdc.GradFill, _gfaa)
	}
	if _cbdc.BlipFill != nil {
		_fabe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbdc.BlipFill, _fabe)
	}
	if _cbdc.PattFill != nil {
		_fdg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbdc.PattFill, _fdg)
	}
	if _cbdc.GrpFill != nil {
		_eead := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cbdc.GrpFill, _eead)
	}
	if _cbdc.EffectLst != nil {
		_aaab := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbdc.EffectLst, _aaab)
	}
	if _cbdc.EffectDag != nil {
		_abb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_cbdc.EffectDag, _abb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HSLEffect and its children
func (_aafegb *CT_HSLEffect) Validate() error {
	return _aafegb.ValidateWithPath("\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_bfecg *CT_GradientStopList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffcee:
	for {
		_gdcba, _affbf := d.Token()
		if _affbf != nil {
			return _affbf
		}
		switch _cdgd := _gdcba.(type) {
		case _b.StartElement:
			switch _cdgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}:
				_cbdff := NewCT_GradientStop()
				if _baedd := d.DecodeElement(_cbdff, &_cdgd); _baedd != nil {
					return _baedd
				}
				_bfecg.Gs = append(_bfecg.Gs, _cbdff)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006etS\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cdgd.Name)
				if _abdff := d.Skip(); _abdff != nil {
					return _abdff
				}
			}
		case _b.EndElement:
			break _ffcee
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_LightRig() *CT_LightRig {
	_aedff := &CT_LightRig{}
	_aedff.RigAttr = ST_LightRigType(1)
	_aedff.DirAttr = ST_LightRigDirection(1)
	return _aedff
}
func NewCT_TextBodyProperties() *CT_TextBodyProperties {
	_aacgb := &CT_TextBodyProperties{}
	return _aacgb
}

// ValidateWithPath validates the CT_AlphaModulateEffect and its children, prefixing error messages with path
func (_ecbf *CT_AlphaModulateEffect) ValidateWithPath(path string) error {
	if _gaf := _ecbf.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _gaf != nil {
		return _gaf
	}
	return nil
}
func NewCT_StyleMatrix() *CT_StyleMatrix {
	_ggfbce := &CT_StyleMatrix{}
	_ggfbce.FillStyleLst = NewCT_FillStyleList()
	_ggfbce.LnStyleLst = NewCT_LineStyleList()
	_ggfbce.EffectStyleLst = NewCT_EffectStyleList()
	_ggfbce.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	return _ggfbce
}

type CT_AnimationElementChoice struct {
	Dgm   *CT_AnimationDgmElement
	Chart *CT_AnimationChartElement
}
type ST_PresetPatternVal byte

func (_gebbc *ST_BlendMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gebbc = 0
	case "\u006f\u0076\u0065\u0072":
		*_gebbc = 1
	case "\u006d\u0075\u006c\u0074":
		*_gebbc = 2
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_gebbc = 3
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_gebbc = 4
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_gebbc = 5
	}
	return nil
}

// ValidateWithPath validates the CT_OfficeStyleSheet and its children, prefixing error messages with path
func (_addfd *CT_OfficeStyleSheet) ValidateWithPath(path string) error {
	if _dbaf := _addfd.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _dbaf != nil {
		return _dbaf
	}
	if _addfd.ObjectDefaults != nil {
		if _ccbbc := _addfd.ObjectDefaults.ValidateWithPath(path + "\u002fO\u0062j\u0065\u0063\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"); _ccbbc != nil {
			return _ccbbc
		}
	}
	if _addfd.ExtraClrSchemeLst != nil {
		if _ddbg := _addfd.ExtraClrSchemeLst.ValidateWithPath(path + "\u002fE\u0078t\u0072\u0061\u0043\u006c\u0072S\u0063\u0068e\u006d\u0065\u004c\u0073\u0074"); _ddbg != nil {
			return _ddbg
		}
	}
	if _addfd.CustClrLst != nil {
		if _eadcd := _addfd.CustClrLst.ValidateWithPath(path + "/\u0043\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"); _eadcd != nil {
			return _eadcd
		}
	}
	if _addfd.ExtLst != nil {
		if _cbbcg := _addfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbbcg != nil {
			return _cbbcg
		}
	}
	return nil
}

type CT_Path2DMoveTo struct{ Pt *CT_AdjPoint2D }

func (_dfbd *CT_ColorChangeEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfbd.UseAAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0041"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dfbd.UseAAttr))})
	}
	e.EncodeToken(start)
	_cfbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u006c\u0072\u0046\u0072\u006fm"}}
	e.EncodeElement(_dfbd.ClrFrom, _cfbg)
	_gedea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u006c\u0072\u0054\u006f"}}
	e.EncodeElement(_dfbd.ClrTo, _gedea)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Percentage and its children, prefixing error messages with path
func (_ebfda *CT_Percentage) ValidateWithPath(path string) error {
	if _cbgfc := _ebfda.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cbgfc != nil {
		return _cbgfc
	}
	return nil
}
func (_ecagce *ST_TextUnderlineType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbdafc, _gcedb := d.Token()
	if _gcedb != nil {
		return _gcedb
	}
	if _acbd, _egbgb := _dbdafc.(_b.EndElement); _egbgb && _acbd.Name == start.Name {
		*_ecagce = 1
		return nil
	}
	if _dadbd, _cffeef := _dbdafc.(_b.CharData); !_cffeef {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbdafc)
	} else {
		switch string(_dadbd) {
		case "":
			*_ecagce = 0
		case "\u006e\u006f\u006e\u0065":
			*_ecagce = 1
		case "\u0077\u006f\u0072d\u0073":
			*_ecagce = 2
		case "\u0073\u006e\u0067":
			*_ecagce = 3
		case "\u0064\u0062\u006c":
			*_ecagce = 4
		case "\u0068\u0065\u0061v\u0079":
			*_ecagce = 5
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_ecagce = 6
		case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
			*_ecagce = 7
		case "\u0064\u0061\u0073\u0068":
			*_ecagce = 8
		case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
			*_ecagce = 9
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
			*_ecagce = 10
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
			*_ecagce = 11
		case "\u0064o\u0074\u0044\u0061\u0073\u0068":
			*_ecagce = 12
		case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_ecagce = 13
		case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
			*_ecagce = 14
		case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_ecagce = 15
		case "\u0077\u0061\u0076\u0079":
			*_ecagce = 16
		case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
			*_ecagce = 17
		case "\u0077a\u0076\u0079\u0044\u0062\u006c":
			*_ecagce = 18
		}
	}
	_dbdafc, _gcedb = d.Token()
	if _gcedb != nil {
		return _gcedb
	}
	if _ccbef, _fbedfb := _dbdafc.(_b.EndElement); _fbedfb && _ccbef.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbdafc)
}

// Validate validates the CT_NonVisualContentPartProperties and its children
func (_accc *CT_NonVisualContentPartProperties) Validate() error {
	return _accc.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_PositiveFixedPercentage and its children, prefixing error messages with path
func (_eecd *CT_PositiveFixedPercentage) ValidateWithPath(path string) error {
	if _dedd := _eecd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dedd != nil {
		return _dedd
	}
	return nil
}

type CT_DashStop struct {
	DAttr  ST_PositivePercentage
	SpAttr ST_PositivePercentage
}

func (_gbbebg ST_TextFontAlignType) String() string {
	switch _gbbebg {
	case 0:
		return ""
	case 1:
		return "\u0061\u0075\u0074\u006f"
	case 2:
		return "\u0074"
	case 3:
		return "\u0063\u0074\u0072"
	case 4:
		return "\u0062\u0061\u0073\u0065"
	case 5:
		return "\u0062"
	}
	return ""
}

type CT_ThemeableLineStyle struct {
	Ln    *CT_LineProperties
	LnRef *CT_StyleMatrixReference
}

func NewCT_EmbeddedWAVAudioFile() *CT_EmbeddedWAVAudioFile {
	_edgac := &CT_EmbeddedWAVAudioFile{}
	return _edgac
}

// Validate validates the CT_LightRig and its children
func (_fegc *CT_LightRig) Validate() error {
	return _fegc.ValidateWithPath("C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067")
}

// Validate validates the CT_Path2DLineTo and its children
func (_fdcaa *CT_Path2DLineTo) Validate() error {
	return _fdcaa.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f")
}
func (_fbbg *CT_GradientStop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073"}, Value: _bb.Sprintf("\u0025\u0076", _fbbg.PosAttr)})
	e.EncodeToken(start)
	if _fbbg.ScrgbClr != nil {
		_ebdfc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbg.ScrgbClr, _ebdfc)
	}
	if _fbbg.SrgbClr != nil {
		_aeab := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fbbg.SrgbClr, _aeab)
	}
	if _fbbg.HslClr != nil {
		_baada := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbg.HslClr, _baada)
	}
	if _fbbg.SysClr != nil {
		_faefa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbg.SysClr, _faefa)
	}
	if _fbbg.SchemeClr != nil {
		_cedcf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbg.SchemeClr, _cedcf)
	}
	if _fbbg.PrstClr != nil {
		_ceffg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fbbg.PrstClr, _ceffg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TextTabAlignType byte

func (_ggfcc *CT_GrayscaleTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_cbaf, _addg := d.Token()
		if _addg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0079\u0073\u0063\u0061\u006c\u0065T\u0072\u0061\u006e\u0073\u0066\u006f\u0072m\u003a\u0020\u0025\u0073", _addg)
		}
		if _ecfb, _aaaae := _cbaf.(_b.EndElement); _aaaae && _ecfb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrameLocking and its children, prefixing error messages with path
func (_fbecb *CT_GraphicalObjectFrameLocking) ValidateWithPath(path string) error {
	if _fbecb.ExtLst != nil {
		if _cafgb := _fbecb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafgb != nil {
			return _cafgb
		}
	}
	return nil
}
func (_ggac *CT_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _ggac.NameAttr)})
	e.EncodeToken(start)
	_cecgd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_ggac.MajorFont, _cecgd)
	_fdeb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_ggac.MinorFont, _fdeb)
	if _ggac.ExtLst != nil {
		_ecga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggac.ExtLst, _ecga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aabda *CT_PositiveSize2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _aabda.CxAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _aabda.CyAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type EG_ThemeableFontStyles struct {
	Font    *CT_FontCollection
	FontRef *CT_FontReference
}
type CT_PresetLineDashProperties struct{ ValAttr ST_PresetLineDashVal }

// Validate validates the CT_DashStop and its children
func (_dbgf *CT_DashStop) Validate() error {
	return _dbgf.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070")
}

// Validate validates the CT_AudioCDTime and its children
func (_ead *CT_AudioCDTime) Validate() error {
	return _ead.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065")
}
func (_dgbdf *CT_GraphicalObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgbdf.GraphicData = NewCT_GraphicalObjectData()
_gecf:
	for {
		_eecf, _defag := d.Token()
		if _defag != nil {
			return _defag
		}
		switch _ccgga := _eecf.(type) {
		case _b.StartElement:
			switch _ccgga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _acc := d.DecodeElement(_dgbdf.GraphicData, &_ccgga); _acc != nil {
					return _acc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069c\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _ccgga.Name)
				if _dbgb := d.Skip(); _dbgb != nil {
					return _dbgb
				}
			}
		case _b.EndElement:
			break _gecf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RelativeRect and its children, prefixing error messages with path
func (_afeda *CT_RelativeRect) ValidateWithPath(path string) error {
	if _afeda.LAttr != nil {
		if _gfgea := _afeda.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _gfgea != nil {
			return _gfgea
		}
	}
	if _afeda.TAttr != nil {
		if _cbbe := _afeda.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cbbe != nil {
			return _cbbe
		}
	}
	if _afeda.RAttr != nil {
		if _beff := _afeda.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _beff != nil {
			return _beff
		}
	}
	if _afeda.BAttr != nil {
		if _aafbe := _afeda.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _aafbe != nil {
			return _aafbe
		}
	}
	return nil
}
func (_dfcbda *CT_QuickTimeFile) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfbda := range start.Attr {
		if _cfbda.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfbda.Name.Local == "\u006c\u0069\u006e\u006b" || _cfbda.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfbda.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dbecbe, _fbege := _cfbda.Value, error(nil)
			if _fbege != nil {
				return _fbege
			}
			_dfcbda.LinkAttr = _dbecbe
			continue
		}
	}
_cgdbb:
	for {
		_bbfff, _dccf := d.Token()
		if _dccf != nil {
			return _dccf
		}
		switch _ffffd := _bbfff.(type) {
		case _b.StartElement:
			switch _ffffd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfcbda.ExtLst = NewCT_OfficeArtExtensionList()
				if _beafd := d.DecodeElement(_dfcbda.ExtLst, &_ffffd); _beafd != nil {
					return _beafd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065\u0020\u0025v", _ffffd.Name)
				if _bbgeb := d.Skip(); _bbgeb != nil {
					return _bbgeb
				}
			}
		case _b.EndElement:
			break _cgdbb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TextAlignTypeUnset    ST_TextAlignType = 0
	ST_TextAlignTypeL        ST_TextAlignType = 1
	ST_TextAlignTypeCtr      ST_TextAlignType = 2
	ST_TextAlignTypeR        ST_TextAlignType = 3
	ST_TextAlignTypeJust     ST_TextAlignType = 4
	ST_TextAlignTypeJustLow  ST_TextAlignType = 5
	ST_TextAlignTypeDist     ST_TextAlignType = 6
	ST_TextAlignTypeThaiDist ST_TextAlignType = 7
)

func (_fabgdb ST_DgmBuildStep) Validate() error { return _fabgdb.ValidateWithPath("") }
func (_acgd *CT_GroupFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bgead, _dbgbe := d.Token()
		if _dbgbe != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070F\u0069l\u006cP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _dbgbe)
		}
		if _gdbg, _aebdb := _bgead.(_b.EndElement); _aebdb && _gdbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afgcd *CT_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afgcd.MajorFont = NewCT_FontCollection()
	_afgcd.MinorFont = NewCT_FontCollection()
	for _, _fabca := range start.Attr {
		if _fabca.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ageag, _cebea := _fabca.Value, error(nil)
			if _cebea != nil {
				return _cebea
			}
			_afgcd.NameAttr = _ageag
			continue
		}
	}
_edbfd:
	for {
		_bbdg, _afbf := d.Token()
		if _afbf != nil {
			return _afbf
		}
		switch _aebfd := _bbdg.(type) {
		case _b.StartElement:
			switch _aebfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}:
				if _cbgf := d.DecodeElement(_afgcd.MajorFont, &_aebfd); _cbgf != nil {
					return _cbgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}:
				if _baaac := d.DecodeElement(_afgcd.MinorFont, &_aebfd); _baaac != nil {
					return _baaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afgcd.ExtLst = NewCT_OfficeArtExtensionList()
				if _gdfb := d.DecodeElement(_afgcd.ExtLst, &_aebfd); _gdfb != nil {
					return _gdfb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065 \u0025\u0076", _aebfd.Name)
				if _bgfcc := d.Skip(); _bgfcc != nil {
					return _bgfcc
				}
			}
		case _b.EndElement:
			break _edbfd
		case _b.CharData:
		}
	}
	return nil
}

type CT_Connection struct {
	IdAttr  uint32
	IdxAttr uint32
}

// Validate validates the EG_TextAutofit and its children
func (_gbdfcf *EG_TextAutofit) Validate() error {
	return _gbdfcf.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074")
}
func NewCT_SRgbColor() *CT_SRgbColor { _begff := &CT_SRgbColor{}; return _begff }
func (_fbaeg *CT_LineJoinBevel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextGeometry and its children, prefixing error messages with path
func (_dcgbe *EG_TextGeometry) ValidateWithPath(path string) error {
	if _dcgbe.CustGeom != nil {
		if _fegad := _dcgbe.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _fegad != nil {
			return _fegad
		}
	}
	if _dcgbe.PrstTxWarp != nil {
		if _fedea := _dcgbe.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _fedea != nil {
			return _fedea
		}
	}
	return nil
}

type CT_TextUnderlineFillGroupWrapper struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_aeed *ST_SystemColorVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggaaca, _defce := d.Token()
	if _defce != nil {
		return _defce
	}
	if _bfefd, _efdeee := _ggaaca.(_b.EndElement); _efdeee && _bfefd.Name == start.Name {
		*_aeed = 1
		return nil
	}
	if _fgdbf, _cdggb := _ggaaca.(_b.CharData); !_cdggb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggaaca)
	} else {
		switch string(_fgdbf) {
		case "":
			*_aeed = 0
		case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
			*_aeed = 1
		case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
			*_aeed = 2
		case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_aeed = 3
		case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_aeed = 4
		case "\u006d\u0065\u006e\u0075":
			*_aeed = 5
		case "\u0077\u0069\u006e\u0064\u006f\u0077":
			*_aeed = 6
		case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
			*_aeed = 7
		case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
			*_aeed = 8
		case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
			*_aeed = 9
		case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_aeed = 10
		case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
			*_aeed = 11
		case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
			*_aeed = 12
		case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
			*_aeed = 13
		case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
			*_aeed = 14
		case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
			*_aeed = 15
		case "\u0062t\u006e\u0046\u0061\u0063\u0065":
			*_aeed = 16
		case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
			*_aeed = 17
		case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
			*_aeed = 18
		case "\u0062t\u006e\u0054\u0065\u0078\u0074":
			*_aeed = 19
		case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_aeed = 20
		case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_aeed = 21
		case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
			*_aeed = 22
		case "\u0033d\u004c\u0069\u0067\u0068\u0074":
			*_aeed = 23
		case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
			*_aeed = 24
		case "\u0069\u006e\u0066\u006f\u0042\u006b":
			*_aeed = 25
		case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
			*_aeed = 26
		case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
			*_aeed = 27
		case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_aeed = 28
		case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_aeed = 29
		case "\u006de\u006e\u0075\u0042\u0061\u0072":
			*_aeed = 30
		}
	}
	_ggaaca, _defce = d.Token()
	if _defce != nil {
		return _defce
	}
	if _ggebf, _gcaafc := _ggaaca.(_b.EndElement); _gcaafc && _ggebf.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggaaca)
}
func NewEG_LineDashProperties() *EG_LineDashProperties {
	_ecbabff := &EG_LineDashProperties{}
	return _ecbabff
}
func (_cgegd *CT_NonVisualDrawingProps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddab := range start.Attr {
		if _ddab.Name.Local == "\u0069\u0064" {
			_adbgd, _gecba := _a.ParseUint(_ddab.Value, 10, 32)
			if _gecba != nil {
				return _gecba
			}
			_cgegd.IdAttr = uint32(_adbgd)
			continue
		}
		if _ddab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_defea, _gedf := _ddab.Value, error(nil)
			if _gedf != nil {
				return _gedf
			}
			_cgegd.NameAttr = _defea
			continue
		}
		if _ddab.Name.Local == "\u0064\u0065\u0073c\u0072" {
			_gggdf, _cgacd := _ddab.Value, error(nil)
			if _cgacd != nil {
				return _cgacd
			}
			_cgegd.DescrAttr = &_gggdf
			continue
		}
		if _ddab.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_aeffdb, _cfadb := _a.ParseBool(_ddab.Value)
			if _cfadb != nil {
				return _cfadb
			}
			_cgegd.HiddenAttr = &_aeffdb
			continue
		}
		if _ddab.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_eagefc, _gfgae := _ddab.Value, error(nil)
			if _gfgae != nil {
				return _gfgae
			}
			_cgegd.TitleAttr = &_eagefc
			continue
		}
	}
_abefd:
	for {
		_eebe, _afggc := d.Token()
		if _afggc != nil {
			return _afggc
		}
		switch _edcddb := _eebe.(type) {
		case _b.StartElement:
			switch _edcddb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_cgegd.HlinkClick = NewCT_Hyperlink()
				if _cbgd := d.DecodeElement(_cgegd.HlinkClick, &_edcddb); _cbgd != nil {
					return _cbgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}:
				_cgegd.HlinkHover = NewCT_Hyperlink()
				if _aecff := d.DecodeElement(_cgegd.HlinkHover, &_edcddb); _aecff != nil {
					return _aecff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgegd.ExtLst = NewCT_OfficeArtExtensionList()
				if _dabg := d.DecodeElement(_cgegd.ExtLst, &_edcddb); _dabg != nil {
					return _dabg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067P\u0072\u006f\u0070\u0073\u0020%\u0076", _edcddb.Name)
				if _beaa := d.Skip(); _beaa != nil {
					return _beaa
				}
			}
		case _b.EndElement:
			break _abefd
		case _b.CharData:
		}
	}
	return nil
}
func ParseUnionST_AdjAngle(s string) (ST_AdjAngle, error) {
	_feegf := ST_AdjAngle{}
	_edfaa, _dfeab := _a.ParseInt(s, 10, 64)
	if _dfeab != nil {
		_feegf.ST_GeomGuideName = &s
	} else {
		_gceb := int32(_edfaa)
		_feegf.ST_Angle = &_gceb
	}
	return _feegf, nil
}
func (_dgaff ST_TextUnderlineType) String() string {
	switch _dgaff {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u006f\u0072d\u0073"
	case 3:
		return "\u0073\u006e\u0067"
	case 4:
		return "\u0064\u0062\u006c"
	case 5:
		return "\u0068\u0065\u0061v\u0079"
	case 6:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 7:
		return "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case 8:
		return "\u0064\u0061\u0073\u0068"
	case 9:
		return "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case 10:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case 11:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case 12:
		return "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case 13:
		return "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 14:
		return "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case 15:
		return "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 16:
		return "\u0077\u0061\u0076\u0079"
	case 17:
		return "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case 18:
		return "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return ""
}

// Validate validates the CT_GroupTransform2D and its children
func (_fded *CT_GroupTransform2D) Validate() error {
	return _fded.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044")
}
func (_bagef ST_TextWrappingType) ValidateWithPath(path string) error {
	switch _bagef {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bagef))
	}
	return nil
}
func (_agecaf *ST_PresetCameraType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfedff, _gcgfd := d.Token()
	if _gcgfd != nil {
		return _gcgfd
	}
	if _gfgec, _ffgbgc := _bfedff.(_b.EndElement); _ffgbgc && _gfgec.Name == start.Name {
		*_agecaf = 1
		return nil
	}
	if _defecb, _eebgf := _bfedff.(_b.CharData); !_eebgf {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfedff)
	} else {
		switch string(_defecb) {
		case "":
			*_agecaf = 0
		case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
			*_agecaf = 1
		case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_agecaf = 2
		case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 3
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
			*_agecaf = 4
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
			*_agecaf = 5
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 6
		case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_agecaf = 7
		case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_agecaf = 8
		case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 9
		case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
			*_agecaf = 10
		case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
			*_agecaf = 11
		case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
			*_agecaf = 12
		case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
			*_agecaf = 13
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
			*_agecaf = 14
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
			*_agecaf = 15
		case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
			*_agecaf = 16
		case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_agecaf = 17
		case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
			*_agecaf = 18
		case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
			*_agecaf = 19
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
			*_agecaf = 20
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
			*_agecaf = 21
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
			*_agecaf = 22
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
			*_agecaf = 23
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
			*_agecaf = 24
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
			*_agecaf = 25
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
			*_agecaf = 26
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
			*_agecaf = 27
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
			*_agecaf = 28
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
			*_agecaf = 29
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
			*_agecaf = 30
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
			*_agecaf = 31
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
			*_agecaf = 32
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
			*_agecaf = 33
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
			*_agecaf = 34
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
			*_agecaf = 35
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
			*_agecaf = 36
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
			*_agecaf = 37
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
			*_agecaf = 38
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
			*_agecaf = 39
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
			*_agecaf = 40
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_agecaf = 41
		case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 42
		case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
			*_agecaf = 43
		case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 44
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
			*_agecaf = 45
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_agecaf = 46
		case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 47
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
			*_agecaf = 48
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
			*_agecaf = 49
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
			*_agecaf = 50
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
			*_agecaf = 51
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
			*_agecaf = 52
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
			*_agecaf = 53
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
			*_agecaf = 54
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_agecaf = 55
		case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
			*_agecaf = 56
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
			*_agecaf = 57
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
			*_agecaf = 58
		case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_agecaf = 59
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
			*_agecaf = 60
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
			*_agecaf = 61
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
			*_agecaf = 62
		}
	}
	_bfedff, _gcgfd = d.Token()
	if _gcgfd != nil {
		return _gcgfd
	}
	if _gegdd, _fgfcba := _bfedff.(_b.EndElement); _fgfcba && _gegdd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfedff)
}

type CT_TextBody struct {
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	P        []*CT_TextParagraph
}

func (_fgff *CT_RelativeOffsetEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eceda := range start.Attr {
		if _eceda.Name.Local == "\u0074\u0078" {
			_gfacg, _gagge := ParseUnionST_Percentage(_eceda.Value)
			if _gagge != nil {
				return _gagge
			}
			_fgff.TxAttr = &_gfacg
			continue
		}
		if _eceda.Name.Local == "\u0074\u0079" {
			_gabcbd, _edaab := ParseUnionST_Percentage(_eceda.Value)
			if _edaab != nil {
				return _edaab
			}
			_fgff.TyAttr = &_gabcbd
			continue
		}
	}
	for {
		_badfe, _bgfeb := d.Token()
		if _bgfeb != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006ca\u0074\u0069\u0076\u0065\u004f\u0066\u0066s\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020%\u0073", _bgfeb)
		}
		if _afcga, _degfe := _badfe.(_b.EndElement); _degfe && _afcga.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BlipChoice struct {
	AlphaBiLevel []*CT_AlphaBiLevelEffect
	AlphaCeiling []*CT_AlphaCeilingEffect
	AlphaFloor   []*CT_AlphaFloorEffect
	AlphaInv     []*CT_AlphaInverseEffect
	AlphaMod     []*CT_AlphaModulateEffect
	AlphaModFix  []*CT_AlphaModulateFixedEffect
	AlphaRepl    []*CT_AlphaReplaceEffect
	BiLevel      []*CT_BiLevelEffect
	Blur         []*CT_BlurEffect
	ClrChange    []*CT_ColorChangeEffect
	ClrRepl      []*CT_ColorReplaceEffect
	Duotone      []*CT_DuotoneEffect
	FillOverlay  []*CT_FillOverlayEffect
	Grayscl      []*CT_GrayscaleEffect
	Hsl          []*CT_HSLEffect
	Lum          []*CT_LuminanceEffect
	Tint         []*CT_TintEffect
}

func (_ffbgg ST_TextAlignType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdgfb := _b.Attr{}
	_fdgfb.Name = name
	switch _ffbgg {
	case ST_TextAlignTypeUnset:
		_fdgfb.Value = ""
	case ST_TextAlignTypeL:
		_fdgfb.Value = "\u006c"
	case ST_TextAlignTypeCtr:
		_fdgfb.Value = "\u0063\u0074\u0072"
	case ST_TextAlignTypeR:
		_fdgfb.Value = "\u0072"
	case ST_TextAlignTypeJust:
		_fdgfb.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAlignTypeJustLow:
		_fdgfb.Value = "\u006au\u0073\u0074\u004c\u006f\u0077"
	case ST_TextAlignTypeDist:
		_fdgfb.Value = "\u0064\u0069\u0073\u0074"
	case ST_TextAlignTypeThaiDist:
		_fdgfb.Value = "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return _fdgfb, nil
}
func (_gacf *CT_StyleMatrix) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gacf.FillStyleLst = NewCT_FillStyleList()
	_gacf.LnStyleLst = NewCT_LineStyleList()
	_gacf.EffectStyleLst = NewCT_EffectStyleList()
	_gacf.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	for _, _edgc := range start.Attr {
		if _edgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcfa, _aabce := _edgc.Value, error(nil)
			if _aabce != nil {
				return _aabce
			}
			_gacf.NameAttr = &_gcfa
			continue
		}
	}
_dbabca:
	for {
		_gaebg, _eeacd := d.Token()
		if _eeacd != nil {
			return _eeacd
		}
		switch _bdbda := _gaebg.(type) {
		case _b.StartElement:
			switch _bdbda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _adcc := d.DecodeElement(_gacf.FillStyleLst, &_bdbda); _adcc != nil {
					return _adcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _ebcab := d.DecodeElement(_gacf.LnStyleLst, &_bdbda); _ebcab != nil {
					return _ebcab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _ccceeb := d.DecodeElement(_gacf.EffectStyleLst, &_bdbda); _ccceeb != nil {
					return _ccceeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _ffeaab := d.DecodeElement(_gacf.BgFillStyleLst, &_bdbda); _ffeaab != nil {
					return _ffeaab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061t\u0072i\u0078\u0020\u0025\u0076", _bdbda.Name)
				if _eceac := d.Skip(); _eceac != nil {
					return _eceac
				}
			}
		case _b.EndElement:
			break _dbabca
		case _b.CharData:
		}
	}
	return nil
}
func (_ggaae *CT_Point3D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbagd := range start.Attr {
		if _cbagd.Name.Local == "\u0078" {
			_cfbdd, _gdggb := ParseUnionST_Coordinate(_cbagd.Value)
			if _gdggb != nil {
				return _gdggb
			}
			_ggaae.XAttr = _cfbdd
			continue
		}
		if _cbagd.Name.Local == "\u0079" {
			_cfgae, _bdgcf := ParseUnionST_Coordinate(_cbagd.Value)
			if _bdgcf != nil {
				return _bdgcf
			}
			_ggaae.YAttr = _cfgae
			continue
		}
		if _cbagd.Name.Local == "\u007a" {
			_cecca, _gfgab := ParseUnionST_Coordinate(_cbagd.Value)
			if _gfgab != nil {
				return _gfgab
			}
			_ggaae.ZAttr = _cecca
			continue
		}
	}
	for {
		_edefb, _ccfg := d.Token()
		if _ccfg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044\u003a\u0020%\u0073", _ccfg)
		}
		if _dgcfd, _gdfe := _edefb.(_b.EndElement); _gdfe && _dgcfd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShape and its children, prefixing error messages with path
func (_cccgc *CT_GvmlGroupShape) ValidateWithPath(path string) error {
	if _cgbgc := _cccgc.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cgbgc != nil {
		return _cgbgc
	}
	if _bacfc := _cccgc.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _bacfc != nil {
		return _bacfc
	}
	for _afcc, _ecddef := range _cccgc.Choice {
		if _eeddf := _ecddef.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _afcc)); _eeddf != nil {
			return _eeddf
		}
	}
	if _cccgc.ExtLst != nil {
		if _bfcbg := _cccgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfcbg != nil {
			return _bfcbg
		}
	}
	return nil
}

type CT_LightRig struct {
	RigAttr ST_LightRigType
	DirAttr ST_LightRigDirection
	Rot     *CT_SphereCoords
}

func (_gedbee *CT_TableStyleTextStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gedbee.BAttr != ST_OnOffStyleTypeUnset {
		_dafga, _ggbde := _gedbee.BAttr.MarshalXMLAttr(_b.Name{Local: "\u0062"})
		if _ggbde != nil {
			return _ggbde
		}
		start.Attr = append(start.Attr, _dafga)
	}
	if _gedbee.IAttr != ST_OnOffStyleTypeUnset {
		_dgcfga, _fadce := _gedbee.IAttr.MarshalXMLAttr(_b.Name{Local: "\u0069"})
		if _fadce != nil {
			return _fadce
		}
		start.Attr = append(start.Attr, _dgcfga)
	}
	e.EncodeToken(start)
	if _gedbee.Font != nil {
		_aabbea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_gedbee.Font, _aabbea)
	}
	if _gedbee.FontRef != nil {
		_fdddg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_gedbee.FontRef, _fdddg)
	}
	if _gedbee.ScrgbClr != nil {
		_cbdee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_gedbee.ScrgbClr, _cbdee)
	}
	if _gedbee.SrgbClr != nil {
		_bgdbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_gedbee.SrgbClr, _bgdbg)
	}
	if _gedbee.HslClr != nil {
		_fgbbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_gedbee.HslClr, _fgbbc)
	}
	if _gedbee.SysClr != nil {
		_dead := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_gedbee.SysClr, _dead)
	}
	if _gedbee.SchemeClr != nil {
		_geeggb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_gedbee.SchemeClr, _geeggb)
	}
	if _gedbee.PrstClr != nil {
		_bgfff := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_gedbee.PrstClr, _bgfff)
	}
	if _gedbee.ExtLst != nil {
		_cffba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gedbee.ExtLst, _cffba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggde *CT_GvmlTextShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggde.TxBody = NewCT_TextBody()
_defcg:
	for {
		_cbfde, _eaba := d.Token()
		if _eaba != nil {
			return _eaba
		}
		switch _dagbb := _cbfde.(type) {
		case _b.StartElement:
			switch _dagbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				if _ceecg := d.DecodeElement(_ggde.TxBody, &_dagbb); _ceecg != nil {
					return _ceecg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_ggde.Choice = NewCT_GvmlTextShapeChoice()
				if _afcde := d.DecodeElement(&_ggde.Choice.UseSpRect, &_dagbb); _afcde != nil {
					return _afcde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_ggde.Choice = NewCT_GvmlTextShapeChoice()
				if _eada := d.DecodeElement(&_ggde.Choice.Xfrm, &_dagbb); _eada != nil {
					return _eada
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggde.ExtLst = NewCT_OfficeArtExtensionList()
				if _ccdb := d.DecodeElement(_ggde.ExtLst, &_dagbb); _ccdb != nil {
					return _ccdb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025v", _dagbb.Name)
				if _edade := d.Skip(); _edade != nil {
					return _edade
				}
			}
		case _b.EndElement:
			break _defcg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextUnderlineFillGroupWrapper and its children
func (_eabdb *CT_TextUnderlineFillGroupWrapper) Validate() error {
	return _eabdb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072")
}
func NewCT_GroupFillProperties() *CT_GroupFillProperties {
	_cbecg := &CT_GroupFillProperties{}
	return _cbecg
}
func NewCT_GvmlGraphicFrameNonVisual() *CT_GvmlGraphicFrameNonVisual {
	_gefcc := &CT_GvmlGraphicFrameNonVisual{}
	_gefcc.CNvPr = NewCT_NonVisualDrawingProps()
	_gefcc.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
	return _gefcc
}
func (_becef *CT_ConnectorLocking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _becef.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoGrpAttr))})
	}
	if _becef.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoSelectAttr))})
	}
	if _becef.NoRotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoRotAttr))})
	}
	if _becef.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoChangeAspectAttr))})
	}
	if _becef.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoMoveAttr))})
	}
	if _becef.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoResizeAttr))})
	}
	if _becef.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoEditPointsAttr))})
	}
	if _becef.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoAdjustHandlesAttr))})
	}
	if _becef.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoChangeArrowheadsAttr))})
	}
	if _becef.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_becef.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _becef.ExtLst != nil {
		_ecdc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_becef.ExtLst, _ecdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FillStyleList and its children
func (_degc *CT_FillStyleList) Validate() error {
	return _degc.ValidateWithPath("\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}

type EG_TextUnderlineLine struct {
	ULnTx *CT_TextUnderlineLineFollowText
	ULn   *CT_LineProperties
}

// ValidateWithPath validates the CT_GeomGuideList and its children, prefixing error messages with path
func (_eebb *CT_GeomGuideList) ValidateWithPath(path string) error {
	for _ffge, _gaef := range _eebb.Gd {
		if _befdc := _gaef.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0047\u0064\u005b\u0025\u0064]", path, _ffge)); _befdc != nil {
			return _befdc
		}
	}
	return nil
}
func (_dbfda *CT_Vector3D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdadg := range start.Attr {
		if _fdadg.Name.Local == "\u0064\u0078" {
			_abece, _gfbde := ParseUnionST_Coordinate(_fdadg.Value)
			if _gfbde != nil {
				return _gfbde
			}
			_dbfda.DxAttr = _abece
			continue
		}
		if _fdadg.Name.Local == "\u0064\u0079" {
			_aeebd, _dfadc := ParseUnionST_Coordinate(_fdadg.Value)
			if _dfadc != nil {
				return _dfadc
			}
			_dbfda.DyAttr = _aeebd
			continue
		}
		if _fdadg.Name.Local == "\u0064\u007a" {
			_aggeg, _faeefg := ParseUnionST_Coordinate(_fdadg.Value)
			if _faeefg != nil {
				return _faeefg
			}
			_dbfda.DzAttr = _aggeg
			continue
		}
	}
	for {
		_ddcfdd, _gaaga := d.Token()
		if _gaaga != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044\u003a\u0020\u0025\u0073", _gaaga)
		}
		if _gdbga, _aggbg := _ddcfdd.(_b.EndElement); _aggbg && _gdbga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eedfa *CT_OfficeArtExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eedfa.Ext != nil {
		_agafd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _fdade := range _eedfa.Ext {
			e.EncodeElement(_fdade, _agafd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbgd *CT_AnimationGraphicalObjectBuildProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bbgd.BldDgm != nil {
		_eee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		e.EncodeElement(_bbgd.BldDgm, _eee)
	}
	if _bbgd.BldChart != nil {
		_bgc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_bbgd.BldChart, _bgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbde *CT_GvmlConnector) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gedbe := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fbde.NvCxnSpPr, _gedbe)
	_cfbeea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fbde.SpPr, _cfbeea)
	if _fbde.Style != nil {
		_afdbe := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fbde.Style, _afdbe)
	}
	if _fbde.ExtLst != nil {
		_beded := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbde.ExtLst, _beded)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_LineProperties() *CT_LineProperties { _eaaed := &CT_LineProperties{}; return _eaaed }

// Validate validates the CT_GraphicalObjectData and its children
func (_bdgfd *CT_GraphicalObjectData) Validate() error {
	return _bdgfd.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061")
}

// Validate validates the CT_TableRow and its children
func (_fefge *CT_TableRow) Validate() error {
	return _fefge.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077")
}
func (_abfeg *EG_TextBullet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aeabfe:
	for {
		_aedfec, _bcfbc := d.Token()
		if _bcfbc != nil {
			return _bcfbc
		}
		switch _dbbda := _aedfec.(type) {
		case _b.StartElement:
			switch _dbbda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_abfeg.BuNone = NewCT_TextNoBullet()
				if _cbbee := d.DecodeElement(_abfeg.BuNone, &_dbbda); _cbbee != nil {
					return _cbbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_abfeg.BuAutoNum = NewCT_TextAutonumberBullet()
				if _ddegg := d.DecodeElement(_abfeg.BuAutoNum, &_dbbda); _ddegg != nil {
					return _ddegg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_abfeg.BuChar = NewCT_TextCharBullet()
				if _bcgegc := d.DecodeElement(_abfeg.BuChar, &_dbbda); _bcgegc != nil {
					return _bcgegc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_abfeg.BuBlip = NewCT_TextBlipBullet()
				if _gbbaf := d.DecodeElement(_abfeg.BuBlip, &_dbbda); _gbbaf != nil {
					return _gbbaf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074 \u0025\u0076", _dbbda.Name)
				if _babff := d.Skip(); _babff != nil {
					return _babff
				}
			}
		case _b.EndElement:
			break _aeabfe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ThemeableEffectStyle and its children, prefixing error messages with path
func (_cgeebd *EG_ThemeableEffectStyle) ValidateWithPath(path string) error {
	if _cgeebd.Effect != nil {
		if _bcdbb := _cgeebd.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _bcdbb != nil {
			return _bcdbb
		}
	}
	if _cgeebd.EffectRef != nil {
		if _gdfcc := _cgeebd.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _gdfcc != nil {
			return _gdfcc
		}
	}
	return nil
}

// Validate validates the EG_ThemeableEffectStyle and its children
func (_dfbff *EG_ThemeableEffectStyle) Validate() error {
	return _dfbff.ValidateWithPath("\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065")
}
func NewCT_AlphaOutsetEffect() *CT_AlphaOutsetEffect { _cgg := &CT_AlphaOutsetEffect{}; return _cgg }
func (_eageg *Tbl) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074b\u006c"
	return _eageg.CT_Table.MarshalXML(e, start)
}

type CT_GroupFillProperties struct{}

func (_feecd ST_PresetCameraType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_feecd.String(), start)
}
func (_gfbaa ST_TextHorzOverflowType) String() string {
	switch _gfbaa {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

// Validate validates the CT_GvmlGraphicalObjectFrame and its children
func (_acge *CT_GvmlGraphicalObjectFrame) Validate() error {
	return _acge.ValidateWithPath("C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065")
}

// Validate validates the CT_GradientFillProperties and its children
func (_gefae *CT_GradientFillProperties) Validate() error {
	return _gefae.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}
func (_daeca *ST_TextAnchoringType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_daeca = 0
	case "\u0074":
		*_daeca = 1
	case "\u0063\u0074\u0072":
		*_daeca = 2
	case "\u0062":
		*_daeca = 3
	case "\u006a\u0075\u0073\u0074":
		*_daeca = 4
	case "\u0064\u0069\u0073\u0074":
		*_daeca = 5
	}
	return nil
}
func (_debdg ST_TextShapeType) String() string {
	switch _debdg {
	case 0:
		return ""
	case 1:
		return "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case 2:
		return "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case 4:
		return "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case 6:
		return "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case 7:
		return "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case 8:
		return "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case 9:
		return "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case 10:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case 11:
		return "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case 12:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case 13:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case 14:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case 15:
		return "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case 16:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case 17:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case 18:
		return "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case 19:
		return "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case 20:
		return "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case 21:
		return "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case 23:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case 24:
		return "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case 25:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case 26:
		return "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case 27:
		return "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case 28:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 29:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 30:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 31:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 32:
		return "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case 33:
		return "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case 34:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case 35:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case 36:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case 37:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case 38:
		return "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case 39:
		return "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case 40:
		return "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case 41:
		return "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return ""
}

type CT_GrayscaleEffect struct{}

func (_fgag *CT_Headers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cgafb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072"}}
	for _, _efee := range _fgag.Header {
		e.EncodeElement(_efee, _cgafb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_BlackWhiteMode byte

// Validate validates the EG_TextBulletSize and its children
func (_gfdac *EG_TextBulletSize) Validate() error {
	return _gfdac.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065")
}
func NewCT_NonVisualGraphicFrameProperties() *CT_NonVisualGraphicFrameProperties {
	_dfdec := &CT_NonVisualGraphicFrameProperties{}
	return _dfdec
}

// Validate validates the EG_ShadeProperties and its children
func (_cgfeb *EG_ShadeProperties) Validate() error {
	return _cgfeb.ValidateWithPath("\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_ScRgbColor() *CT_ScRgbColor { _egafb := &CT_ScRgbColor{}; return _egafb }

// Validate validates the CT_DefaultShapeDefinition and its children
func (_agac *CT_DefaultShapeDefinition) Validate() error {
	return _agac.ValidateWithPath("\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn")
}

// ST_PositiveFixedPercentage is a union type
type ST_PositiveFixedPercentage struct {
	ST_PositiveFixedPercentageDecimal *int32
	ST_PositiveFixedPercentage        *ST_Percentage
}

func (_edeab *CT_TextUnderlineFillFollowText) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdge *EG_Text3D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fcdfg:
	for {
		_ecdff, _gagaf := d.Token()
		if _gagaf != nil {
			return _gagaf
		}
		switch _egeaa := _ecdff.(type) {
		case _b.StartElement:
			switch _egeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_fdge.Sp3d = NewCT_Shape3D()
				if _daedc := d.DecodeElement(_fdge.Sp3d, &_egeaa); _daedc != nil {
					return _daedc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_fdge.FlatTx = NewCT_FlatText()
				if _bddgc := d.DecodeElement(_fdge.FlatTx, &_egeaa); _bddgc != nil {
					return _bddgc
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0054\u0065\u0078t\u0033\u0044 \u0025\u0076", _egeaa.Name)
				if _febeg := d.Skip(); _febeg != nil {
					return _febeg
				}
			}
		case _b.EndElement:
			break _fcdfg
		case _b.CharData:
		}
	}
	return nil
}
func (_acaaa *CT_TableGrid) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdfg:
	for {
		_cggba, _fafcg := d.Token()
		if _fafcg != nil {
			return _fafcg
		}
		switch _efcd := _cggba.(type) {
		case _b.StartElement:
			switch _efcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}:
				_ggdad := NewCT_TableCol()
				if _accea := d.DecodeElement(_ggdad, &_efcd); _accea != nil {
					return _accea
				}
				_acaaa.GridCol = append(_acaaa.GridCol, _ggdad)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0047\u0072\u0069\u0064\u0020\u0025\u0076", _efcd.Name)
				if _bbfc := d.Skip(); _bbfc != nil {
					return _bbfc
				}
			}
		case _b.EndElement:
			break _cdfg
		case _b.CharData:
		}
	}
	return nil
}

type CT_AnimationChartElement struct {
	SeriesIdxAttr   *int32
	CategoryIdxAttr *int32
	BldStepAttr     ST_ChartBuildStep
}

func NewTblStyleLst() *TblStyleLst {
	_dbeg := &TblStyleLst{}
	_dbeg.CT_TableStyleList = *NewCT_TableStyleList()
	return _dbeg
}

// Validate validates the CT_GvmlGraphicFrameNonVisual and its children
func (_eabcg *CT_GvmlGraphicFrameNonVisual) Validate() error {
	return _eabcg.ValidateWithPath("\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c")
}
func (_dbedf *ST_LineEndLength) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbedf = 0
	case "\u0073\u006d":
		*_dbedf = 1
	case "\u006d\u0065\u0064":
		*_dbedf = 2
	case "\u006c\u0067":
		*_dbedf = 3
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShapeChoice and its children, prefixing error messages with path
func (_gaae *CT_GvmlGroupShapeChoice) ValidateWithPath(path string) error {
	for _gcefd, _ffcda := range _gaae.TxSp {
		if _abcac := _ffcda.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0054\u0078\u0053\u0070\u005b\u0025\u0064\u005d", path, _gcefd)); _abcac != nil {
			return _abcac
		}
	}
	for _gbgag, _eeabd := range _gaae.Sp {
		if _cadgg := _eeabd.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _gbgag)); _cadgg != nil {
			return _cadgg
		}
	}
	for _eedda, _aceg := range _gaae.CxnSp {
		if _fffe := _aceg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _eedda)); _fffe != nil {
			return _fffe
		}
	}
	for _bdac, _eeecf := range _gaae.Pic {
		if _gccac := _eeecf.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _bdac)); _gccac != nil {
			return _gccac
		}
	}
	for _deebf, _gdbec := range _gaae.GraphicFrame {
		if _ecce := _gdbec.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _deebf)); _ecce != nil {
			return _ecce
		}
	}
	for _cgbdg, _eafe := range _gaae.GrpSp {
		if _edfdd := _eafe.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _cgbdg)); _edfdd != nil {
			return _edfdd
		}
	}
	return nil
}
func NewCT_LineJoinMiterProperties() *CT_LineJoinMiterProperties {
	_fgdeg := &CT_LineJoinMiterProperties{}
	return _fgdeg
}

const (
	ST_CompoundLineUnset     ST_CompoundLine = 0
	ST_CompoundLineSng       ST_CompoundLine = 1
	ST_CompoundLineDbl       ST_CompoundLine = 2
	ST_CompoundLineThickThin ST_CompoundLine = 3
	ST_CompoundLineThinThick ST_CompoundLine = 4
	ST_CompoundLineTri       ST_CompoundLine = 5
)

func (_fgafd *CT_TextCharBullet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061\u0072"}, Value: _bb.Sprintf("\u0025\u0076", _fgafd.CharAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_NonVisualPictureProperties() *CT_NonVisualPictureProperties {
	_gebbe := &CT_NonVisualPictureProperties{}
	return _gebbe
}

type ST_PathShadeType byte
type CT_SRgbColor struct {
	ValAttr           string
	EG_ColorTransform []*EG_ColorTransform
}

func (_dbgg *CT_EffectStyleItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dbgg.EffectLst != nil {
		_bebbd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbgg.EffectLst, _bebbd)
	}
	if _dbgg.EffectDag != nil {
		_cedba := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dbgg.EffectDag, _cedba)
	}
	if _dbgg.Scene3d != nil {
		_cggf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_dbgg.Scene3d, _cggf)
	}
	if _dbgg.Sp3d != nil {
		_edbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_dbgg.Sp3d, _edbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adgc *CT_SoftEdgesEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adgc.RadAttr = 0
	for _, _aebgca := range start.Attr {
		if _aebgca.Name.Local == "\u0072\u0061\u0064" {
			_ffgc, _dbdfgd := _a.ParseInt(_aebgca.Value, 10, 64)
			if _dbdfgd != nil {
				return _dbdfgd
			}
			_adgc.RadAttr = _ffgc
			continue
		}
	}
	for {
		_aebbg, _cgbdb := d.Token()
		if _cgbdb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u006f\u0066\u0074\u0045\u0064\u0067e\u0073\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _cgbdb)
		}
		if _fabb, _gfgge := _aebbg.(_b.EndElement); _gfgge && _fabb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TintEffect() *CT_TintEffect { _efgad := &CT_TintEffect{}; return _efgad }
func (_ffcb *CT_Connection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fedcd := range start.Attr {
		if _fedcd.Name.Local == "\u0069\u0064" {
			_bfag, _baee := _a.ParseUint(_fedcd.Value, 10, 32)
			if _baee != nil {
				return _baee
			}
			_ffcb.IdAttr = uint32(_bfag)
			continue
		}
		if _fedcd.Name.Local == "\u0069\u0064\u0078" {
			_gdafd, _dfgg := _a.ParseUint(_fedcd.Value, 10, 32)
			if _dfgg != nil {
				return _dfgg
			}
			_ffcb.IdxAttr = uint32(_gdafd)
			continue
		}
	}
	for {
		_ccda, _fafd := d.Token()
		if _fafd != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0043o\u006en\u0065c\u0074\u0069\u006f\u006e\u003a\u0020\u0025s", _fafd)
		}
		if _aedf, _gded := _ccda.(_b.EndElement); _gded && _aedf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SupplementalFont struct {
	ScriptAttr   string
	TypefaceAttr string
}
type EG_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

func (_fabda *CT_ComplementTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_deea, _egdd := d.Token()
		if _egdd != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u006dp\u006ce\u006de\u006et\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _egdd)
		}
		if _agbg, _dfbg := _deea.(_b.EndElement); _dfbg && _agbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_baaad ST_PresetMaterialType) String() string {
	switch _baaad {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case 2:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case 4:
		return "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case 5:
		return "\u006d\u0061\u0074t\u0065"
	case 6:
		return "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case 7:
		return "\u006d\u0065\u0074a\u006c"
	case 8:
		return "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case 9:
		return "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case 10:
		return "\u0070\u006f\u0077\u0064\u0065\u0072"
	case 11:
		return "\u0064\u006b\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case 13:
		return "\u0063\u006c\u0065a\u0072"
	case 14:
		return "\u0066\u006c\u0061\u0074"
	case 15:
		return "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return ""
}

// ValidateWithPath validates the CT_HSLEffect and its children, prefixing error messages with path
func (_edgdc *CT_HSLEffect) ValidateWithPath(path string) error {
	if _edgdc.HueAttr != nil {
		if *_edgdc.HueAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edgdc.HueAttr)
		}
		if *_edgdc.HueAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_edgdc.HueAttr)
		}
	}
	if _edgdc.SatAttr != nil {
		if _eddcc := _edgdc.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _eddcc != nil {
			return _eddcc
		}
	}
	if _edgdc.LumAttr != nil {
		if _cccee := _edgdc.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _cccee != nil {
			return _cccee
		}
	}
	return nil
}
func (_fad *CT_AlphaInverseEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gbg:
	for {
		_beed, _dfg := d.Token()
		if _dfg != nil {
			return _dfg
		}
		switch _feb := _beed.(type) {
		case _b.StartElement:
			switch _feb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_fad.ScrgbClr = NewCT_ScRgbColor()
				if _bde := d.DecodeElement(_fad.ScrgbClr, &_feb); _bde != nil {
					return _bde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fad.SrgbClr = NewCT_SRgbColor()
				if _fgaf := d.DecodeElement(_fad.SrgbClr, &_feb); _fgaf != nil {
					return _fgaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_fad.HslClr = NewCT_HslColor()
				if _ebeg := d.DecodeElement(_fad.HslClr, &_feb); _ebeg != nil {
					return _ebeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_fad.SysClr = NewCT_SystemColor()
				if _dgcf := d.DecodeElement(_fad.SysClr, &_feb); _dgcf != nil {
					return _dgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fad.SchemeClr = NewCT_SchemeColor()
				if _gff := d.DecodeElement(_fad.SchemeClr, &_feb); _gff != nil {
					return _gff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_fad.PrstClr = NewCT_PresetColor()
				if _egafc := d.DecodeElement(_fad.PrstClr, &_feb); _egafc != nil {
					return _egafc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _feb.Name)
				if _ecag := d.Skip(); _ecag != nil {
					return _ecag
				}
			}
		case _b.EndElement:
			break _gbg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_SystemColorValUnset                   ST_SystemColorVal = 0
	ST_SystemColorValScrollBar               ST_SystemColorVal = 1
	ST_SystemColorValBackground              ST_SystemColorVal = 2
	ST_SystemColorValActiveCaption           ST_SystemColorVal = 3
	ST_SystemColorValInactiveCaption         ST_SystemColorVal = 4
	ST_SystemColorValMenu                    ST_SystemColorVal = 5
	ST_SystemColorValWindow                  ST_SystemColorVal = 6
	ST_SystemColorValWindowFrame             ST_SystemColorVal = 7
	ST_SystemColorValMenuText                ST_SystemColorVal = 8
	ST_SystemColorValWindowText              ST_SystemColorVal = 9
	ST_SystemColorValCaptionText             ST_SystemColorVal = 10
	ST_SystemColorValActiveBorder            ST_SystemColorVal = 11
	ST_SystemColorValInactiveBorder          ST_SystemColorVal = 12
	ST_SystemColorValAppWorkspace            ST_SystemColorVal = 13
	ST_SystemColorValHighlight               ST_SystemColorVal = 14
	ST_SystemColorValHighlightText           ST_SystemColorVal = 15
	ST_SystemColorValBtnFace                 ST_SystemColorVal = 16
	ST_SystemColorValBtnShadow               ST_SystemColorVal = 17
	ST_SystemColorValGrayText                ST_SystemColorVal = 18
	ST_SystemColorValBtnText                 ST_SystemColorVal = 19
	ST_SystemColorValInactiveCaptionText     ST_SystemColorVal = 20
	ST_SystemColorValBtnHighlight            ST_SystemColorVal = 21
	ST_SystemColorVal3dDkShadow              ST_SystemColorVal = 22
	ST_SystemColorVal3dLight                 ST_SystemColorVal = 23
	ST_SystemColorValInfoText                ST_SystemColorVal = 24
	ST_SystemColorValInfoBk                  ST_SystemColorVal = 25
	ST_SystemColorValHotLight                ST_SystemColorVal = 26
	ST_SystemColorValGradientActiveCaption   ST_SystemColorVal = 27
	ST_SystemColorValGradientInactiveCaption ST_SystemColorVal = 28
	ST_SystemColorValMenuHighlight           ST_SystemColorVal = 29
	ST_SystemColorValMenuBar                 ST_SystemColorVal = 30
)

// ValidateWithPath validates the CT_LuminanceEffect and its children, prefixing error messages with path
func (_fdgbdc *CT_LuminanceEffect) ValidateWithPath(path string) error {
	if _fdgbdc.BrightAttr != nil {
		if _deffa := _fdgbdc.BrightAttr.ValidateWithPath(path + "/\u0042\u0072\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072"); _deffa != nil {
			return _deffa
		}
	}
	if _fdgbdc.ContrastAttr != nil {
		if _cgdb := _fdgbdc.ContrastAttr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0041\u0074\u0074\u0072"); _cgdb != nil {
			return _cgdb
		}
	}
	return nil
}

const (
	ST_TextHorzOverflowTypeUnset    ST_TextHorzOverflowType = 0
	ST_TextHorzOverflowTypeOverflow ST_TextHorzOverflowType = 1
	ST_TextHorzOverflowTypeClip     ST_TextHorzOverflowType = 2
)

func (_fabge ST_PositivePercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fabge.ST_PositivePercentageDecimal != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_fabge.ST_PositivePercentageDecimal)))
	}
	if _fabge.ST_PositivePercentage != nil {
		e.Encode(_fabge.ST_PositivePercentage)
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_ggec *CT_NonVisualDrawingShapeProps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggec.TxBoxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0078\u0042o\u0078"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ggec.TxBoxAttr))})
	}
	e.EncodeToken(start)
	if _ggec.SpLocks != nil {
		_cbcac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_ggec.SpLocks, _cbcac)
	}
	if _ggec.ExtLst != nil {
		_gcbcg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggec.ExtLst, _gcbcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GammaTransform and its children
func (_ecgfb *CT_GammaTransform) Validate() error {
	return _ecgfb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}
func NewCT_GvmlTextShapeChoice() *CT_GvmlTextShapeChoice {
	_efbe := &CT_GvmlTextShapeChoice{}
	return _efbe
}

// Validate validates the CT_ColorSchemeAndMapping and its children
func (_gfec *CT_ColorSchemeAndMapping) Validate() error {
	return _gfec.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}
func NewCT_Path2DList() *CT_Path2DList { _fdag := &CT_Path2DList{}; return _fdag }
func (_dccgf ST_PathFillMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dccgf.String(), start)
}

// ST_Coordinate32 is a union type
type ST_Coordinate32 struct {
	ST_Coordinate32Unqualified *int32
	ST_UniversalMeasure        *string
}

// Validate validates the CT_OuterShadowEffect and its children
func (_cfbge *CT_OuterShadowEffect) Validate() error {
	return _cfbge.ValidateWithPath("C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

// Validate validates the CT_Percentage and its children
func (_geegb *CT_Percentage) Validate() error {
	return _geegb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}
func NewCT_TextFont() *CT_TextFont           { _bbgg := &CT_TextFont{}; return _bbgg }
func NewCT_GeomGuideList() *CT_GeomGuideList { _dcad := &CT_GeomGuideList{}; return _dcad }

type CT_PositiveFixedPercentage struct{ ValAttr ST_PositiveFixedPercentage }

func (_aefbdf ST_PresetShadowVal) Validate() error { return _aefbdf.ValidateWithPath("") }
func (_faea *CT_NonVisualGroupDrawingShapeProps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _faea.GrpSpLocks != nil {
		_fecc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067r\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_faea.GrpSpLocks, _fecc)
	}
	if _faea.ExtLst != nil {
		_dbdff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faea.ExtLst, _dbdff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Path2DArcTo and its children
func (_febdab *CT_Path2DArcTo) Validate() error {
	return _febdab.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f")
}
func (_fcaecf ST_PresetCameraType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eaaeg := _b.Attr{}
	_eaaeg.Name = name
	switch _fcaecf {
	case ST_PresetCameraTypeUnset:
		_eaaeg.Value = ""
	case ST_PresetCameraTypeLegacyObliqueTopLeft:
		_eaaeg.Value = "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueTop:
		_eaaeg.Value = "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeLegacyObliqueTopRight:
		_eaaeg.Value = "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueLeft:
		_eaaeg.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueFront:
		_eaaeg.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeLegacyObliqueRight:
		_eaaeg.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottomLeft:
		_eaaeg.Value = "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottom:
		_eaaeg.Value = "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyObliqueBottomRight:
		_eaaeg.Value = "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTopLeft:
		_eaaeg.Value = "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTop:
		_eaaeg.Value = "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case ST_PresetCameraTypeLegacyPerspectiveTopRight:
		_eaaeg.Value = "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case ST_PresetCameraTypeLegacyPerspectiveLeft:
		_eaaeg.Value = "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveFront:
		_eaaeg.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveRight:
		_eaaeg.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottomLeft:
		_eaaeg.Value = "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottom:
		_eaaeg.Value = "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyPerspectiveBottomRight:
		_eaaeg.Value = "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case ST_PresetCameraTypeOrthographicFront:
		_eaaeg.Value = "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeIsometricTopUp:
		_eaaeg.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case ST_PresetCameraTypeIsometricTopDown:
		_eaaeg.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricBottomUp:
		_eaaeg.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case ST_PresetCameraTypeIsometricBottomDown:
		_eaaeg.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricLeftUp:
		_eaaeg.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricLeftDown:
		_eaaeg.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricRightUp:
		_eaaeg.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricRightDown:
		_eaaeg.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricOffAxis1Left:
		_eaaeg.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Right:
		_eaaeg.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Top:
		_eaaeg.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis2Left:
		_eaaeg.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Right:
		_eaaeg.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Top:
		_eaaeg.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis3Left:
		_eaaeg.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Right:
		_eaaeg.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Bottom:
		_eaaeg.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeIsometricOffAxis4Left:
		_eaaeg.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Right:
		_eaaeg.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Bottom:
		_eaaeg.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueTopLeft:
		_eaaeg.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueTop:
		_eaaeg.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeObliqueTopRight:
		_eaaeg.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueLeft:
		_eaaeg.Value = "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueRight:
		_eaaeg.Value = "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueBottomLeft:
		_eaaeg.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueBottom:
		_eaaeg.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueBottomRight:
		_eaaeg.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveFront:
		_eaaeg.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypePerspectiveLeft:
		_eaaeg.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypePerspectiveRight:
		_eaaeg.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveAbove:
		_eaaeg.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case ST_PresetCameraTypePerspectiveBelow:
		_eaaeg.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case ST_PresetCameraTypePerspectiveAboveLeftFacing:
		_eaaeg.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveAboveRightFacing:
		_eaaeg.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingLeftFacing:
		_eaaeg.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingRightFacing:
		_eaaeg.Value = "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicLeftFacing:
		_eaaeg.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicRightFacing:
		_eaaeg.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing:
		_eaaeg.Value = "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing:
		_eaaeg.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case ST_PresetCameraTypePerspectiveRelaxed:
		_eaaeg.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case ST_PresetCameraTypePerspectiveRelaxedModerately:
		_eaaeg.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return _eaaeg, nil
}

type CT_PositiveFixedAngle struct{ ValAttr int32 }

func (_fcgff *ST_TextPoint) ValidateWithPath(path string) error {
	_dcbgb := []string{}
	if _fcgff.ST_TextPointUnqualified != nil {
		_dcbgb = append(_dcbgb, "\u0053\u0054\u005fTe\u0078\u0074\u0050\u006f\u0069\u006e\u0074\u0055\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _fcgff.ST_UniversalMeasure != nil {
		_dcbgb = append(_dcbgb, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_dcbgb) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _dcbgb)
	}
	return nil
}

type CT_ColorScheme struct {
	NameAttr string
	Dk1      *CT_Color
	Lt1      *CT_Color
	Dk2      *CT_Color
	Lt2      *CT_Color
	Accent1  *CT_Color
	Accent2  *CT_Color
	Accent3  *CT_Color
	Accent4  *CT_Color
	Accent5  *CT_Color
	Accent6  *CT_Color
	Hlink    *CT_Color
	FolHlink *CT_Color
	ExtLst   *CT_OfficeArtExtensionList
}

func (_eaeae *CT_GvmlShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaeae.NvSpPr = NewCT_GvmlShapeNonVisual()
	_eaeae.SpPr = NewCT_ShapeProperties()
_effef:
	for {
		_fddaf, _afdfa := d.Token()
		if _afdfa != nil {
			return _afdfa
		}
		switch _dffd := _fddaf.(type) {
		case _b.StartElement:
			switch _dffd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _bbgfc := d.DecodeElement(_eaeae.NvSpPr, &_dffd); _bbgfc != nil {
					return _bbgfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _aafb := d.DecodeElement(_eaeae.SpPr, &_dffd); _aafb != nil {
					return _aafb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_eaeae.TxSp = NewCT_GvmlTextShape()
				if _eedgf := d.DecodeElement(_eaeae.TxSp, &_dffd); _eedgf != nil {
					return _eedgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_eaeae.Style = NewCT_ShapeStyle()
				if _cbab := d.DecodeElement(_eaeae.Style, &_dffd); _cbab != nil {
					return _cbab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaeae.ExtLst = NewCT_OfficeArtExtensionList()
				if _accaf := d.DecodeElement(_eaeae.ExtLst, &_dffd); _accaf != nil {
					return _accaf
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0076\u006dl\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _dffd.Name)
				if _dcdab := d.Skip(); _dcdab != nil {
					return _dcdab
				}
			}
		case _b.EndElement:
			break _effef
		case _b.CharData:
		}
	}
	return nil
}
func (_efafb *CT_TextBody) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efafb.BodyPr = NewCT_TextBodyProperties()
_eefd:
	for {
		_fgdf, _ffdde := d.Token()
		if _ffdde != nil {
			return _ffdde
		}
		switch _bggcgc := _fgdf.(type) {
		case _b.StartElement:
			switch _bggcgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _bebfg := d.DecodeElement(_efafb.BodyPr, &_bggcgc); _bebfg != nil {
					return _bebfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_efafb.LstStyle = NewCT_TextListStyle()
				if _abgcf := d.DecodeElement(_efafb.LstStyle, &_bggcgc); _abgcf != nil {
					return _abgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_caaga := NewCT_TextParagraph()
				if _gaca := d.DecodeElement(_caaga, &_bggcgc); _gaca != nil {
					return _gaca
				}
				_efafb.P = append(_efafb.P, _caaga)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0020\u0025\u0076", _bggcgc.Name)
				if _eecffd := d.Skip(); _eecffd != nil {
					return _eecffd
				}
			}
		case _b.EndElement:
			break _eefd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_EffectProperties() *CT_EffectProperties { _cccg := &CT_EffectProperties{}; return _cccg }
func NewCT_GvmlGroupShapeChoice() *CT_GvmlGroupShapeChoice {
	_fgbg := &CT_GvmlGroupShapeChoice{}
	return _fgbg
}
func (_ffeee ST_TextHorzOverflowType) Validate() error { return _ffeee.ValidateWithPath("") }

type CT_OuterShadowEffect struct {
	BlurRadAttr      *int64
	DistAttr         *int64
	DirAttr          *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
	ScrgbClr         *CT_ScRgbColor
	SrgbClr          *CT_SRgbColor
	HslClr           *CT_HslColor
	SysClr           *CT_SystemColor
	SchemeClr        *CT_SchemeColor
	PrstClr          *CT_PresetColor
}

func (_cdaeg ST_OnOffStyleType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdaeg.String(), start)
}

// ValidateWithPath validates the CT_InverseGammaTransform and its children, prefixing error messages with path
func (_efaga *CT_InverseGammaTransform) ValidateWithPath(path string) error { return nil }
func (_debge ST_EffectContainerType) String() string {
	switch _debge {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u0062"
	case 2:
		return "\u0074\u0072\u0065\u0065"
	}
	return ""
}

type AG_Locking struct {
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// ValidateWithPath validates the EG_ThemeableFontStyles and its children, prefixing error messages with path
func (_bfaa *EG_ThemeableFontStyles) ValidateWithPath(path string) error {
	if _bfaa.Font != nil {
		if _bceeb := _bfaa.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _bceeb != nil {
			return _bceeb
		}
	}
	if _bfaa.FontRef != nil {
		if _eegeaa := _bfaa.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _eegeaa != nil {
			return _eegeaa
		}
	}
	return nil
}

// Validate validates the EG_ThemeableFontStyles and its children
func (_bggfbd *EG_ThemeableFontStyles) Validate() error {
	return _bggfbd.ValidateWithPath("\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073")
}
func (_ggfgd *CT_PresetColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggfgd.ValAttr = ST_PresetColorVal(1)
	for _, _eaedb := range start.Attr {
		if _eaedb.Name.Local == "\u0076\u0061\u006c" {
			_ggfgd.ValAttr.UnmarshalXMLAttr(_eaedb)
			continue
		}
	}
_eacf:
	for {
		_cabab, _aadbc := d.Token()
		if _aadbc != nil {
			return _aadbc
		}
		switch _bcebe := _cabab.(type) {
		case _b.StartElement:
			switch _bcebe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ebdba := NewEG_ColorTransform()
				_ebdba.Tint = NewCT_PositiveFixedPercentage()
				if _cgbdce := d.DecodeElement(_ebdba.Tint, &_bcebe); _cgbdce != nil {
					return _cgbdce
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _ebdba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_efgf := NewEG_ColorTransform()
				_efgf.Shade = NewCT_PositiveFixedPercentage()
				if _bdaee := d.DecodeElement(_efgf.Shade, &_bcebe); _bdaee != nil {
					return _bdaee
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _efgf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_baafb := NewEG_ColorTransform()
				_baafb.Comp = NewCT_ComplementTransform()
				if _gadbf := d.DecodeElement(_baafb.Comp, &_bcebe); _gadbf != nil {
					return _gadbf
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _baafb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_cacfe := NewEG_ColorTransform()
				_cacfe.Inv = NewCT_InverseTransform()
				if _bbffg := d.DecodeElement(_cacfe.Inv, &_bcebe); _bbffg != nil {
					return _bbffg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cacfe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_ebdaa := NewEG_ColorTransform()
				_ebdaa.Gray = NewCT_GrayscaleTransform()
				if _fgfaba := d.DecodeElement(_ebdaa.Gray, &_bcebe); _fgfaba != nil {
					return _fgfaba
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _ebdaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_cgefd := NewEG_ColorTransform()
				_cgefd.Alpha = NewCT_PositiveFixedPercentage()
				if _fcdg := d.DecodeElement(_cgefd.Alpha, &_bcebe); _fcdg != nil {
					return _fcdg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cgefd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_baebg := NewEG_ColorTransform()
				_baebg.AlphaOff = NewCT_FixedPercentage()
				if _edag := d.DecodeElement(_baebg.AlphaOff, &_bcebe); _edag != nil {
					return _edag
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _baebg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_cggcf := NewEG_ColorTransform()
				_cggcf.AlphaMod = NewCT_PositivePercentage()
				if _egcb := d.DecodeElement(_cggcf.AlphaMod, &_bcebe); _egcb != nil {
					return _egcb
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cggcf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_ccacg := NewEG_ColorTransform()
				_ccacg.Hue = NewCT_PositiveFixedAngle()
				if _gcfc := d.DecodeElement(_ccacg.Hue, &_bcebe); _gcfc != nil {
					return _gcfc
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _ccacg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_cdece := NewEG_ColorTransform()
				_cdece.HueOff = NewCT_Angle()
				if _gdaa := d.DecodeElement(_cdece.HueOff, &_bcebe); _gdaa != nil {
					return _gdaa
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cdece)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ecdba := NewEG_ColorTransform()
				_ecdba.HueMod = NewCT_PositivePercentage()
				if _eccce := d.DecodeElement(_ecdba.HueMod, &_bcebe); _eccce != nil {
					return _eccce
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _ecdba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_acfg := NewEG_ColorTransform()
				_acfg.Sat = NewCT_Percentage()
				if _bcad := d.DecodeElement(_acfg.Sat, &_bcebe); _bcad != nil {
					return _bcad
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _acfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dgbfeg := NewEG_ColorTransform()
				_dgbfeg.SatOff = NewCT_Percentage()
				if _bddgf := d.DecodeElement(_dgbfeg.SatOff, &_bcebe); _bddgf != nil {
					return _bddgf
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _dgbfeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_cdae := NewEG_ColorTransform()
				_cdae.SatMod = NewCT_Percentage()
				if _edcecdc := d.DecodeElement(_cdae.SatMod, &_bcebe); _edcecdc != nil {
					return _edcecdc
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cdae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bdadc := NewEG_ColorTransform()
				_bdadc.Lum = NewCT_Percentage()
				if _fggda := d.DecodeElement(_bdadc.Lum, &_bcebe); _fggda != nil {
					return _fggda
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _bdadc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_cfdbe := NewEG_ColorTransform()
				_cfdbe.LumOff = NewCT_Percentage()
				if _dedggg := d.DecodeElement(_cfdbe.LumOff, &_bcebe); _dedggg != nil {
					return _dedggg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cfdbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_fcbga := NewEG_ColorTransform()
				_fcbga.LumMod = NewCT_Percentage()
				if _cfefda := d.DecodeElement(_fcbga.LumMod, &_bcebe); _cfefda != nil {
					return _cfefda
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _fcbga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bgcc := NewEG_ColorTransform()
				_bgcc.Red = NewCT_Percentage()
				if _efefg := d.DecodeElement(_bgcc.Red, &_bcebe); _efefg != nil {
					return _efefg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _bgcc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_cgbca := NewEG_ColorTransform()
				_cgbca.RedOff = NewCT_Percentage()
				if _egda := d.DecodeElement(_cgbca.RedOff, &_bcebe); _egda != nil {
					return _egda
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cgbca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_affdd := NewEG_ColorTransform()
				_affdd.RedMod = NewCT_Percentage()
				if _cdggc := d.DecodeElement(_affdd.RedMod, &_bcebe); _cdggc != nil {
					return _cdggc
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _affdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_adbcbb := NewEG_ColorTransform()
				_adbcbb.Green = NewCT_Percentage()
				if _gabcb := d.DecodeElement(_adbcbb.Green, &_bcebe); _gabcb != nil {
					return _gabcb
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _adbcbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_egebb := NewEG_ColorTransform()
				_egebb.GreenOff = NewCT_Percentage()
				if _babaa := d.DecodeElement(_egebb.GreenOff, &_bcebe); _babaa != nil {
					return _babaa
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _egebb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_cgbcc := NewEG_ColorTransform()
				_cgbcc.GreenMod = NewCT_Percentage()
				if _addeg := d.DecodeElement(_cgbcc.GreenMod, &_bcebe); _addeg != nil {
					return _addeg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cgbcc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_cbgfg := NewEG_ColorTransform()
				_cbgfg.Blue = NewCT_Percentage()
				if _bebg := d.DecodeElement(_cbgfg.Blue, &_bcebe); _bebg != nil {
					return _bebg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _cbgfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_gccc := NewEG_ColorTransform()
				_gccc.BlueOff = NewCT_Percentage()
				if _gebbf := d.DecodeElement(_gccc.BlueOff, &_bcebe); _gebbf != nil {
					return _gebbf
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _gccc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_bfdg := NewEG_ColorTransform()
				_bfdg.BlueMod = NewCT_Percentage()
				if _bgaeg := d.DecodeElement(_bfdg.BlueMod, &_bcebe); _bgaeg != nil {
					return _bgaeg
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _bfdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_debcg := NewEG_ColorTransform()
				_debcg.Gamma = NewCT_GammaTransform()
				if _bdaag := d.DecodeElement(_debcg.Gamma, &_bcebe); _bdaag != nil {
					return _bdaag
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _debcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_ddcd := NewEG_ColorTransform()
				_ddcd.InvGamma = NewCT_InverseGammaTransform()
				if _eadd := d.DecodeElement(_ddcd.InvGamma, &_bcebe); _eadd != nil {
					return _eadd
				}
				_ggfgd.EG_ColorTransform = append(_ggfgd.EG_ColorTransform, _ddcd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0043o\u006co\u0072\u0020\u0025\u0076", _bcebe.Name)
				if _aefff := d.Skip(); _aefff != nil {
					return _aefff
				}
			}
		case _b.EndElement:
			break _eacf
		case _b.CharData:
		}
	}
	return nil
}
func (_gbgbf ST_TextSpacingPercentOrPercentString) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gbgbf.ST_TextSpacingPercent != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_gbgbf.ST_TextSpacingPercent)))
	}
	if _gbgbf.ST_Percentage != nil {
		e.EncodeToken(_b.CharData(*_gbgbf.ST_Percentage))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func NewCT_PathShadeProperties() *CT_PathShadeProperties {
	_ccccf := &CT_PathShadeProperties{}
	return _ccccf
}

// Validate validates the CT_BaseStylesOverride and its children
func (_aegg *CT_BaseStylesOverride) Validate() error {
	return _aegg.ValidateWithPath("C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065")
}
func (_gabdbb *CT_TextAutonumberBullet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gabdbb.TypeAttr = ST_TextAutonumberScheme(1)
	for _, _bdeff := range start.Attr {
		if _bdeff.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gabdbb.TypeAttr.UnmarshalXMLAttr(_bdeff)
			continue
		}
		if _bdeff.Name.Local == "\u0073t\u0061\u0072\u0074\u0041\u0074" {
			_aegcb, _ceeacd := _a.ParseInt(_bdeff.Value, 10, 32)
			if _ceeacd != nil {
				return _ceeacd
			}
			_ebacc := int32(_aegcb)
			_gabdbb.StartAtAttr = &_ebacc
			continue
		}
	}
	for {
		_gfced, _cbcgg := d.Token()
		if _cbcgg != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078t\u0041\u0075\u0074\u006f\u006e\u0075\u006db\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074\u003a\u0020%\u0073", _cbcgg)
		}
		if _geafag, _ccbeg := _gfced.(_b.EndElement); _ccbeg && _geafag.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BlipChoice and its children, prefixing error messages with path
func (_eccg *CT_BlipChoice) ValidateWithPath(path string) error {
	for _cfgbf, _cef := range _eccg.AlphaBiLevel {
		if _ffff := _cef.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c\u005b\u0025\u0064\u005d", path, _cfgbf)); _ffff != nil {
			return _ffff
		}
	}
	for _bgee, _cgeg := range _eccg.AlphaCeiling {
		if _deaf := _cgeg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067\u005b\u0025\u0064\u005d", path, _bgee)); _deaf != nil {
			return _deaf
		}
	}
	for _gec, _gead := range _eccg.AlphaFloor {
		if _feag := _gead.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006fr\u005b\u0025\u0064\u005d", path, _gec)); _feag != nil {
			return _feag
		}
	}
	for _gefc, _fabd := range _eccg.AlphaInv {
		if _bgeeb := _fabd.ValidateWithPath(_bb.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u005b\u0025\u0064\u005d", path, _gefc)); _bgeeb != nil {
			return _bgeeb
		}
	}
	for _baad, _dffe := range _eccg.AlphaMod {
		if _aede := _dffe.ValidateWithPath(_bb.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u005b\u0025\u0064\u005d", path, _baad)); _aede != nil {
			return _aede
		}
	}
	for _ada, _bgbf := range _eccg.AlphaModFix {
		if _ccfa := _bgbf.ValidateWithPath(_bb.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004do\u0064\u0046i\u0078\u005b\u0025\u0064\u005d", path, _ada)); _ccfa != nil {
			return _ccfa
		}
	}
	for _bfed, _cdea := range _eccg.AlphaRepl {
		if _gbaa := _cdea.ValidateWithPath(_bb.Sprintf("\u0025\u0073/\u0041\u006c\u0070h\u0061\u0052\u0065\u0070\u006c\u005b\u0025\u0064\u005d", path, _bfed)); _gbaa != nil {
			return _gbaa
		}
	}
	for _dgef, _ebgd := range _eccg.BiLevel {
		if _feaa := _ebgd.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0042\u0069\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _dgef)); _feaa != nil {
			return _feaa
		}
	}
	for _geeb, _acg := range _eccg.Blur {
		if _gfeb := _acg.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0042\u006c\u0075\u0072\u005b\u0025\u0064\u005d", path, _geeb)); _gfeb != nil {
			return _gfeb
		}
	}
	for _aeef, _afca := range _eccg.ClrChange {
		if _dffb := _afca.ValidateWithPath(_bb.Sprintf("\u0025\u0073/\u0043\u006c\u0072C\u0068\u0061\u006e\u0067\u0065\u005b\u0025\u0064\u005d", path, _aeef)); _dffb != nil {
			return _dffb
		}
	}
	for _dcecd, _ccgg := range _eccg.ClrRepl {
		if _dfgb := _ccgg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u006c\u0072\u0052\u0065\u0070l\u005b\u0025\u0064\u005d", path, _dcecd)); _dfgb != nil {
			return _dfgb
		}
	}
	for _fabc, _adbcd := range _eccg.Duotone {
		if _aeff := _adbcd.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0044\u0075\u006f\u0074\u006f\u006ee\u005b\u0025\u0064\u005d", path, _fabc)); _aeff != nil {
			return _aeff
		}
	}
	for _cccc, _bgbd := range _eccg.FillOverlay {
		if _gab := _bgbd.ValidateWithPath(_bb.Sprintf("\u0025s\u002fF\u0069\u006c\u006c\u004f\u0076e\u0072\u006ca\u0079\u005b\u0025\u0064\u005d", path, _cccc)); _gab != nil {
			return _gab
		}
	}
	for _daga, _ccec := range _eccg.Grayscl {
		if _fca := _ccec.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0061\u0079\u0073\u0063l\u005b\u0025\u0064\u005d", path, _daga)); _fca != nil {
			return _fca
		}
	}
	for _bdgbc, _eaag := range _eccg.Hsl {
		if _bgdd := _eaag.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0048\u0073\u006c\u005b\u0025\u0064\u005d", path, _bdgbc)); _bgdd != nil {
			return _bgdd
		}
	}
	for _bcbe, _ecda := range _eccg.Lum {
		if _geg := _ecda.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u004c\u0075\u006d\u005b\u0025\u0064\u005d", path, _bcbe)); _geg != nil {
			return _geg
		}
	}
	for _eaae, _eegg := range _eccg.Tint {
		if _effg := _eegg.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0054\u0069\u006e\u0074\u005b\u0025\u0064\u005d", path, _eaae)); _effg != nil {
			return _effg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Backdrop and its children, prefixing error messages with path
func (_aadb *CT_Backdrop) ValidateWithPath(path string) error {
	if _abg := _aadb.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _abg != nil {
		return _abg
	}
	if _dea := _aadb.Norm.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d"); _dea != nil {
		return _dea
	}
	if _dcec := _aadb.Up.ValidateWithPath(path + "\u002f\u0055\u0070"); _dcec != nil {
		return _dcec
	}
	if _aadb.ExtLst != nil {
		if _bcda := _aadb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcda != nil {
			return _bcda
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ShadeProperties and its children, prefixing error messages with path
func (_cccbg *EG_ShadeProperties) ValidateWithPath(path string) error {
	if _cccbg.Lin != nil {
		if _gabdbd := _cccbg.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _gabdbd != nil {
			return _gabdbd
		}
	}
	if _cccbg.Path != nil {
		if _beega := _cccbg.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _beega != nil {
			return _beega
		}
	}
	return nil
}
func (_bcccb ST_PitchFamily) String() string {
	switch _bcccb {
	case 0:
		return ""
	case 1:
		return "\u0030\u0030"
	case 2:
		return "\u0030\u0031"
	case 3:
		return "\u0030\u0032"
	case 4:
		return "\u0031\u0036"
	case 5:
		return "\u0031\u0037"
	case 6:
		return "\u0031\u0038"
	case 7:
		return "\u0033\u0032"
	case 8:
		return "\u0033\u0033"
	case 9:
		return "\u0033\u0034"
	case 10:
		return "\u0034\u0038"
	case 11:
		return "\u0034\u0039"
	case 12:
		return "\u0035\u0030"
	case 13:
		return "\u0036\u0034"
	case 14:
		return "\u0036\u0035"
	case 15:
		return "\u0036\u0036"
	case 16:
		return "\u0038\u0030"
	case 17:
		return "\u0038\u0031"
	case 18:
		return "\u0038\u0032"
	}
	return ""
}
func (_bfdb *CT_CustomColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfdb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_bfdb.NameAttr)})
	}
	e.EncodeToken(start)
	if _bfdb.ScrgbClr != nil {
		_gge := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_bfdb.ScrgbClr, _gge)
	}
	if _bfdb.SrgbClr != nil {
		_ebfb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_bfdb.SrgbClr, _ebfb)
	}
	if _bfdb.HslClr != nil {
		_bgdcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_bfdb.HslClr, _bgdcc)
	}
	if _bfdb.SysClr != nil {
		_gafb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_bfdb.SysClr, _gafb)
	}
	if _bfdb.SchemeClr != nil {
		_cafbb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_bfdb.SchemeClr, _cafbb)
	}
	if _bfdb.PrstClr != nil {
		_efgb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_bfdb.PrstClr, _efgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TextFont struct {
	TypefaceAttr    string
	PanoseAttr      *string
	PitchFamilyAttr ST_PitchFamily
	CharsetAttr     *int8
}

// ValidateWithPath validates the CT_DashStop and its children, prefixing error messages with path
func (_bbfb *CT_DashStop) ValidateWithPath(path string) error {
	if _effa := _bbfb.DAttr.ValidateWithPath(path + "\u002f\u0044\u0041\u0074\u0074\u0072"); _effa != nil {
		return _effa
	}
	if _fgfab := _bbfb.SpAttr.ValidateWithPath(path + "\u002fS\u0070\u0041\u0074\u0074\u0072"); _fgfab != nil {
		return _fgfab
	}
	return nil
}

type ST_PitchFamily byte

func (_gdge *CT_EffectStyleList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aeeff:
	for {
		_ceddc, _bgga := d.Token()
		if _bgga != nil {
			return _bgga
		}
		switch _ecde := _ceddc.(type) {
		case _b.StartElement:
			switch _ecde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_gcfd := NewCT_EffectStyleItem()
				if _aafeg := d.DecodeElement(_gcfd, &_ecde); _aafeg != nil {
					return _aafeg
				}
				_gdge.EffectStyle = append(_gdge.EffectStyle, _gcfd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ecde.Name)
				if _gdab := d.Skip(); _gdab != nil {
					return _gdab
				}
			}
		case _b.EndElement:
			break _aeeff
		case _b.CharData:
		}
	}
	return nil
}
func (_effbg ST_LineEndWidth) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_effbg.String(), start)
}

// ValidateWithPath validates the CT_NonVisualPictureProperties and its children, prefixing error messages with path
func (_eeaf *CT_NonVisualPictureProperties) ValidateWithPath(path string) error {
	if _eeaf.PicLocks != nil {
		if _cfgcd := _eeaf.PicLocks.ValidateWithPath(path + "\u002fP\u0069\u0063\u004c\u006f\u0063\u006bs"); _cfgcd != nil {
			return _cfgcd
		}
	}
	if _eeaf.ExtLst != nil {
		if _dgaf := _eeaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgaf != nil {
			return _dgaf
		}
	}
	return nil
}
func (_geagga *CT_PictureLocking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geagga.NoCropAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0072\u006f\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoCropAttr))})
	}
	if _geagga.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoGrpAttr))})
	}
	if _geagga.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoSelectAttr))})
	}
	if _geagga.NoRotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoRotAttr))})
	}
	if _geagga.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoChangeAspectAttr))})
	}
	if _geagga.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoMoveAttr))})
	}
	if _geagga.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoResizeAttr))})
	}
	if _geagga.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoEditPointsAttr))})
	}
	if _geagga.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoAdjustHandlesAttr))})
	}
	if _geagga.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoChangeArrowheadsAttr))})
	}
	if _geagga.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_geagga.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _geagga.ExtLst != nil {
		_cggga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_geagga.ExtLst, _cggga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dddc *CT_TextShapeAutofit) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_SystemColor() *CT_SystemColor {
	_bbba := &CT_SystemColor{}
	_bbba.ValAttr = ST_SystemColorVal(1)
	return _bbba
}
func (_fdbcd *CT_TextBulletTypefaceFollowText) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcgac *ST_TextVertOverflowType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcgac = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_gcgac = 1
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
		*_gcgac = 2
	case "\u0063\u006c\u0069\u0070":
		*_gcgac = 3
	}
	return nil
}

type CT_TextBulletTypefaceFollowText struct{}

func (_fcgd *CT_GvmlGroupShapeChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcgd.TxSp != nil {
		_bffb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		for _, _bffd := range _fcgd.TxSp {
			e.EncodeElement(_bffd, _bffb)
		}
	}
	if _fcgd.Sp != nil {
		_fdaaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070"}}
		for _, _aegea := range _fcgd.Sp {
			e.EncodeElement(_aegea, _fdaaf)
		}
	}
	if _fcgd.CxnSp != nil {
		_acgfd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _cfbgf := range _fcgd.CxnSp {
			e.EncodeElement(_cfbgf, _acgfd)
		}
	}
	if _fcgd.Pic != nil {
		_cbfg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070i\u0063"}}
		for _, _ddeee := range _fcgd.Pic {
			e.EncodeElement(_ddeee, _cbfg)
		}
	}
	if _fcgd.GraphicFrame != nil {
		_cfgde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _bbeff := range _fcgd.GraphicFrame {
			e.EncodeElement(_bbeff, _cfgde)
		}
	}
	if _fcgd.GrpSp != nil {
		_bbgea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _edgd := range _fcgd.GrpSp {
			e.EncodeElement(_edgd, _bbgea)
		}
	}
	return nil
}
func (_aadadb *Theme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aadadb.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	for _, _bagbe := range start.Attr {
		if _bagbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_feabf, _ddbgc := _bagbe.Value, error(nil)
			if _ddbgc != nil {
				return _ddbgc
			}
			_aadadb.NameAttr = &_feabf
			continue
		}
	}
_defd:
	for {
		_fgbfbe, _eagff := d.Token()
		if _eagff != nil {
			return _eagff
		}
		switch _dfaef := _fgbfbe.(type) {
		case _b.StartElement:
			switch _dfaef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _fggga := d.DecodeElement(_aadadb.ThemeElements, &_dfaef); _fggga != nil {
					return _fggga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_aadadb.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _gecd := d.DecodeElement(_aadadb.ObjectDefaults, &_dfaef); _gecd != nil {
					return _gecd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_aadadb.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _ccdcd := d.DecodeElement(_aadadb.ExtraClrSchemeLst, &_dfaef); _ccdcd != nil {
					return _ccdcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_aadadb.CustClrLst = NewCT_CustomColorList()
				if _cacfa := d.DecodeElement(_aadadb.CustClrLst, &_dfaef); _cacfa != nil {
					return _cacfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aadadb.ExtLst = NewCT_OfficeArtExtensionList()
				if _ffdeff := d.DecodeElement(_aadadb.ExtLst, &_dfaef); _ffdeff != nil {
					return _ffdeff
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0068\u0065m\u0065 \u0025\u0076", _dfaef.Name)
				if _bedde := d.Skip(); _bedde != nil {
					return _bedde
				}
			}
		case _b.EndElement:
			break _defd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColorScheme and its children
func (_ffca *CT_ColorScheme) Validate() error {
	return _ffca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065")
}

type CT_AlphaCeilingEffect struct{}

func (_aegcg ST_SchemeColorVal) String() string {
	switch _aegcg {
	case 0:
		return ""
	case 1:
		return "\u0062\u0067\u0031"
	case 2:
		return "\u0074\u0078\u0031"
	case 3:
		return "\u0062\u0067\u0032"
	case 4:
		return "\u0074\u0078\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case 13:
		return "\u0070\u0068\u0043l\u0072"
	case 14:
		return "\u0064\u006b\u0031"
	case 15:
		return "\u006c\u0074\u0031"
	case 16:
		return "\u0064\u006b\u0032"
	case 17:
		return "\u006c\u0074\u0032"
	}
	return ""
}
func (_befaf *ST_TextStrikeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deadd, _cffbfa := d.Token()
	if _cffbfa != nil {
		return _cffbfa
	}
	if _afbcc, _fcded := _deadd.(_b.EndElement); _fcded && _afbcc.Name == start.Name {
		*_befaf = 1
		return nil
	}
	if _fabffb, _ffegb := _deadd.(_b.CharData); !_ffegb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deadd)
	} else {
		switch string(_fabffb) {
		case "":
			*_befaf = 0
		case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
			*_befaf = 1
		case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
			*_befaf = 2
		case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
			*_befaf = 3
		}
	}
	_deadd, _cffbfa = d.Token()
	if _cffbfa != nil {
		return _cffbfa
	}
	if _bbace, _bbfcb := _deadd.(_b.EndElement); _bbfcb && _bbace.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deadd)
}
func (_abbe *ThemeManager) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abbe.CT_EmptyElement = *NewCT_EmptyElement()
	for {
		_dbdbb, _efab := d.Token()
		if _efab != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0054\u0068\u0065\u006d\u0065M\u0061\u006e\u0061\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _efab)
		}
		if _dcfcf, _bdcee := _dbdbb.(_b.EndElement); _bdcee && _dcfcf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_FillOverlayEffect() *CT_FillOverlayEffect {
	_cabfe := &CT_FillOverlayEffect{}
	_cabfe.BlendAttr = ST_BlendMode(1)
	return _cabfe
}
func (_eddf *CT_Camera) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eddf.PrstAttr = ST_PresetCameraType(1)
	for _, _gfcf := range start.Attr {
		if _gfcf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_eddf.PrstAttr.UnmarshalXMLAttr(_gfcf)
			continue
		}
		if _gfcf.Name.Local == "\u0066\u006f\u0076" {
			_agab, _aage := _a.ParseInt(_gfcf.Value, 10, 32)
			if _aage != nil {
				return _aage
			}
			_adfc := int32(_agab)
			_eddf.FovAttr = &_adfc
			continue
		}
		if _gfcf.Name.Local == "\u007a\u006f\u006f\u006d" {
			_fbfdc, _cbggf := ParseUnionST_PositivePercentage(_gfcf.Value)
			if _cbggf != nil {
				return _cbggf
			}
			_eddf.ZoomAttr = &_fbfdc
			continue
		}
	}
_abgf:
	for {
		_bffgb, _fadb := d.Token()
		if _fadb != nil {
			return _fadb
		}
		switch _ccaf := _bffgb.(type) {
		case _b.StartElement:
			switch _ccaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_eddf.Rot = NewCT_SphereCoords()
				if _aceb := d.DecodeElement(_eddf.Rot, &_ccaf); _aceb != nil {
					return _aceb
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0061\u006de\u0072\u0061 \u0025\u0076", _ccaf.Name)
				if _dacc := d.Skip(); _dacc != nil {
					return _dacc
				}
			}
		case _b.EndElement:
			break _abgf
		case _b.CharData:
		}
	}
	return nil
}
func (_ecfcbb *EG_Effect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecfcbb.Cont != nil {
		_fgaba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_ecfcbb.Cont, _fgaba)
	}
	if _ecfcbb.Effect != nil {
		_ggbaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_ecfcbb.Effect, _ggbaf)
	}
	if _ecfcbb.AlphaBiLevel != nil {
		_ceaad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_ecfcbb.AlphaBiLevel, _ceaad)
	}
	if _ecfcbb.AlphaCeiling != nil {
		_edefe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_ecfcbb.AlphaCeiling, _edefe)
	}
	if _ecfcbb.AlphaFloor != nil {
		_adfgfd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_ecfcbb.AlphaFloor, _adfgfd)
	}
	if _ecfcbb.AlphaInv != nil {
		_edfdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_ecfcbb.AlphaInv, _edfdf)
	}
	if _ecfcbb.AlphaMod != nil {
		_fdeeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_ecfcbb.AlphaMod, _fdeeb)
	}
	if _ecfcbb.AlphaModFix != nil {
		_fcegd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_ecfcbb.AlphaModFix, _fcegd)
	}
	if _ecfcbb.AlphaOutset != nil {
		_ddgf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_ecfcbb.AlphaOutset, _ddgf)
	}
	if _ecfcbb.AlphaRepl != nil {
		_gcccc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_ecfcbb.AlphaRepl, _gcccc)
	}
	if _ecfcbb.BiLevel != nil {
		_egffae := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_ecfcbb.BiLevel, _egffae)
	}
	if _ecfcbb.Blend != nil {
		_fcgcb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_ecfcbb.Blend, _fcgcb)
	}
	if _ecfcbb.Blur != nil {
		_feggg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_ecfcbb.Blur, _feggg)
	}
	if _ecfcbb.ClrChange != nil {
		_fgfee := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_ecfcbb.ClrChange, _fgfee)
	}
	if _ecfcbb.ClrRepl != nil {
		_fbgba := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_ecfcbb.ClrRepl, _fbgba)
	}
	if _ecfcbb.Duotone != nil {
		_ddfdd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_ecfcbb.Duotone, _ddfdd)
	}
	if _ecfcbb.Fill != nil {
		_baffc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_ecfcbb.Fill, _baffc)
	}
	if _ecfcbb.FillOverlay != nil {
		_egddd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_ecfcbb.FillOverlay, _egddd)
	}
	if _ecfcbb.Glow != nil {
		_adcdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_ecfcbb.Glow, _adcdb)
	}
	if _ecfcbb.Grayscl != nil {
		_eecbcc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_ecfcbb.Grayscl, _eecbcc)
	}
	if _ecfcbb.Hsl != nil {
		_dbbf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_ecfcbb.Hsl, _dbbf)
	}
	if _ecfcbb.InnerShdw != nil {
		_bfeae := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ecfcbb.InnerShdw, _bfeae)
	}
	if _ecfcbb.Lum != nil {
		_dbcbcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_ecfcbb.Lum, _dbcbcc)
	}
	if _ecfcbb.OuterShdw != nil {
		_efdfc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ecfcbb.OuterShdw, _efdfc)
	}
	if _ecfcbb.PrstShdw != nil {
		_aecec := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_ecfcbb.PrstShdw, _aecec)
	}
	if _ecfcbb.Reflection != nil {
		_eadbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ecfcbb.Reflection, _eadbc)
	}
	if _ecfcbb.RelOff != nil {
		_caefa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_ecfcbb.RelOff, _caefa)
	}
	if _ecfcbb.SoftEdge != nil {
		_ebdcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_ecfcbb.SoftEdge, _ebdcd)
	}
	if _ecfcbb.Tint != nil {
		_ggaea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_ecfcbb.Tint, _ggaea)
	}
	if _ecfcbb.Xfrm != nil {
		_cbbfa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_ecfcbb.Xfrm, _cbbfa)
	}
	return nil
}

// ValidateWithPath validates the CT_FillOverlayEffect and its children, prefixing error messages with path
func (_befdf *CT_FillOverlayEffect) ValidateWithPath(path string) error {
	if _befdf.BlendAttr == ST_BlendModeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _cdbg := _befdf.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _cdbg != nil {
		return _cdbg
	}
	if _befdf.NoFill != nil {
		if _agaag := _befdf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _agaag != nil {
			return _agaag
		}
	}
	if _befdf.SolidFill != nil {
		if _baeef := _befdf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _baeef != nil {
			return _baeef
		}
	}
	if _befdf.GradFill != nil {
		if _abgg := _befdf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _abgg != nil {
			return _abgg
		}
	}
	if _befdf.BlipFill != nil {
		if _ecdcd := _befdf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ecdcd != nil {
			return _ecdcd
		}
	}
	if _befdf.PattFill != nil {
		if _cbcga := _befdf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cbcga != nil {
			return _cbcga
		}
	}
	if _befdf.GrpFill != nil {
		if _cfed := _befdf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cfed != nil {
			return _cfed
		}
	}
	return nil
}
func ParseUnionST_AnimationChartBuildType(s string) (ST_AnimationChartBuildType, error) {
	_bcbfa := ST_AnimationChartBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_bcbfa.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		_bcbfa.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeries
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		_bcbfa.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategory
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		_bcbfa.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeriesEl
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		_bcbfa.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategoryEl
	}
	return _bcbfa, nil
}
func NewEG_OfficeArtExtensionList() *EG_OfficeArtExtensionList {
	_efeabgg := &EG_OfficeArtExtensionList{}
	return _efeabgg
}

type ST_LightRigDirection byte

// Validate validates the CT_PictureLocking and its children
func (_ecagg *CT_PictureLocking) Validate() error {
	return _ecagg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067")
}
func (_acacc *CT_PresetColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_ccegg, _fecbd := _acacc.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _fecbd != nil {
		return _fecbd
	}
	start.Attr = append(start.Attr, _ccegg)
	e.EncodeToken(start)
	if _acacc.EG_ColorTransform != nil {
		for _, _cgfca := range _acacc.EG_ColorTransform {
			_cgfca.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TextBulletSizePercent struct{ ValAttr string }

func (_ebbcg ST_SchemeColorVal) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdfbe := _b.Attr{}
	_cdfbe.Name = name
	switch _ebbcg {
	case ST_SchemeColorValUnset:
		_cdfbe.Value = ""
	case ST_SchemeColorValBg1:
		_cdfbe.Value = "\u0062\u0067\u0031"
	case ST_SchemeColorValTx1:
		_cdfbe.Value = "\u0074\u0078\u0031"
	case ST_SchemeColorValBg2:
		_cdfbe.Value = "\u0062\u0067\u0032"
	case ST_SchemeColorValTx2:
		_cdfbe.Value = "\u0074\u0078\u0032"
	case ST_SchemeColorValAccent1:
		_cdfbe.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_SchemeColorValAccent2:
		_cdfbe.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_SchemeColorValAccent3:
		_cdfbe.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_SchemeColorValAccent4:
		_cdfbe.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_SchemeColorValAccent5:
		_cdfbe.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_SchemeColorValAccent6:
		_cdfbe.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_SchemeColorValHlink:
		_cdfbe.Value = "\u0068\u006c\u0069n\u006b"
	case ST_SchemeColorValFolHlink:
		_cdfbe.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case ST_SchemeColorValPhClr:
		_cdfbe.Value = "\u0070\u0068\u0043l\u0072"
	case ST_SchemeColorValDk1:
		_cdfbe.Value = "\u0064\u006b\u0031"
	case ST_SchemeColorValLt1:
		_cdfbe.Value = "\u006c\u0074\u0031"
	case ST_SchemeColorValDk2:
		_cdfbe.Value = "\u0064\u006b\u0032"
	case ST_SchemeColorValLt2:
		_cdfbe.Value = "\u006c\u0074\u0032"
	}
	return _cdfbe, nil
}
func (_dgce *CT_TextFont) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _dgce.TypefaceAttr)})
	if _dgce.PanoseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u006e\u006f\u0073\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_dgce.PanoseAttr)})
	}
	if _dgce.PitchFamilyAttr != ST_PitchFamilyUnset {
		_eaage, _cedce := _dgce.PitchFamilyAttr.MarshalXMLAttr(_b.Name{Local: "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079"})
		if _cedce != nil {
			return _cedce
		}
		start.Attr = append(start.Attr, _eaage)
	}
	if _dgce.CharsetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_dgce.CharsetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dagdga ST_LightRigDirection) String() string {
	switch _dagdga {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0072"
	case 6:
		return "\u0062\u006c"
	case 7:
		return "\u0062"
	case 8:
		return "\u0062\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_AnimationChartBuildProperties and its children, prefixing error messages with path
func (_cce *CT_AnimationChartBuildProperties) ValidateWithPath(path string) error {
	if _cce.BldAttr != nil {
		if _gfgf := _cce.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _gfgf != nil {
			return _gfgf
		}
	}
	return nil
}

// Validate validates the CT_TextNoBullet and its children
func (_faffc *CT_TextNoBullet) Validate() error {
	return _faffc.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074")
}

// ValidateWithPath validates the CT_OuterShadowEffect and its children, prefixing error messages with path
func (_gfcd *CT_OuterShadowEffect) ValidateWithPath(path string) error {
	if _gfcd.BlurRadAttr != nil {
		if *_gfcd.BlurRadAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gfcd.BlurRadAttr)
		}
		if *_gfcd.BlurRadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gfcd.BlurRadAttr)
		}
	}
	if _gfcd.DistAttr != nil {
		if *_gfcd.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gfcd.DistAttr)
		}
		if *_gfcd.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_gfcd.DistAttr)
		}
	}
	if _gfcd.DirAttr != nil {
		if *_gfcd.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gfcd.DirAttr)
		}
		if *_gfcd.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gfcd.DirAttr)
		}
	}
	if _gfcd.SxAttr != nil {
		if _debg := _gfcd.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _debg != nil {
			return _debg
		}
	}
	if _gfcd.SyAttr != nil {
		if _ddecb := _gfcd.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _ddecb != nil {
			return _ddecb
		}
	}
	if _gfcd.KxAttr != nil {
		if *_gfcd.KxAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gfcd.KxAttr)
		}
		if *_gfcd.KxAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gfcd.KxAttr)
		}
	}
	if _gfcd.KyAttr != nil {
		if *_gfcd.KyAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gfcd.KyAttr)
		}
		if *_gfcd.KyAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gfcd.KyAttr)
		}
	}
	if _caffg := _gfcd.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _caffg != nil {
		return _caffg
	}
	if _gfcd.ScrgbClr != nil {
		if _eecff := _gfcd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _eecff != nil {
			return _eecff
		}
	}
	if _gfcd.SrgbClr != nil {
		if _bbed := _gfcd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bbed != nil {
			return _bbed
		}
	}
	if _gfcd.HslClr != nil {
		if _fdga := _gfcd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _fdga != nil {
			return _fdga
		}
	}
	if _gfcd.SysClr != nil {
		if _gbfac := _gfcd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gbfac != nil {
			return _gbfac
		}
	}
	if _gfcd.SchemeClr != nil {
		if _dgaaa := _gfcd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dgaaa != nil {
			return _dgaaa
		}
	}
	if _gfcd.PrstClr != nil {
		if _dcbcb := _gfcd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dcbcb != nil {
			return _dcbcb
		}
	}
	return nil
}
func (_beaca *CT_SupplementalFont) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geded := range start.Attr {
		if _geded.Name.Local == "\u0073\u0063\u0072\u0069\u0070\u0074" {
			_bdccc, _bgac := _geded.Value, error(nil)
			if _bgac != nil {
				return _bgac
			}
			_beaca.ScriptAttr = _bdccc
			continue
		}
		if _geded.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_ddcgg, _eaadg := _geded.Value, error(nil)
			if _eaadg != nil {
				return _eaadg
			}
			_beaca.TypefaceAttr = _ddcgg
			continue
		}
	}
	for {
		_bbcb, _fddae := d.Token()
		if _fddae != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0053\u0075\u0070\u0070\u006ce\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _fddae)
		}
		if _cdgdbb, _adedbb := _bbcb.(_b.EndElement); _adedbb && _cdgdbb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgdde ST_BlackWhiteMode) Validate() error { return _fgdde.ValidateWithPath("") }
func (_cdcc *CT_GvmlGraphicalObjectFrame) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdcc.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_cdcc.Graphic = NewGraphic()
	_cdcc.Xfrm = NewCT_Transform2D()
_fdebd:
	for {
		_dddgd, _afcea := d.Token()
		if _afcea != nil {
			return _afcea
		}
		switch _gfbdb := _dddgd.(type) {
		case _b.StartElement:
			switch _gfbdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _fegdf := d.DecodeElement(_cdcc.NvGraphicFramePr, &_gfbdb); _fegdf != nil {
					return _fegdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _ebbd := d.DecodeElement(_cdcc.Graphic, &_gfbdb); _ebbd != nil {
					return _ebbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _deeec := d.DecodeElement(_cdcc.Xfrm, &_gfbdb); _deeec != nil {
					return _deeec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _dgfgb := d.DecodeElement(_cdcc.ExtLst, &_gfbdb); _dgfgb != nil {
					return _dgfgb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065c\u0074\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _gfbdb.Name)
				if _cgge := d.Skip(); _cgge != nil {
					return _cgge
				}
			}
		case _b.EndElement:
			break _fdebd
		case _b.CharData:
		}
	}
	return nil
}
func (_gfgcd *CT_TextBody) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cedgg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_gfgcd.BodyPr, _cedgg)
	if _gfgcd.LstStyle != nil {
		_eaegc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gfgcd.LstStyle, _eaegc)
	}
	_cdedb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070"}}
	for _, _dgabg := range _gfgcd.P {
		e.EncodeElement(_dgabg, _cdedb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fged *CT_PositiveSize2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fged.CxAttr = 0
	_fged.CyAttr = 0
	for _, _dedgf := range start.Attr {
		if _dedgf.Name.Local == "\u0063\u0078" {
			_effd, _acccb := _a.ParseInt(_dedgf.Value, 10, 64)
			if _acccb != nil {
				return _acccb
			}
			_fged.CxAttr = _effd
			continue
		}
		if _dedgf.Name.Local == "\u0063\u0079" {
			_gbbdg, _ecbaba := _a.ParseInt(_dedgf.Value, 10, 64)
			if _ecbaba != nil {
				return _ecbaba
			}
			_fged.CyAttr = _gbbdg
			continue
		}
	}
	for {
		_egbca, _eabeeb := d.Token()
		if _eabeeb != nil {
			return _bb.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053\u0069\u007a\u0065\u0032\u0044: \u0025\u0073", _eabeeb)
		}
		if _bcdge, _gaggfe := _egbca.(_b.EndElement); _gaggfe && _bcdge.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PositiveSize2D() *CT_PositiveSize2D {
	_ecbgca := &CT_PositiveSize2D{}
	_ecbgca.CxAttr = 0
	_ecbgca.CyAttr = 0
	return _ecbgca
}

// Validate validates the CT_AlphaFloorEffect and its children
func (_gcc *CT_AlphaFloorEffect) Validate() error {
	return _gcc.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

const (
	ST_LineCapUnset ST_LineCap = 0
	ST_LineCapRnd   ST_LineCap = 1
	ST_LineCapSq    ST_LineCap = 2
	ST_LineCapFlat  ST_LineCap = 3
)

func (_fcgbb ST_TextAlignType) String() string {
	switch _fcgbb {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u006au\u0073\u0074\u004c\u006f\u0077"
	case 6:
		return "\u0064\u0069\u0073\u0074"
	case 7:
		return "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return ""
}

// Validate validates the CT_TextSpacingPoint and its children
func (_gcdg *CT_TextSpacingPoint) Validate() error {
	return _gcdg.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074")
}
func (_dce *CT_AnimationChartBuildProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dce.BldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_dce.BldAttr)})
	}
	if _dce.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dce.AnimBgAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupLocking and its children, prefixing error messages with path
func (_cdbac *CT_GroupLocking) ValidateWithPath(path string) error {
	if _cdbac.ExtLst != nil {
		if _cfbb := _cdbac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfbb != nil {
			return _cfbb
		}
	}
	return nil
}

// Validate validates the CT_BlurEffect and its children
func (_ebaf *CT_BlurEffect) Validate() error {
	return _ebaf.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_DashStopList and its children
func (_adadg *CT_DashStopList) Validate() error {
	return _adadg.ValidateWithPath("\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}
func (_eabde *ST_PresetLineDashVal) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eabde = 0
	case "\u0073\u006f\u006ci\u0064":
		*_eabde = 1
	case "\u0064\u006f\u0074":
		*_eabde = 2
	case "\u0064\u0061\u0073\u0068":
		*_eabde = 3
	case "\u006c\u0067\u0044\u0061\u0073\u0068":
		*_eabde = 4
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_eabde = 5
	case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
		*_eabde = 6
	case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_eabde = 7
	case "\u0073y\u0073\u0044\u0061\u0073\u0068":
		*_eabde = 8
	case "\u0073\u0079\u0073\u0044\u006f\u0074":
		*_eabde = 9
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_eabde = 10
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_eabde = 11
	}
	return nil
}

type CT_TileInfoProperties struct {
	TxAttr   *ST_Coordinate
	TyAttr   *ST_Coordinate
	SxAttr   *ST_Percentage
	SyAttr   *ST_Percentage
	FlipAttr ST_TileFlipMode
	AlgnAttr ST_RectAlignment
}

func (_cedadd *ST_DgmBuildStep) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aefdb, _dadgcb := d.Token()
	if _dadgcb != nil {
		return _dadgcb
	}
	if _cdedg, _cfgcc := _aefdb.(_b.EndElement); _cfgcc && _cdedg.Name == start.Name {
		*_cedadd = 1
		return nil
	}
	if _ecbcb, _cabed := _aefdb.(_b.CharData); !_cabed {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aefdb)
	} else {
		switch string(_ecbcb) {
		case "":
			*_cedadd = 0
		case "\u0073\u0070":
			*_cedadd = 1
		case "\u0062\u0067":
			*_cedadd = 2
		}
	}
	_aefdb, _dadgcb = d.Token()
	if _dadgcb != nil {
		return _dadgcb
	}
	if _abdfc, _agagd := _aefdb.(_b.EndElement); _agagd && _abdfc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aefdb)
}

type CT_TextField struct {
	IdAttr   string
	TypeAttr *string
	RPr      *CT_TextCharacterProperties
	PPr      *CT_TextParagraphProperties
	T        *string
}
type ST_ShapeType byte

// Validate validates the EG_ThemeableFillStyle and its children
func (_bddgg *EG_ThemeableFillStyle) Validate() error {
	return _bddgg.ValidateWithPath("E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065")
}

type EG_ThemeableFillStyle struct {
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
}

func NewCT_EffectList() *CT_EffectList { _fccdg := &CT_EffectList{}; return _fccdg }
func (_gcacg *EG_TextRun) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcacg.R != nil {
		_aecgc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072"}}
		e.EncodeElement(_gcacg.R, _aecgc)
	}
	if _gcacg.Br != nil {
		_ddfcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0072"}}
		e.EncodeElement(_gcacg.Br, _ddfcd)
	}
	if _gcacg.Fld != nil {
		_aeefc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066l\u0064"}}
		e.EncodeElement(_gcacg.Fld, _aeefc)
	}
	return nil
}

type CT_Scale2D struct {
	Sx *CT_Ratio
	Sy *CT_Ratio
}
type CT_SchemeColor struct {
	ValAttr           ST_SchemeColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func NewCT_Transform2D() *CT_Transform2D { _agdge := &CT_Transform2D{}; return _agdge }
func (_bdagd *EG_TextBulletTypeface) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eaded:
	for {
		_edafe, _cacfg := d.Token()
		if _cacfg != nil {
			return _cacfg
		}
		switch _effc := _edafe.(type) {
		case _b.StartElement:
			switch _effc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_bdagd.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _dcaab := d.DecodeElement(_bdagd.BuFontTx, &_effc); _dcaab != nil {
					return _dcaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_bdagd.BuFont = NewCT_TextFont()
				if _edddfa := d.DecodeElement(_bdagd.BuFont, &_effc); _edddfa != nil {
					return _edddfa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0020\u0025\u0076", _effc.Name)
				if _cafgag := d.Skip(); _cafgag != nil {
					return _cafgag
				}
			}
		case _b.EndElement:
			break _eaded
		case _b.CharData:
		}
	}
	return nil
}
func (_ffcfef ST_ShapeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffcfef.String(), start)
}

type CT_RelativeRect struct {
	LAttr *ST_Percentage
	TAttr *ST_Percentage
	RAttr *ST_Percentage
	BAttr *ST_Percentage
}

// Validate validates the CT_GeomGuide and its children
func (_cgff *CT_GeomGuide) Validate() error {
	return _cgff.ValidateWithPath("\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065")
}
func NewCT_DashStopList() *CT_DashStopList { _dccg := &CT_DashStopList{}; return _dccg }
func (_gbbeb *CT_NoFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddbda ST_PitchFamily) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ddbda.String(), start)
}
func (_adfad ST_LineEndWidth) ValidateWithPath(path string) error {
	switch _adfad {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adfad))
	}
	return nil
}
func (_fdbd *CT_OfficeStyleSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdbd.ThemeElements = NewCT_BaseStyles()
	for _, _bacd := range start.Attr {
		if _bacd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdadg, _aaffc := _bacd.Value, error(nil)
			if _aaffc != nil {
				return _aaffc
			}
			_fdbd.NameAttr = &_bdadg
			continue
		}
	}
_cbbbb:
	for {
		_fbefe, _cccfd := d.Token()
		if _cccfd != nil {
			return _cccfd
		}
		switch _dagdg := _fbefe.(type) {
		case _b.StartElement:
			switch _dagdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _cddb := d.DecodeElement(_fdbd.ThemeElements, &_dagdg); _cddb != nil {
					return _cddb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_fdbd.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _bbbce := d.DecodeElement(_fdbd.ObjectDefaults, &_dagdg); _bbbce != nil {
					return _bbbce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_fdbd.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _deca := d.DecodeElement(_fdbd.ExtraClrSchemeLst, &_dagdg); _deca != nil {
					return _deca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_fdbd.CustClrLst = NewCT_CustomColorList()
				if _fddd := d.DecodeElement(_fdbd.CustClrLst, &_dagdg); _fddd != nil {
					return _fddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdbd.ExtLst = NewCT_OfficeArtExtensionList()
				if _eceab := d.DecodeElement(_fdbd.ExtLst, &_dagdg); _eceab != nil {
					return _eceab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0053ty\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _dagdg.Name)
				if _gbeb := d.Skip(); _gbeb != nil {
					return _gbeb
				}
			}
		case _b.EndElement:
			break _cbbbb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_LineJoinRound() *CT_LineJoinRound { _gagf := &CT_LineJoinRound{}; return _gagf }
func (_fbfdb *CT_GraphicalObjectFrameLocking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbfdb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fbfdb.NoGrpAttr))})
	}
	if _fbfdb.NoDrilldownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fbfdb.NoDrilldownAttr))})
	}
	if _fbfdb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fbfdb.NoSelectAttr))})
	}
	if _fbfdb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fbfdb.NoChangeAspectAttr))})
	}
	if _fbfdb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fbfdb.NoMoveAttr))})
	}
	if _fbfdb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_fbfdb.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _fbfdb.ExtLst != nil {
		_cdcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbfdb.ExtLst, _cdcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adbaea *CT_TextTabStopList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebfcd:
	for {
		_aedcc, _affbed := d.Token()
		if _affbed != nil {
			return _affbed
		}
		switch _feaea := _aedcc.(type) {
		case _b.StartElement:
			switch _feaea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}:
				_ffcag := NewCT_TextTabStop()
				if _ebebf := d.DecodeElement(_ffcag, &_feaea); _ebebf != nil {
					return _ebebf
				}
				_adbaea.Tab = append(_adbaea.Tab, _ffcag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _feaea.Name)
				if _gdccb := d.Skip(); _gdccb != nil {
					return _gdccb
				}
			}
		case _b.EndElement:
			break _ebfcd
		case _b.CharData:
		}
	}
	return nil
}
func (_deefc *ST_CompoundLine) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebdeg, _dadf := d.Token()
	if _dadf != nil {
		return _dadf
	}
	if _ceedb, _fbdce := _ebdeg.(_b.EndElement); _fbdce && _ceedb.Name == start.Name {
		*_deefc = 1
		return nil
	}
	if _bgaab, _aggcbc := _ebdeg.(_b.CharData); !_aggcbc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebdeg)
	} else {
		switch string(_bgaab) {
		case "":
			*_deefc = 0
		case "\u0073\u006e\u0067":
			*_deefc = 1
		case "\u0064\u0062\u006c":
			*_deefc = 2
		case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
			*_deefc = 3
		case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
			*_deefc = 4
		case "\u0074\u0072\u0069":
			*_deefc = 5
		}
	}
	_ebdeg, _dadf = d.Token()
	if _dadf != nil {
		return _dadf
	}
	if _dgfead, _bgbfa := _ebdeg.(_b.EndElement); _bgbfa && _dgfead.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebdeg)
}

// Validate validates the CT_SoftEdgesEffect and its children
func (_gadbb *CT_SoftEdgesEffect) Validate() error {
	return _gadbb.ValidateWithPath("\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_TableRow and its children, prefixing error messages with path
func (_gbdc *CT_TableRow) ValidateWithPath(path string) error {
	if _bacca := _gbdc.HAttr.ValidateWithPath(path + "\u002f\u0048\u0041\u0074\u0074\u0072"); _bacca != nil {
		return _bacca
	}
	for _gcaca, _ecdca := range _gbdc.Tc {
		if _cffee := _ecdca.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0054\u0063\u005b\u0025\u0064]", path, _gcaca)); _cffee != nil {
			return _cffee
		}
	}
	if _gbdc.ExtLst != nil {
		if _acceb := _gbdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acceb != nil {
			return _acceb
		}
	}
	return nil
}
func NewCT_AnimationChartBuildProperties() *CT_AnimationChartBuildProperties {
	_gbde := &CT_AnimationChartBuildProperties{}
	return _gbde
}

// Validate validates the CT_Scene3D and its children
func (_bcdab *CT_Scene3D) Validate() error {
	return _bcdab.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044")
}
func (_abfcb *CT_OuterShadowEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _addc := range start.Attr {
		if _addc.Name.Local == "\u0061\u006c\u0067\u006e" {
			_abfcb.AlgnAttr.UnmarshalXMLAttr(_addc)
			continue
		}
		if _addc.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_fbbde, _gefbf := _a.ParseBool(_addc.Value)
			if _gefbf != nil {
				return _gefbf
			}
			_abfcb.RotWithShapeAttr = &_fbbde
			continue
		}
		if _addc.Name.Local == "\u0064\u0069\u0073\u0074" {
			_cdgda, _bccba := _a.ParseInt(_addc.Value, 10, 64)
			if _bccba != nil {
				return _bccba
			}
			_abfcb.DistAttr = &_cdgda
			continue
		}
		if _addc.Name.Local == "\u0073\u0078" {
			_edfec, _bdbcf := ParseUnionST_Percentage(_addc.Value)
			if _bdbcf != nil {
				return _bdbcf
			}
			_abfcb.SxAttr = &_edfec
			continue
		}
		if _addc.Name.Local == "\u0073\u0079" {
			_fddf, _bdce := ParseUnionST_Percentage(_addc.Value)
			if _bdce != nil {
				return _bdce
			}
			_abfcb.SyAttr = &_fddf
			continue
		}
		if _addc.Name.Local == "\u006b\u0078" {
			_gdedc, _efga := _a.ParseInt(_addc.Value, 10, 32)
			if _efga != nil {
				return _efga
			}
			_gfgaf := int32(_gdedc)
			_abfcb.KxAttr = &_gfgaf
			continue
		}
		if _addc.Name.Local == "\u006b\u0079" {
			_bacb, _afcbe := _a.ParseInt(_addc.Value, 10, 32)
			if _afcbe != nil {
				return _afcbe
			}
			_gecbe := int32(_bacb)
			_abfcb.KyAttr = &_gecbe
			continue
		}
		if _addc.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_dgfaa, _fagc := _a.ParseInt(_addc.Value, 10, 64)
			if _fagc != nil {
				return _fagc
			}
			_abfcb.BlurRadAttr = &_dgfaa
			continue
		}
		if _addc.Name.Local == "\u0064\u0069\u0072" {
			_gbcag, _accb := _a.ParseInt(_addc.Value, 10, 32)
			if _accb != nil {
				return _accb
			}
			_affbe := int32(_gbcag)
			_abfcb.DirAttr = &_affbe
			continue
		}
	}
_aebcf:
	for {
		_caad, _afab := d.Token()
		if _afab != nil {
			return _afab
		}
		switch _aedec := _caad.(type) {
		case _b.StartElement:
			switch _aedec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_abfcb.ScrgbClr = NewCT_ScRgbColor()
				if _acdaf := d.DecodeElement(_abfcb.ScrgbClr, &_aedec); _acdaf != nil {
					return _acdaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_abfcb.SrgbClr = NewCT_SRgbColor()
				if _ffbb := d.DecodeElement(_abfcb.SrgbClr, &_aedec); _ffbb != nil {
					return _ffbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_abfcb.HslClr = NewCT_HslColor()
				if _ggaaa := d.DecodeElement(_abfcb.HslClr, &_aedec); _ggaaa != nil {
					return _ggaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_abfcb.SysClr = NewCT_SystemColor()
				if _eedag := d.DecodeElement(_abfcb.SysClr, &_aedec); _eedag != nil {
					return _eedag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_abfcb.SchemeClr = NewCT_SchemeColor()
				if _dadgc := d.DecodeElement(_abfcb.SchemeClr, &_aedec); _dadgc != nil {
					return _dadgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_abfcb.PrstClr = NewCT_PresetColor()
				if _dbgd := d.DecodeElement(_abfcb.PrstClr, &_aedec); _dbgd != nil {
					return _dbgd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _aedec.Name)
				if _ffbcf := d.Skip(); _ffbcf != nil {
					return _ffbcf
				}
			}
		case _b.EndElement:
			break _aebcf
		case _b.CharData:
		}
	}
	return nil
}
func (_ddbf *ST_PathFillMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fedad, _gefagb := d.Token()
	if _gefagb != nil {
		return _gefagb
	}
	if _bfggba, _facg := _fedad.(_b.EndElement); _facg && _bfggba.Name == start.Name {
		*_ddbf = 1
		return nil
	}
	if _dbfbe, _afbee := _fedad.(_b.CharData); !_afbee {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fedad)
	} else {
		switch string(_dbfbe) {
		case "":
			*_ddbf = 0
		case "\u006e\u006f\u006e\u0065":
			*_ddbf = 1
		case "\u006e\u006f\u0072\u006d":
			*_ddbf = 2
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_ddbf = 3
		case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
			*_ddbf = 4
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_ddbf = 5
		case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
			*_ddbf = 6
		}
	}
	_fedad, _gefagb = d.Token()
	if _gefagb != nil {
		return _gefagb
	}
	if _gagee, _ddaac := _fedad.(_b.EndElement); _ddaac && _gagee.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fedad)
}

type ST_TextCapsType byte

func NewCT_ColorSchemeList() *CT_ColorSchemeList { _dfgd := &CT_ColorSchemeList{}; return _dfgd }
func (_gbefc *CT_Path2DClose) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbfbd *CT_GeomRect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdag := range start.Attr {
		if _bdag.Name.Local == "\u006c" {
			_faaca, _fgdd := ParseUnionST_AdjCoordinate(_bdag.Value)
			if _fgdd != nil {
				return _fgdd
			}
			_bbfbd.LAttr = _faaca
			continue
		}
		if _bdag.Name.Local == "\u0074" {
			_daaeae, _afbeb := ParseUnionST_AdjCoordinate(_bdag.Value)
			if _afbeb != nil {
				return _afbeb
			}
			_bbfbd.TAttr = _daaeae
			continue
		}
		if _bdag.Name.Local == "\u0072" {
			_effe, _ccdc := ParseUnionST_AdjCoordinate(_bdag.Value)
			if _ccdc != nil {
				return _ccdc
			}
			_bbfbd.RAttr = _effe
			continue
		}
		if _bdag.Name.Local == "\u0062" {
			_bbbf, _fbfgd := ParseUnionST_AdjCoordinate(_bdag.Value)
			if _fbfgd != nil {
				return _fbfgd
			}
			_bbfbd.BAttr = _bbbf
			continue
		}
	}
	for {
		_cedec, _eaabba := d.Token()
		if _eaabba != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _eaabba)
		}
		if _cbad, _eade := _cedec.(_b.EndElement); _eade && _cbad.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Camera and its children
func (_efbd *CT_Camera) Validate() error {
	return _efbd.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a")
}
func (_dcef *CT_BlendEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcef.BlendAttr = ST_BlendMode(1)
	_dcef.Cont = NewCT_EffectContainer()
	for _, _egac := range start.Attr {
		if _egac.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_dcef.BlendAttr.UnmarshalXMLAttr(_egac)
			continue
		}
	}
_agda:
	for {
		_beeag, _bacfe := d.Token()
		if _bacfe != nil {
			return _bacfe
		}
		switch _aeae := _beeag.(type) {
		case _b.StartElement:
			switch _aeae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _bdeb := d.DecodeElement(_dcef.Cont, &_aeae); _bdeb != nil {
					return _bdeb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045\u0066f\u0065c\u0074\u0020\u0025\u0076", _aeae.Name)
				if _efag := d.Skip(); _efag != nil {
					return _efag
				}
			}
		case _b.EndElement:
			break _agda
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ComplementTransform and its children, prefixing error messages with path
func (_dcbdd *CT_ComplementTransform) ValidateWithPath(path string) error { return nil }
func (_cagea *ST_AnimationDgmOnlyBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cagea = 0
	case "\u006f\u006e\u0065":
		*_cagea = 1
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		*_cagea = 2
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cagea = 3
	}
	return nil
}
func NewCT_Path2DQuadBezierTo() *CT_Path2DQuadBezierTo {
	_faeef := &CT_Path2DQuadBezierTo{}
	return _faeef
}

type EG_LineJoinProperties struct {
	Round *CT_LineJoinRound
	Bevel *CT_LineJoinBevel
	Miter *CT_LineJoinMiterProperties
}

// ValidateWithPath validates the EG_Media and its children, prefixing error messages with path
func (_aeeagc *EG_Media) ValidateWithPath(path string) error {
	if _aeeagc.AudioCd != nil {
		if _dfabg := _aeeagc.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _dfabg != nil {
			return _dfabg
		}
	}
	if _aeeagc.WavAudioFile != nil {
		if _bfdea := _aeeagc.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _bfdea != nil {
			return _bfdea
		}
	}
	if _aeeagc.AudioFile != nil {
		if _ecfdg := _aeeagc.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _ecfdg != nil {
			return _ecfdg
		}
	}
	if _aeeagc.VideoFile != nil {
		if _egaad := _aeeagc.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _egaad != nil {
			return _egaad
		}
	}
	if _aeeagc.QuickTimeFile != nil {
		if _cfdef := _aeeagc.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _cfdef != nil {
			return _cfdef
		}
	}
	return nil
}
func NewCT_GvmlConnector() *CT_GvmlConnector {
	_cdgg := &CT_GvmlConnector{}
	_cdgg.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_cdgg.SpPr = NewCT_ShapeProperties()
	return _cdgg
}

// Validate validates the CT_FlatText and its children
func (_ccce *CT_FlatText) Validate() error {
	return _ccce.ValidateWithPath("C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074")
}

type CT_NoFillProperties struct{}

func (_ccf *CT_AlphaOutsetEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccf.RadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_ccf.RadAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_befaa *CT_TransformEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _befaa.SxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_befaa.SxAttr)})
	}
	if _befaa.SyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_befaa.SyAttr)})
	}
	if _befaa.KxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_befaa.KxAttr)})
	}
	if _befaa.KyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_befaa.KyAttr)})
	}
	if _befaa.TxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_befaa.TxAttr)})
	}
	if _befaa.TyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_befaa.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextBullet and its children
func (_gbffa *EG_TextBullet) Validate() error {
	return _gbffa.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074")
}

const (
	ST_PresetMaterialTypeUnset             ST_PresetMaterialType = 0
	ST_PresetMaterialTypeLegacyMatte       ST_PresetMaterialType = 1
	ST_PresetMaterialTypeLegacyPlastic     ST_PresetMaterialType = 2
	ST_PresetMaterialTypeLegacyMetal       ST_PresetMaterialType = 3
	ST_PresetMaterialTypeLegacyWireframe   ST_PresetMaterialType = 4
	ST_PresetMaterialTypeMatte             ST_PresetMaterialType = 5
	ST_PresetMaterialTypePlastic           ST_PresetMaterialType = 6
	ST_PresetMaterialTypeMetal             ST_PresetMaterialType = 7
	ST_PresetMaterialTypeWarmMatte         ST_PresetMaterialType = 8
	ST_PresetMaterialTypeTranslucentPowder ST_PresetMaterialType = 9
	ST_PresetMaterialTypePowder            ST_PresetMaterialType = 10
	ST_PresetMaterialTypeDkEdge            ST_PresetMaterialType = 11
	ST_PresetMaterialTypeSoftEdge          ST_PresetMaterialType = 12
	ST_PresetMaterialTypeClear             ST_PresetMaterialType = 13
	ST_PresetMaterialTypeFlat              ST_PresetMaterialType = 14
	ST_PresetMaterialTypeSoftmetal         ST_PresetMaterialType = 15
)

// Validate validates the CT_PresetShadowEffect and its children
func (_eecfc *CT_PresetShadowEffect) Validate() error {
	return _eecfc.ValidateWithPath("C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074")
}
func NewCT_PositiveFixedPercentage() *CT_PositiveFixedPercentage {
	_ebbbae := &CT_PositiveFixedPercentage{}
	return _ebbbae
}
func (_eccdb ST_BlackWhiteMode) String() string {
	switch _eccdb {
	case 0:
		return ""
	case 1:
		return "\u0063\u006c\u0072"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "\u0067\u0072\u0061\u0079"
	case 4:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 5:
		return "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case 6:
		return "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case 7:
		return "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case 8:
		return "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case 9:
		return "\u0062\u006c\u0061c\u006b"
	case 10:
		return "\u0077\u0068\u0069t\u0065"
	case 11:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

type CT_OfficeStyleSheet struct {
	NameAttr          *string
	ThemeElements     *CT_BaseStyles
	ObjectDefaults    *CT_ObjectStyleDefaults
	ExtraClrSchemeLst *CT_ColorSchemeList
	CustClrLst        *CT_CustomColorList
	ExtLst            *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_DuotoneEffect and its children, prefixing error messages with path
func (_fbdad *CT_DuotoneEffect) ValidateWithPath(path string) error {
	for _ddbe, _eddd := range _fbdad.EG_ColorChoice {
		if _dbea := _eddd.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _ddbe)); _dbea != nil {
			return _dbea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SphereCoords and its children, prefixing error messages with path
func (_bgbdfa *CT_SphereCoords) ValidateWithPath(path string) error {
	if _bgbdfa.LatAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0061t\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _bgbdfa.LatAttr)
	}
	if _bgbdfa.LatAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eL\u0061\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bgbdfa.LatAttr)
	}
	if _bgbdfa.LonAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u006fn\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _bgbdfa.LonAttr)
	}
	if _bgbdfa.LonAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eL\u006f\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bgbdfa.LonAttr)
	}
	if _bgbdfa.RevAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0065v\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _bgbdfa.RevAttr)
	}
	if _bgbdfa.RevAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eR\u0065\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bgbdfa.RevAttr)
	}
	return nil
}

// Validate validates the EG_OfficeArtExtensionList and its children
func (_aabe *EG_OfficeArtExtensionList) Validate() error {
	return _aabe.ValidateWithPath("\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}
func (_aebgc *CT_GrayscaleEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aggc *CT_Path2DMoveTo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bdcfe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_aggc.Pt, _bdcfe)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edggdg *EG_LineFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edggdg.NoFill != nil {
		_ccbceg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edggdg.NoFill, _ccbceg)
	}
	if _edggdg.SolidFill != nil {
		_ggdbd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edggdg.SolidFill, _ggdbd)
	}
	if _edggdg.GradFill != nil {
		_aagc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edggdg.GradFill, _aagc)
	}
	if _edggdg.PattFill != nil {
		_edbdd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edggdg.PattFill, _edbdd)
	}
	return nil
}
func (_cdabf *CT_TableCellBorderStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cdabf.Left != nil {
		_febdc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_cdabf.Left, _febdc)
	}
	if _cdabf.Right != nil {
		_ddcdc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_cdabf.Right, _ddcdc)
	}
	if _cdabf.Top != nil {
		_fgace := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074o\u0070"}}
		e.EncodeElement(_cdabf.Top, _fgace)
	}
	if _cdabf.Bottom != nil {
		_gdfca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006f\u0074\u0074\u006f\u006d"}}
		e.EncodeElement(_cdabf.Bottom, _gdfca)
	}
	if _cdabf.InsideH != nil {
		_eedaea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065H"}}
		e.EncodeElement(_cdabf.InsideH, _eedaea)
	}
	if _cdabf.InsideV != nil {
		_fbadg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065V"}}
		e.EncodeElement(_cdabf.InsideV, _fbadg)
	}
	if _cdabf.Tl2br != nil {
		_cgaga := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u006c\u0032\u0062\u0072"}}
		e.EncodeElement(_cdabf.Tl2br, _cgaga)
	}
	if _cdabf.Tr2bl != nil {
		_egacdb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0072\u0032\u0062\u006c"}}
		e.EncodeElement(_cdabf.Tr2bl, _egacdb)
	}
	if _cdabf.ExtLst != nil {
		_gcgfa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdabf.ExtLst, _gcgfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbfcf *CT_TableCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbfcf.RowSpanAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072o\u0077\u0053\u0070\u0061\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_cbfcf.RowSpanAttr)})
	}
	if _cbfcf.GridSpanAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_cbfcf.GridSpanAttr)})
	}
	if _cbfcf.HMergeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u004d\u0065\u0072\u0067\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cbfcf.HMergeAttr))})
	}
	if _cbfcf.VMergeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u004d\u0065\u0072\u0067\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_cbfcf.VMergeAttr))})
	}
	if _cbfcf.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_cbfcf.IdAttr)})
	}
	e.EncodeToken(start)
	if _cbfcf.TxBody != nil {
		_feacf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_cbfcf.TxBody, _feacf)
	}
	if _cbfcf.TcPr != nil {
		_dgafa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0063\u0050\u0072"}}
		e.EncodeElement(_cbfcf.TcPr, _dgafa)
	}
	if _cbfcf.ExtLst != nil {
		_effdg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbfcf.ExtLst, _effdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfaec *CT_PolarAdjustHandle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfaec.GdRefRAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_bfaec.GdRefRAttr)})
	}
	if _bfaec.MinRAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_bfaec.MinRAttr)})
	}
	if _bfaec.MaxRAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_bfaec.MaxRAttr)})
	}
	if _bfaec.GdRefAngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_bfaec.GdRefAngAttr)})
	}
	if _bfaec.MinAngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0041\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_bfaec.MinAngAttr)})
	}
	if _bfaec.MaxAngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0041\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_bfaec.MaxAngAttr)})
	}
	e.EncodeToken(start)
	_acgec := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_bfaec.Pos, _acgec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaab ST_BlendMode) ValidateWithPath(path string) error {
	switch _gaab {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaab))
	}
	return nil
}
func (_bfbgd ST_AdjCoordinate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bfbgd.ST_Coordinate != nil {
		e.Encode(_bfbgd.ST_Coordinate)
	}
	if _bfbgd.ST_GeomGuideName != nil {
		e.EncodeToken(_b.CharData(*_bfbgd.ST_GeomGuideName))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

// Validate validates the CT_AnimationChartElement and its children
func (_bfb *CT_AnimationChartElement) Validate() error {
	return _bfb.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}
func (_ggcgb *ST_TextCapsType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cggbb, _cedcg := d.Token()
	if _cedcg != nil {
		return _cedcg
	}
	if _eggcg, _ebbf := _cggbb.(_b.EndElement); _ebbf && _eggcg.Name == start.Name {
		*_ggcgb = 1
		return nil
	}
	if _bcgde, _fbgff := _cggbb.(_b.CharData); !_fbgff {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cggbb)
	} else {
		switch string(_bcgde) {
		case "":
			*_ggcgb = 0
		case "\u006e\u006f\u006e\u0065":
			*_ggcgb = 1
		case "\u0073\u006d\u0061l\u006c":
			*_ggcgb = 2
		case "\u0061\u006c\u006c":
			*_ggcgb = 3
		}
	}
	_cggbb, _cedcg = d.Token()
	if _cedcg != nil {
		return _cedcg
	}
	if _dafgac, _egacf := _cggbb.(_b.EndElement); _egacf && _dafgac.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cggbb)
}
func (_cfe *CT_AlphaModulateEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfe.Cont = NewCT_EffectContainer()
_ffeb:
	for {
		_dgg, _dbe := d.Token()
		if _dbe != nil {
			return _dbe
		}
		switch _efd := _dgg.(type) {
		case _b.StartElement:
			switch _efd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _edae := d.DecodeElement(_cfe.Cont, &_efd); _edae != nil {
					return _edae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _efd.Name)
				if _gcf := d.Skip(); _gcf != nil {
					return _gcf
				}
			}
		case _b.EndElement:
			break _ffeb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlTextShape and its children, prefixing error messages with path
func (_gage *CT_GvmlTextShape) ValidateWithPath(path string) error {
	if _bdcb := _gage.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _bdcb != nil {
		return _bdcb
	}
	if _gage.Choice != nil {
		if _edbed := _gage.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _edbed != nil {
			return _edbed
		}
	}
	if _gage.ExtLst != nil {
		if _fdcf := _gage.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdcf != nil {
			return _fdcf
		}
	}
	return nil
}
func (_egccc ST_EffectContainerType) Validate() error { return _egccc.ValidateWithPath("") }
func (_egca *CT_GeomGuide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _egca.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _bb.Sprintf("\u0025\u0076", _egca.FmlaAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlConnectorNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvCxnSpPr *CT_NonVisualConnectorProperties
}
type EG_LineFillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
}

func (_bcecc ST_AdjCoordinate) String() string {
	if _bcecc.ST_Coordinate != nil {
		return _bcecc.ST_Coordinate.String()
	}
	if _bcecc.ST_GeomGuideName != nil {
		return _bb.Sprintf("\u0025\u0076", *_bcecc.ST_GeomGuideName)
	}
	return ""
}
func (_daaeab *CT_ShapeProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbabg := range start.Attr {
		if _gbabg.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_daaeab.BwModeAttr.UnmarshalXMLAttr(_gbabg)
			continue
		}
	}
_dacfag:
	for {
		_cedbf, _ebgde := d.Token()
		if _ebgde != nil {
			return _ebgde
		}
		switch _gbedd := _cedbf.(type) {
		case _b.StartElement:
			switch _gbedd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_daaeab.Xfrm = NewCT_Transform2D()
				if _cfce := d.DecodeElement(_daaeab.Xfrm, &_gbedd); _cfce != nil {
					return _cfce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_daaeab.CustGeom = NewCT_CustomGeometry2D()
				if _fedcda := d.DecodeElement(_daaeab.CustGeom, &_gbedd); _fedcda != nil {
					return _fedcda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_daaeab.PrstGeom = NewCT_PresetGeometry2D()
				if _abab := d.DecodeElement(_daaeab.PrstGeom, &_gbedd); _abab != nil {
					return _abab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_daaeab.NoFill = NewCT_NoFillProperties()
				if _cfcd := d.DecodeElement(_daaeab.NoFill, &_gbedd); _cfcd != nil {
					return _cfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_daaeab.SolidFill = NewCT_SolidColorFillProperties()
				if _cgcecd := d.DecodeElement(_daaeab.SolidFill, &_gbedd); _cgcecd != nil {
					return _cgcecd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_daaeab.GradFill = NewCT_GradientFillProperties()
				if _gdefde := d.DecodeElement(_daaeab.GradFill, &_gbedd); _gdefde != nil {
					return _gdefde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_daaeab.BlipFill = NewCT_BlipFillProperties()
				if _adbae := d.DecodeElement(_daaeab.BlipFill, &_gbedd); _adbae != nil {
					return _adbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_daaeab.PattFill = NewCT_PatternFillProperties()
				if _eadfd := d.DecodeElement(_daaeab.PattFill, &_gbedd); _eadfd != nil {
					return _eadfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_daaeab.GrpFill = NewCT_GroupFillProperties()
				if _fece := d.DecodeElement(_daaeab.GrpFill, &_gbedd); _fece != nil {
					return _fece
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_daaeab.Ln = NewCT_LineProperties()
				if _efgff := d.DecodeElement(_daaeab.Ln, &_gbedd); _efgff != nil {
					return _efgff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_daaeab.EffectLst = NewCT_EffectList()
				if _agaade := d.DecodeElement(_daaeab.EffectLst, &_gbedd); _agaade != nil {
					return _agaade
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_daaeab.EffectDag = NewCT_EffectContainer()
				if _dfddd := d.DecodeElement(_daaeab.EffectDag, &_gbedd); _dfddd != nil {
					return _dfddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_daaeab.Scene3d = NewCT_Scene3D()
				if _fdcg := d.DecodeElement(_daaeab.Scene3d, &_gbedd); _fdcg != nil {
					return _fdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_daaeab.Sp3d = NewCT_Shape3D()
				if _ffgac := d.DecodeElement(_daaeab.Sp3d, &_gbedd); _ffgac != nil {
					return _ffgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daaeab.ExtLst = NewCT_OfficeArtExtensionList()
				if _eefbe := d.DecodeElement(_daaeab.ExtLst, &_gbedd); _eefbe != nil {
					return _eefbe
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gbedd.Name)
				if _eaceb := d.Skip(); _eaceb != nil {
					return _eaceb
				}
			}
		case _b.EndElement:
			break _dacfag
		case _b.CharData:
		}
	}
	return nil
}
func (_dbfbcg *ST_LineEndLength) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daafa, _bdedeg := d.Token()
	if _bdedeg != nil {
		return _bdedeg
	}
	if _cgdaa, _agagg := _daafa.(_b.EndElement); _agagg && _cgdaa.Name == start.Name {
		*_dbfbcg = 1
		return nil
	}
	if _daebe, _egecc := _daafa.(_b.CharData); !_egecc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _daafa)
	} else {
		switch string(_daebe) {
		case "":
			*_dbfbcg = 0
		case "\u0073\u006d":
			*_dbfbcg = 1
		case "\u006d\u0065\u0064":
			*_dbfbcg = 2
		case "\u006c\u0067":
			*_dbfbcg = 3
		}
	}
	_daafa, _bdedeg = d.Token()
	if _bdedeg != nil {
		return _bdedeg
	}
	if _bcbcg, _egfba := _daafa.(_b.EndElement); _egfba && _bcbcg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _daafa)
}

// Validate validates the CT_TextTabStop and its children
func (_dfbgbc *CT_TextTabStop) Validate() error {
	return _dfbgbc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070")
}
func (_bcfdg *EG_ColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bagcf:
	for {
		_dbaae, _dfegeg := d.Token()
		if _dfegeg != nil {
			return _dfegeg
		}
		switch _eedab := _dbaae.(type) {
		case _b.StartElement:
			switch _eedab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bcfdg.Tint = NewCT_PositiveFixedPercentage()
				if _gbbdeb := d.DecodeElement(_bcfdg.Tint, &_eedab); _gbbdeb != nil {
					return _gbbdeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_bcfdg.Shade = NewCT_PositiveFixedPercentage()
				if _fddfg := d.DecodeElement(_bcfdg.Shade, &_eedab); _fddfg != nil {
					return _fddfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_bcfdg.Comp = NewCT_ComplementTransform()
				if _fbcae := d.DecodeElement(_bcfdg.Comp, &_eedab); _fbcae != nil {
					return _fbcae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_bcfdg.Inv = NewCT_InverseTransform()
				if _gfaf := d.DecodeElement(_bcfdg.Inv, &_eedab); _gfaf != nil {
					return _gfaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_bcfdg.Gray = NewCT_GrayscaleTransform()
				if _edaggf := d.DecodeElement(_bcfdg.Gray, &_eedab); _edaggf != nil {
					return _edaggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bcfdg.Alpha = NewCT_PositiveFixedPercentage()
				if _cgcfe := d.DecodeElement(_bcfdg.Alpha, &_eedab); _cgcfe != nil {
					return _cgcfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_bcfdg.AlphaOff = NewCT_FixedPercentage()
				if _feabee := d.DecodeElement(_bcfdg.AlphaOff, &_eedab); _feabee != nil {
					return _feabee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_bcfdg.AlphaMod = NewCT_PositivePercentage()
				if _bccad := d.DecodeElement(_bcfdg.AlphaMod, &_eedab); _bccad != nil {
					return _bccad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_bcfdg.Hue = NewCT_PositiveFixedAngle()
				if _cgbae := d.DecodeElement(_bcfdg.Hue, &_eedab); _cgbae != nil {
					return _cgbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_bcfdg.HueOff = NewCT_Angle()
				if _bfabd := d.DecodeElement(_bcfdg.HueOff, &_eedab); _bfabd != nil {
					return _bfabd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_bcfdg.HueMod = NewCT_PositivePercentage()
				if _ccage := d.DecodeElement(_bcfdg.HueMod, &_eedab); _ccage != nil {
					return _ccage
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_bcfdg.Sat = NewCT_Percentage()
				if _ebefe := d.DecodeElement(_bcfdg.Sat, &_eedab); _ebefe != nil {
					return _ebefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_bcfdg.SatOff = NewCT_Percentage()
				if _fabdb := d.DecodeElement(_bcfdg.SatOff, &_eedab); _fabdb != nil {
					return _fabdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bcfdg.SatMod = NewCT_Percentage()
				if _dgbcg := d.DecodeElement(_bcfdg.SatMod, &_eedab); _dgbcg != nil {
					return _dgbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bcfdg.Lum = NewCT_Percentage()
				if _bbaca := d.DecodeElement(_bcfdg.Lum, &_eedab); _bbaca != nil {
					return _bbaca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bcfdg.LumOff = NewCT_Percentage()
				if _dbdgf := d.DecodeElement(_bcfdg.LumOff, &_eedab); _dbdgf != nil {
					return _dbdgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_bcfdg.LumMod = NewCT_Percentage()
				if _ffgd := d.DecodeElement(_bcfdg.LumMod, &_eedab); _ffgd != nil {
					return _ffgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bcfdg.Red = NewCT_Percentage()
				if _effdb := d.DecodeElement(_bcfdg.Red, &_eedab); _effdb != nil {
					return _effdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_bcfdg.RedOff = NewCT_Percentage()
				if _fbdd := d.DecodeElement(_bcfdg.RedOff, &_eedab); _fbdd != nil {
					return _fbdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_bcfdg.RedMod = NewCT_Percentage()
				if _ecffb := d.DecodeElement(_bcfdg.RedMod, &_eedab); _ecffb != nil {
					return _ecffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_bcfdg.Green = NewCT_Percentage()
				if _ceadbg := d.DecodeElement(_bcfdg.Green, &_eedab); _ceadbg != nil {
					return _ceadbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_bcfdg.GreenOff = NewCT_Percentage()
				if _cddfc := d.DecodeElement(_bcfdg.GreenOff, &_eedab); _cddfc != nil {
					return _cddfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_bcfdg.GreenMod = NewCT_Percentage()
				if _fbeaf := d.DecodeElement(_bcfdg.GreenMod, &_eedab); _fbeaf != nil {
					return _fbeaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_bcfdg.Blue = NewCT_Percentage()
				if _bbgac := d.DecodeElement(_bcfdg.Blue, &_eedab); _bbgac != nil {
					return _bbgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_bcfdg.BlueOff = NewCT_Percentage()
				if _baeeac := d.DecodeElement(_bcfdg.BlueOff, &_eedab); _baeeac != nil {
					return _baeeac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_bcfdg.BlueMod = NewCT_Percentage()
				if _fffeg := d.DecodeElement(_bcfdg.BlueMod, &_eedab); _fffeg != nil {
					return _fffeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_bcfdg.Gamma = NewCT_GammaTransform()
				if _eegad := d.DecodeElement(_bcfdg.Gamma, &_eedab); _eegad != nil {
					return _eegad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_bcfdg.InvGamma = NewCT_InverseGammaTransform()
				if _geega := d.DecodeElement(_bcfdg.InvGamma, &_eedab); _geega != nil {
					return _geega
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0020\u0025\u0076", _eedab.Name)
				if _efeabg := d.Skip(); _efeabg != nil {
					return _efeabg
				}
			}
		case _b.EndElement:
			break _bagcf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LineProperties and its children, prefixing error messages with path
func (_aafad *CT_LineProperties) ValidateWithPath(path string) error {
	if _aafad.WAttr != nil {
		if *_aafad.WAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_aafad.WAttr)
		}
		if *_aafad.WAttr > 20116800 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0032\u0030\u0031\u0031\u0036\u0038\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_aafad.WAttr)
		}
	}
	if _dedc := _aafad.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _dedc != nil {
		return _dedc
	}
	if _bggd := _aafad.CmpdAttr.ValidateWithPath(path + "\u002fC\u006d\u0070\u0064\u0041\u0074\u0074r"); _bggd != nil {
		return _bggd
	}
	if _ggea := _aafad.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _ggea != nil {
		return _ggea
	}
	if _aafad.NoFill != nil {
		if _bgbeb := _aafad.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bgbeb != nil {
			return _bgbeb
		}
	}
	if _aafad.SolidFill != nil {
		if _bcfbg := _aafad.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bcfbg != nil {
			return _bcfbg
		}
	}
	if _aafad.GradFill != nil {
		if _acae := _aafad.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _acae != nil {
			return _acae
		}
	}
	if _aafad.PattFill != nil {
		if _dgfea := _aafad.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dgfea != nil {
			return _dgfea
		}
	}
	if _aafad.PrstDash != nil {
		if _eegdf := _aafad.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _eegdf != nil {
			return _eegdf
		}
	}
	if _aafad.CustDash != nil {
		if _fadbb := _aafad.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _fadbb != nil {
			return _fadbb
		}
	}
	if _aafad.Round != nil {
		if _dbdfb := _aafad.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _dbdfb != nil {
			return _dbdfb
		}
	}
	if _aafad.Bevel != nil {
		if _debae := _aafad.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _debae != nil {
			return _debae
		}
	}
	if _aafad.Miter != nil {
		if _ggbd := _aafad.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _ggbd != nil {
			return _ggbd
		}
	}
	if _aafad.HeadEnd != nil {
		if _feeae := _aafad.HeadEnd.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0045\u006e\u0064"); _feeae != nil {
			return _feeae
		}
	}
	if _aafad.TailEnd != nil {
		if _fcac := _aafad.TailEnd.ValidateWithPath(path + "\u002f\u0054\u0061\u0069\u006c\u0045\u006e\u0064"); _fcac != nil {
			return _fcac
		}
	}
	if _aafad.ExtLst != nil {
		if _bccd := _aafad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bccd != nil {
			return _bccd
		}
	}
	return nil
}
func (_dfbeb *CT_GlowEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfbeb.RadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_dfbeb.RadAttr)})
	}
	e.EncodeToken(start)
	if _dfbeb.ScrgbClr != nil {
		_eaef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dfbeb.ScrgbClr, _eaef)
	}
	if _dfbeb.SrgbClr != nil {
		_gdbcc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dfbeb.SrgbClr, _gdbcc)
	}
	if _dfbeb.HslClr != nil {
		_ccdag := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dfbeb.HslClr, _ccdag)
	}
	if _dfbeb.SysClr != nil {
		_efada := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dfbeb.SysClr, _efada)
	}
	if _dfbeb.SchemeClr != nil {
		_afeb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dfbeb.SchemeClr, _afeb)
	}
	if _dfbeb.PrstClr != nil {
		_gfcfb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dfbeb.PrstClr, _gfcfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SolidColorFillProperties struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gfggc *CT_LightRig) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_cdede, _ebdee := _gfggc.RigAttr.MarshalXMLAttr(_b.Name{Local: "\u0072\u0069\u0067"})
	if _ebdee != nil {
		return _ebdee
	}
	start.Attr = append(start.Attr, _cdede)
	_cdede, _ebdee = _gfggc.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
	if _ebdee != nil {
		return _ebdee
	}
	start.Attr = append(start.Attr, _cdede)
	e.EncodeToken(start)
	if _gfggc.Rot != nil {
		_dgcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_gfggc.Rot, _dgcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Point2D and its children
func (_cagg *CT_Point2D) Validate() error {
	return _cagg.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

// Validate validates the EG_TextGeometry and its children
func (_ffadc *EG_TextGeometry) Validate() error {
	return _ffadc.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}
func (_dfbge *ST_TextShapeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cefea, _cdefb := d.Token()
	if _cdefb != nil {
		return _cdefb
	}
	if _bbbcc, _gcdec := _cefea.(_b.EndElement); _gcdec && _bbbcc.Name == start.Name {
		*_dfbge = 1
		return nil
	}
	if _bbgaa, _dfabc := _cefea.(_b.CharData); !_dfabc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cefea)
	} else {
		switch string(_bbgaa) {
		case "":
			*_dfbge = 0
		case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
			*_dfbge = 1
		case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
			*_dfbge = 2
		case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
			*_dfbge = 3
		case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_dfbge = 4
		case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
			*_dfbge = 5
		case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
			*_dfbge = 6
		case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
			*_dfbge = 7
		case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
			*_dfbge = 8
		case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
			*_dfbge = 9
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
			*_dfbge = 10
		case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
			*_dfbge = 11
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
			*_dfbge = 12
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
			*_dfbge = 13
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
			*_dfbge = 14
		case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
			*_dfbge = 15
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
			*_dfbge = 16
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
			*_dfbge = 17
		case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
			*_dfbge = 18
		case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
			*_dfbge = 19
		case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
			*_dfbge = 20
		case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
			*_dfbge = 21
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
			*_dfbge = 22
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
			*_dfbge = 23
		case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
			*_dfbge = 24
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
			*_dfbge = 25
		case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
			*_dfbge = 26
		case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
			*_dfbge = 27
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_dfbge = 28
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_dfbge = 29
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_dfbge = 30
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_dfbge = 31
		case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
			*_dfbge = 32
		case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
			*_dfbge = 33
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
			*_dfbge = 34
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
			*_dfbge = 35
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
			*_dfbge = 36
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_dfbge = 37
		case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
			*_dfbge = 38
		case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
			*_dfbge = 39
		case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
			*_dfbge = 40
		case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_dfbge = 41
		}
	}
	_cefea, _cdefb = d.Token()
	if _cdefb != nil {
		return _cdefb
	}
	if _bgefe, _fcccac := _cefea.(_b.EndElement); _fcccac && _bgefe.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cefea)
}
func (_acdfa *CT_LinearShadeProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acdfa.AngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_acdfa.AngAttr)})
	}
	if _acdfa.ScaledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061\u006c\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_acdfa.ScaledAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextUnderlineLine and its children
func (_eggad *EG_TextUnderlineLine) Validate() error {
	return _eggad.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065")
}
func (_dcbde ST_PresetShadowVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcbde.String(), start)
}

type CT_Path2D struct {
	WAttr           *int64
	HAttr           *int64
	FillAttr        ST_PathFillMode
	StrokeAttr      *bool
	ExtrusionOkAttr *bool
	Close           []*CT_Path2DClose
	MoveTo          []*CT_Path2DMoveTo
	LnTo            []*CT_Path2DLineTo
	ArcTo           []*CT_Path2DArcTo
	QuadBezTo       []*CT_Path2DQuadBezierTo
	CubicBezTo      []*CT_Path2DCubicBezierTo
}

func (_decdbg *ST_PositivePercentage) ValidateWithPath(path string) error {
	_fedfb := []string{}
	if _decdbg.ST_PositivePercentageDecimal != nil {
		_fedfb = append(_fedfb, "\u0053\u0054\u005f\u0050o\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063e\u006et\u0061\u0067\u0065\u0044\u0065\u0063\u0069m\u0061\u006c")
	}
	if _decdbg.ST_PositivePercentage != nil {
		if _cabdc := _decdbg.ST_PositivePercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fPo\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065"); _cabdc != nil {
			return _cabdc
		}
		_fedfb = append(_fedfb, "S\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_fedfb) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fedfb)
	}
	return nil
}
func (_dceg *CT_BackgroundFillStyleList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bddd:
	for {
		_ggcd, _cfea := d.Token()
		if _cfea != nil {
			return _cfea
		}
		switch _fabg := _ggcd.(type) {
		case _b.StartElement:
			switch _fabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_edef := NewEG_FillProperties()
				_edef.NoFill = NewCT_NoFillProperties()
				if _abcd := d.DecodeElement(_edef.NoFill, &_fabg); _abcd != nil {
					return _abcd
				}
				_dceg.EG_FillProperties = append(_dceg.EG_FillProperties, _edef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_agea := NewEG_FillProperties()
				_agea.SolidFill = NewCT_SolidColorFillProperties()
				if _bef := d.DecodeElement(_agea.SolidFill, &_fabg); _bef != nil {
					return _bef
				}
				_dceg.EG_FillProperties = append(_dceg.EG_FillProperties, _agea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_beaf := NewEG_FillProperties()
				_beaf.GradFill = NewCT_GradientFillProperties()
				if _eaab := d.DecodeElement(_beaf.GradFill, &_fabg); _eaab != nil {
					return _eaab
				}
				_dceg.EG_FillProperties = append(_dceg.EG_FillProperties, _beaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_caa := NewEG_FillProperties()
				_caa.BlipFill = NewCT_BlipFillProperties()
				if _ccfd := d.DecodeElement(_caa.BlipFill, &_fabg); _ccfd != nil {
					return _ccfd
				}
				_dceg.EG_FillProperties = append(_dceg.EG_FillProperties, _caa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cfa := NewEG_FillProperties()
				_cfa.PattFill = NewCT_PatternFillProperties()
				if _deba := d.DecodeElement(_cfa.PattFill, &_fabg); _deba != nil {
					return _deba
				}
				_dceg.EG_FillProperties = append(_dceg.EG_FillProperties, _cfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_babc := NewEG_FillProperties()
				_babc.GrpFill = NewCT_GroupFillProperties()
				if _fgfeg := d.DecodeElement(_babc.GrpFill, &_fabg); _fgfeg != nil {
					return _fgfeg
				}
				_dceg.EG_FillProperties = append(_dceg.EG_FillProperties, _babc)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0042\u0061c\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fabg.Name)
				if _gag := d.Skip(); _gag != nil {
					return _gag
				}
			}
		case _b.EndElement:
			break _bddd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TableCellProperties() *CT_TableCellProperties {
	_cgedd := &CT_TableCellProperties{}
	return _cgedd
}

// Validate validates the CT_Bevel and its children
func (_cde *CT_Bevel) Validate() error {
	return _cde.ValidateWithPath("\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c")
}

// Validate validates the CT_WholeE2oFormatting and its children
func (_eaefg *CT_WholeE2oFormatting) Validate() error {
	return _eaefg.ValidateWithPath("C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_eccb *CT_Headers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eaeb:
	for {
		_cfbbf, _gbfc := d.Token()
		if _gbfc != nil {
			return _gbfc
		}
		switch _gggcc := _cfbbf.(type) {
		case _b.StartElement:
			switch _gggcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				var _fffed string
				if _cbbfd := d.DecodeElement(&_fffed, &_gggcc); _cbbfd != nil {
					return _cbbfd
				}
				_eccb.Header = append(_eccb.Header, _fffed)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fH\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _gggcc.Name)
				if _fdgbg := d.Skip(); _fdgbg != nil {
					return _fdgbg
				}
			}
		case _b.EndElement:
			break _eaeb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TablePartStyle and its children, prefixing error messages with path
func (_faaacd *CT_TablePartStyle) ValidateWithPath(path string) error {
	if _faaacd.TcTxStyle != nil {
		if _deffc := _faaacd.TcTxStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"); _deffc != nil {
			return _deffc
		}
	}
	if _faaacd.TcStyle != nil {
		if _ecccfc := _faaacd.TcStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0053\u0074\u0079\u006c\u0065"); _ecccfc != nil {
			return _ecccfc
		}
	}
	return nil
}
func (_egebd ST_PresetLineDashVal) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bggeb := _b.Attr{}
	_bggeb.Name = name
	switch _egebd {
	case ST_PresetLineDashValUnset:
		_bggeb.Value = ""
	case ST_PresetLineDashValSolid:
		_bggeb.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PresetLineDashValDot:
		_bggeb.Value = "\u0064\u006f\u0074"
	case ST_PresetLineDashValDash:
		_bggeb.Value = "\u0064\u0061\u0073\u0068"
	case ST_PresetLineDashValLgDash:
		_bggeb.Value = "\u006c\u0067\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValDashDot:
		_bggeb.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValLgDashDot:
		_bggeb.Value = "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case ST_PresetLineDashValLgDashDotDot:
		_bggeb.Value = "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDash:
		_bggeb.Value = "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValSysDot:
		_bggeb.Value = "\u0073\u0079\u0073\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDot:
		_bggeb.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDotDot:
		_bggeb.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return _bggeb, nil
}

// ValidateWithPath validates the CT_TableGrid and its children, prefixing error messages with path
func (_cbdffd *CT_TableGrid) ValidateWithPath(path string) error {
	for _gecfa, _bgggc := range _cbdffd.GridCol {
		if _faaac := _bgggc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0069\u0064\u0043\u006fl\u005b\u0025\u0064\u005d", path, _gecfa)); _faaac != nil {
			return _faaac
		}
	}
	return nil
}

type CT_ColorReplaceEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}
type CT_ClipboardStyleSheet struct {
	ThemeElements *CT_BaseStyles
	ClrMap        *CT_ColorMapping
}

// ValidateWithPath validates the CT_TablePropertiesChoice and its children, prefixing error messages with path
func (_daeadg *CT_TablePropertiesChoice) ValidateWithPath(path string) error {
	if _daeadg.TableStyle != nil {
		if _abccfe := _daeadg.TableStyle.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _abccfe != nil {
			return _abccfe
		}
	}
	if _daeadg.TableStyleId != nil {
		if !_eb.ST_GuidPatternRe.MatchString(*_daeadg.TableStyleId) {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0054\u0061b\u006c\u0065\u0053t\u0079\u006c\u0065\u0049d\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eb.ST_GuidPatternRe, *_daeadg.TableStyleId)
		}
	}
	return nil
}
func (_dbbcc *ST_TextTabAlignType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbbcc = 0
	case "\u006c":
		*_dbbcc = 1
	case "\u0063\u0074\u0072":
		*_dbbcc = 2
	case "\u0072":
		*_dbbcc = 3
	case "\u0064\u0065\u0063":
		*_dbbcc = 4
	}
	return nil
}

// Validate validates the CT_GvmlPicture and its children
func (_ffdea *CT_GvmlPicture) Validate() error {
	return _ffdea.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065")
}
func NewCT_StyleMatrixReference() *CT_StyleMatrixReference {
	_abdgg := &CT_StyleMatrixReference{}
	return _abdgg
}
func (_aeeca *EG_ColorChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aeeca.ScrgbClr != nil {
		_ecgdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_aeeca.ScrgbClr, _ecgdf)
	}
	if _aeeca.SrgbClr != nil {
		_eagc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_aeeca.SrgbClr, _eagc)
	}
	if _aeeca.HslClr != nil {
		_ebada := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_aeeca.HslClr, _ebada)
	}
	if _aeeca.SysClr != nil {
		_egfde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_aeeca.SysClr, _egfde)
	}
	if _aeeca.SchemeClr != nil {
		_cagd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_aeeca.SchemeClr, _cagd)
	}
	if _aeeca.PrstClr != nil {
		_edfeae := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_aeeca.PrstClr, _edfeae)
	}
	return nil
}

// Validate validates the CT_OfficeArtExtension and its children
func (_cbfc *CT_OfficeArtExtension) Validate() error {
	return _cbfc.ValidateWithPath("C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e")
}
func (_cgfdda ST_TextAnchoringType) String() string {
	switch _cgfdda {
	case 0:
		return ""
	case 1:
		return "\u0074"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0062"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u0064\u0069\u0073\u0074"
	}
	return ""
}
func (_gadge *CT_TextField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _gadge.IdAttr)})
	if _gadge.TypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_gadge.TypeAttr)})
	}
	e.EncodeToken(start)
	if _gadge.RPr != nil {
		_fegfc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_gadge.RPr, _fegfc)
	}
	if _gadge.PPr != nil {
		_ffdgff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_gadge.PPr, _ffdgff)
	}
	if _gadge.T != nil {
		_facf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074"}}
		_f.AddPreserveSpaceAttr(&_facf, *_gadge.T)
		e.EncodeElement(_gadge.T, _facf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fefae *CT_NonVisualDrawingShapeProps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eabd := range start.Attr {
		if _eabd.Name.Local == "\u0074\u0078\u0042o\u0078" {
			_dagef, _aegdg := _a.ParseBool(_eabd.Value)
			if _aegdg != nil {
				return _aegdg
			}
			_fefae.TxBoxAttr = &_dagef
			continue
		}
	}
_fefc:
	for {
		_febgf, _eabfc := d.Token()
		if _eabfc != nil {
			return _eabfc
		}
		switch _fbfgf := _febgf.(type) {
		case _b.StartElement:
			switch _fbfgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}:
				_fefae.SpLocks = NewCT_ShapeLocking()
				if _bebfc := d.DecodeElement(_fefae.SpLocks, &_fbfgf); _bebfc != nil {
					return _bebfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fefae.ExtLst = NewCT_OfficeArtExtensionList()
				if _bdfbd := d.DecodeElement(_fefae.ExtLst, &_fbfgf); _bdfbd != nil {
					return _bdfbd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061w\u0069\u006e\u0067\u0053\u0068\u0061p\u0065\u0050r\u006f\u0070s\u0020%\u0076", _fbfgf.Name)
				if _aefdg := d.Skip(); _aefdg != nil {
					return _aefdg
				}
			}
		case _b.EndElement:
			break _fefc
		case _b.CharData:
		}
	}
	return nil
}

type CT_Shape3D struct {
	ZAttr            *ST_Coordinate
	ExtrusionHAttr   *int64
	ContourWAttr     *int64
	PrstMaterialAttr ST_PresetMaterialType
	BevelT           *CT_Bevel
	BevelB           *CT_Bevel
	ExtrusionClr     *CT_Color
	ContourClr       *CT_Color
	ExtLst           *CT_OfficeArtExtensionList
}

func (_abecb *CT_SphereCoords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _abecb.LatAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e"}, Value: _bb.Sprintf("\u0025\u0076", _abecb.LonAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076"}, Value: _bb.Sprintf("\u0025\u0076", _abecb.RevAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgacd ST_PenAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgacd.String(), start)
}
func (_gggfdb *CT_PathShadeProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gggfdb.PathAttr != ST_PathShadeTypeUnset {
		_bebcc, _ggadg := _gggfdb.PathAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u0074\u0068"})
		if _ggadg != nil {
			return _ggadg
		}
		start.Attr = append(start.Attr, _bebcc)
	}
	e.EncodeToken(start)
	if _gggfdb.FillToRect != nil {
		_bbbd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066i\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_gggfdb.FillToRect, _bbbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_AnimationDgmOnlyBuildType byte

// ValidateWithPath validates the CT_TextSpacingPercent and its children, prefixing error messages with path
func (_effed *CT_TextSpacingPercent) ValidateWithPath(path string) error {
	if _fdegb := _effed.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fdegb != nil {
		return _fdegb
	}
	return nil
}
func NewCT_GvmlTextShape() *CT_GvmlTextShape {
	_gbgbe := &CT_GvmlTextShape{}
	_gbgbe.TxBody = NewCT_TextBody()
	return _gbgbe
}
func NewEG_LineFillProperties() *EG_LineFillProperties {
	_cdafd := &EG_LineFillProperties{}
	return _cdafd
}
func (_afbgg ST_AnimationDgmBuildType) String() string {
	if _afbgg.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _afbgg.ST_AnimationBuildType.String()
	}
	if _afbgg.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		return _afbgg.ST_AnimationDgmOnlyBuildType.String()
	}
	return ""
}
func (_eaefb *CT_GvmlTextShapeChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaefb.UseSpRect != nil {
		_gddc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0075\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_eaefb.UseSpRect, _gddc)
	}
	if _eaefb.Xfrm != nil {
		_fbeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_eaefb.Xfrm, _fbeb)
	}
	return nil
}
func NewCT_Backdrop() *CT_Backdrop {
	_gfa := &CT_Backdrop{}
	_gfa.Anchor = NewCT_Point3D()
	_gfa.Norm = NewCT_Vector3D()
	_gfa.Up = NewCT_Vector3D()
	return _gfa
}
func (_dafdb *CT_SoftEdgesEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _dafdb.RadAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PositiveSize2D and its children, prefixing error messages with path
func (_fced *CT_PositiveSize2D) ValidateWithPath(path string) error {
	if _fced.CxAttr < 0 {
		return _bb.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fced.CxAttr)
	}
	if _fced.CxAttr > 27273042316900 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fced.CxAttr)
	}
	if _fced.CyAttr < 0 {
		return _bb.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fced.CyAttr)
	}
	if _fced.CyAttr > 27273042316900 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fced.CyAttr)
	}
	return nil
}

const (
	ST_TextFontAlignTypeUnset ST_TextFontAlignType = 0
	ST_TextFontAlignTypeAuto  ST_TextFontAlignType = 1
	ST_TextFontAlignTypeT     ST_TextFontAlignType = 2
	ST_TextFontAlignTypeCtr   ST_TextFontAlignType = 3
	ST_TextFontAlignTypeBase  ST_TextFontAlignType = 4
	ST_TextFontAlignTypeB     ST_TextFontAlignType = 5
)

// Validate validates the CT_GrayscaleTransform and its children
func (_dbgc *CT_GrayscaleTransform) Validate() error {
	return _dbgc.ValidateWithPath("C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_adaec *CT_ShapeStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dddd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
	e.EncodeElement(_adaec.LnRef, _dddd)
	_bfcbe := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
	e.EncodeElement(_adaec.FillRef, _bfcbe)
	_ddccg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
	e.EncodeElement(_adaec.EffectRef, _ddccg)
	_gfgce := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
	e.EncodeElement(_adaec.FontRef, _gfgce)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbdca *CT_LineEndProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbdca.TypeAttr != ST_LineEndTypeUnset {
		_aedg, _acdbd := _cbdca.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _acdbd != nil {
			return _acdbd
		}
		start.Attr = append(start.Attr, _aedg)
	}
	if _cbdca.WAttr != ST_LineEndWidthUnset {
		_afde, _egcc := _cbdca.WAttr.MarshalXMLAttr(_b.Name{Local: "\u0077"})
		if _egcc != nil {
			return _egcc
		}
		start.Attr = append(start.Attr, _afde)
	}
	if _cbdca.LenAttr != ST_LineEndLengthUnset {
		_daccg, _efaf := _cbdca.LenAttr.MarshalXMLAttr(_b.Name{Local: "\u006c\u0065\u006e"})
		if _efaf != nil {
			return _efaf
		}
		start.Attr = append(start.Attr, _daccg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecaca *CT_GvmlConnectorNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecaca.CNvPr = NewCT_NonVisualDrawingProps()
	_ecaca.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
_gfcad:
	for {
		_dcbe, _cefc := d.Token()
		if _cefc != nil {
			return _cefc
		}
		switch _beadd := _dcbe.(type) {
		case _b.StartElement:
			switch _beadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _acca := d.DecodeElement(_ecaca.CNvPr, &_beadd); _acca != nil {
					return _acca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _cggg := d.DecodeElement(_ecaca.CNvCxnSpPr, &_beadd); _cggg != nil {
					return _cggg
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006ee\u0063t\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073u\u0061l\u0020\u0025v", _beadd.Name)
				if _cgdg := d.Skip(); _cgdg != nil {
					return _cgdg
				}
			}
		case _b.EndElement:
			break _gfcad
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_GroupTransform2D() *CT_GroupTransform2D { _aeeg := &CT_GroupTransform2D{}; return _aeeg }

// ValidateWithPath validates the CT_ReflectionEffect and its children, prefixing error messages with path
func (_fgcbe *CT_ReflectionEffect) ValidateWithPath(path string) error {
	if _fgcbe.BlurRadAttr != nil {
		if *_fgcbe.BlurRadAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgcbe.BlurRadAttr)
		}
		if *_fgcbe.BlurRadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgcbe.BlurRadAttr)
		}
	}
	if _fgcbe.StAAttr != nil {
		if _ecfef := _fgcbe.StAAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u0041\u0074\u0074\u0072"); _ecfef != nil {
			return _ecfef
		}
	}
	if _fgcbe.StPosAttr != nil {
		if _ffddd := _fgcbe.StPosAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _ffddd != nil {
			return _ffddd
		}
	}
	if _fgcbe.EndAAttr != nil {
		if _daaaa := _fgcbe.EndAAttr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0041\u0041\u0074\u0074r"); _daaaa != nil {
			return _daaaa
		}
	}
	if _fgcbe.EndPosAttr != nil {
		if _bfbf := _fgcbe.EndPosAttr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _bfbf != nil {
			return _bfbf
		}
	}
	if _fgcbe.DistAttr != nil {
		if *_fgcbe.DistAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fgcbe.DistAttr)
		}
		if *_fgcbe.DistAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_fgcbe.DistAttr)
		}
	}
	if _fgcbe.DirAttr != nil {
		if *_fgcbe.DirAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fgcbe.DirAttr)
		}
		if *_fgcbe.DirAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgcbe.DirAttr)
		}
	}
	if _fgcbe.FadeDirAttr != nil {
		if *_fgcbe.FadeDirAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0046\u0061\u0064\u0065\u0044\u0069\u0072\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgcbe.FadeDirAttr)
		}
		if *_fgcbe.FadeDirAttr >= 21600000 {
			return _bb.Errorf("\u0025s\u002f\u006d.\u0046\u0061\u0064e\u0044\u0069\u0072\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgcbe.FadeDirAttr)
		}
	}
	if _fgcbe.SxAttr != nil {
		if _cffga := _fgcbe.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cffga != nil {
			return _cffga
		}
	}
	if _fgcbe.SyAttr != nil {
		if _egfec := _fgcbe.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _egfec != nil {
			return _egfec
		}
	}
	if _fgcbe.KxAttr != nil {
		if *_fgcbe.KxAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fgcbe.KxAttr)
		}
		if *_fgcbe.KxAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgcbe.KxAttr)
		}
	}
	if _fgcbe.KyAttr != nil {
		if *_fgcbe.KyAttr <= -5400000 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fgcbe.KyAttr)
		}
		if *_fgcbe.KyAttr >= 5400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgcbe.KyAttr)
		}
	}
	if _dbdade := _fgcbe.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _dbdade != nil {
		return _dbdade
	}
	return nil
}
func (_egdea *EG_ThemeableFontStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egdea.Font != nil {
		_bbged := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_egdea.Font, _bbged)
	}
	if _egdea.FontRef != nil {
		_fcgbf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_egdea.FontRef, _fcgbf)
	}
	return nil
}

type CT_TablePartStyle struct {
	TcTxStyle *CT_TableStyleTextStyle
	TcStyle   *CT_TableStyleCellStyle
}

func (_dabeb *ST_FontCollectionIndex) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dddfd, _ggedb := d.Token()
	if _ggedb != nil {
		return _ggedb
	}
	if _eegbag, _edfac := _dddfd.(_b.EndElement); _edfac && _eegbag.Name == start.Name {
		*_dabeb = 1
		return nil
	}
	if _gadca, _dddge := _dddfd.(_b.CharData); !_dddge {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddfd)
	} else {
		switch string(_gadca) {
		case "":
			*_dabeb = 0
		case "\u006d\u0061\u006ao\u0072":
			*_dabeb = 1
		case "\u006d\u0069\u006eo\u0072":
			*_dabeb = 2
		case "\u006e\u006f\u006e\u0065":
			*_dabeb = 3
		}
	}
	_dddfd, _ggedb = d.Token()
	if _ggedb != nil {
		return _ggedb
	}
	if _eddeb, _gccdf := _dddfd.(_b.EndElement); _gccdf && _eddeb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddfd)
}
func NewCT_GvmlShapeNonVisual() *CT_GvmlShapeNonVisual {
	_daca := &CT_GvmlShapeNonVisual{}
	_daca.CNvPr = NewCT_NonVisualDrawingProps()
	_daca.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
	return _daca
}

// ValidateWithPath validates the CT_PresetTextShape and its children, prefixing error messages with path
func (_dcbdc *CT_PresetTextShape) ValidateWithPath(path string) error {
	if _dcbdc.PrstAttr == ST_TextShapeTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fegab := _dcbdc.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _fegab != nil {
		return _fegab
	}
	if _dcbdc.AvLst != nil {
		if _bfcba := _dcbdc.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _bfcba != nil {
			return _bfcba
		}
	}
	return nil
}

type CT_TextCharBullet struct{ CharAttr string }

// ValidateWithPath validates the CT_TextNoBullet and its children, prefixing error messages with path
func (_dcfe *CT_TextNoBullet) ValidateWithPath(path string) error { return nil }

type CT_TablePropertiesChoice struct {
	TableStyle   *CT_TableStyle
	TableStyleId *string
}

// Validate validates the CT_NonVisualGraphicFrameProperties and its children
func (_fcdee *CT_NonVisualGraphicFrameProperties) Validate() error {
	return _fcdee.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_aceddc ST_PositivePercentage) String() string {
	if _aceddc.ST_PositivePercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_aceddc.ST_PositivePercentageDecimal)
	}
	if _aceddc.ST_PositivePercentage != nil {
		return _aceddc.ST_PositivePercentage.String()
	}
	return ""
}
func NewCT_TextSpacingPercent() *CT_TextSpacingPercent {
	_fccddg := &CT_TextSpacingPercent{}
	return _fccddg
}

const (
	ST_AnimationBuildTypeUnset     ST_AnimationBuildType = 0
	ST_AnimationBuildTypeAllAtOnce ST_AnimationBuildType = 1
)

func (_abcaca ST_PitchFamily) ValidateWithPath(path string) error {
	switch _abcaca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcaca))
	}
	return nil
}

// ValidateWithPath validates the CT_BaseStyles and its children, prefixing error messages with path
func (_eecc *CT_BaseStyles) ValidateWithPath(path string) error {
	if _geeg := _eecc.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _geeg != nil {
		return _geeg
	}
	if _bba := _eecc.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _bba != nil {
		return _bba
	}
	if _eaga := _eecc.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _eaga != nil {
		return _eaga
	}
	if _eecc.ExtLst != nil {
		if _gceg := _eecc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gceg != nil {
			return _gceg
		}
	}
	return nil
}
func (_eedc ST_Coordinate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eedc.ST_CoordinateUnqualified != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_eedc.ST_CoordinateUnqualified)))
	}
	if _eedc.ST_UniversalMeasure != nil {
		e.EncodeToken(_b.CharData(*_eedc.ST_UniversalMeasure))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_eebga *ST_AdjCoordinate) ValidateWithPath(path string) error {
	_gaaea := []string{}
	if _eebga.ST_Coordinate != nil {
		if _bbdaf := _eebga.ST_Coordinate.ValidateWithPath(path + "\u002f\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065"); _bbdaf != nil {
			return _bbdaf
		}
		_gaaea = append(_gaaea, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065")
	}
	if _eebga.ST_GeomGuideName != nil {
		_gaaea = append(_gaaea, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_gaaea) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gaaea)
	}
	return nil
}
func (_gfcbbg *CT_TextBulletColorFollowText) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_debaf *CT_PatternFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gecfb := range start.Attr {
		if _gecfb.Name.Local == "\u0070\u0072\u0073\u0074" {
			_debaf.PrstAttr.UnmarshalXMLAttr(_gecfb)
			continue
		}
	}
_eabgd:
	for {
		_ggccb, _dfgdd := d.Token()
		if _dfgdd != nil {
			return _dfgdd
		}
		switch _aebed := _ggccb.(type) {
		case _b.StartElement:
			switch _aebed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}:
				_debaf.FgClr = NewCT_Color()
				if _cdab := d.DecodeElement(_debaf.FgClr, &_aebed); _cdab != nil {
					return _cdab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}:
				_debaf.BgClr = NewCT_Color()
				if _effge := d.DecodeElement(_debaf.BgClr, &_aebed); _effge != nil {
					return _effge
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _aebed.Name)
				if _dfea := d.Skip(); _dfea != nil {
					return _dfea
				}
			}
		case _b.EndElement:
			break _eabgd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the ThemeManager and its children, prefixing error messages with path
func (_bffa *ThemeManager) ValidateWithPath(path string) error {
	if _adcgg := _bffa.CT_EmptyElement.ValidateWithPath(path); _adcgg != nil {
		return _adcgg
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlPictureNonVisual and its children, prefixing error messages with path
func (_bbff *CT_GvmlPictureNonVisual) ValidateWithPath(path string) error {
	if _bgggg := _bbff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bgggg != nil {
		return _bgggg
	}
	if _agdba := _bbff.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _agdba != nil {
		return _agdba
	}
	return nil
}

// Validate validates the CT_TextShapeAutofit and its children
func (_cbgfe *CT_TextShapeAutofit) Validate() error {
	return _cbgfe.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}
func (_faecb ST_LineCap) String() string {
	switch _faecb {
	case 0:
		return ""
	case 1:
		return "\u0072\u006e\u0064"
	case 2:
		return "\u0073\u0071"
	case 3:
		return "\u0066\u006c\u0061\u0074"
	}
	return ""
}
func (_addff *CT_Point3D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _addff.XAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _addff.YAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a"}, Value: _bb.Sprintf("\u0025\u0076", _addff.ZAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GammaTransform and its children, prefixing error messages with path
func (_bbdgf *CT_GammaTransform) ValidateWithPath(path string) error { return nil }
func (_ecgbb *EG_ThemeableEffectStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecgbb.Effect != nil {
		_daaedc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_ecgbb.Effect, _daaedc)
	}
	if _ecgbb.EffectRef != nil {
		_cebec := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_ecgbb.EffectRef, _cebec)
	}
	return nil
}

// ValidateWithPath validates the CT_BlipFillProperties and its children, prefixing error messages with path
func (_egdg *CT_BlipFillProperties) ValidateWithPath(path string) error {
	if _egdg.Blip != nil {
		if _dcbd := _egdg.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _dcbd != nil {
			return _dcbd
		}
	}
	if _egdg.SrcRect != nil {
		if _ceec := _egdg.SrcRect.ValidateWithPath(path + "\u002f\u0053\u0072\u0063\u0052\u0065\u0063\u0074"); _ceec != nil {
			return _ceec
		}
	}
	if _egdg.Tile != nil {
		if _cddgd := _egdg.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _cddgd != nil {
			return _cddgd
		}
	}
	if _egdg.Stretch != nil {
		if _caca := _egdg.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _caca != nil {
			return _caca
		}
	}
	return nil
}
func (_degfed *ST_LightRigDirection) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_degfed = 0
	case "\u0074\u006c":
		*_degfed = 1
	case "\u0074":
		*_degfed = 2
	case "\u0074\u0072":
		*_degfed = 3
	case "\u006c":
		*_degfed = 4
	case "\u0072":
		*_degfed = 5
	case "\u0062\u006c":
		*_degfed = 6
	case "\u0062":
		*_degfed = 7
	case "\u0062\u0072":
		*_degfed = 8
	}
	return nil
}
func (_becda ST_PresetMaterialType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfacbd := _b.Attr{}
	_dfacbd.Name = name
	switch _becda {
	case ST_PresetMaterialTypeUnset:
		_dfacbd.Value = ""
	case ST_PresetMaterialTypeLegacyMatte:
		_dfacbd.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case ST_PresetMaterialTypeLegacyPlastic:
		_dfacbd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeLegacyMetal:
		_dfacbd.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case ST_PresetMaterialTypeLegacyWireframe:
		_dfacbd.Value = "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case ST_PresetMaterialTypeMatte:
		_dfacbd.Value = "\u006d\u0061\u0074t\u0065"
	case ST_PresetMaterialTypePlastic:
		_dfacbd.Value = "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeMetal:
		_dfacbd.Value = "\u006d\u0065\u0074a\u006c"
	case ST_PresetMaterialTypeWarmMatte:
		_dfacbd.Value = "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case ST_PresetMaterialTypeTranslucentPowder:
		_dfacbd.Value = "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypePowder:
		_dfacbd.Value = "\u0070\u006f\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypeDkEdge:
		_dfacbd.Value = "\u0064\u006b\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeSoftEdge:
		_dfacbd.Value = "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeClear:
		_dfacbd.Value = "\u0063\u006c\u0065a\u0072"
	case ST_PresetMaterialTypeFlat:
		_dfacbd.Value = "\u0066\u006c\u0061\u0074"
	case ST_PresetMaterialTypeSoftmetal:
		_dfacbd.Value = "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return _dfacbd, nil
}

type EG_ColorTransform struct {
	Tint     *CT_PositiveFixedPercentage
	Shade    *CT_PositiveFixedPercentage
	Comp     *CT_ComplementTransform
	Inv      *CT_InverseTransform
	Gray     *CT_GrayscaleTransform
	Alpha    *CT_PositiveFixedPercentage
	AlphaOff *CT_FixedPercentage
	AlphaMod *CT_PositivePercentage
	Hue      *CT_PositiveFixedAngle
	HueOff   *CT_Angle
	HueMod   *CT_PositivePercentage
	Sat      *CT_Percentage
	SatOff   *CT_Percentage
	SatMod   *CT_Percentage
	Lum      *CT_Percentage
	LumOff   *CT_Percentage
	LumMod   *CT_Percentage
	Red      *CT_Percentage
	RedOff   *CT_Percentage
	RedMod   *CT_Percentage
	Green    *CT_Percentage
	GreenOff *CT_Percentage
	GreenMod *CT_Percentage
	Blue     *CT_Percentage
	BlueOff  *CT_Percentage
	BlueMod  *CT_Percentage
	Gamma    *CT_GammaTransform
	InvGamma *CT_InverseGammaTransform
}

func NewCT_Path2DCubicBezierTo() *CT_Path2DCubicBezierTo {
	_aaegd := &CT_Path2DCubicBezierTo{}
	return _aaegd
}
func (_gcfgb *CT_GroupTransform2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbgac := range start.Attr {
		if _dbgac.Name.Local == "\u0072\u006f\u0074" {
			_ebfe, _baega := _a.ParseInt(_dbgac.Value, 10, 32)
			if _baega != nil {
				return _baega
			}
			_gebgb := int32(_ebfe)
			_gcfgb.RotAttr = &_gebgb
			continue
		}
		if _dbgac.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_abea, _gdag := _a.ParseBool(_dbgac.Value)
			if _gdag != nil {
				return _gdag
			}
			_gcfgb.FlipHAttr = &_abea
			continue
		}
		if _dbgac.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_acdbg, _fgggc := _a.ParseBool(_dbgac.Value)
			if _fgggc != nil {
				return _fgggc
			}
			_gcfgb.FlipVAttr = &_acdbg
			continue
		}
	}
_afcg:
	for {
		_ggbfec, _fefa := d.Token()
		if _fefa != nil {
			return _fefa
		}
		switch _fda := _ggbfec.(type) {
		case _b.StartElement:
			switch _fda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_gcfgb.Off = NewCT_Point2D()
				if _bbeeg := d.DecodeElement(_gcfgb.Off, &_fda); _bbeeg != nil {
					return _bbeeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_gcfgb.Ext = NewCT_PositiveSize2D()
				if _gdde := d.DecodeElement(_gcfgb.Ext, &_fda); _gdde != nil {
					return _gdde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}:
				_gcfgb.ChOff = NewCT_Point2D()
				if _bcde := d.DecodeElement(_gcfgb.ChOff, &_fda); _bcde != nil {
					return _bcde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}:
				_gcfgb.ChExt = NewCT_PositiveSize2D()
				if _fcbge := d.DecodeElement(_gcfgb.ChExt, &_fda); _fcbge != nil {
					return _fcbge
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u0032\u0044\u0020\u0025\u0076", _fda.Name)
				if _eeagg := d.Skip(); _eeagg != nil {
					return _eeagg
				}
			}
		case _b.EndElement:
			break _afcg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualGroupDrawingShapeProps and its children, prefixing error messages with path
func (_bbad *CT_NonVisualGroupDrawingShapeProps) ValidateWithPath(path string) error {
	if _bbad.GrpSpLocks != nil {
		if _ecfe := _bbad.GrpSpLocks.ValidateWithPath(path + "/\u0047\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _ecfe != nil {
			return _ecfe
		}
	}
	if _bbad.ExtLst != nil {
		if _bfebg := _bbad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfebg != nil {
			return _bfebg
		}
	}
	return nil
}
func NewCT_Blip() *CT_Blip { _afce := &CT_Blip{}; return _afce }
func NewCT_SolidColorFillProperties() *CT_SolidColorFillProperties {
	_efdee := &CT_SolidColorFillProperties{}
	return _efdee
}

// Validate validates the CT_Path2DMoveTo and its children
func (_afcab *CT_Path2DMoveTo) Validate() error {
	return _afcab.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f")
}
func (_cbfgd ST_TextVertOverflowType) ValidateWithPath(path string) error {
	switch _cbfgd {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbfgd))
	}
	return nil
}
func (_bddcb *CT_TextUnderlineFillGroupWrapper) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bddcb.NoFill != nil {
		_bgbee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bddcb.NoFill, _bgbee)
	}
	if _bddcb.SolidFill != nil {
		_bfdgc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bddcb.SolidFill, _bfdgc)
	}
	if _bddcb.GradFill != nil {
		_edbbg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bddcb.GradFill, _edbbg)
	}
	if _bddcb.BlipFill != nil {
		_ggfdgg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bddcb.BlipFill, _ggfdgg)
	}
	if _bddcb.PattFill != nil {
		_cfffd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bddcb.PattFill, _cfffd)
	}
	if _bddcb.GrpFill != nil {
		_cgfggd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bddcb.GrpFill, _cgfggd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ceegd *ST_PresetPatternVal) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ceegd = 0
	case "\u0070\u0063\u0074\u0035":
		*_ceegd = 1
	case "\u0070\u0063\u00741\u0030":
		*_ceegd = 2
	case "\u0070\u0063\u00742\u0030":
		*_ceegd = 3
	case "\u0070\u0063\u00742\u0035":
		*_ceegd = 4
	case "\u0070\u0063\u00743\u0030":
		*_ceegd = 5
	case "\u0070\u0063\u00744\u0030":
		*_ceegd = 6
	case "\u0070\u0063\u00745\u0030":
		*_ceegd = 7
	case "\u0070\u0063\u00746\u0030":
		*_ceegd = 8
	case "\u0070\u0063\u00747\u0030":
		*_ceegd = 9
	case "\u0070\u0063\u00747\u0035":
		*_ceegd = 10
	case "\u0070\u0063\u00748\u0030":
		*_ceegd = 11
	case "\u0070\u0063\u00749\u0030":
		*_ceegd = 12
	case "\u0068\u006f\u0072\u007a":
		*_ceegd = 13
	case "\u0076\u0065\u0072\u0074":
		*_ceegd = 14
	case "\u006c\u0074\u0048\u006f\u0072\u007a":
		*_ceegd = 15
	case "\u006c\u0074\u0056\u0065\u0072\u0074":
		*_ceegd = 16
	case "\u0064\u006b\u0048\u006f\u0072\u007a":
		*_ceegd = 17
	case "\u0064\u006b\u0056\u0065\u0072\u0074":
		*_ceegd = 18
	case "\u006ea\u0072\u0048\u006f\u0072\u007a":
		*_ceegd = 19
	case "\u006ea\u0072\u0056\u0065\u0072\u0074":
		*_ceegd = 20
	case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
		*_ceegd = 21
	case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
		*_ceegd = 22
	case "\u0063\u0072\u006fs\u0073":
		*_ceegd = 23
	case "\u0064\u006e\u0044\u0069\u0061\u0067":
		*_ceegd = 24
	case "\u0075\u0070\u0044\u0069\u0061\u0067":
		*_ceegd = 25
	case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
		*_ceegd = 26
	case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
		*_ceegd = 27
	case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
		*_ceegd = 28
	case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
		*_ceegd = 29
	case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
		*_ceegd = 30
	case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
		*_ceegd = 31
	case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
		*_ceegd = 32
	case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
		*_ceegd = 33
	case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
		*_ceegd = 34
	case "\u0073m\u0043\u0068\u0065\u0063\u006b":
		*_ceegd = 35
	case "\u006cg\u0043\u0068\u0065\u0063\u006b":
		*_ceegd = 36
	case "\u0073\u006d\u0047\u0072\u0069\u0064":
		*_ceegd = 37
	case "\u006c\u0067\u0047\u0072\u0069\u0064":
		*_ceegd = 38
	case "\u0064o\u0074\u0047\u0072\u0069\u0064":
		*_ceegd = 39
	case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_ceegd = 40
	case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_ceegd = 41
	case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
		*_ceegd = 42
	case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
		*_ceegd = 43
	case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
		*_ceegd = 44
	case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
		*_ceegd = 45
	case "\u0064o\u0074\u0044\u006d\u006e\u0064":
		*_ceegd = 46
	case "\u0070\u006c\u0061i\u0064":
		*_ceegd = 47
	case "\u0073\u0070\u0068\u0065\u0072\u0065":
		*_ceegd = 48
	case "\u0077\u0065\u0061v\u0065":
		*_ceegd = 49
	case "\u0064\u0069\u0076o\u0074":
		*_ceegd = 50
	case "\u0073h\u0069\u006e\u0067\u006c\u0065":
		*_ceegd = 51
	case "\u0077\u0061\u0076\u0065":
		*_ceegd = 52
	case "\u0074r\u0065\u006c\u006c\u0069\u0073":
		*_ceegd = 53
	case "\u007a\u0069\u0067\u005a\u0061\u0067":
		*_ceegd = 54
	}
	return nil
}
func (_cgbfc *CT_GvmlShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fcda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_cgbfc.NvSpPr, _fcda)
	_gdfga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cgbfc.SpPr, _gdfga)
	if _cgbfc.TxSp != nil {
		_fdabb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		e.EncodeElement(_cgbfc.TxSp, _fdabb)
	}
	if _cgbfc.Style != nil {
		_abbb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cgbfc.Style, _abbb)
	}
	if _cgbfc.ExtLst != nil {
		_aeeag := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgbfc.ExtLst, _aeeag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gca *CT_AnimationDgmBuildProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gca.BldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_gca.BldAttr)})
	}
	if _gca.RevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_gca.RevAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_AlphaInverseEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}
type CT_TableBackgroundStyle struct {
	Fill      *CT_FillProperties
	FillRef   *CT_StyleMatrixReference
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}
type ST_TextVerticalType byte

func (_gefaf ST_TileFlipMode) ValidateWithPath(path string) error {
	switch _gefaf {
	case 0, 1, 2, 3, 4:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gefaf))
	}
	return nil
}

// Validate validates the CT_ColorMapping and its children
func (_ebbe *CT_ColorMapping) Validate() error {
	return _ebbe.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}
func (_bgag *CT_AlphaBiLevelEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aac := range start.Attr {
		if _aac.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_gba, _ga := ParseUnionST_PositiveFixedPercentage(_aac.Value)
			if _ga != nil {
				return _ga
			}
			_bgag.ThreshAttr = _gba
			continue
		}
	}
	for {
		_cba, _fgb := d.Token()
		if _fgb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065v\u0065\u006c\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _fgb)
		}
		if _egde, _dff := _cba.(_b.EndElement); _dff && _egde.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextListStyle and its children, prefixing error messages with path
func (_degfb *CT_TextListStyle) ValidateWithPath(path string) error {
	if _degfb.DefPPr != nil {
		if _ggdce := _degfb.DefPPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0050\u0050\u0072"); _ggdce != nil {
			return _ggdce
		}
	}
	if _degfb.Lvl1pPr != nil {
		if _babbf := _degfb.Lvl1pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0031\u0070\u0050\u0072"); _babbf != nil {
			return _babbf
		}
	}
	if _degfb.Lvl2pPr != nil {
		if _adfd := _degfb.Lvl2pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0032\u0070\u0050\u0072"); _adfd != nil {
			return _adfd
		}
	}
	if _degfb.Lvl3pPr != nil {
		if _eeeef := _degfb.Lvl3pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0033\u0070\u0050\u0072"); _eeeef != nil {
			return _eeeef
		}
	}
	if _degfb.Lvl4pPr != nil {
		if _ggdced := _degfb.Lvl4pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0034\u0070\u0050\u0072"); _ggdced != nil {
			return _ggdced
		}
	}
	if _degfb.Lvl5pPr != nil {
		if _bbece := _degfb.Lvl5pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0035\u0070\u0050\u0072"); _bbece != nil {
			return _bbece
		}
	}
	if _degfb.Lvl6pPr != nil {
		if _cfdgf := _degfb.Lvl6pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0036\u0070\u0050\u0072"); _cfdgf != nil {
			return _cfdgf
		}
	}
	if _degfb.Lvl7pPr != nil {
		if _fgad := _degfb.Lvl7pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0037\u0070\u0050\u0072"); _fgad != nil {
			return _fgad
		}
	}
	if _degfb.Lvl8pPr != nil {
		if _caacde := _degfb.Lvl8pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0038\u0070\u0050\u0072"); _caacde != nil {
			return _caacde
		}
	}
	if _degfb.Lvl9pPr != nil {
		if _geddd := _degfb.Lvl9pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0039\u0070\u0050\u0072"); _geddd != nil {
			return _geddd
		}
	}
	if _degfb.ExtLst != nil {
		if _faccf := _degfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faccf != nil {
			return _faccf
		}
	}
	return nil
}

// ValidateWithPath validates the EG_EffectProperties and its children, prefixing error messages with path
func (_efbbg *EG_EffectProperties) ValidateWithPath(path string) error {
	if _efbbg.EffectLst != nil {
		if _bfedgb := _efbbg.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _bfedgb != nil {
			return _bfedgb
		}
	}
	if _efbbg.EffectDag != nil {
		if _bdefa := _efbbg.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bdefa != nil {
			return _bdefa
		}
	}
	return nil
}
func (_cbcgb *CT_WholeE2oFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ccded:
	for {
		_ageef, _afgfc := d.Token()
		if _afgfc != nil {
			return _afgfc
		}
		switch _gbdbe := _ageef.(type) {
		case _b.StartElement:
			switch _gbdbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_cbcgb.Ln = NewCT_LineProperties()
				if _fegdgg := d.DecodeElement(_cbcgb.Ln, &_gbdbe); _fegdgg != nil {
					return _fegdgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_cbcgb.EffectLst = NewCT_EffectList()
				if _egccd := d.DecodeElement(_cbcgb.EffectLst, &_gbdbe); _egccd != nil {
					return _egccd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_cbcgb.EffectDag = NewCT_EffectContainer()
				if _gaadf := d.DecodeElement(_cbcgb.EffectDag, &_gbdbe); _gaadf != nil {
					return _gaadf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0057\u0068\u006f\u006c\u0065\u0045\u0032\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _gbdbe.Name)
				if _febag := d.Skip(); _febag != nil {
					return _febag
				}
			}
		case _b.EndElement:
			break _ccded
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextFont and its children, prefixing error messages with path
func (_dbgga *CT_TextFont) ValidateWithPath(path string) error {
	if _dbgdg := _dbgga.PitchFamilyAttr.ValidateWithPath(path + "\u002f\u0050i\u0074\u0063\u0068F\u0061\u006d\u0069\u006c\u0079\u0041\u0074\u0074\u0072"); _dbgdg != nil {
		return _dbgdg
	}
	return nil
}
func (_gccage *ST_ShapeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbfcf, _fcged := d.Token()
	if _fcged != nil {
		return _fcged
	}
	if _fcbbb, _bfbeb := _bbfcf.(_b.EndElement); _bfbeb && _fcbbb.Name == start.Name {
		*_gccage = 1
		return nil
	}
	if _dddae, _bdgba := _bbfcf.(_b.CharData); !_bdgba {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbfcf)
	} else {
		switch string(_dddae) {
		case "":
			*_gccage = 0
		case "\u006c\u0069\u006e\u0065":
			*_gccage = 1
		case "\u006ci\u006e\u0065\u0049\u006e\u0076":
			*_gccage = 2
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_gccage = 3
		case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_gccage = 4
		case "\u0072\u0065\u0063\u0074":
			*_gccage = 5
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_gccage = 6
		case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
			*_gccage = 7
		case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
			*_gccage = 8
		case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
			*_gccage = 9
		case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
			*_gccage = 10
		case "\u0068e\u0078\u0061\u0067\u006f\u006e":
			*_gccage = 11
		case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
			*_gccage = 12
		case "\u006fc\u0074\u0061\u0067\u006f\u006e":
			*_gccage = 13
		case "\u0064e\u0063\u0061\u0067\u006f\u006e":
			*_gccage = 14
		case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
			*_gccage = 15
		case "\u0073\u0074\u0061r\u0034":
			*_gccage = 16
		case "\u0073\u0074\u0061r\u0035":
			*_gccage = 17
		case "\u0073\u0074\u0061r\u0036":
			*_gccage = 18
		case "\u0073\u0074\u0061r\u0037":
			*_gccage = 19
		case "\u0073\u0074\u0061r\u0038":
			*_gccage = 20
		case "\u0073\u0074\u0061\u0072\u0031\u0030":
			*_gccage = 21
		case "\u0073\u0074\u0061\u0072\u0031\u0032":
			*_gccage = 22
		case "\u0073\u0074\u0061\u0072\u0031\u0036":
			*_gccage = 23
		case "\u0073\u0074\u0061\u0072\u0032\u0034":
			*_gccage = 24
		case "\u0073\u0074\u0061\u0072\u0033\u0032":
			*_gccage = 25
		case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
			*_gccage = 26
		case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
			*_gccage = 27
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
			*_gccage = 28
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
			*_gccage = 29
		case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
			*_gccage = 30
		case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
			*_gccage = 31
		case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
			*_gccage = 32
		case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
			*_gccage = 33
		case "\u0070\u006c\u0061\u0071\u0075\u0065":
			*_gccage = 34
		case "\u0065l\u006c\u0069\u0070\u0073\u0065":
			*_gccage = 35
		case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
			*_gccage = 36
		case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
			*_gccage = 37
		case "\u0063h\u0065\u0076\u0072\u006f\u006e":
			*_gccage = 38
		case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
			*_gccage = 39
		case "\u0070\u0069\u0065":
			*_gccage = 40
		case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
			*_gccage = 41
		case "\u0064\u006f\u006eu\u0074":
			*_gccage = 42
		case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
			*_gccage = 43
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 44
		case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
			*_gccage = 45
		case "\u0075p\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 46
		case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
			*_gccage = 47
		case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_gccage = 48
		case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_gccage = 49
		case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 50
		case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_gccage = 51
		case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 52
		case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 53
		case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 54
		case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
			*_gccage = 55
		case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 56
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_gccage = 57
		case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_gccage = 58
		case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 59
		case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 60
		case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 61
		case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 62
		case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
			*_gccage = 63
		case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 64
		case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 65
		case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
			*_gccage = 66
		case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
			*_gccage = 67
		case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 68
		case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 69
		case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 70
		case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 71
		case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
			*_gccage = 72
		case "\u0063\u0075\u0062\u0065":
			*_gccage = 73
		case "\u0063\u0061\u006e":
			*_gccage = 74
		case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
			*_gccage = 75
		case "\u0068\u0065\u0061r\u0074":
			*_gccage = 76
		case "\u0073\u0075\u006e":
			*_gccage = 77
		case "\u006d\u006f\u006f\u006e":
			*_gccage = 78
		case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
			*_gccage = 79
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
			*_gccage = 80
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
			*_gccage = 81
		case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
			*_gccage = 82
		case "\u0062\u0065\u0076e\u006c":
			*_gccage = 83
		case "\u0066\u0072\u0061m\u0065":
			*_gccage = 84
		case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
			*_gccage = 85
		case "\u0063\u006f\u0072\u006e\u0065\u0072":
			*_gccage = 86
		case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
			*_gccage = 87
		case "\u0063\u0068\u006fr\u0064":
			*_gccage = 88
		case "\u0061\u0072\u0063":
			*_gccage = 89
		case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_gccage = 90
		case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_gccage = 91
		case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
			*_gccage = 92
		case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
			*_gccage = 93
		case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
			*_gccage = 94
		case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
			*_gccage = 95
		case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
			*_gccage = 96
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
			*_gccage = 97
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
			*_gccage = 98
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
			*_gccage = 99
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
			*_gccage = 100
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
			*_gccage = 101
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
			*_gccage = 102
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
			*_gccage = 103
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
			*_gccage = 104
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
			*_gccage = 105
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
			*_gccage = 106
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
			*_gccage = 107
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_gccage = 108
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_gccage = 109
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_gccage = 110
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_gccage = 111
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_gccage = 112
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_gccage = 113
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
			*_gccage = 114
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
			*_gccage = 115
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
			*_gccage = 116
		case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 117
		case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 118
		case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 119
		case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gccage = 120
		case "\u0063\u006c\u006fu\u0064":
			*_gccage = 121
		case "\u0072\u0069\u0062\u0062\u006f\u006e":
			*_gccage = 122
		case "\u0072i\u0062\u0062\u006f\u006e\u0032":
			*_gccage = 123
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
			*_gccage = 124
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
			*_gccage = 125
		case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
			*_gccage = 126
		case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
			*_gccage = 127
		case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
			*_gccage = 128
		case "\u0077\u0061\u0076\u0065":
			*_gccage = 129
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
			*_gccage = 130
		case "\u0070\u006c\u0075\u0073":
			*_gccage = 131
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
			*_gccage = 132
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
			*_gccage = 133
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
			*_gccage = 134
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
			*_gccage = 135
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_gccage = 136
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
			*_gccage = 137
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
			*_gccage = 138
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
			*_gccage = 139
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
			*_gccage = 140
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
			*_gccage = 141
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
			*_gccage = 142
		case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
			*_gccage = 143
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
			*_gccage = 144
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
			*_gccage = 145
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
			*_gccage = 146
		case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
			*_gccage = 147
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
			*_gccage = 148
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
			*_gccage = 149
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
			*_gccage = 150
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
			*_gccage = 151
		case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_gccage = 152
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
			*_gccage = 153
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
			*_gccage = 154
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
			*_gccage = 155
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
			*_gccage = 156
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
			*_gccage = 157
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
			*_gccage = 158
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
			*_gccage = 159
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
			*_gccage = 160
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
			*_gccage = 161
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
			*_gccage = 162
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
			*_gccage = 163
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_gccage = 164
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
			*_gccage = 165
		case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
			*_gccage = 166
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
			*_gccage = 167
		case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
			*_gccage = 168
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
			*_gccage = 169
		case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
			*_gccage = 170
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
			*_gccage = 171
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
			*_gccage = 172
		case "\u0067\u0065\u0061r\u0036":
			*_gccage = 173
		case "\u0067\u0065\u0061r\u0039":
			*_gccage = 174
		case "\u0066\u0075\u006e\u006e\u0065\u006c":
			*_gccage = 175
		case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
			*_gccage = 176
		case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
			*_gccage = 177
		case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
			*_gccage = 178
		case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
			*_gccage = 179
		case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
			*_gccage = 180
		case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gccage = 181
		case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
			*_gccage = 182
		case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
			*_gccage = 183
		case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
			*_gccage = 184
		case "\u0063\u0068\u0061\u0072\u0074\u0058":
			*_gccage = 185
		case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
			*_gccage = 186
		case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
			*_gccage = 187
		}
	}
	_bbfcf, _fcged = d.Token()
	if _fcged != nil {
		return _fcged
	}
	if _gaebff, _cefddg := _bbfcf.(_b.EndElement); _cefddg && _gaebff.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbfcf)
}
func (_ggage ST_TextAnchoringType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ggage.String(), start)
}
func NewCT_PositiveFixedAngle() *CT_PositiveFixedAngle {
	_aefgd := &CT_PositiveFixedAngle{}
	_aefgd.ValAttr = 0
	return _aefgd
}
func (_fgefg *ST_BlipCompression) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fceac, _dcbfa := d.Token()
	if _dcbfa != nil {
		return _dcbfa
	}
	if _eeddfd, _ggcaf := _fceac.(_b.EndElement); _ggcaf && _eeddfd.Name == start.Name {
		*_fgefg = 1
		return nil
	}
	if _gbafe, _dbbfb := _fceac.(_b.CharData); !_dbbfb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fceac)
	} else {
		switch string(_gbafe) {
		case "":
			*_fgefg = 0
		case "\u0065\u006d\u0061i\u006c":
			*_fgefg = 1
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_fgefg = 2
		case "\u0070\u0072\u0069n\u0074":
			*_fgefg = 3
		case "\u0068q\u0070\u0072\u0069\u006e\u0074":
			*_fgefg = 4
		case "\u006e\u006f\u006e\u0065":
			*_fgefg = 5
		}
	}
	_fceac, _dcbfa = d.Token()
	if _dcbfa != nil {
		return _dcbfa
	}
	if _adef, _eeaaac := _fceac.(_b.EndElement); _eeaaac && _adef.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fceac)
}
func (_caf *Blip) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_caf.CT_Blip = *NewCT_Blip()
	for _, _cfd := range start.Attr {
		if _cfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfd.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_afb, _de := _cfd.Value, error(nil)
			if _de != nil {
				return _de
			}
			_caf.EmbedAttr = &_afb
			continue
		}
		if _cfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfd.Name.Local == "\u006c\u0069\u006e\u006b" {
			_adg, _dg := _cfd.Value, error(nil)
			if _dg != nil {
				return _dg
			}
			_caf.LinkAttr = &_adg
			continue
		}
		if _cfd.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_caf.CstateAttr.UnmarshalXMLAttr(_cfd)
			continue
		}
	}
_bbf:
	for {
		_fcd, _aed := d.Token()
		if _aed != nil {
			return _aed
		}
		switch _afgge := _fcd.(type) {
		case _b.StartElement:
			switch _afgge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_deb := NewCT_BlipChoice()
				if _dgc := d.DecodeElement(&_deb.AlphaBiLevel, &_afgge); _dgc != nil {
					return _dgc
				}
				_caf.Choice = append(_caf.Choice, _deb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_agd := NewCT_BlipChoice()
				if _ab := d.DecodeElement(&_agd.AlphaCeiling, &_afgge); _ab != nil {
					return _ab
				}
				_caf.Choice = append(_caf.Choice, _agd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_abd := NewCT_BlipChoice()
				if _cfda := d.DecodeElement(&_abd.AlphaFloor, &_afgge); _cfda != nil {
					return _cfda
				}
				_caf.Choice = append(_caf.Choice, _abd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_aeg := NewCT_BlipChoice()
				if _bgg := d.DecodeElement(&_aeg.AlphaInv, &_afgge); _bgg != nil {
					return _bgg
				}
				_caf.Choice = append(_caf.Choice, _aeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_eca := NewCT_BlipChoice()
				if _ge := d.DecodeElement(&_eca.AlphaMod, &_afgge); _ge != nil {
					return _ge
				}
				_caf.Choice = append(_caf.Choice, _eca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_bbd := NewCT_BlipChoice()
				if _gfd := d.DecodeElement(&_bbd.AlphaModFix, &_afgge); _gfd != nil {
					return _gfd
				}
				_caf.Choice = append(_caf.Choice, _bbd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_aa := NewCT_BlipChoice()
				if _ebf := d.DecodeElement(&_aa.AlphaRepl, &_afgge); _ebf != nil {
					return _ebf
				}
				_caf.Choice = append(_caf.Choice, _aa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_fg := NewCT_BlipChoice()
				if _cfg := d.DecodeElement(&_fg.BiLevel, &_afgge); _cfg != nil {
					return _cfg
				}
				_caf.Choice = append(_caf.Choice, _fg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_dee := NewCT_BlipChoice()
				if _cbf := d.DecodeElement(&_dee.Blur, &_afgge); _cbf != nil {
					return _cbf
				}
				_caf.Choice = append(_caf.Choice, _dee)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_ecd := NewCT_BlipChoice()
				if _cbg := d.DecodeElement(&_ecd.ClrChange, &_afgge); _cbg != nil {
					return _cbg
				}
				_caf.Choice = append(_caf.Choice, _ecd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_cff := NewCT_BlipChoice()
				if _ccd := d.DecodeElement(&_cff.ClrRepl, &_afgge); _ccd != nil {
					return _ccd
				}
				_caf.Choice = append(_caf.Choice, _cff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_aeb := NewCT_BlipChoice()
				if _bbfe := d.DecodeElement(&_aeb.Duotone, &_afgge); _bbfe != nil {
					return _bbfe
				}
				_caf.Choice = append(_caf.Choice, _aeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_dc := NewCT_BlipChoice()
				if _bbg := d.DecodeElement(&_dc.FillOverlay, &_afgge); _bbg != nil {
					return _bbg
				}
				_caf.Choice = append(_caf.Choice, _dc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_ffaa := NewCT_BlipChoice()
				if _debe := d.DecodeElement(&_ffaa.Grayscl, &_afgge); _debe != nil {
					return _debe
				}
				_caf.Choice = append(_caf.Choice, _ffaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_db := NewCT_BlipChoice()
				if _dade := d.DecodeElement(&_db.Hsl, &_afgge); _dade != nil {
					return _dade
				}
				_caf.Choice = append(_caf.Choice, _db)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_gfb := NewCT_BlipChoice()
				if _fac := d.DecodeElement(&_gfb.Lum, &_afgge); _fac != nil {
					return _fac
				}
				_caf.Choice = append(_caf.Choice, _gfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_def := NewCT_BlipChoice()
				if _bgb := d.DecodeElement(&_def.Tint, &_afgge); _bgb != nil {
					return _bgb
				}
				_caf.Choice = append(_caf.Choice, _def)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caf.ExtLst = NewCT_OfficeArtExtensionList()
				if _ef := d.DecodeElement(_caf.ExtLst, &_afgge); _ef != nil {
					return _ef
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0042\u006ci\u0070\u0020\u0025\u0076", _afgge.Name)
				if _cg := d.Skip(); _cg != nil {
					return _cg
				}
			}
		case _b.EndElement:
			break _bbf
		case _b.CharData:
		}
	}
	return nil
}
func ParseUnionST_Coordinate32(s string) (ST_Coordinate32, error) {
	_fcfbe := ST_Coordinate32{}
	if _eb.ST_UniversalMeasurePatternRe.MatchString(s) {
		_fcfbe.ST_UniversalMeasure = &s
	} else {
		_dfdde, _egbga := _a.ParseInt(s, 10, 32)
		if _egbga != nil {
			return _fcfbe, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _egbga)
		}
		_bbdcea := int32(_dfdde)
		_fcfbe.ST_Coordinate32Unqualified = &_bbdcea
	}
	return _fcfbe, nil
}
func (_aecge *CT_TextCharacterProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aecge.KumimojiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.KumimojiAttr))})
	}
	if _aecge.LangAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.LangAttr)})
	}
	if _aecge.AltLangAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u004c\u0061\u006e\u0067"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.AltLangAttr)})
	}
	if _aecge.SzAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.SzAttr)})
	}
	if _aecge.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.BAttr))})
	}
	if _aecge.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.IAttr))})
	}
	if _aecge.UAttr != ST_TextUnderlineTypeUnset {
		_acdge, _aecga := _aecge.UAttr.MarshalXMLAttr(_b.Name{Local: "\u0075"})
		if _aecga != nil {
			return _aecga
		}
		start.Attr = append(start.Attr, _acdge)
	}
	if _aecge.StrikeAttr != ST_TextStrikeTypeUnset {
		_ccfdc, _bcded := _aecge.StrikeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0072\u0069\u006b\u0065"})
		if _bcded != nil {
			return _bcded
		}
		start.Attr = append(start.Attr, _ccfdc)
	}
	if _aecge.KernAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0072\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.KernAttr)})
	}
	if _aecge.CapAttr != ST_TextCapsTypeUnset {
		_adfgb, _efda := _aecge.CapAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u0070"})
		if _efda != nil {
			return _efda
		}
		start.Attr = append(start.Attr, _adfgb)
	}
	if _aecge.SpcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0063"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.SpcAttr)})
	}
	if _aecge.NormalizeHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.NormalizeHAttr))})
	}
	if _aecge.BaselineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.BaselineAttr)})
	}
	if _aecge.NoProofAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0050\u0072\u006f\u006f\u0066"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.NoProofAttr))})
	}
	if _aecge.DirtyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072t\u0079"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.DirtyAttr))})
	}
	if _aecge.ErrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.ErrAttr))})
	}
	if _aecge.SmtCleanAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aecge.SmtCleanAttr))})
	}
	if _aecge.SmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006d\u0074I\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.SmtIdAttr)})
	}
	if _aecge.BmkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006d\u006b"}, Value: _bb.Sprintf("\u0025\u0076", *_aecge.BmkAttr)})
	}
	e.EncodeToken(start)
	if _aecge.Ln != nil {
		_fgeccc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_aecge.Ln, _fgeccc)
	}
	if _aecge.NoFill != nil {
		_ffdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aecge.NoFill, _ffdf)
	}
	if _aecge.SolidFill != nil {
		_ebed := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aecge.SolidFill, _ebed)
	}
	if _aecge.GradFill != nil {
		_ggfab := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aecge.GradFill, _ggfab)
	}
	if _aecge.BlipFill != nil {
		_dggca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aecge.BlipFill, _dggca)
	}
	if _aecge.PattFill != nil {
		_aedbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aecge.PattFill, _aedbc)
	}
	if _aecge.GrpFill != nil {
		_gafgc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_aecge.GrpFill, _gafgc)
	}
	if _aecge.EffectLst != nil {
		_fagca := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aecge.EffectLst, _fagca)
	}
	if _aecge.EffectDag != nil {
		_cdefg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_aecge.EffectDag, _cdefg)
	}
	if _aecge.Highlight != nil {
		_bfbff := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_aecge.Highlight, _bfbff)
	}
	if _aecge.ULnTx != nil {
		_gccgc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_aecge.ULnTx, _gccgc)
	}
	if _aecge.ULn != nil {
		_dgdgc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_aecge.ULn, _dgdgc)
	}
	if _aecge.UFillTx != nil {
		_ffdfa := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_aecge.UFillTx, _ffdfa)
	}
	if _aecge.UFill != nil {
		_bgfdf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aecge.UFill, _bgfdf)
	}
	if _aecge.Latin != nil {
		_caffca := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
		e.EncodeElement(_aecge.Latin, _caffca)
	}
	if _aecge.Ea != nil {
		_gbgde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0061"}}
		e.EncodeElement(_aecge.Ea, _gbgde)
	}
	if _aecge.Cs != nil {
		_fceg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0073"}}
		e.EncodeElement(_aecge.Cs, _fceg)
	}
	if _aecge.Sym != nil {
		_gbfee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073y\u006d"}}
		e.EncodeElement(_aecge.Sym, _gbfee)
	}
	if _aecge.HlinkClick != nil {
		_cegaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_aecge.HlinkClick, _cegaa)
	}
	if _aecge.HlinkMouseOver != nil {
		_babgc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003ah\u006c\u0069\u006ek\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"}}
		e.EncodeElement(_aecge.HlinkMouseOver, _babgc)
	}
	if _aecge.Rtl != nil {
		_dacb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072t\u006c"}}
		e.EncodeElement(_aecge.Rtl, _dacb)
	}
	if _aecge.ExtLst != nil {
		_adca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aecge.ExtLst, _adca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EffectStyleItem and its children, prefixing error messages with path
func (_gbac *CT_EffectStyleItem) ValidateWithPath(path string) error {
	if _gbac.EffectLst != nil {
		if _cfcc := _gbac.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _cfcc != nil {
			return _cfcc
		}
	}
	if _gbac.EffectDag != nil {
		if _efefb := _gbac.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _efefb != nil {
			return _efefb
		}
	}
	if _gbac.Scene3d != nil {
		if _fdec := _gbac.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _fdec != nil {
			return _fdec
		}
	}
	if _gbac.Sp3d != nil {
		if _ecgf := _gbac.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _ecgf != nil {
			return _ecgf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableCellProperties and its children, prefixing error messages with path
func (_ecfdd *CT_TableCellProperties) ValidateWithPath(path string) error {
	if _ecfdd.MarLAttr != nil {
		if _acfdg := _ecfdd.MarLAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u004c\u0041\u0074\u0074r"); _acfdg != nil {
			return _acfdg
		}
	}
	if _ecfdd.MarRAttr != nil {
		if _baacf := _ecfdd.MarRAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0052\u0041\u0074\u0074r"); _baacf != nil {
			return _baacf
		}
	}
	if _ecfdd.MarTAttr != nil {
		if _fdgdf := _ecfdd.MarTAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0054\u0041\u0074\u0074r"); _fdgdf != nil {
			return _fdgdf
		}
	}
	if _ecfdd.MarBAttr != nil {
		if _gafee := _ecfdd.MarBAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0042\u0041\u0074\u0074r"); _gafee != nil {
			return _gafee
		}
	}
	if _ceecbb := _ecfdd.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _ceecbb != nil {
		return _ceecbb
	}
	if _bgaa := _ecfdd.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _bgaa != nil {
		return _bgaa
	}
	if _fgfad := _ecfdd.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _fgfad != nil {
		return _fgfad
	}
	if _ecfdd.LnL != nil {
		if _fgcbb := _ecfdd.LnL.ValidateWithPath(path + "\u002f\u004c\u006e\u004c"); _fgcbb != nil {
			return _fgcbb
		}
	}
	if _ecfdd.LnR != nil {
		if _aegcc := _ecfdd.LnR.ValidateWithPath(path + "\u002f\u004c\u006e\u0052"); _aegcc != nil {
			return _aegcc
		}
	}
	if _ecfdd.LnT != nil {
		if _fafde := _ecfdd.LnT.ValidateWithPath(path + "\u002f\u004c\u006e\u0054"); _fafde != nil {
			return _fafde
		}
	}
	if _ecfdd.LnB != nil {
		if _cdbaf := _ecfdd.LnB.ValidateWithPath(path + "\u002f\u004c\u006e\u0042"); _cdbaf != nil {
			return _cdbaf
		}
	}
	if _ecfdd.LnTlToBr != nil {
		if _bbec := _ecfdd.LnTlToBr.ValidateWithPath(path + "\u002fL\u006e\u0054\u006c\u0054\u006f\u0042r"); _bbec != nil {
			return _bbec
		}
	}
	if _ecfdd.LnBlToTr != nil {
		if _agdaec := _ecfdd.LnBlToTr.ValidateWithPath(path + "\u002fL\u006e\u0042\u006c\u0054\u006f\u0054r"); _agdaec != nil {
			return _agdaec
		}
	}
	if _ecfdd.Cell3D != nil {
		if _aggcb := _ecfdd.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _aggcb != nil {
			return _aggcb
		}
	}
	if _ecfdd.NoFill != nil {
		if _agbff := _ecfdd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _agbff != nil {
			return _agbff
		}
	}
	if _ecfdd.SolidFill != nil {
		if _acfce := _ecfdd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _acfce != nil {
			return _acfce
		}
	}
	if _ecfdd.GradFill != nil {
		if _beegf := _ecfdd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _beegf != nil {
			return _beegf
		}
	}
	if _ecfdd.BlipFill != nil {
		if _adadb := _ecfdd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _adadb != nil {
			return _adadb
		}
	}
	if _ecfdd.PattFill != nil {
		if _bggae := _ecfdd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bggae != nil {
			return _bggae
		}
	}
	if _ecfdd.GrpFill != nil {
		if _gbcd := _ecfdd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gbcd != nil {
			return _gbcd
		}
	}
	if _ecfdd.Headers != nil {
		if _facdb := _ecfdd.Headers.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0073"); _facdb != nil {
			return _facdb
		}
	}
	if _ecfdd.ExtLst != nil {
		if _cbcc := _ecfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbcc != nil {
			return _cbcc
		}
	}
	return nil
}
func NewCT_PresetGeometry2D() *CT_PresetGeometry2D {
	_ggga := &CT_PresetGeometry2D{}
	_ggga.PrstAttr = ST_ShapeType(1)
	return _ggga
}

// Validate validates the EG_TextRun and its children
func (_fegadc *EG_TextRun) Validate() error {
	return _fegadc.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e")
}
func (_gbea *CT_PresetLineDashProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbea.ValAttr != ST_PresetLineDashValUnset {
		_gcaaf, _cafeb := _gbea.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
		if _cafeb != nil {
			return _cafeb
		}
		start.Attr = append(start.Attr, _gcaaf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccg *CT_AdjustHandleList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ccg.AhXY != nil {
		_ecbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u0068\u0058\u0059"}}
		for _, _bee := range _ccg.AhXY {
			e.EncodeElement(_bee, _ecbe)
		}
	}
	if _ccg.AhPolar != nil {
		_ceg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0068\u0050\u006f\u006c\u0061r"}}
		for _, _bec := range _ccg.AhPolar {
			e.EncodeElement(_bec, _ceg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcfag *CT_SystemColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcfag.ValAttr = ST_SystemColorVal(1)
	for _, _cbdgcd := range start.Attr {
		if _cbdgcd.Name.Local == "\u0076\u0061\u006c" {
			_bcfag.ValAttr.UnmarshalXMLAttr(_cbdgcd)
			continue
		}
		if _cbdgcd.Name.Local == "\u006ca\u0073\u0074\u0043\u006c\u0072" {
			_fffda, _bdaba := _cbdgcd.Value, error(nil)
			if _bdaba != nil {
				return _bdaba
			}
			_bcfag.LastClrAttr = &_fffda
			continue
		}
	}
_fdada:
	for {
		_cdfcbc, _degee := d.Token()
		if _degee != nil {
			return _degee
		}
		switch _gabcd := _cdfcbc.(type) {
		case _b.StartElement:
			switch _gabcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ebge := NewEG_ColorTransform()
				_ebge.Tint = NewCT_PositiveFixedPercentage()
				if _geced := d.DecodeElement(_ebge.Tint, &_gabcd); _geced != nil {
					return _geced
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _ebge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_decaf := NewEG_ColorTransform()
				_decaf.Shade = NewCT_PositiveFixedPercentage()
				if _bceda := d.DecodeElement(_decaf.Shade, &_gabcd); _bceda != nil {
					return _bceda
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _decaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_bcaec := NewEG_ColorTransform()
				_bcaec.Comp = NewCT_ComplementTransform()
				if _efcag := d.DecodeElement(_bcaec.Comp, &_gabcd); _efcag != nil {
					return _efcag
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _bcaec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_fgdea := NewEG_ColorTransform()
				_fgdea.Inv = NewCT_InverseTransform()
				if _cgdbf := d.DecodeElement(_fgdea.Inv, &_gabcd); _cgdbf != nil {
					return _cgdbf
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _fgdea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_cfefa := NewEG_ColorTransform()
				_cfefa.Gray = NewCT_GrayscaleTransform()
				if _ggbfa := d.DecodeElement(_cfefa.Gray, &_gabcd); _ggbfa != nil {
					return _ggbfa
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _cfefa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_adeafd := NewEG_ColorTransform()
				_adeafd.Alpha = NewCT_PositiveFixedPercentage()
				if _dfba := d.DecodeElement(_adeafd.Alpha, &_gabcd); _dfba != nil {
					return _dfba
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _adeafd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_aefbc := NewEG_ColorTransform()
				_aefbc.AlphaOff = NewCT_FixedPercentage()
				if _gafgg := d.DecodeElement(_aefbc.AlphaOff, &_gabcd); _gafgg != nil {
					return _gafgg
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _aefbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aaaba := NewEG_ColorTransform()
				_aaaba.AlphaMod = NewCT_PositivePercentage()
				if _bgbfd := d.DecodeElement(_aaaba.AlphaMod, &_gabcd); _bgbfd != nil {
					return _bgbfd
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _aaaba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gdfcda := NewEG_ColorTransform()
				_gdfcda.Hue = NewCT_PositiveFixedAngle()
				if _fgcbee := d.DecodeElement(_gdfcda.Hue, &_gabcd); _fgcbee != nil {
					return _fgcbee
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _gdfcda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_fdbec := NewEG_ColorTransform()
				_fdbec.HueOff = NewCT_Angle()
				if _fecg := d.DecodeElement(_fdbec.HueOff, &_gabcd); _fecg != nil {
					return _fecg
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _fdbec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ecabd := NewEG_ColorTransform()
				_ecabd.HueMod = NewCT_PositivePercentage()
				if _efffd := d.DecodeElement(_ecabd.HueMod, &_gabcd); _efffd != nil {
					return _efffd
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _ecabd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_gfdbb := NewEG_ColorTransform()
				_gfdbb.Sat = NewCT_Percentage()
				if _aefge := d.DecodeElement(_gfdbb.Sat, &_gabcd); _aefge != nil {
					return _aefge
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _gfdbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_gabdb := NewEG_ColorTransform()
				_gabdb.SatOff = NewCT_Percentage()
				if _ggdac := d.DecodeElement(_gabdb.SatOff, &_gabcd); _ggdac != nil {
					return _ggdac
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _gabdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bggcg := NewEG_ColorTransform()
				_bggcg.SatMod = NewCT_Percentage()
				if _cbfdc := d.DecodeElement(_bggcg.SatMod, &_gabcd); _cbfdc != nil {
					return _cbfdc
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _bggcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_efedb := NewEG_ColorTransform()
				_efedb.Lum = NewCT_Percentage()
				if _gcee := d.DecodeElement(_efedb.Lum, &_gabcd); _gcee != nil {
					return _gcee
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _efedb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_dfcec := NewEG_ColorTransform()
				_dfcec.LumOff = NewCT_Percentage()
				if _fbebe := d.DecodeElement(_dfcec.LumOff, &_gabcd); _fbebe != nil {
					return _fbebe
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _dfcec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_edcdf := NewEG_ColorTransform()
				_edcdf.LumMod = NewCT_Percentage()
				if _deece := d.DecodeElement(_edcdf.LumMod, &_gabcd); _deece != nil {
					return _deece
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _edcdf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bdbdb := NewEG_ColorTransform()
				_bdbdb.Red = NewCT_Percentage()
				if _cbcb := d.DecodeElement(_bdbdb.Red, &_gabcd); _cbcb != nil {
					return _cbcb
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _bdbdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_dbfa := NewEG_ColorTransform()
				_dbfa.RedOff = NewCT_Percentage()
				if _ddfe := d.DecodeElement(_dbfa.RedOff, &_gabcd); _ddfe != nil {
					return _ddfe
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _dbfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_cfgaad := NewEG_ColorTransform()
				_cfgaad.RedMod = NewCT_Percentage()
				if _gafdf := d.DecodeElement(_cfgaad.RedMod, &_gabcd); _gafdf != nil {
					return _gafdf
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _cfgaad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_eddeeb := NewEG_ColorTransform()
				_eddeeb.Green = NewCT_Percentage()
				if _gcacbbc := d.DecodeElement(_eddeeb.Green, &_gabcd); _gcacbbc != nil {
					return _gcacbbc
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _eddeeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_dbeb := NewEG_ColorTransform()
				_dbeb.GreenOff = NewCT_Percentage()
				if _fcgag := d.DecodeElement(_dbeb.GreenOff, &_gabcd); _fcgag != nil {
					return _fcgag
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _dbeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fdddeag := NewEG_ColorTransform()
				_fdddeag.GreenMod = NewCT_Percentage()
				if _ebdbab := d.DecodeElement(_fdddeag.GreenMod, &_gabcd); _ebdbab != nil {
					return _ebdbab
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _fdddeag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_afcfb := NewEG_ColorTransform()
				_afcfb.Blue = NewCT_Percentage()
				if _fcgggg := d.DecodeElement(_afcfb.Blue, &_gabcd); _fcgggg != nil {
					return _fcgggg
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _afcfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_aacd := NewEG_ColorTransform()
				_aacd.BlueOff = NewCT_Percentage()
				if _agfb := d.DecodeElement(_aacd.BlueOff, &_gabcd); _agfb != nil {
					return _agfb
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _aacd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_cbdec := NewEG_ColorTransform()
				_cbdec.BlueMod = NewCT_Percentage()
				if _ccea := d.DecodeElement(_cbdec.BlueMod, &_gabcd); _ccea != nil {
					return _ccea
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _cbdec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_dbfbf := NewEG_ColorTransform()
				_dbfbf.Gamma = NewCT_GammaTransform()
				if _caggb := d.DecodeElement(_dbfbf.Gamma, &_gabcd); _caggb != nil {
					return _caggb
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _dbfbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_cadcba := NewEG_ColorTransform()
				_cadcba.InvGamma = NewCT_InverseGammaTransform()
				if _eaced := d.DecodeElement(_cadcba.InvGamma, &_gabcd); _eaced != nil {
					return _eaced
				}
				_bcfag.EG_ColorTransform = append(_bcfag.EG_ColorTransform, _cadcba)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _gabcd.Name)
				if _feafe := d.Skip(); _feafe != nil {
					return _feafe
				}
			}
		case _b.EndElement:
			break _fdada
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextBulletSizePoint and its children
func (_ggedec *CT_TextBulletSizePoint) Validate() error {
	return _ggedec.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074")
}
func ParseUnionST_OnOff(s string) (_eb.ST_OnOff, error) { return _eb.ST_OnOff{}, nil }
func (_cbbfb *CT_FillOverlayEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_fafe, _ddcfd := _cbbfb.BlendAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _ddcfd != nil {
		return _ddcfd
	}
	start.Attr = append(start.Attr, _fafe)
	e.EncodeToken(start)
	if _cbbfb.NoFill != nil {
		_gcfgg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbbfb.NoFill, _gcfgg)
	}
	if _cbbfb.SolidFill != nil {
		_acaf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbbfb.SolidFill, _acaf)
	}
	if _cbbfb.GradFill != nil {
		_dgcda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbbfb.GradFill, _dgcda)
	}
	if _cbbfb.BlipFill != nil {
		_cfcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbbfb.BlipFill, _cfcb)
	}
	if _cbbfb.PattFill != nil {
		_ebcbf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbbfb.PattFill, _ebcbf)
	}
	if _cbbfb.GrpFill != nil {
		_bddab := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cbbfb.GrpFill, _bddab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_EffectContainer and its children
func (_aagdg *CT_EffectContainer) Validate() error {
	return _aagdg.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072")
}
func (_feaaaf ST_PathFillMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_accbf := _b.Attr{}
	_accbf.Name = name
	switch _feaaaf {
	case ST_PathFillModeUnset:
		_accbf.Value = ""
	case ST_PathFillModeNone:
		_accbf.Value = "\u006e\u006f\u006e\u0065"
	case ST_PathFillModeNorm:
		_accbf.Value = "\u006e\u006f\u0072\u006d"
	case ST_PathFillModeLighten:
		_accbf.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case ST_PathFillModeLightenLess:
		_accbf.Value = "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case ST_PathFillModeDarken:
		_accbf.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_PathFillModeDarkenLess:
		_accbf.Value = "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return _accbf, nil
}
func (_cdeb *CT_Boolean) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdeb.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_cdeb.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfcbd ST_TextAlignType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gfcbd.String(), start)
}

// ValidateWithPath validates the CT_Camera and its children, prefixing error messages with path
func (_ccged *CT_Camera) ValidateWithPath(path string) error {
	if _ccged.PrstAttr == ST_PresetCameraTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dfdd := _ccged.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _dfdd != nil {
		return _dfdd
	}
	if _ccged.FovAttr != nil {
		if *_ccged.FovAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0046\u006fv\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ccged.FovAttr)
		}
		if *_ccged.FovAttr > 10800000 {
			return _bb.Errorf("\u0025\u0073\u002fm\u002e\u0046\u006f\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0030\u0038\u0030\u0030\u0030\u0030\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ccged.FovAttr)
		}
	}
	if _ccged.ZoomAttr != nil {
		if _eac := _ccged.ZoomAttr.ValidateWithPath(path + "\u002fZ\u006f\u006f\u006d\u0041\u0074\u0074r"); _eac != nil {
			return _eac
		}
	}
	if _ccged.Rot != nil {
		if _cbba := _ccged.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _cbba != nil {
			return _cbba
		}
	}
	return nil
}

// ST_AnimationDgmBuildType is a union type
type ST_AnimationDgmBuildType struct {
	ST_AnimationBuildType        ST_AnimationBuildType
	ST_AnimationDgmOnlyBuildType ST_AnimationDgmOnlyBuildType
}

func NewCT_OfficeArtExtension() *CT_OfficeArtExtension {
	_aggg := &CT_OfficeArtExtension{}
	return _aggg
}
func (_gfgg *CT_GroupLocking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcef := range start.Attr {
		if _gcef.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_cffaf, _bfcbd := _a.ParseBool(_gcef.Value)
			if _bfcbd != nil {
				return _bfcbd
			}
			_gfgg.NoGrpAttr = &_cffaf
			continue
		}
		if _gcef.Name.Local == "\u006eo\u0055\u006e\u0067\u0072\u0070" {
			_ebdfe, _bedba := _a.ParseBool(_gcef.Value)
			if _bedba != nil {
				return _bedba
			}
			_gfgg.NoUngrpAttr = &_ebdfe
			continue
		}
		if _gcef.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_gfgef, _cgcg := _a.ParseBool(_gcef.Value)
			if _cgcg != nil {
				return _cgcg
			}
			_gfgg.NoSelectAttr = &_gfgef
			continue
		}
		if _gcef.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_aedd, _gbfe := _a.ParseBool(_gcef.Value)
			if _gbfe != nil {
				return _gbfe
			}
			_gfgg.NoRotAttr = &_aedd
			continue
		}
		if _gcef.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_cageb, _eeadbb := _a.ParseBool(_gcef.Value)
			if _eeadbb != nil {
				return _eeadbb
			}
			_gfgg.NoChangeAspectAttr = &_cageb
			continue
		}
		if _gcef.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_bcbb, _dbdaa := _a.ParseBool(_gcef.Value)
			if _dbdaa != nil {
				return _dbdaa
			}
			_gfgg.NoMoveAttr = &_bcbb
			continue
		}
		if _gcef.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_dbeca, _fbed := _a.ParseBool(_gcef.Value)
			if _fbed != nil {
				return _fbed
			}
			_gfgg.NoResizeAttr = &_dbeca
			continue
		}
	}
_agdb:
	for {
		_feec, _eabbe := d.Token()
		if _eabbe != nil {
			return _eabbe
		}
		switch _gaee := _feec.(type) {
		case _b.StartElement:
			switch _gaee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfgg.ExtLst = NewCT_OfficeArtExtensionList()
				if _bgbda := d.DecodeElement(_gfgg.ExtLst, &_gaee); _bgbda != nil {
					return _bgbda
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _gaee.Name)
				if _fbbdf := d.Skip(); _fbbdf != nil {
					return _fbbdf
				}
			}
		case _b.EndElement:
			break _agdb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Table() *CT_Table { _gdgd := &CT_Table{}; _gdgd.TblGrid = NewCT_TableGrid(); return _gdgd }

// ValidateWithPath validates the CT_EffectList and its children, prefixing error messages with path
func (_cgeag *CT_EffectList) ValidateWithPath(path string) error {
	if _cgeag.Blur != nil {
		if _cbeb := _cgeag.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _cbeb != nil {
			return _cbeb
		}
	}
	if _cgeag.FillOverlay != nil {
		if _abeb := _cgeag.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _abeb != nil {
			return _abeb
		}
	}
	if _cgeag.Glow != nil {
		if _gdcef := _cgeag.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _gdcef != nil {
			return _gdcef
		}
	}
	if _cgeag.InnerShdw != nil {
		if _agdd := _cgeag.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _agdd != nil {
			return _agdd
		}
	}
	if _cgeag.OuterShdw != nil {
		if _cfbdf := _cgeag.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _cfbdf != nil {
			return _cfbdf
		}
	}
	if _cgeag.PrstShdw != nil {
		if _aaba := _cgeag.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _aaba != nil {
			return _aaba
		}
	}
	if _cgeag.Reflection != nil {
		if _acbee := _cgeag.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _acbee != nil {
			return _acbee
		}
	}
	if _cgeag.SoftEdge != nil {
		if _egbb := _cgeag.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _egbb != nil {
			return _egbb
		}
	}
	return nil
}
func (_cbcf *CT_ColorMRU) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_faac:
	for {
		_acfa, _bedad := d.Token()
		if _bedad != nil {
			return _bedad
		}
		switch _fbgd := _acfa.(type) {
		case _b.StartElement:
			switch _fbgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_geafa := NewEG_ColorChoice()
				_geafa.ScrgbClr = NewCT_ScRgbColor()
				if _gcdf := d.DecodeElement(_geafa.ScrgbClr, &_fbgd); _gcdf != nil {
					return _gcdf
				}
				_cbcf.EG_ColorChoice = append(_cbcf.EG_ColorChoice, _geafa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gadc := NewEG_ColorChoice()
				_gadc.SrgbClr = NewCT_SRgbColor()
				if _bbaa := d.DecodeElement(_gadc.SrgbClr, &_fbgd); _bbaa != nil {
					return _bbaa
				}
				_cbcf.EG_ColorChoice = append(_cbcf.EG_ColorChoice, _gadc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_gdeb := NewEG_ColorChoice()
				_gdeb.HslClr = NewCT_HslColor()
				if _gdcfc := d.DecodeElement(_gdeb.HslClr, &_fbgd); _gdcfc != nil {
					return _gdcfc
				}
				_cbcf.EG_ColorChoice = append(_cbcf.EG_ColorChoice, _gdeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ecg := NewEG_ColorChoice()
				_ecg.SysClr = NewCT_SystemColor()
				if _ddec := d.DecodeElement(_ecg.SysClr, &_fbgd); _ddec != nil {
					return _ddec
				}
				_cbcf.EG_ColorChoice = append(_cbcf.EG_ColorChoice, _ecg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cega := NewEG_ColorChoice()
				_cega.SchemeClr = NewCT_SchemeColor()
				if _ebaag := d.DecodeElement(_cega.SchemeClr, &_fbgd); _ebaag != nil {
					return _ebaag
				}
				_cbcf.EG_ColorChoice = append(_cbcf.EG_ColorChoice, _cega)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_fdd := NewEG_ColorChoice()
				_fdd.PrstClr = NewCT_PresetColor()
				if _ffbfd := d.DecodeElement(_fdd.PrstClr, &_fbgd); _ffbfd != nil {
					return _ffbfd
				}
				_cbcf.EG_ColorChoice = append(_cbcf.EG_ColorChoice, _fdd)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055\u0020\u0025\u0076", _fbgd.Name)
				if _bdae := d.Skip(); _bdae != nil {
					return _bdae
				}
			}
		case _b.EndElement:
			break _faac
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomColorList and its children, prefixing error messages with path
func (_eeab *CT_CustomColorList) ValidateWithPath(path string) error {
	for _ddfd, _fdea := range _eeab.CustClr {
		if _afdd := _fdea.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0073\u0074\u0043\u006cr\u005b\u0025\u0064\u005d", path, _ddfd)); _afdd != nil {
			return _afdd
		}
	}
	return nil
}
func (_dfded *ST_OnOffStyleType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dfded = 0
	case "\u006f\u006e":
		*_dfded = 1
	case "\u006f\u0066\u0066":
		*_dfded = 2
	case "\u0064\u0065\u0066":
		*_dfded = 3
	}
	return nil
}
func (_gcd *CT_AudioCDTime) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aae := range start.Attr {
		if _aae.Name.Local == "\u0074\u0072\u0061c\u006b" {
			_ffd, _afggd := _a.ParseUint(_aae.Value, 10, 8)
			if _afggd != nil {
				return _afggd
			}
			_gcd.TrackAttr = uint8(_ffd)
			continue
		}
		if _aae.Name.Local == "\u0074\u0069\u006d\u0065" {
			_dgad, _daae := _a.ParseUint(_aae.Value, 10, 32)
			if _daae != nil {
				return _daae
			}
			_efcb := uint32(_dgad)
			_gcd.TimeAttr = &_efcb
			continue
		}
	}
	for {
		_cgb, _eed := d.Token()
		if _eed != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0054\u0069\u006d\u0065:\u0020\u0025\u0073", _eed)
		}
		if _fbe, _ebcg := _cgb.(_b.EndElement); _ebcg && _fbe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffebf *ST_PositivePercentage) Validate() error { return _ffebf.ValidateWithPath("") }
func (_ffed *CT_AnimationChartBuildProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgdg := range start.Attr {
		if _bgdg.Name.Local == "\u0062\u006c\u0064" {
			_bggf, _fbcd := ParseUnionST_AnimationChartBuildType(_bgdg.Value)
			if _fbcd != nil {
				return _fbcd
			}
			_ffed.BldAttr = &_bggf
			continue
		}
		if _bgdg.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_bedg, _beac := _a.ParseBool(_bgdg.Value)
			if _beac != nil {
				return _beac
			}
			_ffed.AnimBgAttr = &_bedg
			continue
		}
	}
	for {
		_bgf, _efb := d.Token()
		if _efb != nil {
			return _bb.Errorf("\u0070a\u0072\u0073i\u006e\u0067\u0020\u0043T\u005f\u0041\u006ei\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061rt\u0042\u0075\u0069l\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069e\u0073\u003a \u0025\u0073", _efb)
		}
		if _eab, _becb := _bgf.(_b.EndElement); _becb && _eab.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_LineJoinProperties() *EG_LineJoinProperties {
	_eggac := &EG_LineJoinProperties{}
	return _eggac
}

// Validate validates the CT_GradientStop and its children
func (_dcac *CT_GradientStop) Validate() error {
	return _dcac.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

// ValidateWithPath validates the CT_LineEndProperties and its children, prefixing error messages with path
func (_ecgdd *CT_LineEndProperties) ValidateWithPath(path string) error {
	if _bcfe := _ecgdd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bcfe != nil {
		return _bcfe
	}
	if _dbdada := _ecgdd.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _dbdada != nil {
		return _dbdada
	}
	if _gccg := _ecgdd.LenAttr.ValidateWithPath(path + "\u002f\u004c\u0065\u006e\u0041\u0074\u0074\u0072"); _gccg != nil {
		return _gccg
	}
	return nil
}

// Validate validates the CT_ReflectionEffect and its children
func (_ecbcgg *CT_ReflectionEffect) Validate() error {
	return _ecbcgg.ValidateWithPath("\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_gecbf *EG_Effect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edgba:
	for {
		_bbadbg, _cffbf := d.Token()
		if _cffbf != nil {
			return _cffbf
		}
		switch _daecf := _bbadbg.(type) {
		case _b.StartElement:
			switch _daecf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_gecbf.Cont = NewCT_EffectContainer()
				if _cefg := d.DecodeElement(_gecbf.Cont, &_daecf); _cefg != nil {
					return _cefg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_gecbf.Effect = NewCT_EffectReference()
				if _cegad := d.DecodeElement(_gecbf.Effect, &_daecf); _cegad != nil {
					return _cegad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_gecbf.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _ffaba := d.DecodeElement(_gecbf.AlphaBiLevel, &_daecf); _ffaba != nil {
					return _ffaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_gecbf.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _bbbbdd := d.DecodeElement(_gecbf.AlphaCeiling, &_daecf); _bbbbdd != nil {
					return _bbbbdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_gecbf.AlphaFloor = NewCT_AlphaFloorEffect()
				if _ddgfb := d.DecodeElement(_gecbf.AlphaFloor, &_daecf); _ddgfb != nil {
					return _ddgfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_gecbf.AlphaInv = NewCT_AlphaInverseEffect()
				if _gbdga := d.DecodeElement(_gecbf.AlphaInv, &_daecf); _gbdga != nil {
					return _gbdga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_gecbf.AlphaMod = NewCT_AlphaModulateEffect()
				if _fafeb := d.DecodeElement(_gecbf.AlphaMod, &_daecf); _fafeb != nil {
					return _fafeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_gecbf.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _ccbed := d.DecodeElement(_gecbf.AlphaModFix, &_daecf); _ccbed != nil {
					return _ccbed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_gecbf.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _gdcdc := d.DecodeElement(_gecbf.AlphaOutset, &_daecf); _gdcdc != nil {
					return _gdcdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_gecbf.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _afaaf := d.DecodeElement(_gecbf.AlphaRepl, &_daecf); _afaaf != nil {
					return _afaaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_gecbf.BiLevel = NewCT_BiLevelEffect()
				if _ecdacb := d.DecodeElement(_gecbf.BiLevel, &_daecf); _ecdacb != nil {
					return _ecdacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_gecbf.Blend = NewCT_BlendEffect()
				if _fdedc := d.DecodeElement(_gecbf.Blend, &_daecf); _fdedc != nil {
					return _fdedc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_gecbf.Blur = NewCT_BlurEffect()
				if _ecgbd := d.DecodeElement(_gecbf.Blur, &_daecf); _ecgbd != nil {
					return _ecgbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_gecbf.ClrChange = NewCT_ColorChangeEffect()
				if _gbcbaf := d.DecodeElement(_gecbf.ClrChange, &_daecf); _gbcbaf != nil {
					return _gbcbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_gecbf.ClrRepl = NewCT_ColorReplaceEffect()
				if _fcae := d.DecodeElement(_gecbf.ClrRepl, &_daecf); _fcae != nil {
					return _fcae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_gecbf.Duotone = NewCT_DuotoneEffect()
				if _adbcf := d.DecodeElement(_gecbf.Duotone, &_daecf); _adbcf != nil {
					return _adbcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_gecbf.Fill = NewCT_FillEffect()
				if _fabgde := d.DecodeElement(_gecbf.Fill, &_daecf); _fabgde != nil {
					return _fabgde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_gecbf.FillOverlay = NewCT_FillOverlayEffect()
				if _beafe := d.DecodeElement(_gecbf.FillOverlay, &_daecf); _beafe != nil {
					return _beafe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_gecbf.Glow = NewCT_GlowEffect()
				if _abbcg := d.DecodeElement(_gecbf.Glow, &_daecf); _abbcg != nil {
					return _abbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_gecbf.Grayscl = NewCT_GrayscaleEffect()
				if _agcfa := d.DecodeElement(_gecbf.Grayscl, &_daecf); _agcfa != nil {
					return _agcfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_gecbf.Hsl = NewCT_HSLEffect()
				if _aggbga := d.DecodeElement(_gecbf.Hsl, &_daecf); _aggbga != nil {
					return _aggbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_gecbf.InnerShdw = NewCT_InnerShadowEffect()
				if _abaaa := d.DecodeElement(_gecbf.InnerShdw, &_daecf); _abaaa != nil {
					return _abaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_gecbf.Lum = NewCT_LuminanceEffect()
				if _deeab := d.DecodeElement(_gecbf.Lum, &_daecf); _deeab != nil {
					return _deeab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_gecbf.OuterShdw = NewCT_OuterShadowEffect()
				if _dcedd := d.DecodeElement(_gecbf.OuterShdw, &_daecf); _dcedd != nil {
					return _dcedd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_gecbf.PrstShdw = NewCT_PresetShadowEffect()
				if _aebbc := d.DecodeElement(_gecbf.PrstShdw, &_daecf); _aebbc != nil {
					return _aebbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gecbf.Reflection = NewCT_ReflectionEffect()
				if _bgfegb := d.DecodeElement(_gecbf.Reflection, &_daecf); _bgfegb != nil {
					return _bgfegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_gecbf.RelOff = NewCT_RelativeOffsetEffect()
				if _agbfe := d.DecodeElement(_gecbf.RelOff, &_daecf); _agbfe != nil {
					return _agbfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_gecbf.SoftEdge = NewCT_SoftEdgesEffect()
				if _cegg := d.DecodeElement(_gecbf.SoftEdge, &_daecf); _cegg != nil {
					return _cegg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gecbf.Tint = NewCT_TintEffect()
				if _eacde := d.DecodeElement(_gecbf.Tint, &_daecf); _eacde != nil {
					return _eacde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_gecbf.Xfrm = NewCT_TransformEffect()
				if _aaade := d.DecodeElement(_gecbf.Xfrm, &_daecf); _aaade != nil {
					return _aaade
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0045\u0066\u0066e\u0063\u0074 \u0025\u0076", _daecf.Name)
				if _eggfbc := d.Skip(); _eggfbc != nil {
					return _eggfbc
				}
			}
		case _b.EndElement:
			break _edgba
		case _b.CharData:
		}
	}
	return nil
}
func (_agafa ST_TextAnchoringType) Validate() error { return _agafa.ValidateWithPath("") }
func NewCT_GrayscaleEffect() *CT_GrayscaleEffect    { _efeab := &CT_GrayscaleEffect{}; return _efeab }

// Validate validates the CT_PositiveFixedAngle and its children
func (_gcagg *CT_PositiveFixedAngle) Validate() error {
	return _gcagg.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065")
}
func (_deffce *EG_TextBulletSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dcfec:
	for {
		_ggegae, _gacede := d.Token()
		if _gacede != nil {
			return _gacede
		}
		switch _aace := _ggegae.(type) {
		case _b.StartElement:
			switch _aace.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_deffce.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _cdcaa := d.DecodeElement(_deffce.BuSzTx, &_aace); _cdcaa != nil {
					return _cdcaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_deffce.BuSzPct = NewCT_TextBulletSizePercent()
				if _ebbeb := d.DecodeElement(_deffce.BuSzPct, &_aace); _ebbeb != nil {
					return _ebbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_deffce.BuSzPts = NewCT_TextBulletSizePoint()
				if _acgcf := d.DecodeElement(_deffce.BuSzPts, &_aace); _acgcf != nil {
					return _acgcf
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0020\u0025\u0076", _aace.Name)
				if _daaef := d.Skip(); _daaef != nil {
					return _daaef
				}
			}
		case _b.EndElement:
			break _dcfec
		case _b.CharData:
		}
	}
	return nil
}

type CT_Vector3D struct {
	DxAttr ST_Coordinate
	DyAttr ST_Coordinate
	DzAttr ST_Coordinate
}

// Validate validates the CT_ObjectStyleDefaults and its children
func (_adbac *CT_ObjectStyleDefaults) Validate() error {
	return _adbac.ValidateWithPath("\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073")
}

type CT_GvmlUseShapeRectangle struct{}

func (_gfcecf ST_AnimationChartBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gfcecf.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_b.CharData(_gfcecf.ST_AnimationBuildType.String()))
	}
	if _gfcecf.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		e.EncodeToken(_b.CharData(_gfcecf.ST_AnimationChartOnlyBuildType.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func NewGraphic() *Graphic {
	_bggbd := &Graphic{}
	_bggbd.CT_GraphicalObject = *NewCT_GraphicalObject()
	return _bggbd
}

type CT_ColorMappingOverride struct {
	Choice *CT_ColorMappingOverrideChoice
}

func (_gfaacg *CT_LineJoinMiterProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfaacg.LimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006d"}, Value: _bb.Sprintf("\u0025\u0076", *_gfaacg.LimAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlGraphicalObjectFrame struct {
	NvGraphicFramePr *CT_GvmlGraphicFrameNonVisual
	Graphic          *Graphic
	Xfrm             *CT_Transform2D
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_ContentPartLocking() *CT_ContentPartLocking {
	_bgdgb := &CT_ContentPartLocking{}
	return _bgdgb
}
func (_bbab *CT_CustomGeometry2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bbab.AvLst != nil {
		_egcg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_bbab.AvLst, _egcg)
	}
	if _bbab.GdLst != nil {
		_fbgb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_bbab.GdLst, _fbgb)
	}
	if _bbab.AhLst != nil {
		_fdgd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0068\u004c\u0073\u0074"}}
		e.EncodeElement(_bbab.AhLst, _fdgd)
	}
	if _bbab.CxnLst != nil {
		_cffcg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0078\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_bbab.CxnLst, _cffcg)
	}
	if _bbab.Rect != nil {
		_gadcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072\u0065\u0063\u0074"}}
		e.EncodeElement(_bbab.Rect, _gadcd)
	}
	_cgcec := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0061\u0074\u0068\u004c\u0073t"}}
	e.EncodeElement(_bbab.PathLst, _cgcec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_LineJoinBevel struct{}

const (
	ST_PitchFamilyUnset ST_PitchFamily = 0
	ST_PitchFamily00    ST_PitchFamily = 1
	ST_PitchFamily01    ST_PitchFamily = 2
	ST_PitchFamily02    ST_PitchFamily = 3
	ST_PitchFamily16    ST_PitchFamily = 4
	ST_PitchFamily17    ST_PitchFamily = 5
	ST_PitchFamily18    ST_PitchFamily = 6
	ST_PitchFamily32    ST_PitchFamily = 7
	ST_PitchFamily33    ST_PitchFamily = 8
	ST_PitchFamily34    ST_PitchFamily = 9
	ST_PitchFamily48    ST_PitchFamily = 10
	ST_PitchFamily49    ST_PitchFamily = 11
	ST_PitchFamily50    ST_PitchFamily = 12
	ST_PitchFamily64    ST_PitchFamily = 13
	ST_PitchFamily65    ST_PitchFamily = 14
	ST_PitchFamily66    ST_PitchFamily = 15
	ST_PitchFamily80    ST_PitchFamily = 16
	ST_PitchFamily81    ST_PitchFamily = 17
	ST_PitchFamily82    ST_PitchFamily = 18
)

type ST_PresetColorVal byte

func (_ddgea *CT_WholeE2oFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ddgea.Ln != nil {
		_dcedg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_ddgea.Ln, _dcedg)
	}
	if _ddgea.EffectLst != nil {
		_eefe := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ddgea.EffectLst, _eefe)
	}
	if _ddgea.EffectDag != nil {
		_gccdg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_ddgea.EffectDag, _gccdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Transform2D and its children, prefixing error messages with path
func (_ceefd *CT_Transform2D) ValidateWithPath(path string) error {
	if _ceefd.Off != nil {
		if _gbbdgg := _ceefd.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _gbbdgg != nil {
			return _gbbdgg
		}
	}
	if _ceefd.Ext != nil {
		if _dffdb := _ceefd.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _dffdb != nil {
			return _dffdb
		}
	}
	return nil
}
func (_egge *CT_ColorMapping) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_bgff, _afgc := _egge.Bg1Attr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0067\u0031"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Tx1Attr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0078\u0031"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Bg2Attr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0067\u0032"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Tx2Attr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0078\u0032"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Accent1Attr.MarshalXMLAttr(_b.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Accent2Attr.MarshalXMLAttr(_b.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Accent3Attr.MarshalXMLAttr(_b.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Accent4Attr.MarshalXMLAttr(_b.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Accent5Attr.MarshalXMLAttr(_b.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.Accent6Attr.MarshalXMLAttr(_b.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.HlinkAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006c\u0069n\u006b"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	_bgff, _afgc = _egge.FolHlinkAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"})
	if _afgc != nil {
		return _afgc
	}
	start.Attr = append(start.Attr, _bgff)
	e.EncodeToken(start)
	if _egge.ExtLst != nil {
		_adbcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egge.ExtLst, _adbcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffabg *EG_ThemeableFillStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgfgf:
	for {
		_dddeb, _ccbae := d.Token()
		if _ccbae != nil {
			return _ccbae
		}
		switch _deadb := _dddeb.(type) {
		case _b.StartElement:
			switch _deadb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_ffabg.Fill = NewCT_FillProperties()
				if _adabg := d.DecodeElement(_ffabg.Fill, &_deadb); _adabg != nil {
					return _adabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_ffabg.FillRef = NewCT_StyleMatrixReference()
				if _ggaac := d.DecodeElement(_ffabg.FillRef, &_deadb); _ggaac != nil {
					return _ggaac
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _deadb.Name)
				if _dfgff := d.Skip(); _dfgff != nil {
					return _dfgff
				}
			}
		case _b.EndElement:
			break _fgfgf
		case _b.CharData:
		}
	}
	return nil
}
func (_agadda *Graphic) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return _agadda.CT_GraphicalObject.MarshalXML(e, start)
}

// ValidateWithPath validates the EG_TextBullet and its children, prefixing error messages with path
func (_bcbege *EG_TextBullet) ValidateWithPath(path string) error {
	if _bcbege.BuNone != nil {
		if _ccgedc := _bcbege.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _ccgedc != nil {
			return _ccgedc
		}
	}
	if _bcbege.BuAutoNum != nil {
		if _cfdag := _bcbege.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _cfdag != nil {
			return _cfdag
		}
	}
	if _bcbege.BuChar != nil {
		if _gdfdf := _bcbege.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _gdfdf != nil {
			return _gdfdf
		}
	}
	if _bcbege.BuBlip != nil {
		if _fffgd := _bcbege.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _fffgd != nil {
			return _fffgd
		}
	}
	return nil
}

// Validate validates the CT_BackgroundFormatting and its children
func (_fdee *CT_BackgroundFormatting) Validate() error {
	return _fdee.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}
func NewCT_ConnectionSite() *CT_ConnectionSite {
	_gdfg := &CT_ConnectionSite{}
	_gdfg.Pos = NewCT_AdjPoint2D()
	return _gdfg
}
func (_badge ST_TextPoint) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _badge.ST_TextPointUnqualified != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_badge.ST_TextPointUnqualified)))
	}
	if _badge.ST_UniversalMeasure != nil {
		e.EncodeToken(_b.CharData(*_badge.ST_UniversalMeasure))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func NewCT_ConnectionSiteList() *CT_ConnectionSiteList {
	_dfce := &CT_ConnectionSiteList{}
	return _dfce
}
func (_cgdf *CT_EmbeddedWAVAudioFile) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _cgdf.EmbedAttr)})
	if _cgdf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_cgdf.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aeegf *ST_PresetPatternVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfdeg, _caggg := d.Token()
	if _caggg != nil {
		return _caggg
	}
	if _aebda, _effba := _gfdeg.(_b.EndElement); _effba && _aebda.Name == start.Name {
		*_aeegf = 1
		return nil
	}
	if _bcffb, _cabgf := _gfdeg.(_b.CharData); !_cabgf {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfdeg)
	} else {
		switch string(_bcffb) {
		case "":
			*_aeegf = 0
		case "\u0070\u0063\u0074\u0035":
			*_aeegf = 1
		case "\u0070\u0063\u00741\u0030":
			*_aeegf = 2
		case "\u0070\u0063\u00742\u0030":
			*_aeegf = 3
		case "\u0070\u0063\u00742\u0035":
			*_aeegf = 4
		case "\u0070\u0063\u00743\u0030":
			*_aeegf = 5
		case "\u0070\u0063\u00744\u0030":
			*_aeegf = 6
		case "\u0070\u0063\u00745\u0030":
			*_aeegf = 7
		case "\u0070\u0063\u00746\u0030":
			*_aeegf = 8
		case "\u0070\u0063\u00747\u0030":
			*_aeegf = 9
		case "\u0070\u0063\u00747\u0035":
			*_aeegf = 10
		case "\u0070\u0063\u00748\u0030":
			*_aeegf = 11
		case "\u0070\u0063\u00749\u0030":
			*_aeegf = 12
		case "\u0068\u006f\u0072\u007a":
			*_aeegf = 13
		case "\u0076\u0065\u0072\u0074":
			*_aeegf = 14
		case "\u006c\u0074\u0048\u006f\u0072\u007a":
			*_aeegf = 15
		case "\u006c\u0074\u0056\u0065\u0072\u0074":
			*_aeegf = 16
		case "\u0064\u006b\u0048\u006f\u0072\u007a":
			*_aeegf = 17
		case "\u0064\u006b\u0056\u0065\u0072\u0074":
			*_aeegf = 18
		case "\u006ea\u0072\u0048\u006f\u0072\u007a":
			*_aeegf = 19
		case "\u006ea\u0072\u0056\u0065\u0072\u0074":
			*_aeegf = 20
		case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
			*_aeegf = 21
		case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
			*_aeegf = 22
		case "\u0063\u0072\u006fs\u0073":
			*_aeegf = 23
		case "\u0064\u006e\u0044\u0069\u0061\u0067":
			*_aeegf = 24
		case "\u0075\u0070\u0044\u0069\u0061\u0067":
			*_aeegf = 25
		case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
			*_aeegf = 26
		case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
			*_aeegf = 27
		case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
			*_aeegf = 28
		case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
			*_aeegf = 29
		case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
			*_aeegf = 30
		case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
			*_aeegf = 31
		case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
			*_aeegf = 32
		case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
			*_aeegf = 33
		case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
			*_aeegf = 34
		case "\u0073m\u0043\u0068\u0065\u0063\u006b":
			*_aeegf = 35
		case "\u006cg\u0043\u0068\u0065\u0063\u006b":
			*_aeegf = 36
		case "\u0073\u006d\u0047\u0072\u0069\u0064":
			*_aeegf = 37
		case "\u006c\u0067\u0047\u0072\u0069\u0064":
			*_aeegf = 38
		case "\u0064o\u0074\u0047\u0072\u0069\u0064":
			*_aeegf = 39
		case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_aeegf = 40
		case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_aeegf = 41
		case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
			*_aeegf = 42
		case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
			*_aeegf = 43
		case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
			*_aeegf = 44
		case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
			*_aeegf = 45
		case "\u0064o\u0074\u0044\u006d\u006e\u0064":
			*_aeegf = 46
		case "\u0070\u006c\u0061i\u0064":
			*_aeegf = 47
		case "\u0073\u0070\u0068\u0065\u0072\u0065":
			*_aeegf = 48
		case "\u0077\u0065\u0061v\u0065":
			*_aeegf = 49
		case "\u0064\u0069\u0076o\u0074":
			*_aeegf = 50
		case "\u0073h\u0069\u006e\u0067\u006c\u0065":
			*_aeegf = 51
		case "\u0077\u0061\u0076\u0065":
			*_aeegf = 52
		case "\u0074r\u0065\u006c\u006c\u0069\u0073":
			*_aeegf = 53
		case "\u007a\u0069\u0067\u005a\u0061\u0067":
			*_aeegf = 54
		}
	}
	_gfdeg, _caggg = d.Token()
	if _caggg != nil {
		return _caggg
	}
	if _bbaae, _geeaf := _gfdeg.(_b.EndElement); _geeaf && _bbaae.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfdeg)
}

// ValidateWithPath validates the CT_Path2DCubicBezierTo and its children, prefixing error messages with path
func (_cecbb *CT_Path2DCubicBezierTo) ValidateWithPath(path string) error {
	for _dcabg, _bgbbd := range _cecbb.Pt {
		if _ebafc := _bgbbd.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _dcabg)); _ebafc != nil {
			return _ebafc
		}
	}
	return nil
}
func (_fgeg *EG_Geometry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgeg.CustGeom != nil {
		_dafec := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fgeg.CustGeom, _dafec)
	}
	if _fgeg.PrstGeom != nil {
		_effdd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fgeg.PrstGeom, _effdd)
	}
	return nil
}

type ST_SystemColorVal byte

func (_dfbe *CT_ConnectionSiteList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dfbe.Cxn != nil {
		_ddfg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063x\u006e"}}
		for _, _debc := range _dfbe.Cxn {
			e.EncodeElement(_debc, _ddfg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cefdgf ST_BlackWhiteMode) ValidateWithPath(path string) error {
	switch _cefdgf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cefdgf))
	}
	return nil
}

type CT_TextUnderlineFillFollowText struct{}

func (_eggd *CT_PresetTextShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_bgdac, _feace := _eggd.PrstAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _feace != nil {
		return _feace
	}
	start.Attr = append(start.Attr, _bgdac)
	e.EncodeToken(start)
	if _eggd.AvLst != nil {
		_ecbbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_eggd.AvLst, _ecbbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ColorMappingOverrideChoice() *CT_ColorMappingOverrideChoice {
	_gfac := &CT_ColorMappingOverrideChoice{}
	return _gfac
}

// Validate validates the CT_GvmlGroupShapeNonVisual and its children
func (_fcfgef *CT_GvmlGroupShapeNonVisual) Validate() error {
	return _fcfgef.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c")
}
func (_abfcf ST_TextHorzOverflowType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abfcf.String(), start)
}
func NewCT_AdjPoint2D() *CT_AdjPoint2D   { _gdf := &CT_AdjPoint2D{}; return _gdf }
func NewCT_AudioCDTime() *CT_AudioCDTime { _gbb := &CT_AudioCDTime{}; return _gbb }
func (_dfcc *CT_DefaultShapeDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fdbg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_dfcc.SpPr, _fdbg)
	_fgcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_dfcc.BodyPr, _fgcb)
	_befg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
	e.EncodeElement(_dfcc.LstStyle, _befg)
	if _dfcc.Style != nil {
		_caff := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_dfcc.Style, _caff)
	}
	if _dfcc.ExtLst != nil {
		_badff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfcc.ExtLst, _badff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebaeb *ST_PresetMaterialType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebaeb = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
		*_ebaeb = 1
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
		*_ebaeb = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
		*_ebaeb = 3
	case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
		*_ebaeb = 4
	case "\u006d\u0061\u0074t\u0065":
		*_ebaeb = 5
	case "\u0070l\u0061\u0073\u0074\u0069\u0063":
		*_ebaeb = 6
	case "\u006d\u0065\u0074a\u006c":
		*_ebaeb = 7
	case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
		*_ebaeb = 8
	case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
		*_ebaeb = 9
	case "\u0070\u006f\u0077\u0064\u0065\u0072":
		*_ebaeb = 10
	case "\u0064\u006b\u0045\u0064\u0067\u0065":
		*_ebaeb = 11
	case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
		*_ebaeb = 12
	case "\u0063\u006c\u0065a\u0072":
		*_ebaeb = 13
	case "\u0066\u006c\u0061\u0074":
		*_ebaeb = 14
	case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
		*_ebaeb = 15
	}
	return nil
}
func NewCT_GvmlPicture() *CT_GvmlPicture {
	_adadd := &CT_GvmlPicture{}
	_adadd.NvPicPr = NewCT_GvmlPictureNonVisual()
	_adadd.BlipFill = NewCT_BlipFillProperties()
	_adadd.SpPr = NewCT_ShapeProperties()
	return _adadd
}

type CT_WholeE2oFormatting struct {
	Ln        *CT_LineProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_faaf ST_SystemColorVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_faaf.String(), start)
}

// Validate validates the CT_PositiveSize2D and its children
func (_babcga *CT_PositiveSize2D) Validate() error {
	return _babcga.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044")
}

type CT_LineJoinMiterProperties struct{ LimAttr *ST_PositivePercentage }

// ValidateWithPath validates the CT_NonVisualDrawingProps and its children, prefixing error messages with path
func (_bddec *CT_NonVisualDrawingProps) ValidateWithPath(path string) error {
	if _bddec.HlinkClick != nil {
		if _cddef := _bddec.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _cddef != nil {
			return _cddef
		}
	}
	if _bddec.HlinkHover != nil {
		if _ffeba := _bddec.HlinkHover.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"); _ffeba != nil {
			return _ffeba
		}
	}
	if _bddec.ExtLst != nil {
		if _dgcbd := _bddec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgcbd != nil {
			return _dgcbd
		}
	}
	return nil
}
func (_befca *CT_TextBulletSizeFollowText) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_ddcac, _beagf := d.Token()
		if _beagf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078t\u003a\u0020\u0025\u0073", _beagf)
		}
		if _bacbd, _egaef := _ddcac.(_b.EndElement); _egaef && _bacbd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_AlphaInverseEffect and its children
func (_bbc *CT_AlphaInverseEffect) Validate() error {
	return _bbc.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074")
}

type EG_ShadeProperties struct {
	Lin  *CT_LinearShadeProperties
	Path *CT_PathShadeProperties
}

func (_ggaef *EG_OfficeArtExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ccfbe:
	for {
		_gddbc, _caebc := d.Token()
		if _caebc != nil {
			return _caebc
		}
		switch _fdbdf := _gddbc.(type) {
		case _b.StartElement:
			switch _fdbdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_ffbfg := NewCT_OfficeArtExtension()
				if _ebgfd := d.DecodeElement(_ffbfg, &_fdbdf); _ebgfd != nil {
					return _ebgfd
				}
				_ggaef.Ext = append(_ggaef.Ext, _ffbfg)
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _fdbdf.Name)
				if _bfeca := d.Skip(); _bfeca != nil {
					return _bfeca
				}
			}
		case _b.EndElement:
			break _ccfbe
		case _b.CharData:
		}
	}
	return nil
}

type ST_BlipCompression byte

// Validate validates the CT_BackgroundFillStyleList and its children
func (_cegf *CT_BackgroundFillStyleList) Validate() error {
	return _cegf.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074")
}

// Validate validates the CT_LineJoinMiterProperties and its children
func (_degbe *CT_LineJoinMiterProperties) Validate() error {
	return _degbe.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

type EG_TextBullet struct {
	BuNone    *CT_TextNoBullet
	BuAutoNum *CT_TextAutonumberBullet
	BuChar    *CT_TextCharBullet
	BuBlip    *CT_TextBlipBullet
}

func (_aeabb *ST_PitchFamily) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aggea, _becca := d.Token()
	if _becca != nil {
		return _becca
	}
	if _aeecd, _cbfce := _aggea.(_b.EndElement); _cbfce && _aeecd.Name == start.Name {
		*_aeabb = 1
		return nil
	}
	if _daagfg, _faeeff := _aggea.(_b.CharData); !_faeeff {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aggea)
	} else {
		switch string(_daagfg) {
		case "":
			*_aeabb = 0
		case "\u0030\u0030":
			*_aeabb = 1
		case "\u0030\u0031":
			*_aeabb = 2
		case "\u0030\u0032":
			*_aeabb = 3
		case "\u0031\u0036":
			*_aeabb = 4
		case "\u0031\u0037":
			*_aeabb = 5
		case "\u0031\u0038":
			*_aeabb = 6
		case "\u0033\u0032":
			*_aeabb = 7
		case "\u0033\u0033":
			*_aeabb = 8
		case "\u0033\u0034":
			*_aeabb = 9
		case "\u0034\u0038":
			*_aeabb = 10
		case "\u0034\u0039":
			*_aeabb = 11
		case "\u0035\u0030":
			*_aeabb = 12
		case "\u0036\u0034":
			*_aeabb = 13
		case "\u0036\u0035":
			*_aeabb = 14
		case "\u0036\u0036":
			*_aeabb = 15
		case "\u0038\u0030":
			*_aeabb = 16
		case "\u0038\u0031":
			*_aeabb = 17
		case "\u0038\u0032":
			*_aeabb = 18
		}
	}
	_aggea, _becca = d.Token()
	if _becca != nil {
		return _becca
	}
	if _febea, _feeca := _aggea.(_b.EndElement); _feeca && _febea.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aggea)
}
func NewCT_AnimationDgmElement() *CT_AnimationDgmElement {
	_cebg := &CT_AnimationDgmElement{}
	return _cebg
}
func (_baf *CT_AdjPoint2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _baf.XAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _baf.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaddb ST_PathShadeType) Validate() error { return _gaddb.ValidateWithPath("") }
func (_dfabb ST_LineEndWidth) String() string {
	switch _dfabb {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}

type CT_Backdrop struct {
	Anchor *CT_Point3D
	Norm   *CT_Vector3D
	Up     *CT_Vector3D
	ExtLst *CT_OfficeArtExtensionList
}

func (_agaf *CT_Blip) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agaf.CstateAttr != ST_BlipCompressionUnset {
		_cdd, _cbag := _agaf.CstateAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0073\u0074\u0061\u0074\u0065"})
		if _cbag != nil {
			return _cbag
		}
		start.Attr = append(start.Attr, _cdd)
	}
	if _agaf.EmbedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_agaf.EmbedAttr)})
	}
	if _agaf.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", *_agaf.LinkAttr)})
	}
	e.EncodeToken(start)
	if _agaf.Choice != nil {
		for _, _dadb := range _agaf.Choice {
			_dadb.MarshalXML(e, _b.StartElement{})
		}
	}
	if _agaf.ExtLst != nil {
		_gcde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agaf.ExtLst, _gcde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextListStyle() *CT_TextListStyle { _acgcc := &CT_TextListStyle{}; return _acgcc }

// ValidateWithPath validates the CT_StretchInfoProperties and its children, prefixing error messages with path
func (_fafdd *CT_StretchInfoProperties) ValidateWithPath(path string) error {
	if _fafdd.FillRect != nil {
		if _cfeee := _fafdd.FillRect.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0052\u0065\u0063t"); _cfeee != nil {
			return _cfeee
		}
	}
	return nil
}

type CT_ColorChangeEffect struct {
	UseAAttr *bool
	ClrFrom  *CT_Color
	ClrTo    *CT_Color
}

// ValidateWithPath validates the CT_Headers and its children, prefixing error messages with path
func (_afed *CT_Headers) ValidateWithPath(path string) error { return nil }
func (_afgac *ST_RectAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afgac = 0
	case "\u0074\u006c":
		*_afgac = 1
	case "\u0074":
		*_afgac = 2
	case "\u0074\u0072":
		*_afgac = 3
	case "\u006c":
		*_afgac = 4
	case "\u0063\u0074\u0072":
		*_afgac = 5
	case "\u0072":
		*_afgac = 6
	case "\u0062\u006c":
		*_afgac = 7
	case "\u0062":
		*_afgac = 8
	case "\u0062\u0072":
		*_afgac = 9
	}
	return nil
}
func (_dcffg *CT_TextNoAutofit) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_EffectStyleItem() *CT_EffectStyleItem { _bgegg := &CT_EffectStyleItem{}; return _bgegg }
func (_dcdae ST_TextFontAlignType) ValidateWithPath(path string) error {
	switch _dcdae {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcdae))
	}
	return nil
}
func (_aggbf *ST_Percentage) ValidateWithPath(path string) error {
	_fffcc := []string{}
	if _aggbf.ST_PercentageDecimal != nil {
		_fffcc = append(_fffcc, "S\u0054_\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065\u0044\u0065\u0063im\u0061\u006c")
	}
	if _aggbf.ST_Percentage != nil {
		_fffcc = append(_fffcc, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_fffcc) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fffcc)
	}
	return nil
}

type CT_GvmlGraphicFrameNonVisual struct {
	CNvPr             *CT_NonVisualDrawingProps
	CNvGraphicFramePr *CT_NonVisualGraphicFrameProperties
}

func (_fcgc *CT_AudioFile) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _fcgc.LinkAttr)})
	if _fcgc.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_fcgc.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _fcgc.ExtLst != nil {
		_dbba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcgc.ExtLst, _dbba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AlphaReplaceEffect and its children
func (_baed *CT_AlphaReplaceEffect) Validate() error {
	return _baed.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_ShapeProperties and its children, prefixing error messages with path
func (_fcddc *CT_ShapeProperties) ValidateWithPath(path string) error {
	if _aggcd := _fcddc.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _aggcd != nil {
		return _aggcd
	}
	if _fcddc.Xfrm != nil {
		if _adedb := _fcddc.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _adedb != nil {
			return _adedb
		}
	}
	if _fcddc.CustGeom != nil {
		if _eeggb := _fcddc.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _eeggb != nil {
			return _eeggb
		}
	}
	if _fcddc.PrstGeom != nil {
		if _ceadd := _fcddc.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _ceadd != nil {
			return _ceadd
		}
	}
	if _fcddc.NoFill != nil {
		if _gaeae := _fcddc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _gaeae != nil {
			return _gaeae
		}
	}
	if _fcddc.SolidFill != nil {
		if _dgbgd := _fcddc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dgbgd != nil {
			return _dgbgd
		}
	}
	if _fcddc.GradFill != nil {
		if _fgcgf := _fcddc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fgcgf != nil {
			return _fgcgf
		}
	}
	if _fcddc.BlipFill != nil {
		if _cbeac := _fcddc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cbeac != nil {
			return _cbeac
		}
	}
	if _fcddc.PattFill != nil {
		if _cbbfdc := _fcddc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cbbfdc != nil {
			return _cbbfdc
		}
	}
	if _fcddc.GrpFill != nil {
		if _cgfaa := _fcddc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cgfaa != nil {
			return _cgfaa
		}
	}
	if _fcddc.Ln != nil {
		if _cgeab := _fcddc.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _cgeab != nil {
			return _cgeab
		}
	}
	if _fcddc.EffectLst != nil {
		if _fdacg := _fcddc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _fdacg != nil {
			return _fdacg
		}
	}
	if _fcddc.EffectDag != nil {
		if _fggc := _fcddc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fggc != nil {
			return _fggc
		}
	}
	if _fcddc.Scene3d != nil {
		if _dgada := _fcddc.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _dgada != nil {
			return _dgada
		}
	}
	if _fcddc.Sp3d != nil {
		if _cagec := _fcddc.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _cagec != nil {
			return _cagec
		}
	}
	if _fcddc.ExtLst != nil {
		if _afdae := _fcddc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afdae != nil {
			return _afdae
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ThemeableFillStyle and its children, prefixing error messages with path
func (_dadcc *EG_ThemeableFillStyle) ValidateWithPath(path string) error {
	if _dadcc.Fill != nil {
		if _faffa := _dadcc.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _faffa != nil {
			return _faffa
		}
	}
	if _dadcc.FillRef != nil {
		if _gagbb := _dadcc.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _gagbb != nil {
			return _gagbb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GrayscaleEffect and its children, prefixing error messages with path
func (_eadee *CT_GrayscaleEffect) ValidateWithPath(path string) error { return nil }

type CT_AlphaOutsetEffect struct{ RadAttr *ST_Coordinate }

func (_abbd ST_TextShapeType) ValidateWithPath(path string) error {
	switch _abbd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abbd))
	}
	return nil
}
func ParseUnionST_TextSpacingPercentOrPercentString(s string) (ST_TextSpacingPercentOrPercentString, error) {
	_ffeede := ST_TextSpacingPercentOrPercentString{}
	if _eb.ST_PercentagePatternRe.MatchString(s) {
		_ffeede.ST_Percentage = &s
	} else {
		_afbgbb, _cabeb := _a.ParseInt(s, 10, 64)
		if _cabeb != nil {
			return _ffeede, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cabeb)
		}
		_bdccd := int32(_afbgbb)
		_ffeede.ST_TextSpacingPercent = &_bdccd
	}
	return _ffeede, nil
}
func (_faedd *CT_NonVisualDrawingProps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _faedd.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _faedd.NameAttr)})
	if _faedd.DescrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0073c\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_faedd.DescrAttr)})
	}
	if _faedd.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_faedd.HiddenAttr))})
	}
	if _faedd.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_faedd.TitleAttr)})
	}
	e.EncodeToken(start)
	if _faedd.HlinkClick != nil {
		_dagbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_faedd.HlinkClick, _dagbc)
	}
	if _faedd.HlinkHover != nil {
		_eeeac := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_faedd.HlinkHover, _eeeac)
	}
	if _faedd.ExtLst != nil {
		_aagda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faedd.ExtLst, _aagda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewEG_TextAutofit() *EG_TextAutofit { _ggce := &EG_TextAutofit{}; return _ggce }

// Validate validates the CT_TableStyleCellStyle and its children
func (_dgcdb *CT_TableStyleCellStyle) Validate() error {
	return _dgcdb.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065")
}
func (_gdfbe *ST_Coordinate) Validate() error { return _gdfbe.ValidateWithPath("") }
func (_eebgg ST_PathShadeType) ValidateWithPath(path string) error {
	switch _eebgg {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eebgg))
	}
	return nil
}
func (_dgecd *ST_AnimationChartBuildType) ValidateWithPath(path string) error {
	_eafgb := []string{}
	if _dgecd.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_eafgb = append(_eafgb, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _dgecd.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		_eafgb = append(_eafgb, "\u0053\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0043\u0068\u0061\u0072\u0074\u004fn\u006c\u0079\u0042\u0075\u0069\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if len(_eafgb) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eafgb)
	}
	return nil
}
func (_dafea *CT_GraphicalObjectData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _bb.Sprintf("\u0025\u0076", _dafea.UriAttr)})
	e.EncodeToken(start)
	if _dafea.Any != nil {
		for _, _ggbc := range _dafea.Any {
			_ggbc.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GlowEffect and its children
func (_gdgb *CT_GlowEffect) Validate() error {
	return _gdgb.ValidateWithPath("\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_caef *CT_LineStyleList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dbee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e"}}
	for _, _faeba := range _caef.Ln {
		e.EncodeElement(_faeba, _dbee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abga *CT_GraphicalObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ebfa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_abga.GraphicData, _ebfa)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_baeae *EG_TextUnderlineLine) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baeae.ULnTx != nil {
		_adadf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_baeae.ULnTx, _adadf)
	}
	if _baeae.ULn != nil {
		_aggdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_baeae.ULn, _aggdf)
	}
	return nil
}
func (_abffeg *ST_PresetColorVal) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abffeg = 0
	case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
		*_abffeg = 1
	case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
		*_abffeg = 2
	case "\u0061\u0071\u0075\u0061":
		*_abffeg = 3
	case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_abffeg = 4
	case "\u0061\u007a\u0075r\u0065":
		*_abffeg = 5
	case "\u0062\u0065\u0069g\u0065":
		*_abffeg = 6
	case "\u0062\u0069\u0073\u0071\u0075\u0065":
		*_abffeg = 7
	case "\u0062\u006c\u0061c\u006b":
		*_abffeg = 8
	case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
		*_abffeg = 9
	case "\u0062\u006c\u0075\u0065":
		*_abffeg = 10
	case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
		*_abffeg = 11
	case "\u0062\u0072\u006fw\u006e":
		*_abffeg = 12
	case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
		*_abffeg = 13
	case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
		*_abffeg = 14
	case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
		*_abffeg = 15
	case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
		*_abffeg = 16
	case "\u0063\u006f\u0072a\u006c":
		*_abffeg = 17
	case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
		*_abffeg = 18
	case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
		*_abffeg = 19
	case "\u0063r\u0069\u006d\u0073\u006f\u006e":
		*_abffeg = 20
	case "\u0063\u0079\u0061\u006e":
		*_abffeg = 21
	case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
		*_abffeg = 22
	case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
		*_abffeg = 23
	case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_abffeg = 24
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_abffeg = 25
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
		*_abffeg = 26
	case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
		*_abffeg = 27
	case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
		*_abffeg = 28
	case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
		*_abffeg = 29
	case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
		*_abffeg = 30
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_abffeg = 31
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_abffeg = 32
	case "\u0064a\u0072\u006b\u0052\u0065\u0064":
		*_abffeg = 33
	case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_abffeg = 34
	case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 35
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_abffeg = 36
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_abffeg = 37
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_abffeg = 38
	case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_abffeg = 39
	case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_abffeg = 40
	case "\u0064\u006b\u0042\u006c\u0075\u0065":
		*_abffeg = 41
	case "\u0064\u006b\u0043\u0079\u0061\u006e":
		*_abffeg = 42
	case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_abffeg = 43
	case "\u0064\u006b\u0047\u0072\u0061\u0079":
		*_abffeg = 44
	case "\u0064\u006b\u0047\u0072\u0065\u0079":
		*_abffeg = 45
	case "\u0064k\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 46
	case "\u0064k\u004b\u0068\u0061\u006b\u0069":
		*_abffeg = 47
	case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
		*_abffeg = 48
	case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 49
	case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_abffeg = 50
	case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_abffeg = 51
	case "\u0064\u006b\u0052e\u0064":
		*_abffeg = 52
	case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_abffeg = 53
	case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 54
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_abffeg = 55
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_abffeg = 56
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_abffeg = 57
	case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_abffeg = 58
	case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_abffeg = 59
	case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
		*_abffeg = 60
	case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_abffeg = 61
	case "\u0064i\u006d\u0047\u0072\u0061\u0079":
		*_abffeg = 62
	case "\u0064i\u006d\u0047\u0072\u0065\u0079":
		*_abffeg = 63
	case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
		*_abffeg = 64
	case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
		*_abffeg = 65
	case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
		*_abffeg = 66
	case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 67
	case "\u0066u\u0063\u0068\u0073\u0069\u0061":
		*_abffeg = 68
	case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
		*_abffeg = 69
	case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
		*_abffeg = 70
	case "\u0067\u006f\u006c\u0064":
		*_abffeg = 71
	case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
		*_abffeg = 72
	case "\u0067\u0072\u0061\u0079":
		*_abffeg = 73
	case "\u0067\u0072\u0065\u0079":
		*_abffeg = 74
	case "\u0067\u0072\u0065e\u006e":
		*_abffeg = 75
	case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
		*_abffeg = 76
	case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
		*_abffeg = 77
	case "\u0068o\u0074\u0050\u0069\u006e\u006b":
		*_abffeg = 78
	case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
		*_abffeg = 79
	case "\u0069\u006e\u0064\u0069\u0067\u006f":
		*_abffeg = 80
	case "\u0069\u0076\u006fr\u0079":
		*_abffeg = 81
	case "\u006b\u0068\u0061k\u0069":
		*_abffeg = 82
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
		*_abffeg = 83
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
		*_abffeg = 84
	case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
		*_abffeg = 85
	case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
		*_abffeg = 86
	case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
		*_abffeg = 87
	case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
		*_abffeg = 88
	case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
		*_abffeg = 89
	case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
		*_abffeg = 90
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_abffeg = 91
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
		*_abffeg = 92
	case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 93
	case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
		*_abffeg = 94
	case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_abffeg = 95
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 96
	case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_abffeg = 97
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
		*_abffeg = 98
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
		*_abffeg = 99
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
		*_abffeg = 100
	case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_abffeg = 101
	case "\u006c\u0074\u0042\u006c\u0075\u0065":
		*_abffeg = 102
	case "\u006ct\u0043\u006f\u0072\u0061\u006c":
		*_abffeg = 103
	case "\u006c\u0074\u0043\u0079\u0061\u006e":
		*_abffeg = 104
	case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
		*_abffeg = 105
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_abffeg = 106
	case "\u006c\u0074\u0047\u0072\u0065\u0079":
		*_abffeg = 107
	case "\u006ct\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 108
	case "\u006c\u0074\u0050\u0069\u006e\u006b":
		*_abffeg = 109
	case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_abffeg = 110
	case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 111
	case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
		*_abffeg = 112
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_abffeg = 113
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_abffeg = 114
	case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
		*_abffeg = 115
	case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_abffeg = 116
	case "\u006c\u0069\u006d\u0065":
		*_abffeg = 117
	case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
		*_abffeg = 118
	case "\u006c\u0069\u006ee\u006e":
		*_abffeg = 119
	case "\u006da\u0067\u0065\u006e\u0074\u0061":
		*_abffeg = 120
	case "\u006d\u0061\u0072\u006f\u006f\u006e":
		*_abffeg = 121
	case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_abffeg = 122
	case "\u006de\u0064\u0042\u006c\u0075\u0065":
		*_abffeg = 123
	case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
		*_abffeg = 124
	case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
		*_abffeg = 125
	case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 126
	case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_abffeg = 127
	case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_abffeg = 128
	case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_abffeg = 129
	case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_abffeg = 130
	case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_abffeg = 131
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
		*_abffeg = 132
	case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
		*_abffeg = 133
	case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
		*_abffeg = 134
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
		*_abffeg = 135
	case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_abffeg = 136
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_abffeg = 137
	case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_abffeg = 138
	case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_abffeg = 139
	case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
		*_abffeg = 140
	case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
		*_abffeg = 141
	case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
		*_abffeg = 142
	case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
		*_abffeg = 143
	case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
		*_abffeg = 144
	case "\u006e\u0061\u0076\u0079":
		*_abffeg = 145
	case "\u006fl\u0064\u004c\u0061\u0063\u0065":
		*_abffeg = 146
	case "\u006f\u006c\u0069v\u0065":
		*_abffeg = 147
	case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
		*_abffeg = 148
	case "\u006f\u0072\u0061\u006e\u0067\u0065":
		*_abffeg = 149
	case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
		*_abffeg = 150
	case "\u006f\u0072\u0063\u0068\u0069\u0064":
		*_abffeg = 151
	case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_abffeg = 152
	case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
		*_abffeg = 153
	case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_abffeg = 154
	case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_abffeg = 155
	case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
		*_abffeg = 156
	case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
		*_abffeg = 157
	case "\u0070\u0065\u0072\u0075":
		*_abffeg = 158
	case "\u0070\u0069\u006e\u006b":
		*_abffeg = 159
	case "\u0070\u006c\u0075\u006d":
		*_abffeg = 160
	case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
		*_abffeg = 161
	case "\u0070\u0075\u0072\u0070\u006c\u0065":
		*_abffeg = 162
	case "\u0072\u0065\u0064":
		*_abffeg = 163
	case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
		*_abffeg = 164
	case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
		*_abffeg = 165
	case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
		*_abffeg = 166
	case "\u0073\u0061\u006c\u006d\u006f\u006e":
		*_abffeg = 167
	case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
		*_abffeg = 168
	case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 169
	case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
		*_abffeg = 170
	case "\u0073\u0069\u0065\u006e\u006e\u0061":
		*_abffeg = 171
	case "\u0073\u0069\u006c\u0076\u0065\u0072":
		*_abffeg = 172
	case "\u0073k\u0079\u0042\u006c\u0075\u0065":
		*_abffeg = 173
	case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
		*_abffeg = 174
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
		*_abffeg = 175
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
		*_abffeg = 176
	case "\u0073\u006e\u006f\u0077":
		*_abffeg = 177
	case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 178
	case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
		*_abffeg = 179
	case "\u0074\u0061\u006e":
		*_abffeg = 180
	case "\u0074\u0065\u0061\u006c":
		*_abffeg = 181
	case "\u0074h\u0069\u0073\u0074\u006c\u0065":
		*_abffeg = 182
	case "\u0074\u006f\u006d\u0061\u0074\u006f":
		*_abffeg = 183
	case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
		*_abffeg = 184
	case "\u0076\u0069\u006f\u006c\u0065\u0074":
		*_abffeg = 185
	case "\u0077\u0068\u0065a\u0074":
		*_abffeg = 186
	case "\u0077\u0068\u0069t\u0065":
		*_abffeg = 187
	case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
		*_abffeg = 188
	case "\u0079\u0065\u006c\u006c\u006f\u0077":
		*_abffeg = 189
	case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
		*_abffeg = 190
	}
	return nil
}
func (_febabb *ST_LineEndType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbfdd, _gdfbg := d.Token()
	if _gdfbg != nil {
		return _gdfbg
	}
	if _addgf, _ddffd := _cbfdd.(_b.EndElement); _ddffd && _addgf.Name == start.Name {
		*_febabb = 1
		return nil
	}
	if _fdgff, _abefb := _cbfdd.(_b.CharData); !_abefb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbfdd)
	} else {
		switch string(_fdgff) {
		case "":
			*_febabb = 0
		case "\u006e\u006f\u006e\u0065":
			*_febabb = 1
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_febabb = 2
		case "\u0073t\u0065\u0061\u006c\u0074\u0068":
			*_febabb = 3
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_febabb = 4
		case "\u006f\u0076\u0061\u006c":
			*_febabb = 5
		case "\u0061\u0072\u0072o\u0077":
			*_febabb = 6
		}
	}
	_cbfdd, _gdfbg = d.Token()
	if _gdfbg != nil {
		return _gdfbg
	}
	if _eefef, _deaab := _cbfdd.(_b.EndElement); _deaab && _eefef.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbfdd)
}

// Validate validates the CT_BiLevelEffect and its children
func (_cedb *CT_BiLevelEffect) Validate() error {
	return _cedb.ValidateWithPath("\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_TextSpacing and its children
func (_befgc *CT_TextSpacing) Validate() error {
	return _befgc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067")
}

type CT_TintEffect struct {
	HueAttr *int32
	AmtAttr *ST_FixedPercentage
}

// Validate validates the CT_LuminanceEffect and its children
func (_dbabb *CT_LuminanceEffect) Validate() error {
	return _dbabb.ValidateWithPath("\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074")
}
func NewEG_TextBullet() *EG_TextBullet { _eaegb := &EG_TextBullet{}; return _eaegb }
func (_aebffe ST_TextFontAlignType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfgce := _b.Attr{}
	_cfgce.Name = name
	switch _aebffe {
	case ST_TextFontAlignTypeUnset:
		_cfgce.Value = ""
	case ST_TextFontAlignTypeAuto:
		_cfgce.Value = "\u0061\u0075\u0074\u006f"
	case ST_TextFontAlignTypeT:
		_cfgce.Value = "\u0074"
	case ST_TextFontAlignTypeCtr:
		_cfgce.Value = "\u0063\u0074\u0072"
	case ST_TextFontAlignTypeBase:
		_cfgce.Value = "\u0062\u0061\u0073\u0065"
	case ST_TextFontAlignTypeB:
		_cfgce.Value = "\u0062"
	}
	return _cfgce, nil
}
func (_afabf ST_RectAlignment) ValidateWithPath(path string) error {
	switch _afabf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afabf))
	}
	return nil
}
func NewCT_DefaultShapeDefinition() *CT_DefaultShapeDefinition {
	_bgae := &CT_DefaultShapeDefinition{}
	_bgae.SpPr = NewCT_ShapeProperties()
	_bgae.BodyPr = NewCT_TextBodyProperties()
	_bgae.LstStyle = NewCT_TextListStyle()
	return _bgae
}
func (_eeeec *CT_Path2DList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dgcdd:
	for {
		_gdbcg, _dbge := d.Token()
		if _dbge != nil {
			return _dbge
		}
		switch _fbcca := _gdbcg.(type) {
		case _b.StartElement:
			switch _fbcca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_bbbbd := NewCT_Path2D()
				if _bbcd := d.DecodeElement(_bbbbd, &_fbcca); _bbcd != nil {
					return _bbcd
				}
				_eeeec.Path = append(_eeeec.Path, _bbbbd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074 \u0025\u0076", _fbcca.Name)
				if _eccfe := d.Skip(); _eccfe != nil {
					return _eccfe
				}
			}
		case _b.EndElement:
			break _dgcdd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ColorChoice and its children, prefixing error messages with path
func (_eagac *EG_ColorChoice) ValidateWithPath(path string) error {
	if _eagac.ScrgbClr != nil {
		if _faebe := _eagac.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _faebe != nil {
			return _faebe
		}
	}
	if _eagac.SrgbClr != nil {
		if _eddbg := _eagac.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _eddbg != nil {
			return _eddbg
		}
	}
	if _eagac.HslClr != nil {
		if _bfadg := _eagac.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bfadg != nil {
			return _bfadg
		}
	}
	if _eagac.SysClr != nil {
		if _becc := _eagac.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _becc != nil {
			return _becc
		}
	}
	if _eagac.SchemeClr != nil {
		if _bfdgf := _eagac.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bfdgf != nil {
			return _bfdgf
		}
	}
	if _eagac.PrstClr != nil {
		if _egfca := _eagac.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _egfca != nil {
			return _egfca
		}
	}
	return nil
}
func (_gefgc *ST_TextHorzOverflowType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agege, _fddgc := d.Token()
	if _fddgc != nil {
		return _fddgc
	}
	if _cdfgca, _ecbcf := _agege.(_b.EndElement); _ecbcf && _cdfgca.Name == start.Name {
		*_gefgc = 1
		return nil
	}
	if _aacbbg, _ccbdga := _agege.(_b.CharData); !_ccbdga {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agege)
	} else {
		switch string(_aacbbg) {
		case "":
			*_gefgc = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_gefgc = 1
		case "\u0063\u006c\u0069\u0070":
			*_gefgc = 2
		}
	}
	_agege, _fddgc = d.Token()
	if _fddgc != nil {
		return _fddgc
	}
	if _gagdg, _cbfagag := _agege.(_b.EndElement); _cbfagag && _gagdg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agege)
}

// ValidateWithPath validates the CT_Vector3D and its children, prefixing error messages with path
func (_abdda *CT_Vector3D) ValidateWithPath(path string) error {
	if _gdeeb := _abdda.DxAttr.ValidateWithPath(path + "\u002fD\u0078\u0041\u0074\u0074\u0072"); _gdeeb != nil {
		return _gdeeb
	}
	if _fcebbb := _abdda.DyAttr.ValidateWithPath(path + "\u002fD\u0079\u0041\u0074\u0074\u0072"); _fcebbb != nil {
		return _fcebbb
	}
	if _gdefce := _abdda.DzAttr.ValidateWithPath(path + "\u002fD\u007a\u0041\u0074\u0074\u0072"); _gdefce != nil {
		return _gdefce
	}
	return nil
}
func (_dbccfc *CT_TextBlipBullet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbccfc.Blip = NewCT_Blip()
_dfbag:
	for {
		_aadbb, _cdbbd := d.Token()
		if _cdbbd != nil {
			return _cdbbd
		}
		switch _gbfbe := _aadbb.(type) {
		case _b.StartElement:
			switch _gbfbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				if _adbf := d.DecodeElement(_dbccfc.Blip, &_gbfbe); _adbf != nil {
					return _adbf
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042\u0075\u006c\u006c\u0065\u0074\u0020\u0025\u0076", _gbfbe.Name)
				if _ageeeb := d.Skip(); _ageeeb != nil {
					return _ageeeb
				}
			}
		case _b.EndElement:
			break _dfbag
		case _b.CharData:
		}
	}
	return nil
}
func (_ccfc *CT_Color) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ccfc.ScrgbClr != nil {
		_bbb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfc.ScrgbClr, _bbb)
	}
	if _ccfc.SrgbClr != nil {
		_ddcg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ccfc.SrgbClr, _ddcg)
	}
	if _ccfc.HslClr != nil {
		_gcgf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfc.HslClr, _gcgf)
	}
	if _ccfc.SysClr != nil {
		_beb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfc.SysClr, _beb)
	}
	if _ccfc.SchemeClr != nil {
		_dbbd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfc.SchemeClr, _dbbd)
	}
	if _ccfc.PrstClr != nil {
		_gdcca := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ccfc.PrstClr, _gdcca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eeabe *CT_FillEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eeabe.NoFill != nil {
		_aaaca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeabe.NoFill, _aaaca)
	}
	if _eeabe.SolidFill != nil {
		_egbdg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeabe.SolidFill, _egbdg)
	}
	if _eeabe.GradFill != nil {
		_fgabc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeabe.GradFill, _fgabc)
	}
	if _eeabe.BlipFill != nil {
		_abaeg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeabe.BlipFill, _abaeg)
	}
	if _eeabe.PattFill != nil {
		_ggfad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeabe.PattFill, _ggfad)
	}
	if _eeabe.GrpFill != nil {
		_ggbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_eeabe.GrpFill, _ggbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gffde ST_TextVertOverflowType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_caagae := _b.Attr{}
	_caagae.Name = name
	switch _gffde {
	case ST_TextVertOverflowTypeUnset:
		_caagae.Value = ""
	case ST_TextVertOverflowTypeOverflow:
		_caagae.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextVertOverflowTypeEllipsis:
		_caagae.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case ST_TextVertOverflowTypeClip:
		_caagae.Value = "\u0063\u006c\u0069\u0070"
	}
	return _caagae, nil
}

// ValidateWithPath validates the CT_AlphaFloorEffect and its children, prefixing error messages with path
func (_fega *CT_AlphaFloorEffect) ValidateWithPath(path string) error { return nil }
func NewCT_PresetTextShape() *CT_PresetTextShape {
	_bgbgf := &CT_PresetTextShape{}
	_bgbgf.PrstAttr = ST_TextShapeType(1)
	return _bgbgf
}

// Validate validates the CT_TextSpacingPercent and its children
func (_dgeb *CT_TextSpacingPercent) Validate() error {
	return _dgeb.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
}

type CT_TextParagraphProperties struct {
	MarLAttr         *int32
	MarRAttr         *int32
	LvlAttr          *int32
	IndentAttr       *int32
	AlgnAttr         ST_TextAlignType
	DefTabSzAttr     *ST_Coordinate32
	RtlAttr          *bool
	EaLnBrkAttr      *bool
	FontAlgnAttr     ST_TextFontAlignType
	LatinLnBrkAttr   *bool
	HangingPunctAttr *bool
	LnSpc            *CT_TextSpacing
	SpcBef           *CT_TextSpacing
	SpcAft           *CT_TextSpacing
	BuClrTx          *CT_TextBulletColorFollowText
	BuClr            *CT_Color
	BuSzTx           *CT_TextBulletSizeFollowText
	BuSzPct          *CT_TextBulletSizePercent
	BuSzPts          *CT_TextBulletSizePoint
	BuFontTx         *CT_TextBulletTypefaceFollowText
	BuFont           *CT_TextFont
	BuNone           *CT_TextNoBullet
	BuAutoNum        *CT_TextAutonumberBullet
	BuChar           *CT_TextCharBullet
	BuBlip           *CT_TextBlipBullet
	TabLst           *CT_TextTabStopList
	DefRPr           *CT_TextCharacterProperties
	ExtLst           *CT_OfficeArtExtensionList
}

func (_geaad *CT_PositivePercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _geaad.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_PenAlignment byte

// Validate validates the CT_TextUnderlineLineFollowText and its children
func (_bdbgc *CT_TextUnderlineLineFollowText) Validate() error {
	return _bdbgc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

// Validate validates the CT_BlendEffect and its children
func (_ebgf *CT_BlendEffect) Validate() error {
	return _ebgf.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074")
}
func (_cccgg ST_TextBulletSize) String() string {
	if _cccgg.ST_TextBulletSizePercent != nil {
		return _bb.Sprintf("\u0025\u0076", *_cccgg.ST_TextBulletSizePercent)
	}
	if _cccgg.ST_TextBulletSizeDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_cccgg.ST_TextBulletSizeDecimal)
	}
	return ""
}

type CT_BlurEffect struct {
	RadAttr  *int64
	GrowAttr *bool
}

func NewAG_Locking() *AG_Locking { _afgg := &AG_Locking{}; return _afgg }

// ValidateWithPath validates the CT_FillProperties and its children, prefixing error messages with path
func (_beecg *CT_FillProperties) ValidateWithPath(path string) error {
	if _beecg.NoFill != nil {
		if _dcgag := _beecg.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _dcgag != nil {
			return _dcgag
		}
	}
	if _beecg.SolidFill != nil {
		if _egfga := _beecg.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _egfga != nil {
			return _egfga
		}
	}
	if _beecg.GradFill != nil {
		if _bbaaa := _beecg.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bbaaa != nil {
			return _bbaaa
		}
	}
	if _beecg.BlipFill != nil {
		if _cfge := _beecg.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cfge != nil {
			return _cfge
		}
	}
	if _beecg.PattFill != nil {
		if _bbbbc := _beecg.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bbbbc != nil {
			return _bbbbc
		}
	}
	if _beecg.GrpFill != nil {
		if _gegc := _beecg.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gegc != nil {
			return _gegc
		}
	}
	return nil
}
func (_ecac *CT_ConnectorLocking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abda := range start.Attr {
		if _abda.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_affdb, _efecb := _a.ParseBool(_abda.Value)
			if _efecb != nil {
				return _efecb
			}
			_ecac.NoGrpAttr = &_affdb
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_fbafe, _adaa := _a.ParseBool(_abda.Value)
			if _adaa != nil {
				return _adaa
			}
			_ecac.NoSelectAttr = &_fbafe
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_edfc, _dgcga := _a.ParseBool(_abda.Value)
			if _dgcga != nil {
				return _dgcga
			}
			_ecac.NoRotAttr = &_edfc
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_geba, _eeed := _a.ParseBool(_abda.Value)
			if _eeed != nil {
				return _eeed
			}
			_ecac.NoChangeAspectAttr = &_geba
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_gfgfe, _gdcbd := _a.ParseBool(_abda.Value)
			if _gdcbd != nil {
				return _gdcbd
			}
			_ecac.NoMoveAttr = &_gfgfe
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_dba, _cacf := _a.ParseBool(_abda.Value)
			if _cacf != nil {
				return _cacf
			}
			_ecac.NoResizeAttr = &_dba
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_agbgb, _cfeg := _a.ParseBool(_abda.Value)
			if _cfeg != nil {
				return _cfeg
			}
			_ecac.NoEditPointsAttr = &_agbgb
			continue
		}
		if _abda.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_bgeg, _ffef := _a.ParseBool(_abda.Value)
			if _ffef != nil {
				return _ffef
			}
			_ecac.NoAdjustHandlesAttr = &_bgeg
			continue
		}
		if _abda.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_gdedd, _bcgca := _a.ParseBool(_abda.Value)
			if _bcgca != nil {
				return _bcgca
			}
			_ecac.NoChangeArrowheadsAttr = &_gdedd
			continue
		}
		if _abda.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_fbecc, _fcgb := _a.ParseBool(_abda.Value)
			if _fcgb != nil {
				return _fcgb
			}
			_ecac.NoChangeShapeTypeAttr = &_fbecc
			continue
		}
	}
_bbaad:
	for {
		_cgbd, _fbfbe := d.Token()
		if _fbfbe != nil {
			return _fbfbe
		}
		switch _ecdd := _cgbd.(type) {
		case _b.StartElement:
			switch _ecdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecac.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbege := d.DecodeElement(_ecac.ExtLst, &_ecdd); _bbege != nil {
					return _bbege
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074or\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _ecdd.Name)
				if _dceb := d.Skip(); _dceb != nil {
					return _dceb
				}
			}
		case _b.EndElement:
			break _bbaad
		case _b.CharData:
		}
	}
	return nil
}

type CT_FixedPercentage struct{ ValAttr ST_FixedPercentage }

func (_geaacf ST_BlipCompression) Validate() error { return _geaacf.ValidateWithPath("") }
func (_gaeee ST_Percentage) String() string {
	if _gaeee.ST_PercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_gaeee.ST_PercentageDecimal)
	}
	if _gaeee.ST_Percentage != nil {
		return _bb.Sprintf("\u0025\u0076", *_gaeee.ST_Percentage)
	}
	return ""
}
func NewCT_GradientStop() *CT_GradientStop { _feabg := &CT_GradientStop{}; return _feabg }

// Validate validates the Tbl and its children
func (_ffaad *Tbl) Validate() error { return _ffaad.ValidateWithPath("\u0054\u0062\u006c") }

// ValidateWithPath validates the CT_AlphaReplaceEffect and its children, prefixing error messages with path
func (_cdb *CT_AlphaReplaceEffect) ValidateWithPath(path string) error {
	if _afgd := _cdb.AAttr.ValidateWithPath(path + "\u002f\u0041\u0041\u0074\u0074\u0072"); _afgd != nil {
		return _afgd
	}
	return nil
}
func (_cgbccc ST_TextStrikeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cgbccc.String(), start)
}

type CT_GradientFillProperties struct {
	FlipAttr         ST_TileFlipMode
	RotWithShapeAttr *bool
	GsLst            *CT_GradientStopList
	Lin              *CT_LinearShadeProperties
	Path             *CT_PathShadeProperties
	TileRect         *CT_RelativeRect
}

func (_bebag ST_LineEndLength) Validate() error { return _bebag.ValidateWithPath("") }

// Validate validates the CT_LineEndProperties and its children
func (_daggb *CT_LineEndProperties) Validate() error {
	return _daggb.ValidateWithPath("C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073")
}
func (_ggfde *EG_ColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggfde.Tint != nil {
		_cdaab := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_ggfde.Tint, _cdaab)
	}
	if _ggfde.Shade != nil {
		_dbbac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0068\u0061\u0064\u0065"}}
		e.EncodeElement(_ggfde.Shade, _dbbac)
	}
	if _ggfde.Comp != nil {
		_gbddg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006f\u006d\u0070"}}
		e.EncodeElement(_ggfde.Comp, _gbddg)
	}
	if _ggfde.Inv != nil {
		_fbaea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0069n\u0076"}}
		e.EncodeElement(_ggfde.Inv, _fbaea)
	}
	if _ggfde.Gray != nil {
		_dbdgb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0079"}}
		e.EncodeElement(_ggfde.Gray, _dbdgb)
	}
	if _ggfde.Alpha != nil {
		_dcddg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u006c\u0070\u0068\u0061"}}
		e.EncodeElement(_ggfde.Alpha, _dcddg)
	}
	if _ggfde.AlphaOff != nil {
		_ccfbd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfde.AlphaOff, _ccfbd)
	}
	if _ggfde.AlphaMod != nil {
		_eagfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfde.AlphaMod, _eagfb)
	}
	if _ggfde.Hue != nil {
		_gfdcag := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068u\u0065"}}
		e.EncodeElement(_ggfde.Hue, _gfdcag)
	}
	if _ggfde.HueOff != nil {
		_edbdcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfde.HueOff, _edbdcc)
	}
	if _ggfde.HueMod != nil {
		_ebfbf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfde.HueMod, _ebfbf)
	}
	if _ggfde.Sat != nil {
		_ffddg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073a\u0074"}}
		e.EncodeElement(_ggfde.Sat, _ffddg)
	}
	if _ggfde.SatOff != nil {
		_deacf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfde.SatOff, _deacf)
	}
	if _ggfde.SatMod != nil {
		_afaac := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfde.SatMod, _afaac)
	}
	if _ggfde.Lum != nil {
		_ecccd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_ggfde.Lum, _ecccd)
	}
	if _ggfde.LumOff != nil {
		_baedca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfde.LumOff, _baedca)
	}
	if _ggfde.LumMod != nil {
		_dcffe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfde.LumMod, _dcffe)
	}
	if _ggfde.Red != nil {
		_gagdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072e\u0064"}}
		e.EncodeElement(_ggfde.Red, _gagdf)
	}
	if _ggfde.RedOff != nil {
		_abage := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfde.RedOff, _abage)
	}
	if _ggfde.RedMod != nil {
		_eeedc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfde.RedMod, _eeedc)
	}
	if _ggfde.Green != nil {
		_egdbb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0065\u0065\u006e"}}
		e.EncodeElement(_ggfde.Green, _egdbb)
	}
	if _ggfde.GreenOff != nil {
		_bbddd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}}
		e.EncodeElement(_ggfde.GreenOff, _bbddd)
	}
	if _ggfde.GreenMod != nil {
		_dfbbcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}}
		e.EncodeElement(_ggfde.GreenMod, _dfbbcd)
	}
	if _ggfde.Blue != nil {
		_fbgf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0065"}}
		e.EncodeElement(_ggfde.Blue, _fbgf)
	}
	if _ggfde.BlueOff != nil {
		_fcaab := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004f\u0066f"}}
		e.EncodeElement(_ggfde.BlueOff, _fcaab)
	}
	if _ggfde.BlueMod != nil {
		_fdebf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004d\u006fd"}}
		e.EncodeElement(_ggfde.BlueMod, _fdebf)
	}
	if _ggfde.Gamma != nil {
		_fcee := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_ggfde.Gamma, _fcee)
	}
	if _ggfde.InvGamma != nil {
		_ffgbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_ggfde.InvGamma, _ffgbe)
	}
	return nil
}
func (_dfgef *ST_TextShapeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dfgef = 0
	case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
		*_dfgef = 1
	case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
		*_dfgef = 2
	case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
		*_dfgef = 3
	case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_dfgef = 4
	case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
		*_dfgef = 5
	case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
		*_dfgef = 6
	case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
		*_dfgef = 7
	case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
		*_dfgef = 8
	case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
		*_dfgef = 9
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
		*_dfgef = 10
	case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
		*_dfgef = 11
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
		*_dfgef = 12
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
		*_dfgef = 13
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
		*_dfgef = 14
	case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
		*_dfgef = 15
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
		*_dfgef = 16
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
		*_dfgef = 17
	case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
		*_dfgef = 18
	case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
		*_dfgef = 19
	case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
		*_dfgef = 20
	case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
		*_dfgef = 21
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
		*_dfgef = 22
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
		*_dfgef = 23
	case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
		*_dfgef = 24
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
		*_dfgef = 25
	case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
		*_dfgef = 26
	case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
		*_dfgef = 27
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_dfgef = 28
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_dfgef = 29
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_dfgef = 30
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_dfgef = 31
	case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
		*_dfgef = 32
	case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
		*_dfgef = 33
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
		*_dfgef = 34
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
		*_dfgef = 35
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
		*_dfgef = 36
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_dfgef = 37
	case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
		*_dfgef = 38
	case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
		*_dfgef = 39
	case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
		*_dfgef = 40
	case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_dfgef = 41
	}
	return nil
}
func (_cdgge *ST_TextAutonumberScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_addgd, _cabba := d.Token()
	if _cabba != nil {
		return _cabba
	}
	if _cdecef, _fdff := _addgd.(_b.EndElement); _fdff && _cdecef.Name == start.Name {
		*_cdgge = 1
		return nil
	}
	if _deeba, _eccgb := _addgd.(_b.CharData); !_eccgb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _addgd)
	} else {
		switch string(_deeba) {
		case "":
			*_cdgge = 0
		case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 1
		case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 2
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 3
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 4
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 5
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 6
		case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 7
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 8
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 9
		case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 10
		case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 11
		case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 12
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 13
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 14
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 15
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 16
		case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 17
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 18
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 19
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_cdgge = 20
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 21
		case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 22
		case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 23
		case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 24
		case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
			*_cdgge = 25
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_cdgge = 26
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
			*_cdgge = 27
		case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 28
		case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
			*_cdgge = 29
		case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
			*_cdgge = 30
		case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
			*_cdgge = 31
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 32
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 33
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 34
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 35
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
			*_cdgge = 36
		case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_cdgge = 37
		case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_cdgge = 38
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
			*_cdgge = 39
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
			*_cdgge = 40
		case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
			*_cdgge = 41
		}
	}
	_addgd, _cabba = d.Token()
	if _cabba != nil {
		return _cabba
	}
	if _ebgdda, _ebfcg := _addgd.(_b.EndElement); _ebfcg && _ebgdda.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _addgd)
}

// ValidateWithPath validates the CT_TextCharacterProperties and its children, prefixing error messages with path
func (_egcfa *CT_TextCharacterProperties) ValidateWithPath(path string) error {
	if _egcfa.SzAttr != nil {
		if *_egcfa.SzAttr < 100 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u0053\u007aA\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0031\u00300 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_egcfa.SzAttr)
		}
		if *_egcfa.SzAttr > 400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u007a\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_egcfa.SzAttr)
		}
	}
	if _decb := _egcfa.UAttr.ValidateWithPath(path + "\u002f\u0055\u0041\u0074\u0074\u0072"); _decb != nil {
		return _decb
	}
	if _ebdd := _egcfa.StrikeAttr.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0041\u0074\u0074\u0072"); _ebdd != nil {
		return _ebdd
	}
	if _egcfa.KernAttr != nil {
		if *_egcfa.KernAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u004b\u0065r\u006e\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_egcfa.KernAttr)
		}
		if *_egcfa.KernAttr > 400000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eK\u0065\u0072\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_egcfa.KernAttr)
		}
	}
	if _fegca := _egcfa.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _fegca != nil {
		return _fegca
	}
	if _egcfa.SpcAttr != nil {
		if _agbbf := _egcfa.SpcAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _agbbf != nil {
			return _agbbf
		}
	}
	if _egcfa.BaselineAttr != nil {
		if _dcedb := _egcfa.BaselineAttr.ValidateWithPath(path + "\u002f\u0042\u0061\u0073\u0065\u006c\u0069\u006e\u0065\u0041\u0074\u0074\u0072"); _dcedb != nil {
			return _dcedb
		}
	}
	if _egcfa.Ln != nil {
		if _bbgbf := _egcfa.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _bbgbf != nil {
			return _bbgbf
		}
	}
	if _egcfa.NoFill != nil {
		if _cbgag := _egcfa.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cbgag != nil {
			return _cbgag
		}
	}
	if _egcfa.SolidFill != nil {
		if _aceaf := _egcfa.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _aceaf != nil {
			return _aceaf
		}
	}
	if _egcfa.GradFill != nil {
		if _daaga := _egcfa.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _daaga != nil {
			return _daaga
		}
	}
	if _egcfa.BlipFill != nil {
		if _ebbcc := _egcfa.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ebbcc != nil {
			return _ebbcc
		}
	}
	if _egcfa.PattFill != nil {
		if _adcb := _egcfa.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _adcb != nil {
			return _adcb
		}
	}
	if _egcfa.GrpFill != nil {
		if _ccef := _egcfa.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _ccef != nil {
			return _ccef
		}
	}
	if _egcfa.EffectLst != nil {
		if _gacbe := _egcfa.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gacbe != nil {
			return _gacbe
		}
	}
	if _egcfa.EffectDag != nil {
		if _bddc := _egcfa.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bddc != nil {
			return _bddc
		}
	}
	if _egcfa.Highlight != nil {
		if _feeaa := _egcfa.Highlight.ValidateWithPath(path + "\u002f\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"); _feeaa != nil {
			return _feeaa
		}
	}
	if _egcfa.ULnTx != nil {
		if _cbdea := _egcfa.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _cbdea != nil {
			return _cbdea
		}
	}
	if _egcfa.ULn != nil {
		if _ceeb := _egcfa.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _ceeb != nil {
			return _ceeb
		}
	}
	if _egcfa.UFillTx != nil {
		if _bgcfbf := _egcfa.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _bgcfbf != nil {
			return _bgcfbf
		}
	}
	if _egcfa.UFill != nil {
		if _afbfa := _egcfa.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _afbfa != nil {
			return _afbfa
		}
	}
	if _egcfa.Latin != nil {
		if _bcfgc := _egcfa.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _bcfgc != nil {
			return _bcfgc
		}
	}
	if _egcfa.Ea != nil {
		if _gcffd := _egcfa.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _gcffd != nil {
			return _gcffd
		}
	}
	if _egcfa.Cs != nil {
		if _gdeec := _egcfa.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _gdeec != nil {
			return _gdeec
		}
	}
	if _egcfa.Sym != nil {
		if _ageca := _egcfa.Sym.ValidateWithPath(path + "\u002f\u0053\u0079\u006d"); _ageca != nil {
			return _ageca
		}
	}
	if _egcfa.HlinkClick != nil {
		if _ebgeg := _egcfa.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _ebgeg != nil {
			return _ebgeg
		}
	}
	if _egcfa.HlinkMouseOver != nil {
		if _dgbff := _egcfa.HlinkMouseOver.ValidateWithPath(path + "\u002fH\u006ci\u006e\u006b\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"); _dgbff != nil {
			return _dgbff
		}
	}
	if _egcfa.Rtl != nil {
		if _ggcgd := _egcfa.Rtl.ValidateWithPath(path + "\u002f\u0052\u0074\u006c"); _ggcgd != nil {
			return _ggcgd
		}
	}
	if _egcfa.ExtLst != nil {
		if _cadf := _egcfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cadf != nil {
			return _cadf
		}
	}
	return nil
}
func (_cfgfe ST_TextVertOverflowType) String() string {
	switch _cfgfe {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case 3:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

type Any interface {
	MarshalXML(_ebdea *_b.Encoder, _egaaf _b.StartElement) error
	UnmarshalXML(_dded *_b.Decoder, _fagbc _b.StartElement) error
}

// ValidateWithPath validates the CT_BackgroundFillStyleList and its children, prefixing error messages with path
func (_cfbe *CT_BackgroundFillStyleList) ValidateWithPath(path string) error {
	for _daac, _gcbb := range _cfbe.EG_FillProperties {
		if _gef := _gcbb.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _daac)); _gef != nil {
			return _gef
		}
	}
	return nil
}

type CT_Path2DArcTo struct {
	WRAttr    ST_AdjCoordinate
	HRAttr    ST_AdjCoordinate
	StAngAttr ST_AdjAngle
	SwAngAttr ST_AdjAngle
}
type CT_TableStyle struct {
	StyleIdAttr   string
	StyleNameAttr string
	TblBg         *CT_TableBackgroundStyle
	WholeTbl      *CT_TablePartStyle
	Band1H        *CT_TablePartStyle
	Band2H        *CT_TablePartStyle
	Band1V        *CT_TablePartStyle
	Band2V        *CT_TablePartStyle
	LastCol       *CT_TablePartStyle
	FirstCol      *CT_TablePartStyle
	LastRow       *CT_TablePartStyle
	SeCell        *CT_TablePartStyle
	SwCell        *CT_TablePartStyle
	FirstRow      *CT_TablePartStyle
	NeCell        *CT_TablePartStyle
	NwCell        *CT_TablePartStyle
	ExtLst        *CT_OfficeArtExtensionList
}

func (_deaafe ST_FixedPercentage) String() string {
	if _deaafe.ST_FixedPercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_deaafe.ST_FixedPercentageDecimal)
	}
	if _deaafe.ST_FixedPercentage != nil {
		return _deaafe.ST_FixedPercentage.String()
	}
	return ""
}

// Validate validates the CT_StretchInfoProperties and its children
func (_ecdbc *CT_StretchInfoProperties) Validate() error {
	return _ecdbc.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_BlendEffect struct {
	BlendAttr ST_BlendMode
	Cont      *CT_EffectContainer
}

func (_adfgfg *CT_TextParagraph) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _adfgfg.PPr != nil {
		_ddecbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_adfgfg.PPr, _ddecbc)
	}
	if _adfgfg.EG_TextRun != nil {
		for _, _bcbec := range _adfgfg.EG_TextRun {
			_bcbec.MarshalXML(e, _b.StartElement{})
		}
	}
	if _adfgfg.EndParaRPr != nil {
		_abfgc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065n\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}}
		e.EncodeElement(_adfgfg.EndParaRPr, _abfgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableStyle and its children
func (_cbcgc *CT_TableStyle) Validate() error {
	return _cbcgc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_fcfea ST_LineEndLength) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcfea.String(), start)
}

const (
	ST_ShapeTypeUnset                      ST_ShapeType = 0
	ST_ShapeTypeLine                       ST_ShapeType = 1
	ST_ShapeTypeLineInv                    ST_ShapeType = 2
	ST_ShapeTypeTriangle                   ST_ShapeType = 3
	ST_ShapeTypeRtTriangle                 ST_ShapeType = 4
	ST_ShapeTypeRect                       ST_ShapeType = 5
	ST_ShapeTypeDiamond                    ST_ShapeType = 6
	ST_ShapeTypeParallelogram              ST_ShapeType = 7
	ST_ShapeTypeTrapezoid                  ST_ShapeType = 8
	ST_ShapeTypeNonIsoscelesTrapezoid      ST_ShapeType = 9
	ST_ShapeTypePentagon                   ST_ShapeType = 10
	ST_ShapeTypeHexagon                    ST_ShapeType = 11
	ST_ShapeTypeHeptagon                   ST_ShapeType = 12
	ST_ShapeTypeOctagon                    ST_ShapeType = 13
	ST_ShapeTypeDecagon                    ST_ShapeType = 14
	ST_ShapeTypeDodecagon                  ST_ShapeType = 15
	ST_ShapeTypeStar4                      ST_ShapeType = 16
	ST_ShapeTypeStar5                      ST_ShapeType = 17
	ST_ShapeTypeStar6                      ST_ShapeType = 18
	ST_ShapeTypeStar7                      ST_ShapeType = 19
	ST_ShapeTypeStar8                      ST_ShapeType = 20
	ST_ShapeTypeStar10                     ST_ShapeType = 21
	ST_ShapeTypeStar12                     ST_ShapeType = 22
	ST_ShapeTypeStar16                     ST_ShapeType = 23
	ST_ShapeTypeStar24                     ST_ShapeType = 24
	ST_ShapeTypeStar32                     ST_ShapeType = 25
	ST_ShapeTypeRoundRect                  ST_ShapeType = 26
	ST_ShapeTypeRound1Rect                 ST_ShapeType = 27
	ST_ShapeTypeRound2SameRect             ST_ShapeType = 28
	ST_ShapeTypeRound2DiagRect             ST_ShapeType = 29
	ST_ShapeTypeSnipRoundRect              ST_ShapeType = 30
	ST_ShapeTypeSnip1Rect                  ST_ShapeType = 31
	ST_ShapeTypeSnip2SameRect              ST_ShapeType = 32
	ST_ShapeTypeSnip2DiagRect              ST_ShapeType = 33
	ST_ShapeTypePlaque                     ST_ShapeType = 34
	ST_ShapeTypeEllipse                    ST_ShapeType = 35
	ST_ShapeTypeTeardrop                   ST_ShapeType = 36
	ST_ShapeTypeHomePlate                  ST_ShapeType = 37
	ST_ShapeTypeChevron                    ST_ShapeType = 38
	ST_ShapeTypePieWedge                   ST_ShapeType = 39
	ST_ShapeTypePie                        ST_ShapeType = 40
	ST_ShapeTypeBlockArc                   ST_ShapeType = 41
	ST_ShapeTypeDonut                      ST_ShapeType = 42
	ST_ShapeTypeNoSmoking                  ST_ShapeType = 43
	ST_ShapeTypeRightArrow                 ST_ShapeType = 44
	ST_ShapeTypeLeftArrow                  ST_ShapeType = 45
	ST_ShapeTypeUpArrow                    ST_ShapeType = 46
	ST_ShapeTypeDownArrow                  ST_ShapeType = 47
	ST_ShapeTypeStripedRightArrow          ST_ShapeType = 48
	ST_ShapeTypeNotchedRightArrow          ST_ShapeType = 49
	ST_ShapeTypeBentUpArrow                ST_ShapeType = 50
	ST_ShapeTypeLeftRightArrow             ST_ShapeType = 51
	ST_ShapeTypeUpDownArrow                ST_ShapeType = 52
	ST_ShapeTypeLeftUpArrow                ST_ShapeType = 53
	ST_ShapeTypeLeftRightUpArrow           ST_ShapeType = 54
	ST_ShapeTypeQuadArrow                  ST_ShapeType = 55
	ST_ShapeTypeLeftArrowCallout           ST_ShapeType = 56
	ST_ShapeTypeRightArrowCallout          ST_ShapeType = 57
	ST_ShapeTypeUpArrowCallout             ST_ShapeType = 58
	ST_ShapeTypeDownArrowCallout           ST_ShapeType = 59
	ST_ShapeTypeLeftRightArrowCallout      ST_ShapeType = 60
	ST_ShapeTypeUpDownArrowCallout         ST_ShapeType = 61
	ST_ShapeTypeQuadArrowCallout           ST_ShapeType = 62
	ST_ShapeTypeBentArrow                  ST_ShapeType = 63
	ST_ShapeTypeUturnArrow                 ST_ShapeType = 64
	ST_ShapeTypeCircularArrow              ST_ShapeType = 65
	ST_ShapeTypeLeftCircularArrow          ST_ShapeType = 66
	ST_ShapeTypeLeftRightCircularArrow     ST_ShapeType = 67
	ST_ShapeTypeCurvedRightArrow           ST_ShapeType = 68
	ST_ShapeTypeCurvedLeftArrow            ST_ShapeType = 69
	ST_ShapeTypeCurvedUpArrow              ST_ShapeType = 70
	ST_ShapeTypeCurvedDownArrow            ST_ShapeType = 71
	ST_ShapeTypeSwooshArrow                ST_ShapeType = 72
	ST_ShapeTypeCube                       ST_ShapeType = 73
	ST_ShapeTypeCan                        ST_ShapeType = 74
	ST_ShapeTypeLightningBolt              ST_ShapeType = 75
	ST_ShapeTypeHeart                      ST_ShapeType = 76
	ST_ShapeTypeSun                        ST_ShapeType = 77
	ST_ShapeTypeMoon                       ST_ShapeType = 78
	ST_ShapeTypeSmileyFace                 ST_ShapeType = 79
	ST_ShapeTypeIrregularSeal1             ST_ShapeType = 80
	ST_ShapeTypeIrregularSeal2             ST_ShapeType = 81
	ST_ShapeTypeFoldedCorner               ST_ShapeType = 82
	ST_ShapeTypeBevel                      ST_ShapeType = 83
	ST_ShapeTypeFrame                      ST_ShapeType = 84
	ST_ShapeTypeHalfFrame                  ST_ShapeType = 85
	ST_ShapeTypeCorner                     ST_ShapeType = 86
	ST_ShapeTypeDiagStripe                 ST_ShapeType = 87
	ST_ShapeTypeChord                      ST_ShapeType = 88
	ST_ShapeTypeArc                        ST_ShapeType = 89
	ST_ShapeTypeLeftBracket                ST_ShapeType = 90
	ST_ShapeTypeRightBracket               ST_ShapeType = 91
	ST_ShapeTypeLeftBrace                  ST_ShapeType = 92
	ST_ShapeTypeRightBrace                 ST_ShapeType = 93
	ST_ShapeTypeBracketPair                ST_ShapeType = 94
	ST_ShapeTypeBracePair                  ST_ShapeType = 95
	ST_ShapeTypeStraightConnector1         ST_ShapeType = 96
	ST_ShapeTypeBentConnector2             ST_ShapeType = 97
	ST_ShapeTypeBentConnector3             ST_ShapeType = 98
	ST_ShapeTypeBentConnector4             ST_ShapeType = 99
	ST_ShapeTypeBentConnector5             ST_ShapeType = 100
	ST_ShapeTypeCurvedConnector2           ST_ShapeType = 101
	ST_ShapeTypeCurvedConnector3           ST_ShapeType = 102
	ST_ShapeTypeCurvedConnector4           ST_ShapeType = 103
	ST_ShapeTypeCurvedConnector5           ST_ShapeType = 104
	ST_ShapeTypeCallout1                   ST_ShapeType = 105
	ST_ShapeTypeCallout2                   ST_ShapeType = 106
	ST_ShapeTypeCallout3                   ST_ShapeType = 107
	ST_ShapeTypeAccentCallout1             ST_ShapeType = 108
	ST_ShapeTypeAccentCallout2             ST_ShapeType = 109
	ST_ShapeTypeAccentCallout3             ST_ShapeType = 110
	ST_ShapeTypeBorderCallout1             ST_ShapeType = 111
	ST_ShapeTypeBorderCallout2             ST_ShapeType = 112
	ST_ShapeTypeBorderCallout3             ST_ShapeType = 113
	ST_ShapeTypeAccentBorderCallout1       ST_ShapeType = 114
	ST_ShapeTypeAccentBorderCallout2       ST_ShapeType = 115
	ST_ShapeTypeAccentBorderCallout3       ST_ShapeType = 116
	ST_ShapeTypeWedgeRectCallout           ST_ShapeType = 117
	ST_ShapeTypeWedgeRoundRectCallout      ST_ShapeType = 118
	ST_ShapeTypeWedgeEllipseCallout        ST_ShapeType = 119
	ST_ShapeTypeCloudCallout               ST_ShapeType = 120
	ST_ShapeTypeCloud                      ST_ShapeType = 121
	ST_ShapeTypeRibbon                     ST_ShapeType = 122
	ST_ShapeTypeRibbon2                    ST_ShapeType = 123
	ST_ShapeTypeEllipseRibbon              ST_ShapeType = 124
	ST_ShapeTypeEllipseRibbon2             ST_ShapeType = 125
	ST_ShapeTypeLeftRightRibbon            ST_ShapeType = 126
	ST_ShapeTypeVerticalScroll             ST_ShapeType = 127
	ST_ShapeTypeHorizontalScroll           ST_ShapeType = 128
	ST_ShapeTypeWave                       ST_ShapeType = 129
	ST_ShapeTypeDoubleWave                 ST_ShapeType = 130
	ST_ShapeTypePlus                       ST_ShapeType = 131
	ST_ShapeTypeFlowChartProcess           ST_ShapeType = 132
	ST_ShapeTypeFlowChartDecision          ST_ShapeType = 133
	ST_ShapeTypeFlowChartInputOutput       ST_ShapeType = 134
	ST_ShapeTypeFlowChartPredefinedProcess ST_ShapeType = 135
	ST_ShapeTypeFlowChartInternalStorage   ST_ShapeType = 136
	ST_ShapeTypeFlowChartDocument          ST_ShapeType = 137
	ST_ShapeTypeFlowChartMultidocument     ST_ShapeType = 138
	ST_ShapeTypeFlowChartTerminator        ST_ShapeType = 139
	ST_ShapeTypeFlowChartPreparation       ST_ShapeType = 140
	ST_ShapeTypeFlowChartManualInput       ST_ShapeType = 141
	ST_ShapeTypeFlowChartManualOperation   ST_ShapeType = 142
	ST_ShapeTypeFlowChartConnector         ST_ShapeType = 143
	ST_ShapeTypeFlowChartPunchedCard       ST_ShapeType = 144
	ST_ShapeTypeFlowChartPunchedTape       ST_ShapeType = 145
	ST_ShapeTypeFlowChartSummingJunction   ST_ShapeType = 146
	ST_ShapeTypeFlowChartOr                ST_ShapeType = 147
	ST_ShapeTypeFlowChartCollate           ST_ShapeType = 148
	ST_ShapeTypeFlowChartSort              ST_ShapeType = 149
	ST_ShapeTypeFlowChartExtract           ST_ShapeType = 150
	ST_ShapeTypeFlowChartMerge             ST_ShapeType = 151
	ST_ShapeTypeFlowChartOfflineStorage    ST_ShapeType = 152
	ST_ShapeTypeFlowChartOnlineStorage     ST_ShapeType = 153
	ST_ShapeTypeFlowChartMagneticTape      ST_ShapeType = 154
	ST_ShapeTypeFlowChartMagneticDisk      ST_ShapeType = 155
	ST_ShapeTypeFlowChartMagneticDrum      ST_ShapeType = 156
	ST_ShapeTypeFlowChartDisplay           ST_ShapeType = 157
	ST_ShapeTypeFlowChartDelay             ST_ShapeType = 158
	ST_ShapeTypeFlowChartAlternateProcess  ST_ShapeType = 159
	ST_ShapeTypeFlowChartOffpageConnector  ST_ShapeType = 160
	ST_ShapeTypeActionButtonBlank          ST_ShapeType = 161
	ST_ShapeTypeActionButtonHome           ST_ShapeType = 162
	ST_ShapeTypeActionButtonHelp           ST_ShapeType = 163
	ST_ShapeTypeActionButtonInformation    ST_ShapeType = 164
	ST_ShapeTypeActionButtonForwardNext    ST_ShapeType = 165
	ST_ShapeTypeActionButtonBackPrevious   ST_ShapeType = 166
	ST_ShapeTypeActionButtonEnd            ST_ShapeType = 167
	ST_ShapeTypeActionButtonBeginning      ST_ShapeType = 168
	ST_ShapeTypeActionButtonReturn         ST_ShapeType = 169
	ST_ShapeTypeActionButtonDocument       ST_ShapeType = 170
	ST_ShapeTypeActionButtonSound          ST_ShapeType = 171
	ST_ShapeTypeActionButtonMovie          ST_ShapeType = 172
	ST_ShapeTypeGear6                      ST_ShapeType = 173
	ST_ShapeTypeGear9                      ST_ShapeType = 174
	ST_ShapeTypeFunnel                     ST_ShapeType = 175
	ST_ShapeTypeMathPlus                   ST_ShapeType = 176
	ST_ShapeTypeMathMinus                  ST_ShapeType = 177
	ST_ShapeTypeMathMultiply               ST_ShapeType = 178
	ST_ShapeTypeMathDivide                 ST_ShapeType = 179
	ST_ShapeTypeMathEqual                  ST_ShapeType = 180
	ST_ShapeTypeMathNotEqual               ST_ShapeType = 181
	ST_ShapeTypeCornerTabs                 ST_ShapeType = 182
	ST_ShapeTypeSquareTabs                 ST_ShapeType = 183
	ST_ShapeTypePlaqueTabs                 ST_ShapeType = 184
	ST_ShapeTypeChartX                     ST_ShapeType = 185
	ST_ShapeTypeChartStar                  ST_ShapeType = 186
	ST_ShapeTypeChartPlus                  ST_ShapeType = 187
)

type AG_Blob struct {
	EmbedAttr *string
	LinkAttr  *string
}
type ST_LineEndType byte

func (_dbcfg ST_PresetColorVal) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdfaa := _b.Attr{}
	_bdfaa.Name = name
	switch _dbcfg {
	case ST_PresetColorValUnset:
		_bdfaa.Value = ""
	case ST_PresetColorValAliceBlue:
		_bdfaa.Value = "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValAntiqueWhite:
		_bdfaa.Value = "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValAqua:
		_bdfaa.Value = "\u0061\u0071\u0075\u0061"
	case ST_PresetColorValAquamarine:
		_bdfaa.Value = "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValAzure:
		_bdfaa.Value = "\u0061\u007a\u0075r\u0065"
	case ST_PresetColorValBeige:
		_bdfaa.Value = "\u0062\u0065\u0069g\u0065"
	case ST_PresetColorValBisque:
		_bdfaa.Value = "\u0062\u0069\u0073\u0071\u0075\u0065"
	case ST_PresetColorValBlack:
		_bdfaa.Value = "\u0062\u006c\u0061c\u006b"
	case ST_PresetColorValBlanchedAlmond:
		_bdfaa.Value = "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case ST_PresetColorValBlue:
		_bdfaa.Value = "\u0062\u006c\u0075\u0065"
	case ST_PresetColorValBlueViolet:
		_bdfaa.Value = "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValBrown:
		_bdfaa.Value = "\u0062\u0072\u006fw\u006e"
	case ST_PresetColorValBurlyWood:
		_bdfaa.Value = "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case ST_PresetColorValCadetBlue:
		_bdfaa.Value = "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValChartreuse:
		_bdfaa.Value = "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case ST_PresetColorValChocolate:
		_bdfaa.Value = "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case ST_PresetColorValCoral:
		_bdfaa.Value = "\u0063\u006f\u0072a\u006c"
	case ST_PresetColorValCornflowerBlue:
		_bdfaa.Value = "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case ST_PresetColorValCornsilk:
		_bdfaa.Value = "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case ST_PresetColorValCrimson:
		_bdfaa.Value = "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case ST_PresetColorValCyan:
		_bdfaa.Value = "\u0063\u0079\u0061\u006e"
	case ST_PresetColorValDarkBlue:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkCyan:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDarkGoldenrod:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDarkGray:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkGrey:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkGreen:
		_bdfaa.Value = "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValDarkKhaki:
		_bdfaa.Value = "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case ST_PresetColorValDarkMagenta:
		_bdfaa.Value = "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValDarkOliveGreen:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkOrange:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDarkOrchid:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDarkRed:
		_bdfaa.Value = "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case ST_PresetColorValDarkSalmon:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDarkSeaGreen:
		_bdfaa.Value = "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkSlateBlue:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkSlateGray:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkSlateGrey:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkTurquoise:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDarkViolet:
		_bdfaa.Value = "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDkBlue:
		_bdfaa.Value = "\u0064\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkCyan:
		_bdfaa.Value = "\u0064\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDkGoldenrod:
		_bdfaa.Value = "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDkGray:
		_bdfaa.Value = "\u0064\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkGrey:
		_bdfaa.Value = "\u0064\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkGreen:
		_bdfaa.Value = "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkKhaki:
		_bdfaa.Value = "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case ST_PresetColorValDkMagenta:
		_bdfaa.Value = "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case ST_PresetColorValDkOliveGreen:
		_bdfaa.Value = "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkOrange:
		_bdfaa.Value = "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDkOrchid:
		_bdfaa.Value = "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDkRed:
		_bdfaa.Value = "\u0064\u006b\u0052e\u0064"
	case ST_PresetColorValDkSalmon:
		_bdfaa.Value = "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDkSeaGreen:
		_bdfaa.Value = "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkSlateBlue:
		_bdfaa.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkSlateGray:
		_bdfaa.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkSlateGrey:
		_bdfaa.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkTurquoise:
		_bdfaa.Value = "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDkViolet:
		_bdfaa.Value = "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDeepPink:
		_bdfaa.Value = "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case ST_PresetColorValDeepSkyBlue:
		_bdfaa.Value = "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDimGray:
		_bdfaa.Value = "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDimGrey:
		_bdfaa.Value = "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDodgerBlue:
		_bdfaa.Value = "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValFirebrick:
		_bdfaa.Value = "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case ST_PresetColorValFloralWhite:
		_bdfaa.Value = "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValForestGreen:
		_bdfaa.Value = "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValFuchsia:
		_bdfaa.Value = "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case ST_PresetColorValGainsboro:
		_bdfaa.Value = "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case ST_PresetColorValGhostWhite:
		_bdfaa.Value = "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValGold:
		_bdfaa.Value = "\u0067\u006f\u006c\u0064"
	case ST_PresetColorValGoldenrod:
		_bdfaa.Value = "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case ST_PresetColorValGray:
		_bdfaa.Value = "\u0067\u0072\u0061\u0079"
	case ST_PresetColorValGrey:
		_bdfaa.Value = "\u0067\u0072\u0065\u0079"
	case ST_PresetColorValGreen:
		_bdfaa.Value = "\u0067\u0072\u0065e\u006e"
	case ST_PresetColorValGreenYellow:
		_bdfaa.Value = "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValHoneydew:
		_bdfaa.Value = "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case ST_PresetColorValHotPink:
		_bdfaa.Value = "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValIndianRed:
		_bdfaa.Value = "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case ST_PresetColorValIndigo:
		_bdfaa.Value = "\u0069\u006e\u0064\u0069\u0067\u006f"
	case ST_PresetColorValIvory:
		_bdfaa.Value = "\u0069\u0076\u006fr\u0079"
	case ST_PresetColorValKhaki:
		_bdfaa.Value = "\u006b\u0068\u0061k\u0069"
	case ST_PresetColorValLavender:
		_bdfaa.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case ST_PresetColorValLavenderBlush:
		_bdfaa.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case ST_PresetColorValLawnGreen:
		_bdfaa.Value = "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLemonChiffon:
		_bdfaa.Value = "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case ST_PresetColorValLightBlue:
		_bdfaa.Value = "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValLightCoral:
		_bdfaa.Value = "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLightCyan:
		_bdfaa.Value = "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case ST_PresetColorValLightGoldenrodYellow:
		_bdfaa.Value = "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case ST_PresetColorValLightGray:
		_bdfaa.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PresetColorValLightGrey:
		_bdfaa.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case ST_PresetColorValLightGreen:
		_bdfaa.Value = "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightPink:
		_bdfaa.Value = "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case ST_PresetColorValLightSalmon:
		_bdfaa.Value = "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLightSeaGreen:
		_bdfaa.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightSkyBlue:
		_bdfaa.Value = "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightSlateGray:
		_bdfaa.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLightSlateGrey:
		_bdfaa.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLightSteelBlue:
		_bdfaa.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightYellow:
		_bdfaa.Value = "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtBlue:
		_bdfaa.Value = "\u006c\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtCoral:
		_bdfaa.Value = "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLtCyan:
		_bdfaa.Value = "\u006c\u0074\u0043\u0079\u0061\u006e"
	case ST_PresetColorValLtGoldenrodYellow:
		_bdfaa.Value = "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtGray:
		_bdfaa.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtGrey:
		_bdfaa.Value = "\u006c\u0074\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtGreen:
		_bdfaa.Value = "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtPink:
		_bdfaa.Value = "\u006c\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValLtSalmon:
		_bdfaa.Value = "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLtSeaGreen:
		_bdfaa.Value = "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtSkyBlue:
		_bdfaa.Value = "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case ST_PresetColorValLtSlateGray:
		_bdfaa.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtSlateGrey:
		_bdfaa.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtSteelBlue:
		_bdfaa.Value = "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtYellow:
		_bdfaa.Value = "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLime:
		_bdfaa.Value = "\u006c\u0069\u006d\u0065"
	case ST_PresetColorValLimeGreen:
		_bdfaa.Value = "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLinen:
		_bdfaa.Value = "\u006c\u0069\u006ee\u006e"
	case ST_PresetColorValMagenta:
		_bdfaa.Value = "\u006da\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValMaroon:
		_bdfaa.Value = "\u006d\u0061\u0072\u006f\u006f\u006e"
	case ST_PresetColorValMedAquamarine:
		_bdfaa.Value = "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMedBlue:
		_bdfaa.Value = "\u006de\u0064\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedOrchid:
		_bdfaa.Value = "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case ST_PresetColorValMedPurple:
		_bdfaa.Value = "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case ST_PresetColorValMedSeaGreen:
		_bdfaa.Value = "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedSlateBlue:
		_bdfaa.Value = "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedSpringGreen:
		_bdfaa.Value = "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedTurquoise:
		_bdfaa.Value = "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMedVioletRed:
		_bdfaa.Value = "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMediumAquamarine:
		_bdfaa.Value = "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMediumBlue:
		_bdfaa.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumOrchid:
		_bdfaa.Value = "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValMediumPurple:
		_bdfaa.Value = "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValMediumSeaGreen:
		_bdfaa.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumSlateBlue:
		_bdfaa.Value = "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumSpringGreen:
		_bdfaa.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumTurquoise:
		_bdfaa.Value = "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMediumVioletRed:
		_bdfaa.Value = "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMidnightBlue:
		_bdfaa.Value = "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMintCream:
		_bdfaa.Value = "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case ST_PresetColorValMistyRose:
		_bdfaa.Value = "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case ST_PresetColorValMoccasin:
		_bdfaa.Value = "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case ST_PresetColorValNavajoWhite:
		_bdfaa.Value = "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValNavy:
		_bdfaa.Value = "\u006e\u0061\u0076\u0079"
	case ST_PresetColorValOldLace:
		_bdfaa.Value = "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case ST_PresetColorValOlive:
		_bdfaa.Value = "\u006f\u006c\u0069v\u0065"
	case ST_PresetColorValOliveDrab:
		_bdfaa.Value = "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case ST_PresetColorValOrange:
		_bdfaa.Value = "\u006f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValOrangeRed:
		_bdfaa.Value = "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case ST_PresetColorValOrchid:
		_bdfaa.Value = "\u006f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValPaleGoldenrod:
		_bdfaa.Value = "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValPaleGreen:
		_bdfaa.Value = "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValPaleTurquoise:
		_bdfaa.Value = "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValPaleVioletRed:
		_bdfaa.Value = "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValPapayaWhip:
		_bdfaa.Value = "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case ST_PresetColorValPeachPuff:
		_bdfaa.Value = "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case ST_PresetColorValPeru:
		_bdfaa.Value = "\u0070\u0065\u0072\u0075"
	case ST_PresetColorValPink:
		_bdfaa.Value = "\u0070\u0069\u006e\u006b"
	case ST_PresetColorValPlum:
		_bdfaa.Value = "\u0070\u006c\u0075\u006d"
	case ST_PresetColorValPowderBlue:
		_bdfaa.Value = "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValPurple:
		_bdfaa.Value = "\u0070\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValRed:
		_bdfaa.Value = "\u0072\u0065\u0064"
	case ST_PresetColorValRosyBrown:
		_bdfaa.Value = "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case ST_PresetColorValRoyalBlue:
		_bdfaa.Value = "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValSaddleBrown:
		_bdfaa.Value = "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSalmon:
		_bdfaa.Value = "\u0073\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValSandyBrown:
		_bdfaa.Value = "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSeaGreen:
		_bdfaa.Value = "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSeaShell:
		_bdfaa.Value = "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case ST_PresetColorValSienna:
		_bdfaa.Value = "\u0073\u0069\u0065\u006e\u006e\u0061"
	case ST_PresetColorValSilver:
		_bdfaa.Value = "\u0073\u0069\u006c\u0076\u0065\u0072"
	case ST_PresetColorValSkyBlue:
		_bdfaa.Value = "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValSlateBlue:
		_bdfaa.Value = "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValSlateGray:
		_bdfaa.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case ST_PresetColorValSlateGrey:
		_bdfaa.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case ST_PresetColorValSnow:
		_bdfaa.Value = "\u0073\u006e\u006f\u0077"
	case ST_PresetColorValSpringGreen:
		_bdfaa.Value = "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSteelBlue:
		_bdfaa.Value = "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValTan:
		_bdfaa.Value = "\u0074\u0061\u006e"
	case ST_PresetColorValTeal:
		_bdfaa.Value = "\u0074\u0065\u0061\u006c"
	case ST_PresetColorValThistle:
		_bdfaa.Value = "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case ST_PresetColorValTomato:
		_bdfaa.Value = "\u0074\u006f\u006d\u0061\u0074\u006f"
	case ST_PresetColorValTurquoise:
		_bdfaa.Value = "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case ST_PresetColorValViolet:
		_bdfaa.Value = "\u0076\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValWheat:
		_bdfaa.Value = "\u0077\u0068\u0065a\u0074"
	case ST_PresetColorValWhite:
		_bdfaa.Value = "\u0077\u0068\u0069t\u0065"
	case ST_PresetColorValWhiteSmoke:
		_bdfaa.Value = "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case ST_PresetColorValYellow:
		_bdfaa.Value = "\u0079\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValYellowGreen:
		_bdfaa.Value = "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return _bdfaa, nil
}
func (_bfeg *CT_DashStopList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bbdfc:
	for {
		_ggg, _baef := d.Token()
		if _baef != nil {
			return _baef
		}
		switch _fagd := _ggg.(type) {
		case _b.StartElement:
			switch _fagd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}:
				_cbbae := NewCT_DashStop()
				if _ccdd := d.DecodeElement(_cbbae, &_fagd); _ccdd != nil {
					return _ccdd
				}
				_bfeg.Ds = append(_bfeg.Ds, _cbbae)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0073h\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fagd.Name)
				if _agee := d.Skip(); _agee != nil {
					return _agee
				}
			}
		case _b.EndElement:
			break _bbdfc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the VideoFile and its children
func (_ebdgf *VideoFile) Validate() error {
	return _ebdgf.ValidateWithPath("\u0056i\u0064\u0065\u006f\u0046\u0069\u006ce")
}

// ValidateWithPath validates the CT_ShapeStyle and its children, prefixing error messages with path
func (_eaege *CT_ShapeStyle) ValidateWithPath(path string) error {
	if _decgb := _eaege.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _decgb != nil {
		return _decgb
	}
	if _bdcd := _eaege.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _bdcd != nil {
		return _bdcd
	}
	if _babcc := _eaege.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _babcc != nil {
		return _babcc
	}
	if _egfgb := _eaege.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _egfgb != nil {
		return _egfgb
	}
	return nil
}
func (_aade *CT_ColorReplaceEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aade.ScrgbClr != nil {
		_eedb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_aade.ScrgbClr, _eedb)
	}
	if _aade.SrgbClr != nil {
		_fbfb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_aade.SrgbClr, _fbfb)
	}
	if _aade.HslClr != nil {
		_ecba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_aade.HslClr, _ecba)
	}
	if _aade.SysClr != nil {
		_adfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_aade.SysClr, _adfb)
	}
	if _aade.SchemeClr != nil {
		_abef := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_aade.SchemeClr, _abef)
	}
	if _aade.PrstClr != nil {
		_gcaa := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_aade.PrstClr, _gcaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_LinearShadeProperties() *CT_LinearShadeProperties {
	_dadegd := &CT_LinearShadeProperties{}
	return _dadegd
}

// Validate validates the CT_Color and its children
func (_edgf *CT_Color) Validate() error {
	return _edgf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}
func NewCT_TextCharacterProperties() *CT_TextCharacterProperties {
	_ecbeg := &CT_TextCharacterProperties{}
	return _ecbeg
}
func (_afedb *CT_TableCol) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adafd := range start.Attr {
		if _adafd.Name.Local == "\u0077" {
			_bgge, _eded := ParseUnionST_Coordinate(_adafd.Value)
			if _eded != nil {
				return _eded
			}
			_afedb.WAttr = _bgge
			continue
		}
	}
_bffdg:
	for {
		_decgd, _cbcaba := d.Token()
		if _cbcaba != nil {
			return _cbcaba
		}
		switch _fcgea := _decgd.(type) {
		case _b.StartElement:
			switch _fcgea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afedb.ExtLst = NewCT_OfficeArtExtensionList()
				if _bffbc := d.DecodeElement(_afedb.ExtLst, &_fcgea); _bffbc != nil {
					return _bffbc
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0020\u0025\u0076", _fcgea.Name)
				if _bdffa := d.Skip(); _bdffa != nil {
					return _bdffa
				}
			}
		case _b.EndElement:
			break _bffdg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TextTabAlignTypeUnset ST_TextTabAlignType = 0
	ST_TextTabAlignTypeL     ST_TextTabAlignType = 1
	ST_TextTabAlignTypeCtr   ST_TextTabAlignType = 2
	ST_TextTabAlignTypeR     ST_TextTabAlignType = 3
	ST_TextTabAlignTypeDec   ST_TextTabAlignType = 4
)

func (_fe *AG_Blob) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fe.EmbedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_fe.EmbedAttr)})
	}
	if _fe.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", *_fe.LinkAttr)})
	}
	return nil
}

type CT_SoftEdgesEffect struct{ RadAttr int64 }
type CT_GvmlGroupShapeNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvGrpSpPr *CT_NonVisualGroupDrawingShapeProps
}

func NewCT_XYAdjustHandle() *CT_XYAdjustHandle {
	_gddba := &CT_XYAdjustHandle{}
	_gddba.Pos = NewCT_AdjPoint2D()
	return _gddba
}

const (
	ST_PenAlignmentUnset ST_PenAlignment = 0
	ST_PenAlignmentCtr   ST_PenAlignment = 1
	ST_PenAlignmentIn    ST_PenAlignment = 2
)

func (_aaec *CT_EmbeddedWAVAudioFile) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cafed := range start.Attr {
		if _cafed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cafed.Name.Local == "\u0065\u006d\u0062e\u0064" || _cafed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cafed.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_cfege, _egce := _cafed.Value, error(nil)
			if _egce != nil {
				return _egce
			}
			_aaec.EmbedAttr = _cfege
			continue
		}
		if _cafed.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfda, _fgccde := _cafed.Value, error(nil)
			if _fgccde != nil {
				return _fgccde
			}
			_aaec.NameAttr = &_bfda
			continue
		}
	}
	for {
		_ccac, _dbae := d.Token()
		if _dbae != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0057\u0041\u0056A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065\u003a\u0020%\u0073", _dbae)
		}
		if _geee, _aacb := _ccac.(_b.EndElement); _aacb && _geee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bafadf ST_LineCap) Validate() error { return _bafadf.ValidateWithPath("") }

type CT_Scene3D struct {
	Camera   *CT_Camera
	LightRig *CT_LightRig
	Backdrop *CT_Backdrop
	ExtLst   *CT_OfficeArtExtensionList
}

// Validate validates the CT_TableCol and its children
func (_fbafc *CT_TableCol) Validate() error {
	return _fbafc.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c")
}

type Theme struct{ CT_OfficeStyleSheet }

// Validate validates the TblStyleLst and its children
func (_acafd *TblStyleLst) Validate() error {
	return _acafd.ValidateWithPath("T\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074")
}
func NewCT_AlphaModulateEffect() *CT_AlphaModulateEffect {
	_bea := &CT_AlphaModulateEffect{}
	_bea.Cont = NewCT_EffectContainer()
	return _bea
}

type CT_GvmlShapeNonVisual struct {
	CNvPr   *CT_NonVisualDrawingProps
	CNvSpPr *CT_NonVisualDrawingShapeProps
}

func (_ebeba *TblStyleLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebeba.CT_TableStyleList = *NewCT_TableStyleList()
	for _, _eegbac := range start.Attr {
		if _eegbac.Name.Local == "\u0064\u0065\u0066" {
			_gfaeb, _gfaed := _eegbac.Value, error(nil)
			if _gfaed != nil {
				return _gfaed
			}
			_ebeba.DefAttr = _gfaeb
			continue
		}
	}
_aegeb:
	for {
		_bcgf, _beaea := d.Token()
		if _beaea != nil {
			return _beaea
		}
		switch _abegc := _bcgf.(type) {
		case _b.StartElement:
			switch _abegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_gabfc := NewCT_TableStyle()
				if _ffdaa := d.DecodeElement(_gabfc, &_abegc); _ffdaa != nil {
					return _ffdaa
				}
				_ebeba.TblStyle = append(_ebeba.TblStyle, _gabfc)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074\u0020\u0025\u0076", _abegc.Name)
				if _dbgef := d.Skip(); _dbgef != nil {
					return _dbgef
				}
			}
		case _b.EndElement:
			break _aegeb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LinearShadeProperties and its children
func (_ddbb *CT_LinearShadeProperties) Validate() error {
	return _ddbb.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_TextNormalAutofit struct {
	FontScaleAttr      *ST_TextFontScalePercentOrPercentString
	LnSpcReductionAttr *ST_TextSpacingPercentOrPercentString
}

func (_efeae ST_PresetColorVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efeae.String(), start)
}

type CT_TextLineBreak struct{ RPr *CT_TextCharacterProperties }

func (_faedf ST_AnimationBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dgfad := _b.Attr{}
	_dgfad.Name = name
	switch _faedf {
	case ST_AnimationBuildTypeUnset:
		_dgfad.Value = ""
	case ST_AnimationBuildTypeAllAtOnce:
		_dgfad.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _dgfad, nil
}

// Validate validates the CT_TableStyleTextStyle and its children
func (_defad *CT_TableStyleTextStyle) Validate() error {
	return _defad.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065")
}
func (_gfcfba *ST_TextVerticalType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbegc, _cedf := d.Token()
	if _cedf != nil {
		return _cedf
	}
	if _fdbae, _ddebe := _cbegc.(_b.EndElement); _ddebe && _fdbae.Name == start.Name {
		*_gfcfba = 1
		return nil
	}
	if _bgdbe, _bbbgb := _cbegc.(_b.CharData); !_bbbgb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbegc)
	} else {
		switch string(_bgdbe) {
		case "":
			*_gfcfba = 0
		case "\u0068\u006f\u0072\u007a":
			*_gfcfba = 1
		case "\u0076\u0065\u0072\u0074":
			*_gfcfba = 2
		case "\u0076e\u0072\u0074\u0032\u0037\u0030":
			*_gfcfba = 3
		case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
			*_gfcfba = 4
		case "\u0065\u0061\u0056\u0065\u0072\u0074":
			*_gfcfba = 5
		case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
			*_gfcfba = 6
		case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
			*_gfcfba = 7
		}
	}
	_cbegc, _cedf = d.Token()
	if _cedf != nil {
		return _cedf
	}
	if _edbc, _eacc := _cbegc.(_b.EndElement); _eacc && _edbc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbegc)
}
func (_becba *ST_AnimationChartOnlyBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_becba = 0
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_becba = 1
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_becba = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_becba = 3
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_becba = 4
	}
	return nil
}
func (_gdeae *CT_Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gdeae.TblPr != nil {
		_gdgbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0062\u006c\u0050\u0072"}}
		e.EncodeElement(_gdeae.TblPr, _gdgbg)
	}
	_cadcc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0062\u006c\u0047\u0072\u0069d"}}
	e.EncodeElement(_gdeae.TblGrid, _cadcc)
	if _gdeae.Tr != nil {
		_ecgbf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0072"}}
		for _, _abbcd := range _gdeae.Tr {
			e.EncodeElement(_abbcd, _ecgbf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_cfba *CT_GradientStop) ValidateWithPath(path string) error {
	if _ddcbb := _cfba.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _ddcbb != nil {
		return _ddcbb
	}
	if _cfba.ScrgbClr != nil {
		if _cddf := _cfba.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cddf != nil {
			return _cddf
		}
	}
	if _cfba.SrgbClr != nil {
		if _efgg := _cfba.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _efgg != nil {
			return _efgg
		}
	}
	if _cfba.HslClr != nil {
		if _faabd := _cfba.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _faabd != nil {
			return _faabd
		}
	}
	if _cfba.SysClr != nil {
		if _cebga := _cfba.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cebga != nil {
			return _cebga
		}
	}
	if _cfba.SchemeClr != nil {
		if _dbac := _cfba.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dbac != nil {
			return _dbac
		}
	}
	if _cfba.PrstClr != nil {
		if _bdccf := _cfba.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _bdccf != nil {
			return _bdccf
		}
	}
	return nil
}

// Validate validates the CT_OfficeStyleSheet and its children
func (_dcbbf *CT_OfficeStyleSheet) Validate() error {
	return _dcbbf.ValidateWithPath("\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_TextNoAutofit and its children
func (_cfdbd *CT_TextNoAutofit) Validate() error {
	return _cfdbd.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}
func (_ebgbd *EG_TextAutofit) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgecg:
	for {
		_ccbg, _acagg := d.Token()
		if _acagg != nil {
			return _acagg
		}
		switch _bfacg := _ccbg.(type) {
		case _b.StartElement:
			switch _bfacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_ebgbd.NoAutofit = NewCT_TextNoAutofit()
				if _cecgf := d.DecodeElement(_ebgbd.NoAutofit, &_bfacg); _cecgf != nil {
					return _cecgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_ebgbd.NormAutofit = NewCT_TextNormalAutofit()
				if _dffbc := d.DecodeElement(_ebgbd.NormAutofit, &_bfacg); _dffbc != nil {
					return _dffbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_ebgbd.SpAutoFit = NewCT_TextShapeAutofit()
				if _cacec := d.DecodeElement(_ebgbd.SpAutoFit, &_bfacg); _cacec != nil {
					return _cacec
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075\u0074o\u0066i\u0074\u0020\u0025\u0076", _bfacg.Name)
				if _fefag := d.Skip(); _fefag != nil {
					return _fefag
				}
			}
		case _b.EndElement:
			break _fgecg
		case _b.CharData:
		}
	}
	return nil
}
func (_cabcf ST_TextStrikeType) Validate() error { return _cabcf.ValidateWithPath("") }

type CT_GraphicalObjectData struct {
	UriAttr string
	Any     []_f.Any
}

// ValidateWithPath validates the CT_FillStyleList and its children, prefixing error messages with path
func (_daeec *CT_FillStyleList) ValidateWithPath(path string) error {
	for _fbae, _dgec := range _daeec.EG_FillProperties {
		if _cafae := _dgec.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _fbae)); _cafae != nil {
			return _cafae
		}
	}
	return nil
}
func NewCT_NonVisualContentPartProperties() *CT_NonVisualContentPartProperties {
	_cggc := &CT_NonVisualContentPartProperties{}
	return _cggc
}

type CT_RelativeOffsetEffect struct {
	TxAttr *ST_Percentage
	TyAttr *ST_Percentage
}

func (_efecbf *CT_TextSpacing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_afcgd:
	for {
		_efcf, _fgeag := d.Token()
		if _fgeag != nil {
			return _fgeag
		}
		switch _dbfed := _efcf.(type) {
		case _b.StartElement:
			switch _dbfed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}:
				_efecbf.SpcPct = NewCT_TextSpacingPercent()
				if _adcdac := d.DecodeElement(_efecbf.SpcPct, &_dbfed); _adcdac != nil {
					return _adcdac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}:
				_efecbf.SpcPts = NewCT_TextSpacingPoint()
				if _ebccf := d.DecodeElement(_efecbf.SpcPts, &_dbfed); _ebccf != nil {
					return _ebccf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061c\u0069n\u0067\u0020\u0025\u0076", _dbfed.Name)
				if _cccba := d.Skip(); _cccba != nil {
					return _cccba
				}
			}
		case _b.EndElement:
			break _afcgd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Color() *CT_Color { _agbe := &CT_Color{}; return _agbe }
func (_ddabc ST_AdjAngle) String() string {
	if _ddabc.ST_Angle != nil {
		return _bb.Sprintf("\u0025\u0076", *_ddabc.ST_Angle)
	}
	if _ddabc.ST_GeomGuideName != nil {
		return _bb.Sprintf("\u0025\u0076", *_ddabc.ST_GeomGuideName)
	}
	return ""
}

// ValidateWithPath validates the EG_ColorTransform and its children, prefixing error messages with path
func (_eebc *EG_ColorTransform) ValidateWithPath(path string) error {
	if _eebc.Tint != nil {
		if _ceda := _eebc.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _ceda != nil {
			return _ceda
		}
	}
	if _eebc.Shade != nil {
		if _gaafa := _eebc.Shade.ValidateWithPath(path + "\u002f\u0053\u0068\u0061\u0064\u0065"); _gaafa != nil {
			return _gaafa
		}
	}
	if _eebc.Comp != nil {
		if _gdfab := _eebc.Comp.ValidateWithPath(path + "\u002f\u0043\u006fm\u0070"); _gdfab != nil {
			return _gdfab
		}
	}
	if _eebc.Inv != nil {
		if _dcdeac := _eebc.Inv.ValidateWithPath(path + "\u002f\u0049\u006e\u0076"); _dcdeac != nil {
			return _dcdeac
		}
	}
	if _eebc.Gray != nil {
		if _efbae := _eebc.Gray.ValidateWithPath(path + "\u002f\u0047\u0072a\u0079"); _efbae != nil {
			return _efbae
		}
	}
	if _eebc.Alpha != nil {
		if _aadgd := _eebc.Alpha.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061"); _aadgd != nil {
			return _aadgd
		}
	}
	if _eebc.AlphaOff != nil {
		if _ebcdb := _eebc.AlphaOff.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004f\u0066f"); _ebcdb != nil {
			return _ebcdb
		}
	}
	if _eebc.AlphaMod != nil {
		if _degca := _eebc.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _degca != nil {
			return _degca
		}
	}
	if _eebc.Hue != nil {
		if _gbdfcb := _eebc.Hue.ValidateWithPath(path + "\u002f\u0048\u0075\u0065"); _gbdfcb != nil {
			return _gbdfcb
		}
	}
	if _eebc.HueOff != nil {
		if _gcbfg := _eebc.HueOff.ValidateWithPath(path + "\u002fH\u0075\u0065\u004f\u0066\u0066"); _gcbfg != nil {
			return _gcbfg
		}
	}
	if _eebc.HueMod != nil {
		if _dddfg := _eebc.HueMod.ValidateWithPath(path + "\u002fH\u0075\u0065\u004d\u006f\u0064"); _dddfg != nil {
			return _dddfg
		}
	}
	if _eebc.Sat != nil {
		if _cdcg := _eebc.Sat.ValidateWithPath(path + "\u002f\u0053\u0061\u0074"); _cdcg != nil {
			return _cdcg
		}
	}
	if _eebc.SatOff != nil {
		if _dcbgg := _eebc.SatOff.ValidateWithPath(path + "\u002fS\u0061\u0074\u004f\u0066\u0066"); _dcbgg != nil {
			return _dcbgg
		}
	}
	if _eebc.SatMod != nil {
		if _befdfc := _eebc.SatMod.ValidateWithPath(path + "\u002fS\u0061\u0074\u004d\u006f\u0064"); _befdfc != nil {
			return _befdfc
		}
	}
	if _eebc.Lum != nil {
		if _egebf := _eebc.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _egebf != nil {
			return _egebf
		}
	}
	if _eebc.LumOff != nil {
		if _ececd := _eebc.LumOff.ValidateWithPath(path + "\u002fL\u0075\u006d\u004f\u0066\u0066"); _ececd != nil {
			return _ececd
		}
	}
	if _eebc.LumMod != nil {
		if _daef := _eebc.LumMod.ValidateWithPath(path + "\u002fL\u0075\u006d\u004d\u006f\u0064"); _daef != nil {
			return _daef
		}
	}
	if _eebc.Red != nil {
		if _eagga := _eebc.Red.ValidateWithPath(path + "\u002f\u0052\u0065\u0064"); _eagga != nil {
			return _eagga
		}
	}
	if _eebc.RedOff != nil {
		if _aeece := _eebc.RedOff.ValidateWithPath(path + "\u002fR\u0065\u0064\u004f\u0066\u0066"); _aeece != nil {
			return _aeece
		}
	}
	if _eebc.RedMod != nil {
		if _abccfec := _eebc.RedMod.ValidateWithPath(path + "\u002fR\u0065\u0064\u004d\u006f\u0064"); _abccfec != nil {
			return _abccfec
		}
	}
	if _eebc.Green != nil {
		if _cgeaf := _eebc.Green.ValidateWithPath(path + "\u002f\u0047\u0072\u0065\u0065\u006e"); _cgeaf != nil {
			return _cgeaf
		}
	}
	if _eebc.GreenOff != nil {
		if _gcgee := _eebc.GreenOff.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004f\u0066f"); _gcgee != nil {
			return _gcgee
		}
	}
	if _eebc.GreenMod != nil {
		if _gebc := _eebc.GreenMod.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004d\u006fd"); _gebc != nil {
			return _gebc
		}
	}
	if _eebc.Blue != nil {
		if _ccefa := _eebc.Blue.ValidateWithPath(path + "\u002f\u0042\u006cu\u0065"); _ccefa != nil {
			return _ccefa
		}
	}
	if _eebc.BlueOff != nil {
		if _eegcg := _eebc.BlueOff.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004f\u0066\u0066"); _eegcg != nil {
			return _eegcg
		}
	}
	if _eebc.BlueMod != nil {
		if _cefbf := _eebc.BlueMod.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004d\u006f\u0064"); _cefbf != nil {
			return _cefbf
		}
	}
	if _eebc.Gamma != nil {
		if _cgae := _eebc.Gamma.ValidateWithPath(path + "\u002f\u0047\u0061\u006d\u006d\u0061"); _cgae != nil {
			return _cgae
		}
	}
	if _eebc.InvGamma != nil {
		if _agcab := _eebc.InvGamma.ValidateWithPath(path + "\u002fI\u006e\u0076\u0047\u0061\u006d\u006da"); _agcab != nil {
			return _agcab
		}
	}
	return nil
}
func (_gbbbd *ST_PenAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccace, _ggagfg := d.Token()
	if _ggagfg != nil {
		return _ggagfg
	}
	if _bgffbb, _ggbef := _ccace.(_b.EndElement); _ggbef && _bgffbb.Name == start.Name {
		*_gbbbd = 1
		return nil
	}
	if _fdgga, _ecdae := _ccace.(_b.CharData); !_ecdae {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccace)
	} else {
		switch string(_fdgga) {
		case "":
			*_gbbbd = 0
		case "\u0063\u0074\u0072":
			*_gbbbd = 1
		case "\u0069\u006e":
			*_gbbbd = 2
		}
	}
	_ccace, _ggagfg = d.Token()
	if _ggagfg != nil {
		return _ggagfg
	}
	if _ccgede, _cdbgfa := _ccace.(_b.EndElement); _cdbgfa && _ccgede.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccace)
}
func (_debcf ST_TextPoint) String() string {
	if _debcf.ST_TextPointUnqualified != nil {
		return _bb.Sprintf("\u0025\u0076", *_debcf.ST_TextPointUnqualified)
	}
	if _debcf.ST_UniversalMeasure != nil {
		return _bb.Sprintf("\u0025\u0076", *_debcf.ST_UniversalMeasure)
	}
	return ""
}
func NewCT_GvmlUseShapeRectangle() *CT_GvmlUseShapeRectangle {
	_deefa := &CT_GvmlUseShapeRectangle{}
	return _deefa
}
func (_gfaac *CT_LineJoinBevel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_caec, _aecbc := d.Token()
		if _aecbc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0042\u0065\u0076\u0065\u006c\u003a \u0025\u0073", _aecbc)
		}
		if _bebf, _aefeg := _caec.(_b.EndElement); _aefeg && _bebf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aabae ST_FontCollectionIndex) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aabae.String(), start)
}
func (_cdfdgd ST_PositiveFixedPercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cdfdgd.ST_PositiveFixedPercentageDecimal != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_cdfdgd.ST_PositiveFixedPercentageDecimal)))
	}
	if _cdfdgd.ST_PositiveFixedPercentage != nil {
		e.Encode(_cdfdgd.ST_PositiveFixedPercentage)
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

// Validate validates the CT_GvmlGroupShapeChoice and its children
func (_ddgce *CT_GvmlGroupShapeChoice) Validate() error {
	return _ddgce.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_PathShadeProperties and its children
func (_fbag *CT_PathShadeProperties) Validate() error {
	return _fbag.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

type EG_TextBulletTypeface struct {
	BuFontTx *CT_TextBulletTypefaceFollowText
	BuFont   *CT_TextFont
}

func NewCT_AlphaModulateFixedEffect() *CT_AlphaModulateFixedEffect {
	_fag := &CT_AlphaModulateFixedEffect{}
	return _fag
}
func (_deac *CT_RelativeOffsetEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _deac.TxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_deac.TxAttr)})
	}
	if _deac.TyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_deac.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aaabb *CT_ColorSchemeList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbcg:
	for {
		_edab, _gdbe := d.Token()
		if _gdbe != nil {
			return _gdbe
		}
		switch _fabga := _edab.(type) {
		case _b.StartElement:
			switch _fabga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}:
				_ccagb := NewCT_ColorSchemeAndMapping()
				if _fbffc := d.DecodeElement(_ccagb, &_fabga); _fbffc != nil {
					return _fbffc
				}
				_aaabb.ExtraClrScheme = append(_aaabb.ExtraClrScheme, _ccagb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fabga.Name)
				if _cceb := d.Skip(); _cceb != nil {
					return _cceb
				}
			}
		case _b.EndElement:
			break _cbcg
		case _b.CharData:
		}
	}
	return nil
}

type CT_Color struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewCT_Angle() *CT_Angle { _dcd := &CT_Angle{}; return _dcd }

const (
	ST_TextVerticalTypeUnset          ST_TextVerticalType = 0
	ST_TextVerticalTypeHorz           ST_TextVerticalType = 1
	ST_TextVerticalTypeVert           ST_TextVerticalType = 2
	ST_TextVerticalTypeVert270        ST_TextVerticalType = 3
	ST_TextVerticalTypeWordArtVert    ST_TextVerticalType = 4
	ST_TextVerticalTypeEaVert         ST_TextVerticalType = 5
	ST_TextVerticalTypeMongolianVert  ST_TextVerticalType = 6
	ST_TextVerticalTypeWordArtVertRtl ST_TextVerticalType = 7
)

func (_dfgefe ST_LineEndType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfaea := _b.Attr{}
	_cfaea.Name = name
	switch _dfgefe {
	case ST_LineEndTypeUnset:
		_cfaea.Value = ""
	case ST_LineEndTypeNone:
		_cfaea.Value = "\u006e\u006f\u006e\u0065"
	case ST_LineEndTypeTriangle:
		_cfaea.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_LineEndTypeStealth:
		_cfaea.Value = "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case ST_LineEndTypeDiamond:
		_cfaea.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_LineEndTypeOval:
		_cfaea.Value = "\u006f\u0076\u0061\u006c"
	case ST_LineEndTypeArrow:
		_cfaea.Value = "\u0061\u0072\u0072o\u0077"
	}
	return _cfaea, nil
}
func (_abbae ST_AnimationBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abbae.String(), start)
}
func (_bdff *CT_GroupFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_PresetLineDashProperties() *CT_PresetLineDashProperties {
	_gefcf := &CT_PresetLineDashProperties{}
	return _gefcf
}
func (_gdgbaa *Graphic) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdgbaa.CT_GraphicalObject = *NewCT_GraphicalObject()
_ffccc:
	for {
		_gbdce, _dega := d.Token()
		if _dega != nil {
			return _dega
		}
		switch _bgcae := _gbdce.(type) {
		case _b.StartElement:
			switch _bgcae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _gecea := d.DecodeElement(_gdgbaa.GraphicData, &_bgcae); _gecea != nil {
					return _gecea
				}
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0047r\u0061\u0070\u0068\u0069\u0063\u0020\u0025\u0076", _bgcae.Name)
				if _eaeadb := d.Skip(); _eaeadb != nil {
					return _eaeadb
				}
			}
		case _b.EndElement:
			break _ffccc
		case _b.CharData:
		}
	}
	return nil
}
func (_dgde *CT_GradientFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgde.FlipAttr != ST_TileFlipModeUnset {
		_dbfe, _eggcd := _dgde.FlipAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _eggcd != nil {
			return _eggcd
		}
		start.Attr = append(start.Attr, _dbfe)
	}
	if _dgde.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dgde.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _dgde.GsLst != nil {
		_dbbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0073\u004c\u0073\u0074"}}
		e.EncodeElement(_dgde.GsLst, _dbbg)
	}
	if _dgde.Lin != nil {
		_bacfd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_dgde.Lin, _bacfd)
	}
	if _dgde.Path != nil {
		_efddaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_dgde.Path, _efddaf)
	}
	if _dgde.TileRect != nil {
		_gadcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_dgde.TileRect, _gadcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TextAlignType byte

// ValidateWithPath validates the CT_TextBulletTypefaceFollowText and its children, prefixing error messages with path
func (_dfag *CT_TextBulletTypefaceFollowText) ValidateWithPath(path string) error { return nil }
func (_daaec *EG_LineFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbbbe:
	for {
		_bfgfbb, _ddeb := d.Token()
		if _ddeb != nil {
			return _ddeb
		}
		switch _gbcbc := _bfgfbb.(type) {
		case _b.StartElement:
			switch _gbcbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_daaec.NoFill = NewCT_NoFillProperties()
				if _caeeb := d.DecodeElement(_daaec.NoFill, &_gbcbc); _caeeb != nil {
					return _caeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_daaec.SolidFill = NewCT_SolidColorFillProperties()
				if _bbgdd := d.DecodeElement(_daaec.SolidFill, &_gbcbc); _bbgdd != nil {
					return _bbgdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_daaec.GradFill = NewCT_GradientFillProperties()
				if _ddcce := d.DecodeElement(_daaec.GradFill, &_gbcbc); _ddcce != nil {
					return _ddcce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_daaec.PattFill = NewCT_PatternFillProperties()
				if _aceac := d.DecodeElement(_daaec.PattFill, &_gbcbc); _aceac != nil {
					return _aceac
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gbcbc.Name)
				if _cgagf := d.Skip(); _cgagf != nil {
					return _cgagf
				}
			}
		case _b.EndElement:
			break _cbbbe
		case _b.CharData:
		}
	}
	return nil
}
func (_bfcdd *CT_VideoFile) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efac := range start.Attr {
		if _efac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efac.Name.Local == "\u006c\u0069\u006e\u006b" || _efac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _efac.Name.Local == "\u006c\u0069\u006e\u006b" {
			_abbca, _ebggf := _efac.Value, error(nil)
			if _ebggf != nil {
				return _ebggf
			}
			_bfcdd.LinkAttr = _abbca
			continue
		}
		if _efac.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_ecca, _edaba := _efac.Value, error(nil)
			if _edaba != nil {
				return _edaba
			}
			_bfcdd.ContentTypeAttr = &_ecca
			continue
		}
	}
_cbbdb:
	for {
		_eedfdg, _dcbge := d.Token()
		if _dcbge != nil {
			return _dcbge
		}
		switch _bdgdf := _eedfdg.(type) {
		case _b.StartElement:
			switch _bdgdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfcdd.ExtLst = NewCT_OfficeArtExtensionList()
				if _bcdedg := d.DecodeElement(_bfcdd.ExtLst, &_bdgdf); _bcdedg != nil {
					return _bcdedg
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_V\u0069\u0064e\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _bdgdf.Name)
				if _ccddcc := d.Skip(); _ccddcc != nil {
					return _ccddcc
				}
			}
		case _b.EndElement:
			break _cbbdb
		case _b.CharData:
		}
	}
	return nil
}

type CT_ScRgbColor struct {
	RAttr             ST_Percentage
	GAttr             ST_Percentage
	BAttr             ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

func (_gaffc ST_FontCollectionIndex) Validate() error { return _gaffc.ValidateWithPath("") }
func (_gfegc *CT_Hyperlink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfegc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_gfegc.IdAttr)})
	}
	if _gfegc.InvalidUrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_gfegc.InvalidUrlAttr)})
	}
	if _gfegc.ActionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_gfegc.ActionAttr)})
	}
	if _gfegc.TgtFrameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_gfegc.TgtFrameAttr)})
	}
	if _gfegc.TooltipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _bb.Sprintf("\u0025\u0076", *_gfegc.TooltipAttr)})
	}
	if _gfegc.HistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_gfegc.HistoryAttr))})
	}
	if _gfegc.HighlightClickAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_gfegc.HighlightClickAttr))})
	}
	if _gfegc.EndSndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_gfegc.EndSndAttr))})
	}
	e.EncodeToken(start)
	if _gfegc.Snd != nil {
		_cggaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073n\u0064"}}
		e.EncodeElement(_gfegc.Snd, _cggaa)
	}
	if _gfegc.ExtLst != nil {
		_abbgd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfegc.ExtLst, _abbgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_NoFillProperties() *CT_NoFillProperties { _aabdd := &CT_NoFillProperties{}; return _aabdd }
func (_cggbg *ST_AnimationChartOnlyBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cccff, _dfgeg := d.Token()
	if _dfgeg != nil {
		return _dfgeg
	}
	if _gdadbg, _daaca := _cccff.(_b.EndElement); _daaca && _gdadbg.Name == start.Name {
		*_cggbg = 1
		return nil
	}
	if _gdbgf, _defae := _cccff.(_b.CharData); !_defae {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cccff)
	} else {
		switch string(_gdbgf) {
		case "":
			*_cggbg = 0
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_cggbg = 1
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_cggbg = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_cggbg = 3
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_cggbg = 4
		}
	}
	_cccff, _dfgeg = d.Token()
	if _dfgeg != nil {
		return _dfgeg
	}
	if _bcdba, _fcccaf := _cccff.(_b.EndElement); _fcccaf && _bcdba.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cccff)
}
func (_fgefd *ST_TextUnderlineType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgefd = 0
	case "\u006e\u006f\u006e\u0065":
		*_fgefd = 1
	case "\u0077\u006f\u0072d\u0073":
		*_fgefd = 2
	case "\u0073\u006e\u0067":
		*_fgefd = 3
	case "\u0064\u0062\u006c":
		*_fgefd = 4
	case "\u0068\u0065\u0061v\u0079":
		*_fgefd = 5
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_fgefd = 6
	case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
		*_fgefd = 7
	case "\u0064\u0061\u0073\u0068":
		*_fgefd = 8
	case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
		*_fgefd = 9
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
		*_fgefd = 10
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
		*_fgefd = 11
	case "\u0064o\u0074\u0044\u0061\u0073\u0068":
		*_fgefd = 12
	case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_fgefd = 13
	case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
		*_fgefd = 14
	case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_fgefd = 15
	case "\u0077\u0061\u0076\u0079":
		*_fgefd = 16
	case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
		*_fgefd = 17
	case "\u0077a\u0076\u0079\u0044\u0062\u006c":
		*_fgefd = 18
	}
	return nil
}

type ST_AnimationChartOnlyBuildType byte

func (_agff *CT_FontReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_bfebb, _ebacg := _agff.IdxAttr.MarshalXMLAttr(_b.Name{Local: "\u0069\u0064\u0078"})
	if _ebacg != nil {
		return _ebacg
	}
	start.Attr = append(start.Attr, _bfebb)
	e.EncodeToken(start)
	if _agff.ScrgbClr != nil {
		_bbfd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_agff.ScrgbClr, _bbfd)
	}
	if _agff.SrgbClr != nil {
		_fegd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_agff.SrgbClr, _fegd)
	}
	if _agff.HslClr != nil {
		_egbdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_agff.HslClr, _egbdf)
	}
	if _agff.SysClr != nil {
		_acbfg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_agff.SysClr, _acbfg)
	}
	if _agff.SchemeClr != nil {
		_ebccd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_agff.SchemeClr, _ebccd)
	}
	if _agff.PrstClr != nil {
		_bdcc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_agff.PrstClr, _bdcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NonVisualGraphicFrameProperties and its children, prefixing error messages with path
func (_gafda *CT_NonVisualGraphicFrameProperties) ValidateWithPath(path string) error {
	if _gafda.GraphicFrameLocks != nil {
		if _afaab := _gafda.GraphicFrameLocks.ValidateWithPath(path + "\u002fG\u0072a\u0070\u0068\u0069\u0063\u0046r\u0061\u006de\u004c\u006f\u0063\u006b\u0073"); _afaab != nil {
			return _afaab
		}
	}
	if _gafda.ExtLst != nil {
		if _afgca := _gafda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afgca != nil {
			return _afgca
		}
	}
	return nil
}
func (_ffc *CT_Backdrop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffc.Anchor = NewCT_Point3D()
	_ffc.Norm = NewCT_Vector3D()
	_ffc.Up = NewCT_Vector3D()
_bfcb:
	for {
		_bceb, _gcca := d.Token()
		if _gcca != nil {
			return _gcca
		}
		switch _efdf := _bceb.(type) {
		case _b.StartElement:
			switch _efdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _gda := d.DecodeElement(_ffc.Anchor, &_efdf); _gda != nil {
					return _gda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}:
				if _cadc := d.DecodeElement(_ffc.Norm, &_efdf); _cadc != nil {
					return _cadc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}:
				if _gdaf := d.DecodeElement(_ffc.Up, &_efdf); _gdaf != nil {
					return _gdaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffc.ExtLst = NewCT_OfficeArtExtensionList()
				if _ccaa := d.DecodeElement(_ffc.ExtLst, &_efdf); _ccaa != nil {
					return _ccaa
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070\u0020\u0025\u0076", _efdf.Name)
				if _fef := d.Skip(); _fef != nil {
					return _fef
				}
			}
		case _b.EndElement:
			break _bfcb
		case _b.CharData:
		}
	}
	return nil
}
func (_dggcgf ST_SchemeColorVal) ValidateWithPath(path string) error {
	switch _dggcgf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dggcgf))
	}
	return nil
}
func (_fafddf *ST_TileFlipMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdfca, _abgde := d.Token()
	if _abgde != nil {
		return _abgde
	}
	if _ddeea, _acfac := _bdfca.(_b.EndElement); _acfac && _ddeea.Name == start.Name {
		*_fafddf = 1
		return nil
	}
	if _bdecd, _bdgca := _bdfca.(_b.CharData); !_bdgca {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdfca)
	} else {
		switch string(_bdecd) {
		case "":
			*_fafddf = 0
		case "\u006e\u006f\u006e\u0065":
			*_fafddf = 1
		case "\u0078":
			*_fafddf = 2
		case "\u0079":
			*_fafddf = 3
		case "\u0078\u0079":
			*_fafddf = 4
		}
	}
	_bdfca, _abgde = d.Token()
	if _abgde != nil {
		return _abgde
	}
	if _edac, _fgbfg := _bdfca.(_b.EndElement); _fgbfg && _edac.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdfca)
}
func (_gea *CT_Angle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aebg := range start.Attr {
		if _aebg.Name.Local == "\u0076\u0061\u006c" {
			_ceea, _dfb := _a.ParseInt(_aebg.Value, 10, 32)
			if _dfb != nil {
				return _dfb
			}
			_gea.ValAttr = int32(_ceea)
			continue
		}
	}
	for {
		_cbgg, _fba := d.Token()
		if _fba != nil {
			return _bb.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u006e\u0067\u006c\u0065: \u0025\u0073", _fba)
		}
		if _daf, _efe := _cbgg.(_b.EndElement); _efe && _daf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_bcggc *CT_FontScheme) ValidateWithPath(path string) error {
	if _feba := _bcggc.MajorFont.ValidateWithPath(path + "\u002f\u004d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"); _feba != nil {
		return _feba
	}
	if _fbgdb := _bcggc.MinorFont.ValidateWithPath(path + "\u002f\u004d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"); _fbgdb != nil {
		return _fbgdb
	}
	if _bcggc.ExtLst != nil {
		if _fgfc := _bcggc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgfc != nil {
			return _fgfc
		}
	}
	return nil
}

const (
	ST_AnimationDgmOnlyBuildTypeUnset     ST_AnimationDgmOnlyBuildType = 0
	ST_AnimationDgmOnlyBuildTypeOne       ST_AnimationDgmOnlyBuildType = 1
	ST_AnimationDgmOnlyBuildTypeLvlOne    ST_AnimationDgmOnlyBuildType = 2
	ST_AnimationDgmOnlyBuildTypeLvlAtOnce ST_AnimationDgmOnlyBuildType = 3
)

type CT_PositivePercentage struct{ ValAttr ST_PositivePercentage }

func NewCT_TextSpacingPoint() *CT_TextSpacingPoint {
	_aadgcc := &CT_TextSpacingPoint{}
	_aadgcc.ValAttr = 0
	return _aadgcc
}
func (_gaeaa ST_Coordinate) String() string {
	if _gaeaa.ST_CoordinateUnqualified != nil {
		return _bb.Sprintf("\u0025\u0076", *_gaeaa.ST_CoordinateUnqualified)
	}
	if _gaeaa.ST_UniversalMeasure != nil {
		return _bb.Sprintf("\u0025\u0076", *_gaeaa.ST_UniversalMeasure)
	}
	return ""
}

// Validate validates the CT_Table and its children
func (_ddgde *CT_Table) Validate() error {
	return _ddgde.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}
func (_gdccf *CT_TextNormalAutofit) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdccf.FontScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce"}, Value: _bb.Sprintf("\u0025\u0076", *_gdccf.FontScaleAttr)})
	}
	if _gdccf.LnSpcReductionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e"}, Value: _bb.Sprintf("\u0025\u0076", *_gdccf.LnSpcReductionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GradientFillProperties() *CT_GradientFillProperties {
	_ecdccf := &CT_GradientFillProperties{}
	return _ecdccf
}
func (_eec *CT_AnimationElementChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_egfd:
	for {
		_cffb, _agf := d.Token()
		if _agf != nil {
			return _agf
		}
		switch _dbf := _cffb.(type) {
		case _b.StartElement:
			switch _dbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}:
				_eec.Dgm = NewCT_AnimationDgmElement()
				if _eabe := d.DecodeElement(_eec.Dgm, &_dbf); _eabe != nil {
					return _eabe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}:
				_eec.Chart = NewCT_AnimationChartElement()
				if _bede := d.DecodeElement(_eec.Chart, &_dbf); _bede != nil {
					return _bede
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006fn\u0045l\u0065\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063e\u0020\u0025v", _dbf.Name)
				if _ggc := d.Skip(); _ggc != nil {
					return _ggc
				}
			}
		case _b.EndElement:
			break _egfd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ReflectionEffect() *CT_ReflectionEffect { _fgedc := &CT_ReflectionEffect{}; return _fgedc }

// Validate validates the CT_TextParagraphProperties and its children
func (_fgbee *CT_TextParagraphProperties) Validate() error {
	return _fgbee.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

type CT_VideoFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

// Validate validates the CT_FillEffect and its children
func (_fbcbd *CT_FillEffect) Validate() error {
	return _fbcbd.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_NonVisualContentPartProperties and its children, prefixing error messages with path
func (_ffbfc *CT_NonVisualContentPartProperties) ValidateWithPath(path string) error {
	if _ffbfc.CpLocks != nil {
		if _bgbgb := _ffbfc.CpLocks.ValidateWithPath(path + "\u002f\u0043\u0070\u004c\u006f\u0063\u006b\u0073"); _bgbgb != nil {
			return _bgbgb
		}
	}
	if _ffbfc.ExtLst != nil {
		if _ffad := _ffbfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffad != nil {
			return _ffad
		}
	}
	return nil
}

const (
	ST_TextUnderlineTypeUnset           ST_TextUnderlineType = 0
	ST_TextUnderlineTypeNone            ST_TextUnderlineType = 1
	ST_TextUnderlineTypeWords           ST_TextUnderlineType = 2
	ST_TextUnderlineTypeSng             ST_TextUnderlineType = 3
	ST_TextUnderlineTypeDbl             ST_TextUnderlineType = 4
	ST_TextUnderlineTypeHeavy           ST_TextUnderlineType = 5
	ST_TextUnderlineTypeDotted          ST_TextUnderlineType = 6
	ST_TextUnderlineTypeDottedHeavy     ST_TextUnderlineType = 7
	ST_TextUnderlineTypeDash            ST_TextUnderlineType = 8
	ST_TextUnderlineTypeDashHeavy       ST_TextUnderlineType = 9
	ST_TextUnderlineTypeDashLong        ST_TextUnderlineType = 10
	ST_TextUnderlineTypeDashLongHeavy   ST_TextUnderlineType = 11
	ST_TextUnderlineTypeDotDash         ST_TextUnderlineType = 12
	ST_TextUnderlineTypeDotDashHeavy    ST_TextUnderlineType = 13
	ST_TextUnderlineTypeDotDotDash      ST_TextUnderlineType = 14
	ST_TextUnderlineTypeDotDotDashHeavy ST_TextUnderlineType = 15
	ST_TextUnderlineTypeWavy            ST_TextUnderlineType = 16
	ST_TextUnderlineTypeWavyHeavy       ST_TextUnderlineType = 17
	ST_TextUnderlineTypeWavyDbl         ST_TextUnderlineType = 18
)

func (_cdaf *CT_PositivePercentage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfbgc := range start.Attr {
		if _gfbgc.Name.Local == "\u0076\u0061\u006c" {
			_ffeed, _cgacda := ParseUnionST_PositivePercentage(_gfbgc.Value)
			if _cgacda != nil {
				return _cgacda
			}
			_cdaf.ValAttr = _ffeed
			continue
		}
	}
	for {
		_fbbf, _cafc := d.Token()
		if _cafc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0050e\u0072\u0063\u0065\u006e\u0074\u0061\u0067e\u003a\u0020\u0025\u0073", _cafc)
		}
		if _edbdc, _gdbefg := _fbbf.(_b.EndElement); _gdbefg && _edbdc.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_AdjAngle is a union type
type ST_AdjAngle struct {
	ST_Angle         *int32
	ST_GeomGuideName *string
}

func (_ebgg *CT_GvmlPictureNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebgg.CNvPr = NewCT_NonVisualDrawingProps()
	_ebgg.CNvPicPr = NewCT_NonVisualPictureProperties()
_cfefd:
	for {
		_acga, _bdba := d.Token()
		if _bdba != nil {
			return _bdba
		}
		switch _bgdcd := _acga.(type) {
		case _b.StartElement:
			switch _bgdcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _geeef := d.DecodeElement(_ebgg.CNvPr, &_bgdcd); _geeef != nil {
					return _geeef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _dfedg := d.DecodeElement(_ebgg.CNvPicPr, &_bgdcd); _dfedg != nil {
					return _dfedg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063\u0074\u0075r\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c \u0025\u0076", _bgdcd.Name)
				if _aeaadc := d.Skip(); _aeaadc != nil {
					return _aeaadc
				}
			}
		case _b.EndElement:
			break _cfefd
		case _b.CharData:
		}
	}
	return nil
}
func (_cafbea ST_SystemColorVal) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_acfgd := _b.Attr{}
	_acfgd.Name = name
	switch _cafbea {
	case ST_SystemColorValUnset:
		_acfgd.Value = ""
	case ST_SystemColorValScrollBar:
		_acfgd.Value = "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case ST_SystemColorValBackground:
		_acfgd.Value = "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case ST_SystemColorValActiveCaption:
		_acfgd.Value = "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValInactiveCaption:
		_acfgd.Value = "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenu:
		_acfgd.Value = "\u006d\u0065\u006e\u0075"
	case ST_SystemColorValWindow:
		_acfgd.Value = "\u0077\u0069\u006e\u0064\u006f\u0077"
	case ST_SystemColorValWindowFrame:
		_acfgd.Value = "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case ST_SystemColorValMenuText:
		_acfgd.Value = "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case ST_SystemColorValWindowText:
		_acfgd.Value = "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case ST_SystemColorValCaptionText:
		_acfgd.Value = "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValActiveBorder:
		_acfgd.Value = "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case ST_SystemColorValInactiveBorder:
		_acfgd.Value = "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case ST_SystemColorValAppWorkspace:
		_acfgd.Value = "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case ST_SystemColorValHighlight:
		_acfgd.Value = "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case ST_SystemColorValHighlightText:
		_acfgd.Value = "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnFace:
		_acfgd.Value = "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case ST_SystemColorValBtnShadow:
		_acfgd.Value = "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case ST_SystemColorValGrayText:
		_acfgd.Value = "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnText:
		_acfgd.Value = "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInactiveCaptionText:
		_acfgd.Value = "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnHighlight:
		_acfgd.Value = "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorVal3dDkShadow:
		_acfgd.Value = "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case ST_SystemColorVal3dLight:
		_acfgd.Value = "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValInfoText:
		_acfgd.Value = "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInfoBk:
		_acfgd.Value = "\u0069\u006e\u0066\u006f\u0042\u006b"
	case ST_SystemColorValHotLight:
		_acfgd.Value = "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValGradientActiveCaption:
		_acfgd.Value = "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValGradientInactiveCaption:
		_acfgd.Value = "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenuHighlight:
		_acfgd.Value = "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValMenuBar:
		_acfgd.Value = "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return _acfgd, nil
}

// ValidateWithPath validates the TblStyleLst and its children, prefixing error messages with path
func (_gffeg *TblStyleLst) ValidateWithPath(path string) error {
	if _gcdde := _gffeg.CT_TableStyleList.ValidateWithPath(path); _gcdde != nil {
		return _gcdde
	}
	return nil
}

// Validate validates the CT_DuotoneEffect and its children
func (_gdebg *CT_DuotoneEffect) Validate() error {
	return _gdebg.ValidateWithPath("\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_PatternFillProperties and its children, prefixing error messages with path
func (_edgfa *CT_PatternFillProperties) ValidateWithPath(path string) error {
	if _bcef := _edgfa.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _bcef != nil {
		return _bcef
	}
	if _edgfa.FgClr != nil {
		if _gaecc := _edgfa.FgClr.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006c\u0072"); _gaecc != nil {
			return _gaecc
		}
	}
	if _edgfa.BgClr != nil {
		if _agadd := _edgfa.BgClr.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006c\u0072"); _agadd != nil {
			return _agadd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlShape and its children, prefixing error messages with path
func (_dbadf *CT_GvmlShape) ValidateWithPath(path string) error {
	if _gdged := _dbadf.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _gdged != nil {
		return _gdged
	}
	if _dfcba := _dbadf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dfcba != nil {
		return _dfcba
	}
	if _dbadf.TxSp != nil {
		if _ecfc := _dbadf.TxSp.ValidateWithPath(path + "\u002f\u0054\u0078S\u0070"); _ecfc != nil {
			return _ecfc
		}
	}
	if _dbadf.Style != nil {
		if _eegga := _dbadf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _eegga != nil {
			return _eegga
		}
	}
	if _dbadf.ExtLst != nil {
		if _faddg := _dbadf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faddg != nil {
			return _faddg
		}
	}
	return nil
}

// Validate validates the CT_Blip and its children
func (_cgfg *CT_Blip) Validate() error {
	return _cgfg.ValidateWithPath("\u0043T\u005f\u0042\u006c\u0069\u0070")
}
func NewCT_ColorMappingOverride() *CT_ColorMappingOverride {
	_daaa := &CT_ColorMappingOverride{}
	_daaa.Choice = NewCT_ColorMappingOverrideChoice()
	return _daaa
}

const (
	ST_LineEndWidthUnset ST_LineEndWidth = 0
	ST_LineEndWidthSm    ST_LineEndWidth = 1
	ST_LineEndWidthMed   ST_LineEndWidth = 2
	ST_LineEndWidthLg    ST_LineEndWidth = 3
)

func (_efefbf *EG_TextBulletSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efefbf.BuSzTx != nil {
		_fcbeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_efefbf.BuSzTx, _fcbeb)
	}
	if _efefbf.BuSzPct != nil {
		_gdbce := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_efefbf.BuSzPct, _gdbce)
	}
	if _efefbf.BuSzPts != nil {
		_cdbbc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_efefbf.BuSzPts, _cdbbc)
	}
	return nil
}
func (_bbfeeb *ST_AnimationBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbfeeb = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_bbfeeb = 1
	}
	return nil
}
func (_deeaa *EG_TextBullet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _deeaa.BuNone != nil {
		_dcbcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_deeaa.BuNone, _dcbcd)
	}
	if _deeaa.BuAutoNum != nil {
		_afbbd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_deeaa.BuAutoNum, _afbbd)
	}
	if _deeaa.BuChar != nil {
		_dgdea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_deeaa.BuChar, _dgdea)
	}
	if _deeaa.BuBlip != nil {
		_afddg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_deeaa.BuBlip, _afddg)
	}
	return nil
}
func (_gebfe ST_LightRigDirection) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aeag := _b.Attr{}
	_aeag.Name = name
	switch _gebfe {
	case ST_LightRigDirectionUnset:
		_aeag.Value = ""
	case ST_LightRigDirectionTl:
		_aeag.Value = "\u0074\u006c"
	case ST_LightRigDirectionT:
		_aeag.Value = "\u0074"
	case ST_LightRigDirectionTr:
		_aeag.Value = "\u0074\u0072"
	case ST_LightRigDirectionL:
		_aeag.Value = "\u006c"
	case ST_LightRigDirectionR:
		_aeag.Value = "\u0072"
	case ST_LightRigDirectionBl:
		_aeag.Value = "\u0062\u006c"
	case ST_LightRigDirectionB:
		_aeag.Value = "\u0062"
	case ST_LightRigDirectionBr:
		_aeag.Value = "\u0062\u0072"
	}
	return _aeag, nil
}
func (_acdfgb *CT_ClipboardStyleSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Name.Local = "\u0061:\u0043\u0054\u005f\u0043\u006c\u0069\u0070\u0062\u006f\u0061\u0072d\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	_gaba := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_acdfgb.ThemeElements, _gaba)
	_ccbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_acdfgb.ClrMap, _ccbc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_EmptyElement and its children
func (_bfbc *CT_EmptyElement) Validate() error {
	return _bfbc.ValidateWithPath("\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

const (
	ST_DgmBuildStepUnset ST_DgmBuildStep = 0
	ST_DgmBuildStepSp    ST_DgmBuildStep = 1
	ST_DgmBuildStepBg    ST_DgmBuildStep = 2
)

func (_gfacf *ST_BevelPresetType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfacf = 0
	case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
		*_gfacf = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_gfacf = 2
	case "\u0073\u006c\u006fp\u0065":
		*_gfacf = 3
	case "\u0063\u0072\u006fs\u0073":
		*_gfacf = 4
	case "\u0061\u006e\u0067l\u0065":
		*_gfacf = 5
	case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
		*_gfacf = 6
	case "\u0063\u006f\u006e\u0076\u0065\u0078":
		*_gfacf = 7
	case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
		*_gfacf = 8
	case "\u0064\u0069\u0076o\u0074":
		*_gfacf = 9
	case "\u0072\u0069\u0062\u006c\u0065\u0074":
		*_gfacf = 10
	case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
		*_gfacf = 11
	case "\u0061r\u0074\u0044\u0065\u0063\u006f":
		*_gfacf = 12
	}
	return nil
}
func (_deaaf *EG_FillModeProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgdbf:
	for {
		_cbfage, _bcadg := d.Token()
		if _bcadg != nil {
			return _bcadg
		}
		switch _abffc := _cbfage.(type) {
		case _b.StartElement:
			switch _abffc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_deaaf.Tile = NewCT_TileInfoProperties()
				if _ffeea := d.DecodeElement(_deaaf.Tile, &_abffc); _ffeea != nil {
					return _ffeea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_deaaf.Stretch = NewCT_StretchInfoProperties()
				if _deffge := d.DecodeElement(_deaaf.Stretch, &_abffc); _deffge != nil {
					return _deffge
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0046\u0069\u006c\u006c\u004d\u006f\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _abffc.Name)
				if _ffacc := d.Skip(); _ffacc != nil {
					return _ffacc
				}
			}
		case _b.EndElement:
			break _bgdbf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ColorReplaceEffect() *CT_ColorReplaceEffect {
	_gbbd := &CT_ColorReplaceEffect{}
	return _gbbd
}
func (_fbaac *ST_FontCollectionIndex) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbaac = 0
	case "\u006d\u0061\u006ao\u0072":
		*_fbaac = 1
	case "\u006d\u0069\u006eo\u0072":
		*_fbaac = 2
	case "\u006e\u006f\u006e\u0065":
		*_fbaac = 3
	}
	return nil
}
func (_agbd ST_ColorSchemeIndex) ValidateWithPath(path string) error {
	switch _agbd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agbd))
	}
	return nil
}

type CT_GroupTransform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
	ChOff     *CT_Point2D
	ChExt     *CT_PositiveSize2D
}

// Validate validates the CT_CustomColorList and its children
func (_edcec *CT_CustomColorList) Validate() error {
	return _edcec.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_EffectReference and its children, prefixing error messages with path
func (_efefe *CT_EffectReference) ValidateWithPath(path string) error { return nil }
func (_dceea ST_TextStrikeType) String() string {
	switch _dceea {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case 2:
		return "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case 3:
		return "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return ""
}

// Validate validates the CT_TextLineBreak and its children
func (_baedgc *CT_TextLineBreak) Validate() error {
	return _baedgc.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b")
}
func (_bbdca *CT_EffectStyleList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bagc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}}
	for _, _adfgf := range _bbdca.EffectStyle {
		e.EncodeElement(_adfgf, _bagc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bca *CT_Bevel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bca.WAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", *_bca.WAttr)})
	}
	if _bca.HAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _bb.Sprintf("\u0025\u0076", *_bca.HAttr)})
	}
	if _bca.PrstAttr != ST_BevelPresetTypeUnset {
		_afeg, _dge := _bca.PrstAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _dge != nil {
			return _dge
		}
		start.Attr = append(start.Attr, _afeg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gggcf *ST_SchemeColorVal) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gggcf = 0
	case "\u0062\u0067\u0031":
		*_gggcf = 1
	case "\u0074\u0078\u0031":
		*_gggcf = 2
	case "\u0062\u0067\u0032":
		*_gggcf = 3
	case "\u0074\u0078\u0032":
		*_gggcf = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_gggcf = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_gggcf = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_gggcf = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_gggcf = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_gggcf = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_gggcf = 10
	case "\u0068\u006c\u0069n\u006b":
		*_gggcf = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_gggcf = 12
	case "\u0070\u0068\u0043l\u0072":
		*_gggcf = 13
	case "\u0064\u006b\u0031":
		*_gggcf = 14
	case "\u006c\u0074\u0031":
		*_gggcf = 15
	case "\u0064\u006b\u0032":
		*_gggcf = 16
	case "\u006c\u0074\u0032":
		*_gggcf = 17
	}
	return nil
}

// Validate validates the CT_GraphicalObjectFrameLocking and its children
func (_bgfd *CT_GraphicalObjectFrameLocking) Validate() error {
	return _bgfd.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func NewCT_TextShapeAutofit() *CT_TextShapeAutofit { _gaffgc := &CT_TextShapeAutofit{}; return _gaffgc }
func (_abagg ST_TextSpacingPercentOrPercentString) String() string {
	if _abagg.ST_TextSpacingPercent != nil {
		return _bb.Sprintf("\u0025\u0076", *_abagg.ST_TextSpacingPercent)
	}
	if _abagg.ST_Percentage != nil {
		return _bb.Sprintf("\u0025\u0076", *_abagg.ST_Percentage)
	}
	return ""
}
func (_addfb ST_TextWrappingType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_addfb.String(), start)
}

type CT_EmbeddedWAVAudioFile struct {
	EmbedAttr string
	NameAttr  *string
}

func NewCT_RegularTextRun() *CT_RegularTextRun { _aebaa := &CT_RegularTextRun{}; return _aebaa }
func (_edbfb *ST_PresetShadowVal) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edbfb = 0
	case "\u0073\u0068\u0064w\u0031":
		*_edbfb = 1
	case "\u0073\u0068\u0064w\u0032":
		*_edbfb = 2
	case "\u0073\u0068\u0064w\u0033":
		*_edbfb = 3
	case "\u0073\u0068\u0064w\u0034":
		*_edbfb = 4
	case "\u0073\u0068\u0064w\u0035":
		*_edbfb = 5
	case "\u0073\u0068\u0064w\u0036":
		*_edbfb = 6
	case "\u0073\u0068\u0064w\u0037":
		*_edbfb = 7
	case "\u0073\u0068\u0064w\u0038":
		*_edbfb = 8
	case "\u0073\u0068\u0064w\u0039":
		*_edbfb = 9
	case "\u0073\u0068\u0064\u0077\u0031\u0030":
		*_edbfb = 10
	case "\u0073\u0068\u0064\u0077\u0031\u0031":
		*_edbfb = 11
	case "\u0073\u0068\u0064\u0077\u0031\u0032":
		*_edbfb = 12
	case "\u0073\u0068\u0064\u0077\u0031\u0033":
		*_edbfb = 13
	case "\u0073\u0068\u0064\u0077\u0031\u0034":
		*_edbfb = 14
	case "\u0073\u0068\u0064\u0077\u0031\u0035":
		*_edbfb = 15
	case "\u0073\u0068\u0064\u0077\u0031\u0036":
		*_edbfb = 16
	case "\u0073\u0068\u0064\u0077\u0031\u0037":
		*_edbfb = 17
	case "\u0073\u0068\u0064\u0077\u0031\u0038":
		*_edbfb = 18
	case "\u0073\u0068\u0064\u0077\u0031\u0039":
		*_edbfb = 19
	case "\u0073\u0068\u0064\u0077\u0032\u0030":
		*_edbfb = 20
	}
	return nil
}

type CT_ShapeLocking struct {
	NoTextEditAttr         *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_gfeg *CT_Connection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _gfeg.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _gfeg.IdxAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfccf *CT_NonVisualPictureProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edceb := range start.Attr {
		if _edceb.Name.Local == "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065" {
			_eddga, _ebdb := _a.ParseBool(_edceb.Value)
			if _ebdb != nil {
				return _ebdb
			}
			_gfccf.PreferRelativeResizeAttr = &_eddga
			continue
		}
	}
_ffdg:
	for {
		_eaad, _ceabe := d.Token()
		if _ceabe != nil {
			return _ceabe
		}
		switch _dgabd := _eaad.(type) {
		case _b.StartElement:
			switch _dgabd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}:
				_gfccf.PicLocks = NewCT_PictureLocking()
				if _gbdfa := d.DecodeElement(_gfccf.PicLocks, &_dgabd); _gbdfa != nil {
					return _gbdfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfccf.ExtLst = NewCT_OfficeArtExtensionList()
				if _fefgd := d.DecodeElement(_gfccf.ExtLst, &_dgabd); _fefgd != nil {
					return _fefgd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063t\u0075\u0072\u0065\u0050\u0072\u006fp\u0065\u0072t\u0069\u0065s\u0020%\u0076", _dgabd.Name)
				if _dbef := d.Skip(); _dbef != nil {
					return _dbef
				}
			}
		case _b.EndElement:
			break _ffdg
		case _b.CharData:
		}
	}
	return nil
}

type CT_Percentage struct{ ValAttr ST_Percentage }

func (_cfaee *ST_SchemeColorVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgfec, _bcddf := d.Token()
	if _bcddf != nil {
		return _bcddf
	}
	if _caadc, _gdgdc := _cgfec.(_b.EndElement); _gdgdc && _caadc.Name == start.Name {
		*_cfaee = 1
		return nil
	}
	if _bcfbge, _bbggc := _cgfec.(_b.CharData); !_bbggc {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgfec)
	} else {
		switch string(_bcfbge) {
		case "":
			*_cfaee = 0
		case "\u0062\u0067\u0031":
			*_cfaee = 1
		case "\u0074\u0078\u0031":
			*_cfaee = 2
		case "\u0062\u0067\u0032":
			*_cfaee = 3
		case "\u0074\u0078\u0032":
			*_cfaee = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_cfaee = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_cfaee = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_cfaee = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_cfaee = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_cfaee = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_cfaee = 10
		case "\u0068\u006c\u0069n\u006b":
			*_cfaee = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_cfaee = 12
		case "\u0070\u0068\u0043l\u0072":
			*_cfaee = 13
		case "\u0064\u006b\u0031":
			*_cfaee = 14
		case "\u006c\u0074\u0031":
			*_cfaee = 15
		case "\u0064\u006b\u0032":
			*_cfaee = 16
		case "\u006c\u0074\u0032":
			*_cfaee = 17
		}
	}
	_cgfec, _bcddf = d.Token()
	if _bcddf != nil {
		return _bcddf
	}
	if _edcgdg, _fgagd := _cgfec.(_b.EndElement); _fgagd && _edcgdg.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgfec)
}
func (_caebdg ST_LineEndType) String() string {
	switch _caebdg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 3:
		return "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case 4:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 5:
		return "\u006f\u0076\u0061\u006c"
	case 6:
		return "\u0061\u0072\u0072o\u0077"
	}
	return ""
}

// ValidateWithPath validates the CT_BaseStylesOverride and its children, prefixing error messages with path
func (_acdd *CT_BaseStylesOverride) ValidateWithPath(path string) error {
	if _acdd.ClrScheme != nil {
		if _dcdee := _acdd.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _dcdee != nil {
			return _dcdee
		}
	}
	if _acdd.FontScheme != nil {
		if _edb := _acdd.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _edb != nil {
			return _edb
		}
	}
	if _acdd.FmtScheme != nil {
		if _bggb := _acdd.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _bggb != nil {
			return _bggb
		}
	}
	return nil
}
func NewCT_LineJoinBevel() *CT_LineJoinBevel { _ccfda := &CT_LineJoinBevel{}; return _ccfda }
func (_fccad *CT_TextUnderlineFillFollowText) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bageaa, _gbgdb := d.Token()
		if _gbgdb != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _gbgdb)
		}
		if _eagb, _adcbf := _bageaa.(_b.EndElement); _adcbf && _eagb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_TextBulletTypeface() *EG_TextBulletTypeface {
	_daafg := &EG_TextBulletTypeface{}
	return _daafg
}

// ValidateWithPath validates the CT_GvmlGraphicFrameNonVisual and its children, prefixing error messages with path
func (_gfeea *CT_GvmlGraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _ggaad := _gfeea.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ggaad != nil {
		return _ggaad
	}
	if _defca := _gfeea.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _defca != nil {
		return _defca
	}
	return nil
}

// Validate validates the CT_ClipboardStyleSheet and its children
func (_gfbge *CT_ClipboardStyleSheet) Validate() error {
	return _gfbge.ValidateWithPath("\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074")
}

type CT_Path2DQuadBezierTo struct{ Pt []*CT_AdjPoint2D }

// ValidateWithPath validates the CT_BlendEffect and its children, prefixing error messages with path
func (_fdgf *CT_BlendEffect) ValidateWithPath(path string) error {
	if _fdgf.BlendAttr == ST_BlendModeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _ecea := _fdgf.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _ecea != nil {
		return _ecea
	}
	if _bad := _fdgf.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _bad != nil {
		return _bad
	}
	return nil
}
func (_cfbd *CT_ColorScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfbd.Dk1 = NewCT_Color()
	_cfbd.Lt1 = NewCT_Color()
	_cfbd.Dk2 = NewCT_Color()
	_cfbd.Lt2 = NewCT_Color()
	_cfbd.Accent1 = NewCT_Color()
	_cfbd.Accent2 = NewCT_Color()
	_cfbd.Accent3 = NewCT_Color()
	_cfbd.Accent4 = NewCT_Color()
	_cfbd.Accent5 = NewCT_Color()
	_cfbd.Accent6 = NewCT_Color()
	_cfbd.Hlink = NewCT_Color()
	_cfbd.FolHlink = NewCT_Color()
	for _, _fcbcd := range start.Attr {
		if _fcbcd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcdbe, _edeb := _fcbcd.Value, error(nil)
			if _edeb != nil {
				return _edeb
			}
			_cfbd.NameAttr = _bcdbe
			continue
		}
	}
_bddg:
	for {
		_edaa, _ffba := d.Token()
		if _ffba != nil {
			return _ffba
		}
		switch _geeba := _edaa.(type) {
		case _b.StartElement:
			switch _geeba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}:
				if _eadf := d.DecodeElement(_cfbd.Dk1, &_geeba); _eadf != nil {
					return _eadf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}:
				if _cded := d.DecodeElement(_cfbd.Lt1, &_geeba); _cded != nil {
					return _cded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}:
				if _cgda := d.DecodeElement(_cfbd.Dk2, &_geeba); _cgda != nil {
					return _cgda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}:
				if _cfgfc := d.DecodeElement(_cfbd.Lt2, &_geeba); _cfgfc != nil {
					return _cfgfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}:
				if _edgfd := d.DecodeElement(_cfbd.Accent1, &_geeba); _edgfd != nil {
					return _edgfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}:
				if _gbdef := d.DecodeElement(_cfbd.Accent2, &_geeba); _gbdef != nil {
					return _gbdef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}:
				if _fccdd := d.DecodeElement(_cfbd.Accent3, &_geeba); _fccdd != nil {
					return _fccdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}:
				if _caea := d.DecodeElement(_cfbd.Accent4, &_geeba); _caea != nil {
					return _caea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}:
				if _fgbec := d.DecodeElement(_cfbd.Accent5, &_geeba); _fgbec != nil {
					return _fgbec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}:
				if _bgfc := d.DecodeElement(_cfbd.Accent6, &_geeba); _bgfc != nil {
					return _bgfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}:
				if _bfea := d.DecodeElement(_cfbd.Hlink, &_geeba); _bfea != nil {
					return _bfea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}:
				if _fdba := d.DecodeElement(_cfbd.FolHlink, &_geeba); _fdba != nil {
					return _fdba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfbd.ExtLst = NewCT_OfficeArtExtensionList()
				if _cfee := d.DecodeElement(_cfbd.ExtLst, &_geeba); _cfee != nil {
					return _cfee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063h\u0065m\u0065\u0020\u0025\u0076", _geeba.Name)
				if _dgee := d.Skip(); _dgee != nil {
					return _dgee
				}
			}
		case _b.EndElement:
			break _bddg
		case _b.CharData:
		}
	}
	return nil
}

type ST_AnimationBuildType byte

// ValidateWithPath validates the CT_AlphaInverseEffect and its children, prefixing error messages with path
func (_bcf *CT_AlphaInverseEffect) ValidateWithPath(path string) error {
	if _bcf.ScrgbClr != nil {
		if _beg := _bcf.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _beg != nil {
			return _beg
		}
	}
	if _bcf.SrgbClr != nil {
		if _bff := _bcf.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bff != nil {
			return _bff
		}
	}
	if _bcf.HslClr != nil {
		if _dfe := _bcf.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dfe != nil {
			return _dfe
		}
	}
	if _bcf.SysClr != nil {
		if _gfg := _bcf.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gfg != nil {
			return _gfg
		}
	}
	if _bcf.SchemeClr != nil {
		if _fgc := _bcf.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fgc != nil {
			return _fgc
		}
	}
	if _bcf.PrstClr != nil {
		if _eda := _bcf.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _eda != nil {
			return _eda
		}
	}
	return nil
}

type EG_FillModeProperties struct {
	Tile    *CT_TileInfoProperties
	Stretch *CT_StretchInfoProperties
}

// ValidateWithPath validates the CT_TextBody and its children, prefixing error messages with path
func (_gbbce *CT_TextBody) ValidateWithPath(path string) error {
	if _caffe := _gbbce.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _caffe != nil {
		return _caffe
	}
	if _gbbce.LstStyle != nil {
		if _cbafb := _gbbce.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _cbafb != nil {
			return _cbafb
		}
	}
	for _gbbbe, _bfbae := range _gbbce.P {
		if _bdfd := _bfbae.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0050\u005b\u0025\u0064\u005d", path, _gbbbe)); _bdfd != nil {
			return _bdfd
		}
	}
	return nil
}
func (_efge *CT_Angle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _efge.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TextBulletColorFollowText struct{}

func (_cfbfe *CT_LinearShadeProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fddb := range start.Attr {
		if _fddb.Name.Local == "\u0061\u006e\u0067" {
			_dffcd, _dffbd := _a.ParseInt(_fddb.Value, 10, 32)
			if _dffbd != nil {
				return _dffbd
			}
			_faaef := int32(_dffcd)
			_cfbfe.AngAttr = &_faaef
			continue
		}
		if _fddb.Name.Local == "\u0073\u0063\u0061\u006c\u0065\u0064" {
			_abedb, _ffedg := _a.ParseBool(_fddb.Value)
			if _ffedg != nil {
				return _ffedg
			}
			_cfbfe.ScaledAttr = &_abedb
			continue
		}
	}
	for {
		_aggb, _cced := d.Token()
		if _cced != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004cine\u0061rS\u0068\u0061\u0064\u0065\u0050\u0072\u006fpe\u0072\u0074\u0069\u0065\u0073\u003a\u0020%\u0073", _cced)
		}
		if _eafg, _adba := _aggb.(_b.EndElement); _adba && _eafg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the EG_Geometry and its children, prefixing error messages with path
func (_ecgfbb *EG_Geometry) ValidateWithPath(path string) error {
	if _ecgfbb.CustGeom != nil {
		if _egbcb := _ecgfbb.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _egbcb != nil {
			return _egbcb
		}
	}
	if _ecgfbb.PrstGeom != nil {
		if _ddbedb := _ecgfbb.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _ddbedb != nil {
			return _ddbedb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_dcga *CT_Boolean) ValidateWithPath(path string) error {
	if _dcga.ValAttr != nil {
		if _ccge := _dcga.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ccge != nil {
			return _ccge
		}
	}
	return nil
}
func (_aegbgb ST_OnOffStyleType) ValidateWithPath(path string) error {
	switch _aegbgb {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aegbgb))
	}
	return nil
}

// ValidateWithPath validates the CT_TextParagraphProperties and its children, prefixing error messages with path
func (_geggf *CT_TextParagraphProperties) ValidateWithPath(path string) error {
	if _geggf.MarLAttr != nil {
		if *_geggf.MarLAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u004c\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_geggf.MarLAttr)
		}
		if *_geggf.MarLAttr > 51206400 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u004c\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geggf.MarLAttr)
		}
	}
	if _geggf.MarRAttr != nil {
		if *_geggf.MarRAttr < 0 {
			return _bb.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u0052\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_geggf.MarRAttr)
		}
		if *_geggf.MarRAttr > 51206400 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u0052\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geggf.MarRAttr)
		}
	}
	if _geggf.LvlAttr != nil {
		if *_geggf.LvlAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_geggf.LvlAttr)
		}
		if *_geggf.LvlAttr > 8 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_geggf.LvlAttr)
		}
	}
	if _geggf.IndentAttr != nil {
		if *_geggf.IndentAttr < -51206400 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0049\u006e\u0064\u0065\u006e\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u002d\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geggf.IndentAttr)
		}
		if *_geggf.IndentAttr > 51206400 {
			return _bb.Errorf("\u0025s\u002f\u006d.\u0049\u006e\u0064e\u006e\u0074\u0041\u0074\u0074\u0072\u0020m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geggf.IndentAttr)
		}
	}
	if _debaed := _geggf.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _debaed != nil {
		return _debaed
	}
	if _geggf.DefTabSzAttr != nil {
		if _dacdd := _geggf.DefTabSzAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0054\u0061\u0062\u0053\u007a\u0041\u0074\u0074\u0072"); _dacdd != nil {
			return _dacdd
		}
	}
	if _eadce := _geggf.FontAlgnAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0041\u006c\u0067\u006e\u0041\u0074\u0074\u0072"); _eadce != nil {
		return _eadce
	}
	if _geggf.LnSpc != nil {
		if _agacg := _geggf.LnSpc.ValidateWithPath(path + "\u002f\u004c\u006e\u0053\u0070\u0063"); _agacg != nil {
			return _agacg
		}
	}
	if _geggf.SpcBef != nil {
		if _bbdfe := _geggf.SpcBef.ValidateWithPath(path + "\u002fS\u0070\u0063\u0042\u0065\u0066"); _bbdfe != nil {
			return _bbdfe
		}
	}
	if _geggf.SpcAft != nil {
		if _aefba := _geggf.SpcAft.ValidateWithPath(path + "\u002fS\u0070\u0063\u0041\u0066\u0074"); _aefba != nil {
			return _aefba
		}
	}
	if _geggf.BuClrTx != nil {
		if _gddfa := _geggf.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _gddfa != nil {
			return _gddfa
		}
	}
	if _geggf.BuClr != nil {
		if _gecge := _geggf.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _gecge != nil {
			return _gecge
		}
	}
	if _geggf.BuSzTx != nil {
		if _fafgf := _geggf.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _fafgf != nil {
			return _fafgf
		}
	}
	if _geggf.BuSzPct != nil {
		if _bbagda := _geggf.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _bbagda != nil {
			return _bbagda
		}
	}
	if _geggf.BuSzPts != nil {
		if _facfd := _geggf.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _facfd != nil {
			return _facfd
		}
	}
	if _geggf.BuFontTx != nil {
		if _agcc := _geggf.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _agcc != nil {
			return _agcc
		}
	}
	if _geggf.BuFont != nil {
		if _afgbg := _geggf.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _afgbg != nil {
			return _afgbg
		}
	}
	if _geggf.BuNone != nil {
		if _bdeffb := _geggf.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _bdeffb != nil {
			return _bdeffb
		}
	}
	if _geggf.BuAutoNum != nil {
		if _fgfag := _geggf.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _fgfag != nil {
			return _fgfag
		}
	}
	if _geggf.BuChar != nil {
		if _dged := _geggf.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _dged != nil {
			return _dged
		}
	}
	if _geggf.BuBlip != nil {
		if _cfgdcb := _geggf.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _cfgdcb != nil {
			return _cfgdcb
		}
	}
	if _geggf.TabLst != nil {
		if _gebf := _geggf.TabLst.ValidateWithPath(path + "\u002fT\u0061\u0062\u004c\u0073\u0074"); _gebf != nil {
			return _gebf
		}
	}
	if _geggf.DefRPr != nil {
		if _dbaaa := _geggf.DefRPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0052\u0050\u0072"); _dbaaa != nil {
			return _dbaaa
		}
	}
	if _geggf.ExtLst != nil {
		if _gdgbd := _geggf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdgbd != nil {
			return _gdgbd
		}
	}
	return nil
}

// Validate validates the CT_AdjPoint2D and its children
func (_dadd *CT_AdjPoint2D) Validate() error {
	return _dadd.ValidateWithPath("\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}
func NewCT_PositivePercentage() *CT_PositivePercentage {
	_fbabe := &CT_PositivePercentage{}
	return _fbabe
}
func NewEG_TextUnderlineLine() *EG_TextUnderlineLine {
	_fgfcbb := &EG_TextUnderlineLine{}
	return _fgfcbb
}

type CT_GradientStop struct {
	PosAttr   ST_PositiveFixedPercentage
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

const (
	ST_TextAnchoringTypeUnset ST_TextAnchoringType = 0
	ST_TextAnchoringTypeT     ST_TextAnchoringType = 1
	ST_TextAnchoringTypeCtr   ST_TextAnchoringType = 2
	ST_TextAnchoringTypeB     ST_TextAnchoringType = 3
	ST_TextAnchoringTypeJust  ST_TextAnchoringType = 4
	ST_TextAnchoringTypeDist  ST_TextAnchoringType = 5
)

// Validate validates the CT_AudioCD and its children
func (_fff *CT_AudioCD) Validate() error {
	return _fff.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044")
}
func (_deed *CT_Cell3D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deed.Bevel = NewCT_Bevel()
	for _, _aded := range start.Attr {
		if _aded.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_deed.PrstMaterialAttr.UnmarshalXMLAttr(_aded)
			continue
		}
	}
_cfab:
	for {
		_ded, _ecbef := d.Token()
		if _ecbef != nil {
			return _ecbef
		}
		switch _gdeg := _ded.(type) {
		case _b.StartElement:
			switch _gdeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				if _fcbca := d.DecodeElement(_deed.Bevel, &_gdeg); _fcbca != nil {
					return _fcbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				_deed.LightRig = NewCT_LightRig()
				if _dgdc := d.DecodeElement(_deed.LightRig, &_gdeg); _dgdc != nil {
					return _dgdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deed.ExtLst = NewCT_OfficeArtExtensionList()
				if _fafg := d.DecodeElement(_deed.ExtLst, &_gdeg); _fafg != nil {
					return _fafg
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0065\u006cl\u0033\u0044 \u0025\u0076", _gdeg.Name)
				if _eeac := d.Skip(); _eeac != nil {
					return _eeac
				}
			}
		case _b.EndElement:
			break _cfab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_FillProperties and its children, prefixing error messages with path
func (_cdff *EG_FillProperties) ValidateWithPath(path string) error {
	if _cdff.NoFill != nil {
		if _ebeea := _cdff.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ebeea != nil {
			return _ebeea
		}
	}
	if _cdff.SolidFill != nil {
		if _dgda := _cdff.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dgda != nil {
			return _dgda
		}
	}
	if _cdff.GradFill != nil {
		if _bccbc := _cdff.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bccbc != nil {
			return _bccbc
		}
	}
	if _cdff.BlipFill != nil {
		if _babac := _cdff.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _babac != nil {
			return _babac
		}
	}
	if _cdff.PattFill != nil {
		if _agbc := _cdff.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _agbc != nil {
			return _agbc
		}
	}
	if _cdff.GrpFill != nil {
		if _gbbcd := _cdff.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gbbcd != nil {
			return _gbbcd
		}
	}
	return nil
}
func (_afag ST_ShapeType) String() string {
	switch _afag {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065"
	case 2:
		return "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case 3:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 4:
		return "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "\u0072\u0065\u0063\u0074"
	case 6:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 7:
		return "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case 8:
		return "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case 9:
		return "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case 10:
		return "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case 11:
		return "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case 12:
		return "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case 13:
		return "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case 14:
		return "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case 15:
		return "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case 16:
		return "\u0073\u0074\u0061r\u0034"
	case 17:
		return "\u0073\u0074\u0061r\u0035"
	case 18:
		return "\u0073\u0074\u0061r\u0036"
	case 19:
		return "\u0073\u0074\u0061r\u0037"
	case 20:
		return "\u0073\u0074\u0061r\u0038"
	case 21:
		return "\u0073\u0074\u0061\u0072\u0031\u0030"
	case 22:
		return "\u0073\u0074\u0061\u0072\u0031\u0032"
	case 23:
		return "\u0073\u0074\u0061\u0072\u0031\u0036"
	case 24:
		return "\u0073\u0074\u0061\u0072\u0032\u0034"
	case 25:
		return "\u0073\u0074\u0061\u0072\u0033\u0032"
	case 26:
		return "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case 27:
		return "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case 28:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case 29:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case 30:
		return "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case 31:
		return "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case 32:
		return "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case 33:
		return "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case 34:
		return "\u0070\u006c\u0061\u0071\u0075\u0065"
	case 35:
		return "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case 36:
		return "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case 37:
		return "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case 38:
		return "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case 39:
		return "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case 40:
		return "\u0070\u0069\u0065"
	case 41:
		return "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case 42:
		return "\u0064\u006f\u006eu\u0074"
	case 43:
		return "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case 44:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 45:
		return "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case 46:
		return "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case 47:
		return "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case 48:
		return "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 49:
		return "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 50:
		return "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 51:
		return "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 52:
		return "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 53:
		return "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 54:
		return "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 55:
		return "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case 56:
		return "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 57:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 58:
		return "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 59:
		return "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 60:
		return "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 61:
		return "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case 62:
		return "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 63:
		return "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case 64:
		return "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case 65:
		return "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case 66:
		return "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case 67:
		return "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case 68:
		return "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 69:
		return "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case 70:
		return "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 71:
		return "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 72:
		return "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case 73:
		return "\u0063\u0075\u0062\u0065"
	case 74:
		return "\u0063\u0061\u006e"
	case 75:
		return "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case 76:
		return "\u0068\u0065\u0061r\u0074"
	case 77:
		return "\u0073\u0075\u006e"
	case 78:
		return "\u006d\u006f\u006f\u006e"
	case 79:
		return "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case 80:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case 81:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case 82:
		return "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case 83:
		return "\u0062\u0065\u0076e\u006c"
	case 84:
		return "\u0066\u0072\u0061m\u0065"
	case 85:
		return "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case 86:
		return "\u0063\u006f\u0072\u006e\u0065\u0072"
	case 87:
		return "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case 88:
		return "\u0063\u0068\u006fr\u0064"
	case 89:
		return "\u0061\u0072\u0063"
	case 90:
		return "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 91:
		return "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 92:
		return "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case 93:
		return "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case 94:
		return "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case 95:
		return "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case 96:
		return "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case 97:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case 98:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case 99:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case 100:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case 101:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case 102:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case 103:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case 104:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case 105:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case 106:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case 107:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case 108:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 109:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 110:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 111:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 112:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 113:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 114:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case 115:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case 116:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case 117:
		return "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 118:
		return "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 119:
		return "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 120:
		return "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 121:
		return "\u0063\u006c\u006fu\u0064"
	case 122:
		return "\u0072\u0069\u0062\u0062\u006f\u006e"
	case 123:
		return "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case 124:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case 125:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case 126:
		return "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case 127:
		return "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case 128:
		return "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case 129:
		return "\u0077\u0061\u0076\u0065"
	case 130:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case 131:
		return "\u0070\u006c\u0075\u0073"
	case 132:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case 133:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case 134:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case 135:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case 136:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 137:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case 138:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case 139:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case 140:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case 141:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case 142:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case 143:
		return "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case 144:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case 145:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case 146:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case 147:
		return "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case 148:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case 149:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case 150:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case 151:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case 152:
		return "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 153:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case 154:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case 155:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case 156:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case 157:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case 158:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case 159:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case 160:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case 161:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case 162:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case 163:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case 164:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case 165:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case 166:
		return "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case 167:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case 168:
		return "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case 169:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case 170:
		return "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case 171:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case 172:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case 173:
		return "\u0067\u0065\u0061r\u0036"
	case 174:
		return "\u0067\u0065\u0061r\u0039"
	case 175:
		return "\u0066\u0075\u006e\u006e\u0065\u006c"
	case 176:
		return "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case 177:
		return "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case 178:
		return "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case 179:
		return "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case 180:
		return "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case 181:
		return "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 182:
		return "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case 183:
		return "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case 184:
		return "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case 185:
		return "\u0063\u0068\u0061\u0072\u0074\u0058"
	case 186:
		return "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case 187:
		return "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return ""
}
func (_gdaadg *CT_TextBlipBullet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ffbeg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
	e.EncodeElement(_gdaadg.Blip, _ffbeg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcdgb ST_SystemColorVal) ValidateWithPath(path string) error {
	switch _gcdgb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcdgb))
	}
	return nil
}
func (_fdbc *CT_StyleMatrix) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdbc.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_fdbc.NameAttr)})
	}
	e.EncodeToken(start)
	_afgb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_fdbc.FillStyleLst, _afgb)
	_bdcdc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cn\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_fdbc.LnStyleLst, _bdcdc)
	_dfdea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003ae\u0066\u0066\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_fdbc.EffectStyleLst, _dfdea)
	_dfcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003ab\u0067\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_fdbc.BgFillStyleLst, _dfcf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_FontCollectionIndexUnset ST_FontCollectionIndex = 0
	ST_FontCollectionIndexMajor ST_FontCollectionIndex = 1
	ST_FontCollectionIndexMinor ST_FontCollectionIndex = 2
	ST_FontCollectionIndexNone  ST_FontCollectionIndex = 3
)

// ST_AdjCoordinate is a union type
type ST_AdjCoordinate struct {
	ST_Coordinate    *ST_Coordinate
	ST_GeomGuideName *string
}

func (_gcafa *EG_ShadeProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_babce:
	for {
		_eccfbc, _ddbef := d.Token()
		if _ddbef != nil {
			return _ddbef
		}
		switch _acadd := _eccfbc.(type) {
		case _b.StartElement:
			switch _acadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_gcafa.Lin = NewCT_LinearShadeProperties()
				if _fbfcc := d.DecodeElement(_gcafa.Lin, &_acadd); _fbfcc != nil {
					return _fbfcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_gcafa.Path = NewCT_PathShadeProperties()
				if _daedf := d.DecodeElement(_gcafa.Path, &_acadd); _daedf != nil {
					return _daedf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _acadd.Name)
				if _beagd := d.Skip(); _beagd != nil {
					return _beagd
				}
			}
		case _b.EndElement:
			break _babce
		case _b.CharData:
		}
	}
	return nil
}

type CT_XYAdjustHandle struct {
	GdRefXAttr *string
	MinXAttr   *ST_AdjCoordinate
	MaxXAttr   *ST_AdjCoordinate
	GdRefYAttr *string
	MinYAttr   *ST_AdjCoordinate
	MaxYAttr   *ST_AdjCoordinate
	Pos        *CT_AdjPoint2D
}

func (_fabfbe ST_PresetColorVal) ValidateWithPath(path string) error {
	switch _fabfbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fabfbe))
	}
	return nil
}
func NewEG_ShadeProperties() *EG_ShadeProperties { _gacbc := &EG_ShadeProperties{}; return _gacbc }

const (
	ST_RectAlignmentUnset ST_RectAlignment = 0
	ST_RectAlignmentTl    ST_RectAlignment = 1
	ST_RectAlignmentT     ST_RectAlignment = 2
	ST_RectAlignmentTr    ST_RectAlignment = 3
	ST_RectAlignmentL     ST_RectAlignment = 4
	ST_RectAlignmentCtr   ST_RectAlignment = 5
	ST_RectAlignmentR     ST_RectAlignment = 6
	ST_RectAlignmentBl    ST_RectAlignment = 7
	ST_RectAlignmentB     ST_RectAlignment = 8
	ST_RectAlignmentBr    ST_RectAlignment = 9
)

func (_fbgbg ST_OnOffStyleType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdcfc := _b.Attr{}
	_cdcfc.Name = name
	switch _fbgbg {
	case ST_OnOffStyleTypeUnset:
		_cdcfc.Value = ""
	case ST_OnOffStyleTypeOn:
		_cdcfc.Value = "\u006f\u006e"
	case ST_OnOffStyleTypeOff:
		_cdcfc.Value = "\u006f\u0066\u0066"
	case ST_OnOffStyleTypeDef:
		_cdcfc.Value = "\u0064\u0065\u0066"
	}
	return _cdcfc, nil
}
func NewCT_TableStyleList() *CT_TableStyleList {
	_dggbeb := &CT_TableStyleList{}
	_dggbeb.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _dggbeb
}
func NewCT_Bevel() *CT_Bevel { _dcded := &CT_Bevel{}; return _dcded }
func NewCT_NonVisualGroupDrawingShapeProps() *CT_NonVisualGroupDrawingShapeProps {
	_ffee := &CT_NonVisualGroupDrawingShapeProps{}
	return _ffee
}

// ValidateWithPath validates the CT_TableStyleList and its children, prefixing error messages with path
func (_edddc *CT_TableStyleList) ValidateWithPath(path string) error {
	if !_eb.ST_GuidPatternRe.MatchString(_edddc.DefAttr) {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044\u0065\u0066\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eb.ST_GuidPatternRe, _edddc.DefAttr)
	}
	for _bfgbc, _gbfba := range _edddc.TblStyle {
		if _dffdc := _gbfba.ValidateWithPath(_bb.Sprintf("\u0025s\u002fT\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _bfgbc)); _dffdc != nil {
			return _dffdc
		}
	}
	return nil
}
func NewCT_EmptyElement() *CT_EmptyElement { _aedfa := &CT_EmptyElement{}; return _aedfa }
func (_caaad ST_TextAutonumberScheme) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_faafb := _b.Attr{}
	_faafb.Name = name
	switch _caaad {
	case ST_TextAutonumberSchemeUnset:
		_faafb.Value = ""
	case ST_TextAutonumberSchemeAlphaLcParenBoth:
		_faafb.Value = "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaUcParenBoth:
		_faafb.Value = "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaLcParenR:
		_faafb.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaUcParenR:
		_faafb.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaLcPeriod:
		_faafb.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeAlphaUcPeriod:
		_faafb.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicParenBoth:
		_faafb.Value = "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeArabicParenR:
		_faafb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeArabicPeriod:
		_faafb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicPlain:
		_faafb.Value = "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeRomanLcParenBoth:
		_faafb.Value = "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanUcParenBoth:
		_faafb.Value = "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanLcParenR:
		_faafb.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanUcParenR:
		_faafb.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanLcPeriod:
		_faafb.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeRomanUcPeriod:
		_faafb.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeCircleNumDbPlain:
		_faafb.Value = "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdBlackPlain:
		_faafb.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdWhitePlain:
		_faafb.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeArabicDbPeriod:
		_faafb.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicDbPlain:
		_faafb.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChsPeriod:
		_faafb.Value = "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChsPlain:
		_faafb.Value = "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChtPeriod:
		_faafb.Value = "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChtPlain:
		_faafb.Value = "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnChsDbPeriod:
		_faafb.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1JpnKorPlain:
		_faafb.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnKorPeriod:
		_faafb.Value = "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabic1Minus:
		_faafb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeArabic2Minus:
		_faafb.Value = "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeHebrew2Minus:
		_faafb.Value = "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeThaiAlphaPeriod:
		_faafb.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiAlphaParenR:
		_faafb.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiAlphaParenBoth:
		_faafb.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeThaiNumPeriod:
		_faafb.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiNumParenR:
		_faafb.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiNumParenBoth:
		_faafb.Value = "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeHindiAlphaPeriod:
		_faafb.Value = "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumPeriod:
		_faafb.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumParenR:
		_faafb.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeHindiAlpha1Period:
		_faafb.Value = "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return _faafb, nil
}
func NewCT_TextTabStopList() *CT_TextTabStopList { _cefa := &CT_TextTabStopList{}; return _cefa }
func (_cfeggd ST_LineEndLength) ValidateWithPath(path string) error {
	switch _cfeggd {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfeggd))
	}
	return nil
}
func (_adfbd *CT_InverseTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_BlendMode byte

// ValidateWithPath validates the CT_TableCellBorderStyle and its children, prefixing error messages with path
func (_acdab *CT_TableCellBorderStyle) ValidateWithPath(path string) error {
	if _acdab.Left != nil {
		if _ebecd := _acdab.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _ebecd != nil {
			return _ebecd
		}
	}
	if _acdab.Right != nil {
		if _fgbca := _acdab.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _fgbca != nil {
			return _fgbca
		}
	}
	if _acdab.Top != nil {
		if _beee := _acdab.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _beee != nil {
			return _beee
		}
	}
	if _acdab.Bottom != nil {
		if _gcfcd := _acdab.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _gcfcd != nil {
			return _gcfcd
		}
	}
	if _acdab.InsideH != nil {
		if _fagg := _acdab.InsideH.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0048"); _fagg != nil {
			return _fagg
		}
	}
	if _acdab.InsideV != nil {
		if _fagdf := _acdab.InsideV.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0056"); _fagdf != nil {
			return _fagdf
		}
	}
	if _acdab.Tl2br != nil {
		if _aegga := _acdab.Tl2br.ValidateWithPath(path + "\u002f\u0054\u006c\u0032\u0062\u0072"); _aegga != nil {
			return _aegga
		}
	}
	if _acdab.Tr2bl != nil {
		if _ggfdg := _acdab.Tr2bl.ValidateWithPath(path + "\u002f\u0054\u0072\u0032\u0062\u006c"); _ggfdg != nil {
			return _ggfdg
		}
	}
	if _acdab.ExtLst != nil {
		if _dcgafa := _acdab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcgafa != nil {
			return _dcgafa
		}
	}
	return nil
}

const (
	ST_OnOffStyleTypeUnset ST_OnOffStyleType = 0
	ST_OnOffStyleTypeOn    ST_OnOffStyleType = 1
	ST_OnOffStyleTypeOff   ST_OnOffStyleType = 2
	ST_OnOffStyleTypeDef   ST_OnOffStyleType = 3
)

func (_acabc *ST_SystemColorVal) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acabc = 0
	case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
		*_acabc = 1
	case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
		*_acabc = 2
	case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_acabc = 3
	case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_acabc = 4
	case "\u006d\u0065\u006e\u0075":
		*_acabc = 5
	case "\u0077\u0069\u006e\u0064\u006f\u0077":
		*_acabc = 6
	case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
		*_acabc = 7
	case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
		*_acabc = 8
	case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
		*_acabc = 9
	case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_acabc = 10
	case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
		*_acabc = 11
	case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
		*_acabc = 12
	case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
		*_acabc = 13
	case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
		*_acabc = 14
	case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
		*_acabc = 15
	case "\u0062t\u006e\u0046\u0061\u0063\u0065":
		*_acabc = 16
	case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
		*_acabc = 17
	case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
		*_acabc = 18
	case "\u0062t\u006e\u0054\u0065\u0078\u0074":
		*_acabc = 19
	case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_acabc = 20
	case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_acabc = 21
	case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
		*_acabc = 22
	case "\u0033d\u004c\u0069\u0067\u0068\u0074":
		*_acabc = 23
	case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
		*_acabc = 24
	case "\u0069\u006e\u0066\u006f\u0042\u006b":
		*_acabc = 25
	case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
		*_acabc = 26
	case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
		*_acabc = 27
	case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_acabc = 28
	case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_acabc = 29
	case "\u006de\u006e\u0075\u0042\u0061\u0072":
		*_acabc = 30
	}
	return nil
}

// ValidateWithPath validates the CT_TableCell and its children, prefixing error messages with path
func (_cdaea *CT_TableCell) ValidateWithPath(path string) error {
	if _cdaea.TxBody != nil {
		if _fdcaf := _cdaea.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _fdcaf != nil {
			return _fdcaf
		}
	}
	if _cdaea.TcPr != nil {
		if _dcadb := _cdaea.TcPr.ValidateWithPath(path + "\u002f\u0054\u0063P\u0072"); _dcadb != nil {
			return _dcadb
		}
	}
	if _cdaea.ExtLst != nil {
		if _daeagb := _cdaea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daeagb != nil {
			return _daeagb
		}
	}
	return nil
}

// ST_PositivePercentage is a union type
type ST_PositivePercentage struct {
	ST_PositivePercentageDecimal *int32
	ST_PositivePercentage        *ST_Percentage
}

func (_faece *CT_Point2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _faece.XAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _faece.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbbeb ST_PenAlignment) String() string {
	switch _dbbeb {
	case 0:
		return ""
	case 1:
		return "\u0063\u0074\u0072"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}
func (_bbgebf ST_PresetColorVal) String() string {
	switch _bbgebf {
	case 0:
		return ""
	case 1:
		return "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case 2:
		return "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case 3:
		return "\u0061\u0071\u0075\u0061"
	case 4:
		return "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 5:
		return "\u0061\u007a\u0075r\u0065"
	case 6:
		return "\u0062\u0065\u0069g\u0065"
	case 7:
		return "\u0062\u0069\u0073\u0071\u0075\u0065"
	case 8:
		return "\u0062\u006c\u0061c\u006b"
	case 9:
		return "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case 10:
		return "\u0062\u006c\u0075\u0065"
	case 11:
		return "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case 12:
		return "\u0062\u0072\u006fw\u006e"
	case 13:
		return "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case 14:
		return "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case 15:
		return "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case 16:
		return "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case 17:
		return "\u0063\u006f\u0072a\u006c"
	case 18:
		return "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case 19:
		return "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case 20:
		return "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case 21:
		return "\u0063\u0079\u0061\u006e"
	case 22:
		return "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case 23:
		return "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case 24:
		return "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 25:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 26:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case 27:
		return "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case 28:
		return "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case 29:
		return "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case 30:
		return "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case 31:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 32:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 33:
		return "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case 34:
		return "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 35:
		return "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 36:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 37:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 38:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 39:
		return "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 40:
		return "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 41:
		return "\u0064\u006b\u0042\u006c\u0075\u0065"
	case 42:
		return "\u0064\u006b\u0043\u0079\u0061\u006e"
	case 43:
		return "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 44:
		return "\u0064\u006b\u0047\u0072\u0061\u0079"
	case 45:
		return "\u0064\u006b\u0047\u0072\u0065\u0079"
	case 46:
		return "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case 47:
		return "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case 48:
		return "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case 49:
		return "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case 50:
		return "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 51:
		return "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 52:
		return "\u0064\u006b\u0052e\u0064"
	case 53:
		return "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 54:
		return "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 55:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 56:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 57:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 58:
		return "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 59:
		return "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 60:
		return "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case 61:
		return "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 62:
		return "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case 63:
		return "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case 64:
		return "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case 65:
		return "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case 66:
		return "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case 67:
		return "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case 68:
		return "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case 69:
		return "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case 70:
		return "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case 71:
		return "\u0067\u006f\u006c\u0064"
	case 72:
		return "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case 73:
		return "\u0067\u0072\u0061\u0079"
	case 74:
		return "\u0067\u0072\u0065\u0079"
	case 75:
		return "\u0067\u0072\u0065e\u006e"
	case 76:
		return "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case 77:
		return "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case 78:
		return "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case 79:
		return "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case 80:
		return "\u0069\u006e\u0064\u0069\u0067\u006f"
	case 81:
		return "\u0069\u0076\u006fr\u0079"
	case 82:
		return "\u006b\u0068\u0061k\u0069"
	case 83:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case 84:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case 85:
		return "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case 86:
		return "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case 87:
		return "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case 88:
		return "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case 89:
		return "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case 90:
		return "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case 91:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 92:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case 93:
		return "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case 94:
		return "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case 95:
		return "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 96:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 97:
		return "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 98:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case 99:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case 100:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case 101:
		return "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 102:
		return "\u006c\u0074\u0042\u006c\u0075\u0065"
	case 103:
		return "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case 104:
		return "\u006c\u0074\u0043\u0079\u0061\u006e"
	case 105:
		return "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case 106:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 107:
		return "\u006c\u0074\u0047\u0072\u0065\u0079"
	case 108:
		return "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case 109:
		return "\u006c\u0074\u0050\u0069\u006e\u006b"
	case 110:
		return "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 111:
		return "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 112:
		return "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case 113:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 114:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 115:
		return "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case 116:
		return "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 117:
		return "\u006c\u0069\u006d\u0065"
	case 118:
		return "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case 119:
		return "\u006c\u0069\u006ee\u006e"
	case 120:
		return "\u006da\u0067\u0065\u006e\u0074\u0061"
	case 121:
		return "\u006d\u0061\u0072\u006f\u006f\u006e"
	case 122:
		return "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 123:
		return "\u006de\u0064\u0042\u006c\u0075\u0065"
	case 124:
		return "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case 125:
		return "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case 126:
		return "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 127:
		return "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 128:
		return "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 129:
		return "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 130:
		return "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 131:
		return "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 132:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case 133:
		return "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case 134:
		return "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case 135:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case 136:
		return "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 137:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 138:
		return "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 139:
		return "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 140:
		return "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case 141:
		return "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case 142:
		return "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case 143:
		return "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case 144:
		return "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case 145:
		return "\u006e\u0061\u0076\u0079"
	case 146:
		return "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case 147:
		return "\u006f\u006c\u0069v\u0065"
	case 148:
		return "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case 149:
		return "\u006f\u0072\u0061\u006e\u0067\u0065"
	case 150:
		return "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case 151:
		return "\u006f\u0072\u0063\u0068\u0069\u0064"
	case 152:
		return "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 153:
		return "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case 154:
		return "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 155:
		return "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 156:
		return "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case 157:
		return "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case 158:
		return "\u0070\u0065\u0072\u0075"
	case 159:
		return "\u0070\u0069\u006e\u006b"
	case 160:
		return "\u0070\u006c\u0075\u006d"
	case 161:
		return "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case 162:
		return "\u0070\u0075\u0072\u0070\u006c\u0065"
	case 163:
		return "\u0072\u0065\u0064"
	case 164:
		return "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case 165:
		return "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case 166:
		return "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case 167:
		return "\u0073\u0061\u006c\u006d\u006f\u006e"
	case 168:
		return "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case 169:
		return "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 170:
		return "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case 171:
		return "\u0073\u0069\u0065\u006e\u006e\u0061"
	case 172:
		return "\u0073\u0069\u006c\u0076\u0065\u0072"
	case 173:
		return "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case 174:
		return "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case 175:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case 176:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case 177:
		return "\u0073\u006e\u006f\u0077"
	case 178:
		return "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case 179:
		return "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case 180:
		return "\u0074\u0061\u006e"
	case 181:
		return "\u0074\u0065\u0061\u006c"
	case 182:
		return "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case 183:
		return "\u0074\u006f\u006d\u0061\u0074\u006f"
	case 184:
		return "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case 185:
		return "\u0076\u0069\u006f\u006c\u0065\u0074"
	case 186:
		return "\u0077\u0068\u0065a\u0074"
	case 187:
		return "\u0077\u0068\u0069t\u0065"
	case 188:
		return "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case 189:
		return "\u0079\u0065\u006c\u006c\u006f\u0077"
	case 190:
		return "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return ""
}
func (_aadaf *ThemeOverride) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074h\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"
	return _aadaf.CT_BaseStylesOverride.MarshalXML(e, start)
}
func NewEG_FillModeProperties() *EG_FillModeProperties {
	_gecce := &EG_FillModeProperties{}
	return _gecce
}
func (_decc *CT_GvmlGraphicalObjectFrame) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_acaag := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_decc.NvGraphicFramePr, _acaag)
	_gcacb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_decc.Graphic, _gcacb)
	_gggdcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_decc.Xfrm, _gggdcc)
	if _decc.ExtLst != nil {
		_bebc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_decc.ExtLst, _bebc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ST_FixedPercentage is a union type
type ST_FixedPercentage struct {
	ST_FixedPercentageDecimal *int32
	ST_FixedPercentage        *ST_Percentage
}

func (_febgef *CT_TextListStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _febgef.DefPPr != nil {
		_cadfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0050\u0050\u0072"}}
		e.EncodeElement(_febgef.DefPPr, _cadfb)
	}
	if _febgef.Lvl1pPr != nil {
		_dcfdc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0031\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl1pPr, _dcfdc)
	}
	if _febgef.Lvl2pPr != nil {
		_dffbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0032\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl2pPr, _dffbg)
	}
	if _febgef.Lvl3pPr != nil {
		_bafad := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0033\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl3pPr, _bafad)
	}
	if _febgef.Lvl4pPr != nil {
		_gabe := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0034\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl4pPr, _gabe)
	}
	if _febgef.Lvl5pPr != nil {
		_bagfc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0035\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl5pPr, _bagfc)
	}
	if _febgef.Lvl6pPr != nil {
		_babdf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0036\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl6pPr, _babdf)
	}
	if _febgef.Lvl7pPr != nil {
		_edgg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0037\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl7pPr, _edgg)
	}
	if _febgef.Lvl8pPr != nil {
		_dfebafg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0038\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl8pPr, _dfebafg)
	}
	if _febgef.Lvl9pPr != nil {
		_fafdg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0076\u006c\u0039\u0070\u0050r"}}
		e.EncodeElement(_febgef.Lvl9pPr, _fafdg)
	}
	if _febgef.ExtLst != nil {
		_dffgc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_febgef.ExtLst, _dffgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ae *AG_Locking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ae.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoGrpAttr))})
	}
	if _ae.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoSelectAttr))})
	}
	if _ae.NoRotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoRotAttr))})
	}
	if _ae.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoChangeAspectAttr))})
	}
	if _ae.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoMoveAttr))})
	}
	if _ae.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoResizeAttr))})
	}
	if _ae.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoEditPointsAttr))})
	}
	if _ae.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoAdjustHandlesAttr))})
	}
	if _ae.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoChangeArrowheadsAttr))})
	}
	if _ae.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ae.NoChangeShapeTypeAttr))})
	}
	return nil
}
func (_bgeaa *CT_GvmlTextShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dfcaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
	e.EncodeElement(_bgeaa.TxBody, _dfcaa)
	if _bgeaa.Choice != nil {
		_bgeaa.Choice.MarshalXML(e, _b.StartElement{})
	}
	if _bgeaa.ExtLst != nil {
		_gcadga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgeaa.ExtLst, _gcadga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_PatternFillProperties() *CT_PatternFillProperties {
	_efagg := &CT_PatternFillProperties{}
	return _efagg
}

// ValidateWithPath validates the CT_LineJoinBevel and its children, prefixing error messages with path
func (_becd *CT_LineJoinBevel) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Path2DList and its children, prefixing error messages with path
func (_daaac *CT_Path2DList) ValidateWithPath(path string) error {
	for _bcdga, _abgb := range _daaac.Path {
		if _gcfb := _abgb.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0050\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _bcdga)); _gcfb != nil {
			return _gcfb
		}
	}
	return nil
}
func (_edebg *EG_TextGeometry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edcgd:
	for {
		_eebcb, _egfgag := d.Token()
		if _egfgag != nil {
			return _egfgag
		}
		switch _cfgdb := _eebcb.(type) {
		case _b.StartElement:
			switch _cfgdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_edebg.CustGeom = NewCT_CustomGeometry2D()
				if _fbdfg := d.DecodeElement(_edebg.CustGeom, &_cfgdb); _fbdfg != nil {
					return _fbdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_edebg.PrstTxWarp = NewCT_PresetTextShape()
				if _accdg := d.DecodeElement(_edebg.PrstTxWarp, &_cfgdb); _accdg != nil {
					return _accdg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078t\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _cfgdb.Name)
				if _agcdc := d.Skip(); _agcdc != nil {
					return _agcdc
				}
			}
		case _b.EndElement:
			break _edcgd
		case _b.CharData:
		}
	}
	return nil
}

type CT_NonVisualConnectorProperties struct {
	CxnSpLocks *CT_ConnectorLocking
	StCxn      *CT_Connection
	EndCxn     *CT_Connection
	ExtLst     *CT_OfficeArtExtensionList
}

func (_afabg ST_TextTabAlignType) Validate() error { return _afabg.ValidateWithPath("") }

type CT_GlowEffect struct {
	RadAttr   *int64
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}
type CT_BaseStyles struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
	ExtLst     *CT_OfficeArtExtensionList
}

func (_aeccc *CT_TableGrid) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aeccc.GridCol != nil {
		_baedc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0069\u0064\u0043\u006fl"}}
		for _, _bdccg := range _aeccc.GridCol {
			e.EncodeElement(_bdccg, _baedc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dedb ST_CompoundLine) String() string {
	switch _dedb {
	case 0:
		return ""
	case 1:
		return "\u0073\u006e\u0067"
	case 2:
		return "\u0064\u0062\u006c"
	case 3:
		return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case 4:
		return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case 5:
		return "\u0074\u0072\u0069"
	}
	return ""
}

type ST_RectAlignment byte

func NewTheme() *Theme {
	_aegdgg := &Theme{}
	_aegdgg.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	return _aegdgg
}

// ValidateWithPath validates the CT_WholeE2oFormatting and its children, prefixing error messages with path
func (_ggafe *CT_WholeE2oFormatting) ValidateWithPath(path string) error {
	if _ggafe.Ln != nil {
		if _bbadb := _ggafe.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _bbadb != nil {
			return _bbadb
		}
	}
	if _ggafe.EffectLst != nil {
		if _dgagf := _ggafe.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _dgagf != nil {
			return _dgagf
		}
	}
	if _ggafe.EffectDag != nil {
		if _fccfdb := _ggafe.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fccfdb != nil {
			return _fccfdb
		}
	}
	return nil
}

// Validate validates the CT_TextBulletColorFollowText and its children
func (_bgbec *CT_TextBulletColorFollowText) Validate() error {
	return _bgbec.ValidateWithPath("\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074")
}
func (_cade *CT_ColorReplaceEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fbaf:
	for {
		_bbef, _aaeb := d.Token()
		if _aaeb != nil {
			return _aaeb
		}
		switch _eaabb := _bbef.(type) {
		case _b.StartElement:
			switch _eaabb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cade.ScrgbClr = NewCT_ScRgbColor()
				if _cefe := d.DecodeElement(_cade.ScrgbClr, &_eaabb); _cefe != nil {
					return _cefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cade.SrgbClr = NewCT_SRgbColor()
				if _dedg := d.DecodeElement(_cade.SrgbClr, &_eaabb); _dedg != nil {
					return _dedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cade.HslClr = NewCT_HslColor()
				if _cecd := d.DecodeElement(_cade.HslClr, &_eaabb); _cecd != nil {
					return _cecd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cade.SysClr = NewCT_SystemColor()
				if _cafbc := d.DecodeElement(_cade.SysClr, &_eaabb); _cafbc != nil {
					return _cafbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cade.SchemeClr = NewCT_SchemeColor()
				if _gabae := d.DecodeElement(_cade.SchemeClr, &_eaabb); _gabae != nil {
					return _gabae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cade.PrstClr = NewCT_PresetColor()
				if _ggf := d.DecodeElement(_cade.PrstClr, &_eaabb); _ggf != nil {
					return _ggf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0052\u0065\u0070\u006c\u0061\u0063\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _eaabb.Name)
				if _gfgc := d.Skip(); _gfgc != nil {
					return _gfgc
				}
			}
		case _b.EndElement:
			break _fbaf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_BiLevelEffect() *CT_BiLevelEffect { _gdcb := &CT_BiLevelEffect{}; return _gdcb }
func NewCT_TextParagraph() *CT_TextParagraph { _dbfg := &CT_TextParagraph{}; return _dbfg }

// Validate validates the EG_ColorChoice and its children
func (_adeg *EG_ColorChoice) Validate() error {
	return _adeg.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_AnimationGraphicalObjectBuildProperties and its children
func (_efbg *CT_AnimationGraphicalObjectBuildProperties) Validate() error {
	return _efbg.ValidateWithPath("\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TableCellBorderStyle and its children
func (_ffgcc *CT_TableCellBorderStyle) Validate() error {
	return _ffgcc.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065")
}
func (_fggca *CT_TableCellBorderStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bagce:
	for {
		_fbaag, _ffgcg := d.Token()
		if _ffgcg != nil {
			return _ffgcg
		}
		switch _fabedg := _fbaag.(type) {
		case _b.StartElement:
			switch _fabedg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_fggca.Left = NewCT_ThemeableLineStyle()
				if _agdae := d.DecodeElement(_fggca.Left, &_fabedg); _agdae != nil {
					return _agdae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_fggca.Right = NewCT_ThemeableLineStyle()
				if _agae := d.DecodeElement(_fggca.Right, &_fabedg); _agae != nil {
					return _agae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_fggca.Top = NewCT_ThemeableLineStyle()
				if _dgdfb := d.DecodeElement(_fggca.Top, &_fabedg); _dgdfb != nil {
					return _dgdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_fggca.Bottom = NewCT_ThemeableLineStyle()
				if _cdbaa := d.DecodeElement(_fggca.Bottom, &_fabedg); _cdbaa != nil {
					return _cdbaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}:
				_fggca.InsideH = NewCT_ThemeableLineStyle()
				if _badg := d.DecodeElement(_fggca.InsideH, &_fabedg); _badg != nil {
					return _badg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}:
				_fggca.InsideV = NewCT_ThemeableLineStyle()
				if _dbgab := d.DecodeElement(_fggca.InsideV, &_fabedg); _dbgab != nil {
					return _dbgab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}:
				_fggca.Tl2br = NewCT_ThemeableLineStyle()
				if _fbcba := d.DecodeElement(_fggca.Tl2br, &_fabedg); _fbcba != nil {
					return _fbcba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}:
				_fggca.Tr2bl = NewCT_ThemeableLineStyle()
				if _bbga := d.DecodeElement(_fggca.Tr2bl, &_fabedg); _bbga != nil {
					return _bbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fggca.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbebf := d.DecodeElement(_fggca.ExtLst, &_fabedg); _bbebf != nil {
					return _bbebf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006cB\u006f\u0072\u0064\u0065\u0072\u0053t\u0079\u006c\u0065 \u0025\u0076", _fabedg.Name)
				if _dccbf := d.Skip(); _dccbf != nil {
					return _dccbf
				}
			}
		case _b.EndElement:
			break _bagce
		case _b.CharData:
		}
	}
	return nil
}

// ST_TextSpacingPercentOrPercentString is a union type
type ST_TextSpacingPercentOrPercentString struct {
	ST_TextSpacingPercent *int32
	ST_Percentage         *string
}

// ValidateWithPath validates the CT_PresetLineDashProperties and its children, prefixing error messages with path
func (_cgbgb *CT_PresetLineDashProperties) ValidateWithPath(path string) error {
	if _bgebf := _cgbgb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bgebf != nil {
		return _bgebf
	}
	return nil
}
func (_aadbe *ST_PathShadeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cddbd, _gbdced := d.Token()
	if _gbdced != nil {
		return _gbdced
	}
	if _cbcbe, _becac := _cddbd.(_b.EndElement); _becac && _cbcbe.Name == start.Name {
		*_aadbe = 1
		return nil
	}
	if _acgedd, _ffgca := _cddbd.(_b.CharData); !_ffgca {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cddbd)
	} else {
		switch string(_acgedd) {
		case "":
			*_aadbe = 0
		case "\u0073\u0068\u0061p\u0065":
			*_aadbe = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_aadbe = 2
		case "\u0072\u0065\u0063\u0074":
			*_aadbe = 3
		}
	}
	_cddbd, _gbdced = d.Token()
	if _gbdced != nil {
		return _gbdced
	}
	if _fgagdd, _cfgcgg := _cddbd.(_b.EndElement); _cfgcgg && _fgagdd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cddbd)
}

var ST_TextBulletSizePercentPatternRe = _c.MustCompile(ST_TextBulletSizePercentPattern)

func (_gaeef ST_AnimationBuildType) ValidateWithPath(path string) error {
	switch _gaeef {
	case 0, 1:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaeef))
	}
	return nil
}

type CT_ColorSchemeAndMapping struct {
	ClrScheme *CT_ColorScheme
	ClrMap    *CT_ColorMapping
}

func NewCT_VideoFile() *CT_VideoFile { _faebb := &CT_VideoFile{}; return _faebb }
func NewCT_FontScheme() *CT_FontScheme {
	_ecae := &CT_FontScheme{}
	_ecae.MajorFont = NewCT_FontCollection()
	_ecae.MinorFont = NewCT_FontCollection()
	return _ecae
}

// ValidateWithPath validates the CT_Point2D and its children, prefixing error messages with path
func (_eadfef *CT_Point2D) ValidateWithPath(path string) error {
	if _eeae := _eadfef.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _eeae != nil {
		return _eeae
	}
	if _agbfg := _eadfef.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _agbfg != nil {
		return _agbfg
	}
	return nil
}
func (_gcgbe *ST_RectAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdbgcb, _baabfa := d.Token()
	if _baabfa != nil {
		return _baabfa
	}
	if _febbd, _cdefd := _bdbgcb.(_b.EndElement); _cdefd && _febbd.Name == start.Name {
		*_gcgbe = 1
		return nil
	}
	if _ffaccd, _dgbef := _bdbgcb.(_b.CharData); !_dgbef {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdbgcb)
	} else {
		switch string(_ffaccd) {
		case "":
			*_gcgbe = 0
		case "\u0074\u006c":
			*_gcgbe = 1
		case "\u0074":
			*_gcgbe = 2
		case "\u0074\u0072":
			*_gcgbe = 3
		case "\u006c":
			*_gcgbe = 4
		case "\u0063\u0074\u0072":
			*_gcgbe = 5
		case "\u0072":
			*_gcgbe = 6
		case "\u0062\u006c":
			*_gcgbe = 7
		case "\u0062":
			*_gcgbe = 8
		case "\u0062\u0072":
			*_gcgbe = 9
		}
	}
	_bdbgcb, _baabfa = d.Token()
	if _baabfa != nil {
		return _baabfa
	}
	if _afceed, _eecfa := _bdbgcb.(_b.EndElement); _eecfa && _afceed.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdbgcb)
}
func NewCT_Path2DLineTo() *CT_Path2DLineTo {
	_fbbec := &CT_Path2DLineTo{}
	_fbbec.Pt = NewCT_AdjPoint2D()
	return _fbbec
}

type CT_Headers struct{ Header []string }

func (_gcacd *CT_Path2DCubicBezierTo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gcce := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _ddfdb := range _gcacd.Pt {
		e.EncodeElement(_ddfdb, _gcce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dffee *CT_TextParagraphProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dffee.MarLAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _bb.Sprintf("\u0025\u0076", *_dffee.MarLAttr)})
	}
	if _dffee.MarRAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _bb.Sprintf("\u0025\u0076", *_dffee.MarRAttr)})
	}
	if _dffee.LvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0076\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_dffee.LvlAttr)})
	}
	if _dffee.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_dffee.IndentAttr)})
	}
	if _dffee.AlgnAttr != ST_TextAlignTypeUnset {
		_dddea, _eeccbe := _dffee.AlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _eeccbe != nil {
			return _eeccbe
		}
		start.Attr = append(start.Attr, _dddea)
	}
	if _dffee.DefTabSzAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_dffee.DefTabSzAttr)})
	}
	if _dffee.RtlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0074\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dffee.RtlAttr))})
	}
	if _dffee.EaLnBrkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065a\u004c\u006e\u0042\u0072\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dffee.EaLnBrkAttr))})
	}
	if _dffee.FontAlgnAttr != ST_TextFontAlignTypeUnset {
		_ceafc, _effee := _dffee.FontAlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e"})
		if _effee != nil {
			return _effee
		}
		start.Attr = append(start.Attr, _ceafc)
	}
	if _dffee.LatinLnBrkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dffee.LatinLnBrkAttr))})
	}
	if _dffee.HangingPunctAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dffee.HangingPunctAttr))})
	}
	e.EncodeToken(start)
	if _dffee.LnSpc != nil {
		_dcgafb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u006e\u0053\u0070\u0063"}}
		e.EncodeElement(_dffee.LnSpc, _dcgafb)
	}
	if _dffee.SpcBef != nil {
		_fcdc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0042\u0065\u0066"}}
		e.EncodeElement(_dffee.SpcBef, _fcdc)
	}
	if _dffee.SpcAft != nil {
		_adabe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0041\u0066\u0074"}}
		e.EncodeElement(_dffee.SpcAft, _adabe)
	}
	if _dffee.BuClrTx != nil {
		_feccb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_dffee.BuClrTx, _feccb)
	}
	if _dffee.BuClr != nil {
		_aadadd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_dffee.BuClr, _aadadd)
	}
	if _dffee.BuSzTx != nil {
		_abfe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_dffee.BuSzTx, _abfe)
	}
	if _dffee.BuSzPct != nil {
		_ggbgf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_dffee.BuSzPct, _ggbgf)
	}
	if _dffee.BuSzPts != nil {
		_gefcfa := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_dffee.BuSzPts, _gefcfa)
	}
	if _dffee.BuFontTx != nil {
		_edda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_dffee.BuFontTx, _edda)
	}
	if _dffee.BuFont != nil {
		_deda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_dffee.BuFont, _deda)
	}
	if _dffee.BuNone != nil {
		_eefdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_dffee.BuNone, _eefdf)
	}
	if _dffee.BuAutoNum != nil {
		_faaae := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_dffee.BuAutoNum, _faaae)
	}
	if _dffee.BuChar != nil {
		_bfcdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_dffee.BuChar, _bfcdf)
	}
	if _dffee.BuBlip != nil {
		_adbcgf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_dffee.BuBlip, _adbcgf)
	}
	if _dffee.TabLst != nil {
		_aefda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u004c\u0073\u0074"}}
		e.EncodeElement(_dffee.TabLst, _aefda)
	}
	if _dffee.DefRPr != nil {
		_edggd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0052\u0050\u0072"}}
		e.EncodeElement(_dffee.DefRPr, _edggd)
	}
	if _dffee.ExtLst != nil {
		_ddga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dffee.ExtLst, _ddga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egefd *CT_Path2DClose) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bage, _gacbb := d.Token()
		if _gacbb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0043\u006c\u006f\u0073\u0065:\u0020\u0025\u0073", _gacbb)
		}
		if _ffcaf, _bdbbb := _bage.(_b.EndElement); _bdbbb && _ffcaf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ColorMappingOverrideChoice and its children
func (_geb *CT_ColorMappingOverrideChoice) Validate() error {
	return _geb.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043\u0068oi\u0063\u0065")
}
func (_acdf *CT_Blip) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fceb := range start.Attr {
		if _fceb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fceb.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_cacg, _gcgc := _fceb.Value, error(nil)
			if _gcgc != nil {
				return _gcgc
			}
			_acdf.EmbedAttr = &_cacg
			continue
		}
		if _fceb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fceb.Name.Local == "\u006c\u0069\u006e\u006b" {
			_egb, _ggaa := _fceb.Value, error(nil)
			if _ggaa != nil {
				return _ggaa
			}
			_acdf.LinkAttr = &_egb
			continue
		}
		if _fceb.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_acdf.CstateAttr.UnmarshalXMLAttr(_fceb)
			continue
		}
	}
_gfcb:
	for {
		_bge, _bbfed := d.Token()
		if _bbfed != nil {
			return _bbfed
		}
		switch _bfgc := _bge.(type) {
		case _b.StartElement:
			switch _bfgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_aefe := NewCT_BlipChoice()
				if _deef := d.DecodeElement(&_aefe.AlphaBiLevel, &_bfgc); _deef != nil {
					return _deef
				}
				_acdf.Choice = append(_acdf.Choice, _aefe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_ceba := NewCT_BlipChoice()
				if _efae := d.DecodeElement(&_ceba.AlphaCeiling, &_bfgc); _efae != nil {
					return _efae
				}
				_acdf.Choice = append(_acdf.Choice, _ceba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_dgcg := NewCT_BlipChoice()
				if _fee := d.DecodeElement(&_dgcg.AlphaFloor, &_bfgc); _fee != nil {
					return _fee
				}
				_acdf.Choice = append(_acdf.Choice, _dgcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_abbf := NewCT_BlipChoice()
				if _aeda := d.DecodeElement(&_abbf.AlphaInv, &_bfgc); _aeda != nil {
					return _aeda
				}
				_acdf.Choice = append(_acdf.Choice, _abbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_gaa := NewCT_BlipChoice()
				if _dab := d.DecodeElement(&_gaa.AlphaMod, &_bfgc); _dab != nil {
					return _dab
				}
				_acdf.Choice = append(_acdf.Choice, _gaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_fccf := NewCT_BlipChoice()
				if _bdddf := d.DecodeElement(&_fccf.AlphaModFix, &_bfgc); _bdddf != nil {
					return _bdddf
				}
				_acdf.Choice = append(_acdf.Choice, _fccf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_fggb := NewCT_BlipChoice()
				if _faddf := d.DecodeElement(&_fggb.AlphaRepl, &_bfgc); _faddf != nil {
					return _faddf
				}
				_acdf.Choice = append(_acdf.Choice, _fggb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_fbec := NewCT_BlipChoice()
				if _aeaa := d.DecodeElement(&_fbec.BiLevel, &_bfgc); _aeaa != nil {
					return _aeaa
				}
				_acdf.Choice = append(_acdf.Choice, _fbec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_cbbc := NewCT_BlipChoice()
				if _dgag := d.DecodeElement(&_cbbc.Blur, &_bfgc); _dgag != nil {
					return _dgag
				}
				_acdf.Choice = append(_acdf.Choice, _cbbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_ecad := NewCT_BlipChoice()
				if _ffce := d.DecodeElement(&_ecad.ClrChange, &_bfgc); _ffce != nil {
					return _ffce
				}
				_acdf.Choice = append(_acdf.Choice, _ecad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_eaaf := NewCT_BlipChoice()
				if _dbbc := d.DecodeElement(&_eaaf.ClrRepl, &_bfgc); _dbbc != nil {
					return _dbbc
				}
				_acdf.Choice = append(_acdf.Choice, _eaaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_eecb := NewCT_BlipChoice()
				if _efec := d.DecodeElement(&_eecb.Duotone, &_bfgc); _efec != nil {
					return _efec
				}
				_acdf.Choice = append(_acdf.Choice, _eecb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_edfg := NewCT_BlipChoice()
				if _ecfg := d.DecodeElement(&_edfg.FillOverlay, &_bfgc); _ecfg != nil {
					return _ecfg
				}
				_acdf.Choice = append(_acdf.Choice, _edfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_aedc := NewCT_BlipChoice()
				if _efdc := d.DecodeElement(&_aedc.Grayscl, &_bfgc); _efdc != nil {
					return _efdc
				}
				_acdf.Choice = append(_acdf.Choice, _aedc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_dgcfg := NewCT_BlipChoice()
				if _dgagc := d.DecodeElement(&_dgcfg.Hsl, &_bfgc); _dgagc != nil {
					return _dgagc
				}
				_acdf.Choice = append(_acdf.Choice, _dgcfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_cddg := NewCT_BlipChoice()
				if _acbe := d.DecodeElement(&_cddg.Lum, &_bfgc); _acbe != nil {
					return _acbe
				}
				_acdf.Choice = append(_acdf.Choice, _cddg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bdc := NewCT_BlipChoice()
				if _gcbg := d.DecodeElement(&_bdc.Tint, &_bfgc); _gcbg != nil {
					return _gcbg
				}
				_acdf.Choice = append(_acdf.Choice, _bdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acdf.ExtLst = NewCT_OfficeArtExtensionList()
				if _cgfd := d.DecodeElement(_acdf.ExtLst, &_bfgc); _cgfd != nil {
					return _cgfd
				}
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0042\u006c\u0069\u0070\u0020\u0025\u0076", _bfgc.Name)
				if _cace := d.Skip(); _cace != nil {
					return _cace
				}
			}
		case _b.EndElement:
			break _gfcb
		case _b.CharData:
		}
	}
	return nil
}
func (_cfegg *CT_StyleMatrixReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfdg := range start.Attr {
		if _cfdg.Name.Local == "\u0069\u0064\u0078" {
			_cbgfa, _bfcf := _a.ParseUint(_cfdg.Value, 10, 32)
			if _bfcf != nil {
				return _bfcf
			}
			_cfegg.IdxAttr = uint32(_cbgfa)
			continue
		}
	}
_aeace:
	for {
		_bcdd, _cbecf := d.Token()
		if _cbecf != nil {
			return _cbecf
		}
		switch _gbdb := _bcdd.(type) {
		case _b.StartElement:
			switch _gbdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cfegg.ScrgbClr = NewCT_ScRgbColor()
				if _fbfbc := d.DecodeElement(_cfegg.ScrgbClr, &_gbdb); _fbfbc != nil {
					return _fbfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cfegg.SrgbClr = NewCT_SRgbColor()
				if _gcgfe := d.DecodeElement(_cfegg.SrgbClr, &_gbdb); _gcgfe != nil {
					return _gcgfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cfegg.HslClr = NewCT_HslColor()
				if _eecbg := d.DecodeElement(_cfegg.HslClr, &_gbdb); _eecbg != nil {
					return _eecbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cfegg.SysClr = NewCT_SystemColor()
				if _cegcd := d.DecodeElement(_cfegg.SysClr, &_gbdb); _cegcd != nil {
					return _cegcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cfegg.SchemeClr = NewCT_SchemeColor()
				if _befed := d.DecodeElement(_cfegg.SchemeClr, &_gbdb); _befed != nil {
					return _befed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cfegg.PrstClr = NewCT_PresetColor()
				if _cggbd := d.DecodeElement(_cfegg.PrstClr, &_gbdb); _cggbd != nil {
					return _cggbd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061\u0074\u0072i\u0078\u0052\u0065\u0066\u0065\u0072e\u006e\u0063\u0065 \u0025\u0076", _gbdb.Name)
				if _feda := d.Skip(); _feda != nil {
					return _feda
				}
			}
		case _b.EndElement:
			break _aeace
		case _b.CharData:
		}
	}
	return nil
}
func (_aegba *CT_StretchInfoProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aegba.FillRect != nil {
		_edaaba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_aegba.FillRect, _edaaba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbce *CT_AnimationDgmElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebac := range start.Attr {
		if _ebac.Name.Local == "\u0069\u0064" {
			_ggb, _bfee := _ebac.Value, error(nil)
			if _bfee != nil {
				return _bfee
			}
			_fbce.IdAttr = &_ggb
			continue
		}
		if _ebac.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_fbce.BldStepAttr.UnmarshalXMLAttr(_ebac)
			continue
		}
	}
	for {
		_efcg, _ece := d.Token()
		if _ece != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069m\u0061t\u0069o\u006eD\u0067\u006d\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _ece)
		}
		if _fcf, _afc := _efcg.(_b.EndElement); _afc && _fcf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GradientStopList and its children
func (_afcdg *CT_GradientStopList) Validate() error {
	return _afcdg.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}
func (_cdecc *CT_Ratio) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adcfb := range start.Attr {
		if _adcfb.Name.Local == "\u006e" {
			_dbged, _bbde := _a.ParseInt(_adcfb.Value, 10, 64)
			if _bbde != nil {
				return _bbde
			}
			_cdecc.NAttr = _dbged
			continue
		}
		if _adcfb.Name.Local == "\u0064" {
			_cebad, _ccdg := _a.ParseInt(_adcfb.Value, 10, 64)
			if _ccdg != nil {
				return _ccdg
			}
			_cdecc.DAttr = _cebad
			continue
		}
	}
	for {
		_dagec, _cdfc := d.Token()
		if _cdfc != nil {
			return _bb.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fR\u0061\u0074\u0069\u006f: \u0025\u0073", _cdfc)
		}
		if _dfffe, _gaaae := _dagec.(_b.EndElement); _gaaae && _dfffe.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ConnectionSiteList struct{ Cxn []*CT_ConnectionSite }

func NewCT_TextAutonumberBullet() *CT_TextAutonumberBullet {
	_badac := &CT_TextAutonumberBullet{}
	_badac.TypeAttr = ST_TextAutonumberScheme(1)
	return _badac
}

// ValidateWithPath validates the CT_AlphaBiLevelEffect and its children, prefixing error messages with path
func (_eba *CT_AlphaBiLevelEffect) ValidateWithPath(path string) error {
	if _fbcg := _eba.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _fbcg != nil {
		return _fbcg
	}
	return nil
}
func NewCT_TableGrid() *CT_TableGrid { _dbecae := &CT_TableGrid{}; return _dbecae }
func (_fgacb *EG_Media) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgacb.AudioCd != nil {
		_dcfcb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_fgacb.AudioCd, _dcfcb)
	}
	if _fgacb.WavAudioFile != nil {
		_bebdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgacb.WavAudioFile, _bebdb)
	}
	if _fgacb.AudioFile != nil {
		_degdag := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgacb.AudioFile, _degdag)
	}
	if _fgacb.VideoFile != nil {
		_gecbec := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgacb.VideoFile, _gecbec)
	}
	if _fgacb.QuickTimeFile != nil {
		_cgbcg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgacb.QuickTimeFile, _cgbcg)
	}
	return nil
}

// Validate validates the CT_RelativeOffsetEffect and its children
func (_gefda *CT_RelativeOffsetEffect) Validate() error {
	return _gefda.ValidateWithPath("\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_cafgf ST_AdjAngle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cafgf.ST_Angle != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_cafgf.ST_Angle)))
	}
	if _cafgf.ST_GeomGuideName != nil {
		e.EncodeToken(_b.CharData(*_cafgf.ST_GeomGuideName))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_AnimationElementChoice and its children, prefixing error messages with path
func (_aafd *CT_AnimationElementChoice) ValidateWithPath(path string) error {
	if _aafd.Dgm != nil {
		if _ceaf := _aafd.Dgm.ValidateWithPath(path + "\u002f\u0044\u0067\u006d"); _ceaf != nil {
			return _ceaf
		}
	}
	if _aafd.Chart != nil {
		if _bedec := _aafd.Chart.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074"); _bedec != nil {
			return _bedec
		}
	}
	return nil
}

// Validate validates the CT_GroupFillProperties and its children
func (_fccde *CT_GroupFillProperties) Validate() error {
	return _fccde.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func (_abfdbg *ST_AnimationDgmBuildType) Validate() error { return _abfdbg.ValidateWithPath("") }
func (_cabfa *ST_LightRigType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cabfa = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
		*_cabfa = 1
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
		*_cabfa = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
		*_cabfa = 3
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
		*_cabfa = 4
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
		*_cabfa = 5
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
		*_cabfa = 6
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
		*_cabfa = 7
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
		*_cabfa = 8
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
		*_cabfa = 9
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
		*_cabfa = 10
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
		*_cabfa = 11
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
		*_cabfa = 12
	case "\u0074h\u0072\u0065\u0065\u0050\u0074":
		*_cabfa = 13
	case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
		*_cabfa = 14
	case "\u0073\u006f\u0066\u0074":
		*_cabfa = 15
	case "\u0068\u0061\u0072s\u0068":
		*_cabfa = 16
	case "\u0066\u006c\u006fo\u0064":
		*_cabfa = 17
	case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
		*_cabfa = 18
	case "\u006do\u0072\u006e\u0069\u006e\u0067":
		*_cabfa = 19
	case "\u0073u\u006e\u0072\u0069\u0073\u0065":
		*_cabfa = 20
	case "\u0073\u0075\u006e\u0073\u0065\u0074":
		*_cabfa = 21
	case "\u0063\u0068\u0069\u006c\u006c\u0079":
		*_cabfa = 22
	case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
		*_cabfa = 23
	case "\u0066\u006c\u0061\u0074":
		*_cabfa = 24
	case "\u0074\u0077\u006fP\u0074":
		*_cabfa = 25
	case "\u0067\u006c\u006f\u0077":
		*_cabfa = 26
	case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
		*_cabfa = 27
	}
	return nil
}
func NewCT_HslColor() *CT_HslColor { _fbggg := &CT_HslColor{}; _fbggg.HueAttr = 0; return _fbggg }
func (_afba *CT_BaseStylesOverride) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _afba.ClrScheme != nil {
		_agaa := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_afba.ClrScheme, _agaa)
	}
	if _afba.FontScheme != nil {
		_abed := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_afba.FontScheme, _abed)
	}
	if _afba.FmtScheme != nil {
		_dcbc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_afba.FmtScheme, _dcbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fgaa *CT_QuickTimeFile) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _bb.Sprintf("\u0025\u0076", _fgaa.LinkAttr)})
	e.EncodeToken(start)
	if _fgaa.ExtLst != nil {
		_eadgb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgaa.ExtLst, _eadgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_InverseGammaTransform struct{}

// Validate validates the CT_TextBulletSizeFollowText and its children
func (_cdgeg *CT_TextBulletSizeFollowText) Validate() error {
	return _cdgeg.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074")
}
func (_cege *CT_ScRgbColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _bb.Sprintf("\u0025\u0076", _cege.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _cege.GAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0076", _cege.BAttr)})
	e.EncodeToken(start)
	if _cege.EG_ColorTransform != nil {
		for _, _cdfa := range _cege.EG_ColorTransform {
			_cdfa.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ColorChangeEffect and its children
func (_ffbf *CT_ColorChangeEffect) Validate() error {
	return _ffbf.ValidateWithPath("C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074")
}
func (_bgde *CT_FixedPercentage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcfac := range start.Attr {
		if _bcfac.Name.Local == "\u0076\u0061\u006c" {
			_dbcf, _ecbb := ParseUnionST_FixedPercentage(_bcfac.Value)
			if _ecbb != nil {
				return _ecbb
			}
			_bgde.ValAttr = _dbcf
			continue
		}
	}
	for {
		_gdgf, _gedg := d.Token()
		if _gedg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0046\u0069\u0078\u0065\u0064\u0050\u0065r\u0063\u0065\u006e\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _gedg)
		}
		if _fefde, _eccgf := _gdgf.(_b.EndElement); _eccgf && _fefde.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdbbde ST_AnimationChartBuildType) String() string {
	if _bdbbde.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _bdbbde.ST_AnimationBuildType.String()
	}
	if _bdbbde.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		return _bdbbde.ST_AnimationChartOnlyBuildType.String()
	}
	return ""
}
func (_fed *CT_AnimationGraphicalObjectBuildProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gga:
	for {
		_aad, _fde := d.Token()
		if _fde != nil {
			return _fde
		}
		switch _edaed := _aad.(type) {
		case _b.StartElement:
			switch _edaed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_fed.BldDgm = NewCT_AnimationDgmBuildProperties()
				if _aea := d.DecodeElement(_fed.BldDgm, &_edaed); _aea != nil {
					return _aea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}:
				_fed.BldChart = NewCT_AnimationChartBuildProperties()
				if _faa := d.DecodeElement(_fed.BldChart, &_edaed); _faa != nil {
					return _faa
				}
			default:
				_f.Log("sk\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064P\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _edaed.Name)
				if _dfbc := d.Skip(); _dfbc != nil {
					return _dfbc
				}
			}
		case _b.EndElement:
			break _gga
		case _b.CharData:
		}
	}
	return nil
}

const ST_TextBulletSizePercentPattern = "\u0030\u002a\u0028\u0028\u0032\u005b\u0035\u002d9\u005d\u0029\u007c([\u0033\u002d\u0039\u005d\u005b\u0030-\u0039\u005d\u0029\u007c\u0028\u005b\u0031\u002d\u0033\u005d\u005b\u0030\u002d\u0039\u005d[\u0030\u002d\u0039\u005d\u0029\u007c\u0034\u00300\u0029\u0025"

// Validate validates the AG_Blob and its children
func (_edg *AG_Blob) Validate() error {
	return _edg.ValidateWithPath("\u0041G\u005f\u0042\u006c\u006f\u0062")
}
func (_fggac *ST_Percentage) Validate() error { return _fggac.ValidateWithPath("") }

// ValidateWithPath validates the CT_BiLevelEffect and its children, prefixing error messages with path
func (_baa *CT_BiLevelEffect) ValidateWithPath(path string) error {
	if _defe := _baa.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _defe != nil {
		return _defe
	}
	return nil
}
func (_dagfb ST_LightRigType) String() string {
	switch _dagfb {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case 2:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case 4:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case 5:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case 6:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case 7:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case 8:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case 9:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case 10:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case 11:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case 12:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case 13:
		return "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case 14:
		return "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case 15:
		return "\u0073\u006f\u0066\u0074"
	case 16:
		return "\u0068\u0061\u0072s\u0068"
	case 17:
		return "\u0066\u006c\u006fo\u0064"
	case 18:
		return "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case 19:
		return "\u006do\u0072\u006e\u0069\u006e\u0067"
	case 20:
		return "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case 21:
		return "\u0073\u0075\u006e\u0073\u0065\u0074"
	case 22:
		return "\u0063\u0068\u0069\u006c\u006c\u0079"
	case 23:
		return "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case 24:
		return "\u0066\u006c\u0061\u0074"
	case 25:
		return "\u0074\u0077\u006fP\u0074"
	case 26:
		return "\u0067\u006c\u006f\u0077"
	case 27:
		return "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return ""
}
func (_cabc *CT_SupplementalFont) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0072\u0069\u0070\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _cabc.ScriptAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _cabc.TypefaceAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlTextShape struct {
	TxBody *CT_TextBody
	Choice *CT_GvmlTextShapeChoice
	ExtLst *CT_OfficeArtExtensionList
}

const (
	ST_TextCapsTypeUnset ST_TextCapsType = 0
	ST_TextCapsTypeNone  ST_TextCapsType = 1
	ST_TextCapsTypeSmall ST_TextCapsType = 2
	ST_TextCapsTypeAll   ST_TextCapsType = 3
)

func (_cgbb *CT_FlatText) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgge := range start.Attr {
		if _fgge.Name.Local == "\u007a" {
			_cbaage, _baab := ParseUnionST_Coordinate(_fgge.Value)
			if _baab != nil {
				return _baab
			}
			_cgbb.ZAttr = &_cbaage
			continue
		}
	}
	for {
		_cacaa, _cdeeg := d.Token()
		if _cdeeg != nil {
			return _bb.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _cdeeg)
		}
		if _afbb, _faad := _cacaa.(_b.EndElement); _faad && _afbb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_babgf *CT_GrayscaleTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcdef *CT_GvmlUseShapeRectangle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_ffab, _dbfdf := d.Token()
		if _dbfdf != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0047vml\u0055se\u0053\u0068\u0061\u0070\u0065\u0052\u0065ct\u0061\u006e\u0067\u006c\u0065\u003a\u0020%\u0073", _dbfdf)
		}
		if _aegcdc, _bdgdg := _ffab.(_b.EndElement); _bdgdg && _aegcdc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_EffectProperties and its children
func (_dbed *CT_EffectProperties) Validate() error {
	return _dbed.ValidateWithPath("\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type Graphic struct{ CT_GraphicalObject }
type CT_TableStyleCellStyle struct {
	TcBdr   *CT_TableCellBorderStyle
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
	Cell3D  *CT_Cell3D
}

func (_bcea ST_TextAnchoringType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gafcc := _b.Attr{}
	_gafcc.Name = name
	switch _bcea {
	case ST_TextAnchoringTypeUnset:
		_gafcc.Value = ""
	case ST_TextAnchoringTypeT:
		_gafcc.Value = "\u0074"
	case ST_TextAnchoringTypeCtr:
		_gafcc.Value = "\u0063\u0074\u0072"
	case ST_TextAnchoringTypeB:
		_gafcc.Value = "\u0062"
	case ST_TextAnchoringTypeJust:
		_gafcc.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAnchoringTypeDist:
		_gafcc.Value = "\u0064\u0069\u0073\u0074"
	}
	return _gafcc, nil
}
func NewCT_AnimationChartElement() *CT_AnimationChartElement {
	_ebd := &CT_AnimationChartElement{}
	_ebd.BldStepAttr = ST_ChartBuildStep(1)
	return _ebd
}
func (_cgd *CT_BaseStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgd.ClrScheme = NewCT_ColorScheme()
	_cgd.FontScheme = NewCT_FontScheme()
	_cgd.FmtScheme = NewCT_StyleMatrix()
_gede:
	for {
		_dcc, _adga := d.Token()
		if _adga != nil {
			return _adga
		}
		switch _cgc := _dcc.(type) {
		case _b.StartElement:
			switch _cgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _abe := d.DecodeElement(_cgd.ClrScheme, &_cgc); _abe != nil {
					return _abe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				if _eefa := d.DecodeElement(_cgd.FontScheme, &_cgc); _eefa != nil {
					return _eefa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				if _dfbb := d.DecodeElement(_cgd.FmtScheme, &_cgc); _dfbb != nil {
					return _dfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgd.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbfa := d.DecodeElement(_cgd.ExtLst, &_cgc); _cbfa != nil {
					return _cbfa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _cgc.Name)
				if _bgab := d.Skip(); _bgab != nil {
					return _bgab
				}
			}
		case _b.EndElement:
			break _gede
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PresetGeometry2D and its children
func (_baagdb *CT_PresetGeometry2D) Validate() error {
	return _baagdb.ValidateWithPath("\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}

// ValidateWithPath validates the CT_Path2DMoveTo and its children, prefixing error messages with path
func (_agbf *CT_Path2DMoveTo) ValidateWithPath(path string) error {
	if _cegfa := _agbf.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _cegfa != nil {
		return _cegfa
	}
	return nil
}
func NewEG_TextBulletSize() *EG_TextBulletSize { _gdefb := &EG_TextBulletSize{}; return _gdefb }
func (_dgdb *ST_ShapeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgdb = 0
	case "\u006c\u0069\u006e\u0065":
		*_dgdb = 1
	case "\u006ci\u006e\u0065\u0049\u006e\u0076":
		*_dgdb = 2
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_dgdb = 3
	case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_dgdb = 4
	case "\u0072\u0065\u0063\u0074":
		*_dgdb = 5
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_dgdb = 6
	case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
		*_dgdb = 7
	case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
		*_dgdb = 8
	case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
		*_dgdb = 9
	case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
		*_dgdb = 10
	case "\u0068e\u0078\u0061\u0067\u006f\u006e":
		*_dgdb = 11
	case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
		*_dgdb = 12
	case "\u006fc\u0074\u0061\u0067\u006f\u006e":
		*_dgdb = 13
	case "\u0064e\u0063\u0061\u0067\u006f\u006e":
		*_dgdb = 14
	case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
		*_dgdb = 15
	case "\u0073\u0074\u0061r\u0034":
		*_dgdb = 16
	case "\u0073\u0074\u0061r\u0035":
		*_dgdb = 17
	case "\u0073\u0074\u0061r\u0036":
		*_dgdb = 18
	case "\u0073\u0074\u0061r\u0037":
		*_dgdb = 19
	case "\u0073\u0074\u0061r\u0038":
		*_dgdb = 20
	case "\u0073\u0074\u0061\u0072\u0031\u0030":
		*_dgdb = 21
	case "\u0073\u0074\u0061\u0072\u0031\u0032":
		*_dgdb = 22
	case "\u0073\u0074\u0061\u0072\u0031\u0036":
		*_dgdb = 23
	case "\u0073\u0074\u0061\u0072\u0032\u0034":
		*_dgdb = 24
	case "\u0073\u0074\u0061\u0072\u0033\u0032":
		*_dgdb = 25
	case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
		*_dgdb = 26
	case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
		*_dgdb = 27
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
		*_dgdb = 28
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
		*_dgdb = 29
	case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
		*_dgdb = 30
	case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
		*_dgdb = 31
	case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
		*_dgdb = 32
	case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
		*_dgdb = 33
	case "\u0070\u006c\u0061\u0071\u0075\u0065":
		*_dgdb = 34
	case "\u0065l\u006c\u0069\u0070\u0073\u0065":
		*_dgdb = 35
	case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
		*_dgdb = 36
	case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
		*_dgdb = 37
	case "\u0063h\u0065\u0076\u0072\u006f\u006e":
		*_dgdb = 38
	case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
		*_dgdb = 39
	case "\u0070\u0069\u0065":
		*_dgdb = 40
	case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
		*_dgdb = 41
	case "\u0064\u006f\u006eu\u0074":
		*_dgdb = 42
	case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
		*_dgdb = 43
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 44
	case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
		*_dgdb = 45
	case "\u0075p\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 46
	case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
		*_dgdb = 47
	case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_dgdb = 48
	case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_dgdb = 49
	case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 50
	case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_dgdb = 51
	case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 52
	case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 53
	case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 54
	case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
		*_dgdb = 55
	case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 56
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_dgdb = 57
	case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_dgdb = 58
	case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 59
	case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 60
	case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 61
	case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 62
	case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
		*_dgdb = 63
	case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 64
	case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 65
	case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
		*_dgdb = 66
	case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
		*_dgdb = 67
	case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 68
	case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 69
	case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 70
	case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 71
	case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
		*_dgdb = 72
	case "\u0063\u0075\u0062\u0065":
		*_dgdb = 73
	case "\u0063\u0061\u006e":
		*_dgdb = 74
	case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
		*_dgdb = 75
	case "\u0068\u0065\u0061r\u0074":
		*_dgdb = 76
	case "\u0073\u0075\u006e":
		*_dgdb = 77
	case "\u006d\u006f\u006f\u006e":
		*_dgdb = 78
	case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
		*_dgdb = 79
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
		*_dgdb = 80
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
		*_dgdb = 81
	case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
		*_dgdb = 82
	case "\u0062\u0065\u0076e\u006c":
		*_dgdb = 83
	case "\u0066\u0072\u0061m\u0065":
		*_dgdb = 84
	case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
		*_dgdb = 85
	case "\u0063\u006f\u0072\u006e\u0065\u0072":
		*_dgdb = 86
	case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
		*_dgdb = 87
	case "\u0063\u0068\u006fr\u0064":
		*_dgdb = 88
	case "\u0061\u0072\u0063":
		*_dgdb = 89
	case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_dgdb = 90
	case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_dgdb = 91
	case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
		*_dgdb = 92
	case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
		*_dgdb = 93
	case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
		*_dgdb = 94
	case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
		*_dgdb = 95
	case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
		*_dgdb = 96
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
		*_dgdb = 97
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
		*_dgdb = 98
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
		*_dgdb = 99
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
		*_dgdb = 100
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
		*_dgdb = 101
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
		*_dgdb = 102
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
		*_dgdb = 103
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
		*_dgdb = 104
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
		*_dgdb = 105
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
		*_dgdb = 106
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
		*_dgdb = 107
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_dgdb = 108
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_dgdb = 109
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_dgdb = 110
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_dgdb = 111
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_dgdb = 112
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_dgdb = 113
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
		*_dgdb = 114
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
		*_dgdb = 115
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
		*_dgdb = 116
	case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 117
	case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 118
	case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 119
	case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_dgdb = 120
	case "\u0063\u006c\u006fu\u0064":
		*_dgdb = 121
	case "\u0072\u0069\u0062\u0062\u006f\u006e":
		*_dgdb = 122
	case "\u0072i\u0062\u0062\u006f\u006e\u0032":
		*_dgdb = 123
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
		*_dgdb = 124
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
		*_dgdb = 125
	case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
		*_dgdb = 126
	case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
		*_dgdb = 127
	case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
		*_dgdb = 128
	case "\u0077\u0061\u0076\u0065":
		*_dgdb = 129
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
		*_dgdb = 130
	case "\u0070\u006c\u0075\u0073":
		*_dgdb = 131
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
		*_dgdb = 132
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
		*_dgdb = 133
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
		*_dgdb = 134
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
		*_dgdb = 135
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_dgdb = 136
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
		*_dgdb = 137
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
		*_dgdb = 138
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
		*_dgdb = 139
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
		*_dgdb = 140
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
		*_dgdb = 141
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
		*_dgdb = 142
	case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
		*_dgdb = 143
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
		*_dgdb = 144
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
		*_dgdb = 145
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
		*_dgdb = 146
	case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
		*_dgdb = 147
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
		*_dgdb = 148
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
		*_dgdb = 149
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
		*_dgdb = 150
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
		*_dgdb = 151
	case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_dgdb = 152
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
		*_dgdb = 153
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
		*_dgdb = 154
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
		*_dgdb = 155
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
		*_dgdb = 156
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
		*_dgdb = 157
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
		*_dgdb = 158
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
		*_dgdb = 159
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
		*_dgdb = 160
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
		*_dgdb = 161
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
		*_dgdb = 162
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
		*_dgdb = 163
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_dgdb = 164
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
		*_dgdb = 165
	case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
		*_dgdb = 166
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
		*_dgdb = 167
	case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
		*_dgdb = 168
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
		*_dgdb = 169
	case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
		*_dgdb = 170
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
		*_dgdb = 171
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
		*_dgdb = 172
	case "\u0067\u0065\u0061r\u0036":
		*_dgdb = 173
	case "\u0067\u0065\u0061r\u0039":
		*_dgdb = 174
	case "\u0066\u0075\u006e\u006e\u0065\u006c":
		*_dgdb = 175
	case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
		*_dgdb = 176
	case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
		*_dgdb = 177
	case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
		*_dgdb = 178
	case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
		*_dgdb = 179
	case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
		*_dgdb = 180
	case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_dgdb = 181
	case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
		*_dgdb = 182
	case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
		*_dgdb = 183
	case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
		*_dgdb = 184
	case "\u0063\u0068\u0061\u0072\u0074\u0058":
		*_dgdb = 185
	case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
		*_dgdb = 186
	case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
		*_dgdb = 187
	}
	return nil
}

const (
	ST_ChartBuildStepUnset        ST_ChartBuildStep = 0
	ST_ChartBuildStepCategory     ST_ChartBuildStep = 1
	ST_ChartBuildStepPtInCategory ST_ChartBuildStep = 2
	ST_ChartBuildStepSeries       ST_ChartBuildStep = 3
	ST_ChartBuildStepPtInSeries   ST_ChartBuildStep = 4
	ST_ChartBuildStepAllPts       ST_ChartBuildStep = 5
	ST_ChartBuildStepGridLegend   ST_ChartBuildStep = 6
)

func (_abfc *CT_Bevel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebcc := range start.Attr {
		if _ebcc.Name.Local == "\u0077" {
			_cac, _ddb := _a.ParseInt(_ebcc.Value, 10, 64)
			if _ddb != nil {
				return _ddb
			}
			_abfc.WAttr = &_cac
			continue
		}
		if _ebcc.Name.Local == "\u0068" {
			_fedc, _adbc := _a.ParseInt(_ebcc.Value, 10, 64)
			if _adbc != nil {
				return _adbc
			}
			_abfc.HAttr = &_fedc
			continue
		}
		if _ebcc.Name.Local == "\u0070\u0072\u0073\u0074" {
			_abfc.PrstAttr.UnmarshalXMLAttr(_ebcc)
			continue
		}
	}
	for {
		_fcbcf, _bgabd := d.Token()
		if _bgabd != nil {
			return _bb.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0065\u0076\u0065\u006c: \u0025\u0073", _bgabd)
		}
		if _ecf, _aadd := _fcbcf.(_b.EndElement); _aadd && _ecf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_GraphicalObject() *CT_GraphicalObject {
	_eeag := &CT_GraphicalObject{}
	_eeag.GraphicData = NewCT_GraphicalObjectData()
	return _eeag
}
func (_cge *CT_BaseStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddaf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_cge.ClrScheme, _ddaf)
	_bbcg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_cge.FontScheme, _bbcg)
	_ebbb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_cge.FmtScheme, _ebbb)
	if _cge.ExtLst != nil {
		_aef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cge.ExtLst, _aef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcafg ST_BlendMode) String() string {
	switch _bcafg {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072"
	case 2:
		return "\u006d\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_GrayscaleTransform and its children, prefixing error messages with path
func (_dbabc *CT_GrayscaleTransform) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_GroupFillProperties and its children, prefixing error messages with path
func (_feegd *CT_GroupFillProperties) ValidateWithPath(path string) error { return nil }
func (_fcab *ST_LightRigDirection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efagf, _aegff := d.Token()
	if _aegff != nil {
		return _aegff
	}
	if _ddebb, _ggceb := _efagf.(_b.EndElement); _ggceb && _ddebb.Name == start.Name {
		*_fcab = 1
		return nil
	}
	if _bdecc, _gfbbf := _efagf.(_b.CharData); !_gfbbf {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efagf)
	} else {
		switch string(_bdecc) {
		case "":
			*_fcab = 0
		case "\u0074\u006c":
			*_fcab = 1
		case "\u0074":
			*_fcab = 2
		case "\u0074\u0072":
			*_fcab = 3
		case "\u006c":
			*_fcab = 4
		case "\u0072":
			*_fcab = 5
		case "\u0062\u006c":
			*_fcab = 6
		case "\u0062":
			*_fcab = 7
		case "\u0062\u0072":
			*_fcab = 8
		}
	}
	_efagf, _aegff = d.Token()
	if _aegff != nil {
		return _aegff
	}
	if _bbdcef, _gfedc := _efagf.(_b.EndElement); _gfedc && _bbdcef.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efagf)
}
func NewCT_Path2DClose() *CT_Path2DClose { _gffg := &CT_Path2DClose{}; return _gffg }

// ValidateWithPath validates the CT_TableBackgroundStyle and its children, prefixing error messages with path
func (_gaadd *CT_TableBackgroundStyle) ValidateWithPath(path string) error {
	if _gaadd.Fill != nil {
		if _dcbec := _gaadd.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _dcbec != nil {
			return _dcbec
		}
	}
	if _gaadd.FillRef != nil {
		if _cefdd := _gaadd.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _cefdd != nil {
			return _cefdd
		}
	}
	if _gaadd.Effect != nil {
		if _edbgg := _gaadd.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _edbgg != nil {
			return _edbgg
		}
	}
	if _gaadd.EffectRef != nil {
		if _beaab := _gaadd.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _beaab != nil {
			return _beaab
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TextRun and its children, prefixing error messages with path
func (_dacbe *EG_TextRun) ValidateWithPath(path string) error {
	if _dacbe.R != nil {
		if _gafefa := _dacbe.R.ValidateWithPath(path + "\u002f\u0052"); _gafefa != nil {
			return _gafefa
		}
	}
	if _dacbe.Br != nil {
		if _dcbad := _dacbe.Br.ValidateWithPath(path + "\u002f\u0042\u0072"); _dcbad != nil {
			return _dcbad
		}
	}
	if _dacbe.Fld != nil {
		if _dgffc := _dacbe.Fld.ValidateWithPath(path + "\u002f\u0046\u006c\u0064"); _dgffc != nil {
			return _dgffc
		}
	}
	return nil
}

type CT_TextSpacing struct {
	SpcPct *CT_TextSpacingPercent
	SpcPts *CT_TextSpacingPoint
}

func NewEG_TextGeometry() *EG_TextGeometry { _gfaacb := &EG_TextGeometry{}; return _gfaacb }
func (_adgae *CT_NonVisualGraphicFrameProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _adgae.GraphicFrameLocks != nil {
		_adaae := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072ap\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_adgae.GraphicFrameLocks, _adaae)
	}
	if _adgae.ExtLst != nil {
		_fbafg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adgae.ExtLst, _fbafg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TextBodyProperties struct {
	RotAttr              *int32
	SpcFirstLastParaAttr *bool
	VertOverflowAttr     ST_TextVertOverflowType
	HorzOverflowAttr     ST_TextHorzOverflowType
	VertAttr             ST_TextVerticalType
	WrapAttr             ST_TextWrappingType
	LInsAttr             *ST_Coordinate32
	TInsAttr             *ST_Coordinate32
	RInsAttr             *ST_Coordinate32
	BInsAttr             *ST_Coordinate32
	NumColAttr           *int32
	SpcColAttr           *int32
	RtlColAttr           *bool
	FromWordArtAttr      *bool
	AnchorAttr           ST_TextAnchoringType
	AnchorCtrAttr        *bool
	ForceAAAttr          *bool
	UprightAttr          *bool
	CompatLnSpcAttr      *bool
	PrstTxWarp           *CT_PresetTextShape
	NoAutofit            *CT_TextNoAutofit
	NormAutofit          *CT_TextNormalAutofit
	SpAutoFit            *CT_TextShapeAutofit
	Scene3d              *CT_Scene3D
	Sp3d                 *CT_Shape3D
	FlatTx               *CT_FlatText
	ExtLst               *CT_OfficeArtExtensionList
}

func NewCT_TextBulletTypefaceFollowText() *CT_TextBulletTypefaceFollowText {
	_cgcb := &CT_TextBulletTypefaceFollowText{}
	return _cgcb
}

type ST_PresetMaterialType byte

func (_fb *AG_Blob) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebc := range start.Attr {
		if _ebc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebc.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_eg, _af := _ebc.Value, error(nil)
			if _af != nil {
				return _af
			}
			_fb.EmbedAttr = &_eg
			continue
		}
		if _ebc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebc.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ce, _d := _ebc.Value, error(nil)
			if _d != nil {
				return _d
			}
			_fb.LinkAttr = &_ce
			continue
		}
	}
	for {
		_g, _fec := d.Token()
		if _fec != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0042\u006c\u006f\u0062\u003a\u0020\u0025\u0073", _fec)
		}
		if _be, _da := _g.(_b.EndElement); _da && _be.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the Theme and its children, prefixing error messages with path
func (_eggdb *Theme) ValidateWithPath(path string) error {
	if _cddfd := _eggdb.CT_OfficeStyleSheet.ValidateWithPath(path); _cddfd != nil {
		return _cddfd
	}
	return nil
}
func (_ffade ST_TextCapsType) ValidateWithPath(path string) error {
	switch _ffade {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffade))
	}
	return nil
}
func (_eegeag *CT_TintEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbdgd := range start.Attr {
		if _cbdgd.Name.Local == "\u0068\u0075\u0065" {
			_fcef, _ggbbe := _a.ParseInt(_cbdgd.Value, 10, 32)
			if _ggbbe != nil {
				return _ggbbe
			}
			_decf := int32(_fcef)
			_eegeag.HueAttr = &_decf
			continue
		}
		if _cbdgd.Name.Local == "\u0061\u006d\u0074" {
			_abcadb, _deegg := ParseUnionST_FixedPercentage(_cbdgd.Value)
			if _deegg != nil {
				return _deegg
			}
			_eegeag.AmtAttr = &_abcadb
			continue
		}
	}
	for {
		_acbff, _eaead := d.Token()
		if _eaead != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054i\u006et\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _eaead)
		}
		if _febfd, _bagdgg := _acbff.(_b.EndElement); _bagdgg && _febfd.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TextWrappingType byte

func (_cdaag *CT_TextSpacingPoint) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdaag.ValAttr = 0
	for _, _ebdac := range start.Attr {
		if _ebdac.Name.Local == "\u0076\u0061\u006c" {
			_gggae, _aeccb := _a.ParseInt(_ebdac.Value, 10, 32)
			if _aeccb != nil {
				return _aeccb
			}
			_cdaag.ValAttr = int32(_gggae)
			continue
		}
	}
	for {
		_bfcde, _egccb := d.Token()
		if _egccb != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053p\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _egccb)
		}
		if _ffeca, _bcfdb := _bfcde.(_b.EndElement); _bcfdb && _ffeca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efdba ST_DgmBuildStep) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efdba.String(), start)
}
func (_ecgga ST_TileFlipMode) String() string {
	switch _ecgga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0078"
	case 3:
		return "\u0079"
	case 4:
		return "\u0078\u0079"
	}
	return ""
}
func (_fgabg ST_PresetCameraType) String() string {
	switch _fgabg {
	case 0:
		return ""
	case 1:
		return "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case 2:
		return "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 3:
		return "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case 4:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case 5:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case 6:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case 7:
		return "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 8:
		return "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 9:
		return "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 10:
		return "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case 11:
		return "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case 12:
		return "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case 13:
		return "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case 14:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case 15:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case 16:
		return "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case 17:
		return "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 18:
		return "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case 19:
		return "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case 20:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case 21:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case 23:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case 24:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case 25:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case 26:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case 27:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case 28:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case 29:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case 30:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case 31:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case 32:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case 33:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case 34:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case 35:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case 36:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case 37:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case 38:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case 39:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case 40:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case 41:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 42:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 43:
		return "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case 44:
		return "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case 45:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case 46:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 47:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case 48:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case 49:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case 50:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case 51:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case 52:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case 53:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case 54:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case 55:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 56:
		return "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case 57:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case 58:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case 59:
		return "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 60:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case 61:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case 62:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return ""
}

type CT_BackgroundFormatting struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_bbcdd *CT_TablePropertiesChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbcdd.TableStyle != nil {
		_eefc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_bbcdd.TableStyle, _eefc)
	}
	if _bbcdd.TableStyleId != nil {
		_dfebc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074y\u006c\u0065\u0049\u0064"}}
		_f.AddPreserveSpaceAttr(&_dfebc, *_bbcdd.TableStyleId)
		e.EncodeElement(_bbcdd.TableStyleId, _dfebc)
	}
	return nil
}
func NewCT_TextNormalAutofit() *CT_TextNormalAutofit {
	_ddcaf := &CT_TextNormalAutofit{}
	return _ddcaf
}

// ValidateWithPath validates the CT_BackgroundFormatting and its children, prefixing error messages with path
func (_afd *CT_BackgroundFormatting) ValidateWithPath(path string) error {
	if _afd.NoFill != nil {
		if _deee := _afd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _deee != nil {
			return _deee
		}
	}
	if _afd.SolidFill != nil {
		if _dgf := _afd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dgf != nil {
			return _dgf
		}
	}
	if _afd.GradFill != nil {
		if _geed := _afd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _geed != nil {
			return _geed
		}
	}
	if _afd.BlipFill != nil {
		if _egga := _afd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _egga != nil {
			return _egga
		}
	}
	if _afd.PattFill != nil {
		if _fgg := _afd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _fgg != nil {
			return _fgg
		}
	}
	if _afd.GrpFill != nil {
		if _eedf := _afd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _eedf != nil {
			return _eedf
		}
	}
	if _afd.EffectLst != nil {
		if _gfdb := _afd.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gfdb != nil {
			return _gfdb
		}
	}
	if _afd.EffectDag != nil {
		if _gfge := _afd.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _gfge != nil {
			return _gfge
		}
	}
	return nil
}

// Validate validates the CT_FillProperties and its children
func (_bfbcb *CT_FillProperties) Validate() error {
	return _bfbcb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ST_TextPoint is a union type
type ST_TextPoint struct {
	ST_TextPointUnqualified *int32
	ST_UniversalMeasure     *string
}

// Validate validates the CT_AlphaBiLevelEffect and its children
func (_debd *CT_AlphaBiLevelEffect) Validate() error {
	return _debd.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_bgebd *EG_ThemeableEffectStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aegda:
	for {
		_ccae, _afbfe := d.Token()
		if _afbfe != nil {
			return _afbfe
		}
		switch _bfgfee := _ccae.(type) {
		case _b.StartElement:
			switch _bfgfee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_bgebd.Effect = NewCT_EffectProperties()
				if _ceggf := d.DecodeElement(_bgebd.Effect, &_bfgfee); _ceggf != nil {
					return _ceggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_bgebd.EffectRef = NewCT_StyleMatrixReference()
				if _cbaaba := d.DecodeElement(_bgebd.EffectRef, &_bfgfee); _cbaaba != nil {
					return _cbaaba
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065E\u0066\u0066\u0065\u0063\u0074\u0053t\u0079\u006c\u0065 \u0025\u0076", _bfgfee.Name)
				if _adabea := d.Skip(); _adabea != nil {
					return _adabea
				}
			}
		case _b.EndElement:
			break _aegda
		case _b.CharData:
		}
	}
	return nil
}
func (_babgg *EG_TextRun) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbbbee:
	for {
		_ebddd, _gffbf := d.Token()
		if _gffbf != nil {
			return _gffbf
		}
		switch _egeef := _ebddd.(type) {
		case _b.StartElement:
			switch _egeef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_babgg.R = NewCT_RegularTextRun()
				if _dcfgf := d.DecodeElement(_babgg.R, &_egeef); _dcfgf != nil {
					return _dcfgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_babgg.Br = NewCT_TextLineBreak()
				if _bacba := d.DecodeElement(_babgg.Br, &_egeef); _bacba != nil {
					return _bacba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_babgg.Fld = NewCT_TextField()
				if _efdef := d.DecodeElement(_babgg.Fld, &_egeef); _efdef != nil {
					return _efdef
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005fT\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _egeef.Name)
				if _fcaec := d.Skip(); _fcaec != nil {
					return _fcaec
				}
			}
		case _b.EndElement:
			break _cbbbee
		case _b.CharData:
		}
	}
	return nil
}

type ST_TextStrikeType byte

func (_bbfec *CT_BlipFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbfec.DpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0070\u0069"}, Value: _bb.Sprintf("\u0025\u0076", *_bbfec.DpiAttr)})
	}
	if _bbfec.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_bbfec.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _bbfec.Blip != nil {
		_caac := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
		e.EncodeElement(_bbfec.Blip, _caac)
	}
	if _bbfec.SrcRect != nil {
		_babg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0063\u0052\u0065\u0063t"}}
		e.EncodeElement(_bbfec.SrcRect, _babg)
	}
	if _bbfec.Tile != nil {
		_cebae := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_bbfec.Tile, _cebae)
	}
	if _bbfec.Stretch != nil {
		_dadde := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_bbfec.Stretch, _dadde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type TblStyleLst struct{ CT_TableStyleList }

func NewCT_BlurEffect() *CT_BlurEffect { _gbga := &CT_BlurEffect{}; return _gbga }
func (_gbcaa ST_PitchFamily) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgfgc := _b.Attr{}
	_fgfgc.Name = name
	switch _gbcaa {
	case ST_PitchFamilyUnset:
		_fgfgc.Value = ""
	case ST_PitchFamily00:
		_fgfgc.Value = "\u0030\u0030"
	case ST_PitchFamily01:
		_fgfgc.Value = "\u0030\u0031"
	case ST_PitchFamily02:
		_fgfgc.Value = "\u0030\u0032"
	case ST_PitchFamily16:
		_fgfgc.Value = "\u0031\u0036"
	case ST_PitchFamily17:
		_fgfgc.Value = "\u0031\u0037"
	case ST_PitchFamily18:
		_fgfgc.Value = "\u0031\u0038"
	case ST_PitchFamily32:
		_fgfgc.Value = "\u0033\u0032"
	case ST_PitchFamily33:
		_fgfgc.Value = "\u0033\u0033"
	case ST_PitchFamily34:
		_fgfgc.Value = "\u0033\u0034"
	case ST_PitchFamily48:
		_fgfgc.Value = "\u0034\u0038"
	case ST_PitchFamily49:
		_fgfgc.Value = "\u0034\u0039"
	case ST_PitchFamily50:
		_fgfgc.Value = "\u0035\u0030"
	case ST_PitchFamily64:
		_fgfgc.Value = "\u0036\u0034"
	case ST_PitchFamily65:
		_fgfgc.Value = "\u0036\u0035"
	case ST_PitchFamily66:
		_fgfgc.Value = "\u0036\u0036"
	case ST_PitchFamily80:
		_fgfgc.Value = "\u0038\u0030"
	case ST_PitchFamily81:
		_fgfgc.Value = "\u0038\u0031"
	case ST_PitchFamily82:
		_fgfgc.Value = "\u0038\u0032"
	}
	return _fgfgc, nil
}
func (_cecdg *CT_Path2DList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cecdg.Path != nil {
		_bacgea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		for _, _ebba := range _cecdg.Path {
			e.EncodeElement(_ebba, _bacgea)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecfcb *CT_Vector3D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078"}, Value: _bb.Sprintf("\u0025\u0076", _ecfcb.DxAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0079"}, Value: _bb.Sprintf("\u0025\u0076", _ecfcb.DyAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u007a"}, Value: _bb.Sprintf("\u0025\u0076", _ecfcb.DzAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_InnerShadowEffect struct {
	BlurRadAttr *int64
	DistAttr    *int64
	DirAttr     *int32
	ScrgbClr    *CT_ScRgbColor
	SrgbClr     *CT_SRgbColor
	HslClr      *CT_HslColor
	SysClr      *CT_SystemColor
	SchemeClr   *CT_SchemeColor
	PrstClr     *CT_PresetColor
}
type CT_TextTabStop struct {
	PosAttr  *ST_Coordinate32
	AlgnAttr ST_TextTabAlignType
}

func (_eafge *CT_TableProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eafge.RtlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0074\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.RtlAttr))})
	}
	if _eafge.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.FirstRowAttr))})
	}
	if _eafge.FirstColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.FirstColAttr))})
	}
	if _eafge.LastRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.LastRowAttr))})
	}
	if _eafge.LastColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.LastColAttr))})
	}
	if _eafge.BandRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u006e\u0064\u0052\u006f\u0077"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.BandRowAttr))})
	}
	if _eafge.BandColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u006e\u0064\u0043\u006f\u006c"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_eafge.BandColAttr))})
	}
	e.EncodeToken(start)
	if _eafge.NoFill != nil {
		_dcaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eafge.NoFill, _dcaa)
	}
	if _eafge.SolidFill != nil {
		_fdgca := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eafge.SolidFill, _fdgca)
	}
	if _eafge.GradFill != nil {
		_abcdg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eafge.GradFill, _abcdg)
	}
	if _eafge.BlipFill != nil {
		_ggega := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eafge.BlipFill, _ggega)
	}
	if _eafge.PattFill != nil {
		_efadc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eafge.PattFill, _efadc)
	}
	if _eafge.GrpFill != nil {
		_gaccbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_eafge.GrpFill, _gaccbg)
	}
	if _eafge.EffectLst != nil {
		_bgdce := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eafge.EffectLst, _bgdce)
	}
	if _eafge.EffectDag != nil {
		_bbebe := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_eafge.EffectDag, _bbebe)
	}
	if _eafge.Choice != nil {
		_eafge.Choice.MarshalXML(e, _b.StartElement{})
	}
	if _eafge.ExtLst != nil {
		_abccd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eafge.ExtLst, _abccd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbbgc *ST_TextFontScalePercentOrPercentString) ValidateWithPath(path string) error {
	_cfcda := []string{}
	if _bbbgc.ST_TextFontScalePercent != nil {
		_cfcda = append(_cfcda, "\u0053\u0054\u005fTe\u0078\u0074\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006c\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _bbbgc.ST_Percentage != nil {
		_cfcda = append(_cfcda, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_cfcda) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cfcda)
	}
	return nil
}

// ValidateWithPath validates the CT_Scene3D and its children, prefixing error messages with path
func (_ggdcf *CT_Scene3D) ValidateWithPath(path string) error {
	if _effgfd := _ggdcf.Camera.ValidateWithPath(path + "\u002fC\u0061\u006d\u0065\u0072\u0061"); _effgfd != nil {
		return _effgfd
	}
	if _acddc := _ggdcf.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _acddc != nil {
		return _acddc
	}
	if _ggdcf.Backdrop != nil {
		if _ageeb := _ggdcf.Backdrop.ValidateWithPath(path + "\u002fB\u0061\u0063\u006b\u0064\u0072\u006fp"); _ageeb != nil {
			return _ageeb
		}
	}
	if _ggdcf.ExtLst != nil {
		if _decgg := _ggdcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _decgg != nil {
			return _decgg
		}
	}
	return nil
}

type EG_TextBulletColor struct {
	BuClrTx *CT_TextBulletColorFollowText
	BuClr   *CT_Color
}

func (_ace *CT_AnimationDgmElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ace.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_ace.IdAttr)})
	}
	if _ace.BldStepAttr != ST_DgmBuildStepUnset {
		_fbb, _dfga := _ace.BldStepAttr.MarshalXMLAttr(_b.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
		if _dfga != nil {
			return _dfga
		}
		start.Attr = append(start.Attr, _fbb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aagdc ST_PresetMaterialType) Validate() error { return _aagdc.ValidateWithPath("") }
func (_aacbbb *EG_EffectProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffaef:
	for {
		_cedad, _dedggf := d.Token()
		if _dedggf != nil {
			return _dedggf
		}
		switch _bbgfcf := _cedad.(type) {
		case _b.StartElement:
			switch _bbgfcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_aacbbb.EffectLst = NewCT_EffectList()
				if _agbac := d.DecodeElement(_aacbbb.EffectLst, &_bbgfcf); _agbac != nil {
					return _agbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_aacbbb.EffectDag = NewCT_EffectContainer()
				if _edabg := d.DecodeElement(_aacbbb.EffectDag, &_bbgfcf); _edabg != nil {
					return _edabg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u0047\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bbgfcf.Name)
				if _ffgcgc := d.Skip(); _ffgcgc != nil {
					return _ffgcgc
				}
			}
		case _b.EndElement:
			break _ffaef
		case _b.CharData:
		}
	}
	return nil
}

type CT_AnimationDgmBuildProperties struct {
	BldAttr *ST_AnimationDgmBuildType
	RevAttr *bool
}

func NewCT_TileInfoProperties() *CT_TileInfoProperties {
	_gaccbd := &CT_TileInfoProperties{}
	return _gaccbd
}

type Tbl struct{ CT_Table }

func (_dcgbb *ST_LineEndWidth) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcgbb = 0
	case "\u0073\u006d":
		*_dcgbb = 1
	case "\u006d\u0065\u0064":
		*_dcgbb = 2
	case "\u006c\u0067":
		*_dcgbb = 3
	}
	return nil
}
func (_bedecg *ST_TextBulletSize) ValidateWithPath(path string) error {
	_cdcga := []string{}
	if _bedecg.ST_TextBulletSizePercent != nil {
		_cdcga = append(_cdcga, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _bedecg.ST_TextBulletSizeDecimal != nil {
		_cdcga = append(_cdcga, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0044\u0065\u0063\u0069\u006d\u0061\u006c")
	}
	if len(_cdcga) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cdcga)
	}
	return nil
}
func (_fgfdf *CT_TextUnderlineLineFollowText) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bgbad, _adgcg := d.Token()
		if _adgcg != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _adgcg)
		}
		if _cbece, _bbdag := _bgbad.(_b.EndElement); _bbdag && _cbece.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgfec *CT_Ratio) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _bb.Sprintf("\u0025\u0076", _bgfec.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _bgfec.DAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Hyperlink and its children
func (_afge *CT_Hyperlink) Validate() error {
	return _afge.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

// ValidateWithPath validates the CT_ClipboardStyleSheet and its children, prefixing error messages with path
func (_cgbc *CT_ClipboardStyleSheet) ValidateWithPath(path string) error {
	if _badc := _cgbc.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _badc != nil {
		return _badc
	}
	if _cab := _cgbc.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _cab != nil {
		return _cab
	}
	return nil
}

type CT_ObjectStyleDefaults struct {
	SpDef  *CT_DefaultShapeDefinition
	LnDef  *CT_DefaultShapeDefinition
	TxDef  *CT_DefaultShapeDefinition
	ExtLst *CT_OfficeArtExtensionList
}

func (_abgga *ST_TextBulletSize) Validate() error { return _abgga.ValidateWithPath("") }

const (
	ST_LineEndLengthUnset ST_LineEndLength = 0
	ST_LineEndLengthSm    ST_LineEndLength = 1
	ST_LineEndLengthMed   ST_LineEndLength = 2
	ST_LineEndLengthLg    ST_LineEndLength = 3
)

func (_abbcbd ST_ColorSchemeIndex) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgfcdd := _b.Attr{}
	_cgfcdd.Name = name
	switch _abbcbd {
	case ST_ColorSchemeIndexUnset:
		_cgfcdd.Value = ""
	case ST_ColorSchemeIndexDk1:
		_cgfcdd.Value = "\u0064\u006b\u0031"
	case ST_ColorSchemeIndexLt1:
		_cgfcdd.Value = "\u006c\u0074\u0031"
	case ST_ColorSchemeIndexDk2:
		_cgfcdd.Value = "\u0064\u006b\u0032"
	case ST_ColorSchemeIndexLt2:
		_cgfcdd.Value = "\u006c\u0074\u0032"
	case ST_ColorSchemeIndexAccent1:
		_cgfcdd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_ColorSchemeIndexAccent2:
		_cgfcdd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_ColorSchemeIndexAccent3:
		_cgfcdd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_ColorSchemeIndexAccent4:
		_cgfcdd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_ColorSchemeIndexAccent5:
		_cgfcdd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_ColorSchemeIndexAccent6:
		_cgfcdd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_ColorSchemeIndexHlink:
		_cgfcdd.Value = "\u0068\u006c\u0069n\u006b"
	case ST_ColorSchemeIndexFolHlink:
		_cgfcdd.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return _cgfcdd, nil
}

// ValidateWithPath validates the CT_FontCollection and its children, prefixing error messages with path
func (_gggf *CT_FontCollection) ValidateWithPath(path string) error {
	if _aeaf := _gggf.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _aeaf != nil {
		return _aeaf
	}
	if _bdaac := _gggf.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _bdaac != nil {
		return _bdaac
	}
	if _bbdce := _gggf.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _bbdce != nil {
		return _bbdce
	}
	for _aefd, _cdbe := range _gggf.Font {
		if _fggbf := _cdbe.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _aefd)); _fggbf != nil {
			return _fggbf
		}
	}
	if _gggf.ExtLst != nil {
		if _ebfg := _gggf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebfg != nil {
			return _ebfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AudioCD and its children, prefixing error messages with path
func (_ecdb *CT_AudioCD) ValidateWithPath(path string) error {
	if _gfgb := _ecdb.St.ValidateWithPath(path + "\u002f\u0053\u0074"); _gfgb != nil {
		return _gfgb
	}
	if _afggg := _ecdb.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _afggg != nil {
		return _afggg
	}
	if _ecdb.ExtLst != nil {
		if _fcga := _ecdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fcga != nil {
			return _fcga
		}
	}
	return nil
}
func (_fccgd ST_ShapeType) Validate() error { return _fccgd.ValidateWithPath("") }
func (_acebe *ST_TextAutonumberScheme) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acebe = 0
	case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 1
	case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 2
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 3
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 4
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 5
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 6
	case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 7
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 8
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 9
	case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 10
	case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 11
	case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 12
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 13
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 14
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 15
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 16
	case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 17
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 18
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 19
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_acebe = 20
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 21
	case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 22
	case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 23
	case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 24
	case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
		*_acebe = 25
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_acebe = 26
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
		*_acebe = 27
	case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 28
	case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
		*_acebe = 29
	case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
		*_acebe = 30
	case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
		*_acebe = 31
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 32
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 33
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 34
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 35
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
		*_acebe = 36
	case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_acebe = 37
	case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_acebe = 38
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
		*_acebe = 39
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
		*_acebe = 40
	case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
		*_acebe = 41
	}
	return nil
}
func NewCT_ShapeProperties() *CT_ShapeProperties { _faeca := &CT_ShapeProperties{}; return _faeca }
func (_cdac ST_FontCollectionIndex) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aaaf := _b.Attr{}
	_aaaf.Name = name
	switch _cdac {
	case ST_FontCollectionIndexUnset:
		_aaaf.Value = ""
	case ST_FontCollectionIndexMajor:
		_aaaf.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontCollectionIndexMinor:
		_aaaf.Value = "\u006d\u0069\u006eo\u0072"
	case ST_FontCollectionIndexNone:
		_aaaf.Value = "\u006e\u006f\u006e\u0065"
	}
	return _aaaf, nil
}
func (_cgedc ST_PenAlignment) Validate() error { return _cgedc.ValidateWithPath("") }

// Validate validates the CT_BlipFillProperties and its children
func (_bfbge *CT_BlipFillProperties) Validate() error {
	return _bfbge.ValidateWithPath("C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_OfficeArtExtension struct {
	UriAttr string
	Any     []_f.Any
}

func (_fdaccd *ST_TextAlignType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fdaccd = 0
	case "\u006c":
		*_fdaccd = 1
	case "\u0063\u0074\u0072":
		*_fdaccd = 2
	case "\u0072":
		*_fdaccd = 3
	case "\u006a\u0075\u0073\u0074":
		*_fdaccd = 4
	case "\u006au\u0073\u0074\u004c\u006f\u0077":
		*_fdaccd = 5
	case "\u0064\u0069\u0073\u0074":
		*_fdaccd = 6
	case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
		*_fdaccd = 7
	}
	return nil
}

// ValidateWithPath validates the CT_AudioFile and its children, prefixing error messages with path
func (_bcb *CT_AudioFile) ValidateWithPath(path string) error {
	if _bcb.ExtLst != nil {
		if _fgfe := _bcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgfe != nil {
			return _fgfe
		}
	}
	return nil
}
func NewEG_ThemeableEffectStyle() *EG_ThemeableEffectStyle {
	_gaegc := &EG_ThemeableEffectStyle{}
	return _gaegc
}
func NewEG_EffectProperties() *EG_EffectProperties { _ccbbf := &EG_EffectProperties{}; return _ccbbf }
func (_beaaa *CT_NonVisualGraphicFrameProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfbgb:
	for {
		_gdga, _edaeg := d.Token()
		if _edaeg != nil {
			return _edaeg
		}
		switch _dcge := _gdga.(type) {
		case _b.StartElement:
			switch _dcge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}:
				_beaaa.GraphicFrameLocks = NewCT_GraphicalObjectFrameLocking()
				if _gbee := d.DecodeElement(_beaaa.GraphicFrameLocks, &_dcge); _gbee != nil {
					return _gbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_beaaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcff := d.DecodeElement(_beaaa.ExtLst, &_dcge); _fcff != nil {
					return _fcff
				}
			default:
				_f.Log("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020%\u0076", _dcge.Name)
				if _gcbgd := d.Skip(); _gcbgd != nil {
					return _gcbgd
				}
			}
		case _b.EndElement:
			break _cfbgb
		case _b.CharData:
		}
	}
	return nil
}
func (_aaeaa ST_PenAlignment) ValidateWithPath(path string) error {
	switch _aaeaa {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaeaa))
	}
	return nil
}

// Validate validates the CT_FontCollection and its children
func (_bdge *CT_FontCollection) Validate() error {
	return _bdge.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_TableStyleList and its children
func (_bgcfb *CT_TableStyleList) Validate() error {
	return _bgcfb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074")
}
func NewTbl() *Tbl { _eabda := &Tbl{}; _eabda.CT_Table = *NewCT_Table(); return _eabda }
func (_gfab *CT_PresetGeometry2D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_gbcec, _eecdc := _gfab.PrstAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _eecdc != nil {
		return _eecdc
	}
	start.Attr = append(start.Attr, _gbcec)
	e.EncodeToken(start)
	if _gfab.AvLst != nil {
		_feac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_gfab.AvLst, _feac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgaf *CT_EffectList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfdfc:
	for {
		_eeebb, _gged := d.Token()
		if _gged != nil {
			return _gged
		}
		switch _gbbg := _eeebb.(type) {
		case _b.StartElement:
			switch _gbbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_cgaf.Blur = NewCT_BlurEffect()
				if _abad := d.DecodeElement(_cgaf.Blur, &_gbbg); _abad != nil {
					return _abad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_cgaf.FillOverlay = NewCT_FillOverlayEffect()
				if _ggfd := d.DecodeElement(_cgaf.FillOverlay, &_gbbg); _ggfd != nil {
					return _ggfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_cgaf.Glow = NewCT_GlowEffect()
				if _afcff := d.DecodeElement(_cgaf.Glow, &_gbbg); _afcff != nil {
					return _afcff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_cgaf.InnerShdw = NewCT_InnerShadowEffect()
				if _debec := d.DecodeElement(_cgaf.InnerShdw, &_gbbg); _debec != nil {
					return _debec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_cgaf.OuterShdw = NewCT_OuterShadowEffect()
				if _cfca := d.DecodeElement(_cgaf.OuterShdw, &_gbbg); _cfca != nil {
					return _cfca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_cgaf.PrstShdw = NewCT_PresetShadowEffect()
				if _cffa := d.DecodeElement(_cgaf.PrstShdw, &_gbbg); _cffa != nil {
					return _cffa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cgaf.Reflection = NewCT_ReflectionEffect()
				if _bgdga := d.DecodeElement(_cgaf.Reflection, &_gbbg); _bgdga != nil {
					return _bgdga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_cgaf.SoftEdge = NewCT_SoftEdgesEffect()
				if _acebc := d.DecodeElement(_cgaf.SoftEdge, &_gbbg); _acebc != nil {
					return _acebc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045f\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074 \u0025\u0076", _gbbg.Name)
				if _gaeb := d.Skip(); _gaeb != nil {
					return _gaeb
				}
			}
		case _b.EndElement:
			break _bfdfc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_LineJoinProperties and its children, prefixing error messages with path
func (_ffdag *EG_LineJoinProperties) ValidateWithPath(path string) error {
	if _ffdag.Round != nil {
		if _eefbc := _ffdag.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _eefbc != nil {
			return _eefbc
		}
	}
	if _ffdag.Bevel != nil {
		if _efgd := _ffdag.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _efgd != nil {
			return _efgd
		}
	}
	if _ffdag.Miter != nil {
		if _dafc := _ffdag.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _dafc != nil {
			return _dafc
		}
	}
	return nil
}
func (_fadf *ST_PitchFamily) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fadf = 0
	case "\u0030\u0030":
		*_fadf = 1
	case "\u0030\u0031":
		*_fadf = 2
	case "\u0030\u0032":
		*_fadf = 3
	case "\u0031\u0036":
		*_fadf = 4
	case "\u0031\u0037":
		*_fadf = 5
	case "\u0031\u0038":
		*_fadf = 6
	case "\u0033\u0032":
		*_fadf = 7
	case "\u0033\u0033":
		*_fadf = 8
	case "\u0033\u0034":
		*_fadf = 9
	case "\u0034\u0038":
		*_fadf = 10
	case "\u0034\u0039":
		*_fadf = 11
	case "\u0035\u0030":
		*_fadf = 12
	case "\u0036\u0034":
		*_fadf = 13
	case "\u0036\u0035":
		*_fadf = 14
	case "\u0036\u0036":
		*_fadf = 15
	case "\u0038\u0030":
		*_fadf = 16
	case "\u0038\u0031":
		*_fadf = 17
	case "\u0038\u0032":
		*_fadf = 18
	}
	return nil
}

// Validate validates the ThemeManager and its children
func (_fgacf *ThemeManager) Validate() error {
	return _fgacf.ValidateWithPath("\u0054\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072")
}
func (_ebege *CT_LineJoinMiterProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbfde := range start.Attr {
		if _bbfde.Name.Local == "\u006c\u0069\u006d" {
			_decca, _cabea := ParseUnionST_PositivePercentage(_bbfde.Value)
			if _cabea != nil {
				return _cabea
			}
			_ebege.LimAttr = &_decca
			continue
		}
	}
	for {
		_dcfda, _cdgf := d.Token()
		if _cdgf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u004d\u0069\u0074\u0065\u0072P\u0072\u006f\u0070\u0065\u0072t\u0069\u0065s\u003a\u0020\u0025\u0073", _cdgf)
		}
		if _ffbdcf, _daead := _dcfda.(_b.EndElement); _daead && _ffbdcf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TextNoAutofit() *CT_TextNoAutofit { _bbgaf := &CT_TextNoAutofit{}; return _bbgaf }
func (_acab *CT_GvmlShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cabg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_acab.CNvPr, _cabg)
	_dbdfaf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_acab.CNvSpPr, _dbdfaf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the ThemeOverride and its children
func (_gfbdc *ThemeOverride) Validate() error {
	return _gfbdc.ValidateWithPath("\u0054\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}
func (_gbff *CT_GrayscaleEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_ccdee, _fbaaab := d.Token()
		if _fbaaab != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0047\u0072\u0061\u0079\u0073\u0063\u0061l\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _fbaaab)
		}
		if _dfgc, _faeee := _ccdee.(_b.EndElement); _faeee && _dfgc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edecd *CT_HSLEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edecd.HueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0075\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_edecd.HueAttr)})
	}
	if _edecd.SatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_edecd.SatAttr)})
	}
	if _edecd.LumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0075\u006d"}, Value: _bb.Sprintf("\u0025\u0076", *_edecd.LumAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_begcg *CT_TableCol) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", _begcg.WAttr)})
	e.EncodeToken(start)
	if _begcg.ExtLst != nil {
		_bcece := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_begcg.ExtLst, _bcece)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlShape struct {
	NvSpPr *CT_GvmlShapeNonVisual
	SpPr   *CT_ShapeProperties
	TxSp   *CT_GvmlTextShape
	Style  *CT_ShapeStyle
	ExtLst *CT_OfficeArtExtensionList
}

// Validate validates the CT_Angle and its children
func (_gfff *CT_Angle) Validate() error {
	return _gfff.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
}

// Validate validates the CT_GvmlShape and its children
func (_gfbc *CT_GvmlShape) Validate() error {
	return _gfbc.ValidateWithPath("\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065")
}

// ValidateWithPath validates the CT_AdjustHandleList and its children, prefixing error messages with path
func (_dd *CT_AdjustHandleList) ValidateWithPath(path string) error {
	for _faf, _egd := range _dd.AhXY {
		if _bc := _egd.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u0041\u0068\u0058\u0059\u005b\u0025\u0064\u005d", path, _faf)); _bc != nil {
			return _bc
		}
	}
	for _ega, _abdg := range _dd.AhPolar {
		if _fea := _abdg.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0041\u0068\u0050\u006f\u006c\u0061r\u005b\u0025\u0064\u005d", path, _ega)); _fea != nil {
			return _fea
		}
	}
	return nil
}

type EG_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_dacd *CT_GroupLocking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dacd.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoGrpAttr))})
	}
	if _dacd.NoUngrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0055\u006e\u0067\u0072\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoUngrpAttr))})
	}
	if _dacd.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoSelectAttr))})
	}
	if _dacd.NoRotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoRotAttr))})
	}
	if _dacd.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoChangeAspectAttr))})
	}
	if _dacd.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoMoveAttr))})
	}
	if _dacd.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_dacd.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _dacd.ExtLst != nil {
		_cdbge := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dacd.ExtLst, _cdbge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_BackgroundFillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func NewCT_EffectContainer() *CT_EffectContainer { _bcgcae := &CT_EffectContainer{}; return _bcgcae }

// ValidateWithPath validates the CT_ColorReplaceEffect and its children, prefixing error messages with path
func (_ecgg *CT_ColorReplaceEffect) ValidateWithPath(path string) error {
	if _ecgg.ScrgbClr != nil {
		if _badb := _ecgg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _badb != nil {
			return _badb
		}
	}
	if _ecgg.SrgbClr != nil {
		if _fead := _ecgg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fead != nil {
			return _fead
		}
	}
	if _ecgg.HslClr != nil {
		if _bgbe := _ecgg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bgbe != nil {
			return _bgbe
		}
	}
	if _ecgg.SysClr != nil {
		if _cbfef := _ecgg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cbfef != nil {
			return _cbfef
		}
	}
	if _ecgg.SchemeClr != nil {
		if _dace := _ecgg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dace != nil {
			return _dace
		}
	}
	if _ecgg.PrstClr != nil {
		if _fgafa := _ecgg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fgafa != nil {
			return _fgafa
		}
	}
	return nil
}

type CT_CustomColorList struct{ CustClr []*CT_CustomColor }

func NewCT_GroupLocking() *CT_GroupLocking { _febg := &CT_GroupLocking{}; return _febg }
func (_bcabf ST_PathShadeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dddaa := _b.Attr{}
	_dddaa.Name = name
	switch _bcabf {
	case ST_PathShadeTypeUnset:
		_dddaa.Value = ""
	case ST_PathShadeTypeShape:
		_dddaa.Value = "\u0073\u0068\u0061p\u0065"
	case ST_PathShadeTypeCircle:
		_dddaa.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_PathShadeTypeRect:
		_dddaa.Value = "\u0072\u0065\u0063\u0074"
	}
	return _dddaa, nil
}
func NewCT_QuickTimeFile() *CT_QuickTimeFile { _bacce := &CT_QuickTimeFile{}; return _bacce }

type ST_TextAnchoringType byte

func (_fffeb *EG_FillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aegbac:
	for {
		_gfdfd, _efacg := d.Token()
		if _efacg != nil {
			return _efacg
		}
		switch _fgdec := _gfdfd.(type) {
		case _b.StartElement:
			switch _fgdec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fffeb.NoFill = NewCT_NoFillProperties()
				if _gbcge := d.DecodeElement(_fffeb.NoFill, &_fgdec); _gbcge != nil {
					return _gbcge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fffeb.SolidFill = NewCT_SolidColorFillProperties()
				if _dfgf := d.DecodeElement(_fffeb.SolidFill, &_fgdec); _dfgf != nil {
					return _dfgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fffeb.GradFill = NewCT_GradientFillProperties()
				if _ebdabg := d.DecodeElement(_fffeb.GradFill, &_fgdec); _ebdabg != nil {
					return _ebdabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fffeb.BlipFill = NewCT_BlipFillProperties()
				if _dcfa := d.DecodeElement(_fffeb.BlipFill, &_fgdec); _dcfa != nil {
					return _dcfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fffeb.PattFill = NewCT_PatternFillProperties()
				if _gdeebd := d.DecodeElement(_fffeb.PattFill, &_fgdec); _gdeebd != nil {
					return _gdeebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fffeb.GrpFill = NewCT_GroupFillProperties()
				if _dgebf := d.DecodeElement(_fffeb.GrpFill, &_fgdec); _dgebf != nil {
					return _dgebf
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fgdec.Name)
				if _begg := d.Skip(); _begg != nil {
					return _begg
				}
			}
		case _b.EndElement:
			break _aegbac
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextSpacingPoint and its children, prefixing error messages with path
func (_fage *CT_TextSpacingPoint) ValidateWithPath(path string) error {
	if _fage.ValAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _fage.ValAttr)
	}
	if _fage.ValAttr > 158400 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0031\u0035\u0038\u0034\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _fage.ValAttr)
	}
	return nil
}

const (
	ST_PathFillModeUnset       ST_PathFillMode = 0
	ST_PathFillModeNone        ST_PathFillMode = 1
	ST_PathFillModeNorm        ST_PathFillMode = 2
	ST_PathFillModeLighten     ST_PathFillMode = 3
	ST_PathFillModeLightenLess ST_PathFillMode = 4
	ST_PathFillModeDarken      ST_PathFillMode = 5
	ST_PathFillModeDarkenLess  ST_PathFillMode = 6
)

func (_ceecc *CT_Path2DCubicBezierTo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_afff:
	for {
		_adbab, _ffcae := d.Token()
		if _ffcae != nil {
			return _ffcae
		}
		switch _agcd := _adbab.(type) {
		case _b.StartElement:
			switch _agcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_gccbc := NewCT_AdjPoint2D()
				if _fggad := d.DecodeElement(_gccbc, &_agcd); _fggad != nil {
					return _fggad
				}
				_ceecc.Pt = append(_ceecc.Pt, _gccbc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u00682\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _agcd.Name)
				if _gagce := d.Skip(); _gagce != nil {
					return _gagce
				}
			}
		case _b.EndElement:
			break _afff
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ShapeStyle() *CT_ShapeStyle {
	_fccbgc := &CT_ShapeStyle{}
	_fccbgc.LnRef = NewCT_StyleMatrixReference()
	_fccbgc.FillRef = NewCT_StyleMatrixReference()
	_fccbgc.EffectRef = NewCT_StyleMatrixReference()
	_fccbgc.FontRef = NewCT_FontReference()
	return _fccbgc
}
func (_bcgda ST_PresetLineDashVal) ValidateWithPath(path string) error {
	switch _bcgda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcgda))
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedWAVAudioFile and its children, prefixing error messages with path
func (_eeda *CT_EmbeddedWAVAudioFile) ValidateWithPath(path string) error { return nil }
func (_gedbef *ST_ColorSchemeIndex) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gedbef = 0
	case "\u0064\u006b\u0031":
		*_gedbef = 1
	case "\u006c\u0074\u0031":
		*_gedbef = 2
	case "\u0064\u006b\u0032":
		*_gedbef = 3
	case "\u006c\u0074\u0032":
		*_gedbef = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_gedbef = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_gedbef = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_gedbef = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_gedbef = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_gedbef = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_gedbef = 10
	case "\u0068\u006c\u0069n\u006b":
		*_gedbef = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_gedbef = 12
	}
	return nil
}

type CT_TableStyleList struct {
	DefAttr  string
	TblStyle []*CT_TableStyle
}

func (_bgcba *ST_PresetLineDashVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfgcf, _ddcda := d.Token()
	if _ddcda != nil {
		return _ddcda
	}
	if _gcaaa, _bdgad := _dfgcf.(_b.EndElement); _bdgad && _gcaaa.Name == start.Name {
		*_bgcba = 1
		return nil
	}
	if _gafbd, _edfaed := _dfgcf.(_b.CharData); !_edfaed {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfgcf)
	} else {
		switch string(_gafbd) {
		case "":
			*_bgcba = 0
		case "\u0073\u006f\u006ci\u0064":
			*_bgcba = 1
		case "\u0064\u006f\u0074":
			*_bgcba = 2
		case "\u0064\u0061\u0073\u0068":
			*_bgcba = 3
		case "\u006c\u0067\u0044\u0061\u0073\u0068":
			*_bgcba = 4
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_bgcba = 5
		case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
			*_bgcba = 6
		case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bgcba = 7
		case "\u0073y\u0073\u0044\u0061\u0073\u0068":
			*_bgcba = 8
		case "\u0073\u0079\u0073\u0044\u006f\u0074":
			*_bgcba = 9
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bgcba = 10
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bgcba = 11
		}
	}
	_dfgcf, _ddcda = d.Token()
	if _ddcda != nil {
		return _ddcda
	}
	if _gagdd, _fccfde := _dfgcf.(_b.EndElement); _fccfde && _gagdd.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfgcf)
}
func (_gdfee *CT_TextSpacing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gdfee.SpcPct != nil {
		_ggbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0063\u0074"}}
		e.EncodeElement(_gdfee.SpcPct, _ggbe)
	}
	if _gdfee.SpcPts != nil {
		_edege := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0074\u0073"}}
		e.EncodeElement(_gdfee.SpcPts, _edege)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableStyleTextStyle() *CT_TableStyleTextStyle {
	_dgfcg := &CT_TableStyleTextStyle{}
	return _dgfcg
}

type EG_Geometry struct {
	CustGeom *CT_CustomGeometry2D
	PrstGeom *CT_PresetGeometry2D
}

func NewThemeManager() *ThemeManager {
	_bdecf := &ThemeManager{}
	_bdecf.CT_EmptyElement = *NewCT_EmptyElement()
	return _bdecf
}

type VideoFile struct{ CT_VideoFile }

func (_daacb ST_LineEndLength) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abfaa := _b.Attr{}
	_abfaa.Name = name
	switch _daacb {
	case ST_LineEndLengthUnset:
		_abfaa.Value = ""
	case ST_LineEndLengthSm:
		_abfaa.Value = "\u0073\u006d"
	case ST_LineEndLengthMed:
		_abfaa.Value = "\u006d\u0065\u0064"
	case ST_LineEndLengthLg:
		_abfaa.Value = "\u006c\u0067"
	}
	return _abfaa, nil
}

type CT_PresetShadowEffect struct {
	PrstAttr  ST_PresetShadowVal
	DistAttr  *int64
	DirAttr   *int32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_eefbee *CT_TableStyleCellStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eefbee.TcBdr != nil {
		_adac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0063\u0042\u0064\u0072"}}
		e.EncodeElement(_eefbee.TcBdr, _adac)
	}
	if _eefbee.Fill != nil {
		_feadg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_eefbee.Fill, _feadg)
	}
	if _eefbee.FillRef != nil {
		_ecfddc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_eefbee.FillRef, _ecfddc)
	}
	if _eefbee.Cell3D != nil {
		_beaff := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_eefbee.Cell3D, _beaff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbeged *CT_TextUnderlineLineFollowText) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextBulletSizeFollowText() *CT_TextBulletSizeFollowText {
	_gdcbfc := &CT_TextBulletSizeFollowText{}
	return _gdcbfc
}
func (_gfbd *CT_ConnectionSite) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfbd.Pos = NewCT_AdjPoint2D()
	for _, _ggdca := range start.Attr {
		if _ggdca.Name.Local == "\u0061\u006e\u0067" {
			_ebebg, _cdbfe := ParseUnionST_AdjAngle(_ggdca.Value)
			if _cdbfe != nil {
				return _cdbfe
			}
			_gfbd.AngAttr = _ebebg
			continue
		}
	}
_abcbf:
	for {
		_fbfgg, _bgba := d.Token()
		if _bgba != nil {
			return _bgba
		}
		switch _ccba := _fbfgg.(type) {
		case _b.StartElement:
			switch _ccba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _cecg := d.DecodeElement(_gfbd.Pos, &_ccba); _cecg != nil {
					return _cecg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u0020\u0025\u0076", _ccba.Name)
				if _ecbd := d.Skip(); _ecbd != nil {
					return _ecbd
				}
			}
		case _b.EndElement:
			break _abcbf
		case _b.CharData:
		}
	}
	return nil
}
func (_edbaa ST_Percentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _edbaa.ST_PercentageDecimal != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_edbaa.ST_PercentageDecimal)))
	}
	if _edbaa.ST_Percentage != nil {
		e.EncodeToken(_b.CharData(*_edbaa.ST_Percentage))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

type CT_Point3D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
	ZAttr ST_Coordinate
}

// Validate validates the CT_StyleMatrix and its children
func (_cbed *CT_StyleMatrix) Validate() error {
	return _cbed.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078")
}

// Validate validates the CT_AnimationDgmElement and its children
func (_agebg *CT_AnimationDgmElement) Validate() error {
	return _agebg.ValidateWithPath("\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func (_dga *CT_AlphaModulateFixedEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgf := range start.Attr {
		if _fgf.Name.Local == "\u0061\u006d\u0074" {
			_aaf, _cda := ParseUnionST_PositivePercentage(_fgf.Value)
			if _cda != nil {
				return _cda
			}
			_dga.AmtAttr = &_aaf
			continue
		}
	}
	for {
		_abf, _fcbe := d.Token()
		if _fcbe != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0075l\u0061\u0074\u0065\u0046\u0069\u0078\u0065\u0064\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _fcbe)
		}
		if _gce, _ebgb := _abf.(_b.EndElement); _ebgb && _gce.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_FixedPercentage and its children
func (_bdeba *CT_FixedPercentage) Validate() error {
	return _bdeba.ValidateWithPath("\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_InverseTransform and its children, prefixing error messages with path
func (_bdcfg *CT_InverseTransform) ValidateWithPath(path string) error { return nil }

type CT_LinearShadeProperties struct {
	AngAttr    *int32
	ScaledAttr *bool
}
type CT_TextNoAutofit struct{}

// ValidateWithPath validates the AG_Locking and its children, prefixing error messages with path
func (_age *AG_Locking) ValidateWithPath(path string) error { return nil }
func NewCT_TableRow() *CT_TableRow                          { _dcbbc := &CT_TableRow{}; return _dcbbc }
func (_cafb *CT_AlphaCeilingEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_fd, _cbbf := d.Token()
		if _cbbf != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006ci\u006e\u0067\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _cbbf)
		}
		if _ddf, _ffe := _fd.(_b.EndElement); _ffe && _ddf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gae *CT_AlphaInverseEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gae.ScrgbClr != nil {
		_egaf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_gae.ScrgbClr, _egaf)
	}
	if _gae.SrgbClr != nil {
		_bbdf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_gae.SrgbClr, _bbdf)
	}
	if _gae.HslClr != nil {
		_cca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_gae.HslClr, _cca)
	}
	if _gae.SysClr != nil {
		_ccc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_gae.SysClr, _ccc)
	}
	if _gae.SchemeClr != nil {
		_eag := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_gae.SchemeClr, _eag)
	}
	if _gae.PrstClr != nil {
		_fab := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_gae.PrstClr, _fab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eedea *EG_TextAutofit) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eedea.NoAutofit != nil {
		_egbfa := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_eedea.NoAutofit, _egbfa)
	}
	if _eedea.NormAutofit != nil {
		_ggca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_eedea.NormAutofit, _ggca)
	}
	if _eedea.SpAutoFit != nil {
		_gegab := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_eedea.SpAutoFit, _gegab)
	}
	return nil
}
func NewEG_ColorTransform() *EG_ColorTransform { _gdecc := &EG_ColorTransform{}; return _gdecc }
func (_dabbd *CT_TextNoBullet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_dbffab, _fbdffd := d.Token()
		if _fbdffd != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004e\u006fB\u0075\u006c\u006ce\u0074:\u0020\u0025\u0073", _fbdffd)
		}
		if _dbdcg, _cafbed := _dbffab.(_b.EndElement); _cafbed && _dbdcg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcgc *CT_GradientStopList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cegd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0073"}}
	for _, _cdagc := range _dcgc.Gs {
		e.EncodeElement(_cdagc, _cegd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_InverseGammaTransform and its children
func (_bbcga *CT_InverseGammaTransform) Validate() error {
	return _bbcga.ValidateWithPath("\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_bdaaa *CT_OfficeArtExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eefae:
	for {
		_cecbf, _cadgfc := d.Token()
		if _cadgfc != nil {
			return _cadgfc
		}
		switch _aefc := _cecbf.(type) {
		case _b.StartElement:
			switch _aefc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_baba := NewCT_OfficeArtExtension()
				if _deccg := d.DecodeElement(_baba, &_aefc); _deccg != nil {
					return _deccg
				}
				_bdaaa.Ext = append(_bdaaa.Ext, _baba)
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _aefc.Name)
				if _abccf := d.Skip(); _abccf != nil {
					return _abccf
				}
			}
		case _b.EndElement:
			break _eefae
		case _b.CharData:
		}
	}
	return nil
}
func NewEG_Effect() *EG_Effect { _bgcd := &EG_Effect{}; return _bgcd }

// ValidateWithPath validates the CT_TextAutonumberBullet and its children, prefixing error messages with path
func (_edaecc *CT_TextAutonumberBullet) ValidateWithPath(path string) error {
	if _edaecc.TypeAttr == ST_TextAutonumberSchemeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gfffgd := _edaecc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gfffgd != nil {
		return _gfffgd
	}
	if _edaecc.StartAtAttr != nil {
		if *_edaecc.StartAtAttr < 1 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074\u0061\u0072\u0074\u0041\u0074\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_edaecc.StartAtAttr)
		}
		if *_edaecc.StartAtAttr > 32767 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074a\u0072\u0074\u0041t\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0033\u0032\u0037\u0036\u0037\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_edaecc.StartAtAttr)
		}
	}
	return nil
}
func (_bbabg ST_PathFillMode) ValidateWithPath(path string) error {
	switch _bbabg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbabg))
	}
	return nil
}

// Validate validates the CT_GvmlPictureNonVisual and its children
func (_gfbef *CT_GvmlPictureNonVisual) Validate() error {
	return _gfbef.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_bacea ST_PresetLineDashVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bacea.String(), start)
}
func (_aafeb *CT_InverseGammaTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_LineStyleList struct{ Ln []*CT_LineProperties }

// ValidateWithPath validates the CT_LineJoinRound and its children, prefixing error messages with path
func (_ecbga *CT_LineJoinRound) ValidateWithPath(path string) error { return nil }
func (_egff *CT_PatternFillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egff.PrstAttr != ST_PresetPatternValUnset {
		_eebf, _feabe := _egff.PrstAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _feabe != nil {
			return _feabe
		}
		start.Attr = append(start.Attr, _eebf)
	}
	e.EncodeToken(start)
	if _egff.FgClr != nil {
		_bcbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_egff.FgClr, _bcbg)
	}
	if _egff.BgClr != nil {
		_gbbc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_egff.BgClr, _gbbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_EffectContainer struct {
	TypeAttr     ST_EffectContainerType
	NameAttr     *string
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

// Validate validates the CT_TextBulletSizePercent and its children
func (_aggcf *CT_TextBulletSizePercent) Validate() error {
	return _aggcf.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
}
func (_egcd *CT_TableStyleCellStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bccbf:
	for {
		_adcdd, _fbdea := d.Token()
		if _fbdea != nil {
			return _fbdea
		}
		switch _cgeba := _adcdd.(type) {
		case _b.StartElement:
			switch _cgeba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}:
				_egcd.TcBdr = NewCT_TableCellBorderStyle()
				if _fecbb := d.DecodeElement(_egcd.TcBdr, &_cgeba); _fecbb != nil {
					return _fecbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_egcd.Fill = NewCT_FillProperties()
				if _dgadf := d.DecodeElement(_egcd.Fill, &_cgeba); _dgadf != nil {
					return _dgadf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_egcd.FillRef = NewCT_StyleMatrixReference()
				if _edbff := d.DecodeElement(_egcd.FillRef, &_cgeba); _edbff != nil {
					return _edbff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_egcd.Cell3D = NewCT_Cell3D()
				if _edafg := d.DecodeElement(_egcd.Cell3D, &_cgeba); _edafg != nil {
					return _edafg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _cgeba.Name)
				if _bgdaf := d.Skip(); _bgdaf != nil {
					return _bgdaf
				}
			}
		case _b.EndElement:
			break _bccbf
		case _b.CharData:
		}
	}
	return nil
}
func (_daacg ST_BevelPresetType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adagg := _b.Attr{}
	_adagg.Name = name
	switch _daacg {
	case ST_BevelPresetTypeUnset:
		_adagg.Value = ""
	case ST_BevelPresetTypeRelaxedInset:
		_adagg.Value = "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case ST_BevelPresetTypeCircle:
		_adagg.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_BevelPresetTypeSlope:
		_adagg.Value = "\u0073\u006c\u006fp\u0065"
	case ST_BevelPresetTypeCross:
		_adagg.Value = "\u0063\u0072\u006fs\u0073"
	case ST_BevelPresetTypeAngle:
		_adagg.Value = "\u0061\u006e\u0067l\u0065"
	case ST_BevelPresetTypeSoftRound:
		_adagg.Value = "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case ST_BevelPresetTypeConvex:
		_adagg.Value = "\u0063\u006f\u006e\u0076\u0065\u0078"
	case ST_BevelPresetTypeCoolSlant:
		_adagg.Value = "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case ST_BevelPresetTypeDivot:
		_adagg.Value = "\u0064\u0069\u0076o\u0074"
	case ST_BevelPresetTypeRiblet:
		_adagg.Value = "\u0072\u0069\u0062\u006c\u0065\u0074"
	case ST_BevelPresetTypeHardEdge:
		_adagg.Value = "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case ST_BevelPresetTypeArtDeco:
		_adagg.Value = "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return _adagg, nil
}
func (_efggf ST_EffectContainerType) ValidateWithPath(path string) error {
	switch _efggf {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efggf))
	}
	return nil
}

// ST_TextBulletSize is a union type
type ST_TextBulletSize struct {
	ST_TextBulletSizePercent *string
	ST_TextBulletSizeDecimal *int32
}

func (_edddf *CT_TableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edddf.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ebaga := range start.Attr {
		if _ebaga.Name.Local == "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de" {
			_dgefd, _cedgb := _ebaga.Value, error(nil)
			if _cedgb != nil {
				return _cedgb
			}
			_edddf.StyleNameAttr = _dgefd
			continue
		}
		if _ebaga.Name.Local == "\u0073t\u0079\u006c\u0065\u0049\u0064" {
			_cegb, _bggfg := _ebaga.Value, error(nil)
			if _bggfg != nil {
				return _bggfg
			}
			_edddf.StyleIdAttr = _cegb
			continue
		}
	}
_caebg:
	for {
		_aeaca, _aegbd := d.Token()
		if _aegbd != nil {
			return _aegbd
		}
		switch _fbegf := _aeaca.(type) {
		case _b.StartElement:
			switch _fbegf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}:
				_edddf.TblBg = NewCT_TableBackgroundStyle()
				if _dceac := d.DecodeElement(_edddf.TblBg, &_fbegf); _dceac != nil {
					return _dceac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}:
				_edddf.WholeTbl = NewCT_TablePartStyle()
				if _cddgfg := d.DecodeElement(_edddf.WholeTbl, &_fbegf); _cddgfg != nil {
					return _cddgfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}:
				_edddf.Band1H = NewCT_TablePartStyle()
				if _baeea := d.DecodeElement(_edddf.Band1H, &_fbegf); _baeea != nil {
					return _baeea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}:
				_edddf.Band2H = NewCT_TablePartStyle()
				if _gfffbd := d.DecodeElement(_edddf.Band2H, &_fbegf); _gfffbd != nil {
					return _gfffbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}:
				_edddf.Band1V = NewCT_TablePartStyle()
				if _bdafd := d.DecodeElement(_edddf.Band1V, &_fbegf); _bdafd != nil {
					return _bdafd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}:
				_edddf.Band2V = NewCT_TablePartStyle()
				if _egfgg := d.DecodeElement(_edddf.Band2V, &_fbegf); _egfgg != nil {
					return _egfgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}:
				_edddf.LastCol = NewCT_TablePartStyle()
				if _aecbf := d.DecodeElement(_edddf.LastCol, &_fbegf); _aecbf != nil {
					return _aecbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}:
				_edddf.FirstCol = NewCT_TablePartStyle()
				if _fgaaga := d.DecodeElement(_edddf.FirstCol, &_fbegf); _fgaaga != nil {
					return _fgaaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}:
				_edddf.LastRow = NewCT_TablePartStyle()
				if _abcad := d.DecodeElement(_edddf.LastRow, &_fbegf); _abcad != nil {
					return _abcad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}:
				_edddf.SeCell = NewCT_TablePartStyle()
				if _bagdg := d.DecodeElement(_edddf.SeCell, &_fbegf); _bagdg != nil {
					return _bagdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}:
				_edddf.SwCell = NewCT_TablePartStyle()
				if _ffdcc := d.DecodeElement(_edddf.SwCell, &_fbegf); _ffdcc != nil {
					return _ffdcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}:
				_edddf.FirstRow = NewCT_TablePartStyle()
				if _dbeed := d.DecodeElement(_edddf.FirstRow, &_fbegf); _dbeed != nil {
					return _dbeed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}:
				_edddf.NeCell = NewCT_TablePartStyle()
				if _bacbb := d.DecodeElement(_edddf.NeCell, &_fbegf); _bacbb != nil {
					return _bacbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}:
				_edddf.NwCell = NewCT_TablePartStyle()
				if _fecbe := d.DecodeElement(_edddf.NwCell, &_fbegf); _fecbe != nil {
					return _fecbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edddf.ExtLst = NewCT_OfficeArtExtensionList()
				if _affbef := d.DecodeElement(_edddf.ExtLst, &_fbegf); _affbef != nil {
					return _affbef
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _fbegf.Name)
				if _edfdef := d.Skip(); _edfdef != nil {
					return _edfdef
				}
			}
		case _b.EndElement:
			break _caebg
		case _b.CharData:
		}
	}
	return nil
}
func (_efdb *CT_ShapeProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efdb.BwModeAttr != ST_BlackWhiteModeUnset {
		_decge, _afafa := _efdb.BwModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _afafa != nil {
			return _afafa
		}
		start.Attr = append(start.Attr, _decge)
	}
	e.EncodeToken(start)
	if _efdb.Xfrm != nil {
		_addfab := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_efdb.Xfrm, _addfab)
	}
	if _efdb.CustGeom != nil {
		_gcgce := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_efdb.CustGeom, _gcgce)
	}
	if _efdb.PrstGeom != nil {
		_agfcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_efdb.PrstGeom, _agfcd)
	}
	if _efdb.NoFill != nil {
		_bbfga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efdb.NoFill, _bbfga)
	}
	if _efdb.SolidFill != nil {
		_edfgf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efdb.SolidFill, _edfgf)
	}
	if _efdb.GradFill != nil {
		_feae := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efdb.GradFill, _feae)
	}
	if _efdb.BlipFill != nil {
		_eegcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efdb.BlipFill, _eegcc)
	}
	if _efdb.PattFill != nil {
		_bffed := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_efdb.PattFill, _bffed)
	}
	if _efdb.GrpFill != nil {
		_aadff := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_efdb.GrpFill, _aadff)
	}
	if _efdb.Ln != nil {
		_egdeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_efdb.Ln, _egdeb)
	}
	if _efdb.EffectLst != nil {
		_aedeeb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efdb.EffectLst, _aedeeb)
	}
	if _efdb.EffectDag != nil {
		_ccdefd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_efdb.EffectDag, _ccdefd)
	}
	if _efdb.Scene3d != nil {
		_edbga := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_efdb.Scene3d, _edbga)
	}
	if _efdb.Sp3d != nil {
		_eabgg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_efdb.Sp3d, _eabgg)
	}
	if _efdb.ExtLst != nil {
		_fdcbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efdb.ExtLst, _fdcbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cebda *CT_TextNormalAutofit) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebbbgd := range start.Attr {
		if _ebbbgd.Name.Local == "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce" {
			_gcafb, _ccgbf := ParseUnionST_TextFontScalePercentOrPercentString(_ebbbgd.Value)
			if _ccgbf != nil {
				return _ccgbf
			}
			_cebda.FontScaleAttr = &_gcafb
			continue
		}
		if _ebbbgd.Name.Local == "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e" {
			_cebgg, _efadaf := ParseUnionST_TextSpacingPercentOrPercentString(_ebbbgd.Value)
			if _efadaf != nil {
				return _efadaf
			}
			_cebda.LnSpcReductionAttr = &_cebgg
			continue
		}
	}
	for {
		_ggfce, _agef := d.Token()
		if _agef != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fr\u006d\u0061\u006c\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _agef)
		}
		if _gbffd, _bcbcd := _ggfce.(_b.EndElement); _bcbcd && _gbffd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_EffectReference struct{ RefAttr string }

func (_bbcdf ST_AnimationBuildType) String() string {
	switch _bbcdf {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}
func (_debeag *ST_PresetColorVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfdfb, _bdaaac := d.Token()
	if _bdaaac != nil {
		return _bdaaac
	}
	if _dacfaa, _bfaaf := _cfdfb.(_b.EndElement); _bfaaf && _dacfaa.Name == start.Name {
		*_debeag = 1
		return nil
	}
	if _geab, _efeed := _cfdfb.(_b.CharData); !_efeed {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfdfb)
	} else {
		switch string(_geab) {
		case "":
			*_debeag = 0
		case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
			*_debeag = 1
		case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
			*_debeag = 2
		case "\u0061\u0071\u0075\u0061":
			*_debeag = 3
		case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_debeag = 4
		case "\u0061\u007a\u0075r\u0065":
			*_debeag = 5
		case "\u0062\u0065\u0069g\u0065":
			*_debeag = 6
		case "\u0062\u0069\u0073\u0071\u0075\u0065":
			*_debeag = 7
		case "\u0062\u006c\u0061c\u006b":
			*_debeag = 8
		case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
			*_debeag = 9
		case "\u0062\u006c\u0075\u0065":
			*_debeag = 10
		case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
			*_debeag = 11
		case "\u0062\u0072\u006fw\u006e":
			*_debeag = 12
		case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
			*_debeag = 13
		case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
			*_debeag = 14
		case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
			*_debeag = 15
		case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
			*_debeag = 16
		case "\u0063\u006f\u0072a\u006c":
			*_debeag = 17
		case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
			*_debeag = 18
		case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
			*_debeag = 19
		case "\u0063r\u0069\u006d\u0073\u006f\u006e":
			*_debeag = 20
		case "\u0063\u0079\u0061\u006e":
			*_debeag = 21
		case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
			*_debeag = 22
		case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
			*_debeag = 23
		case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_debeag = 24
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_debeag = 25
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
			*_debeag = 26
		case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
			*_debeag = 27
		case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
			*_debeag = 28
		case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
			*_debeag = 29
		case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
			*_debeag = 30
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_debeag = 31
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_debeag = 32
		case "\u0064a\u0072\u006b\u0052\u0065\u0064":
			*_debeag = 33
		case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_debeag = 34
		case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 35
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_debeag = 36
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_debeag = 37
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_debeag = 38
		case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_debeag = 39
		case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_debeag = 40
		case "\u0064\u006b\u0042\u006c\u0075\u0065":
			*_debeag = 41
		case "\u0064\u006b\u0043\u0079\u0061\u006e":
			*_debeag = 42
		case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_debeag = 43
		case "\u0064\u006b\u0047\u0072\u0061\u0079":
			*_debeag = 44
		case "\u0064\u006b\u0047\u0072\u0065\u0079":
			*_debeag = 45
		case "\u0064k\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 46
		case "\u0064k\u004b\u0068\u0061\u006b\u0069":
			*_debeag = 47
		case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
			*_debeag = 48
		case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 49
		case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_debeag = 50
		case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_debeag = 51
		case "\u0064\u006b\u0052e\u0064":
			*_debeag = 52
		case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_debeag = 53
		case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 54
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_debeag = 55
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_debeag = 56
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_debeag = 57
		case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_debeag = 58
		case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_debeag = 59
		case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
			*_debeag = 60
		case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_debeag = 61
		case "\u0064i\u006d\u0047\u0072\u0061\u0079":
			*_debeag = 62
		case "\u0064i\u006d\u0047\u0072\u0065\u0079":
			*_debeag = 63
		case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
			*_debeag = 64
		case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
			*_debeag = 65
		case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
			*_debeag = 66
		case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 67
		case "\u0066u\u0063\u0068\u0073\u0069\u0061":
			*_debeag = 68
		case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
			*_debeag = 69
		case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
			*_debeag = 70
		case "\u0067\u006f\u006c\u0064":
			*_debeag = 71
		case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
			*_debeag = 72
		case "\u0067\u0072\u0061\u0079":
			*_debeag = 73
		case "\u0067\u0072\u0065\u0079":
			*_debeag = 74
		case "\u0067\u0072\u0065e\u006e":
			*_debeag = 75
		case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
			*_debeag = 76
		case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
			*_debeag = 77
		case "\u0068o\u0074\u0050\u0069\u006e\u006b":
			*_debeag = 78
		case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
			*_debeag = 79
		case "\u0069\u006e\u0064\u0069\u0067\u006f":
			*_debeag = 80
		case "\u0069\u0076\u006fr\u0079":
			*_debeag = 81
		case "\u006b\u0068\u0061k\u0069":
			*_debeag = 82
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
			*_debeag = 83
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
			*_debeag = 84
		case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
			*_debeag = 85
		case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
			*_debeag = 86
		case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
			*_debeag = 87
		case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
			*_debeag = 88
		case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
			*_debeag = 89
		case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
			*_debeag = 90
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_debeag = 91
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
			*_debeag = 92
		case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 93
		case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
			*_debeag = 94
		case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_debeag = 95
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 96
		case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_debeag = 97
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
			*_debeag = 98
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
			*_debeag = 99
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
			*_debeag = 100
		case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_debeag = 101
		case "\u006c\u0074\u0042\u006c\u0075\u0065":
			*_debeag = 102
		case "\u006ct\u0043\u006f\u0072\u0061\u006c":
			*_debeag = 103
		case "\u006c\u0074\u0043\u0079\u0061\u006e":
			*_debeag = 104
		case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
			*_debeag = 105
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_debeag = 106
		case "\u006c\u0074\u0047\u0072\u0065\u0079":
			*_debeag = 107
		case "\u006ct\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 108
		case "\u006c\u0074\u0050\u0069\u006e\u006b":
			*_debeag = 109
		case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_debeag = 110
		case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 111
		case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
			*_debeag = 112
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_debeag = 113
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_debeag = 114
		case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
			*_debeag = 115
		case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_debeag = 116
		case "\u006c\u0069\u006d\u0065":
			*_debeag = 117
		case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
			*_debeag = 118
		case "\u006c\u0069\u006ee\u006e":
			*_debeag = 119
		case "\u006da\u0067\u0065\u006e\u0074\u0061":
			*_debeag = 120
		case "\u006d\u0061\u0072\u006f\u006f\u006e":
			*_debeag = 121
		case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_debeag = 122
		case "\u006de\u0064\u0042\u006c\u0075\u0065":
			*_debeag = 123
		case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
			*_debeag = 124
		case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
			*_debeag = 125
		case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 126
		case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_debeag = 127
		case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_debeag = 128
		case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_debeag = 129
		case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_debeag = 130
		case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_debeag = 131
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
			*_debeag = 132
		case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
			*_debeag = 133
		case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
			*_debeag = 134
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
			*_debeag = 135
		case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_debeag = 136
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_debeag = 137
		case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_debeag = 138
		case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_debeag = 139
		case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
			*_debeag = 140
		case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
			*_debeag = 141
		case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
			*_debeag = 142
		case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
			*_debeag = 143
		case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
			*_debeag = 144
		case "\u006e\u0061\u0076\u0079":
			*_debeag = 145
		case "\u006fl\u0064\u004c\u0061\u0063\u0065":
			*_debeag = 146
		case "\u006f\u006c\u0069v\u0065":
			*_debeag = 147
		case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
			*_debeag = 148
		case "\u006f\u0072\u0061\u006e\u0067\u0065":
			*_debeag = 149
		case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
			*_debeag = 150
		case "\u006f\u0072\u0063\u0068\u0069\u0064":
			*_debeag = 151
		case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_debeag = 152
		case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
			*_debeag = 153
		case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_debeag = 154
		case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_debeag = 155
		case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
			*_debeag = 156
		case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
			*_debeag = 157
		case "\u0070\u0065\u0072\u0075":
			*_debeag = 158
		case "\u0070\u0069\u006e\u006b":
			*_debeag = 159
		case "\u0070\u006c\u0075\u006d":
			*_debeag = 160
		case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
			*_debeag = 161
		case "\u0070\u0075\u0072\u0070\u006c\u0065":
			*_debeag = 162
		case "\u0072\u0065\u0064":
			*_debeag = 163
		case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
			*_debeag = 164
		case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
			*_debeag = 165
		case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
			*_debeag = 166
		case "\u0073\u0061\u006c\u006d\u006f\u006e":
			*_debeag = 167
		case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
			*_debeag = 168
		case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 169
		case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
			*_debeag = 170
		case "\u0073\u0069\u0065\u006e\u006e\u0061":
			*_debeag = 171
		case "\u0073\u0069\u006c\u0076\u0065\u0072":
			*_debeag = 172
		case "\u0073k\u0079\u0042\u006c\u0075\u0065":
			*_debeag = 173
		case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
			*_debeag = 174
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
			*_debeag = 175
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
			*_debeag = 176
		case "\u0073\u006e\u006f\u0077":
			*_debeag = 177
		case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 178
		case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
			*_debeag = 179
		case "\u0074\u0061\u006e":
			*_debeag = 180
		case "\u0074\u0065\u0061\u006c":
			*_debeag = 181
		case "\u0074h\u0069\u0073\u0074\u006c\u0065":
			*_debeag = 182
		case "\u0074\u006f\u006d\u0061\u0074\u006f":
			*_debeag = 183
		case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
			*_debeag = 184
		case "\u0076\u0069\u006f\u006c\u0065\u0074":
			*_debeag = 185
		case "\u0077\u0068\u0065a\u0074":
			*_debeag = 186
		case "\u0077\u0068\u0069t\u0065":
			*_debeag = 187
		case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
			*_debeag = 188
		case "\u0079\u0065\u006c\u006c\u006f\u0077":
			*_debeag = 189
		case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
			*_debeag = 190
		}
	}
	_cfdfb, _bdaaac = d.Token()
	if _bdaaac != nil {
		return _bdaaac
	}
	if _caagag, _baced := _cfdfb.(_b.EndElement); _baced && _caagag.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfdfb)
}

type CT_TextBulletSizePoint struct{ ValAttr int32 }

func (_aegb *CT_GlowEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbbc := range start.Attr {
		if _bbbc.Name.Local == "\u0072\u0061\u0064" {
			_adda, _abefe := _a.ParseInt(_bbbc.Value, 10, 64)
			if _abefe != nil {
				return _abefe
			}
			_aegb.RadAttr = &_adda
			continue
		}
	}
_eeec:
	for {
		_bbfgf, _babcg := d.Token()
		if _babcg != nil {
			return _babcg
		}
		switch _baaf := _bbfgf.(type) {
		case _b.StartElement:
			switch _baaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_aegb.ScrgbClr = NewCT_ScRgbColor()
				if _gafd := d.DecodeElement(_aegb.ScrgbClr, &_baaf); _gafd != nil {
					return _gafd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_aegb.SrgbClr = NewCT_SRgbColor()
				if _ceff := d.DecodeElement(_aegb.SrgbClr, &_baaf); _ceff != nil {
					return _ceff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_aegb.HslClr = NewCT_HslColor()
				if _fgde := d.DecodeElement(_aegb.HslClr, &_baaf); _fgde != nil {
					return _fgde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_aegb.SysClr = NewCT_SystemColor()
				if _dagg := d.DecodeElement(_aegb.SysClr, &_baaf); _dagg != nil {
					return _dagg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_aegb.SchemeClr = NewCT_SchemeColor()
				if _dfee := d.DecodeElement(_aegb.SchemeClr, &_baaf); _dfee != nil {
					return _dfee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_aegb.PrstClr = NewCT_PresetColor()
				if _afaf := d.DecodeElement(_aegb.PrstClr, &_baaf); _afaf != nil {
					return _afaf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047l\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _baaf.Name)
				if _gccb := d.Skip(); _gccb != nil {
					return _gccb
				}
			}
		case _b.EndElement:
			break _eeec
		case _b.CharData:
		}
	}
	return nil
}
func (_deeaaf *ST_TextVerticalType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_deeaaf = 0
	case "\u0068\u006f\u0072\u007a":
		*_deeaaf = 1
	case "\u0076\u0065\u0072\u0074":
		*_deeaaf = 2
	case "\u0076e\u0072\u0074\u0032\u0037\u0030":
		*_deeaaf = 3
	case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
		*_deeaaf = 4
	case "\u0065\u0061\u0056\u0065\u0072\u0074":
		*_deeaaf = 5
	case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
		*_deeaaf = 6
	case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
		*_deeaaf = 7
	}
	return nil
}

// ValidateWithPath validates the CT_StyleMatrix and its children, prefixing error messages with path
func (_bbbe *CT_StyleMatrix) ValidateWithPath(path string) error {
	if _fgaag := _bbbe.FillStyleLst.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _fgaag != nil {
		return _fgaag
	}
	if _aaga := _bbbe.LnStyleLst.ValidateWithPath(path + "/\u004c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _aaga != nil {
		return _aaga
	}
	if _egbag := _bbbe.EffectStyleLst.ValidateWithPath(path + "\u002fE\u0066f\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _egbag != nil {
		return _egbag
	}
	if _dcaf := _bbbe.BgFillStyleLst.ValidateWithPath(path + "\u002fB\u0067F\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _dcaf != nil {
		return _dcaf
	}
	return nil
}

// ValidateWithPath validates the CT_FixedPercentage and its children, prefixing error messages with path
func (_bcab *CT_FixedPercentage) ValidateWithPath(path string) error {
	if _agag := _bcab.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _agag != nil {
		return _agag
	}
	return nil
}
func NewCT_GradientStopList() *CT_GradientStopList { _fgef := &CT_GradientStopList{}; return _fgef }
func NewCT_ClipboardStyleSheet() *CT_ClipboardStyleSheet {
	_abae := &CT_ClipboardStyleSheet{}
	_abae.ThemeElements = NewCT_BaseStyles()
	_abae.ClrMap = NewCT_ColorMapping()
	return _abae
}
func (_bfefb *ST_PresetShadowVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdbag, _bdfgee := d.Token()
	if _bdfgee != nil {
		return _bdfgee
	}
	if _fegfg, _afacd := _cdbag.(_b.EndElement); _afacd && _fegfg.Name == start.Name {
		*_bfefb = 1
		return nil
	}
	if _eecee, _afbfbd := _cdbag.(_b.CharData); !_afbfbd {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdbag)
	} else {
		switch string(_eecee) {
		case "":
			*_bfefb = 0
		case "\u0073\u0068\u0064w\u0031":
			*_bfefb = 1
		case "\u0073\u0068\u0064w\u0032":
			*_bfefb = 2
		case "\u0073\u0068\u0064w\u0033":
			*_bfefb = 3
		case "\u0073\u0068\u0064w\u0034":
			*_bfefb = 4
		case "\u0073\u0068\u0064w\u0035":
			*_bfefb = 5
		case "\u0073\u0068\u0064w\u0036":
			*_bfefb = 6
		case "\u0073\u0068\u0064w\u0037":
			*_bfefb = 7
		case "\u0073\u0068\u0064w\u0038":
			*_bfefb = 8
		case "\u0073\u0068\u0064w\u0039":
			*_bfefb = 9
		case "\u0073\u0068\u0064\u0077\u0031\u0030":
			*_bfefb = 10
		case "\u0073\u0068\u0064\u0077\u0031\u0031":
			*_bfefb = 11
		case "\u0073\u0068\u0064\u0077\u0031\u0032":
			*_bfefb = 12
		case "\u0073\u0068\u0064\u0077\u0031\u0033":
			*_bfefb = 13
		case "\u0073\u0068\u0064\u0077\u0031\u0034":
			*_bfefb = 14
		case "\u0073\u0068\u0064\u0077\u0031\u0035":
			*_bfefb = 15
		case "\u0073\u0068\u0064\u0077\u0031\u0036":
			*_bfefb = 16
		case "\u0073\u0068\u0064\u0077\u0031\u0037":
			*_bfefb = 17
		case "\u0073\u0068\u0064\u0077\u0031\u0038":
			*_bfefb = 18
		case "\u0073\u0068\u0064\u0077\u0031\u0039":
			*_bfefb = 19
		case "\u0073\u0068\u0064\u0077\u0032\u0030":
			*_bfefb = 20
		}
	}
	_cdbag, _bdfgee = d.Token()
	if _bdfgee != nil {
		return _bdfgee
	}
	if _gccec, _abdbg := _cdbag.(_b.EndElement); _abdbg && _gccec.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdbag)
}
func (_dbbgd *CT_LightRig) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbbgd.RigAttr = ST_LightRigType(1)
	_dbbgd.DirAttr = ST_LightRigDirection(1)
	for _, _cgcge := range start.Attr {
		if _cgcge.Name.Local == "\u0072\u0069\u0067" {
			_dbbgd.RigAttr.UnmarshalXMLAttr(_cgcge)
			continue
		}
		if _cgcge.Name.Local == "\u0064\u0069\u0072" {
			_dbbgd.DirAttr.UnmarshalXMLAttr(_cgcge)
			continue
		}
	}
_feee:
	for {
		_dcddc, _efgc := d.Token()
		if _efgc != nil {
			return _efgc
		}
		switch _cdde := _dcddc.(type) {
		case _b.StartElement:
			switch _cdde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_dbbgd.Rot = NewCT_SphereCoords()
				if _cddeb := d.DecodeElement(_dbbgd.Rot, &_cdde); _cddeb != nil {
					return _cddeb
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067\u0020\u0025\u0076", _cdde.Name)
				if _gbcga := d.Skip(); _gbcga != nil {
					return _gbcga
				}
			}
		case _b.EndElement:
			break _feee
		case _b.CharData:
		}
	}
	return nil
}
func (_cgefdf *CT_TextSpacingPercent) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _cgefdf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aaaaec *CT_SchemeColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_faedb, _eefabc := _aaaaec.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _eefabc != nil {
		return _eefabc
	}
	start.Attr = append(start.Attr, _faedb)
	e.EncodeToken(start)
	if _aaaaec.EG_ColorTransform != nil {
		for _, _feaga := range _aaaaec.EG_ColorTransform {
			_feaga.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egade ST_TextAutonumberScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egade.String(), start)
}
func NewCT_GrayscaleTransform() *CT_GrayscaleTransform {
	_dgfde := &CT_GrayscaleTransform{}
	return _dgfde
}
func (_gacab ST_DgmBuildStep) ValidateWithPath(path string) error {
	switch _gacab {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gacab))
	}
	return nil
}
func (_aadcd *ST_PathFillMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aadcd = 0
	case "\u006e\u006f\u006e\u0065":
		*_aadcd = 1
	case "\u006e\u006f\u0072\u006d":
		*_aadcd = 2
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_aadcd = 3
	case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
		*_aadcd = 4
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_aadcd = 5
	case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
		*_aadcd = 6
	}
	return nil
}
func (_cgagg ST_TextAlignType) Validate() error { return _cgagg.ValidateWithPath("") }
func NewCT_PresetShadowEffect() *CT_PresetShadowEffect {
	_aegac := &CT_PresetShadowEffect{}
	_aegac.PrstAttr = ST_PresetShadowVal(1)
	return _aegac
}

type CT_LuminanceEffect struct {
	BrightAttr   *ST_FixedPercentage
	ContrastAttr *ST_FixedPercentage
}

// ValidateWithPath validates the CT_TableCol and its children, prefixing error messages with path
func (_ddgcaf *CT_TableCol) ValidateWithPath(path string) error {
	if _egcf := _ddgcaf.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _egcf != nil {
		return _egcf
	}
	if _ddgcaf.ExtLst != nil {
		if _acfgc := _ddgcaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acfgc != nil {
			return _acfgc
		}
	}
	return nil
}
func (_dcfc *CT_SolidColorFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eafd:
	for {
		_dagce, _ebecf := d.Token()
		if _ebecf != nil {
			return _ebecf
		}
		switch _aeggf := _dagce.(type) {
		case _b.StartElement:
			switch _aeggf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dcfc.ScrgbClr = NewCT_ScRgbColor()
				if _ceeeb := d.DecodeElement(_dcfc.ScrgbClr, &_aeggf); _ceeeb != nil {
					return _ceeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dcfc.SrgbClr = NewCT_SRgbColor()
				if _adgaf := d.DecodeElement(_dcfc.SrgbClr, &_aeggf); _adgaf != nil {
					return _adgaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dcfc.HslClr = NewCT_HslColor()
				if _gdgeg := d.DecodeElement(_dcfc.HslClr, &_aeggf); _gdgeg != nil {
					return _gdgeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dcfc.SysClr = NewCT_SystemColor()
				if _edecdf := d.DecodeElement(_dcfc.SysClr, &_aeggf); _edecdf != nil {
					return _edecdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dcfc.SchemeClr = NewCT_SchemeColor()
				if _beeg := d.DecodeElement(_dcfc.SchemeClr, &_aeggf); _beeg != nil {
					return _beeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dcfc.PrstClr = NewCT_PresetColor()
				if _gaga := d.DecodeElement(_dcfc.PrstClr, &_aeggf); _gaga != nil {
					return _gaga
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0053\u006f\u006c\u0069\u0064\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aeggf.Name)
				if _ffagc := d.Skip(); _ffagc != nil {
					return _ffagc
				}
			}
		case _b.EndElement:
			break _eafd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_AlphaBiLevelEffect() *CT_AlphaBiLevelEffect {
	_faca := &CT_AlphaBiLevelEffect{}
	return _faca
}

// ValidateWithPath validates the CT_GvmlGroupShapeNonVisual and its children, prefixing error messages with path
func (_cgbff *CT_GvmlGroupShapeNonVisual) ValidateWithPath(path string) error {
	if _febae := _cgbff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _febae != nil {
		return _febae
	}
	if _gega := _cgbff.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _gega != nil {
		return _gega
	}
	return nil
}
func (_adcbgf ST_TileFlipMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_adcbgf.String(), start)
}

// ValidateWithPath validates the CT_LightRig and its children, prefixing error messages with path
func (_egbc *CT_LightRig) ValidateWithPath(path string) error {
	if _egbc.RigAttr == ST_LightRigTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002fR\u0069\u0067\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbbfb := _egbc.RigAttr.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0041\u0074\u0074\u0072"); _bbbfb != nil {
		return _bbbfb
	}
	if _egbc.DirAttr == ST_LightRigDirectionUnset {
		return _bb.Errorf("\u0025\u0073\u002fD\u0069\u0072\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aacf := _egbc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _aacf != nil {
		return _aacf
	}
	if _egbc.Rot != nil {
		if _bdbc := _egbc.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _bdbc != nil {
			return _bdbc
		}
	}
	return nil
}
func (_efff *CT_CustomColorList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _efff.CustClr != nil {
		_ccbdd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u0075\u0073\u0074\u0043\u006cr"}}
		for _, _adad := range _efff.CustClr {
			e.EncodeElement(_adad, _ccbdd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_daagd ST_FixedPercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _daagd.ST_FixedPercentageDecimal != nil {
		e.EncodeToken(_b.CharData(_bb.Sprintf("\u0025\u0064", *_daagd.ST_FixedPercentageDecimal)))
	}
	if _daagd.ST_FixedPercentage != nil {
		e.Encode(_daagd.ST_FixedPercentage)
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_OfficeArtExtensionList and its children, prefixing error messages with path
func (_fegcc *CT_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _gaeea, _caaf := range _fegcc.Ext {
		if _ecgb := _caaf.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _gaeea)); _ecgb != nil {
			return _ecgb
		}
	}
	return nil
}
func (_bgbba *CT_TextUnderlineFillGroupWrapper) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gaggfg:
	for {
		_adccd, _fgada := d.Token()
		if _fgada != nil {
			return _fgada
		}
		switch _cecbfg := _adccd.(type) {
		case _b.StartElement:
			switch _cecbfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bgbba.NoFill = NewCT_NoFillProperties()
				if _cacbf := d.DecodeElement(_bgbba.NoFill, &_cecbfg); _cacbf != nil {
					return _cacbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bgbba.SolidFill = NewCT_SolidColorFillProperties()
				if _aafgf := d.DecodeElement(_bgbba.SolidFill, &_cecbfg); _aafgf != nil {
					return _aafgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bgbba.GradFill = NewCT_GradientFillProperties()
				if _fbac := d.DecodeElement(_bgbba.GradFill, &_cecbfg); _fbac != nil {
					return _fbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bgbba.BlipFill = NewCT_BlipFillProperties()
				if _gaeg := d.DecodeElement(_bgbba.BlipFill, &_cecbfg); _gaeg != nil {
					return _gaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bgbba.PattFill = NewCT_PatternFillProperties()
				if _cebce := d.DecodeElement(_bgbba.PattFill, &_cecbfg); _cebce != nil {
					return _cebce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bgbba.GrpFill = NewCT_GroupFillProperties()
				if _fcbgd := d.DecodeElement(_bgbba.GrpFill, &_cecbfg); _fcbgd != nil {
					return _fcbgd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0047\u0072o\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065r\u0020\u0025\u0076", _cecbfg.Name)
				if _fddga := d.Skip(); _fddga != nil {
					return _fddga
				}
			}
		case _b.EndElement:
			break _gaggfg
		case _b.CharData:
		}
	}
	return nil
}

type ST_TextFontAlignType byte

// ValidateWithPath validates the CT_EmptyElement and its children, prefixing error messages with path
func (_cfgc *CT_EmptyElement) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TextUnderlineFillFollowText and its children, prefixing error messages with path
func (_bfead *CT_TextUnderlineFillFollowText) ValidateWithPath(path string) error { return nil }

// Validate validates the EG_LineDashProperties and its children
func (_eaeeg *EG_LineDashProperties) Validate() error {
	return _eaeeg.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_bafa *CT_InverseGammaTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bgced, _gadfe := d.Token()
		if _gadfe != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0049nve\u0072se\u0047\u0061\u006d\u006d\u0061\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _gadfe)
		}
		if _ecbda, _cfaeb := _bgced.(_b.EndElement); _cfaeb && _ecbda.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_EmptyElement struct{}

const (
	ST_PresetLineDashValUnset         ST_PresetLineDashVal = 0
	ST_PresetLineDashValSolid         ST_PresetLineDashVal = 1
	ST_PresetLineDashValDot           ST_PresetLineDashVal = 2
	ST_PresetLineDashValDash          ST_PresetLineDashVal = 3
	ST_PresetLineDashValLgDash        ST_PresetLineDashVal = 4
	ST_PresetLineDashValDashDot       ST_PresetLineDashVal = 5
	ST_PresetLineDashValLgDashDot     ST_PresetLineDashVal = 6
	ST_PresetLineDashValLgDashDotDot  ST_PresetLineDashVal = 7
	ST_PresetLineDashValSysDash       ST_PresetLineDashVal = 8
	ST_PresetLineDashValSysDot        ST_PresetLineDashVal = 9
	ST_PresetLineDashValSysDashDot    ST_PresetLineDashVal = 10
	ST_PresetLineDashValSysDashDotDot ST_PresetLineDashVal = 11
)

func (_fcdgc ST_ChartBuildStep) Validate() error { return _fcdgc.ValidateWithPath("") }

type CT_TableStyleTextStyle struct {
	BAttr     ST_OnOffStyleType
	IAttr     ST_OnOffStyleType
	Font      *CT_FontCollection
	FontRef   *CT_FontReference
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
	ExtLst    *CT_OfficeArtExtensionList
}

// Validate validates the CT_OfficeArtExtensionList and its children
func (_gcacbb *CT_OfficeArtExtensionList) Validate() error {
	return _gcacbb.ValidateWithPath("\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

// Validate validates the CT_GvmlConnectorNonVisual and its children
func (_cgfdd *CT_GvmlConnectorNonVisual) Validate() error {
	return _cgfdd.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l")
}
func (_gcfcg *ThemeManager) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0068\u0065\u006d\u0065\u004d\u0061n\u0061\u0067\u0065\u0072"
	return _gcfcg.CT_EmptyElement.MarshalXML(e, start)
}
func ParseUnionST_Coordinate(s string) (ST_Coordinate, error) {
	_ddgcff := ST_Coordinate{}
	if _eb.ST_UniversalMeasurePatternRe.MatchString(s) {
		_ddgcff.ST_UniversalMeasure = &s
	} else {
		_fcbda, _dgcc := _a.ParseInt(s, 10, 64)
		if _dgcc != nil {
			return _ddgcff, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dgcc)
		}
		_ddgcff.ST_CoordinateUnqualified = &_fcbda
	}
	return _ddgcff, nil
}

type CT_DefaultShapeDefinition struct {
	SpPr     *CT_ShapeProperties
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_agaba *CT_TablePropertiesChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgfbc:
	for {
		_fabcc, _fgfabf := d.Token()
		if _fgfabf != nil {
			return _fgfabf
		}
		switch _bgaf := _fabcc.(type) {
		case _b.StartElement:
			switch _bgaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_agaba.TableStyle = NewCT_TableStyle()
				if _ecdgb := d.DecodeElement(_agaba.TableStyle, &_bgaf); _ecdgb != nil {
					return _ecdgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_agaba.TableStyleId = new(string)
				if _cdbfgb := d.DecodeElement(_agaba.TableStyleId, &_bgaf); _cdbfgb != nil {
					return _cdbfgb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _bgaf.Name)
				if _dadca := d.Skip(); _dadca != nil {
					return _dadca
				}
			}
		case _b.EndElement:
			break _cgfbc
		case _b.CharData:
		}
	}
	return nil
}
func (_dfceag *CT_TextParagraphProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddagf := range start.Attr {
		if _ddagf.Name.Local == "\u006d\u0061\u0072\u004c" {
			_gdgae, _abcg := _a.ParseInt(_ddagf.Value, 10, 32)
			if _abcg != nil {
				return _abcg
			}
			_dfacd := int32(_gdgae)
			_dfceag.MarLAttr = &_dfacd
			continue
		}
		if _ddagf.Name.Local == "\u006c\u0076\u006c" {
			_bcbdd, _ececf := _a.ParseInt(_ddagf.Value, 10, 32)
			if _ececf != nil {
				return _ececf
			}
			_bebff := int32(_bcbdd)
			_dfceag.LvlAttr = &_bebff
			continue
		}
		if _ddagf.Name.Local == "\u0061\u006c\u0067\u006e" {
			_dfceag.AlgnAttr.UnmarshalXMLAttr(_ddagf)
			continue
		}
		if _ddagf.Name.Local == "\u0072\u0074\u006c" {
			_caabb, _fdabge := _a.ParseBool(_ddagf.Value)
			if _fdabge != nil {
				return _fdabge
			}
			_dfceag.RtlAttr = &_caabb
			continue
		}
		if _ddagf.Name.Local == "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e" {
			_dfceag.FontAlgnAttr.UnmarshalXMLAttr(_ddagf)
			continue
		}
		if _ddagf.Name.Local == "\u006d\u0061\u0072\u0052" {
			_gdfad, _beegca := _a.ParseInt(_ddagf.Value, 10, 32)
			if _beegca != nil {
				return _beegca
			}
			_fdaea := int32(_gdfad)
			_dfceag.MarRAttr = &_fdaea
			continue
		}
		if _ddagf.Name.Local == "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b" {
			_agbea, _aeeab := _a.ParseBool(_ddagf.Value)
			if _aeeab != nil {
				return _aeeab
			}
			_dfceag.LatinLnBrkAttr = &_agbea
			continue
		}
		if _ddagf.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_faaecc, _fccec := _a.ParseInt(_ddagf.Value, 10, 32)
			if _fccec != nil {
				return _fccec
			}
			_ebcf := int32(_faaecc)
			_dfceag.IndentAttr = &_ebcf
			continue
		}
		if _ddagf.Name.Local == "\u0065a\u004c\u006e\u0042\u0072\u006b" {
			_dfbcdg, _dfbebc := _a.ParseBool(_ddagf.Value)
			if _dfbebc != nil {
				return _dfbebc
			}
			_dfceag.EaLnBrkAttr = &_dfbcdg
			continue
		}
		if _ddagf.Name.Local == "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074" {
			_aegee, _aafdf := _a.ParseBool(_ddagf.Value)
			if _aafdf != nil {
				return _aafdf
			}
			_dfceag.HangingPunctAttr = &_aegee
			continue
		}
		if _ddagf.Name.Local == "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a" {
			_ebbcb, _eeebcd := ParseUnionST_Coordinate32(_ddagf.Value)
			if _eeebcd != nil {
				return _eeebcd
			}
			_dfceag.DefTabSzAttr = &_ebbcb
			continue
		}
	}
_fcbedg:
	for {
		_eeeg, _ggecc := d.Token()
		if _ggecc != nil {
			return _ggecc
		}
		switch _fafgb := _eeeg.(type) {
		case _b.StartElement:
			switch _fafgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}:
				_dfceag.LnSpc = NewCT_TextSpacing()
				if _agbbbb := d.DecodeElement(_dfceag.LnSpc, &_fafgb); _agbbbb != nil {
					return _agbbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}:
				_dfceag.SpcBef = NewCT_TextSpacing()
				if _eeffgg := d.DecodeElement(_dfceag.SpcBef, &_fafgb); _eeffgg != nil {
					return _eeffgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}:
				_dfceag.SpcAft = NewCT_TextSpacing()
				if _ffcbg := d.DecodeElement(_dfceag.SpcAft, &_fafgb); _ffcbg != nil {
					return _ffcbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_dfceag.BuClrTx = NewCT_TextBulletColorFollowText()
				if _cdfgc := d.DecodeElement(_dfceag.BuClrTx, &_fafgb); _cdfgc != nil {
					return _cdfgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_dfceag.BuClr = NewCT_Color()
				if _aedca := d.DecodeElement(_dfceag.BuClr, &_fafgb); _aedca != nil {
					return _aedca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_dfceag.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _dgbdfg := d.DecodeElement(_dfceag.BuSzTx, &_fafgb); _dgbdfg != nil {
					return _dgbdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_dfceag.BuSzPct = NewCT_TextBulletSizePercent()
				if _abbgf := d.DecodeElement(_dfceag.BuSzPct, &_fafgb); _abbgf != nil {
					return _abbgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_dfceag.BuSzPts = NewCT_TextBulletSizePoint()
				if _bcdaab := d.DecodeElement(_dfceag.BuSzPts, &_fafgb); _bcdaab != nil {
					return _bcdaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_dfceag.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _fdddc := d.DecodeElement(_dfceag.BuFontTx, &_fafgb); _fdddc != nil {
					return _fdddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_dfceag.BuFont = NewCT_TextFont()
				if _gbfeb := d.DecodeElement(_dfceag.BuFont, &_fafgb); _gbfeb != nil {
					return _gbfeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_dfceag.BuNone = NewCT_TextNoBullet()
				if _dbgcb := d.DecodeElement(_dfceag.BuNone, &_fafgb); _dbgcb != nil {
					return _dbgcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_dfceag.BuAutoNum = NewCT_TextAutonumberBullet()
				if _fdebbbe := d.DecodeElement(_dfceag.BuAutoNum, &_fafgb); _fdebbbe != nil {
					return _fdebbbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_dfceag.BuChar = NewCT_TextCharBullet()
				if _daagf := d.DecodeElement(_dfceag.BuChar, &_fafgb); _daagf != nil {
					return _daagf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_dfceag.BuBlip = NewCT_TextBlipBullet()
				if _bdefec := d.DecodeElement(_dfceag.BuBlip, &_fafgb); _bdefec != nil {
					return _bdefec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}:
				_dfceag.TabLst = NewCT_TextTabStopList()
				if _ccccfe := d.DecodeElement(_dfceag.TabLst, &_fafgb); _ccccfe != nil {
					return _ccccfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}:
				_dfceag.DefRPr = NewCT_TextCharacterProperties()
				if _defgd := d.DecodeElement(_dfceag.DefRPr, &_fafgb); _defgd != nil {
					return _defgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfceag.ExtLst = NewCT_OfficeArtExtensionList()
				if _cddec := d.DecodeElement(_dfceag.ExtLst, &_fafgb); _cddec != nil {
					return _cddec
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fafgb.Name)
				if _bfebf := d.Skip(); _bfebf != nil {
					return _bfebf
				}
			}
		case _b.EndElement:
			break _fcbedg
		case _b.CharData:
		}
	}
	return nil
}

type ST_BevelPresetType byte

// Validate validates the CT_TableBackgroundStyle and its children
func (_ffdgf *CT_TableBackgroundStyle) Validate() error {
	return _ffdgf.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_HslColor and its children, prefixing error messages with path
func (_gbef *CT_HslColor) ValidateWithPath(path string) error {
	if _gbef.HueAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gbef.HueAttr)
	}
	if _gbef.HueAttr >= 21600000 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gbef.HueAttr)
	}
	if _fefb := _gbef.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _fefb != nil {
		return _fefb
	}
	if _eedae := _gbef.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _eedae != nil {
		return _eedae
	}
	for _cbddb, _afdba := range _gbef.EG_ColorTransform {
		if _cfega := _afdba.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _cbddb)); _cfega != nil {
			return _cfega
		}
	}
	return nil
}
func NewCT_SphereCoords() *CT_SphereCoords {
	_ggefe := &CT_SphereCoords{}
	_ggefe.LatAttr = 0
	_ggefe.LonAttr = 0
	_ggefe.RevAttr = 0
	return _ggefe
}

const (
	ST_TextAutonumberSchemeUnset                 ST_TextAutonumberScheme = 0
	ST_TextAutonumberSchemeAlphaLcParenBoth      ST_TextAutonumberScheme = 1
	ST_TextAutonumberSchemeAlphaUcParenBoth      ST_TextAutonumberScheme = 2
	ST_TextAutonumberSchemeAlphaLcParenR         ST_TextAutonumberScheme = 3
	ST_TextAutonumberSchemeAlphaUcParenR         ST_TextAutonumberScheme = 4
	ST_TextAutonumberSchemeAlphaLcPeriod         ST_TextAutonumberScheme = 5
	ST_TextAutonumberSchemeAlphaUcPeriod         ST_TextAutonumberScheme = 6
	ST_TextAutonumberSchemeArabicParenBoth       ST_TextAutonumberScheme = 7
	ST_TextAutonumberSchemeArabicParenR          ST_TextAutonumberScheme = 8
	ST_TextAutonumberSchemeArabicPeriod          ST_TextAutonumberScheme = 9
	ST_TextAutonumberSchemeArabicPlain           ST_TextAutonumberScheme = 10
	ST_TextAutonumberSchemeRomanLcParenBoth      ST_TextAutonumberScheme = 11
	ST_TextAutonumberSchemeRomanUcParenBoth      ST_TextAutonumberScheme = 12
	ST_TextAutonumberSchemeRomanLcParenR         ST_TextAutonumberScheme = 13
	ST_TextAutonumberSchemeRomanUcParenR         ST_TextAutonumberScheme = 14
	ST_TextAutonumberSchemeRomanLcPeriod         ST_TextAutonumberScheme = 15
	ST_TextAutonumberSchemeRomanUcPeriod         ST_TextAutonumberScheme = 16
	ST_TextAutonumberSchemeCircleNumDbPlain      ST_TextAutonumberScheme = 17
	ST_TextAutonumberSchemeCircleNumWdBlackPlain ST_TextAutonumberScheme = 18
	ST_TextAutonumberSchemeCircleNumWdWhitePlain ST_TextAutonumberScheme = 19
	ST_TextAutonumberSchemeArabicDbPeriod        ST_TextAutonumberScheme = 20
	ST_TextAutonumberSchemeArabicDbPlain         ST_TextAutonumberScheme = 21
	ST_TextAutonumberSchemeEa1ChsPeriod          ST_TextAutonumberScheme = 22
	ST_TextAutonumberSchemeEa1ChsPlain           ST_TextAutonumberScheme = 23
	ST_TextAutonumberSchemeEa1ChtPeriod          ST_TextAutonumberScheme = 24
	ST_TextAutonumberSchemeEa1ChtPlain           ST_TextAutonumberScheme = 25
	ST_TextAutonumberSchemeEa1JpnChsDbPeriod     ST_TextAutonumberScheme = 26
	ST_TextAutonumberSchemeEa1JpnKorPlain        ST_TextAutonumberScheme = 27
	ST_TextAutonumberSchemeEa1JpnKorPeriod       ST_TextAutonumberScheme = 28
	ST_TextAutonumberSchemeArabic1Minus          ST_TextAutonumberScheme = 29
	ST_TextAutonumberSchemeArabic2Minus          ST_TextAutonumberScheme = 30
	ST_TextAutonumberSchemeHebrew2Minus          ST_TextAutonumberScheme = 31
	ST_TextAutonumberSchemeThaiAlphaPeriod       ST_TextAutonumberScheme = 32
	ST_TextAutonumberSchemeThaiAlphaParenR       ST_TextAutonumberScheme = 33
	ST_TextAutonumberSchemeThaiAlphaParenBoth    ST_TextAutonumberScheme = 34
	ST_TextAutonumberSchemeThaiNumPeriod         ST_TextAutonumberScheme = 35
	ST_TextAutonumberSchemeThaiNumParenR         ST_TextAutonumberScheme = 36
	ST_TextAutonumberSchemeThaiNumParenBoth      ST_TextAutonumberScheme = 37
	ST_TextAutonumberSchemeHindiAlphaPeriod      ST_TextAutonumberScheme = 38
	ST_TextAutonumberSchemeHindiNumPeriod        ST_TextAutonumberScheme = 39
	ST_TextAutonumberSchemeHindiNumParenR        ST_TextAutonumberScheme = 40
	ST_TextAutonumberSchemeHindiAlpha1Period     ST_TextAutonumberScheme = 41
)

func (_cfdge *EG_TextBulletColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfdge.BuClrTx != nil {
		_edaef := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_cfdge.BuClrTx, _edaef)
	}
	if _cfdge.BuClr != nil {
		_feaad := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_cfdge.BuClr, _feaad)
	}
	return nil
}
func NewCT_NonVisualDrawingProps() *CT_NonVisualDrawingProps {
	_aead := &CT_NonVisualDrawingProps{}
	return _aead
}

// Validate validates the CT_Shape3D and its children
func (_agbee *CT_Shape3D) Validate() error {
	return _agbee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044")
}
func NewCT_Vector3D() *CT_Vector3D { _abgec := &CT_Vector3D{}; return _abgec }
func (_ebgc ST_PresetMaterialType) ValidateWithPath(path string) error {
	switch _ebgc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebgc))
	}
	return nil
}

type CT_AlphaBiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

func (_ffaab ST_RectAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffaab.String(), start)
}

// Validate validates the CT_ColorMRU and its children
func (_efaa *CT_ColorMRU) Validate() error {
	return _efaa.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055")
}

// ValidateWithPath validates the CT_SolidColorFillProperties and its children, prefixing error messages with path
func (_cgde *CT_SolidColorFillProperties) ValidateWithPath(path string) error {
	if _cgde.ScrgbClr != nil {
		if _ffcga := _cgde.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ffcga != nil {
			return _ffcga
		}
	}
	if _cgde.SrgbClr != nil {
		if _aedfff := _cgde.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _aedfff != nil {
			return _aedfff
		}
	}
	if _cgde.HslClr != nil {
		if _daeea := _cgde.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _daeea != nil {
			return _daeea
		}
	}
	if _cgde.SysClr != nil {
		if _ccegd := _cgde.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ccegd != nil {
			return _ccegd
		}
	}
	if _cgde.SchemeClr != nil {
		if _gefga := _cgde.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gefga != nil {
			return _gefga
		}
	}
	if _cgde.PrstClr != nil {
		if _ddgb := _cgde.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ddgb != nil {
			return _ddgb
		}
	}
	return nil
}
func NewCT_Path2D() *CT_Path2D { _beeae := &CT_Path2D{}; return _beeae }

// Validate validates the CT_GvmlUseShapeRectangle and its children
func (_cabfc *CT_GvmlUseShapeRectangle) Validate() error {
	return _cabfc.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065")
}
func (_egbde ST_TextTabAlignType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gbafc := _b.Attr{}
	_gbafc.Name = name
	switch _egbde {
	case ST_TextTabAlignTypeUnset:
		_gbafc.Value = ""
	case ST_TextTabAlignTypeL:
		_gbafc.Value = "\u006c"
	case ST_TextTabAlignTypeCtr:
		_gbafc.Value = "\u0063\u0074\u0072"
	case ST_TextTabAlignTypeR:
		_gbafc.Value = "\u0072"
	case ST_TextTabAlignTypeDec:
		_gbafc.Value = "\u0064\u0065\u0063"
	}
	return _gbafc, nil
}
func (_adfde *EG_TextGeometry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Name.Local = "\u0061\u003a\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0047\u0065\u006fm\u0065\u0074\u0072\u0079"
	if _adfde.CustGeom != nil {
		_gcdbb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_adfde.CustGeom, _gcdbb)
	}
	if _adfde.PrstTxWarp != nil {
		_gbdgb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_adfde.PrstTxWarp, _gbdgb)
	}
	return nil
}

type CT_NonVisualDrawingProps struct {
	IdAttr     uint32
	NameAttr   string
	DescrAttr  *string
	HiddenAttr *bool
	TitleAttr  *string
	HlinkClick *CT_Hyperlink
	HlinkHover *CT_Hyperlink
	ExtLst     *CT_OfficeArtExtensionList
}

func (_deabf *CT_PositiveFixedPercentage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afcbd := range start.Attr {
		if _afcbd.Name.Local == "\u0076\u0061\u006c" {
			_faaa, _bfggg := ParseUnionST_PositiveFixedPercentage(_afcbd.Value)
			if _bfggg != nil {
				return _bfggg
			}
			_deabf.ValAttr = _faaa
			continue
		}
	}
	for {
		_ecffd, _bcaa := d.Token()
		if _bcaa != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063\u0065\u006et\u0061\u0067e\u003a\u0020\u0025\u0073", _bcaa)
		}
		if _agggd, _gbdec := _ecffd.(_b.EndElement); _gbdec && _agggd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BaseStylesOverride struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
}

// ST_AnimationChartBuildType is a union type
type ST_AnimationChartBuildType struct {
	ST_AnimationBuildType          ST_AnimationBuildType
	ST_AnimationChartOnlyBuildType ST_AnimationChartOnlyBuildType
}

// Validate validates the CT_ContentPartLocking and its children
func (_ebcd *CT_ContentPartLocking) Validate() error {
	return _ebcd.ValidateWithPath("C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_Cell3D and its children, prefixing error messages with path
func (_geegg *CT_Cell3D) ValidateWithPath(path string) error {
	if _edfd := _geegg.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _edfd != nil {
		return _edfd
	}
	if _fcbd := _geegg.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _fcbd != nil {
		return _fcbd
	}
	if _geegg.LightRig != nil {
		if _bbdc := _geegg.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _bbdc != nil {
			return _bbdc
		}
	}
	if _geegg.ExtLst != nil {
		if _fgccd := _geegg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgccd != nil {
			return _fgccd
		}
	}
	return nil
}
func (_ecgfa ST_LightRigDirection) ValidateWithPath(path string) error {
	switch _ecgfa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecgfa))
	}
	return nil
}

// ValidateWithPath validates the CT_PositivePercentage and its children, prefixing error messages with path
func (_deag *CT_PositivePercentage) ValidateWithPath(path string) error {
	if _ddca := _deag.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ddca != nil {
		return _ddca
	}
	return nil
}
func (_fgbb *CT_OfficeStyleSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgbb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_fgbb.NameAttr)})
	}
	e.EncodeToken(start)
	_gfgcb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_fgbb.ThemeElements, _gfgcb)
	if _fgbb.ObjectDefaults != nil {
		_fdfde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003ao\u0062\u006a\u0065c\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"}}
		e.EncodeElement(_fgbb.ObjectDefaults, _fdfde)
	}
	if _fgbb.ExtraClrSchemeLst != nil {
		_fcfa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078tr\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_fgbb.ExtraClrSchemeLst, _fcfa)
	}
	if _fgbb.CustClrLst != nil {
		_fgcd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063u\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}}
		e.EncodeElement(_fgbb.CustClrLst, _fgcd)
	}
	if _fgbb.ExtLst != nil {
		_dggfe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgbb.ExtLst, _dggfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_afccc *CT_InnerShadowEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afccc.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_afccc.BlurRadAttr)})
	}
	if _afccc.DistAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_afccc.DistAttr)})
	}
	if _afccc.DirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_afccc.DirAttr)})
	}
	e.EncodeToken(start)
	if _afccc.ScrgbClr != nil {
		_afbg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_afccc.ScrgbClr, _afbg)
	}
	if _afccc.SrgbClr != nil {
		_adeac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_afccc.SrgbClr, _adeac)
	}
	if _afccc.HslClr != nil {
		_bddfdd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_afccc.HslClr, _bddfdd)
	}
	if _afccc.SysClr != nil {
		_febab := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_afccc.SysClr, _febab)
	}
	if _afccc.SchemeClr != nil {
		_dffg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_afccc.SchemeClr, _dffg)
	}
	if _afccc.PrstClr != nil {
		_ecafb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_afccc.PrstClr, _ecafb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GeomRect and its children, prefixing error messages with path
func (_dfdb *CT_GeomRect) ValidateWithPath(path string) error {
	if _gaaa := _dfdb.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _gaaa != nil {
		return _gaaa
	}
	if _eefab := _dfdb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _eefab != nil {
		return _eefab
	}
	if _eegc := _dfdb.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _eegc != nil {
		return _eegc
	}
	if _faae := _dfdb.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _faae != nil {
		return _faae
	}
	return nil
}

const (
	ST_PresetCameraTypeUnset                               ST_PresetCameraType = 0
	ST_PresetCameraTypeLegacyObliqueTopLeft                ST_PresetCameraType = 1
	ST_PresetCameraTypeLegacyObliqueTop                    ST_PresetCameraType = 2
	ST_PresetCameraTypeLegacyObliqueTopRight               ST_PresetCameraType = 3
	ST_PresetCameraTypeLegacyObliqueLeft                   ST_PresetCameraType = 4
	ST_PresetCameraTypeLegacyObliqueFront                  ST_PresetCameraType = 5
	ST_PresetCameraTypeLegacyObliqueRight                  ST_PresetCameraType = 6
	ST_PresetCameraTypeLegacyObliqueBottomLeft             ST_PresetCameraType = 7
	ST_PresetCameraTypeLegacyObliqueBottom                 ST_PresetCameraType = 8
	ST_PresetCameraTypeLegacyObliqueBottomRight            ST_PresetCameraType = 9
	ST_PresetCameraTypeLegacyPerspectiveTopLeft            ST_PresetCameraType = 10
	ST_PresetCameraTypeLegacyPerspectiveTop                ST_PresetCameraType = 11
	ST_PresetCameraTypeLegacyPerspectiveTopRight           ST_PresetCameraType = 12
	ST_PresetCameraTypeLegacyPerspectiveLeft               ST_PresetCameraType = 13
	ST_PresetCameraTypeLegacyPerspectiveFront              ST_PresetCameraType = 14
	ST_PresetCameraTypeLegacyPerspectiveRight              ST_PresetCameraType = 15
	ST_PresetCameraTypeLegacyPerspectiveBottomLeft         ST_PresetCameraType = 16
	ST_PresetCameraTypeLegacyPerspectiveBottom             ST_PresetCameraType = 17
	ST_PresetCameraTypeLegacyPerspectiveBottomRight        ST_PresetCameraType = 18
	ST_PresetCameraTypeOrthographicFront                   ST_PresetCameraType = 19
	ST_PresetCameraTypeIsometricTopUp                      ST_PresetCameraType = 20
	ST_PresetCameraTypeIsometricTopDown                    ST_PresetCameraType = 21
	ST_PresetCameraTypeIsometricBottomUp                   ST_PresetCameraType = 22
	ST_PresetCameraTypeIsometricBottomDown                 ST_PresetCameraType = 23
	ST_PresetCameraTypeIsometricLeftUp                     ST_PresetCameraType = 24
	ST_PresetCameraTypeIsometricLeftDown                   ST_PresetCameraType = 25
	ST_PresetCameraTypeIsometricRightUp                    ST_PresetCameraType = 26
	ST_PresetCameraTypeIsometricRightDown                  ST_PresetCameraType = 27
	ST_PresetCameraTypeIsometricOffAxis1Left               ST_PresetCameraType = 28
	ST_PresetCameraTypeIsometricOffAxis1Right              ST_PresetCameraType = 29
	ST_PresetCameraTypeIsometricOffAxis1Top                ST_PresetCameraType = 30
	ST_PresetCameraTypeIsometricOffAxis2Left               ST_PresetCameraType = 31
	ST_PresetCameraTypeIsometricOffAxis2Right              ST_PresetCameraType = 32
	ST_PresetCameraTypeIsometricOffAxis2Top                ST_PresetCameraType = 33
	ST_PresetCameraTypeIsometricOffAxis3Left               ST_PresetCameraType = 34
	ST_PresetCameraTypeIsometricOffAxis3Right              ST_PresetCameraType = 35
	ST_PresetCameraTypeIsometricOffAxis3Bottom             ST_PresetCameraType = 36
	ST_PresetCameraTypeIsometricOffAxis4Left               ST_PresetCameraType = 37
	ST_PresetCameraTypeIsometricOffAxis4Right              ST_PresetCameraType = 38
	ST_PresetCameraTypeIsometricOffAxis4Bottom             ST_PresetCameraType = 39
	ST_PresetCameraTypeObliqueTopLeft                      ST_PresetCameraType = 40
	ST_PresetCameraTypeObliqueTop                          ST_PresetCameraType = 41
	ST_PresetCameraTypeObliqueTopRight                     ST_PresetCameraType = 42
	ST_PresetCameraTypeObliqueLeft                         ST_PresetCameraType = 43
	ST_PresetCameraTypeObliqueRight                        ST_PresetCameraType = 44
	ST_PresetCameraTypeObliqueBottomLeft                   ST_PresetCameraType = 45
	ST_PresetCameraTypeObliqueBottom                       ST_PresetCameraType = 46
	ST_PresetCameraTypeObliqueBottomRight                  ST_PresetCameraType = 47
	ST_PresetCameraTypePerspectiveFront                    ST_PresetCameraType = 48
	ST_PresetCameraTypePerspectiveLeft                     ST_PresetCameraType = 49
	ST_PresetCameraTypePerspectiveRight                    ST_PresetCameraType = 50
	ST_PresetCameraTypePerspectiveAbove                    ST_PresetCameraType = 51
	ST_PresetCameraTypePerspectiveBelow                    ST_PresetCameraType = 52
	ST_PresetCameraTypePerspectiveAboveLeftFacing          ST_PresetCameraType = 53
	ST_PresetCameraTypePerspectiveAboveRightFacing         ST_PresetCameraType = 54
	ST_PresetCameraTypePerspectiveContrastingLeftFacing    ST_PresetCameraType = 55
	ST_PresetCameraTypePerspectiveContrastingRightFacing   ST_PresetCameraType = 56
	ST_PresetCameraTypePerspectiveHeroicLeftFacing         ST_PresetCameraType = 57
	ST_PresetCameraTypePerspectiveHeroicRightFacing        ST_PresetCameraType = 58
	ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing  ST_PresetCameraType = 59
	ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing ST_PresetCameraType = 60
	ST_PresetCameraTypePerspectiveRelaxed                  ST_PresetCameraType = 61
	ST_PresetCameraTypePerspectiveRelaxedModerately        ST_PresetCameraType = 62
)

// ValidateWithPath validates the CT_AlphaModulateFixedEffect and its children, prefixing error messages with path
func (_ffea *CT_AlphaModulateFixedEffect) ValidateWithPath(path string) error {
	if _ffea.AmtAttr != nil {
		if _cbaa := _ffea.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _cbaa != nil {
			return _cbaa
		}
	}
	return nil
}
func NewCT_DashStop() *CT_DashStop { _gbca := &CT_DashStop{}; return _gbca }

// Validate validates the CT_RelativeRect and its children
func (_cebb *CT_RelativeRect) Validate() error {
	return _cebb.ValidateWithPath("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074")
}
func (_deebc *CT_RegularTextRun) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffabc:
	for {
		_baae, _ddaga := d.Token()
		if _ddaga != nil {
			return _ddaga
		}
		switch _cgbac := _baae.(type) {
		case _b.StartElement:
			switch _cgbac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_deebc.RPr = NewCT_TextCharacterProperties()
				if _eged := d.DecodeElement(_deebc.RPr, &_cgbac); _eged != nil {
					return _eged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _ccdcf := d.DecodeElement(&_deebc.T, &_cgbac); _ccdcf != nil {
					return _ccdcf
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _cgbac.Name)
				if _daece := d.Skip(); _daece != nil {
					return _daece
				}
			}
		case _b.EndElement:
			break _ffabc
		case _b.CharData:
		}
	}
	return nil
}
func (_deecec ST_AnimationDgmOnlyBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_deecec.String(), start)
}
func (_agcea *ST_LineEndWidth) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdeded, _affc := d.Token()
	if _affc != nil {
		return _affc
	}
	if _bfaag, _abbcc := _cdeded.(_b.EndElement); _abbcc && _bfaag.Name == start.Name {
		*_agcea = 1
		return nil
	}
	if _dabgd, _bgggd := _cdeded.(_b.CharData); !_bgggd {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdeded)
	} else {
		switch string(_dabgd) {
		case "":
			*_agcea = 0
		case "\u0073\u006d":
			*_agcea = 1
		case "\u006d\u0065\u0064":
			*_agcea = 2
		case "\u006c\u0067":
			*_agcea = 3
		}
	}
	_cdeded, _affc = d.Token()
	if _affc != nil {
		return _affc
	}
	if _dgbbc, _fgcgfe := _cdeded.(_b.EndElement); _fgcgfe && _dgbbc.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdeded)
}

type ST_LineEndLength byte

func (_gbddgd *ST_ChartBuildStep) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gbddgd = 0
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_gbddgd = 1
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_gbddgd = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_gbddgd = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_gbddgd = 4
	case "\u0061\u006c\u006c\u0050\u0074\u0073":
		*_gbddgd = 5
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_gbddgd = 6
	}
	return nil
}

// Validate validates the CT_EffectStyleList and its children
func (_cadbb *CT_EffectStyleList) Validate() error {
	return _cadbb.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074")
}

// Validate validates the EG_TextBulletColor and its children
func (_cbade *EG_TextBulletColor) Validate() error {
	return _cbade.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_Blip and its children, prefixing error messages with path
func (_ecc *CT_Blip) ValidateWithPath(path string) error {
	if _aagd := _ecc.CstateAttr.ValidateWithPath(path + "/\u0043\u0073\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _aagd != nil {
		return _aagd
	}
	for _ddc, _fgbe := range _ecc.Choice {
		if _beef := _fgbe.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _ddc)); _beef != nil {
			return _beef
		}
	}
	if _ecc.ExtLst != nil {
		if _ddcb := _ecc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddcb != nil {
			return _ddcb
		}
	}
	return nil
}
func (_ecegf ST_AnimationDgmOnlyBuildType) String() string {
	switch _ecegf {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e\u0065"
	case 2:
		return "\u006c\u0076\u006c\u004f\u006e\u0065"
	case 3:
		return "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}
func (_bbce *CT_BlurEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecaa := range start.Attr {
		if _ecaa.Name.Local == "\u0072\u0061\u0064" {
			_fbbdc, _caacg := _a.ParseInt(_ecaa.Value, 10, 64)
			if _caacg != nil {
				return _caacg
			}
			_bbce.RadAttr = &_fbbdc
			continue
		}
		if _ecaa.Name.Local == "\u0067\u0072\u006f\u0077" {
			_efcef, _bgdc := _a.ParseBool(_ecaa.Value)
			if _bgdc != nil {
				return _bgdc
			}
			_bbce.GrowAttr = &_efcef
			continue
		}
	}
	for {
		_efad, _fbga := d.Token()
		if _fbga != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0042l\u0075r\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _fbga)
		}
		if _gfdd, _bfab := _efad.(_b.EndElement); _bfab && _gfdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcaf *CT_EffectStyleItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_acebf:
	for {
		_ddgc, _fdeee := d.Token()
		if _fdeee != nil {
			return _fdeee
		}
		switch _gcec := _ddgc.(type) {
		case _b.StartElement:
			switch _gcec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fcaf.EffectLst = NewCT_EffectList()
				if _dgdce := d.DecodeElement(_fcaf.EffectLst, &_gcec); _dgdce != nil {
					return _dgdce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fcaf.EffectDag = NewCT_EffectContainer()
				if _dgdgb := d.DecodeElement(_fcaf.EffectDag, &_gcec); _dgdgb != nil {
					return _dgdgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_fcaf.Scene3d = NewCT_Scene3D()
				if _cfff := d.DecodeElement(_fcaf.Scene3d, &_gcec); _cfff != nil {
					return _cfff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_fcaf.Sp3d = NewCT_Shape3D()
				if _dbaa := d.DecodeElement(_fcaf.Sp3d, &_gcec); _dbaa != nil {
					return _dbaa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _gcec.Name)
				if _eedgg := d.Skip(); _eedgg != nil {
					return _eedgg
				}
			}
		case _b.EndElement:
			break _acebf
		case _b.CharData:
		}
	}
	return nil
}
func (_fedf *CT_NoFillProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_ddffb, _ffcdf := d.Token()
		if _ffcdf != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u004e\u006f\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _ffcdf)
		}
		if _baaga, _ebfd := _ddffb.(_b.EndElement); _ebfd && _baaga.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_Text3D and its children
func (_addgc *EG_Text3D) Validate() error {
	return _addgc.ValidateWithPath("\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D")
}

type CT_EffectStyleItem struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
	Scene3d   *CT_Scene3D
	Sp3d      *CT_Shape3D
}

func (_ceca *CT_GvmlUseShapeRectangle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcfge *CT_ThemeableLineStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dcfge.Ln != nil {
		_efecdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_dcfge.Ln, _efecdb)
	}
	if _dcfge.LnRef != nil {
		_eafeb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
		e.EncodeElement(_dcfge.LnRef, _eafeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdecc *CT_FlatText) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdecc.ZAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_fdecc.ZAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffcgb *CT_PresetShadowEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffcgb.PrstAttr = ST_PresetShadowVal(1)
	for _, _agdg := range start.Attr {
		if _agdg.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ffcgb.PrstAttr.UnmarshalXMLAttr(_agdg)
			continue
		}
		if _agdg.Name.Local == "\u0064\u0069\u0073\u0074" {
			_ecacaf, _bdacb := _a.ParseInt(_agdg.Value, 10, 64)
			if _bdacb != nil {
				return _bdacb
			}
			_ffcgb.DistAttr = &_ecacaf
			continue
		}
		if _agdg.Name.Local == "\u0064\u0069\u0072" {
			_gaeag, _gaag := _a.ParseInt(_agdg.Value, 10, 32)
			if _gaag != nil {
				return _gaag
			}
			_agdca := int32(_gaeag)
			_ffcgb.DirAttr = &_agdca
			continue
		}
	}
_cada:
	for {
		_gdfaf, _gfbb := d.Token()
		if _gfbb != nil {
			return _gfbb
		}
		switch _baff := _gdfaf.(type) {
		case _b.StartElement:
			switch _baff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ffcgb.ScrgbClr = NewCT_ScRgbColor()
				if _dcdea := d.DecodeElement(_ffcgb.ScrgbClr, &_baff); _dcdea != nil {
					return _dcdea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ffcgb.SrgbClr = NewCT_SRgbColor()
				if _fffc := d.DecodeElement(_ffcgb.SrgbClr, &_baff); _fffc != nil {
					return _fffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ffcgb.HslClr = NewCT_HslColor()
				if _abdcf := d.DecodeElement(_ffcgb.HslClr, &_baff); _abdcf != nil {
					return _abdcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ffcgb.SysClr = NewCT_SystemColor()
				if _fdeca := d.DecodeElement(_ffcgb.SysClr, &_baff); _fdeca != nil {
					return _fdeca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ffcgb.SchemeClr = NewCT_SchemeColor()
				if _adee := d.DecodeElement(_ffcgb.SchemeClr, &_baff); _adee != nil {
					return _adee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ffcgb.PrstClr = NewCT_PresetColor()
				if _fcgdg := d.DecodeElement(_ffcgb.PrstClr, &_baff); _fcgdg != nil {
					return _fcgdg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _baff.Name)
				if _dbcg := d.Skip(); _dbcg != nil {
					return _dbcg
				}
			}
		case _b.EndElement:
			break _cada
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FontReference and its children
func (_ebbba *CT_FontReference) Validate() error {
	return _ebbba.ValidateWithPath("\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}
func NewCT_AlphaInverseEffect() *CT_AlphaInverseEffect { _ebe := &CT_AlphaInverseEffect{}; return _ebe }
func (_cfad *CT_GvmlPicture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ggagf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_cfad.NvPicPr, _ggagf)
	_gege := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_cfad.BlipFill, _gege)
	_baecde := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cfad.SpPr, _baecde)
	if _cfad.Style != nil {
		_bgabdb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cfad.Style, _bgabdb)
	}
	if _cfad.ExtLst != nil {
		_cdcb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfad.ExtLst, _cdcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eacga *CT_SchemeColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eacga.ValAttr = ST_SchemeColorVal(1)
	for _, _bcdgg := range start.Attr {
		if _bcdgg.Name.Local == "\u0076\u0061\u006c" {
			_eacga.ValAttr.UnmarshalXMLAttr(_bcdgg)
			continue
		}
	}
_gabbe:
	for {
		_dcgcg, _eega := d.Token()
		if _eega != nil {
			return _eega
		}
		switch _aeacda := _dcgcg.(type) {
		case _b.StartElement:
			switch _aeacda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gfdab := NewEG_ColorTransform()
				_gfdab.Tint = NewCT_PositiveFixedPercentage()
				if _cfbfc := d.DecodeElement(_gfdab.Tint, &_aeacda); _cfbfc != nil {
					return _cfbfc
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _gfdab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_bcfgbb := NewEG_ColorTransform()
				_bcfgbb.Shade = NewCT_PositiveFixedPercentage()
				if _gafa := d.DecodeElement(_bcfgbb.Shade, &_aeacda); _gafa != nil {
					return _gafa
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _bcfgbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gfdge := NewEG_ColorTransform()
				_gfdge.Comp = NewCT_ComplementTransform()
				if _fbeff := d.DecodeElement(_gfdge.Comp, &_aeacda); _fbeff != nil {
					return _fbeff
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _gfdge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_aegaaa := NewEG_ColorTransform()
				_aegaaa.Inv = NewCT_InverseTransform()
				if _cebbc := d.DecodeElement(_aegaaa.Inv, &_aeacda); _cebbc != nil {
					return _cebbc
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _aegaaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_bbefd := NewEG_ColorTransform()
				_bbefd.Gray = NewCT_GrayscaleTransform()
				if _bdced := d.DecodeElement(_bbefd.Gray, &_aeacda); _bdced != nil {
					return _bdced
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _bbefd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_eefad := NewEG_ColorTransform()
				_eefad.Alpha = NewCT_PositiveFixedPercentage()
				if _baac := d.DecodeElement(_eefad.Alpha, &_aeacda); _baac != nil {
					return _baac
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _eefad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_egbcg := NewEG_ColorTransform()
				_egbcg.AlphaOff = NewCT_FixedPercentage()
				if _gddf := d.DecodeElement(_egbcg.AlphaOff, &_aeacda); _gddf != nil {
					return _gddf
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _egbcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_febafa := NewEG_ColorTransform()
				_febafa.AlphaMod = NewCT_PositivePercentage()
				if _cgefg := d.DecodeElement(_febafa.AlphaMod, &_aeacda); _cgefg != nil {
					return _cgefg
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _febafa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_dcadd := NewEG_ColorTransform()
				_dcadd.Hue = NewCT_PositiveFixedAngle()
				if _dceee := d.DecodeElement(_dcadd.Hue, &_aeacda); _dceee != nil {
					return _dceee
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _dcadd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_caded := NewEG_ColorTransform()
				_caded.HueOff = NewCT_Angle()
				if _cbggg := d.DecodeElement(_caded.HueOff, &_aeacda); _cbggg != nil {
					return _cbggg
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _caded)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_fgbdg := NewEG_ColorTransform()
				_fgbdg.HueMod = NewCT_PositivePercentage()
				if _acdag := d.DecodeElement(_fgbdg.HueMod, &_aeacda); _acdag != nil {
					return _acdag
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _fgbdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_ebgbg := NewEG_ColorTransform()
				_ebgbg.Sat = NewCT_Percentage()
				if _cfaba := d.DecodeElement(_ebgbg.Sat, &_aeacda); _cfaba != nil {
					return _cfaba
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _ebgbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_addfa := NewEG_ColorTransform()
				_addfa.SatOff = NewCT_Percentage()
				if _accba := d.DecodeElement(_addfa.SatOff, &_aeacda); _accba != nil {
					return _accba
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _addfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_abafa := NewEG_ColorTransform()
				_abafa.SatMod = NewCT_Percentage()
				if _cbda := d.DecodeElement(_abafa.SatMod, &_aeacda); _cbda != nil {
					return _cbda
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _abafa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fdacc := NewEG_ColorTransform()
				_fdacc.Lum = NewCT_Percentage()
				if _becag := d.DecodeElement(_fdacc.Lum, &_aeacda); _becag != nil {
					return _becag
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _fdacc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_gadgb := NewEG_ColorTransform()
				_gadgb.LumOff = NewCT_Percentage()
				if _bfdfe := d.DecodeElement(_gadgb.LumOff, &_aeacda); _bfdfe != nil {
					return _bfdfe
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _gadgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_adaf := NewEG_ColorTransform()
				_adaf.LumMod = NewCT_Percentage()
				if _gfgfeb := d.DecodeElement(_adaf.LumMod, &_aeacda); _gfgfeb != nil {
					return _gfgfeb
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _adaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_dfedd := NewEG_ColorTransform()
				_dfedd.Red = NewCT_Percentage()
				if _edaff := d.DecodeElement(_dfedd.Red, &_aeacda); _edaff != nil {
					return _edaff
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _dfedd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_edcg := NewEG_ColorTransform()
				_edcg.RedOff = NewCT_Percentage()
				if _gbfdfd := d.DecodeElement(_edcg.RedOff, &_aeacda); _gbfdfd != nil {
					return _gbfdfd
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _edcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_dbfef := NewEG_ColorTransform()
				_dbfef.RedMod = NewCT_Percentage()
				if _ddbd := d.DecodeElement(_dbfef.RedMod, &_aeacda); _ddbd != nil {
					return _ddbd
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _dbfef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_bacee := NewEG_ColorTransform()
				_bacee.Green = NewCT_Percentage()
				if _fadg := d.DecodeElement(_bacee.Green, &_aeacda); _fadg != nil {
					return _fadg
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _bacee)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_aggd := NewEG_ColorTransform()
				_aggd.GreenOff = NewCT_Percentage()
				if _abegf := d.DecodeElement(_aggd.GreenOff, &_aeacda); _abegf != nil {
					return _abegf
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _aggd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_cgag := NewEG_ColorTransform()
				_cgag.GreenMod = NewCT_Percentage()
				if _ggadag := d.DecodeElement(_cgag.GreenMod, &_aeacda); _ggadag != nil {
					return _ggadag
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _cgag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_gdddg := NewEG_ColorTransform()
				_gdddg.Blue = NewCT_Percentage()
				if _feedg := d.DecodeElement(_gdddg.Blue, &_aeacda); _feedg != nil {
					return _feedg
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _gdddg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_eacff := NewEG_ColorTransform()
				_eacff.BlueOff = NewCT_Percentage()
				if _ffeaa := d.DecodeElement(_eacff.BlueOff, &_aeacda); _ffeaa != nil {
					return _ffeaa
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _eacff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_afdbf := NewEG_ColorTransform()
				_afdbf.BlueMod = NewCT_Percentage()
				if _ecafa := d.DecodeElement(_afdbf.BlueMod, &_aeacda); _ecafa != nil {
					return _ecafa
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _afdbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_fagff := NewEG_ColorTransform()
				_fagff.Gamma = NewCT_GammaTransform()
				if _gdaba := d.DecodeElement(_fagff.Gamma, &_aeacda); _gdaba != nil {
					return _gdaba
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _fagff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_gbaf := NewEG_ColorTransform()
				_gbaf.InvGamma = NewCT_InverseGammaTransform()
				if _cgffg := d.DecodeElement(_gbaf.InvGamma, &_aeacda); _cgffg != nil {
					return _cgffg
				}
				_eacga.EG_ColorTransform = append(_eacga.EG_ColorTransform, _gbaf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065\u0043o\u006co\u0072\u0020\u0025\u0076", _aeacda.Name)
				if _fdfe := d.Skip(); _fdfe != nil {
					return _fdfe
				}
			}
		case _b.EndElement:
			break _gabbe
		case _b.CharData:
		}
	}
	return nil
}
func (_aafaf *CT_TextNoBullet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fddff ST_TextCapsType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fddff.String(), start)
}
func (_gbddad ST_TileFlipMode) Validate() error { return _gbddad.ValidateWithPath("") }
func (_ffbe *CT_RelativeRect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffbe.LAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _bb.Sprintf("\u0025\u0076", *_ffbe.LAttr)})
	}
	if _ffbe.TAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_ffbe.TAttr)})
	}
	if _ffbe.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_ffbe.RAttr)})
	}
	if _ffbe.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0076", *_ffbe.BAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfffgg ST_TextStrikeType) ValidateWithPath(path string) error {
	switch _gfffgg {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfffgg))
	}
	return nil
}

type CT_ConnectorLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_dbdf *CT_BackgroundFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ged:
	for {
		_egg, _aece := d.Token()
		if _aece != nil {
			return _aece
		}
		switch _aga := _egg.(type) {
		case _b.StartElement:
			switch _aga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dbdf.NoFill = NewCT_NoFillProperties()
				if _ffg := d.DecodeElement(_dbdf.NoFill, &_aga); _ffg != nil {
					return _ffg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dbdf.SolidFill = NewCT_SolidColorFillProperties()
				if _bcg := d.DecodeElement(_dbdf.SolidFill, &_aga); _bcg != nil {
					return _bcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dbdf.GradFill = NewCT_GradientFillProperties()
				if _afe := d.DecodeElement(_dbdf.GradFill, &_aga); _afe != nil {
					return _afe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_dbdf.BlipFill = NewCT_BlipFillProperties()
				if _bddf := d.DecodeElement(_dbdf.BlipFill, &_aga); _bddf != nil {
					return _bddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dbdf.PattFill = NewCT_PatternFillProperties()
				if _bda := d.DecodeElement(_dbdf.PattFill, &_aga); _bda != nil {
					return _bda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_dbdf.GrpFill = NewCT_GroupFillProperties()
				if _ebb := d.DecodeElement(_dbdf.GrpFill, &_aga); _ebb != nil {
					return _ebb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dbdf.EffectLst = NewCT_EffectList()
				if _cdca := d.DecodeElement(_dbdf.EffectLst, &_aga); _cdca != nil {
					return _cdca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dbdf.EffectDag = NewCT_EffectContainer()
				if _dcea := d.DecodeElement(_dbdf.EffectDag, &_aga); _dcea != nil {
					return _dcea
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0046\u006f\u0072\u006d\u0061\u0074t\u0069\u006e\u0067 \u0025\u0076", _aga.Name)
				if _agad := d.Skip(); _agad != nil {
					return _agad
				}
			}
		case _b.EndElement:
			break _ged
		case _b.CharData:
		}
	}
	return nil
}

type CT_PositiveSize2D struct {
	CxAttr int64
	CyAttr int64
}
type CT_GroupShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_GroupTransform2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	ExtLst     *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_TintEffect and its children, prefixing error messages with path
func (_cadfg *CT_TintEffect) ValidateWithPath(path string) error {
	if _cadfg.HueAttr != nil {
		if *_cadfg.HueAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cadfg.HueAttr)
		}
		if *_cadfg.HueAttr >= 21600000 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cadfg.HueAttr)
		}
	}
	if _cadfg.AmtAttr != nil {
		if _gdgaea := _cadfg.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _gdgaea != nil {
			return _gdgaea
		}
	}
	return nil
}
func (_facd *CT_ColorSchemeAndMapping) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_aagg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_facd.ClrScheme, _aagg)
	if _facd.ClrMap != nil {
		_cgdae := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
		e.EncodeElement(_facd.ClrMap, _cgdae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aabdg *CT_PresetLineDashProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gabb := range start.Attr {
		if _gabb.Name.Local == "\u0076\u0061\u006c" {
			_aabdg.ValAttr.UnmarshalXMLAttr(_gabb)
			continue
		}
	}
	for {
		_fcca, _cfagd := d.Token()
		if _cfagd != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0072e\u0073\u0065\u0074\u004c\u0069\u006ee\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _cfagd)
		}
		if _ddbba, _becdf := _fcca.(_b.EndElement); _becdf && _ddbba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bedd *CT_TextTabStopList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bedd.Tab != nil {
		_cfcbc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074a\u0062"}}
		for _, _bgfga := range _bedd.Tab {
			e.EncodeElement(_bgfga, _cfcbc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextTabStopList and its children, prefixing error messages with path
func (_eaeda *CT_TextTabStopList) ValidateWithPath(path string) error {
	for _egbcaa, _aeeb := range _eaeda.Tab {
		if _fbffca := _aeeb.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u005b\u0025\u0064\u005d", path, _egbcaa)); _fbffca != nil {
			return _fbffca
		}
	}
	return nil
}

// Validate validates the CT_InverseTransform and its children
func (_aecb *CT_InverseTransform) Validate() error {
	return _aecb.ValidateWithPath("\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

type ST_SchemeColorVal byte

func (_dgca *CT_TextSpacingPercent) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcacbe := range start.Attr {
		if _gcacbe.Name.Local == "\u0076\u0061\u006c" {
			_ebgac, _ggafc := ParseUnionST_TextSpacingPercentOrPercentString(_gcacbe.Value)
			if _ggafc != nil {
				return _ggafc
			}
			_dgca.ValAttr = _ebgac
			continue
		}
	}
	for {
		_aeeed, _fcfd := d.Token()
		if _fcfd != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061\u0063\u0069n\u0067\u0050\u0065\u0072\u0063\u0065\u006et\u003a\u0020\u0025\u0073", _fcfd)
		}
		if _agfbc, _cdafa := _aeeed.(_b.EndElement); _cdafa && _agfbc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomGeometry2D and its children, prefixing error messages with path
func (_bfca *CT_CustomGeometry2D) ValidateWithPath(path string) error {
	if _bfca.AvLst != nil {
		if _eeadb := _bfca.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _eeadb != nil {
			return _eeadb
		}
	}
	if _bfca.GdLst != nil {
		if _ecab := _bfca.GdLst.ValidateWithPath(path + "\u002f\u0047\u0064\u004c\u0073\u0074"); _ecab != nil {
			return _ecab
		}
	}
	if _bfca.AhLst != nil {
		if _bgce := _bfca.AhLst.ValidateWithPath(path + "\u002f\u0041\u0068\u004c\u0073\u0074"); _bgce != nil {
			return _bgce
		}
	}
	if _bfca.CxnLst != nil {
		if _febfa := _bfca.CxnLst.ValidateWithPath(path + "\u002fC\u0078\u006e\u004c\u0073\u0074"); _febfa != nil {
			return _febfa
		}
	}
	if _bfca.Rect != nil {
		if _abbg := _bfca.Rect.ValidateWithPath(path + "\u002f\u0052\u0065c\u0074"); _abbg != nil {
			return _abbg
		}
	}
	if _adbg := _bfca.PathLst.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u004c\u0073\u0074"); _adbg != nil {
		return _adbg
	}
	return nil
}
func NewCT_Hyperlink() *CT_Hyperlink { _bdfa := &CT_Hyperlink{}; return _bdfa }

// Validate validates the CT_CustomColor and its children
func (_bebb *CT_CustomColor) Validate() error {
	return _bebb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072")
}
func (_dgab *CT_EffectContainer) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgab.TypeAttr != ST_EffectContainerTypeUnset {
		_eadc, _ffda := _dgab.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ffda != nil {
			return _ffda
		}
		start.Attr = append(start.Attr, _eadc)
	}
	if _dgab.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", *_dgab.NameAttr)})
	}
	e.EncodeToken(start)
	if _dgab.Cont != nil {
		_eeeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_dgab.Cont, _eeeb)
	}
	if _dgab.Effect != nil {
		_gfdbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_dgab.Effect, _gfdbe)
	}
	if _dgab.AlphaBiLevel != nil {
		_cgef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_dgab.AlphaBiLevel, _cgef)
	}
	if _dgab.AlphaCeiling != nil {
		_ggag := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_dgab.AlphaCeiling, _ggag)
	}
	if _dgab.AlphaFloor != nil {
		_bfgcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_dgab.AlphaFloor, _bfgcc)
	}
	if _dgab.AlphaInv != nil {
		_faef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_dgab.AlphaInv, _faef)
	}
	if _dgab.AlphaMod != nil {
		_fefd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_dgab.AlphaMod, _fefd)
	}
	if _dgab.AlphaModFix != nil {
		_dfeg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_dgab.AlphaModFix, _dfeg)
	}
	if _dgab.AlphaOutset != nil {
		_bege := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_dgab.AlphaOutset, _bege)
	}
	if _dgab.AlphaRepl != nil {
		_eegd := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_dgab.AlphaRepl, _eegd)
	}
	if _dgab.BiLevel != nil {
		_efea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_dgab.BiLevel, _efea)
	}
	if _dgab.Blend != nil {
		_cffe := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_dgab.Blend, _cffe)
	}
	if _dgab.Blur != nil {
		_cede := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_dgab.Blur, _cede)
	}
	if _dgab.ClrChange != nil {
		_abba := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_dgab.ClrChange, _abba)
	}
	if _dgab.ClrRepl != nil {
		_dfca := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_dgab.ClrRepl, _dfca)
	}
	if _dgab.Duotone != nil {
		_aacc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_dgab.Duotone, _aacc)
	}
	if _dgab.Fill != nil {
		_cfgba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_dgab.Fill, _cfgba)
	}
	if _dgab.FillOverlay != nil {
		_bbbb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_dgab.FillOverlay, _bbbb)
	}
	if _dgab.Glow != nil {
		_cdba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_dgab.Glow, _cdba)
	}
	if _dgab.Grayscl != nil {
		_edbd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_dgab.Grayscl, _edbd)
	}
	if _dgab.Hsl != nil {
		_fbdca := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_dgab.Hsl, _fbdca)
	}
	if _dgab.InnerShdw != nil {
		_bdebb := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_dgab.InnerShdw, _bdebb)
	}
	if _dgab.Lum != nil {
		_gacb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_dgab.Lum, _gacb)
	}
	if _dgab.OuterShdw != nil {
		_beab := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_dgab.OuterShdw, _beab)
	}
	if _dgab.PrstShdw != nil {
		_begf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_dgab.PrstShdw, _begf)
	}
	if _dgab.Reflection != nil {
		_gfdc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dgab.Reflection, _gfdc)
	}
	if _dgab.RelOff != nil {
		_afaa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_dgab.RelOff, _afaa)
	}
	if _dgab.SoftEdge != nil {
		_fbfbb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_dgab.SoftEdge, _fbfbb)
	}
	if _dgab.Tint != nil {
		_gdbee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_dgab.Tint, _gdbee)
	}
	if _dgab.Xfrm != nil {
		_bfeac := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_dgab.Xfrm, _bfeac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TextUnderlineLineFollowText struct{}
type ST_TextAutonumberScheme byte

func (_cbbce ST_AnimationDgmOnlyBuildType) ValidateWithPath(path string) error {
	switch _cbbce {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbbce))
	}
	return nil
}
func (_cea *CT_AlphaModulateEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_beda := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_cea.Cont, _beda)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextBulletColorFollowText() *CT_TextBulletColorFollowText {
	_edbggb := &CT_TextBulletColorFollowText{}
	return _edbggb
}

// Validate validates the CT_ShapeStyle and its children
func (_eaeg *CT_ShapeStyle) Validate() error {
	return _eaeg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065")
}
func NewCT_GvmlGraphicalObjectFrame() *CT_GvmlGraphicalObjectFrame {
	_edcecd := &CT_GvmlGraphicalObjectFrame{}
	_edcecd.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_edcecd.Graphic = NewGraphic()
	_edcecd.Xfrm = NewCT_Transform2D()
	return _edcecd
}

type CT_GraphicalObject struct{ GraphicData *CT_GraphicalObjectData }

func (_fafab *CT_InnerShadowEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecbaa := range start.Attr {
		if _ecbaa.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_daaf, _gadg := _a.ParseInt(_ecbaa.Value, 10, 64)
			if _gadg != nil {
				return _gadg
			}
			_fafab.BlurRadAttr = &_daaf
			continue
		}
		if _ecbaa.Name.Local == "\u0064\u0069\u0073\u0074" {
			_bedgc, _edgbb := _a.ParseInt(_ecbaa.Value, 10, 64)
			if _edgbb != nil {
				return _edgbb
			}
			_fafab.DistAttr = &_bedgc
			continue
		}
		if _ecbaa.Name.Local == "\u0064\u0069\u0072" {
			_efgea, _ffac := _a.ParseInt(_ecbaa.Value, 10, 32)
			if _ffac != nil {
				return _ffac
			}
			_caffc := int32(_efgea)
			_fafab.DirAttr = &_caffc
			continue
		}
	}
_daadd:
	for {
		_feaff, _gcbc := d.Token()
		if _gcbc != nil {
			return _gcbc
		}
		switch _bbffd := _feaff.(type) {
		case _b.StartElement:
			switch _bbffd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_fafab.ScrgbClr = NewCT_ScRgbColor()
				if _acfd := d.DecodeElement(_fafab.ScrgbClr, &_bbffd); _acfd != nil {
					return _acfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fafab.SrgbClr = NewCT_SRgbColor()
				if _ddged := d.DecodeElement(_fafab.SrgbClr, &_bbffd); _ddged != nil {
					return _ddged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_fafab.HslClr = NewCT_HslColor()
				if _gfdf := d.DecodeElement(_fafab.HslClr, &_bbffd); _gfdf != nil {
					return _gfdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_fafab.SysClr = NewCT_SystemColor()
				if _ddaec := d.DecodeElement(_fafab.SysClr, &_bbffd); _ddaec != nil {
					return _ddaec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fafab.SchemeClr = NewCT_SchemeColor()
				if _fbabf := d.DecodeElement(_fafab.SchemeClr, &_bbffd); _fbabf != nil {
					return _fbabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_fafab.PrstClr = NewCT_PresetColor()
				if _aeafa := d.DecodeElement(_fafab.PrstClr, &_bbffd); _aeafa != nil {
					return _aeafa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _bbffd.Name)
				if _bedce := d.Skip(); _bedce != nil {
					return _bedce
				}
			}
		case _b.EndElement:
			break _daadd
		case _b.CharData:
		}
	}
	return nil
}

type CT_ContentPartLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func NewCT_AnimationDgmBuildProperties() *CT_AnimationDgmBuildProperties {
	_acf := &CT_AnimationDgmBuildProperties{}
	return _acf
}

type ST_TextHorzOverflowType byte

func (_fggdf *Tbl) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fggdf.CT_Table = *NewCT_Table()
_agde:
	for {
		_dgdaf, _caead := d.Token()
		if _caead != nil {
			return _caead
		}
		switch _bcfdge := _dgdaf.(type) {
		case _b.StartElement:
			switch _bcfdge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_fggdf.TblPr = NewCT_TableProperties()
				if _egddc := d.DecodeElement(_fggdf.TblPr, &_bcfdge); _egddc != nil {
					return _egddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _fgadf := d.DecodeElement(_fggdf.TblGrid, &_bcfdge); _fgadf != nil {
					return _fgadf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_aegdb := NewCT_TableRow()
				if _ecfa := d.DecodeElement(_aegdb, &_bcfdge); _ecfa != nil {
					return _ecfa
				}
				_fggdf.Tr = append(_fggdf.Tr, _aegdb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0054b\u006c\u0020\u0025\u0076", _bcfdge.Name)
				if _cbef := d.Skip(); _cbef != nil {
					return _cbef
				}
			}
		case _b.EndElement:
			break _agde
		case _b.CharData:
		}
	}
	return nil
}
func (_gcfcc ST_ColorSchemeIndex) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gcfcc.String(), start)
}

// Validate validates the CT_TextField and its children
func (_facfe *CT_TextField) Validate() error {
	return _facfe.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}
func NewCT_GvmlGroupShapeNonVisual() *CT_GvmlGroupShapeNonVisual {
	_caee := &CT_GvmlGroupShapeNonVisual{}
	_caee.CNvPr = NewCT_NonVisualDrawingProps()
	_caee.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
	return _caee
}

type CT_ShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_Transform2D
	CustGeom   *CT_CustomGeometry2D
	PrstGeom   *CT_PresetGeometry2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	Ln         *CT_LineProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	Sp3d       *CT_Shape3D
	ExtLst     *CT_OfficeArtExtensionList
}

func (_fbfgfd ST_LightRigDirection) Validate() error { return _fbfgfd.ValidateWithPath("") }
func NewCT_TextBlipBullet() *CT_TextBlipBullet {
	_caeag := &CT_TextBlipBullet{}
	_caeag.Blip = NewCT_Blip()
	return _caeag
}

// ValidateWithPath validates the EG_TextBulletSize and its children, prefixing error messages with path
func (_fefcg *EG_TextBulletSize) ValidateWithPath(path string) error {
	if _fefcg.BuSzTx != nil {
		if _decdb := _fefcg.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _decdb != nil {
			return _decdb
		}
	}
	if _fefcg.BuSzPct != nil {
		if _cfbdaa := _fefcg.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _cfbdaa != nil {
			return _cfbdaa
		}
	}
	if _fefcg.BuSzPts != nil {
		if _dacba := _fefcg.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _dacba != nil {
			return _dacba
		}
	}
	return nil
}
func NewCT_NonVisualConnectorProperties() *CT_NonVisualConnectorProperties {
	_ceadb := &CT_NonVisualConnectorProperties{}
	return _ceadb
}
func (_gfad ST_PenAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgedda := _b.Attr{}
	_cgedda.Name = name
	switch _gfad {
	case ST_PenAlignmentUnset:
		_cgedda.Value = ""
	case ST_PenAlignmentCtr:
		_cgedda.Value = "\u0063\u0074\u0072"
	case ST_PenAlignmentIn:
		_cgedda.Value = "\u0069\u006e"
	}
	return _cgedda, nil
}
func (_faab *CT_EffectProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _faab.EffectLst != nil {
		_aged := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faab.EffectLst, _aged)
	}
	if _faab.EffectDag != nil {
		_egaca := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_faab.EffectDag, _egaca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TablePropertiesChoice() *CT_TablePropertiesChoice {
	_bdaff := &CT_TablePropertiesChoice{}
	return _bdaff
}
func (_fcdgee ST_OnOffStyleType) Validate() error { return _fcdgee.ValidateWithPath("") }

// ValidateWithPath validates the CT_TextShapeAutofit and its children, prefixing error messages with path
func (_ecgdc *CT_TextShapeAutofit) ValidateWithPath(path string) error { return nil }
func NewCT_SupplementalFont() *CT_SupplementalFont                     { _acdcg := &CT_SupplementalFont{}; return _acdcg }

// ValidateWithPath validates the CT_DashStopList and its children, prefixing error messages with path
func (_bfedf *CT_DashStopList) ValidateWithPath(path string) error {
	for _dagab, _ccbe := range _bfedf.Ds {
		if _acee := _ccbe.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0044\u0073\u005b\u0025\u0064]", path, _dagab)); _acee != nil {
			return _acee
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomColor and its children, prefixing error messages with path
func (_bcce *CT_CustomColor) ValidateWithPath(path string) error {
	if _bcce.ScrgbClr != nil {
		if _cbdgg := _bcce.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cbdgg != nil {
			return _cbdgg
		}
	}
	if _bcce.SrgbClr != nil {
		if _fgbd := _bcce.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fgbd != nil {
			return _fgbd
		}
	}
	if _bcce.HslClr != nil {
		if _daddb := _bcce.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _daddb != nil {
			return _daddb
		}
	}
	if _bcce.SysClr != nil {
		if _ecbc := _bcce.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ecbc != nil {
			return _ecbc
		}
	}
	if _bcce.SchemeClr != nil {
		if _bdgd := _bcce.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bdgd != nil {
			return _bdgd
		}
	}
	if _bcce.PrstClr != nil {
		if _ceef := _bcce.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ceef != nil {
			return _ceef
		}
	}
	return nil
}

const (
	ST_BlipCompressionUnset   ST_BlipCompression = 0
	ST_BlipCompressionEmail   ST_BlipCompression = 1
	ST_BlipCompressionScreen  ST_BlipCompression = 2
	ST_BlipCompressionPrint   ST_BlipCompression = 3
	ST_BlipCompressionHqprint ST_BlipCompression = 4
	ST_BlipCompressionNone    ST_BlipCompression = 5
)

func (_dadgf ST_OnOffStyleType) String() string {
	switch _dadgf {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u0064\u0065\u0066"
	}
	return ""
}
func NewCT_ConnectorLocking() *CT_ConnectorLocking { _fafa := &CT_ConnectorLocking{}; return _fafa }
func NewCT_Camera() *CT_Camera {
	_aaac := &CT_Camera{}
	_aaac.PrstAttr = ST_PresetCameraType(1)
	return _aaac
}

const (
	ST_AnimationChartOnlyBuildTypeUnset      ST_AnimationChartOnlyBuildType = 0
	ST_AnimationChartOnlyBuildTypeSeries     ST_AnimationChartOnlyBuildType = 1
	ST_AnimationChartOnlyBuildTypeCategory   ST_AnimationChartOnlyBuildType = 2
	ST_AnimationChartOnlyBuildTypeSeriesEl   ST_AnimationChartOnlyBuildType = 3
	ST_AnimationChartOnlyBuildTypeCategoryEl ST_AnimationChartOnlyBuildType = 4
)

func (_baea *CT_NonVisualContentPartProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baea.IsCommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_baea.IsCommentAttr))})
	}
	e.EncodeToken(start)
	if _baea.CpLocks != nil {
		_gdbdc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_baea.CpLocks, _gdbdc)
	}
	if _baea.ExtLst != nil {
		_dbbe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_baea.ExtLst, _dbbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_geaf *CT_AudioCD) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_geaf.St = NewCT_AudioCDTime()
	_geaf.End = NewCT_AudioCDTime()
_acd:
	for {
		_abcb, _agdf := d.Token()
		if _agdf != nil {
			return _agdf
		}
		switch _edad := _abcb.(type) {
		case _b.StartElement:
			switch _edad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}:
				if _cdc := d.DecodeElement(_geaf.St, &_edad); _cdc != nil {
					return _cdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				if _aafde := d.DecodeElement(_geaf.End, &_edad); _aafde != nil {
					return _aafde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geaf.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebaa := d.DecodeElement(_geaf.ExtLst, &_edad); _ebaa != nil {
					return _ebaa
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0020\u0025\u0076", _edad.Name)
				if _cbe := d.Skip(); _cbe != nil {
					return _cbe
				}
			}
		case _b.EndElement:
			break _acd
		case _b.CharData:
		}
	}
	return nil
}
func (_bgcge ST_LineEndType) ValidateWithPath(path string) error {
	switch _bgcge {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgcge))
	}
	return nil
}
func (_gaddd ST_LightRigType) ValidateWithPath(path string) error {
	switch _gaddd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaddd))
	}
	return nil
}
func (_ddabb ST_TextUnderlineType) ValidateWithPath(path string) error {
	switch _ddabb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddabb))
	}
	return nil
}

// Validate validates the CT_TextAutonumberBullet and its children
func (_beedg *CT_TextAutonumberBullet) Validate() error {
	return _beedg.ValidateWithPath("\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074")
}
func (_effgf *CT_LineProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _effgf.WAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077"}, Value: _bb.Sprintf("\u0025\u0076", *_effgf.WAttr)})
	}
	if _effgf.CapAttr != ST_LineCapUnset {
		_bdcg, _cagbgc := _effgf.CapAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u0070"})
		if _cagbgc != nil {
			return _cagbgc
		}
		start.Attr = append(start.Attr, _bdcg)
	}
	if _effgf.CmpdAttr != ST_CompoundLineUnset {
		_dfgcc, _fggabd := _effgf.CmpdAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u006d\u0070\u0064"})
		if _fggabd != nil {
			return _fggabd
		}
		start.Attr = append(start.Attr, _dfgcc)
	}
	if _effgf.AlgnAttr != ST_PenAlignmentUnset {
		_cfgda, _abgcc := _effgf.AlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _abgcc != nil {
			return _abgcc
		}
		start.Attr = append(start.Attr, _cfgda)
	}
	e.EncodeToken(start)
	if _effgf.NoFill != nil {
		_dgdcbf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_effgf.NoFill, _dgdcbf)
	}
	if _effgf.SolidFill != nil {
		_fbcee := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_effgf.SolidFill, _fbcee)
	}
	if _effgf.GradFill != nil {
		_fdfd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_effgf.GradFill, _fdfd)
	}
	if _effgf.PattFill != nil {
		_aaae := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_effgf.PattFill, _aaae)
	}
	if _effgf.PrstDash != nil {
		_acce := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_effgf.PrstDash, _acce)
	}
	if _effgf.CustDash != nil {
		_gffa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_effgf.CustDash, _gffa)
	}
	if _effgf.Round != nil {
		_abfdb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_effgf.Round, _abfdb)
	}
	if _effgf.Bevel != nil {
		_fgca := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_effgf.Bevel, _fgca)
	}
	if _effgf.Miter != nil {
		_acdc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_effgf.Miter, _acdc)
	}
	if _effgf.HeadEnd != nil {
		_ddefb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0045\u006ed"}}
		e.EncodeElement(_effgf.HeadEnd, _ddefb)
	}
	if _effgf.TailEnd != nil {
		_ccecb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0061\u0069\u006c\u0045\u006ed"}}
		e.EncodeElement(_effgf.TailEnd, _ccecb)
	}
	if _effgf.ExtLst != nil {
		_bccg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_effgf.ExtLst, _bccg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AlphaCeilingEffect and its children, prefixing error messages with path
func (_bce *CT_AlphaCeilingEffect) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TablePartStyle and its children
func (_effgff *CT_TablePartStyle) Validate() error {
	return _effgff.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065")
}
func NewCT_AlphaReplaceEffect() *CT_AlphaReplaceEffect {
	_degg := &CT_AlphaReplaceEffect{}
	return _degg
}

// ValidateWithPath validates the CT_FillEffect and its children, prefixing error messages with path
func (_eecg *CT_FillEffect) ValidateWithPath(path string) error {
	if _eecg.NoFill != nil {
		if _edbf := _eecg.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _edbf != nil {
			return _edbf
		}
	}
	if _eecg.SolidFill != nil {
		if _efbb := _eecg.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _efbb != nil {
			return _efbb
		}
	}
	if _eecg.GradFill != nil {
		if _gfbda := _eecg.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _gfbda != nil {
			return _gfbda
		}
	}
	if _eecg.BlipFill != nil {
		if _fbbc := _eecg.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fbbc != nil {
			return _fbbc
		}
	}
	if _eecg.PattFill != nil {
		if _ccfcb := _eecg.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _ccfcb != nil {
			return _ccfcb
		}
	}
	if _eecg.GrpFill != nil {
		if _gfgd := _eecg.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gfgd != nil {
			return _gfgd
		}
	}
	return nil
}
func (_acacb *ST_TextHorzOverflowType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acacb = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_acacb = 1
	case "\u0063\u006c\u0069\u0070":
		*_acacb = 2
	}
	return nil
}
func (_ecdag *ST_TextWrappingType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ecdag = 0
	case "\u006e\u006f\u006e\u0065":
		*_ecdag = 1
	case "\u0073\u0071\u0075\u0061\u0072\u0065":
		*_ecdag = 2
	}
	return nil
}
func (_beabf *CT_TextLineBreak) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _beabf.RPr != nil {
		_eeebc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_beabf.RPr, _eeebc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GvmlPicture and its children, prefixing error messages with path
func (_cegc *CT_GvmlPicture) ValidateWithPath(path string) error {
	if _cggfb := _cegc.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _cggfb != nil {
		return _cggfb
	}
	if _cggd := _cegc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cggd != nil {
		return _cggd
	}
	if _febge := _cegc.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _febge != nil {
		return _febge
	}
	if _cegc.Style != nil {
		if _ddagg := _cegc.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ddagg != nil {
			return _ddagg
		}
	}
	if _cegc.ExtLst != nil {
		if _bcabc := _cegc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcabc != nil {
			return _bcabc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Scale2D and its children, prefixing error messages with path
func (_cefd *CT_Scale2D) ValidateWithPath(path string) error {
	if _fbebc := _cefd.Sx.ValidateWithPath(path + "\u002f\u0053\u0078"); _fbebc != nil {
		return _fbebc
	}
	if _cgcdc := _cefd.Sy.ValidateWithPath(path + "\u002f\u0053\u0079"); _cgcdc != nil {
		return _cgcdc
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGraphicalObjectFrame and its children, prefixing error messages with path
func (_fdedd *CT_GvmlGraphicalObjectFrame) ValidateWithPath(path string) error {
	if _dbgaaa := _fdedd.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _dbgaaa != nil {
		return _dbgaaa
	}
	if _geccb := _fdedd.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _geccb != nil {
		return _geccb
	}
	if _bbgfa := _fdedd.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _bbgfa != nil {
		return _bbgfa
	}
	if _fdedd.ExtLst != nil {
		if _bddfc := _fdedd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bddfc != nil {
			return _bddfc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextLineBreak and its children, prefixing error messages with path
func (_bgdfa *CT_TextLineBreak) ValidateWithPath(path string) error {
	if _bgdfa.RPr != nil {
		if _fbead := _bgdfa.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _fbead != nil {
			return _fbead
		}
	}
	return nil
}
func (_dcgf *CT_ContentPartLocking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febf := range start.Attr {
		if _febf.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_egfc, _bfcd := _a.ParseBool(_febf.Value)
			if _bfcd != nil {
				return _bfcd
			}
			_dcgf.NoGrpAttr = &_egfc
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_fdgc, _gbbb := _a.ParseBool(_febf.Value)
			if _gbbb != nil {
				return _gbbb
			}
			_dcgf.NoSelectAttr = &_fdgc
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_aeaac, _eedg := _a.ParseBool(_febf.Value)
			if _eedg != nil {
				return _eedg
			}
			_dcgf.NoRotAttr = &_aeaac
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gcdfd, _baec := _a.ParseBool(_febf.Value)
			if _baec != nil {
				return _baec
			}
			_dcgf.NoChangeAspectAttr = &_gcdfd
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_dceae, _abde := _a.ParseBool(_febf.Value)
			if _abde != nil {
				return _abde
			}
			_dcgf.NoMoveAttr = &_dceae
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_eddc, _cecb := _a.ParseBool(_febf.Value)
			if _cecb != nil {
				return _cecb
			}
			_dcgf.NoResizeAttr = &_eddc
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_ggbb, _bfgf := _a.ParseBool(_febf.Value)
			if _bfgf != nil {
				return _bfgf
			}
			_dcgf.NoEditPointsAttr = &_ggbb
			continue
		}
		if _febf.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_eefb, _afggeg := _a.ParseBool(_febf.Value)
			if _afggeg != nil {
				return _afggeg
			}
			_dcgf.NoAdjustHandlesAttr = &_eefb
			continue
		}
		if _febf.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_efed, _febd := _a.ParseBool(_febf.Value)
			if _febd != nil {
				return _febd
			}
			_dcgf.NoChangeArrowheadsAttr = &_efed
			continue
		}
		if _febf.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_bfdfb, _bdaa := _a.ParseBool(_febf.Value)
			if _bdaa != nil {
				return _bdaa
			}
			_dcgf.NoChangeShapeTypeAttr = &_bfdfb
			continue
		}
	}
_baeg:
	for {
		_dfcb, _acda := d.Token()
		if _acda != nil {
			return _acda
		}
		switch _cbdbc := _dfcb.(type) {
		case _b.StartElement:
			switch _cbdbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcgf.ExtLst = NewCT_OfficeArtExtensionList()
				if _aeaad := d.DecodeElement(_dcgf.ExtLst, &_cbdbc); _aeaad != nil {
					return _aeaad
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _cbdbc.Name)
				if _ccbd := d.Skip(); _ccbd != nil {
					return _ccbd
				}
			}
		case _b.EndElement:
			break _baeg
		case _b.CharData:
		}
	}
	return nil
}
func NewVideoFile() *VideoFile {
	_aacbd := &VideoFile{}
	_aacbd.CT_VideoFile = *NewCT_VideoFile()
	return _aacbd
}
func (_ebbdc ST_AnimationChartOnlyBuildType) Validate() error { return _ebbdc.ValidateWithPath("") }
func (_fdbgb *CT_Shape3D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgbce := range start.Attr {
		if _bgbce.Name.Local == "\u007a" {
			_aedfe, _baedg := ParseUnionST_Coordinate(_bgbce.Value)
			if _baedg != nil {
				return _baedg
			}
			_fdbgb.ZAttr = &_aedfe
			continue
		}
		if _bgbce.Name.Local == "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048" {
			_dggad, _caabc := _a.ParseInt(_bgbce.Value, 10, 64)
			if _caabc != nil {
				return _caabc
			}
			_fdbgb.ExtrusionHAttr = &_dggad
			continue
		}
		if _bgbce.Name.Local == "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057" {
			_gfccd, _abbfb := _a.ParseInt(_bgbce.Value, 10, 64)
			if _abbfb != nil {
				return _abbfb
			}
			_fdbgb.ContourWAttr = &_gfccd
			continue
		}
		if _bgbce.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_fdbgb.PrstMaterialAttr.UnmarshalXMLAttr(_bgbce)
			continue
		}
	}
_adgb:
	for {
		_dabb, _abcf := d.Token()
		if _abcf != nil {
			return _abcf
		}
		switch _fccab := _dabb.(type) {
		case _b.StartElement:
			switch _fccab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}:
				_fdbgb.BevelT = NewCT_Bevel()
				if _fecbdb := d.DecodeElement(_fdbgb.BevelT, &_fccab); _fecbdb != nil {
					return _fecbdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}:
				_fdbgb.BevelB = NewCT_Bevel()
				if _gdcd := d.DecodeElement(_fdbgb.BevelB, &_fccab); _gdcd != nil {
					return _gdcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}:
				_fdbgb.ExtrusionClr = NewCT_Color()
				if _dggfc := d.DecodeElement(_fdbgb.ExtrusionClr, &_fccab); _dggfc != nil {
					return _dggfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}:
				_fdbgb.ContourClr = NewCT_Color()
				if _ffffde := d.DecodeElement(_fdbgb.ContourClr, &_fccab); _ffffde != nil {
					return _ffffde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdbgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _fafeg := d.DecodeElement(_fdbgb.ExtLst, &_fccab); _fafeg != nil {
					return _fafeg
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0061\u0070\u0065\u0033\u0044\u0020\u0025\u0076", _fccab.Name)
				if _edff := d.Skip(); _edff != nil {
					return _edff
				}
			}
		case _b.EndElement:
			break _adgb
		case _b.CharData:
		}
	}
	return nil
}
func (_aacdc *CT_XYAdjustHandle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aacdc.GdRefXAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0058"}, Value: _bb.Sprintf("\u0025\u0076", *_aacdc.GdRefXAttr)})
	}
	if _aacdc.MinXAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0058"}, Value: _bb.Sprintf("\u0025\u0076", *_aacdc.MinXAttr)})
	}
	if _aacdc.MaxXAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0058"}, Value: _bb.Sprintf("\u0025\u0076", *_aacdc.MaxXAttr)})
	}
	if _aacdc.GdRefYAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0059"}, Value: _bb.Sprintf("\u0025\u0076", *_aacdc.GdRefYAttr)})
	}
	if _aacdc.MinYAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0059"}, Value: _bb.Sprintf("\u0025\u0076", *_aacdc.MinYAttr)})
	}
	if _aacdc.MaxYAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0059"}, Value: _bb.Sprintf("\u0025\u0076", *_aacdc.MaxYAttr)})
	}
	e.EncodeToken(start)
	_bfacb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_aacdc.Pos, _bfacb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgfcdc *ST_PositiveFixedPercentage) ValidateWithPath(path string) error {
	_badag := []string{}
	if _cgfcdc.ST_PositiveFixedPercentageDecimal != nil {
		_badag = append(_badag, "\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063e\u006e\u0074\u0061\u0067\u0065\u0044\u0065c\u0069\u006d\u0061\u006c")
	}
	if _cgfcdc.ST_PositiveFixedPercentage != nil {
		if _cgegc := _cgfcdc.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _cgegc != nil {
			return _cgegc
		}
		_badag = append(_badag, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if len(_badag) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _badag)
	}
	return nil
}

type ST_DgmBuildStep byte

func NewCT_Path2DMoveTo() *CT_Path2DMoveTo {
	_ccbdde := &CT_Path2DMoveTo{}
	_ccbdde.Pt = NewCT_AdjPoint2D()
	return _ccbdde
}
func (_cggdf ST_ColorSchemeIndex) Validate() error { return _cggdf.ValidateWithPath("") }

// ValidateWithPath validates the CT_TextBulletColorFollowText and its children, prefixing error messages with path
func (_edeff *CT_TextBulletColorFollowText) ValidateWithPath(path string) error { return nil }

type CT_InverseTransform struct{}
type CT_Boolean struct{ ValAttr *_eb.ST_OnOff }

func (_ggef *CT_OfficeArtExtension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _bb.Sprintf("\u0025\u0076", _ggef.UriAttr)})
	e.EncodeToken(start)
	if _ggef.Any != nil {
		for _, _edaf := range _ggef.Any {
			_edaf.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abede ST_PositiveFixedPercentage) String() string {
	if _abede.ST_PositiveFixedPercentageDecimal != nil {
		return _bb.Sprintf("\u0025\u0076", *_abede.ST_PositiveFixedPercentageDecimal)
	}
	if _abede.ST_PositiveFixedPercentage != nil {
		return _abede.ST_PositiveFixedPercentage.String()
	}
	return ""
}

// ValidateWithPath validates the CT_ColorSchemeAndMapping and its children, prefixing error messages with path
func (_bfef *CT_ColorSchemeAndMapping) ValidateWithPath(path string) error {
	if _ceee := _bfef.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _ceee != nil {
		return _ceee
	}
	if _bfef.ClrMap != nil {
		if _ecbgc := _bfef.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _ecbgc != nil {
			return _ecbgc
		}
	}
	return nil
}

// Validate validates the CT_Path2DList and its children
func (_cbga *CT_Path2DList) Validate() error {
	return _cbga.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074")
}
func (_ecgc *CT_ColorScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _ecgc.NameAttr)})
	e.EncodeToken(start)
	_gefe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0064k\u0031"}}
	e.EncodeElement(_ecgc.Dk1, _gefe)
	_gcfg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006ct\u0031"}}
	e.EncodeElement(_ecgc.Lt1, _gcfg)
	_feea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0064k\u0032"}}
	e.EncodeElement(_ecgc.Dk2, _feea)
	_egad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006ct\u0032"}}
	e.EncodeElement(_ecgc.Lt2, _egad)
	_bfaee := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00741"}}
	e.EncodeElement(_ecgc.Accent1, _bfaee)
	_ebdf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00742"}}
	e.EncodeElement(_ecgc.Accent2, _ebdf)
	_cage := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00743"}}
	e.EncodeElement(_ecgc.Accent3, _cage)
	_bcdgf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00744"}}
	e.EncodeElement(_ecgc.Accent4, _bcdgf)
	_dgcd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00745"}}
	e.EncodeElement(_ecgc.Accent5, _dgcd)
	_bfdf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00746"}}
	e.EncodeElement(_ecgc.Accent6, _bfdf)
	_gfca := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0068\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_ecgc.Hlink, _gfca)
	_ddd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_ecgc.FolHlink, _ddd)
	if _ecgc.ExtLst != nil {
		_eggg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgc.ExtLst, _eggg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfbfa *EG_ThemeableFillStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfbfa.Fill != nil {
		_gbcf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_bfbfa.Fill, _gbcf)
	}
	if _bfbfa.FillRef != nil {
		_ddeffa := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_bfbfa.FillRef, _ddeffa)
	}
	return nil
}
func (_gegdc ST_SystemColorVal) String() string {
	switch _gegdc {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case 2:
		return "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case 3:
		return "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 5:
		return "\u006d\u0065\u006e\u0075"
	case 6:
		return "\u0077\u0069\u006e\u0064\u006f\u0077"
	case 7:
		return "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case 8:
		return "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case 9:
		return "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case 10:
		return "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case 12:
		return "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case 13:
		return "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case 14:
		return "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case 15:
		return "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case 16:
		return "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case 17:
		return "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case 18:
		return "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case 19:
		return "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case 20:
		return "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 21:
		return "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 22:
		return "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case 23:
		return "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case 24:
		return "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case 25:
		return "\u0069\u006e\u0066\u006f\u0042\u006b"
	case 26:
		return "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case 27:
		return "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case 28:
		return "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 29:
		return "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 30:
		return "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return ""
}

// ValidateWithPath validates the Blip and its children, prefixing error messages with path
func (_bga *Blip) ValidateWithPath(path string) error {
	if _bggg := _bga.CT_Blip.ValidateWithPath(path); _bggg != nil {
		return _bggg
	}
	return nil
}

// Validate validates the CT_AlphaModulateEffect and its children
func (_bfa *CT_AlphaModulateEffect) Validate() error {
	return _bfa.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074")
}

type CT_PatternFillProperties struct {
	PrstAttr ST_PresetPatternVal
	FgClr    *CT_Color
	BgClr    *CT_Color
}
type CT_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

// ValidateWithPath validates the CT_GvmlConnectorNonVisual and its children, prefixing error messages with path
func (_gagg *CT_GvmlConnectorNonVisual) ValidateWithPath(path string) error {
	if _dbcd := _gagg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dbcd != nil {
		return _dbcd
	}
	if _dcdb := _gagg.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _dcdb != nil {
		return _dcdb
	}
	return nil
}

// ValidateWithPath validates the CT_Angle and its children, prefixing error messages with path
func (_fcbc *CT_Angle) ValidateWithPath(path string) error { return nil }

type ST_CompoundLine byte

// ValidateWithPath validates the CT_TextBulletSizeFollowText and its children, prefixing error messages with path
func (_ccbegf *CT_TextBulletSizeFollowText) ValidateWithPath(path string) error { return nil }
func (_fdefe *ST_DgmBuildStep) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fdefe = 0
	case "\u0073\u0070":
		*_fdefe = 1
	case "\u0062\u0067":
		*_fdefe = 2
	}
	return nil
}
func (_ccfcff *EG_TextBulletColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_abdgef:
	for {
		_bdaec, _ggcef := d.Token()
		if _ggcef != nil {
			return _ggcef
		}
		switch _eeeca := _bdaec.(type) {
		case _b.StartElement:
			switch _eeeca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_ccfcff.BuClrTx = NewCT_TextBulletColorFollowText()
				if _aeaea := d.DecodeElement(_ccfcff.BuClrTx, &_eeeca); _aeaea != nil {
					return _aeaea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_ccfcff.BuClr = NewCT_Color()
				if _fabcb := d.DecodeElement(_ccfcff.BuClr, &_eeeca); _fabcb != nil {
					return _fabcb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075l\u006c\u0065\u0074\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _eeeca.Name)
				if _dfcd := d.Skip(); _dfcd != nil {
					return _dfcd
				}
			}
		case _b.EndElement:
			break _abdgef
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_AdjustHandleList() *CT_AdjustHandleList { _ecb := &CT_AdjustHandleList{}; return _ecb }
func (_bdca *CT_ShapeStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdca.LnRef = NewCT_StyleMatrixReference()
	_bdca.FillRef = NewCT_StyleMatrixReference()
	_bdca.EffectRef = NewCT_StyleMatrixReference()
	_bdca.FontRef = NewCT_FontReference()
_gfgdfd:
	for {
		_aaca, _gbebb := d.Token()
		if _gbebb != nil {
			return _gbebb
		}
		switch _afadd := _aaca.(type) {
		case _b.StartElement:
			switch _afadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				if _cacga := d.DecodeElement(_bdca.LnRef, &_afadd); _cacga != nil {
					return _cacga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				if _bfaeg := d.DecodeElement(_bdca.FillRef, &_afadd); _bfaeg != nil {
					return _bfaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				if _feafd := d.DecodeElement(_bdca.EffectRef, &_afadd); _feafd != nil {
					return _feafd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				if _bafg := d.DecodeElement(_bdca.FontRef, &_afadd); _bafg != nil {
					return _bafg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _afadd.Name)
				if _dbafe := d.Skip(); _dbafe != nil {
					return _dbafe
				}
			}
		case _b.EndElement:
			break _gfgdfd
		case _b.CharData:
		}
	}
	return nil
}
func (_fafc *CT_DefaultShapeDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fafc.SpPr = NewCT_ShapeProperties()
	_fafc.BodyPr = NewCT_TextBodyProperties()
	_fafc.LstStyle = NewCT_TextListStyle()
_eddg:
	for {
		_eaf, _aegcd := d.Token()
		if _aegcd != nil {
			return _aegcd
		}
		switch _fbea := _eaf.(type) {
		case _b.StartElement:
			switch _fbea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _gfdg := d.DecodeElement(_fafc.SpPr, &_fbea); _gfdg != nil {
					return _gfdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _fcdd := d.DecodeElement(_fafc.BodyPr, &_fbea); _fcdd != nil {
					return _fcdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				if _adae := d.DecodeElement(_fafc.LstStyle, &_fbea); _adae != nil {
					return _adae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fafc.Style = NewCT_ShapeStyle()
				if _aab := d.DecodeElement(_fafc.Style, &_fbea); _aab != nil {
					return _aab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fafc.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcfgc := d.DecodeElement(_fafc.ExtLst, &_fbea); _gcfgc != nil {
					return _gcfgc
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0053h\u0061p\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074i\u006fn\u0020\u0025v", _fbea.Name)
				if _adgd := d.Skip(); _adgd != nil {
					return _adgd
				}
			}
		case _b.EndElement:
			break _eddg
		case _b.CharData:
		}
	}
	return nil
}

type CT_TextTabStopList struct{ Tab []*CT_TextTabStop }

func NewCT_Connection() *CT_Connection                      { _fbfg := &CT_Connection{}; return _fbfg }
func (_cbcgca *ST_PositiveFixedPercentage) Validate() error { return _cbcgca.ValidateWithPath("") }
func (_fbbfe ST_PresetMaterialType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbbfe.String(), start)
}

// Validate validates the CT_NonVisualDrawingProps and its children
func (_gedc *CT_NonVisualDrawingProps) Validate() error {
	return _gedc.ValidateWithPath("\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073")
}

// Validate validates the CT_GroupLocking and its children
func (_egafge *CT_GroupLocking) Validate() error {
	return _egafge.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_efbef *CT_RelativeRect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddeg := range start.Attr {
		if _ddeg.Name.Local == "\u006c" {
			_fafdb, _eeecg := ParseUnionST_Percentage(_ddeg.Value)
			if _eeecg != nil {
				return _eeecg
			}
			_efbef.LAttr = &_fafdb
			continue
		}
		if _ddeg.Name.Local == "\u0074" {
			_cddgf, _cagee := ParseUnionST_Percentage(_ddeg.Value)
			if _cagee != nil {
				return _cagee
			}
			_efbef.TAttr = &_cddgf
			continue
		}
		if _ddeg.Name.Local == "\u0072" {
			_aeffa, _fccfb := ParseUnionST_Percentage(_ddeg.Value)
			if _fccfb != nil {
				return _fccfb
			}
			_efbef.RAttr = &_aeffa
			continue
		}
		if _ddeg.Name.Local == "\u0062" {
			_aecc, _fdddea := ParseUnionST_Percentage(_ddeg.Value)
			if _fdddea != nil {
				return _fdddea
			}
			_efbef.BAttr = &_aecc
			continue
		}
	}
	for {
		_ceeac, _cacae := d.Token()
		if _cacae != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069v\u0065\u0052\u0065c\u0074:\u0020\u0025\u0073", _cacae)
		}
		if _aegaa, _eeggf := _ceeac.(_b.EndElement); _eeggf && _aegaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ceafae ST_CompoundLine) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ceafae.String(), start)
}
func (_aeefb *CT_TableRow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abbge := range start.Attr {
		if _abbge.Name.Local == "\u0068" {
			_fccgg, _fecbdf := ParseUnionST_Coordinate(_abbge.Value)
			if _fecbdf != nil {
				return _fecbdf
			}
			_aeefb.HAttr = _fccgg
			continue
		}
	}
_bgad:
	for {
		_eeffg, _adcda := d.Token()
		if _adcda != nil {
			return _adcda
		}
		switch _faddd := _eeffg.(type) {
		case _b.StartElement:
			switch _faddd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}:
				_bdede := NewCT_TableCell()
				if _aegce := d.DecodeElement(_bdede, &_faddd); _aegce != nil {
					return _aegce
				}
				_aeefb.Tc = append(_aeefb.Tc, _bdede)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeefb.ExtLst = NewCT_OfficeArtExtensionList()
				if _eafbc := d.DecodeElement(_aeefb.ExtLst, &_faddd); _eafbc != nil {
					return _eafbc
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077\u0020\u0025\u0076", _faddd.Name)
				if _adeeb := d.Skip(); _adeeb != nil {
					return _adeeb
				}
			}
		case _b.EndElement:
			break _bgad
		case _b.CharData:
		}
	}
	return nil
}

type EG_ColorChoice struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}
type CT_ShapeStyle struct {
	LnRef     *CT_StyleMatrixReference
	FillRef   *CT_StyleMatrixReference
	EffectRef *CT_StyleMatrixReference
	FontRef   *CT_FontReference
}

func (_ebbeag *EG_LineJoinProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adcdg:
	for {
		_gcbaa, _bcfdbf := d.Token()
		if _bcfdbf != nil {
			return _bcfdbf
		}
		switch _dgfcgf := _gcbaa.(type) {
		case _b.StartElement:
			switch _dgfcgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_ebbeag.Round = NewCT_LineJoinRound()
				if _geade := d.DecodeElement(_ebbeag.Round, &_dgfcgf); _geade != nil {
					return _geade
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_ebbeag.Bevel = NewCT_LineJoinBevel()
				if _gefge := d.DecodeElement(_ebbeag.Bevel, &_dgfcgf); _gefge != nil {
					return _gefge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_ebbeag.Miter = NewCT_LineJoinMiterProperties()
				if _cafd := d.DecodeElement(_ebbeag.Miter, &_dgfcgf); _cafd != nil {
					return _cafd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dgfcgf.Name)
				if _dgabgg := d.Skip(); _dgabgg != nil {
					return _dgabgg
				}
			}
		case _b.EndElement:
			break _adcdg
		case _b.CharData:
		}
	}
	return nil
}
func (_cgaa ST_PathFillMode) Validate() error { return _cgaa.ValidateWithPath("") }

// Validate validates the CT_AlphaCeilingEffect and its children
func (_fcb *CT_AlphaCeilingEffect) Validate() error {
	return _fcb.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_ddbce ST_TextVerticalType) Validate() error { return _ddbce.ValidateWithPath("") }
func NewCT_GvmlPictureNonVisual() *CT_GvmlPictureNonVisual {
	_aaacb := &CT_GvmlPictureNonVisual{}
	_aaacb.CNvPr = NewCT_NonVisualDrawingProps()
	_aaacb.CNvPicPr = NewCT_NonVisualPictureProperties()
	return _aaacb
}
func (_agcf *CT_ObjectStyleDefaults) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _agcf.SpDef != nil {
		_gcba := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0070\u0044\u0065\u0066"}}
		e.EncodeElement(_agcf.SpDef, _gcba)
	}
	if _agcf.LnDef != nil {
		_acac := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u006e\u0044\u0065\u0066"}}
		e.EncodeElement(_agcf.LnDef, _acac)
	}
	if _agcf.TxDef != nil {
		_bdcfc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0078\u0044\u0065\u0066"}}
		e.EncodeElement(_agcf.TxDef, _bdcfc)
	}
	if _agcf.ExtLst != nil {
		_bdad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agcf.ExtLst, _bdad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextBlipBullet and its children
func (_aceca *CT_TextBlipBullet) Validate() error {
	return _aceca.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074")
}
func (_gceeb ST_PresetShadowVal) ValidateWithPath(path string) error {
	switch _gceeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gceeb))
	}
	return nil
}
func NewCT_HSLEffect() *CT_HSLEffect { _gadbd := &CT_HSLEffect{}; return _gadbd }

type CT_PresetGeometry2D struct {
	PrstAttr ST_ShapeType
	AvLst    *CT_GeomGuideList
}

const (
	ST_LightRigTypeUnset         ST_LightRigType = 0
	ST_LightRigTypeLegacyFlat1   ST_LightRigType = 1
	ST_LightRigTypeLegacyFlat2   ST_LightRigType = 2
	ST_LightRigTypeLegacyFlat3   ST_LightRigType = 3
	ST_LightRigTypeLegacyFlat4   ST_LightRigType = 4
	ST_LightRigTypeLegacyNormal1 ST_LightRigType = 5
	ST_LightRigTypeLegacyNormal2 ST_LightRigType = 6
	ST_LightRigTypeLegacyNormal3 ST_LightRigType = 7
	ST_LightRigTypeLegacyNormal4 ST_LightRigType = 8
	ST_LightRigTypeLegacyHarsh1  ST_LightRigType = 9
	ST_LightRigTypeLegacyHarsh2  ST_LightRigType = 10
	ST_LightRigTypeLegacyHarsh3  ST_LightRigType = 11
	ST_LightRigTypeLegacyHarsh4  ST_LightRigType = 12
	ST_LightRigTypeThreePt       ST_LightRigType = 13
	ST_LightRigTypeBalanced      ST_LightRigType = 14
	ST_LightRigTypeSoft          ST_LightRigType = 15
	ST_LightRigTypeHarsh         ST_LightRigType = 16
	ST_LightRigTypeFlood         ST_LightRigType = 17
	ST_LightRigTypeContrasting   ST_LightRigType = 18
	ST_LightRigTypeMorning       ST_LightRigType = 19
	ST_LightRigTypeSunrise       ST_LightRigType = 20
	ST_LightRigTypeSunset        ST_LightRigType = 21
	ST_LightRigTypeChilly        ST_LightRigType = 22
	ST_LightRigTypeFreezing      ST_LightRigType = 23
	ST_LightRigTypeFlat          ST_LightRigType = 24
	ST_LightRigTypeTwoPt         ST_LightRigType = 25
	ST_LightRigTypeGlow          ST_LightRigType = 26
	ST_LightRigTypeBrightRoom    ST_LightRigType = 27
)

func (_baadf *ST_TextSpacingPercentOrPercentString) Validate() error {
	return _baadf.ValidateWithPath("")
}
func (_bcc *CT_ColorMappingOverride) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcc.Choice = NewCT_ColorMappingOverrideChoice()
_cae:
	for {
		_acag, _eeb := d.Token()
		if _eeb != nil {
			return _eeb
		}
		switch _ebebe := _acag.(type) {
		case _b.StartElement:
			switch _ebebe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_bcc.Choice = NewCT_ColorMappingOverrideChoice()
				if _dgade := d.DecodeElement(&_bcc.Choice.MasterClrMapping, &_ebebe); _dgade != nil {
					return _dgade
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_bcc.Choice = NewCT_ColorMappingOverrideChoice()
				if _dcf := d.DecodeElement(&_bcc.Choice.OverrideClrMapping, &_ebebe); _dcf != nil {
					return _dcf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070i\u006e\u0067\u004f\u0076\u0065\u0072r\u0069\u0064\u0065 \u0025\u0076", _ebebe.Name)
				if _dcdeec := d.Skip(); _dcdeec != nil {
					return _dcdeec
				}
			}
		case _b.EndElement:
			break _cae
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DArcTo and its children, prefixing error messages with path
func (_efeac *CT_Path2DArcTo) ValidateWithPath(path string) error {
	if _cfag := _efeac.WRAttr.ValidateWithPath(path + "\u002fW\u0052\u0041\u0074\u0074\u0072"); _cfag != nil {
		return _cfag
	}
	if _gcddb := _efeac.HRAttr.ValidateWithPath(path + "\u002fH\u0052\u0041\u0074\u0074\u0072"); _gcddb != nil {
		return _gcddb
	}
	if _gaggc := _efeac.StAngAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _gaggc != nil {
		return _gaggc
	}
	if _fgea := _efeac.SwAngAttr.ValidateWithPath(path + "\u002f\u0053\u0077\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _fgea != nil {
		return _fgea
	}
	return nil
}
func NewCT_Scene3D() *CT_Scene3D {
	_feaaa := &CT_Scene3D{}
	_feaaa.Camera = NewCT_Camera()
	_feaaa.LightRig = NewCT_LightRig()
	return _feaaa
}
func (_bbgedb ST_BlendMode) Validate() error { return _bbgedb.ValidateWithPath("") }

type CT_ColorMRU struct{ EG_ColorChoice []*EG_ColorChoice }

// ValidateWithPath validates the CT_GvmlUseShapeRectangle and its children, prefixing error messages with path
func (_edeae *CT_GvmlUseShapeRectangle) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_NoFillProperties and its children, prefixing error messages with path
func (_acedg *CT_NoFillProperties) ValidateWithPath(path string) error { return nil }
func (_gfaaf ST_TextShapeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ecfge := _b.Attr{}
	_ecfge.Name = name
	switch _gfaaf {
	case ST_TextShapeTypeUnset:
		_ecfge.Value = ""
	case ST_TextShapeTypeTextNoShape:
		_ecfge.Value = "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case ST_TextShapeTypeTextPlain:
		_ecfge.Value = "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case ST_TextShapeTypeTextStop:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case ST_TextShapeTypeTextTriangle:
		_ecfge.Value = "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_TextShapeTypeTextTriangleInverted:
		_ecfge.Value = "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case ST_TextShapeTypeTextChevron:
		_ecfge.Value = "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case ST_TextShapeTypeTextChevronInverted:
		_ecfge.Value = "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case ST_TextShapeTypeTextRingInside:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextRingOutside:
		_ecfge.Value = "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextArchUp:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case ST_TextShapeTypeTextArchDown:
		_ecfge.Value = "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCircle:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case ST_TextShapeTypeTextButton:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case ST_TextShapeTypeTextArchUpPour:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextArchDownPour:
		_ecfge.Value = "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCirclePour:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextButtonPour:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCurveUp:
		_ecfge.Value = "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCurveDown:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCanUp:
		_ecfge.Value = "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case ST_TextShapeTypeTextCanDown:
		_ecfge.Value = "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextWave1:
		_ecfge.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case ST_TextShapeTypeTextWave2:
		_ecfge.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case ST_TextShapeTypeTextDoubleWave1:
		_ecfge.Value = "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case ST_TextShapeTypeTextWave4:
		_ecfge.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case ST_TextShapeTypeTextInflate:
		_ecfge.Value = "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflate:
		_ecfge.Value = "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextInflateBottom:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextDeflateBottom:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextInflateTop:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateTop:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateInflate:
		_ecfge.Value = "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflateInflateDeflate:
		_ecfge.Value = "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case ST_TextShapeTypeTextFadeRight:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_TextShapeTypeTextFadeLeft:
		_ecfge.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case ST_TextShapeTypeTextFadeUp:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextFadeDown:
		_ecfge.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextSlantUp:
		_ecfge.Value = "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case ST_TextShapeTypeTextSlantDown:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCascadeUp:
		_ecfge.Value = "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCascadeDown:
		_ecfge.Value = "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return _ecfge, nil
}
func (_beafea *ST_LineCap) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_beafea = 0
	case "\u0072\u006e\u0064":
		*_beafea = 1
	case "\u0073\u0071":
		*_beafea = 2
	case "\u0066\u006c\u0061\u0074":
		*_beafea = 3
	}
	return nil
}
func (_dfcbd *CT_GroupShapeProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfcbd.BwModeAttr != ST_BlackWhiteModeUnset {
		_eagd, _geae := _dfcbd.BwModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _geae != nil {
			return _geae
		}
		start.Attr = append(start.Attr, _eagd)
	}
	e.EncodeToken(start)
	if _dfcbd.Xfrm != nil {
		_aada := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_dfcbd.Xfrm, _aada)
	}
	if _dfcbd.NoFill != nil {
		_baecd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfcbd.NoFill, _baecd)
	}
	if _dfcbd.SolidFill != nil {
		_gabaf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfcbd.SolidFill, _gabaf)
	}
	if _dfcbd.GradFill != nil {
		_cgfdf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfcbd.GradFill, _cgfdf)
	}
	if _dfcbd.BlipFill != nil {
		_eccge := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfcbd.BlipFill, _eccge)
	}
	if _dfcbd.PattFill != nil {
		_dagfc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfcbd.PattFill, _dagfc)
	}
	if _dfcbd.GrpFill != nil {
		_bdccb := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_dfcbd.GrpFill, _bdccb)
	}
	if _dfcbd.EffectLst != nil {
		_ecfbg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfcbd.EffectLst, _ecfbg)
	}
	if _dfcbd.EffectDag != nil {
		_cfbee := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dfcbd.EffectDag, _cfbee)
	}
	if _dfcbd.Scene3d != nil {
		_ggfg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_dfcbd.Scene3d, _ggfg)
	}
	if _dfcbd.ExtLst != nil {
		_gggd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfcbd.ExtLst, _gggd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ScRgbColor and its children, prefixing error messages with path
func (_ccfgg *CT_ScRgbColor) ValidateWithPath(path string) error {
	if _gcagb := _ccfgg.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _gcagb != nil {
		return _gcagb
	}
	if _cbdcg := _ccfgg.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _cbdcg != nil {
		return _cbdcg
	}
	if _bbffgc := _ccfgg.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _bbffgc != nil {
		return _bbffgc
	}
	for _cccgd, _ddcae := range _ccfgg.EG_ColorTransform {
		if _fdabg := _ddcae.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _cccgd)); _fdabg != nil {
			return _fdabg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectionSite and its children, prefixing error messages with path
func (_bffgf *CT_ConnectionSite) ValidateWithPath(path string) error {
	if _ggfc := _bffgf.AngAttr.ValidateWithPath(path + "\u002f\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _ggfc != nil {
		return _ggfc
	}
	if _dfbbc := _bffgf.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _dfbbc != nil {
		return _dfbbc
	}
	return nil
}
func (_gddcab ST_BevelPresetType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gddcab.String(), start)
}

type CT_Camera struct {
	PrstAttr ST_PresetCameraType
	FovAttr  *int32
	ZoomAttr *ST_PositivePercentage
	Rot      *CT_SphereCoords
}

func NewCT_TableBackgroundStyle() *CT_TableBackgroundStyle {
	_ffec := &CT_TableBackgroundStyle{}
	return _ffec
}

// Validate validates the CT_PositivePercentage and its children
func (_daff *CT_PositivePercentage) Validate() error {
	return _daff.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
}

type EG_Media struct {
	AudioCd       *CT_AudioCD
	WavAudioFile  *CT_EmbeddedWAVAudioFile
	AudioFile     *CT_AudioFile
	VideoFile     *CT_VideoFile
	QuickTimeFile *CT_QuickTimeFile
}

func (_afecf *ST_BlackWhiteMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcfcab, _bagbec := d.Token()
	if _bagbec != nil {
		return _bagbec
	}
	if _gfgba, _edaad := _fcfcab.(_b.EndElement); _edaad && _gfgba.Name == start.Name {
		*_afecf = 1
		return nil
	}
	if _abaed, _bfce := _fcfcab.(_b.CharData); !_bfce {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcfcab)
	} else {
		switch string(_abaed) {
		case "":
			*_afecf = 0
		case "\u0063\u006c\u0072":
			*_afecf = 1
		case "\u0061\u0075\u0074\u006f":
			*_afecf = 2
		case "\u0067\u0072\u0061\u0079":
			*_afecf = 3
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_afecf = 4
		case "\u0069n\u0076\u0047\u0072\u0061\u0079":
			*_afecf = 5
		case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
			*_afecf = 6
		case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
			*_afecf = 7
		case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
			*_afecf = 8
		case "\u0062\u006c\u0061c\u006b":
			*_afecf = 9
		case "\u0077\u0068\u0069t\u0065":
			*_afecf = 10
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_afecf = 11
		}
	}
	_fcfcab, _bagbec = d.Token()
	if _bagbec != nil {
		return _bagbec
	}
	if _bcace, _fceed := _fcfcab.(_b.EndElement); _fceed && _bcace.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcfcab)
}
func (_cfgcgc *ST_PenAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfgcgc = 0
	case "\u0063\u0074\u0072":
		*_cfgcgc = 1
	case "\u0069\u006e":
		*_cfgcgc = 2
	}
	return nil
}
func (_ggbgc *ST_TextAlignType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eadbb, _cdcag := d.Token()
	if _cdcag != nil {
		return _cdcag
	}
	if _ddgfc, _edaea := _eadbb.(_b.EndElement); _edaea && _ddgfc.Name == start.Name {
		*_ggbgc = 1
		return nil
	}
	if _cdabdd, _fabgae := _eadbb.(_b.CharData); !_fabgae {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eadbb)
	} else {
		switch string(_cdabdd) {
		case "":
			*_ggbgc = 0
		case "\u006c":
			*_ggbgc = 1
		case "\u0063\u0074\u0072":
			*_ggbgc = 2
		case "\u0072":
			*_ggbgc = 3
		case "\u006a\u0075\u0073\u0074":
			*_ggbgc = 4
		case "\u006au\u0073\u0074\u004c\u006f\u0077":
			*_ggbgc = 5
		case "\u0064\u0069\u0073\u0074":
			*_ggbgc = 6
		case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
			*_ggbgc = 7
		}
	}
	_eadbb, _cdcag = d.Token()
	if _cdcag != nil {
		return _cdcag
	}
	if _bbegec, _ffada := _eadbb.(_b.EndElement); _ffada && _bbegec.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eadbb)
}
func (_faacad ST_TextCapsType) String() string {
	switch _faacad {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006d\u0061l\u006c"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}
func (_ffbc *CT_AlphaCeilingEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func ParseUnionST_PositiveFixedPercentage(s string) (ST_PositiveFixedPercentage, error) {
	_adeeg := ST_PositiveFixedPercentage{}
	if _eb.ST_PercentagePatternRe.MatchString(s) {
		_adeeg.ST_PositiveFixedPercentage = &ST_Percentage{}
		_adeeg.ST_PositiveFixedPercentage.ST_Percentage = &s
	} else {
		_gebe, _gdbda := _a.ParseInt(s, 10, 64)
		if _gdbda != nil {
			return _adeeg, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _gdbda)
		}
		_bfdac := int32(_gebe)
		_adeeg.ST_PositiveFixedPercentageDecimal = &_bfdac
	}
	return _adeeg, nil
}
func (_fbgebc *EG_OfficeArtExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbgebc.Ext != nil {
		_fgdfc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _eadggc := range _fbgebc.Ext {
			e.EncodeElement(_eadggc, _fgdfc)
		}
	}
	return nil
}
func (_gecbc *CT_TableRow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _bb.Sprintf("\u0025\u0076", _gecbc.HAttr)})
	e.EncodeToken(start)
	if _gecbc.Tc != nil {
		_ebgea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0063"}}
		for _, _bdcad := range _gecbc.Tc {
			e.EncodeElement(_bdcad, _ebgea)
		}
	}
	if _gecbc.ExtLst != nil {
		_aabga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gecbc.ExtLst, _aabga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ConnectionSite and its children
func (_cbac *CT_ConnectionSite) Validate() error {
	return _cbac.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065")
}

// ValidateWithPath validates the CT_Bevel and its children, prefixing error messages with path
func (_geaac *CT_Bevel) ValidateWithPath(path string) error {
	if _geaac.WAttr != nil {
		if *_geaac.WAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_geaac.WAttr)
		}
		if *_geaac.WAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geaac.WAttr)
		}
	}
	if _geaac.HAttr != nil {
		if *_geaac.HAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_geaac.HAttr)
		}
		if *_geaac.HAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geaac.HAttr)
		}
	}
	if _bacg := _geaac.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _bacg != nil {
		return _bacg
	}
	return nil
}

type CT_Point2D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_geca *CT_Color) ValidateWithPath(path string) error {
	if _geca.ScrgbClr != nil {
		if _bdcf := _geca.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bdcf != nil {
			return _bdcf
		}
	}
	if _geca.SrgbClr != nil {
		if _bfdc := _geca.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bfdc != nil {
			return _bfdc
		}
	}
	if _geca.HslClr != nil {
		if _gecc := _geca.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _gecc != nil {
			return _gecc
		}
	}
	if _geca.SysClr != nil {
		if _adec := _geca.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _adec != nil {
			return _adec
		}
	}
	if _geca.SchemeClr != nil {
		if _aaad := _geca.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _aaad != nil {
			return _aaad
		}
	}
	if _geca.PrstClr != nil {
		if _dfff := _geca.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dfff != nil {
			return _dfff
		}
	}
	return nil
}

type CT_NonVisualPictureProperties struct {
	PreferRelativeResizeAttr *bool
	PicLocks                 *CT_PictureLocking
	ExtLst                   *CT_OfficeArtExtensionList
}
type ST_TextShapeType byte
type EG_TextRun struct {
	R   *CT_RegularTextRun
	Br  *CT_TextLineBreak
	Fld *CT_TextField
}
type CT_Ratio struct {
	NAttr int64
	DAttr int64
}

// Validate validates the CT_TextTabStopList and its children
func (_gdcdd *CT_TextTabStopList) Validate() error {
	return _gdcdd.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074")
}
func NewCT_TextSpacing() *CT_TextSpacing { _cefcg := &CT_TextSpacing{}; return _cefcg }
func (_cccab *CT_GradientStop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecbab := range start.Attr {
		if _ecbab.Name.Local == "\u0070\u006f\u0073" {
			_agbgc, _baeb := ParseUnionST_PositiveFixedPercentage(_ecbab.Value)
			if _baeb != nil {
				return _baeb
			}
			_cccab.PosAttr = _agbgc
			continue
		}
	}
_ggbfb:
	for {
		_gggcd, _abfdg := d.Token()
		if _abfdg != nil {
			return _abfdg
		}
		switch _aecf := _gggcd.(type) {
		case _b.StartElement:
			switch _aecf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cccab.ScrgbClr = NewCT_ScRgbColor()
				if _gbgg := d.DecodeElement(_cccab.ScrgbClr, &_aecf); _gbgg != nil {
					return _gbgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cccab.SrgbClr = NewCT_SRgbColor()
				if _acea := d.DecodeElement(_cccab.SrgbClr, &_aecf); _acea != nil {
					return _acea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cccab.HslClr = NewCT_HslColor()
				if _daceg := d.DecodeElement(_cccab.HslClr, &_aecf); _daceg != nil {
					return _daceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cccab.SysClr = NewCT_SystemColor()
				if _dgadb := d.DecodeElement(_cccab.SysClr, &_aecf); _dgadb != nil {
					return _dgadb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cccab.SchemeClr = NewCT_SchemeColor()
				if _bcggcg := d.DecodeElement(_cccab.SchemeClr, &_aecf); _bcggcg != nil {
					return _bcggcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cccab.PrstClr = NewCT_PresetColor()
				if _faff := d.DecodeElement(_cccab.PrstClr, &_aecf); _faff != nil {
					return _faff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _aecf.Name)
				if _gbcb := d.Skip(); _gbcb != nil {
					return _gbcb
				}
			}
		case _b.EndElement:
			break _ggbfb
		case _b.CharData:
		}
	}
	return nil
}
func (_gedb *CT_GeomGuideList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gedb.Gd != nil {
		_gdef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0064"}}
		for _, _aadf := range _gedb.Gd {
			e.EncodeElement(_aadf, _gdef)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Scale2D() *CT_Scale2D {
	_dfbed := &CT_Scale2D{}
	_dfbed.Sx = NewCT_Ratio()
	_dfbed.Sy = NewCT_Ratio()
	return _dfbed
}

type ST_PresetShadowVal byte

func (_afdabe *CT_TextParagraph) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ggbcf:
	for {
		_cfacg, _bbgce := d.Token()
		if _bbgce != nil {
			return _bbgce
		}
		switch _cecba := _cfacg.(type) {
		case _b.StartElement:
			switch _cecba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_afdabe.PPr = NewCT_TextParagraphProperties()
				if _cgdgf := d.DecodeElement(_afdabe.PPr, &_cecba); _cgdgf != nil {
					return _cgdgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_gcfdg := NewEG_TextRun()
				_gcfdg.R = NewCT_RegularTextRun()
				if _ebbed := d.DecodeElement(_gcfdg.R, &_cecba); _ebbed != nil {
					return _ebbed
				}
				_afdabe.EG_TextRun = append(_afdabe.EG_TextRun, _gcfdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_afcbg := NewEG_TextRun()
				_afcbg.Br = NewCT_TextLineBreak()
				if _dbedgf := d.DecodeElement(_afcbg.Br, &_cecba); _dbedgf != nil {
					return _dbedgf
				}
				_afdabe.EG_TextRun = append(_afdabe.EG_TextRun, _afcbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_bfcda := NewEG_TextRun()
				_bfcda.Fld = NewCT_TextField()
				if _eeadba := d.DecodeElement(_bfcda.Fld, &_cecba); _eeadba != nil {
					return _eeadba
				}
				_afdabe.EG_TextRun = append(_afdabe.EG_TextRun, _bfcda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}:
				_afdabe.EndParaRPr = NewCT_TextCharacterProperties()
				if _abaegg := d.DecodeElement(_afdabe.EndParaRPr, &_cecba); _abaegg != nil {
					return _abaegg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025v", _cecba.Name)
				if _abgdb := d.Skip(); _abgdb != nil {
					return _abgdb
				}
			}
		case _b.EndElement:
			break _ggbcf
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TextStrikeTypeUnset     ST_TextStrikeType = 0
	ST_TextStrikeTypeNoStrike  ST_TextStrikeType = 1
	ST_TextStrikeTypeSngStrike ST_TextStrikeType = 2
	ST_TextStrikeTypeDblStrike ST_TextStrikeType = 3
)

// Validate validates the Theme and its children
func (_afafb *Theme) Validate() error { return _afafb.ValidateWithPath("\u0054\u0068\u0065m\u0065") }
func (_bada *CT_TableBackgroundStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bada.Fill != nil {
		_aegf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_bada.Fill, _aegf)
	}
	if _bada.FillRef != nil {
		_fgbed := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_bada.FillRef, _fgbed)
	}
	if _bada.Effect != nil {
		_aebdbb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_bada.Effect, _aebdbb)
	}
	if _bada.EffectRef != nil {
		_ddbbf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_bada.EffectRef, _ddbbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbebb *CT_ScRgbColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ageaf := range start.Attr {
		if _ageaf.Name.Local == "\u0072" {
			_cefb, _dabfg := ParseUnionST_Percentage(_ageaf.Value)
			if _dabfg != nil {
				return _dabfg
			}
			_cbebb.RAttr = _cefb
			continue
		}
		if _ageaf.Name.Local == "\u0067" {
			_abce, _gcddf := ParseUnionST_Percentage(_ageaf.Value)
			if _gcddf != nil {
				return _gcddf
			}
			_cbebb.GAttr = _abce
			continue
		}
		if _ageaf.Name.Local == "\u0062" {
			_fedbc, _fgddg := ParseUnionST_Percentage(_ageaf.Value)
			if _fgddg != nil {
				return _fgddg
			}
			_cbebb.BAttr = _fedbc
			continue
		}
	}
_faffeg:
	for {
		_fcdde, _gcgdb := d.Token()
		if _gcgdb != nil {
			return _gcgdb
		}
		switch _bcdgeg := _fcdde.(type) {
		case _b.StartElement:
			switch _bcdgeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_eggee := NewEG_ColorTransform()
				_eggee.Tint = NewCT_PositiveFixedPercentage()
				if _cbded := d.DecodeElement(_eggee.Tint, &_bcdgeg); _cbded != nil {
					return _cbded
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _eggee)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_adgfa := NewEG_ColorTransform()
				_adgfa.Shade = NewCT_PositiveFixedPercentage()
				if _aabddg := d.DecodeElement(_adgfa.Shade, &_bcdgeg); _aabddg != nil {
					return _aabddg
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _adgfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gabdc := NewEG_ColorTransform()
				_gabdc.Comp = NewCT_ComplementTransform()
				if _gbaafa := d.DecodeElement(_gabdc.Comp, &_bcdgeg); _gbaafa != nil {
					return _gbaafa
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _gabdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_aceef := NewEG_ColorTransform()
				_aceef.Inv = NewCT_InverseTransform()
				if _feabab := d.DecodeElement(_aceef.Inv, &_bcdgeg); _feabab != nil {
					return _feabab
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _aceef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_baece := NewEG_ColorTransform()
				_baece.Gray = NewCT_GrayscaleTransform()
				if _fcdf := d.DecodeElement(_baece.Gray, &_bcdgeg); _fcdf != nil {
					return _fcdf
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _baece)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_gacg := NewEG_ColorTransform()
				_gacg.Alpha = NewCT_PositiveFixedPercentage()
				if _bbgfae := d.DecodeElement(_gacg.Alpha, &_bcdgeg); _bbgfae != nil {
					return _bbgfae
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _gacg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_bccdd := NewEG_ColorTransform()
				_bccdd.AlphaOff = NewCT_FixedPercentage()
				if _dbdd := d.DecodeElement(_bccdd.AlphaOff, &_bcdgeg); _dbdd != nil {
					return _dbdd
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _bccdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_dgbdfa := NewEG_ColorTransform()
				_dgbdfa.AlphaMod = NewCT_PositivePercentage()
				if _ccbdb := d.DecodeElement(_dgbdfa.AlphaMod, &_bcdgeg); _ccbdb != nil {
					return _ccbdb
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _dgbdfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_bfagc := NewEG_ColorTransform()
				_bfagc.Hue = NewCT_PositiveFixedAngle()
				if _ffafb := d.DecodeElement(_bfagc.Hue, &_bcdgeg); _ffafb != nil {
					return _ffafb
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _bfagc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_cfeba := NewEG_ColorTransform()
				_cfeba.HueOff = NewCT_Angle()
				if _dgbde := d.DecodeElement(_cfeba.HueOff, &_bcdgeg); _dgbde != nil {
					return _dgbde
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _cfeba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_gffga := NewEG_ColorTransform()
				_gffga.HueMod = NewCT_PositivePercentage()
				if _gageb := d.DecodeElement(_gffga.HueMod, &_bcdgeg); _gageb != nil {
					return _gageb
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _gffga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_gdaad := NewEG_ColorTransform()
				_gdaad.Sat = NewCT_Percentage()
				if _adbace := d.DecodeElement(_gdaad.Sat, &_bcdgeg); _adbace != nil {
					return _adbace
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _gdaad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dddec := NewEG_ColorTransform()
				_dddec.SatOff = NewCT_Percentage()
				if _dgea := d.DecodeElement(_dddec.SatOff, &_bcdgeg); _dgea != nil {
					return _dgea
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _dddec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_baffe := NewEG_ColorTransform()
				_baffe.SatMod = NewCT_Percentage()
				if _edfb := d.DecodeElement(_baffe.SatMod, &_bcdgeg); _edfb != nil {
					return _edfb
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _baffe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_becgd := NewEG_ColorTransform()
				_becgd.Lum = NewCT_Percentage()
				if _cbdbcg := d.DecodeElement(_becgd.Lum, &_bcdgeg); _cbdbcg != nil {
					return _cbdbcg
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _becgd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_gegcg := NewEG_ColorTransform()
				_gegcg.LumOff = NewCT_Percentage()
				if _gcadf := d.DecodeElement(_gegcg.LumOff, &_bcdgeg); _gcadf != nil {
					return _gcadf
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _gegcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_bcfc := NewEG_ColorTransform()
				_bcfc.LumMod = NewCT_Percentage()
				if _acabe := d.DecodeElement(_bcfc.LumMod, &_bcdgeg); _acabe != nil {
					return _acabe
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _bcfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_dfdbb := NewEG_ColorTransform()
				_dfdbb.Red = NewCT_Percentage()
				if _agdcb := d.DecodeElement(_dfdbb.Red, &_bcdgeg); _agdcb != nil {
					return _agdcb
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _dfdbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_dfacb := NewEG_ColorTransform()
				_dfacb.RedOff = NewCT_Percentage()
				if _gabdf := d.DecodeElement(_dfacb.RedOff, &_bcdgeg); _gabdf != nil {
					return _gabdf
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _dfacb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_eeeae := NewEG_ColorTransform()
				_eeeae.RedMod = NewCT_Percentage()
				if _bccf := d.DecodeElement(_eeeae.RedMod, &_bcdgeg); _bccf != nil {
					return _bccf
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _eeeae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_eeacf := NewEG_ColorTransform()
				_eeacf.Green = NewCT_Percentage()
				if _dcbf := d.DecodeElement(_eeacf.Green, &_bcdgeg); _dcbf != nil {
					return _dcbf
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _eeacf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_fgdb := NewEG_ColorTransform()
				_fgdb.GreenOff = NewCT_Percentage()
				if _ceecge := d.DecodeElement(_fgdb.GreenOff, &_bcdgeg); _ceecge != nil {
					return _ceecge
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _fgdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_edbg := NewEG_ColorTransform()
				_edbg.GreenMod = NewCT_Percentage()
				if _fedcff := d.DecodeElement(_edbg.GreenMod, &_bcdgeg); _fedcff != nil {
					return _fedcff
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _edbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_geddc := NewEG_ColorTransform()
				_geddc.Blue = NewCT_Percentage()
				if _gdefg := d.DecodeElement(_geddc.Blue, &_bcdgeg); _gdefg != nil {
					return _gdefg
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _geddc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_eaacb := NewEG_ColorTransform()
				_eaacb.BlueOff = NewCT_Percentage()
				if _eeeda := d.DecodeElement(_eaacb.BlueOff, &_bcdgeg); _eeeda != nil {
					return _eeeda
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _eaacb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_ceagf := NewEG_ColorTransform()
				_ceagf.BlueMod = NewCT_Percentage()
				if _dcgaf := d.DecodeElement(_ceagf.BlueMod, &_bcdgeg); _dcgaf != nil {
					return _dcgaf
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _ceagf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_dfeaa := NewEG_ColorTransform()
				_dfeaa.Gamma = NewCT_GammaTransform()
				if _bfedfbg := d.DecodeElement(_dfeaa.Gamma, &_bcdgeg); _bfedfbg != nil {
					return _bfedfbg
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _dfeaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_gfgff := NewEG_ColorTransform()
				_gfgff.InvGamma = NewCT_InverseGammaTransform()
				if _bbdd := d.DecodeElement(_gfgff.InvGamma, &_bcdgeg); _bbdd != nil {
					return _bbdd
				}
				_cbebb.EG_ColorTransform = append(_cbebb.EG_ColorTransform, _gfgff)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053c\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072 \u0025\u0076", _bcdgeg.Name)
				if _cdaba := d.Skip(); _cdaba != nil {
					return _cdaba
				}
			}
		case _b.EndElement:
			break _faffeg
		case _b.CharData:
		}
	}
	return nil
}
func (_bfdge ST_PathFillMode) String() string {
	switch _bfdge {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d"
	case 3:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case 4:
		return "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case 5:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return ""
}
func (_gedec *ST_TextStrikeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gedec = 0
	case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
		*_gedec = 1
	case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
		*_gedec = 2
	case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
		*_gedec = 3
	}
	return nil
}

// ValidateWithPath validates the CT_GlowEffect and its children, prefixing error messages with path
func (_affgg *CT_GlowEffect) ValidateWithPath(path string) error {
	if _affgg.RadAttr != nil {
		if *_affgg.RadAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_affgg.RadAttr)
		}
		if *_affgg.RadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_affgg.RadAttr)
		}
	}
	if _affgg.ScrgbClr != nil {
		if _deedg := _affgg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _deedg != nil {
			return _deedg
		}
	}
	if _affgg.SrgbClr != nil {
		if _affb := _affgg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _affb != nil {
			return _affb
		}
	}
	if _affgg.HslClr != nil {
		if _edcdd := _affgg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _edcdd != nil {
			return _edcdd
		}
	}
	if _affgg.SysClr != nil {
		if _aega := _affgg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _aega != nil {
			return _aega
		}
	}
	if _affgg.SchemeClr != nil {
		if _feffa := _affgg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _feffa != nil {
			return _feffa
		}
	}
	if _affgg.PrstClr != nil {
		if _fbbe := _affgg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fbbe != nil {
			return _fbbe
		}
	}
	return nil
}
func (_edbdcca *EG_LineJoinProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edbdcca.Round != nil {
		_fbfdcg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_edbdcca.Round, _fbfdcg)
	}
	if _edbdcca.Bevel != nil {
		_debgd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_edbdcca.Bevel, _debgd)
	}
	if _edbdcca.Miter != nil {
		_befdg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_edbdcca.Miter, _befdg)
	}
	return nil
}
func (_eggadf ST_CompoundLine) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_daaedf := _b.Attr{}
	_daaedf.Name = name
	switch _eggadf {
	case ST_CompoundLineUnset:
		_daaedf.Value = ""
	case ST_CompoundLineSng:
		_daaedf.Value = "\u0073\u006e\u0067"
	case ST_CompoundLineDbl:
		_daaedf.Value = "\u0064\u0062\u006c"
	case ST_CompoundLineThickThin:
		_daaedf.Value = "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case ST_CompoundLineThinThick:
		_daaedf.Value = "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case ST_CompoundLineTri:
		_daaedf.Value = "\u0074\u0072\u0069"
	}
	return _daaedf, nil
}
func (_fagae ST_AnimationBuildType) Validate() error { return _fagae.ValidateWithPath("") }
func (_bgdfaa *CT_TextNoAutofit) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_dgcdg, _degda := d.Token()
		if _degda != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fA\u0075\u0074\u006f\u0066\u0069\u0074\u003a \u0025\u0073", _degda)
		}
		if _bfege, _dfega := _dgcdg.(_b.EndElement); _dfega && _bfege.Name == start.Name {
			break
		}
	}
	return nil
}
func (_faaaf ST_TextStrikeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgaeb := _b.Attr{}
	_fgaeb.Name = name
	switch _faaaf {
	case ST_TextStrikeTypeUnset:
		_fgaeb.Value = ""
	case ST_TextStrikeTypeNoStrike:
		_fgaeb.Value = "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case ST_TextStrikeTypeSngStrike:
		_fgaeb.Value = "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case ST_TextStrikeTypeDblStrike:
		_fgaeb.Value = "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return _fgaeb, nil
}
func NewCT_TextBulletSizePoint() *CT_TextBulletSizePoint {
	_gfeccc := &CT_TextBulletSizePoint{}
	_gfeccc.ValAttr = 100
	return _gfeccc
}

// Validate validates the CT_TablePropertiesChoice and its children
func (_gddga *CT_TablePropertiesChoice) Validate() error {
	return _gddga.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_TransformEffect and its children
func (_fccfd *CT_TransformEffect) Validate() error {
	return _fccfd.ValidateWithPath("\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074")
}
func NewCT_TableCol() *CT_TableCol { _gbdda := &CT_TableCol{}; return _gbdda }
func (_fcdge *EG_Media) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfaacf:
	for {
		_aececd, _dbdae := d.Token()
		if _dbdae != nil {
			return _dbdae
		}
		switch _cgfde := _aececd.(type) {
		case _b.StartElement:
			switch _cgfde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_fcdge.AudioCd = NewCT_AudioCD()
				if _feaabg := d.DecodeElement(_fcdge.AudioCd, &_cgfde); _feaabg != nil {
					return _feaabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_fcdge.WavAudioFile = NewCT_EmbeddedWAVAudioFile()
				if _gggfg := d.DecodeElement(_fcdge.WavAudioFile, &_cgfde); _gggfg != nil {
					return _gggfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_fcdge.AudioFile = NewCT_AudioFile()
				if _agggdc := d.DecodeElement(_fcdge.AudioFile, &_cgfde); _agggdc != nil {
					return _agggdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_fcdge.VideoFile = NewCT_VideoFile()
				if _cffgb := d.DecodeElement(_fcdge.VideoFile, &_cgfde); _cffgb != nil {
					return _cffgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_fcdge.QuickTimeFile = NewCT_QuickTimeFile()
				if _ccgdc := d.DecodeElement(_fcdge.QuickTimeFile, &_cgfde); _ccgdc != nil {
					return _ccgdc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061\u0020\u0025\u0076", _cgfde.Name)
				if _gbacf := d.Skip(); _gbacf != nil {
					return _gbacf
				}
			}
		case _b.EndElement:
			break _gfaacf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_FillProperties() *CT_FillProperties { _cccd := &CT_FillProperties{}; return _cccd }

// Validate validates the CT_TileInfoProperties and its children
func (_fgfed *CT_TileInfoProperties) Validate() error {
	return _fgfed.ValidateWithPath("C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_fedcc *CT_TextBodyProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbddf := range start.Attr {
		if _cbddf.Name.Local == "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074" {
			_dfbfg, _edfgc := _a.ParseBool(_cbddf.Value)
			if _edfgc != nil {
				return _edfgc
			}
			_fedcc.FromWordArtAttr = &_dfbfg
			continue
		}
		if _cbddf.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_fedcc.AnchorAttr.UnmarshalXMLAttr(_cbddf)
			continue
		}
		if _cbddf.Name.Local == "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061" {
			_geddg, _gccd := _a.ParseBool(_cbddf.Value)
			if _gccd != nil {
				return _gccd
			}
			_fedcc.SpcFirstLastParaAttr = &_geddg
			continue
		}
		if _cbddf.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_febbf, _afdab := _a.ParseBool(_cbddf.Value)
			if _afdab != nil {
				return _afdab
			}
			_fedcc.AnchorCtrAttr = &_febbf
			continue
		}
		if _cbddf.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_fedcc.HorzOverflowAttr.UnmarshalXMLAttr(_cbddf)
			continue
		}
		if _cbddf.Name.Local == "\u0066o\u0072\u0063\u0065\u0041\u0041" {
			_feafa, _gbgef := _a.ParseBool(_cbddf.Value)
			if _gbgef != nil {
				return _gbgef
			}
			_fedcc.ForceAAAttr = &_feafa
			continue
		}
		if _cbddf.Name.Local == "\u0077\u0072\u0061\u0070" {
			_fedcc.WrapAttr.UnmarshalXMLAttr(_cbddf)
			continue
		}
		if _cbddf.Name.Local == "\u0075p\u0072\u0069\u0067\u0068\u0074" {
			_bbdcd, _dcfbb := _a.ParseBool(_cbddf.Value)
			if _dcfbb != nil {
				return _dcfbb
			}
			_fedcc.UprightAttr = &_bbdcd
			continue
		}
		if _cbddf.Name.Local == "\u0074\u0049\u006e\u0073" {
			_ddgda, _fbbdfg := ParseUnionST_Coordinate32(_cbddf.Value)
			if _fbbdfg != nil {
				return _fbbdfg
			}
			_fedcc.TInsAttr = &_ddgda
			continue
		}
		if _cbddf.Name.Local == "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063" {
			_gacfc, _abfga := _a.ParseBool(_cbddf.Value)
			if _abfga != nil {
				return _abfga
			}
			_fedcc.CompatLnSpcAttr = &_gacfc
			continue
		}
		if _cbddf.Name.Local == "\u0062\u0049\u006e\u0073" {
			_fbefb, _afgba := ParseUnionST_Coordinate32(_cbddf.Value)
			if _afgba != nil {
				return _afgba
			}
			_fedcc.BInsAttr = &_fbefb
			continue
		}
		if _cbddf.Name.Local == "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_fedcc.VertOverflowAttr.UnmarshalXMLAttr(_cbddf)
			continue
		}
		if _cbddf.Name.Local == "\u0072\u006f\u0074" {
			_dgcfa, _dbfbc := _a.ParseInt(_cbddf.Value, 10, 32)
			if _dbfbc != nil {
				return _dbfbc
			}
			_ecadff := int32(_dgcfa)
			_fedcc.RotAttr = &_ecadff
			continue
		}
		if _cbddf.Name.Local == "\u0073\u0070\u0063\u0043\u006f\u006c" {
			_dcebc, _ccff := _a.ParseInt(_cbddf.Value, 10, 32)
			if _ccff != nil {
				return _ccff
			}
			_egbcgd := int32(_dcebc)
			_fedcc.SpcColAttr = &_egbcgd
			continue
		}
		if _cbddf.Name.Local == "\u0076\u0065\u0072\u0074" {
			_fedcc.VertAttr.UnmarshalXMLAttr(_cbddf)
			continue
		}
		if _cbddf.Name.Local == "\u0072\u0049\u006e\u0073" {
			_gdgba, _bgbfe := ParseUnionST_Coordinate32(_cbddf.Value)
			if _bgbfe != nil {
				return _bgbfe
			}
			_fedcc.RInsAttr = &_gdgba
			continue
		}
		if _cbddf.Name.Local == "\u006e\u0075\u006d\u0043\u006f\u006c" {
			_agedee, _dcgdd := _a.ParseInt(_cbddf.Value, 10, 32)
			if _dcgdd != nil {
				return _dcgdd
			}
			_bgdfd := int32(_agedee)
			_fedcc.NumColAttr = &_bgdfd
			continue
		}
		if _cbddf.Name.Local == "\u0072\u0074\u006c\u0043\u006f\u006c" {
			_bebgg, _eccee := _a.ParseBool(_cbddf.Value)
			if _eccee != nil {
				return _eccee
			}
			_fedcc.RtlColAttr = &_bebgg
			continue
		}
		if _cbddf.Name.Local == "\u006c\u0049\u006e\u0073" {
			_addfaa, _afdff := ParseUnionST_Coordinate32(_cbddf.Value)
			if _afdff != nil {
				return _afdff
			}
			_fedcc.LInsAttr = &_addfaa
			continue
		}
	}
_gbfdd:
	for {
		_daffc, _bddag := d.Token()
		if _bddag != nil {
			return _bddag
		}
		switch _fbaee := _daffc.(type) {
		case _b.StartElement:
			switch _fbaee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_fedcc.PrstTxWarp = NewCT_PresetTextShape()
				if _fcffe := d.DecodeElement(_fedcc.PrstTxWarp, &_fbaee); _fcffe != nil {
					return _fcffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_fedcc.NoAutofit = NewCT_TextNoAutofit()
				if _bcacfe := d.DecodeElement(_fedcc.NoAutofit, &_fbaee); _bcacfe != nil {
					return _bcacfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_fedcc.NormAutofit = NewCT_TextNormalAutofit()
				if _egdgg := d.DecodeElement(_fedcc.NormAutofit, &_fbaee); _egdgg != nil {
					return _egdgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_fedcc.SpAutoFit = NewCT_TextShapeAutofit()
				if _abdde := d.DecodeElement(_fedcc.SpAutoFit, &_fbaee); _abdde != nil {
					return _abdde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_fedcc.Scene3d = NewCT_Scene3D()
				if _ffbbbb := d.DecodeElement(_fedcc.Scene3d, &_fbaee); _ffbbbb != nil {
					return _ffbbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_fedcc.Sp3d = NewCT_Shape3D()
				if _dggfef := d.DecodeElement(_fedcc.Sp3d, &_fbaee); _dggfef != nil {
					return _dggfef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_fedcc.FlatTx = NewCT_FlatText()
				if _abgge := d.DecodeElement(_fedcc.FlatTx, &_fbaee); _abgge != nil {
					return _abgge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fedcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _gfed := d.DecodeElement(_fedcc.ExtLst, &_fbaee); _gfed != nil {
					return _gfed
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fbaee.Name)
				if _gbdeg := d.Skip(); _gbdeg != nil {
					return _gbdeg
				}
			}
		case _b.EndElement:
			break _gbfdd
		case _b.CharData:
		}
	}
	return nil
}
func (_faedc *CT_TablePartStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_faaaaa:
	for {
		_ccdaa, _ececb := d.Token()
		if _ececb != nil {
			return _ececb
		}
		switch _gbba := _ccdaa.(type) {
		case _b.StartElement:
			switch _gbba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}:
				_faedc.TcTxStyle = NewCT_TableStyleTextStyle()
				if _abfg := d.DecodeElement(_faedc.TcTxStyle, &_gbba); _abfg != nil {
					return _abfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}:
				_faedc.TcStyle = NewCT_TableStyleCellStyle()
				if _baca := d.DecodeElement(_faedc.TcStyle, &_gbba); _baca != nil {
					return _baca
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gbba.Name)
				if _dccab := d.Skip(); _dccab != nil {
					return _dccab
				}
			}
		case _b.EndElement:
			break _faaaaa
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Cell3D and its children
func (_cgdd *CT_Cell3D) Validate() error {
	return _cgdd.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D")
}

// Validate validates the EG_Media and its children
func (_gfcec *EG_Media) Validate() error {
	return _gfcec.ValidateWithPath("\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061")
}

// Validate validates the CT_PatternFillProperties and its children
func (_eabfb *CT_PatternFillProperties) Validate() error {
	return _eabfb.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TextBodyProperties and its children
func (_ggace *CT_TextBodyProperties) Validate() error {
	return _ggace.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_abaeb ST_PresetPatternVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abaeb.String(), start)
}
func NewCT_BaseStylesOverride() *CT_BaseStylesOverride {
	_bedf := &CT_BaseStylesOverride{}
	return _bedf
}

// Validate validates the CT_TextParagraph and its children
func (_ddffc *CT_TextParagraph) Validate() error {
	return _ddffc.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

const (
	ST_BevelPresetTypeUnset        ST_BevelPresetType = 0
	ST_BevelPresetTypeRelaxedInset ST_BevelPresetType = 1
	ST_BevelPresetTypeCircle       ST_BevelPresetType = 2
	ST_BevelPresetTypeSlope        ST_BevelPresetType = 3
	ST_BevelPresetTypeCross        ST_BevelPresetType = 4
	ST_BevelPresetTypeAngle        ST_BevelPresetType = 5
	ST_BevelPresetTypeSoftRound    ST_BevelPresetType = 6
	ST_BevelPresetTypeConvex       ST_BevelPresetType = 7
	ST_BevelPresetTypeCoolSlant    ST_BevelPresetType = 8
	ST_BevelPresetTypeDivot        ST_BevelPresetType = 9
	ST_BevelPresetTypeRiblet       ST_BevelPresetType = 10
	ST_BevelPresetTypeHardEdge     ST_BevelPresetType = 11
	ST_BevelPresetTypeArtDeco      ST_BevelPresetType = 12
)
const (
	ST_EffectContainerTypeUnset ST_EffectContainerType = 0
	ST_EffectContainerTypeSib   ST_EffectContainerType = 1
	ST_EffectContainerTypeTree  ST_EffectContainerType = 2
)

// ValidateWithPath validates the CT_SoftEdgesEffect and its children, prefixing error messages with path
func (_dgba *CT_SoftEdgesEffect) ValidateWithPath(path string) error {
	if _dgba.RadAttr < 0 {
		return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dgba.RadAttr)
	}
	if _dgba.RadAttr > 27273042316900 {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, _dgba.RadAttr)
	}
	return nil
}
func (_dgff *CT_HslColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0075\u0065"}, Value: _bb.Sprintf("\u0025\u0076", _dgff.HueAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _dgff.SatAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0075\u006d"}, Value: _bb.Sprintf("\u0025\u0076", _dgff.LumAttr)})
	e.EncodeToken(start)
	if _dgff.EG_ColorTransform != nil {
		for _, _bedaa := range _dgff.EG_ColorTransform {
			_bedaa.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dafd *CT_BaseStylesOverride) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_efa:
	for {
		_daag, _bcee := d.Token()
		if _bcee != nil {
			return _bcee
		}
		switch _befd := _daag.(type) {
		case _b.StartElement:
			switch _befd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_dafd.ClrScheme = NewCT_ColorScheme()
				if _ggdf := d.DecodeElement(_dafd.ClrScheme, &_befd); _ggdf != nil {
					return _ggdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_dafd.FontScheme = NewCT_FontScheme()
				if _eced := d.DecodeElement(_dafd.FontScheme, &_befd); _eced != nil {
					return _eced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_dafd.FmtScheme = NewCT_StyleMatrix()
				if _ceeg := d.DecodeElement(_dafd.FmtScheme, &_befd); _ceeg != nil {
					return _ceeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0020\u0025\u0076", _befd.Name)
				if _cffg := d.Skip(); _cffg != nil {
					return _cffg
				}
			}
		case _b.EndElement:
			break _efa
		case _b.CharData:
		}
	}
	return nil
}
func (_fgggb *ST_LineEndType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgggb = 0
	case "\u006e\u006f\u006e\u0065":
		*_fgggb = 1
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fgggb = 2
	case "\u0073t\u0065\u0061\u006c\u0074\u0068":
		*_fgggb = 3
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_fgggb = 4
	case "\u006f\u0076\u0061\u006c":
		*_fgggb = 5
	case "\u0061\u0072\u0072o\u0077":
		*_fgggb = 6
	}
	return nil
}
func (_cfbec *CT_Path2DArcTo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0052"}, Value: _bb.Sprintf("\u0025\u0076", _cfbec.WRAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0052"}, Value: _bb.Sprintf("\u0025\u0076", _cfbec.HRAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0041n\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _cfbec.StAngAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0077\u0041n\u0067"}, Value: _bb.Sprintf("\u0025\u0076", _cfbec.SwAngAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_FillModeProperties and its children
func (_abacg *EG_FillModeProperties) Validate() error {
	return _abacg.ValidateWithPath("E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TableProperties and its children
func (_fddc *CT_TableProperties) Validate() error {
	return _fddc.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_GvmlGroupShape and its children
func (_gaggf *CT_GvmlGroupShape) Validate() error {
	return _gaggf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065")
}
func (_bccbcc ST_DgmBuildStep) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgefgg := _b.Attr{}
	_cgefgg.Name = name
	switch _bccbcc {
	case ST_DgmBuildStepUnset:
		_cgefgg.Value = ""
	case ST_DgmBuildStepSp:
		_cgefgg.Value = "\u0073\u0070"
	case ST_DgmBuildStepBg:
		_cgefgg.Value = "\u0062\u0067"
	}
	return _cgefgg, nil
}

// ValidateWithPath validates the CT_FlatText and its children, prefixing error messages with path
func (_gecb *CT_FlatText) ValidateWithPath(path string) error {
	if _gecb.ZAttr != nil {
		if _cbcab := _gecb.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _cbcab != nil {
			return _cbcab
		}
	}
	return nil
}

// Validate validates the CT_ConnectionSiteList and its children
func (_abgfg *CT_ConnectionSiteList) Validate() error {
	return _abgfg.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074")
}
func (_aceeb *CT_GvmlPictureNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_eggce := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_aceeb.CNvPr, _eggce)
	_defec := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_aceeb.CNvPicPr, _defec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abegfg *ST_PresetCameraType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abegfg = 0
	case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
		*_abegfg = 1
	case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_abegfg = 2
	case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 3
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
		*_abegfg = 4
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
		*_abegfg = 5
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 6
	case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_abegfg = 7
	case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_abegfg = 8
	case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 9
	case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
		*_abegfg = 10
	case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
		*_abegfg = 11
	case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
		*_abegfg = 12
	case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
		*_abegfg = 13
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
		*_abegfg = 14
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
		*_abegfg = 15
	case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
		*_abegfg = 16
	case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_abegfg = 17
	case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
		*_abegfg = 18
	case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
		*_abegfg = 19
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
		*_abegfg = 20
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
		*_abegfg = 21
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
		*_abegfg = 22
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
		*_abegfg = 23
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
		*_abegfg = 24
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
		*_abegfg = 25
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
		*_abegfg = 26
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
		*_abegfg = 27
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
		*_abegfg = 28
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
		*_abegfg = 29
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
		*_abegfg = 30
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
		*_abegfg = 31
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
		*_abegfg = 32
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
		*_abegfg = 33
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
		*_abegfg = 34
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
		*_abegfg = 35
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
		*_abegfg = 36
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
		*_abegfg = 37
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
		*_abegfg = 38
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
		*_abegfg = 39
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
		*_abegfg = 40
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_abegfg = 41
	case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 42
	case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
		*_abegfg = 43
	case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 44
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
		*_abegfg = 45
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_abegfg = 46
	case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 47
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
		*_abegfg = 48
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
		*_abegfg = 49
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
		*_abegfg = 50
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
		*_abegfg = 51
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
		*_abegfg = 52
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
		*_abegfg = 53
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
		*_abegfg = 54
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_abegfg = 55
	case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
		*_abegfg = 56
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
		*_abegfg = 57
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
		*_abegfg = 58
	case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_abegfg = 59
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
		*_abegfg = 60
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
		*_abegfg = 61
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
		*_abegfg = 62
	}
	return nil
}
func NewCT_ComplementTransform() *CT_ComplementTransform {
	_aaeg := &CT_ComplementTransform{}
	return _aaeg
}

// Validate validates the CT_SchemeColor and its children
func (_cgfe *CT_SchemeColor) Validate() error {
	return _cgfe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_ConnectionSiteList and its children, prefixing error messages with path
func (_agdfc *CT_ConnectionSiteList) ValidateWithPath(path string) error {
	for _fegg, _bfaga := range _agdfc.Cxn {
		if _cdeg := _bfaga.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0078\u006e\u005b\u0025\u0064\u005d", path, _fegg)); _cdeg != nil {
			return _cdeg
		}
	}
	return nil
}
func (_acedd *CT_GvmlConnectorNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_abaee := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_acedd.CNvPr, _abaee)
	_edadd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_acedd.CNvCxnSpPr, _edadd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextBulletSizePercent() *CT_TextBulletSizePercent {
	_aacfb := &CT_TextBulletSizePercent{}
	_aacfb.ValAttr = "\u0031\u0030\u0030\u0025"
	return _aacfb
}
func (_aeeabe ST_TextFontAlignType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aeeabe.String(), start)
}

type CT_AnimationGraphicalObjectBuildProperties struct {
	BldDgm   *CT_AnimationDgmBuildProperties
	BldChart *CT_AnimationChartBuildProperties
}
type ST_PresetCameraType byte

// ValidateWithPath validates the CT_PolarAdjustHandle and its children, prefixing error messages with path
func (_efadb *CT_PolarAdjustHandle) ValidateWithPath(path string) error {
	if _efadb.MinRAttr != nil {
		if _beeaf := _efadb.MinRAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0052\u0041\u0074\u0074r"); _beeaf != nil {
			return _beeaf
		}
	}
	if _efadb.MaxRAttr != nil {
		if _aabg := _efadb.MaxRAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0052\u0041\u0074\u0074r"); _aabg != nil {
			return _aabg
		}
	}
	if _efadb.MinAngAttr != nil {
		if _gdfbb := _efadb.MinAngAttr.ValidateWithPath(path + "/\u004d\u0069\u006e\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _gdfbb != nil {
			return _gdfbb
		}
	}
	if _efadb.MaxAngAttr != nil {
		if _afgdb := _efadb.MaxAngAttr.ValidateWithPath(path + "/\u004d\u0061\u0078\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _afgdb != nil {
			return _afgdb
		}
	}
	if _acdg := _efadb.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _acdg != nil {
		return _acdg
	}
	return nil
}
func (_gefba ST_TextVerticalType) String() string {
	switch _gefba {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	case 3:
		return "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case 4:
		return "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case 5:
		return "\u0065\u0061\u0056\u0065\u0072\u0074"
	case 6:
		return "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case 7:
		return "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return ""
}
func NewCT_AudioCD() *CT_AudioCD {
	_cag := &CT_AudioCD{}
	_cag.St = NewCT_AudioCDTime()
	_cag.End = NewCT_AudioCDTime()
	return _cag
}

// Validate validates the CT_ColorMappingOverride and its children
func (_afee *CT_ColorMappingOverride) Validate() error {
	return _afee.ValidateWithPath("\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}
func (_ecgff *CT_GeomGuideList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dggdb:
	for {
		_cabbb, _bbgb := d.Token()
		if _bbgb != nil {
			return _bbgb
		}
		switch _dgbd := _cabbb.(type) {
		case _b.StartElement:
			switch _dgbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}:
				_geag := NewCT_GeomGuide()
				if _eggc := d.DecodeElement(_geag, &_dgbd); _eggc != nil {
					return _eggc
				}
				_ecgff.Gd = append(_ecgff.Gd, _geag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _dgbd.Name)
				if _dfbf := d.Skip(); _dfbf != nil {
					return _dfbf
				}
			}
		case _b.EndElement:
			break _dggdb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextUnderlineFillFollowText and its children
func (_fefdbg *CT_TextUnderlineFillFollowText) Validate() error {
	return _fefdbg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

type CT_RegularTextRun struct {
	RPr *CT_TextCharacterProperties
	T   string
}

func (_ebab *CT_Path2DQuadBezierTo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdcea:
	for {
		_aageg, _fffg := d.Token()
		if _fffg != nil {
			return _fffg
		}
		switch _gcbd := _aageg.(type) {
		case _b.StartElement:
			switch _gcbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_cdggf := NewCT_AdjPoint2D()
				if _ecbba := d.DecodeElement(_cdggf, &_gcbd); _ecbba != nil {
					return _ecbba
				}
				_ebab.Pt = append(_ebab.Pt, _cdggf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u0051\u0075\u0061\u0064\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _gcbd.Name)
				if _ccdeb := d.Skip(); _ccdeb != nil {
					return _ccdeb
				}
			}
		case _b.EndElement:
			break _bdcea
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ConnectorLocking and its children
func (_daee *CT_ConnectorLocking) Validate() error {
	return _daee.ValidateWithPath("\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

type CT_TableProperties struct {
	RtlAttr      *bool
	FirstRowAttr *bool
	FirstColAttr *bool
	LastRowAttr  *bool
	LastColAttr  *bool
	BandRowAttr  *bool
	BandColAttr  *bool
	NoFill       *CT_NoFillProperties
	SolidFill    *CT_SolidColorFillProperties
	GradFill     *CT_GradientFillProperties
	BlipFill     *CT_BlipFillProperties
	PattFill     *CT_PatternFillProperties
	GrpFill      *CT_GroupFillProperties
	EffectLst    *CT_EffectList
	EffectDag    *CT_EffectContainer
	Choice       *CT_TablePropertiesChoice
	ExtLst       *CT_OfficeArtExtensionList
}

const (
	ST_PresetPatternValUnset      ST_PresetPatternVal = 0
	ST_PresetPatternValPct5       ST_PresetPatternVal = 1
	ST_PresetPatternValPct10      ST_PresetPatternVal = 2
	ST_PresetPatternValPct20      ST_PresetPatternVal = 3
	ST_PresetPatternValPct25      ST_PresetPatternVal = 4
	ST_PresetPatternValPct30      ST_PresetPatternVal = 5
	ST_PresetPatternValPct40      ST_PresetPatternVal = 6
	ST_PresetPatternValPct50      ST_PresetPatternVal = 7
	ST_PresetPatternValPct60      ST_PresetPatternVal = 8
	ST_PresetPatternValPct70      ST_PresetPatternVal = 9
	ST_PresetPatternValPct75      ST_PresetPatternVal = 10
	ST_PresetPatternValPct80      ST_PresetPatternVal = 11
	ST_PresetPatternValPct90      ST_PresetPatternVal = 12
	ST_PresetPatternValHorz       ST_PresetPatternVal = 13
	ST_PresetPatternValVert       ST_PresetPatternVal = 14
	ST_PresetPatternValLtHorz     ST_PresetPatternVal = 15
	ST_PresetPatternValLtVert     ST_PresetPatternVal = 16
	ST_PresetPatternValDkHorz     ST_PresetPatternVal = 17
	ST_PresetPatternValDkVert     ST_PresetPatternVal = 18
	ST_PresetPatternValNarHorz    ST_PresetPatternVal = 19
	ST_PresetPatternValNarVert    ST_PresetPatternVal = 20
	ST_PresetPatternValDashHorz   ST_PresetPatternVal = 21
	ST_PresetPatternValDashVert   ST_PresetPatternVal = 22
	ST_PresetPatternValCross      ST_PresetPatternVal = 23
	ST_PresetPatternValDnDiag     ST_PresetPatternVal = 24
	ST_PresetPatternValUpDiag     ST_PresetPatternVal = 25
	ST_PresetPatternValLtDnDiag   ST_PresetPatternVal = 26
	ST_PresetPatternValLtUpDiag   ST_PresetPatternVal = 27
	ST_PresetPatternValDkDnDiag   ST_PresetPatternVal = 28
	ST_PresetPatternValDkUpDiag   ST_PresetPatternVal = 29
	ST_PresetPatternValWdDnDiag   ST_PresetPatternVal = 30
	ST_PresetPatternValWdUpDiag   ST_PresetPatternVal = 31
	ST_PresetPatternValDashDnDiag ST_PresetPatternVal = 32
	ST_PresetPatternValDashUpDiag ST_PresetPatternVal = 33
	ST_PresetPatternValDiagCross  ST_PresetPatternVal = 34
	ST_PresetPatternValSmCheck    ST_PresetPatternVal = 35
	ST_PresetPatternValLgCheck    ST_PresetPatternVal = 36
	ST_PresetPatternValSmGrid     ST_PresetPatternVal = 37
	ST_PresetPatternValLgGrid     ST_PresetPatternVal = 38
	ST_PresetPatternValDotGrid    ST_PresetPatternVal = 39
	ST_PresetPatternValSmConfetti ST_PresetPatternVal = 40
	ST_PresetPatternValLgConfetti ST_PresetPatternVal = 41
	ST_PresetPatternValHorzBrick  ST_PresetPatternVal = 42
	ST_PresetPatternValDiagBrick  ST_PresetPatternVal = 43
	ST_PresetPatternValSolidDmnd  ST_PresetPatternVal = 44
	ST_PresetPatternValOpenDmnd   ST_PresetPatternVal = 45
	ST_PresetPatternValDotDmnd    ST_PresetPatternVal = 46
	ST_PresetPatternValPlaid      ST_PresetPatternVal = 47
	ST_PresetPatternValSphere     ST_PresetPatternVal = 48
	ST_PresetPatternValWeave      ST_PresetPatternVal = 49
	ST_PresetPatternValDivot      ST_PresetPatternVal = 50
	ST_PresetPatternValShingle    ST_PresetPatternVal = 51
	ST_PresetPatternValWave       ST_PresetPatternVal = 52
	ST_PresetPatternValTrellis    ST_PresetPatternVal = 53
	ST_PresetPatternValZigZag     ST_PresetPatternVal = 54
)

type ST_ChartBuildStep byte

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_dcdg *CT_Connection) ValidateWithPath(path string) error { return nil }

const (
	ST_BlackWhiteModeUnset      ST_BlackWhiteMode = 0
	ST_BlackWhiteModeClr        ST_BlackWhiteMode = 1
	ST_BlackWhiteModeAuto       ST_BlackWhiteMode = 2
	ST_BlackWhiteModeGray       ST_BlackWhiteMode = 3
	ST_BlackWhiteModeLtGray     ST_BlackWhiteMode = 4
	ST_BlackWhiteModeInvGray    ST_BlackWhiteMode = 5
	ST_BlackWhiteModeGrayWhite  ST_BlackWhiteMode = 6
	ST_BlackWhiteModeBlackGray  ST_BlackWhiteMode = 7
	ST_BlackWhiteModeBlackWhite ST_BlackWhiteMode = 8
	ST_BlackWhiteModeBlack      ST_BlackWhiteMode = 9
	ST_BlackWhiteModeWhite      ST_BlackWhiteMode = 10
	ST_BlackWhiteModeHidden     ST_BlackWhiteMode = 11
)

func (_babd *CT_DuotoneEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	for _, _fadc := range _babd.EG_ColorChoice {
		_fadc.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Connection and its children
func (_gdadb *CT_Connection) Validate() error {
	return _gdadb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_NonVisualConnectorProperties and its children, prefixing error messages with path
func (_aeffd *CT_NonVisualConnectorProperties) ValidateWithPath(path string) error {
	if _aeffd.CxnSpLocks != nil {
		if _bfgg := _aeffd.CxnSpLocks.ValidateWithPath(path + "/\u0043\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _bfgg != nil {
			return _bfgg
		}
	}
	if _aeffd.StCxn != nil {
		if _cdaae := _aeffd.StCxn.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u0078\u006e"); _cdaae != nil {
			return _cdaae
		}
	}
	if _aeffd.EndCxn != nil {
		if _cgba := _aeffd.EndCxn.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0078\u006e"); _cgba != nil {
			return _cgba
		}
	}
	if _aeffd.ExtLst != nil {
		if _gdcefg := _aeffd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdcefg != nil {
			return _gdcefg
		}
	}
	return nil
}
func NewCT_GroupShapeProperties() *CT_GroupShapeProperties {
	_eaaaf := &CT_GroupShapeProperties{}
	return _eaaaf
}

type CT_AlphaModulateFixedEffect struct{ AmtAttr *ST_PositivePercentage }

func (_edcee *ST_AnimationDgmBuildType) ValidateWithPath(path string) error {
	_fcfac := []string{}
	if _edcee.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_fcfac = append(_fcfac, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _edcee.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		_fcfac = append(_fcfac, "\u0053\u0054\u005f\u0041n\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006dO\u006el\u0079\u0042\u0075\u0069\u006c\u0064\u0054y\u0070\u0065")
	}
	if len(_fcfac) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fcfac)
	}
	return nil
}
func (_aadba *ST_TextAnchoringType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egbgc, _fbegc := d.Token()
	if _fbegc != nil {
		return _fbegc
	}
	if _agcaa, _abcfd := _egbgc.(_b.EndElement); _abcfd && _agcaa.Name == start.Name {
		*_aadba = 1
		return nil
	}
	if _adadgc, _ccfdeb := _egbgc.(_b.CharData); !_ccfdeb {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egbgc)
	} else {
		switch string(_adadgc) {
		case "":
			*_aadba = 0
		case "\u0074":
			*_aadba = 1
		case "\u0063\u0074\u0072":
			*_aadba = 2
		case "\u0062":
			*_aadba = 3
		case "\u006a\u0075\u0073\u0074":
			*_aadba = 4
		case "\u0064\u0069\u0073\u0074":
			*_aadba = 5
		}
	}
	_egbgc, _fbegc = d.Token()
	if _fbegc != nil {
		return _fbegc
	}
	if _feebb, _ebaagc := _egbgc.(_b.EndElement); _ebaagc && _feebb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egbgc)
}
func NewCT_ThemeableLineStyle() *CT_ThemeableLineStyle {
	_dcafc := &CT_ThemeableLineStyle{}
	return _dcafc
}
func (_aegccc *ST_Coordinate) ValidateWithPath(path string) error {
	_baedcg := []string{}
	if _aegccc.ST_CoordinateUnqualified != nil {
		_baedcg = append(_baedcg, "\u0053T\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065U\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _aegccc.ST_UniversalMeasure != nil {
		_baedcg = append(_baedcg, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_baedcg) > 1 {
		return _bb.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _baedcg)
	}
	return nil
}

// Validate validates the EG_LineFillProperties and its children
func (_cdbgec *EG_LineFillProperties) Validate() error {
	return _cdbgec.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_Path2D and its children, prefixing error messages with path
func (_cefcc *CT_Path2D) ValidateWithPath(path string) error {
	if _cefcc.WAttr != nil {
		if *_cefcc.WAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cefcc.WAttr)
		}
		if *_cefcc.WAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cefcc.WAttr)
		}
	}
	if _cefcc.HAttr != nil {
		if *_cefcc.HAttr < 0 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cefcc.HAttr)
		}
		if *_cefcc.HAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cefcc.HAttr)
		}
	}
	if _fgac := _cefcc.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _fgac != nil {
		return _fgac
	}
	for _ccceb, _agbbc := range _cefcc.Close {
		if _gdbde := _agbbc.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fC\u006c\u006f\u0073\u0065\u005b\u0025\u0064\u005d", path, _ccceb)); _gdbde != nil {
			return _gdbde
		}
	}
	for _ffcg, _fbfbd := range _cefcc.MoveTo {
		if _gfece := _fbfbd.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u004d\u006f\u0076\u0065\u0054\u006f\u005b\u0025\u0064\u005d", path, _ffcg)); _gfece != nil {
			return _gfece
		}
	}
	for _feeea, _fcaa := range _cefcc.LnTo {
		if _gdgg := _fcaa.ValidateWithPath(_bb.Sprintf("%\u0073\u002f\u004c\u006e\u0054\u006f\u005b\u0025\u0064\u005d", path, _feeea)); _gdgg != nil {
			return _gdgg
		}
	}
	for _eegb, _ebbda := range _cefcc.ArcTo {
		if _ccggf := _ebbda.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002fA\u0072\u0063\u0054\u006f\u005b\u0025\u0064\u005d", path, _eegb)); _ccggf != nil {
			return _ccggf
		}
	}
	for _egea, _dgbe := range _cefcc.QuadBezTo {
		if _gabad := _dgbe.ValidateWithPath(_bb.Sprintf("\u0025\u0073/\u0051\u0075\u0061d\u0042\u0065\u007a\u0054\u006f\u005b\u0025\u0064\u005d", path, _egea)); _gabad != nil {
			return _gabad
		}
	}
	for _gddcc, _agbbcf := range _cefcc.CubicBezTo {
		if _feagb := _agbbcf.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054o\u005b\u0025\u0064\u005d", path, _gddcc)); _feagb != nil {
			return _feagb
		}
	}
	return nil
}
func (_dgbgc *CT_TextListStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bggfb:
	for {
		_cadbd, _aedgd := d.Token()
		if _aedgd != nil {
			return _aedgd
		}
		switch _gcgcc := _cadbd.(type) {
		case _b.StartElement:
			switch _gcgcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}:
				_dgbgc.DefPPr = NewCT_TextParagraphProperties()
				if _caabcc := d.DecodeElement(_dgbgc.DefPPr, &_gcgcc); _caabcc != nil {
					return _caabcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}:
				_dgbgc.Lvl1pPr = NewCT_TextParagraphProperties()
				if _bdec := d.DecodeElement(_dgbgc.Lvl1pPr, &_gcgcc); _bdec != nil {
					return _bdec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}:
				_dgbgc.Lvl2pPr = NewCT_TextParagraphProperties()
				if _dcdad := d.DecodeElement(_dgbgc.Lvl2pPr, &_gcgcc); _dcdad != nil {
					return _dcdad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}:
				_dgbgc.Lvl3pPr = NewCT_TextParagraphProperties()
				if _degd := d.DecodeElement(_dgbgc.Lvl3pPr, &_gcgcc); _degd != nil {
					return _degd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}:
				_dgbgc.Lvl4pPr = NewCT_TextParagraphProperties()
				if _ggcdce := d.DecodeElement(_dgbgc.Lvl4pPr, &_gcgcc); _ggcdce != nil {
					return _ggcdce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}:
				_dgbgc.Lvl5pPr = NewCT_TextParagraphProperties()
				if _aebbb := d.DecodeElement(_dgbgc.Lvl5pPr, &_gcgcc); _aebbb != nil {
					return _aebbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}:
				_dgbgc.Lvl6pPr = NewCT_TextParagraphProperties()
				if _gggb := d.DecodeElement(_dgbgc.Lvl6pPr, &_gcgcc); _gggb != nil {
					return _gggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}:
				_dgbgc.Lvl7pPr = NewCT_TextParagraphProperties()
				if _ggfbca := d.DecodeElement(_dgbgc.Lvl7pPr, &_gcgcc); _ggfbca != nil {
					return _ggfbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}:
				_dgbgc.Lvl8pPr = NewCT_TextParagraphProperties()
				if _cdfdb := d.DecodeElement(_dgbgc.Lvl8pPr, &_gcgcc); _cdfdb != nil {
					return _cdfdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}:
				_dgbgc.Lvl9pPr = NewCT_TextParagraphProperties()
				if _bcegg := d.DecodeElement(_dgbgc.Lvl9pPr, &_gcgcc); _bcegg != nil {
					return _bcegg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgbgc.ExtLst = NewCT_OfficeArtExtensionList()
				if _accee := d.DecodeElement(_dgbgc.ExtLst, &_gcgcc); _accee != nil {
					return _accee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025v", _gcgcc.Name)
				if _ddcbc := d.Skip(); _ddcbc != nil {
					return _ddcbc
				}
			}
		case _b.EndElement:
			break _bggfb
		case _b.CharData:
		}
	}
	return nil
}
func (_ggaaf *ST_BlendMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_facfed, _dafeb := d.Token()
	if _dafeb != nil {
		return _dafeb
	}
	if _ccagag, _baagb := _facfed.(_b.EndElement); _baagb && _ccagag.Name == start.Name {
		*_ggaaf = 1
		return nil
	}
	if _afcdgc, _egfce := _facfed.(_b.CharData); !_egfce {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _facfed)
	} else {
		switch string(_afcdgc) {
		case "":
			*_ggaaf = 0
		case "\u006f\u0076\u0065\u0072":
			*_ggaaf = 1
		case "\u006d\u0075\u006c\u0074":
			*_ggaaf = 2
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_ggaaf = 3
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_ggaaf = 4
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_ggaaf = 5
		}
	}
	_facfed, _dafeb = d.Token()
	if _dafeb != nil {
		return _dafeb
	}
	if _egdfb, _gfdbd := _facfed.(_b.EndElement); _gfdbd && _egdfb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _facfed)
}
func (_geafe *ST_LightRigType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbbbb, _bgffd := d.Token()
	if _bgffd != nil {
		return _bgffd
	}
	if _afgde, _bceeg := _gbbbb.(_b.EndElement); _bceeg && _afgde.Name == start.Name {
		*_geafe = 1
		return nil
	}
	if _dfcag, _fddba := _gbbbb.(_b.CharData); !_fddba {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbbbb)
	} else {
		switch string(_dfcag) {
		case "":
			*_geafe = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
			*_geafe = 1
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
			*_geafe = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
			*_geafe = 3
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
			*_geafe = 4
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
			*_geafe = 5
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
			*_geafe = 6
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
			*_geafe = 7
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
			*_geafe = 8
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
			*_geafe = 9
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
			*_geafe = 10
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
			*_geafe = 11
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
			*_geafe = 12
		case "\u0074h\u0072\u0065\u0065\u0050\u0074":
			*_geafe = 13
		case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
			*_geafe = 14
		case "\u0073\u006f\u0066\u0074":
			*_geafe = 15
		case "\u0068\u0061\u0072s\u0068":
			*_geafe = 16
		case "\u0066\u006c\u006fo\u0064":
			*_geafe = 17
		case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
			*_geafe = 18
		case "\u006do\u0072\u006e\u0069\u006e\u0067":
			*_geafe = 19
		case "\u0073u\u006e\u0072\u0069\u0073\u0065":
			*_geafe = 20
		case "\u0073\u0075\u006e\u0073\u0065\u0074":
			*_geafe = 21
		case "\u0063\u0068\u0069\u006c\u006c\u0079":
			*_geafe = 22
		case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
			*_geafe = 23
		case "\u0066\u006c\u0061\u0074":
			*_geafe = 24
		case "\u0074\u0077\u006fP\u0074":
			*_geafe = 25
		case "\u0067\u006c\u006f\u0077":
			*_geafe = 26
		case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
			*_geafe = 27
		}
	}
	_gbbbb, _bgffd = d.Token()
	if _bgffd != nil {
		return _bgffd
	}
	if _cgfcgf, _bgbbe := _gbbbb.(_b.EndElement); _bgbbe && _cgfcgf.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbbbb)
}

type CT_SystemColor struct {
	ValAttr           ST_SystemColorVal
	LastClrAttr       *string
	EG_ColorTransform []*EG_ColorTransform
}

func NewCT_BaseStyles() *CT_BaseStyles {
	_cgf := &CT_BaseStyles{}
	_cgf.ClrScheme = NewCT_ColorScheme()
	_cgf.FontScheme = NewCT_FontScheme()
	_cgf.FmtScheme = NewCT_StyleMatrix()
	return _cgf
}

type ST_PathFillMode byte

// ValidateWithPath validates the CT_TextBulletSizePercent and its children, prefixing error messages with path
func (_bfgd *CT_TextBulletSizePercent) ValidateWithPath(path string) error {
	if !ST_TextBulletSizePercentPatternRe.MatchString(_bfgd.ValAttr) {
		return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, ST_TextBulletSizePercentPatternRe, _bfgd.ValAttr)
	}
	return nil
}
func (_bebcf ST_BlipCompression) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bebcf.String(), start)
}
func (_gfbbc ST_TextVertOverflowType) Validate() error { return _gfbbc.ValidateWithPath("") }

// Validate validates the CT_AlphaOutsetEffect and its children
func (_bcd *CT_AlphaOutsetEffect) Validate() error {
	return _bcd.ValidateWithPath("C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074")
}

// ValidateWithPath validates the CT_TableProperties and its children, prefixing error messages with path
func (_dbcgf *CT_TableProperties) ValidateWithPath(path string) error {
	if _dbcgf.NoFill != nil {
		if _bafd := _dbcgf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bafd != nil {
			return _bafd
		}
	}
	if _dbcgf.SolidFill != nil {
		if _ccddc := _dbcgf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ccddc != nil {
			return _ccddc
		}
	}
	if _dbcgf.GradFill != nil {
		if _ebff := _dbcgf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _ebff != nil {
			return _ebff
		}
	}
	if _dbcgf.BlipFill != nil {
		if _fefbe := _dbcgf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fefbe != nil {
			return _fefbe
		}
	}
	if _dbcgf.PattFill != nil {
		if _gcadc := _dbcgf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gcadc != nil {
			return _gcadc
		}
	}
	if _dbcgf.GrpFill != nil {
		if _decd := _dbcgf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _decd != nil {
			return _decd
		}
	}
	if _dbcgf.EffectLst != nil {
		if _ebeabg := _dbcgf.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ebeabg != nil {
			return _ebeabg
		}
	}
	if _dbcgf.EffectDag != nil {
		if _bdbbd := _dbcgf.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bdbbd != nil {
			return _bdbbd
		}
	}
	if _dbcgf.Choice != nil {
		if _cbdfa := _dbcgf.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _cbdfa != nil {
			return _cbdfa
		}
	}
	if _dbcgf.ExtLst != nil {
		if _ffefd := _dbcgf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffefd != nil {
			return _ffefd
		}
	}
	return nil
}

// Validate validates the CT_ShapeProperties and its children
func (_bfgfb *CT_ShapeProperties) Validate() error {
	return _bfgfb.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func (_cgfcd *CT_Point2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feaba := range start.Attr {
		if _feaba.Name.Local == "\u0078" {
			_gefag, _cceef := ParseUnionST_Coordinate(_feaba.Value)
			if _cceef != nil {
				return _cceef
			}
			_cgfcd.XAttr = _gefag
			continue
		}
		if _feaba.Name.Local == "\u0079" {
			_bcaf, _cageg := ParseUnionST_Coordinate(_feaba.Value)
			if _cageg != nil {
				return _cageg
			}
			_cgfcd.YAttr = _bcaf
			continue
		}
	}
	for {
		_agca, _bfedg := d.Token()
		if _bfedg != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044\u003a\u0020%\u0073", _bfedg)
		}
		if _dgabb, _adgag := _agca.(_b.EndElement); _adgag && _dgabb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbgeb *CT_PositiveFixedPercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _fbgeb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_LightRigType byte

func (_gcbf *CT_FontCollection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cddgdc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
	e.EncodeElement(_gcbf.Latin, _cddgdc)
	_ecbfa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0061"}}
	e.EncodeElement(_gcbf.Ea, _ecbfa)
	_aebc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0073"}}
	e.EncodeElement(_gcbf.Cs, _aebc)
	if _gcbf.Font != nil {
		_dfdfg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		for _, _fdgbd := range _gcbf.Font {
			e.EncodeElement(_fdgbd, _dfdfg)
		}
	}
	if _gcbf.ExtLst != nil {
		_ccgce := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcbf.ExtLst, _ccgce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GvmlShape() *CT_GvmlShape {
	_bdege := &CT_GvmlShape{}
	_bdege.NvSpPr = NewCT_GvmlShapeNonVisual()
	_bdege.SpPr = NewCT_ShapeProperties()
	return _bdege
}
func NewCT_TextParagraphProperties() *CT_TextParagraphProperties {
	_gccbg := &CT_TextParagraphProperties{}
	return _gccbg
}

// Validate validates the CT_SphereCoords and its children
func (_fdcge *CT_SphereCoords) Validate() error {
	return _fdcge.ValidateWithPath("\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073")
}
func (_bgbag *CT_Scene3D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgbag.Camera = NewCT_Camera()
	_bgbag.LightRig = NewCT_LightRig()
_aaded:
	for {
		_bbda, _fccc := d.Token()
		if _fccc != nil {
			return _fccc
		}
		switch _eccgd := _bbda.(type) {
		case _b.StartElement:
			switch _eccgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}:
				if _cgafba := d.DecodeElement(_bgbag.Camera, &_eccgd); _cgafba != nil {
					return _cgafba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				if _cggca := d.DecodeElement(_bgbag.LightRig, &_eccgd); _cggca != nil {
					return _cggca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}:
				_bgbag.Backdrop = NewCT_Backdrop()
				if _aggfg := d.DecodeElement(_bgbag.Backdrop, &_eccgd); _aggfg != nil {
					return _aggfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgbag.ExtLst = NewCT_OfficeArtExtensionList()
				if _gfgdf := d.DecodeElement(_bgbag.ExtLst, &_eccgd); _gfgdf != nil {
					return _gfgdf
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0065\u006e\u0065\u0033\u0044\u0020\u0025\u0076", _eccgd.Name)
				if _cbcad := d.Skip(); _cbcad != nil {
					return _cbcad
				}
			}
		case _b.EndElement:
			break _aaded
		case _b.CharData:
		}
	}
	return nil
}
func (_ddage *CT_TextBulletTypefaceFollowText) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_afdgc, _fabeb := d.Token()
		if _fabeb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _fabeb)
		}
		if _ebdcc, _gfbf := _afdgc.(_b.EndElement); _gfbf && _ebdcc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorMapping and its children, prefixing error messages with path
func (_cfgd *CT_ColorMapping) ValidateWithPath(path string) error {
	if _cfgd.Bg1Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fB\u0067\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eage := _cfgd.Bg1Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0031\u0041\u0074\u0074\u0072"); _eage != nil {
		return _eage
	}
	if _cfgd.Tx1Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fT\u0078\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bfgcd := _cfgd.Tx1Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0031\u0041\u0074\u0074\u0072"); _bfgcd != nil {
		return _bfgcd
	}
	if _cfgd.Bg2Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fB\u0067\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bdef := _cfgd.Bg2Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0032\u0041\u0074\u0074\u0072"); _bdef != nil {
		return _bdef
	}
	if _cfgd.Tx2Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fT\u0078\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _edfda := _cfgd.Tx2Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0032\u0041\u0074\u0074\u0072"); _edfda != nil {
		return _edfda
	}
	if _cfgd.Accent1Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0031\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _becfe := _cfgd.Accent1Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0031\u0041\u0074\u0074\u0072"); _becfe != nil {
		return _becfe
	}
	if _cfgd.Accent2Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0032\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _cagb := _cfgd.Accent2Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0032\u0041\u0074\u0074\u0072"); _cagb != nil {
		return _cagb
	}
	if _cfgd.Accent3Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0033\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _fcggf := _cfgd.Accent3Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0033\u0041\u0074\u0074\u0072"); _fcggf != nil {
		return _fcggf
	}
	if _cfgd.Accent4Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0034\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gbgc := _cfgd.Accent4Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0034\u0041\u0074\u0074\u0072"); _gbgc != nil {
		return _gbgc
	}
	if _cfgd.Accent5Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0035\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _cadb := _cfgd.Accent5Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0035\u0041\u0074\u0074\u0072"); _cadb != nil {
		return _cadb
	}
	if _cfgd.Accent6Attr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0036\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _add := _cfgd.Accent6Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0036\u0041\u0074\u0074\u0072"); _add != nil {
		return _add
	}
	if _cfgd.HlinkAttr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0048\u006c\u0069n\u006b\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _dfde := _cfgd.HlinkAttr.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _dfde != nil {
		return _dfde
	}
	if _cfgd.FolHlinkAttr == ST_ColorSchemeIndexUnset {
		return _bb.Errorf("\u0025\u0073/F\u006f\u006c\u0048l\u0069\u006e\u006b\u0041ttr\u0020is\u0020\u0061\u0020\u006d\u0061\u006e\u0064at\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bffc := _cfgd.FolHlinkAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006c\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _bffc != nil {
		return _bffc
	}
	if _cfgd.ExtLst != nil {
		if _ddff := _cfgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddff != nil {
			return _ddff
		}
	}
	return nil
}

// ValidateWithPath validates the EG_LineDashProperties and its children, prefixing error messages with path
func (_ecgda *EG_LineDashProperties) ValidateWithPath(path string) error {
	if _ecgda.PrstDash != nil {
		if _bcebea := _ecgda.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _bcebea != nil {
			return _bcebea
		}
	}
	if _ecgda.CustDash != nil {
		if _fabbb := _ecgda.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _fabbb != nil {
			return _fabbb
		}
	}
	return nil
}
func NewEG_Text3D() *EG_Text3D { _gbbca := &EG_Text3D{}; return _gbbca }
func NewCT_ColorSchemeAndMapping() *CT_ColorSchemeAndMapping {
	_ecbg := &CT_ColorSchemeAndMapping{}
	_ecbg.ClrScheme = NewCT_ColorScheme()
	return _ecbg
}

// Validate validates the CT_HslColor and its children
func (_gegag *CT_HslColor) Validate() error {
	return _gegag.ValidateWithPath("C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072")
}

type ST_LineEndWidth byte

func (_dgcea ST_LightRigType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dgcea.String(), start)
}

type CT_SphereCoords struct {
	LatAttr int32
	LonAttr int32
	RevAttr int32
}

func NewCT_TableCell() *CT_TableCell { _gddb := &CT_TableCell{}; return _gddb }
func (_gafe *CT_LineJoinRound) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_gadcc, _febc := d.Token()
		if _febc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0052\u006f\u0075\u006e\u0064\u003a \u0025\u0073", _febc)
		}
		if _adcf, _bffe := _gadcc.(_b.EndElement); _bffe && _adcf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BlurEffect and its children, prefixing error messages with path
func (_cbbfg *CT_BlurEffect) ValidateWithPath(path string) error {
	if _cbbfg.RadAttr != nil {
		if *_cbbfg.RadAttr < 0 {
			return _bb.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cbbfg.RadAttr)
		}
		if *_cbbfg.RadAttr > 27273042316900 {
			return _bb.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_cbbfg.RadAttr)
		}
	}
	return nil
}
func NewThemeOverride() *ThemeOverride {
	_aedcf := &ThemeOverride{}
	_aedcf.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
	return _aedcf
}
func (_dbccf *CT_EffectProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdcd:
	for {
		_ceab, _agaad := d.Token()
		if _agaad != nil {
			return _agaad
		}
		switch _efddab := _ceab.(type) {
		case _b.StartElement:
			switch _efddab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dbccf.EffectLst = NewCT_EffectList()
				if _gccaa := d.DecodeElement(_dbccf.EffectLst, &_efddab); _gccaa != nil {
					return _gccaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dbccf.EffectDag = NewCT_EffectContainer()
				if _bfec := d.DecodeElement(_dbccf.EffectDag, &_efddab); _bfec != nil {
					return _bfec
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _efddab.Name)
				if _bbee := d.Skip(); _bbee != nil {
					return _bbee
				}
			}
		case _b.EndElement:
			break _fdcd
		case _b.CharData:
		}
	}
	return nil
}
func (_bggfe *CT_LuminanceEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bggfe.BrightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0072\u0069\u0067\u0068\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_bggfe.BrightAttr)})
	}
	if _bggfe.ContrastAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_bggfe.ContrastAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlGroupShape struct {
	NvGrpSpPr *CT_GvmlGroupShapeNonVisual
	GrpSpPr   *CT_GroupShapeProperties
	Choice    []*CT_GvmlGroupShapeChoice
	ExtLst    *CT_OfficeArtExtensionList
}

func NewCT_ShapeLocking() *CT_ShapeLocking { _ecgde := &CT_ShapeLocking{}; return _ecgde }
func (_dcbaf *CT_TableStyleList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcbaf.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bbceg := range start.Attr {
		if _bbceg.Name.Local == "\u0064\u0065\u0066" {
			_bagb, _bcdaaa := _bbceg.Value, error(nil)
			if _bcdaaa != nil {
				return _bcdaaa
			}
			_dcbaf.DefAttr = _bagb
			continue
		}
	}
_beegc:
	for {
		_fbagf, _eeabf := d.Token()
		if _eeabf != nil {
			return _eeabf
		}
		switch _ceada := _fbagf.(type) {
		case _b.StartElement:
			switch _ceada.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_cfgcde := NewCT_TableStyle()
				if _afaaa := d.DecodeElement(_cfgcde, &_ceada); _afaaa != nil {
					return _afaaa
				}
				_dcbaf.TblStyle = append(_dcbaf.TblStyle, _cfgcde)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ceada.Name)
				if _fcdgg := d.Skip(); _fcdgg != nil {
					return _fcdgg
				}
			}
		case _b.EndElement:
			break _beegc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ShapeLocking and its children, prefixing error messages with path
func (_dceff *CT_ShapeLocking) ValidateWithPath(path string) error {
	if _dceff.ExtLst != nil {
		if _cbcgaf := _dceff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbcgaf != nil {
			return _cbcgaf
		}
	}
	return nil
}
func NewCT_GammaTransform() *CT_GammaTransform         { _fgfb := &CT_GammaTransform{}; return _fgfb }
func NewCT_AlphaCeilingEffect() *CT_AlphaCeilingEffect { _bfc := &CT_AlphaCeilingEffect{}; return _bfc }

// ValidateWithPath validates the EG_OfficeArtExtensionList and its children, prefixing error messages with path
func (_dagced *EG_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _dgbdbg, _abccdd := range _dagced.Ext {
		if _geebe := _abccdd.ValidateWithPath(_bb.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _dgbdbg)); _geebe != nil {
			return _geebe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObject and its children, prefixing error messages with path
func (_acaa *CT_GraphicalObject) ValidateWithPath(path string) error {
	if _gbdf := _acaa.GraphicData.ValidateWithPath(path + "\u002f\u0047\u0072a\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"); _gbdf != nil {
		return _gbdf
	}
	return nil
}

// Validate validates the CT_PresetColor and its children
func (_ebfga *CT_PresetColor) Validate() error {
	return _ebfga.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072")
}
func NewCT_AnimationElementChoice() *CT_AnimationElementChoice {
	_aacg := &CT_AnimationElementChoice{}
	return _aacg
}

type CT_NonVisualContentPartProperties struct {
	IsCommentAttr *bool
	CpLocks       *CT_ContentPartLocking
	ExtLst        *CT_OfficeArtExtensionList
}

func NewAG_Blob() *AG_Blob { _ed := &AG_Blob{}; return _ed }

type CT_TableGrid struct{ GridCol []*CT_TableCol }

func (_gccbgf *CT_Transform2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _defcab := range start.Attr {
		if _defcab.Name.Local == "\u0072\u006f\u0074" {
			_bcfee, _aecgb := _a.ParseInt(_defcab.Value, 10, 32)
			if _aecgb != nil {
				return _aecgb
			}
			_dcfed := int32(_bcfee)
			_gccbgf.RotAttr = &_dcfed
			continue
		}
		if _defcab.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_gfbee, _dcagg := _a.ParseBool(_defcab.Value)
			if _dcagg != nil {
				return _dcagg
			}
			_gccbgf.FlipHAttr = &_gfbee
			continue
		}
		if _defcab.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_ebccg, _abfge := _a.ParseBool(_defcab.Value)
			if _abfge != nil {
				return _abfge
			}
			_gccbgf.FlipVAttr = &_ebccg
			continue
		}
	}
_cagbdd:
	for {
		_efgbf, _geedg := d.Token()
		if _geedg != nil {
			return _geedg
		}
		switch _geged := _efgbf.(type) {
		case _b.StartElement:
			switch _geged.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_gccbgf.Off = NewCT_Point2D()
				if _bbac := d.DecodeElement(_gccbgf.Off, &_geged); _bbac != nil {
					return _bbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_gccbgf.Ext = NewCT_PositiveSize2D()
				if _efdbf := d.DecodeElement(_gccbgf.Ext, &_geged); _efdbf != nil {
					return _efdbf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d2\u0044\u0020\u0025\u0076", _geged.Name)
				if _edada := d.Skip(); _edada != nil {
					return _edada
				}
			}
		case _b.EndElement:
			break _cagbdd
		case _b.CharData:
		}
	}
	return nil
}
func (_aagdda *EG_ShadeProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aagdda.Lin != nil {
		_agfbg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_aagdda.Lin, _agfbg)
	}
	if _aagdda.Path != nil {
		_dbfbfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_aagdda.Path, _dbfbfb)
	}
	return nil
}

// Validate validates the EG_FillProperties and its children
func (_feega *EG_FillProperties) Validate() error {
	return _feega.ValidateWithPath("\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func (_cdbfd *CT_BlendEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_aaaa, _ceag := _cdbfd.BlendAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _ceag != nil {
		return _ceag
	}
	start.Attr = append(start.Attr, _aaaa)
	e.EncodeToken(start)
	_bffg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_cdbfd.Cont, _bffg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfadac *ST_TextFontAlignType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eccea, _gggfb := d.Token()
	if _gggfb != nil {
		return _gggfb
	}
	if _fgdc, _eaeadbd := _eccea.(_b.EndElement); _eaeadbd && _fgdc.Name == start.Name {
		*_cfadac = 1
		return nil
	}
	if _daffb, _eefeg := _eccea.(_b.CharData); !_eefeg {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eccea)
	} else {
		switch string(_daffb) {
		case "":
			*_cfadac = 0
		case "\u0061\u0075\u0074\u006f":
			*_cfadac = 1
		case "\u0074":
			*_cfadac = 2
		case "\u0063\u0074\u0072":
			*_cfadac = 3
		case "\u0062\u0061\u0073\u0065":
			*_cfadac = 4
		case "\u0062":
			*_cfadac = 5
		}
	}
	_eccea, _gggfb = d.Token()
	if _gggfb != nil {
		return _gggfb
	}
	if _fddge, _fbede := _eccea.(_b.EndElement); _fbede && _fddge.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eccea)
}
func (_cfgf *CT_AnimationElementChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfgf.Dgm != nil {
		_bded := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0064g\u006d"}}
		e.EncodeElement(_cfgf.Dgm, _bded)
	}
	if _cfgf.Chart != nil {
		_gcff := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_cfgf.Chart, _gcff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffdab ST_TextShapeType) Validate() error { return _ffdab.ValidateWithPath("") }
func (_dgfe *CT_GvmlTextShapeChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdagf:
	for {
		_faeb, _gfce := d.Token()
		if _gfce != nil {
			return _gfce
		}
		switch _beaec := _faeb.(type) {
		case _b.StartElement:
			switch _beaec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_dgfe.UseSpRect = NewCT_GvmlUseShapeRectangle()
				if _aabf := d.DecodeElement(_dgfe.UseSpRect, &_beaec); _aabf != nil {
					return _aabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_dgfe.Xfrm = NewCT_Transform2D()
				if _ebae := d.DecodeElement(_dgfe.Xfrm, &_beaec); _ebae != nil {
					return _ebae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0076\u006d\u006cT\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _beaec.Name)
				if _adedd := d.Skip(); _adedd != nil {
					return _adedd
				}
			}
		case _b.EndElement:
			break _gdagf
		case _b.CharData:
		}
	}
	return nil
}
func (_gfebf ST_TileFlipMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_edegea := _b.Attr{}
	_edegea.Name = name
	switch _gfebf {
	case ST_TileFlipModeUnset:
		_edegea.Value = ""
	case ST_TileFlipModeNone:
		_edegea.Value = "\u006e\u006f\u006e\u0065"
	case ST_TileFlipModeX:
		_edegea.Value = "\u0078"
	case ST_TileFlipModeY:
		_edegea.Value = "\u0079"
	case ST_TileFlipModeXy:
		_edegea.Value = "\u0078\u0079"
	}
	return _edegea, nil
}

// ValidateWithPath validates the CT_PathShadeProperties and its children, prefixing error messages with path
func (_ebbc *CT_PathShadeProperties) ValidateWithPath(path string) error {
	if _cecdga := _ebbc.PathAttr.ValidateWithPath(path + "\u002fP\u0061\u0074\u0068\u0041\u0074\u0074r"); _cecdga != nil {
		return _cecdga
	}
	if _ebbc.FillToRect != nil {
		if _aadgc := _ebbc.FillToRect.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"); _aadgc != nil {
			return _aadgc
		}
	}
	return nil
}
func (_dgcde *CT_EffectReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _bb.Sprintf("\u0025\u0076", _dgcde.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_FillModeProperties and its children, prefixing error messages with path
func (_dfedb *EG_FillModeProperties) ValidateWithPath(path string) error {
	if _dfedb.Tile != nil {
		if _gcedg := _dfedb.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _gcedg != nil {
			return _gcedg
		}
	}
	if _dfedb.Stretch != nil {
		if _eefdd := _dfedb.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _eefdd != nil {
			return _eefdd
		}
	}
	return nil
}
func NewCT_TableStyle() *CT_TableStyle {
	_gbabgb := &CT_TableStyle{}
	_gbabgb.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _gbabgb
}

// Validate validates the CT_QuickTimeFile and its children
func (_ffaf *CT_QuickTimeFile) Validate() error {
	return _ffaf.ValidateWithPath("\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065")
}
func NewCT_LineEndProperties() *CT_LineEndProperties {
	_ffbad := &CT_LineEndProperties{}
	return _ffbad
}
func (_ccafe *CT_SystemColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_efbdg, _egffd := _ccafe.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _egffd != nil {
		return _egffd
	}
	start.Attr = append(start.Attr, _efbdg)
	if _ccafe.LastClrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0073\u0074\u0043\u006c\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_ccafe.LastClrAttr)})
	}
	e.EncodeToken(start)
	if _ccafe.EG_ColorTransform != nil {
		for _, _edafc := range _ccafe.EG_ColorTransform {
			_edafc.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TileFlipMode byte

func (_abaca *CT_FillOverlayEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abaca.BlendAttr = ST_BlendMode(1)
	for _, _dfge := range start.Attr {
		if _dfge.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_abaca.BlendAttr.UnmarshalXMLAttr(_dfge)
			continue
		}
	}
_aafa:
	for {
		_fgecc, _ggeg := d.Token()
		if _ggeg != nil {
			return _ggeg
		}
		switch _feff := _fgecc.(type) {
		case _b.StartElement:
			switch _feff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_abaca.NoFill = NewCT_NoFillProperties()
				if _ebef := d.DecodeElement(_abaca.NoFill, &_feff); _ebef != nil {
					return _ebef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_abaca.SolidFill = NewCT_SolidColorFillProperties()
				if _fgbcd := d.DecodeElement(_abaca.SolidFill, &_feff); _fgbcd != nil {
					return _fgbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_abaca.GradFill = NewCT_GradientFillProperties()
				if _ffffc := d.DecodeElement(_abaca.GradFill, &_feff); _ffffc != nil {
					return _ffffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_abaca.BlipFill = NewCT_BlipFillProperties()
				if _adfa := d.DecodeElement(_abaca.BlipFill, &_feff); _adfa != nil {
					return _adfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_abaca.PattFill = NewCT_PatternFillProperties()
				if _egadd := d.DecodeElement(_abaca.PattFill, &_feff); _egadd != nil {
					return _egadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_abaca.GrpFill = NewCT_GroupFillProperties()
				if _bfga := d.DecodeElement(_abaca.GrpFill, &_feff); _bfga != nil {
					return _bfga
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _feff.Name)
				if _cfgg := d.Skip(); _cfgg != nil {
					return _cfgg
				}
			}
		case _b.EndElement:
			break _aafa
		case _b.CharData:
		}
	}
	return nil
}
func (_bfcg *CT_FillStyleList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_abbcb:
	for {
		_cabb, _gfag := d.Token()
		if _gfag != nil {
			return _gfag
		}
		switch _bacge := _cabb.(type) {
		case _b.StartElement:
			switch _bacge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_egfb := NewEG_FillProperties()
				_egfb.NoFill = NewCT_NoFillProperties()
				if _feab := d.DecodeElement(_egfb.NoFill, &_bacge); _feab != nil {
					return _feab
				}
				_bfcg.EG_FillProperties = append(_bfcg.EG_FillProperties, _egfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dgga := NewEG_FillProperties()
				_dgga.SolidFill = NewCT_SolidColorFillProperties()
				if _cgfae := d.DecodeElement(_dgga.SolidFill, &_bacge); _cgfae != nil {
					return _cgfae
				}
				_bfcg.EG_FillProperties = append(_bfcg.EG_FillProperties, _dgga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dbccg := NewEG_FillProperties()
				_dbccg.GradFill = NewCT_GradientFillProperties()
				if _dca := d.DecodeElement(_dbccg.GradFill, &_bacge); _dca != nil {
					return _dca
				}
				_bfcg.EG_FillProperties = append(_bfcg.EG_FillProperties, _dbccg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_efba := NewEG_FillProperties()
				_efba.BlipFill = NewCT_BlipFillProperties()
				if _fcfg := d.DecodeElement(_efba.BlipFill, &_bacge); _fcfg != nil {
					return _fcfg
				}
				_bfcg.EG_FillProperties = append(_bfcg.EG_FillProperties, _efba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fgfac := NewEG_FillProperties()
				_fgfac.PattFill = NewCT_PatternFillProperties()
				if _dggb := d.DecodeElement(_fgfac.PattFill, &_bacge); _dggb != nil {
					return _dggb
				}
				_bfcg.EG_FillProperties = append(_bfcg.EG_FillProperties, _fgfac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cfdb := NewEG_FillProperties()
				_cfdb.GrpFill = NewCT_GroupFillProperties()
				if _dgdcb := d.DecodeElement(_cfdb.GrpFill, &_bacge); _dgdcb != nil {
					return _dgdcb
				}
				_bfcg.EG_FillProperties = append(_bfcg.EG_FillProperties, _cfdb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _bacge.Name)
				if _agade := d.Skip(); _agade != nil {
					return _agade
				}
			}
		case _b.EndElement:
			break _abbcb
		case _b.CharData:
		}
	}
	return nil
}
func (_bcca *CT_LineJoinRound) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edede ST_TextVertOverflowType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edede.String(), start)
}
func (_ceede ST_PresetPatternVal) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ebdcda := _b.Attr{}
	_ebdcda.Name = name
	switch _ceede {
	case ST_PresetPatternValUnset:
		_ebdcda.Value = ""
	case ST_PresetPatternValPct5:
		_ebdcda.Value = "\u0070\u0063\u0074\u0035"
	case ST_PresetPatternValPct10:
		_ebdcda.Value = "\u0070\u0063\u00741\u0030"
	case ST_PresetPatternValPct20:
		_ebdcda.Value = "\u0070\u0063\u00742\u0030"
	case ST_PresetPatternValPct25:
		_ebdcda.Value = "\u0070\u0063\u00742\u0035"
	case ST_PresetPatternValPct30:
		_ebdcda.Value = "\u0070\u0063\u00743\u0030"
	case ST_PresetPatternValPct40:
		_ebdcda.Value = "\u0070\u0063\u00744\u0030"
	case ST_PresetPatternValPct50:
		_ebdcda.Value = "\u0070\u0063\u00745\u0030"
	case ST_PresetPatternValPct60:
		_ebdcda.Value = "\u0070\u0063\u00746\u0030"
	case ST_PresetPatternValPct70:
		_ebdcda.Value = "\u0070\u0063\u00747\u0030"
	case ST_PresetPatternValPct75:
		_ebdcda.Value = "\u0070\u0063\u00747\u0035"
	case ST_PresetPatternValPct80:
		_ebdcda.Value = "\u0070\u0063\u00748\u0030"
	case ST_PresetPatternValPct90:
		_ebdcda.Value = "\u0070\u0063\u00749\u0030"
	case ST_PresetPatternValHorz:
		_ebdcda.Value = "\u0068\u006f\u0072\u007a"
	case ST_PresetPatternValVert:
		_ebdcda.Value = "\u0076\u0065\u0072\u0074"
	case ST_PresetPatternValLtHorz:
		_ebdcda.Value = "\u006c\u0074\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValLtVert:
		_ebdcda.Value = "\u006c\u0074\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDkHorz:
		_ebdcda.Value = "\u0064\u006b\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDkVert:
		_ebdcda.Value = "\u0064\u006b\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValNarHorz:
		_ebdcda.Value = "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValNarVert:
		_ebdcda.Value = "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDashHorz:
		_ebdcda.Value = "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDashVert:
		_ebdcda.Value = "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValCross:
		_ebdcda.Value = "\u0063\u0072\u006fs\u0073"
	case ST_PresetPatternValDnDiag:
		_ebdcda.Value = "\u0064\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValUpDiag:
		_ebdcda.Value = "\u0075\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtDnDiag:
		_ebdcda.Value = "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtUpDiag:
		_ebdcda.Value = "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkDnDiag:
		_ebdcda.Value = "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkUpDiag:
		_ebdcda.Value = "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdDnDiag:
		_ebdcda.Value = "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdUpDiag:
		_ebdcda.Value = "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashDnDiag:
		_ebdcda.Value = "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashUpDiag:
		_ebdcda.Value = "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDiagCross:
		_ebdcda.Value = "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case ST_PresetPatternValSmCheck:
		_ebdcda.Value = "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValLgCheck:
		_ebdcda.Value = "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValSmGrid:
		_ebdcda.Value = "\u0073\u006d\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValLgGrid:
		_ebdcda.Value = "\u006c\u0067\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValDotGrid:
		_ebdcda.Value = "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValSmConfetti:
		_ebdcda.Value = "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValLgConfetti:
		_ebdcda.Value = "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValHorzBrick:
		_ebdcda.Value = "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValDiagBrick:
		_ebdcda.Value = "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValSolidDmnd:
		_ebdcda.Value = "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case ST_PresetPatternValOpenDmnd:
		_ebdcda.Value = "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValDotDmnd:
		_ebdcda.Value = "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValPlaid:
		_ebdcda.Value = "\u0070\u006c\u0061i\u0064"
	case ST_PresetPatternValSphere:
		_ebdcda.Value = "\u0073\u0070\u0068\u0065\u0072\u0065"
	case ST_PresetPatternValWeave:
		_ebdcda.Value = "\u0077\u0065\u0061v\u0065"
	case ST_PresetPatternValDivot:
		_ebdcda.Value = "\u0064\u0069\u0076o\u0074"
	case ST_PresetPatternValShingle:
		_ebdcda.Value = "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case ST_PresetPatternValWave:
		_ebdcda.Value = "\u0077\u0061\u0076\u0065"
	case ST_PresetPatternValTrellis:
		_ebdcda.Value = "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case ST_PresetPatternValZigZag:
		_ebdcda.Value = "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return _ebdcda, nil
}
func (_eggdf *CT_Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eggdf.TblGrid = NewCT_TableGrid()
_cddebg:
	for {
		_bfeag, _abge := d.Token()
		if _abge != nil {
			return _abge
		}
		switch _eggb := _bfeag.(type) {
		case _b.StartElement:
			switch _eggb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_eggdf.TblPr = NewCT_TableProperties()
				if _eccdg := d.DecodeElement(_eggdf.TblPr, &_eggb); _eccdg != nil {
					return _eccdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _ceafa := d.DecodeElement(_eggdf.TblGrid, &_eggb); _ceafa != nil {
					return _ceafa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_gcfbf := NewCT_TableRow()
				if _ccbdg := d.DecodeElement(_gcfbf, &_eggb); _ccbdg != nil {
					return _ccbdg
				}
				_eggdf.Tr = append(_eggdf.Tr, _gcfbf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _eggb.Name)
				if _bcaab := d.Skip(); _bcaab != nil {
					return _bcaab
				}
			}
		case _b.EndElement:
			break _cddebg
		case _b.CharData:
		}
	}
	return nil
}
func (_bafceb ST_Coordinate32) String() string {
	if _bafceb.ST_Coordinate32Unqualified != nil {
		return _bb.Sprintf("\u0025\u0076", *_bafceb.ST_Coordinate32Unqualified)
	}
	if _bafceb.ST_UniversalMeasure != nil {
		return _bb.Sprintf("\u0025\u0076", *_bafceb.ST_UniversalMeasure)
	}
	return ""
}
func (_ffbdad ST_CompoundLine) ValidateWithPath(path string) error {
	switch _ffbdad {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffbdad))
	}
	return nil
}

// Validate validates the CT_TableCell and its children
func (_ccgf *CT_TableCell) Validate() error {
	return _ccgf.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c")
}
func ParseUnionST_FixedPercentage(s string) (ST_FixedPercentage, error) {
	_gdgdd := ST_FixedPercentage{}
	if _eb.ST_FixedPercentagePatternRe.MatchString(s) {
		_gdgdd.ST_FixedPercentage = &ST_Percentage{}
		_gdgdd.ST_FixedPercentage.ST_Percentage = &s
	} else {
		_aefbd, _ffbca := _a.ParseInt(s, 10, 64)
		if _ffbca != nil {
			return _gdgdd, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _ffbca)
		}
		_agaae := int32(_aefbd)
		_gdgdd.ST_FixedPercentageDecimal = &_agaae
	}
	return _gdgdd, nil
}
func (_gaadda ST_PresetShadowVal) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbbda := _b.Attr{}
	_cbbda.Name = name
	switch _gaadda {
	case ST_PresetShadowValUnset:
		_cbbda.Value = ""
	case ST_PresetShadowValShdw1:
		_cbbda.Value = "\u0073\u0068\u0064w\u0031"
	case ST_PresetShadowValShdw2:
		_cbbda.Value = "\u0073\u0068\u0064w\u0032"
	case ST_PresetShadowValShdw3:
		_cbbda.Value = "\u0073\u0068\u0064w\u0033"
	case ST_PresetShadowValShdw4:
		_cbbda.Value = "\u0073\u0068\u0064w\u0034"
	case ST_PresetShadowValShdw5:
		_cbbda.Value = "\u0073\u0068\u0064w\u0035"
	case ST_PresetShadowValShdw6:
		_cbbda.Value = "\u0073\u0068\u0064w\u0036"
	case ST_PresetShadowValShdw7:
		_cbbda.Value = "\u0073\u0068\u0064w\u0037"
	case ST_PresetShadowValShdw8:
		_cbbda.Value = "\u0073\u0068\u0064w\u0038"
	case ST_PresetShadowValShdw9:
		_cbbda.Value = "\u0073\u0068\u0064w\u0039"
	case ST_PresetShadowValShdw10:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0030"
	case ST_PresetShadowValShdw11:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0031"
	case ST_PresetShadowValShdw12:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0032"
	case ST_PresetShadowValShdw13:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0033"
	case ST_PresetShadowValShdw14:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0034"
	case ST_PresetShadowValShdw15:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0035"
	case ST_PresetShadowValShdw16:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0036"
	case ST_PresetShadowValShdw17:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0037"
	case ST_PresetShadowValShdw18:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0038"
	case ST_PresetShadowValShdw19:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0031\u0039"
	case ST_PresetShadowValShdw20:
		_cbbda.Value = "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return _cbbda, nil
}

// ValidateWithPath validates the EG_TextUnderlineFill and its children, prefixing error messages with path
func (_dbece *EG_TextUnderlineFill) ValidateWithPath(path string) error {
	if _dbece.UFillTx != nil {
		if _afedd := _dbece.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _afedd != nil {
			return _afedd
		}
	}
	if _dbece.UFill != nil {
		if _daffe := _dbece.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _daffe != nil {
			return _daffe
		}
	}
	return nil
}

// Validate validates the EG_LineJoinProperties and its children
func (_dcdbe *EG_LineJoinProperties) Validate() error {
	return _dcdbe.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gada ST_TextVerticalType) ValidateWithPath(path string) error {
	switch _gada {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gada))
	}
	return nil
}
func (_bdegf *EG_ColorChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_acedb:
	for {
		_cbfcfc, _dacae := d.Token()
		if _dacae != nil {
			return _dacae
		}
		switch _cefdg := _cbfcfc.(type) {
		case _b.StartElement:
			switch _cefdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_bdegf.ScrgbClr = NewCT_ScRgbColor()
				if _fgfcc := d.DecodeElement(_bdegf.ScrgbClr, &_cefdg); _fgfcc != nil {
					return _fgfcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_bdegf.SrgbClr = NewCT_SRgbColor()
				if _aebff := d.DecodeElement(_bdegf.SrgbClr, &_cefdg); _aebff != nil {
					return _aebff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_bdegf.HslClr = NewCT_HslColor()
				if _aagdd := d.DecodeElement(_bdegf.HslClr, &_cefdg); _aagdd != nil {
					return _aagdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_bdegf.SysClr = NewCT_SystemColor()
				if _bcfeea := d.DecodeElement(_bdegf.SysClr, &_cefdg); _bcfeea != nil {
					return _bcfeea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_bdegf.SchemeClr = NewCT_SchemeColor()
				if _deagc := d.DecodeElement(_bdegf.SchemeClr, &_cefdg); _deagc != nil {
					return _deagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_bdegf.PrstClr = NewCT_PresetColor()
				if _gcdgf := d.DecodeElement(_bdegf.PrstClr, &_cefdg); _gcdgf != nil {
					return _gcdgf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076", _cefdg.Name)
				if _ffdgd := d.Skip(); _ffdgd != nil {
					return _ffdgd
				}
			}
		case _b.EndElement:
			break _acedb
		case _b.CharData:
		}
	}
	return nil
}

type CT_TableCol struct {
	WAttr  ST_Coordinate
	ExtLst *CT_OfficeArtExtensionList
}

func (_dbade *CT_GeomGuide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdbe := range start.Attr {
		if _bdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_becg, _efage := _bdbe.Value, error(nil)
			if _efage != nil {
				return _efage
			}
			_dbade.NameAttr = _becg
			continue
		}
		if _bdbe.Name.Local == "\u0066\u006d\u006c\u0061" {
			_bafe, _dgfc := _bdbe.Value, error(nil)
			if _dgfc != nil {
				return _dgfc
			}
			_dbade.FmlaAttr = _bafe
			continue
		}
	}
	for {
		_ggeb, _gadb := d.Token()
		if _gadb != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065o\u006d\u0047\u0075\u0069\u0064\u0065\u003a\u0020\u0025\u0073", _gadb)
		}
		if _bddfd, _cgbe := _ggeb.(_b.EndElement); _cgbe && _bddfd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Path2D and its children
func (_degf *CT_Path2D) Validate() error {
	return _degf.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D")
}

// Validate validates the CT_VideoFile and its children
func (_aaccd *CT_VideoFile) Validate() error {
	return _aaccd.ValidateWithPath("\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065")
}

// Validate validates the CT_LineProperties and its children
func (_gcdfc *CT_LineProperties) Validate() error {
	return _gcdfc.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

type CT_LineJoinRound struct{}

// Validate validates the CT_NonVisualDrawingShapeProps and its children
func (_bffdb *CT_NonVisualDrawingShapeProps) Validate() error {
	return _bffdb.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073")
}
func (_bgda *CT_GvmlGraphicFrameNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgda.CNvPr = NewCT_NonVisualDrawingProps()
	_bgda.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
_bdfe:
	for {
		_egee, _gbdfc := d.Token()
		if _gbdfc != nil {
			return _gbdfc
		}
		switch _gdefd := _egee.(type) {
		case _b.StartElement:
			switch _gdefd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dgdfc := d.DecodeElement(_bgda.CNvPr, &_gdefd); _dgdfc != nil {
					return _dgdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _efddf := d.DecodeElement(_bgda.CNvGraphicFramePr, &_gdefd); _efddf != nil {
					return _efddf
				}
			default:
				_f.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004eon\u0056\u0069\u0073u\u0061\u006c\u0020\u0025\u0076", _gdefd.Name)
				if _dggff := d.Skip(); _dggff != nil {
					return _dggff
				}
			}
		case _b.EndElement:
			break _bdfe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextCharBullet and its children, prefixing error messages with path
func (_edbffg *CT_TextCharBullet) ValidateWithPath(path string) error { return nil }
func (_babgb *CT_TableStyleTextStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcbcf := range start.Attr {
		if _dcbcf.Name.Local == "\u0062" {
			_babgb.BAttr.UnmarshalXMLAttr(_dcbcf)
			continue
		}
		if _dcbcf.Name.Local == "\u0069" {
			_babgb.IAttr.UnmarshalXMLAttr(_dcbcf)
			continue
		}
	}
_efbc:
	for {
		_affba, _bdbdag := d.Token()
		if _bdbdag != nil {
			return _bdbdag
		}
		switch _dccae := _affba.(type) {
		case _b.StartElement:
			switch _dccae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_babgb.Font = NewCT_FontCollection()
				if _fcbb := d.DecodeElement(_babgb.Font, &_dccae); _fcbb != nil {
					return _fcbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_babgb.FontRef = NewCT_FontReference()
				if _gcbbg := d.DecodeElement(_babgb.FontRef, &_dccae); _gcbbg != nil {
					return _gcbbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_babgb.ScrgbClr = NewCT_ScRgbColor()
				if _caag := d.DecodeElement(_babgb.ScrgbClr, &_dccae); _caag != nil {
					return _caag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_babgb.SrgbClr = NewCT_SRgbColor()
				if _adfeb := d.DecodeElement(_babgb.SrgbClr, &_dccae); _adfeb != nil {
					return _adfeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_babgb.HslClr = NewCT_HslColor()
				if _bffbf := d.DecodeElement(_babgb.HslClr, &_dccae); _bffbf != nil {
					return _bffbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_babgb.SysClr = NewCT_SystemColor()
				if _bbcec := d.DecodeElement(_babgb.SysClr, &_dccae); _bbcec != nil {
					return _bbcec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_babgb.SchemeClr = NewCT_SchemeColor()
				if _adfgg := d.DecodeElement(_babgb.SchemeClr, &_dccae); _adfgg != nil {
					return _adfgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_babgb.PrstClr = NewCT_PresetColor()
				if _ffbbb := d.DecodeElement(_babgb.PrstClr, &_dccae); _ffbbb != nil {
					return _ffbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_babgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbbcd := d.DecodeElement(_babgb.ExtLst, &_dccae); _bbbcd != nil {
					return _bbbcd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _dccae.Name)
				if _bddea := d.Skip(); _bddea != nil {
					return _bddea
				}
			}
		case _b.EndElement:
			break _efbc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Tbl and its children, prefixing error messages with path
func (_bdaab *Tbl) ValidateWithPath(path string) error {
	if _gbgagc := _bdaab.CT_Table.ValidateWithPath(path); _gbgagc != nil {
		return _gbgagc
	}
	return nil
}

// ValidateWithPath validates the CT_AudioCDTime and its children, prefixing error messages with path
func (_bfac *CT_AudioCDTime) ValidateWithPath(path string) error { return nil }
func NewCT_BlipChoice() *CT_BlipChoice                           { _eeef := &CT_BlipChoice{}; return _eeef }

// ValidateWithPath validates the CT_PresetGeometry2D and its children, prefixing error messages with path
func (_gbgcb *CT_PresetGeometry2D) ValidateWithPath(path string) error {
	if _gbgcb.PrstAttr == ST_ShapeTypeUnset {
		return _bb.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dcebd := _gbgcb.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _dcebd != nil {
		return _dcebd
	}
	if _gbgcb.AvLst != nil {
		if _cacc := _gbgcb.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _cacc != nil {
			return _cacc
		}
	}
	return nil
}
func (_fafffc ST_TextCapsType) Validate() error { return _fafffc.ValidateWithPath("") }

// Validate validates the EG_Geometry and its children
func (_dgacf *EG_Geometry) Validate() error {
	return _dgacf.ValidateWithPath("E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}
func (_cgbga ST_TextAutonumberScheme) ValidateWithPath(path string) error {
	switch _cgbga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgbga))
	}
	return nil
}
func (_ggee *CT_Path2DLineTo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fcceg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_ggee.Pt, _fcceg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adeegc ST_TextWrappingType) String() string {
	switch _adeegc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return ""
}
func (_abecg *CT_FillProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _abecg.NoFill != nil {
		_dcgad := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abecg.NoFill, _dcgad)
	}
	if _abecg.SolidFill != nil {
		_abcc := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abecg.SolidFill, _abcc)
	}
	if _abecg.GradFill != nil {
		_gbab := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abecg.GradFill, _gbab)
	}
	if _abecg.BlipFill != nil {
		_affg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abecg.BlipFill, _affg)
	}
	if _abecg.PattFill != nil {
		_aegd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abecg.PattFill, _aegd)
	}
	if _abecg.GrpFill != nil {
		_ebcbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_abecg.GrpFill, _ebcbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egdgd *CT_TextBulletColorFollowText) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_fgacg, _fabfg := d.Token()
		if _fabfg != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006ce\u0074\u0043\u006f\u006c\u006f\u0072\u0046\u006f\u006c\u006cow\u0054\u0065\u0078t\u003a \u0025\u0073", _fabfg)
		}
		if _fffee, _cfdae := _fgacg.(_b.EndElement); _cfdae && _fffee.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_WholeE2oFormatting() *CT_WholeE2oFormatting {
	_cdbeg := &CT_WholeE2oFormatting{}
	return _cdbeg
}
func NewCT_ColorScheme() *CT_ColorScheme {
	_dcca := &CT_ColorScheme{}
	_dcca.Dk1 = NewCT_Color()
	_dcca.Lt1 = NewCT_Color()
	_dcca.Dk2 = NewCT_Color()
	_dcca.Lt2 = NewCT_Color()
	_dcca.Accent1 = NewCT_Color()
	_dcca.Accent2 = NewCT_Color()
	_dcca.Accent3 = NewCT_Color()
	_dcca.Accent4 = NewCT_Color()
	_dcca.Accent5 = NewCT_Color()
	_dcca.Accent6 = NewCT_Color()
	_dcca.Hlink = NewCT_Color()
	_dcca.FolHlink = NewCT_Color()
	return _dcca
}

// Validate validates the CT_GvmlShapeNonVisual and its children
func (_acgaa *CT_GvmlShapeNonVisual) Validate() error {
	return _acgaa.ValidateWithPath("C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}
func _bcgfg(_ceaga bool) uint8 {
	if _ceaga {
		return 1
	}
	return 0
}
func (_eaddc *CT_SphereCoords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaddc.LatAttr = 0
	_eaddc.LonAttr = 0
	_eaddc.RevAttr = 0
	for _, _feaabf := range start.Attr {
		if _feaabf.Name.Local == "\u006c\u0061\u0074" {
			_cgffe, _gcgba := _a.ParseInt(_feaabf.Value, 10, 32)
			if _gcgba != nil {
				return _gcgba
			}
			_eaddc.LatAttr = int32(_cgffe)
			continue
		}
		if _feaabf.Name.Local == "\u006c\u006f\u006e" {
			_cffd, _dffa := _a.ParseInt(_feaabf.Value, 10, 32)
			if _dffa != nil {
				return _dffa
			}
			_eaddc.LonAttr = int32(_cffd)
			continue
		}
		if _feaabf.Name.Local == "\u0072\u0065\u0076" {
			_bccbae, _aegbg := _a.ParseInt(_feaabf.Value, 10, 32)
			if _aegbg != nil {
				return _aegbg
			}
			_eaddc.RevAttr = int32(_bccbae)
			continue
		}
	}
	for {
		_bcfdc, _bggc := d.Token()
		if _bggc != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0070\u0068\u0065\u0072\u0065C\u006f\u006f\u0072d\u0073:\u0020\u0025\u0073", _bggc)
		}
		if _gfffb, _cbbd := _bcfdc.(_b.EndElement); _cbbd && _gfffb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcdef *CT_XYAdjustHandle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcdef.Pos = NewCT_AdjPoint2D()
	for _, _agedeb := range start.Attr {
		if _agedeb.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0058" {
			_bdbbe, _aabbb := _agedeb.Value, error(nil)
			if _aabbb != nil {
				return _aabbb
			}
			_dcdef.GdRefXAttr = &_bdbbe
			continue
		}
		if _agedeb.Name.Local == "\u006d\u0069\u006e\u0058" {
			_fdfdc, _agdbaa := ParseUnionST_AdjCoordinate(_agedeb.Value)
			if _agdbaa != nil {
				return _agdbaa
			}
			_dcdef.MinXAttr = &_fdfdc
			continue
		}
		if _agedeb.Name.Local == "\u006d\u0061\u0078\u0058" {
			_abgfc, _gecgeg := ParseUnionST_AdjCoordinate(_agedeb.Value)
			if _gecgeg != nil {
				return _gecgeg
			}
			_dcdef.MaxXAttr = &_abgfc
			continue
		}
		if _agedeb.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0059" {
			_fffecd, _cgeed := _agedeb.Value, error(nil)
			if _cgeed != nil {
				return _cgeed
			}
			_dcdef.GdRefYAttr = &_fffecd
			continue
		}
		if _agedeb.Name.Local == "\u006d\u0069\u006e\u0059" {
			_ggedg, _gcgab := ParseUnionST_AdjCoordinate(_agedeb.Value)
			if _gcgab != nil {
				return _gcgab
			}
			_dcdef.MinYAttr = &_ggedg
			continue
		}
		if _agedeb.Name.Local == "\u006d\u0061\u0078\u0059" {
			_dgcaa, _cafaa := ParseUnionST_AdjCoordinate(_agedeb.Value)
			if _cafaa != nil {
				return _cafaa
			}
			_dcdef.MaxYAttr = &_dgcaa
			continue
		}
	}
_bcbda:
	for {
		_dgdgg, _gcbaf := d.Token()
		if _gcbaf != nil {
			return _gcbaf
		}
		switch _fbcfd := _dgdgg.(type) {
		case _b.StartElement:
			switch _fbcfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _gafad := d.DecodeElement(_dcdef.Pos, &_fbcfd); _gafad != nil {
					return _gafad
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _fbcfd.Name)
				if _baagaf := d.Skip(); _baagaf != nil {
					return _baagaf
				}
			}
		case _b.EndElement:
			break _bcbda
		case _b.CharData:
		}
	}
	return nil
}

type ST_PresetLineDashVal byte

func (_cgggg *ST_TileFlipMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cgggg = 0
	case "\u006e\u006f\u006e\u0065":
		*_cgggg = 1
	case "\u0078":
		*_cgggg = 2
	case "\u0079":
		*_cgggg = 3
	case "\u0078\u0079":
		*_cgggg = 4
	}
	return nil
}

// Validate validates the CT_GrayscaleEffect and its children
func (_ddeeg *CT_GrayscaleEffect) Validate() error {
	return _ddeeg.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074")
}

type CT_PolarAdjustHandle struct {
	GdRefRAttr   *string
	MinRAttr     *ST_AdjCoordinate
	MaxRAttr     *ST_AdjCoordinate
	GdRefAngAttr *string
	MinAngAttr   *ST_AdjAngle
	MaxAngAttr   *ST_AdjAngle
	Pos          *CT_AdjPoint2D
}
type CT_TableCellBorderStyle struct {
	Left    *CT_ThemeableLineStyle
	Right   *CT_ThemeableLineStyle
	Top     *CT_ThemeableLineStyle
	Bottom  *CT_ThemeableLineStyle
	InsideH *CT_ThemeableLineStyle
	InsideV *CT_ThemeableLineStyle
	Tl2br   *CT_ThemeableLineStyle
	Tr2bl   *CT_ThemeableLineStyle
	ExtLst  *CT_OfficeArtExtensionList
}

func (_cabgbb *VideoFile) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"
	return _cabgbb.CT_VideoFile.MarshalXML(e, start)
}

type CT_AudioCDTime struct {
	TrackAttr uint8
	TimeAttr  *uint32
}

func (_eeccef ST_FontCollectionIndex) ValidateWithPath(path string) error {
	switch _eeccef {
	case 0, 1, 2, 3:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeccef))
	}
	return nil
}
func (_ggeeg *CT_TableStyleList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066"}, Value: _bb.Sprintf("\u0025\u0076", _ggeeg.DefAttr)})
	e.EncodeToken(start)
	if _ggeeg.TblStyle != nil {
		_gdeee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}}
		for _, _bbfef := range _ggeeg.TblStyle {
			e.EncodeElement(_bbfef, _gdeee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aebb *CT_ReflectionEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aebb.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.BlurRadAttr)})
	}
	if _aebb.StAAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0041"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.StAAttr)})
	}
	if _aebb.StPosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0050o\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.StPosAttr)})
	}
	if _aebb.EndAAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u0041"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.EndAAttr)})
	}
	if _aebb.EndPosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u0050\u006f\u0073"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.EndPosAttr)})
	}
	if _aebb.DistAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.DistAttr)})
	}
	if _aebb.DirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.DirAttr)})
	}
	if _aebb.FadeDirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066a\u0064\u0065\u0044\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.FadeDirAttr)})
	}
	if _aebb.SxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.SxAttr)})
	}
	if _aebb.SyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.SyAttr)})
	}
	if _aebb.KxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.KxAttr)})
	}
	if _aebb.KyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_aebb.KyAttr)})
	}
	if _aebb.AlgnAttr != ST_RectAlignmentUnset {
		_faaaa, _bcefa := _aebb.AlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _bcefa != nil {
			return _bcefa
		}
		start.Attr = append(start.Attr, _faaaa)
	}
	if _aebb.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_aebb.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Path2DClose struct{}

// ValidateWithPath validates the CT_SchemeColor and its children, prefixing error messages with path
func (_agbbb *CT_SchemeColor) ValidateWithPath(path string) error {
	if _agbbb.ValAttr == ST_SchemeColorValUnset {
		return _bb.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ffgb := _agbbb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ffgb != nil {
		return _ffgb
	}
	for _fbfdf, _dcdda := range _agbbb.EG_ColorTransform {
		if _fedg := _dcdda.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _fbfdf)); _fedg != nil {
			return _fedg
		}
	}
	return nil
}

type ThemeOverride struct{ CT_BaseStylesOverride }

func (_dbgfa ST_TextShapeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbgfa.String(), start)
}
func NewCT_GeomRect() *CT_GeomRect { _gdbea := &CT_GeomRect{}; return _gdbea }
func ParseUnionST_TextPoint(s string) (ST_TextPoint, error) {
	_cfbgbf := ST_TextPoint{}
	if _eb.ST_UniversalMeasurePatternRe.MatchString(s) {
		_cfbgbf.ST_UniversalMeasure = &s
	} else {
		_cegec, _cfedg := _a.ParseInt(s, 10, 32)
		if _cfedg != nil {
			return _cfbgbf, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cfedg)
		}
		_cbeff := int32(_cegec)
		_cfbgbf.ST_TextPointUnqualified = &_cbeff
	}
	return _cfbgbf, nil
}

type ST_FontCollectionIndex byte

func (_deae *CT_Path2DArcTo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgfcc := range start.Attr {
		if _dgfcc.Name.Local == "\u0077\u0052" {
			_gbcba, _fggbg := ParseUnionST_AdjCoordinate(_dgfcc.Value)
			if _fggbg != nil {
				return _fggbg
			}
			_deae.WRAttr = _gbcba
			continue
		}
		if _dgfcc.Name.Local == "\u0068\u0052" {
			_babf, _gggfd := ParseUnionST_AdjCoordinate(_dgfcc.Value)
			if _gggfd != nil {
				return _gggfd
			}
			_deae.HRAttr = _babf
			continue
		}
		if _dgfcc.Name.Local == "\u0073\u0074\u0041n\u0067" {
			_cegdg, _gdeca := ParseUnionST_AdjAngle(_dgfcc.Value)
			if _gdeca != nil {
				return _gdeca
			}
			_deae.StAngAttr = _cegdg
			continue
		}
		if _dgfcc.Name.Local == "\u0073\u0077\u0041n\u0067" {
			_dfae, _dggfg := ParseUnionST_AdjAngle(_dgfcc.Value)
			if _dggfg != nil {
				return _dggfg
			}
			_deae.SwAngAttr = _dfae
			continue
		}
	}
	for {
		_fbeg, _dfdfb := d.Token()
		if _dfdfb != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0041\u0072\u0063\u0054\u006f:\u0020\u0025\u0073", _dfdfb)
		}
		if _gdedg, _bdcbd := _fbeg.(_b.EndElement); _bdcbd && _gdedg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffbff *CT_ContentPartLocking) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffbff.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoGrpAttr))})
	}
	if _ffbff.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoSelectAttr))})
	}
	if _ffbff.NoRotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoRotAttr))})
	}
	if _ffbff.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoChangeAspectAttr))})
	}
	if _ffbff.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoMoveAttr))})
	}
	if _ffbff.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoResizeAttr))})
	}
	if _ffbff.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoEditPointsAttr))})
	}
	if _ffbff.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoAdjustHandlesAttr))})
	}
	if _ffbff.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoChangeArrowheadsAttr))})
	}
	if _ffbff.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_ffbff.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _ffbff.ExtLst != nil {
		_gcbge := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffbff.ExtLst, _gcbge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eaeaba *CT_TileInfoProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbcbf := range start.Attr {
		if _dbcbf.Name.Local == "\u0074\u0078" {
			_ecaeb, _bcagb := ParseUnionST_Coordinate(_dbcbf.Value)
			if _bcagb != nil {
				return _bcagb
			}
			_eaeaba.TxAttr = &_ecaeb
			continue
		}
		if _dbcbf.Name.Local == "\u0074\u0079" {
			_egebe, _bedfe := ParseUnionST_Coordinate(_dbcbf.Value)
			if _bedfe != nil {
				return _bedfe
			}
			_eaeaba.TyAttr = &_egebe
			continue
		}
		if _dbcbf.Name.Local == "\u0073\u0078" {
			_dbddd, _caeca := ParseUnionST_Percentage(_dbcbf.Value)
			if _caeca != nil {
				return _caeca
			}
			_eaeaba.SxAttr = &_dbddd
			continue
		}
		if _dbcbf.Name.Local == "\u0073\u0079" {
			_cgged, _abeee := ParseUnionST_Percentage(_dbcbf.Value)
			if _abeee != nil {
				return _abeee
			}
			_eaeaba.SyAttr = &_cgged
			continue
		}
		if _dbcbf.Name.Local == "\u0066\u006c\u0069\u0070" {
			_eaeaba.FlipAttr.UnmarshalXMLAttr(_dbcbf)
			continue
		}
		if _dbcbf.Name.Local == "\u0061\u006c\u0067\u006e" {
			_eaeaba.AlgnAttr.UnmarshalXMLAttr(_dbcbf)
			continue
		}
	}
	for {
		_gbddac, _bbeba := d.Token()
		if _bbeba != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0069\u006c\u0065\u0049\u006e\u0066\u006f\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _bbeba)
		}
		if _faabc, _aecccc := _gbddac.(_b.EndElement); _aecccc && _faabc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ShapeLocking and its children
func (_becec *CT_ShapeLocking) Validate() error {
	return _becec.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func NewCT_TextUnderlineLineFollowText() *CT_TextUnderlineLineFollowText {
	_daagab := &CT_TextUnderlineLineFollowText{}
	return _daagab
}
func (_gfeca ST_PresetShadowVal) String() string {
	switch _gfeca {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0064w\u0031"
	case 2:
		return "\u0073\u0068\u0064w\u0032"
	case 3:
		return "\u0073\u0068\u0064w\u0033"
	case 4:
		return "\u0073\u0068\u0064w\u0034"
	case 5:
		return "\u0073\u0068\u0064w\u0035"
	case 6:
		return "\u0073\u0068\u0064w\u0036"
	case 7:
		return "\u0073\u0068\u0064w\u0037"
	case 8:
		return "\u0073\u0068\u0064w\u0038"
	case 9:
		return "\u0073\u0068\u0064w\u0039"
	case 10:
		return "\u0073\u0068\u0064\u0077\u0031\u0030"
	case 11:
		return "\u0073\u0068\u0064\u0077\u0031\u0031"
	case 12:
		return "\u0073\u0068\u0064\u0077\u0031\u0032"
	case 13:
		return "\u0073\u0068\u0064\u0077\u0031\u0033"
	case 14:
		return "\u0073\u0068\u0064\u0077\u0031\u0034"
	case 15:
		return "\u0073\u0068\u0064\u0077\u0031\u0035"
	case 16:
		return "\u0073\u0068\u0064\u0077\u0031\u0036"
	case 17:
		return "\u0073\u0068\u0064\u0077\u0031\u0037"
	case 18:
		return "\u0073\u0068\u0064\u0077\u0031\u0038"
	case 19:
		return "\u0073\u0068\u0064\u0077\u0031\u0039"
	case 20:
		return "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return ""
}
func (_agdcg ST_ChartBuildStep) String() string {
	switch _agdcg {
	case 0:
		return ""
	case 1:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 2:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0061\u006c\u006c\u0050\u0074\u0073"
	case 6:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return ""
}
func (_eaede *CT_EmptyElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SystemColor and its children, prefixing error messages with path
func (_ageae *CT_SystemColor) ValidateWithPath(path string) error {
	if _ageae.ValAttr == ST_SystemColorValUnset {
		return _bb.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ddafb := _ageae.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ddafb != nil {
		return _ddafb
	}
	for _dffed, _egdfc := range _ageae.EG_ColorTransform {
		if _ddgd := _egdfc.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _dffed)); _ddgd != nil {
			return _ddgd
		}
	}
	return nil
}
func NewCT_TextUnderlineFillGroupWrapper() *CT_TextUnderlineFillGroupWrapper {
	_defgg := &CT_TextUnderlineFillGroupWrapper{}
	return _defgg
}
func (_befge ST_TextVerticalType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_befge.String(), start)
}
func (_gdb *CT_BlipChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdb.AlphaBiLevel != nil {
		_bbeb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		for _, _cccf := range _gdb.AlphaBiLevel {
			e.EncodeElement(_cccf, _bbeb)
		}
	}
	if _gdb.AlphaCeiling != nil {
		_dcgd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		for _, _ddee := range _gdb.AlphaCeiling {
			e.EncodeElement(_ddee, _dcgd)
		}
	}
	if _gdb.AlphaFloor != nil {
		_dbdg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		for _, _deff := range _gdb.AlphaFloor {
			e.EncodeElement(_deff, _dbdg)
		}
	}
	if _gdb.AlphaInv != nil {
		_ebgba := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		for _, _eadg := range _gdb.AlphaInv {
			e.EncodeElement(_eadg, _ebgba)
		}
	}
	if _gdb.AlphaMod != nil {
		_bfacd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		for _, _dbfd := range _gdb.AlphaMod {
			e.EncodeElement(_dbfd, _bfacd)
		}
	}
	if _gdb.AlphaModFix != nil {
		_aebd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		for _, _bdga := range _gdb.AlphaModFix {
			e.EncodeElement(_bdga, _aebd)
		}
	}
	if _gdb.AlphaRepl != nil {
		_gfcbf := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		for _, _abec := range _gdb.AlphaRepl {
			e.EncodeElement(_abec, _gfcbf)
		}
	}
	if _gdb.BiLevel != nil {
		_cged := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		for _, _affd := range _gdb.BiLevel {
			e.EncodeElement(_affd, _cged)
		}
	}
	if _gdb.Blur != nil {
		_efef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		for _, _eaee := range _gdb.Blur {
			e.EncodeElement(_eaee, _efef)
		}
	}
	if _gdb.ClrChange != nil {
		_bcae := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		for _, _bcgc := range _gdb.ClrChange {
			e.EncodeElement(_bcgc, _bcae)
		}
	}
	if _gdb.ClrRepl != nil {
		_bcff := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		for _, _aadg := range _gdb.ClrRepl {
			e.EncodeElement(_aadg, _bcff)
		}
	}
	if _gdb.Duotone != nil {
		_bdaf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		for _, _cdcae := range _gdb.Duotone {
			e.EncodeElement(_cdcae, _bdaf)
		}
	}
	if _gdb.FillOverlay != nil {
		_befc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		for _, _dacf := range _gdb.FillOverlay {
			e.EncodeElement(_dacf, _befc)
		}
	}
	if _gdb.Grayscl != nil {
		_fcbg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		for _, _aeee := range _gdb.Grayscl {
			e.EncodeElement(_aeee, _fcbg)
		}
	}
	if _gdb.Hsl != nil {
		_ffbd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		for _, _gcag := range _gdb.Hsl {
			e.EncodeElement(_gcag, _ffbd)
		}
	}
	if _gdb.Lum != nil {
		_gdcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		for _, _dgbf := range _gdb.Lum {
			e.EncodeElement(_dgbf, _gdcc)
		}
	}
	if _gdb.Tint != nil {
		_gfe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		for _, _aeea := range _gdb.Tint {
			e.EncodeElement(_aeea, _gfe)
		}
	}
	return nil
}
func (_ffeg ST_TextHorzOverflowType) ValidateWithPath(path string) error {
	switch _ffeg {
	case 0, 1, 2:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffeg))
	}
	return nil
}

type CT_FontReference struct {
	IdxAttr   ST_FontCollectionIndex
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_adffe ST_TextWrappingType) Validate() error { return _adffe.ValidateWithPath("") }

// ValidateWithPath validates the EG_LineFillProperties and its children, prefixing error messages with path
func (_abfdbag *EG_LineFillProperties) ValidateWithPath(path string) error {
	if _abfdbag.NoFill != nil {
		if _ageed := _abfdbag.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ageed != nil {
			return _ageed
		}
	}
	if _abfdbag.SolidFill != nil {
		if _defcd := _abfdbag.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _defcd != nil {
			return _defcd
		}
	}
	if _abfdbag.GradFill != nil {
		if _debea := _abfdbag.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _debea != nil {
			return _debea
		}
	}
	if _abfdbag.PattFill != nil {
		if _bfebff := _abfdbag.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bfebff != nil {
			return _bfebff
		}
	}
	return nil
}

type CT_AnimationChartBuildProperties struct {
	BldAttr    *ST_AnimationChartBuildType
	AnimBgAttr *bool
}

func (_aeddf *CT_GvmlGroupShapeChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dfdc:
	for {
		_ceae, _afdf := d.Token()
		if _afdf != nil {
			return _afdf
		}
		switch _aaaabf := _ceae.(type) {
		case _b.StartElement:
			switch _aaaabf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_bbcc := NewCT_GvmlTextShape()
				if _ggdb := d.DecodeElement(_bbcc, &_aaaabf); _ggdb != nil {
					return _ggdb
				}
				_aeddf.TxSp = append(_aeddf.TxSp, _bbcc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_degcg := NewCT_GvmlShape()
				if _cddge := d.DecodeElement(_degcg, &_aaaabf); _cddge != nil {
					return _cddge
				}
				_aeddf.Sp = append(_aeddf.Sp, _degcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_gffdb := NewCT_GvmlConnector()
				if _fdgg := d.DecodeElement(_gffdb, &_aaaabf); _fdgg != nil {
					return _fdgg
				}
				_aeddf.CxnSp = append(_aeddf.CxnSp, _gffdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fcbed := NewCT_GvmlPicture()
				if _gbce := d.DecodeElement(_fcbed, &_aaaabf); _gbce != nil {
					return _gbce
				}
				_aeddf.Pic = append(_aeddf.Pic, _fcbed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_afecd := NewCT_GvmlGraphicalObjectFrame()
				if _aadfe := d.DecodeElement(_afecd, &_aaaabf); _aadfe != nil {
					return _aadfe
				}
				_aeddf.GraphicFrame = append(_aeddf.GraphicFrame, _afecd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_gagdb := NewCT_GvmlGroupShape()
				if _aefb := d.DecodeElement(_gagdb, &_aaaabf); _aefb != nil {
					return _aefb
				}
				_aeddf.GrpSp = append(_aeddf.GrpSp, _gagdb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _aaaabf.Name)
				if _faaec := d.Skip(); _faaec != nil {
					return _faaec
				}
			}
		case _b.EndElement:
			break _dfdc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the EG_Effect and its children
func (_fgbfb *EG_Effect) Validate() error {
	return _fgbfb.ValidateWithPath("\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t")
}
func NewCT_Path2DArcTo() *CT_Path2DArcTo { _fefaec := &CT_Path2DArcTo{}; return _fefaec }
func (_bcec *CT_OuterShadowEffect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcec.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.BlurRadAttr)})
	}
	if _bcec.DistAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.DistAttr)})
	}
	if _bcec.DirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.DirAttr)})
	}
	if _bcec.SxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.SxAttr)})
	}
	if _bcec.SyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.SyAttr)})
	}
	if _bcec.KxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0078"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.KxAttr)})
	}
	if _bcec.KyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0079"}, Value: _bb.Sprintf("\u0025\u0076", *_bcec.KyAttr)})
	}
	if _bcec.AlgnAttr != ST_RectAlignmentUnset {
		_aeaff, _ccafgg := _bcec.AlgnAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ccafgg != nil {
			return _ccafgg
		}
		start.Attr = append(start.Attr, _aeaff)
	}
	if _bcec.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _bb.Sprintf("\u0025\u0064", _bcgfg(*_bcec.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _bcec.ScrgbClr != nil {
		_cfga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_bcec.ScrgbClr, _cfga)
	}
	if _bcec.SrgbClr != nil {
		_cfcaf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_bcec.SrgbClr, _cfcaf)
	}
	if _bcec.HslClr != nil {
		_fdeef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_bcec.HslClr, _fdeef)
	}
	if _bcec.SysClr != nil {
		_gaccb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_bcec.SysClr, _gaccb)
	}
	if _bcec.SchemeClr != nil {
		_befa := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_bcec.SchemeClr, _befa)
	}
	if _bcec.PrstClr != nil {
		_bffea := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_bcec.PrstClr, _bffea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TextVertOverflowType byte

func (_bedc *CT_ColorSchemeList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bedc.ExtraClrScheme != nil {
		_eaea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003ae\u0078\u0074\u0072a\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		for _, _afga := range _bedc.ExtraClrScheme {
			e.EncodeElement(_afga, _eaea)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbdfd ST_LineEndType) Validate() error { return _gbdfd.ValidateWithPath("") }

type EG_Effect struct {
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func (_eeefb *ST_EffectContainerType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgac, _cdggcf := d.Token()
	if _cdggcf != nil {
		return _cdggcf
	}
	if _cbcde, _deefd := _bdgac.(_b.EndElement); _deefd && _cbcde.Name == start.Name {
		*_eeefb = 1
		return nil
	}
	if _bgabb, _dgcae := _bdgac.(_b.CharData); !_dgcae {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgac)
	} else {
		switch string(_bgabb) {
		case "":
			*_eeefb = 0
		case "\u0073\u0069\u0062":
			*_eeefb = 1
		case "\u0074\u0072\u0065\u0065":
			*_eeefb = 2
		}
	}
	_bdgac, _cdggcf = d.Token()
	if _cdggcf != nil {
		return _cdggcf
	}
	if _deeae, _gbgbc := _bdgac.(_b.EndElement); _gbgbc && _deeae.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgac)
}

// Validate validates the CT_ComplementTransform and its children
func (_ebgdd *CT_ComplementTransform) Validate() error {
	return _ebgdd.ValidateWithPath("\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d")
}
func (_beffb *CT_TextBulletSizePoint) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _beffb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the AG_Locking and its children
func (_agc *AG_Locking) Validate() error {
	return _agc.ValidateWithPath("\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

// Validate validates the CT_TextBody and its children
func (_gbfab *CT_TextBody) Validate() error {
	return _gbfab.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079")
}
func (_aeec *CT_FillEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fbced:
	for {
		_ggcf, _bedb := d.Token()
		if _bedb != nil {
			return _bedb
		}
		switch _abaf := _ggcf.(type) {
		case _b.StartElement:
			switch _abaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_aeec.NoFill = NewCT_NoFillProperties()
				if _cfef := d.DecodeElement(_aeec.NoFill, &_abaf); _cfef != nil {
					return _cfef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_aeec.SolidFill = NewCT_SolidColorFillProperties()
				if _efgec := d.DecodeElement(_aeec.SolidFill, &_abaf); _efgec != nil {
					return _efgec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_aeec.GradFill = NewCT_GradientFillProperties()
				if _cgdcf := d.DecodeElement(_aeec.GradFill, &_abaf); _cgdcf != nil {
					return _cgdcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_aeec.BlipFill = NewCT_BlipFillProperties()
				if _fgd := d.DecodeElement(_aeec.BlipFill, &_abaf); _fgd != nil {
					return _fgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_aeec.PattFill = NewCT_PatternFillProperties()
				if _ddcgd := d.DecodeElement(_aeec.PattFill, &_abaf); _ddcgd != nil {
					return _ddcgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_aeec.GrpFill = NewCT_GroupFillProperties()
				if _ffcd := d.DecodeElement(_aeec.GrpFill, &_abaf); _ffcd != nil {
					return _ffcd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _abaf.Name)
				if _abca := d.Skip(); _abca != nil {
					return _abca
				}
			}
		case _b.EndElement:
			break _fbced
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextListStyle and its children
func (_fbefg *CT_TextListStyle) Validate() error {
	return _fbefg.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_TableStyleTextStyle and its children, prefixing error messages with path
func (_fecf *CT_TableStyleTextStyle) ValidateWithPath(path string) error {
	if _ddbed := _fecf.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _ddbed != nil {
		return _ddbed
	}
	if _caecf := _fecf.IAttr.ValidateWithPath(path + "\u002f\u0049\u0041\u0074\u0074\u0072"); _caecf != nil {
		return _caecf
	}
	if _fecf.Font != nil {
		if _edeba := _fecf.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _edeba != nil {
			return _edeba
		}
	}
	if _fecf.FontRef != nil {
		if _ddcggg := _fecf.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _ddcggg != nil {
			return _ddcggg
		}
	}
	if _fecf.ScrgbClr != nil {
		if _ebffe := _fecf.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ebffe != nil {
			return _ebffe
		}
	}
	if _fecf.SrgbClr != nil {
		if _egfggc := _fecf.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _egfggc != nil {
			return _egfggc
		}
	}
	if _fecf.HslClr != nil {
		if _eecbc := _fecf.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _eecbc != nil {
			return _eecbc
		}
	}
	if _fecf.SysClr != nil {
		if _becdfd := _fecf.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _becdfd != nil {
			return _becdfd
		}
	}
	if _fecf.SchemeClr != nil {
		if _gfbae := _fecf.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gfbae != nil {
			return _gfbae
		}
	}
	if _fecf.PrstClr != nil {
		if _caffb := _fecf.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _caffb != nil {
			return _caffb
		}
	}
	if _fecf.ExtLst != nil {
		if _dfbbd := _fecf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfbbd != nil {
			return _dfbbd
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TextBulletTypeface and its children, prefixing error messages with path
func (_fgegc *EG_TextBulletTypeface) ValidateWithPath(path string) error {
	if _fgegc.BuFontTx != nil {
		if _afadc := _fgegc.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _afadc != nil {
			return _afadc
		}
	}
	if _fgegc.BuFont != nil {
		if _ddaag := _fgegc.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _ddaag != nil {
			return _ddaag
		}
	}
	return nil
}

type CT_TextListStyle struct {
	DefPPr  *CT_TextParagraphProperties
	Lvl1pPr *CT_TextParagraphProperties
	Lvl2pPr *CT_TextParagraphProperties
	Lvl3pPr *CT_TextParagraphProperties
	Lvl4pPr *CT_TextParagraphProperties
	Lvl5pPr *CT_TextParagraphProperties
	Lvl6pPr *CT_TextParagraphProperties
	Lvl7pPr *CT_TextParagraphProperties
	Lvl8pPr *CT_TextParagraphProperties
	Lvl9pPr *CT_TextParagraphProperties
	ExtLst  *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_TileInfoProperties and its children, prefixing error messages with path
func (_ffcfc *CT_TileInfoProperties) ValidateWithPath(path string) error {
	if _ffcfc.TxAttr != nil {
		if _acdgfe := _ffcfc.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _acdgfe != nil {
			return _acdgfe
		}
	}
	if _ffcfc.TyAttr != nil {
		if _ecdge := _ffcfc.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _ecdge != nil {
			return _ecdge
		}
	}
	if _ffcfc.SxAttr != nil {
		if _bbfa := _ffcfc.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _bbfa != nil {
			return _bbfa
		}
	}
	if _ffcfc.SyAttr != nil {
		if _fbcafe := _ffcfc.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _fbcafe != nil {
			return _fbcafe
		}
	}
	if _fbded := _ffcfc.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _fbded != nil {
		return _fbded
	}
	if _bgec := _ffcfc.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _bgec != nil {
		return _bgec
	}
	return nil
}

// Validate validates the CT_ThemeableLineStyle and its children
func (_faffg *CT_ThemeableLineStyle) Validate() error {
	return _faffg.ValidateWithPath("C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065")
}

type EG_ThemeableEffectStyle struct {
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

const (
	ST_TextShapeTypeUnset                     ST_TextShapeType = 0
	ST_TextShapeTypeTextNoShape               ST_TextShapeType = 1
	ST_TextShapeTypeTextPlain                 ST_TextShapeType = 2
	ST_TextShapeTypeTextStop                  ST_TextShapeType = 3
	ST_TextShapeTypeTextTriangle              ST_TextShapeType = 4
	ST_TextShapeTypeTextTriangleInverted      ST_TextShapeType = 5
	ST_TextShapeTypeTextChevron               ST_TextShapeType = 6
	ST_TextShapeTypeTextChevronInverted       ST_TextShapeType = 7
	ST_TextShapeTypeTextRingInside            ST_TextShapeType = 8
	ST_TextShapeTypeTextRingOutside           ST_TextShapeType = 9
	ST_TextShapeTypeTextArchUp                ST_TextShapeType = 10
	ST_TextShapeTypeTextArchDown              ST_TextShapeType = 11
	ST_TextShapeTypeTextCircle                ST_TextShapeType = 12
	ST_TextShapeTypeTextButton                ST_TextShapeType = 13
	ST_TextShapeTypeTextArchUpPour            ST_TextShapeType = 14
	ST_TextShapeTypeTextArchDownPour          ST_TextShapeType = 15
	ST_TextShapeTypeTextCirclePour            ST_TextShapeType = 16
	ST_TextShapeTypeTextButtonPour            ST_TextShapeType = 17
	ST_TextShapeTypeTextCurveUp               ST_TextShapeType = 18
	ST_TextShapeTypeTextCurveDown             ST_TextShapeType = 19
	ST_TextShapeTypeTextCanUp                 ST_TextShapeType = 20
	ST_TextShapeTypeTextCanDown               ST_TextShapeType = 21
	ST_TextShapeTypeTextWave1                 ST_TextShapeType = 22
	ST_TextShapeTypeTextWave2                 ST_TextShapeType = 23
	ST_TextShapeTypeTextDoubleWave1           ST_TextShapeType = 24
	ST_TextShapeTypeTextWave4                 ST_TextShapeType = 25
	ST_TextShapeTypeTextInflate               ST_TextShapeType = 26
	ST_TextShapeTypeTextDeflate               ST_TextShapeType = 27
	ST_TextShapeTypeTextInflateBottom         ST_TextShapeType = 28
	ST_TextShapeTypeTextDeflateBottom         ST_TextShapeType = 29
	ST_TextShapeTypeTextInflateTop            ST_TextShapeType = 30
	ST_TextShapeTypeTextDeflateTop            ST_TextShapeType = 31
	ST_TextShapeTypeTextDeflateInflate        ST_TextShapeType = 32
	ST_TextShapeTypeTextDeflateInflateDeflate ST_TextShapeType = 33
	ST_TextShapeTypeTextFadeRight             ST_TextShapeType = 34
	ST_TextShapeTypeTextFadeLeft              ST_TextShapeType = 35
	ST_TextShapeTypeTextFadeUp                ST_TextShapeType = 36
	ST_TextShapeTypeTextFadeDown              ST_TextShapeType = 37
	ST_TextShapeTypeTextSlantUp               ST_TextShapeType = 38
	ST_TextShapeTypeTextSlantDown             ST_TextShapeType = 39
	ST_TextShapeTypeTextCascadeUp             ST_TextShapeType = 40
	ST_TextShapeTypeTextCascadeDown           ST_TextShapeType = 41
)

func ParseUnionST_Percentage(s string) (ST_Percentage, error) {
	_abfdc := ST_Percentage{}
	if _eb.ST_PercentagePatternRe.MatchString(s) {
		_abfdc.ST_Percentage = &s
	} else {
		_bdgdfg, _fgege := _a.ParseInt(s, 10, 64)
		if _fgege != nil {
			return _abfdc, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _fgege)
		}
		_adeab := int32(_bdgdfg)
		_abfdc.ST_PercentageDecimal = &_adeab
	}
	return _abfdc, nil
}
func (_gbddd *ST_FixedPercentage) Validate() error { return _gbddd.ValidateWithPath("") }

// Validate validates the Graphic and its children
func (_gedgd *Graphic) Validate() error {
	return _gedgd.ValidateWithPath("\u0047r\u0061\u0070\u0068\u0069\u0063")
}

type CT_GvmlConnector struct {
	NvCxnSpPr *CT_GvmlConnectorNonVisual
	SpPr      *CT_ShapeProperties
	Style     *CT_ShapeStyle
	ExtLst    *CT_OfficeArtExtensionList
}

// Validate validates the CT_EmbeddedWAVAudioFile and its children
func (_acgb *CT_EmbeddedWAVAudioFile) Validate() error {
	return _acgb.ValidateWithPath("\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}
func (_abgce *CT_TableCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggfge := range start.Attr {
		if _ggfge.Name.Local == "\u0072o\u0077\u0053\u0070\u0061\u006e" {
			_dagaf, _gdccd := _a.ParseInt(_ggfge.Value, 10, 32)
			if _gdccd != nil {
				return _gdccd
			}
			_gaggfc := int32(_dagaf)
			_abgce.RowSpanAttr = &_gaggfc
			continue
		}
		if _ggfge.Name.Local == "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e" {
			_bfba, _bbgfb := _a.ParseInt(_ggfge.Value, 10, 32)
			if _bbgfb != nil {
				return _bbgfb
			}
			_bfcfd := int32(_bfba)
			_abgce.GridSpanAttr = &_bfcfd
			continue
		}
		if _ggfge.Name.Local == "\u0068\u004d\u0065\u0072\u0067\u0065" {
			_acgdf, _afcabe := _a.ParseBool(_ggfge.Value)
			if _afcabe != nil {
				return _afcabe
			}
			_abgce.HMergeAttr = &_acgdf
			continue
		}
		if _ggfge.Name.Local == "\u0076\u004d\u0065\u0072\u0067\u0065" {
			_cbge, _fdcee := _a.ParseBool(_ggfge.Value)
			if _fdcee != nil {
				return _fdcee
			}
			_abgce.VMergeAttr = &_cbge
			continue
		}
		if _ggfge.Name.Local == "\u0069\u0064" {
			_fdaag, _degcf := _ggfge.Value, error(nil)
			if _degcf != nil {
				return _degcf
			}
			_abgce.IdAttr = &_fdaag
			continue
		}
	}
_dbdfae:
	for {
		_bfagb, _fagcb := d.Token()
		if _fagcb != nil {
			return _fagcb
		}
		switch _bbagd := _bfagb.(type) {
		case _b.StartElement:
			switch _bbagd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_abgce.TxBody = NewCT_TextBody()
				if _accef := d.DecodeElement(_abgce.TxBody, &_bbagd); _accef != nil {
					return _accef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}:
				_abgce.TcPr = NewCT_TableCellProperties()
				if _aface := d.DecodeElement(_abgce.TcPr, &_bbagd); _aface != nil {
					return _aface
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abgce.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebdab := d.DecodeElement(_abgce.ExtLst, &_bbagd); _ebdab != nil {
					return _ebdab
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _bbagd.Name)
				if _cbce := d.Skip(); _cbce != nil {
					return _cbce
				}
			}
		case _b.EndElement:
			break _dbdfae
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_EffectReference and its children
func (_gdbf *CT_EffectReference) Validate() error {
	return _gdbf.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065")
}
func (_gbeaf *ST_TextCapsType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gbeaf = 0
	case "\u006e\u006f\u006e\u0065":
		*_gbeaf = 1
	case "\u0073\u006d\u0061l\u006c":
		*_gbeaf = 2
	case "\u0061\u006c\u006c":
		*_gbeaf = 3
	}
	return nil
}
func (_bbeed *CT_LineStyleList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_acabg:
	for {
		_eacg, _feggf := d.Token()
		if _feggf != nil {
			return _feggf
		}
		switch _gbaaf := _eacg.(type) {
		case _b.StartElement:
			switch _gbaaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_afcb := NewCT_LineProperties()
				if _cbbb := d.DecodeElement(_afcb, &_gbaaf); _cbbb != nil {
					return _cbbb
				}
				_bbeed.Ln = append(_bbeed.Ln, _afcb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _gbaaf.Name)
				if _ceeee := d.Skip(); _ceeee != nil {
					return _ceeee
				}
			}
		case _b.EndElement:
			break _acabg
		case _b.CharData:
		}
	}
	return nil
}
func (_dfcda ST_TextWrappingType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fddeg := _b.Attr{}
	_fddeg.Name = name
	switch _dfcda {
	case ST_TextWrappingTypeUnset:
		_fddeg.Value = ""
	case ST_TextWrappingTypeNone:
		_fddeg.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextWrappingTypeSquare:
		_fddeg.Value = "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return _fddeg, nil
}

// ValidateWithPath validates the CT_Path2DQuadBezierTo and its children, prefixing error messages with path
func (_fagf *CT_Path2DQuadBezierTo) ValidateWithPath(path string) error {
	for _edcecf, _gfccg := range _fagf.Pt {
		if _cbbba := _gfccg.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _edcecf)); _cbbba != nil {
			return _cbbba
		}
	}
	return nil
}
func (_acec *CT_BackgroundFillStyleList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	for _, _bag := range _acec.EG_FillProperties {
		_bag.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Ratio and its children
func (_cfcaa *CT_Ratio) Validate() error {
	return _cfcaa.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f")
}

// Validate validates the CT_TableCellProperties and its children
func (_ecdf *CT_TableCellProperties) Validate() error {
	return _ecdf.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_GvmlConnector and its children, prefixing error messages with path
func (_cgdcb *CT_GvmlConnector) ValidateWithPath(path string) error {
	if _fbge := _cgdcb.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _fbge != nil {
		return _fbge
	}
	if _cdaac := _cgdcb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cdaac != nil {
		return _cdaac
	}
	if _cgdcb.Style != nil {
		if _cgac := _cgdcb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _cgac != nil {
			return _cgac
		}
	}
	if _cgdcb.ExtLst != nil {
		if _gccag := _cgdcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gccag != nil {
			return _gccag
		}
	}
	return nil
}
func (_bdbb *CT_GvmlGraphicFrameNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_daada := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_bdbb.CNvPr, _daada)
	_ggfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_bdbb.CNvGraphicFramePr, _ggfb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbce *CT_Path2DMoveTo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbce.Pt = NewCT_AdjPoint2D()
_ggfbc:
	for {
		_ddgg, _dbcbc := d.Token()
		if _dbcbc != nil {
			return _dbcbc
		}
		switch _aaccg := _ddgg.(type) {
		case _b.StartElement:
			switch _aaccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _eadb := d.DecodeElement(_dbce.Pt, &_aaccg); _eadb != nil {
					return _eadb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f\u0020\u0025\u0076", _aaccg.Name)
				if _afbaa := d.Skip(); _afbaa != nil {
					return _afbaa
				}
			}
		case _b.EndElement:
			break _ggfbc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the AG_Blob and its children, prefixing error messages with path
func (_afg *AG_Blob) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ColorSchemeList and its children
func (_ffcf *CT_ColorSchemeList) Validate() error {
	return _ffcf.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074")
}
func (_dgdeg *CT_TextLineBreak) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dfceb:
	for {
		_eeacfa, _fcdeed := d.Token()
		if _fcdeed != nil {
			return _fcdeed
		}
		switch _fgedd := _eeacfa.(type) {
		case _b.StartElement:
			switch _fgedd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_dgdeg.RPr = NewCT_TextCharacterProperties()
				if _bbcdg := d.DecodeElement(_dgdeg.RPr, &_fgedd); _bbcdg != nil {
					return _bbcdg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b\u0020\u0025v", _fgedd.Name)
				if _gadbba := d.Skip(); _gadbba != nil {
					return _gadbba
				}
			}
		case _b.EndElement:
			break _dfceb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_AnimationGraphicalObjectBuildProperties() *CT_AnimationGraphicalObjectBuildProperties {
	_ddfc := &CT_AnimationGraphicalObjectBuildProperties{}
	return _ddfc
}

// ValidateWithPath validates the CT_SupplementalFont and its children, prefixing error messages with path
func (_fgfcd *CT_SupplementalFont) ValidateWithPath(path string) error { return nil }
func (_fcea *CT_Shape3D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcea.ZAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a"}, Value: _bb.Sprintf("\u0025\u0076", *_fcea.ZAttr)})
	}
	if _fcea.ExtrusionHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048"}, Value: _bb.Sprintf("\u0025\u0076", *_fcea.ExtrusionHAttr)})
	}
	if _fcea.ContourWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057"}, Value: _bb.Sprintf("\u0025\u0076", *_fcea.ContourWAttr)})
	}
	if _fcea.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_addcc, _bbeec := _fcea.PrstMaterialAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _bbeec != nil {
			return _bbeec
		}
		start.Attr = append(start.Attr, _addcc)
	}
	e.EncodeToken(start)
	if _fcea.BevelT != nil {
		_cffea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0054"}}
		e.EncodeElement(_fcea.BevelT, _cffea)
	}
	if _fcea.BevelB != nil {
		_fgcdb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0042"}}
		e.EncodeElement(_fcea.BevelB, _fgcdb)
	}
	if _fcea.ExtrusionClr != nil {
		_cbfaga := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u0072\u0075\u0073\u0069o\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_fcea.ExtrusionClr, _cbfaga)
	}
	if _fcea.ContourClr != nil {
		_cafebf := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063o\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}}
		e.EncodeElement(_fcea.ContourClr, _cafebf)
	}
	if _fcea.ExtLst != nil {
		_bdbg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcea.ExtLst, _bdbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RegularTextRun and its children, prefixing error messages with path
func (_bgcbf *CT_RegularTextRun) ValidateWithPath(path string) error {
	if _bgcbf.RPr != nil {
		if _cdbgd := _bgcbf.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _cdbgd != nil {
			return _cdbgd
		}
	}
	return nil
}
func (_dedcb *ST_TextFontScalePercentOrPercentString) Validate() error {
	return _dedcb.ValidateWithPath("")
}

// ValidateWithPath validates the CT_AnimationDgmElement and its children, prefixing error messages with path
func (_cbbfc *CT_AnimationDgmElement) ValidateWithPath(path string) error {
	if _cbbfc.IdAttr != nil {
		if !_eb.ST_GuidPatternRe.MatchString(*_cbbfc.IdAttr) {
			return _bb.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eb.ST_GuidPatternRe, *_cbbfc.IdAttr)
		}
	}
	if _ggd := _cbbfc.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _ggd != nil {
		return _ggd
	}
	return nil
}

// ValidateWithPath validates the CT_GradientStopList and its children, prefixing error messages with path
func (_ffdb *CT_GradientStopList) ValidateWithPath(path string) error {
	for _cbadf, _aaece := range _ffdb.Gs {
		if _egfcc := _aaece.ValidateWithPath(_bb.Sprintf("\u0025s\u002f\u0047\u0073\u005b\u0025\u0064]", path, _cbadf)); _egfcc != nil {
			return _egfcc
		}
	}
	return nil
}
func (_gfeaa *ST_AdjAngle) Validate() error { return _gfeaa.ValidateWithPath("") }
func (_ecdcc *CT_CustomGeometry2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecdcc.PathLst = NewCT_Path2DList()
_cdege:
	for {
		_adcg, _faeg := d.Token()
		if _faeg != nil {
			return _faeg
		}
		switch _abag := _adcg.(type) {
		case _b.StartElement:
			switch _abag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_ecdcc.AvLst = NewCT_GeomGuideList()
				if _efdd := d.DecodeElement(_ecdcc.AvLst, &_abag); _efdd != nil {
					return _efdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}:
				_ecdcc.GdLst = NewCT_GeomGuideList()
				if _abdd := d.DecodeElement(_ecdcc.GdLst, &_abag); _abdd != nil {
					return _abdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}:
				_ecdcc.AhLst = NewCT_AdjustHandleList()
				if _dfbde := d.DecodeElement(_ecdcc.AhLst, &_abag); _dfbde != nil {
					return _dfbde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}:
				_ecdcc.CxnLst = NewCT_ConnectionSiteList()
				if _edcd := d.DecodeElement(_ecdcc.CxnLst, &_abag); _edcd != nil {
					return _edcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}:
				_ecdcc.Rect = NewCT_GeomRect()
				if _cecc := d.DecodeElement(_ecdcc.Rect, &_abag); _cecc != nil {
					return _cecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}:
				if _geea := d.DecodeElement(_ecdcc.PathLst, &_abag); _geea != nil {
					return _geea
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _abag.Name)
				if _dcfd := d.Skip(); _dcfd != nil {
					return _dcfd
				}
			}
		case _b.EndElement:
			break _cdege
		case _b.CharData:
		}
	}
	return nil
}
func NewEG_TextUnderlineFill() *EG_TextUnderlineFill {
	_bggca := &EG_TextUnderlineFill{}
	return _bggca
}
func (_fcgaa *CT_TableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0079\u006c\u0065\u0049\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _fcgaa.StyleIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de"}, Value: _bb.Sprintf("\u0025\u0076", _fcgaa.StyleNameAttr)})
	e.EncodeToken(start)
	if _fcgaa.TblBg != nil {
		_cbfae := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0062\u006c\u0042\u0067"}}
		e.EncodeElement(_fcgaa.TblBg, _cbfae)
	}
	if _fcgaa.WholeTbl != nil {
		_adbgg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}}
		e.EncodeElement(_fcgaa.WholeTbl, _adbgg)
	}
	if _fcgaa.Band1H != nil {
		_dggcg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0048"}}
		e.EncodeElement(_fcgaa.Band1H, _dggcg)
	}
	if _fcgaa.Band2H != nil {
		_gacbg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0048"}}
		e.EncodeElement(_fcgaa.Band2H, _gacbg)
	}
	if _fcgaa.Band1V != nil {
		_fdfb := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0056"}}
		e.EncodeElement(_fcgaa.Band1V, _fdfb)
	}
	if _fcgaa.Band2V != nil {
		_ecagc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0056"}}
		e.EncodeElement(_fcgaa.Band2V, _ecagc)
	}
	if _fcgaa.LastCol != nil {
		_cdbd := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0043\u006fl"}}
		e.EncodeElement(_fcgaa.LastCol, _cdbd)
	}
	if _fcgaa.FirstCol != nil {
		_cagc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}}
		e.EncodeElement(_fcgaa.FirstCol, _cagc)
	}
	if _fcgaa.LastRow != nil {
		_abggg := _b.StartElement{Name: _b.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0052\u006fw"}}
		e.EncodeElement(_fcgaa.LastRow, _abggg)
	}
	if _fcgaa.SeCell != nil {
		_ecada := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fcgaa.SeCell, _ecada)
	}
	if _fcgaa.SwCell != nil {
		_aeeef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fcgaa.SwCell, _aeeef)
	}
	if _fcgaa.FirstRow != nil {
		_bcefd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}}
		e.EncodeElement(_fcgaa.FirstRow, _bcefd)
	}
	if _fcgaa.NeCell != nil {
		_fgdg := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fcgaa.NeCell, _fgdg)
	}
	if _fcgaa.NwCell != nil {
		_cdfe := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006e\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fcgaa.NwCell, _cdfe)
	}
	if _fcgaa.ExtLst != nil {
		_ecfed := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcgaa.ExtLst, _ecfed)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_NonVisualDrawingShapeProps() *CT_NonVisualDrawingShapeProps {
	_adff := &CT_NonVisualDrawingShapeProps{}
	return _adff
}
func (_efagc *CT_ClipboardStyleSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efagc.ThemeElements = NewCT_BaseStyles()
	_efagc.ClrMap = NewCT_ColorMapping()
_ggdfb:
	for {
		_cacac, _fbd := d.Token()
		if _fbd != nil {
			return _fbd
		}
		switch _cbaag := _cacac.(type) {
		case _b.StartElement:
			switch _cbaag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _ggdc := d.DecodeElement(_efagc.ThemeElements, &_cbaag); _ggdc != nil {
					return _ggdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _eeff := d.DecodeElement(_efagc.ClrMap, &_cbaag); _eeff != nil {
					return _eeff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006c\u0069\u0070b\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _cbaag.Name)
				if _fdcb := d.Skip(); _fdcb != nil {
					return _fdcb
				}
			}
		case _b.EndElement:
			break _ggdfb
		case _b.CharData:
		}
	}
	return nil
}
func (_fbcf *CT_GroupShapeProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdgg := range start.Attr {
		if _bdgg.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_fbcf.BwModeAttr.UnmarshalXMLAttr(_bdgg)
			continue
		}
	}
_dgfa:
	for {
		_gaac, _cbacg := d.Token()
		if _cbacg != nil {
			return _cbacg
		}
		switch _beae := _gaac.(type) {
		case _b.StartElement:
			switch _beae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_fbcf.Xfrm = NewCT_GroupTransform2D()
				if _fggaa := d.DecodeElement(_fbcf.Xfrm, &_beae); _fggaa != nil {
					return _fggaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fbcf.NoFill = NewCT_NoFillProperties()
				if _bdgcg := d.DecodeElement(_fbcf.NoFill, &_beae); _bdgcg != nil {
					return _bdgcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fbcf.SolidFill = NewCT_SolidColorFillProperties()
				if _gggdc := d.DecodeElement(_fbcf.SolidFill, &_beae); _gggdc != nil {
					return _gggdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fbcf.GradFill = NewCT_GradientFillProperties()
				if _cafbe := d.DecodeElement(_fbcf.GradFill, &_beae); _cafbe != nil {
					return _cafbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fbcf.BlipFill = NewCT_BlipFillProperties()
				if _cdbfb := d.DecodeElement(_fbcf.BlipFill, &_beae); _cdbfb != nil {
					return _cdbfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fbcf.PattFill = NewCT_PatternFillProperties()
				if _fabgaa := d.DecodeElement(_fbcf.PattFill, &_beae); _fabgaa != nil {
					return _fabgaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fbcf.GrpFill = NewCT_GroupFillProperties()
				if _cbdgb := d.DecodeElement(_fbcf.GrpFill, &_beae); _cbdgb != nil {
					return _cbdgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fbcf.EffectLst = NewCT_EffectList()
				if _cceeb := d.DecodeElement(_fbcf.EffectLst, &_beae); _cceeb != nil {
					return _cceeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fbcf.EffectDag = NewCT_EffectContainer()
				if _dage := d.DecodeElement(_fbcf.EffectDag, &_beae); _dage != nil {
					return _dage
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_fbcf.Scene3d = NewCT_Scene3D()
				if _defb := d.DecodeElement(_fbcf.Scene3d, &_beae); _defb != nil {
					return _defb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbcf.ExtLst = NewCT_OfficeArtExtensionList()
				if _bdbee := d.DecodeElement(_fbcf.ExtLst, &_beae); _bdbee != nil {
					return _bdbee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070e\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _beae.Name)
				if _bgbcg := d.Skip(); _bgbcg != nil {
					return _bgbcg
				}
			}
		case _b.EndElement:
			break _dgfa
		case _b.CharData:
		}
	}
	return nil
}
func (_dcbef *CT_ShapeLocking) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgecg := range start.Attr {
		if _cgecg.Name.Local == "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074" {
			_cdebf, _cdabd := _a.ParseBool(_cgecg.Value)
			if _cdabd != nil {
				return _cdabd
			}
			_dcbef.NoTextEditAttr = &_cdebf
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_agcgf, _cbbaf := _a.ParseBool(_cgecg.Value)
			if _cbbaf != nil {
				return _cbbaf
			}
			_dcbef.NoGrpAttr = &_agcgf
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_egbg, _dbaef := _a.ParseBool(_cgecg.Value)
			if _dbaef != nil {
				return _dbaef
			}
			_dcbef.NoSelectAttr = &_egbg
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_gddfc, _dddgdb := _a.ParseBool(_cgecg.Value)
			if _dddgdb != nil {
				return _dddgdb
			}
			_dcbef.NoRotAttr = &_gddfc
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_efaeg, _gdfcd := _a.ParseBool(_cgecg.Value)
			if _gdfcd != nil {
				return _gdfcd
			}
			_dcbef.NoChangeAspectAttr = &_efaeg
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_gabgd, _gagcd := _a.ParseBool(_cgecg.Value)
			if _gagcd != nil {
				return _gagcd
			}
			_dcbef.NoMoveAttr = &_gabgd
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_fgabd, _agcdg := _a.ParseBool(_cgecg.Value)
			if _agcdg != nil {
				return _agcdg
			}
			_dcbef.NoResizeAttr = &_fgabd
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_acfag, _dbgdf := _a.ParseBool(_cgecg.Value)
			if _dbgdf != nil {
				return _dbgdf
			}
			_dcbef.NoEditPointsAttr = &_acfag
			continue
		}
		if _cgecg.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_gcfdf, _fcedg := _a.ParseBool(_cgecg.Value)
			if _fcedg != nil {
				return _fcedg
			}
			_dcbef.NoAdjustHandlesAttr = &_gcfdf
			continue
		}
		if _cgecg.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_afegb, _dcgff := _a.ParseBool(_cgecg.Value)
			if _dcgff != nil {
				return _dcgff
			}
			_dcbef.NoChangeArrowheadsAttr = &_afegb
			continue
		}
		if _cgecg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_dbffa, _eeage := _a.ParseBool(_cgecg.Value)
			if _eeage != nil {
				return _eeage
			}
			_dcbef.NoChangeShapeTypeAttr = &_dbffa
			continue
		}
	}
_aabc:
	for {
		_gdee, _accg := d.Token()
		if _accg != nil {
			return _accg
		}
		switch _cddee := _gdee.(type) {
		case _b.StartElement:
			switch _cddee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcbef.ExtLst = NewCT_OfficeArtExtensionList()
				if _gdegf := d.DecodeElement(_dcbef.ExtLst, &_cddee); _gdegf != nil {
					return _gdegf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061p\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _cddee.Name)
				if _debdf := d.Skip(); _debdf != nil {
					return _debdf
				}
			}
		case _b.EndElement:
			break _aabc
		case _b.CharData:
		}
	}
	return nil
}
func ParseUnionST_TextFontScalePercentOrPercentString(s string) (ST_TextFontScalePercentOrPercentString, error) {
	_bffce := ST_TextFontScalePercentOrPercentString{}
	if _eb.ST_PercentagePatternRe.MatchString(s) {
		_bffce.ST_Percentage = &s
	} else {
		_cdbgeb, _abcdf := _a.ParseInt(s, 10, 64)
		if _abcdf != nil {
			return _bffce, _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _abcdf)
		}
		_cdccdb := int32(_cdbgeb)
		_bffce.ST_TextFontScalePercent = &_cdccdb
	}
	return _bffce, nil
}

// ValidateWithPath validates the CT_XYAdjustHandle and its children, prefixing error messages with path
func (_bbdad *CT_XYAdjustHandle) ValidateWithPath(path string) error {
	if _bbdad.MinXAttr != nil {
		if _fcfgb := _bbdad.MinXAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0058\u0041\u0074\u0074r"); _fcfgb != nil {
			return _fcfgb
		}
	}
	if _bbdad.MaxXAttr != nil {
		if _dbde := _bbdad.MaxXAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0058\u0041\u0074\u0074r"); _dbde != nil {
			return _dbde
		}
	}
	if _bbdad.MinYAttr != nil {
		if _aededb := _bbdad.MinYAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0059\u0041\u0074\u0074r"); _aededb != nil {
			return _aededb
		}
	}
	if _bbdad.MaxYAttr != nil {
		if _cfaf := _bbdad.MaxYAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0059\u0041\u0074\u0074r"); _cfaf != nil {
			return _cfaf
		}
	}
	if _fefgg := _bbdad.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _fefgg != nil {
		return _fefgg
	}
	return nil
}
func (_ffaae ST_ChartBuildStep) ValidateWithPath(path string) error {
	switch _ffaae {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffaae))
	}
	return nil
}
func (_gbdgg *ST_AnimationChartBuildType) Validate() error { return _gbdgg.ValidateWithPath("") }
func (_abfac *EG_TextUnderlineLine) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_egfcdb:
	for {
		_bgcgg, _aegdee := d.Token()
		if _aegdee != nil {
			return _aegdee
		}
		switch _fcbgc := _bgcgg.(type) {
		case _b.StartElement:
			switch _fcbgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_abfac.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _efgeb := d.DecodeElement(_abfac.ULnTx, &_fcbgc); _efgeb != nil {
					return _efgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_abfac.ULn = NewCT_LineProperties()
				if _dbecd := d.DecodeElement(_abfac.ULn, &_fcbgc); _dbecd != nil {
					return _dbecd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0020\u0025\u0076", _fcbgc.Name)
				if _gbggg := d.Skip(); _gbggg != nil {
					return _gbggg
				}
			}
		case _b.EndElement:
			break _egfcdb
		case _b.CharData:
		}
	}
	return nil
}

type CT_ReflectionEffect struct {
	BlurRadAttr      *int64
	StAAttr          *ST_PositiveFixedPercentage
	StPosAttr        *ST_PositiveFixedPercentage
	EndAAttr         *ST_PositiveFixedPercentage
	EndPosAttr       *ST_PositiveFixedPercentage
	DistAttr         *int64
	DirAttr          *int32
	FadeDirAttr      *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
}

func (_beba *CT_DashStop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064"}, Value: _bb.Sprintf("\u0025\u0076", _beba.DAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070"}, Value: _bb.Sprintf("\u0025\u0076", _beba.SpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edf *CT_AnimationDgmBuildProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dac := range start.Attr {
		if _dac.Name.Local == "\u0062\u006c\u0064" {
			_fdb, _fgcf := ParseUnionST_AnimationDgmBuildType(_dac.Value)
			if _fgcf != nil {
				return _fgcf
			}
			_edf.BldAttr = &_fdb
			continue
		}
		if _dac.Name.Local == "\u0072\u0065\u0076" {
			_edc, _bacf := _a.ParseBool(_dac.Value)
			if _bacf != nil {
				return _bacf
			}
			_edf.RevAttr = &_edc
			continue
		}
	}
	for {
		_dcde, _gcg := d.Token()
		if _gcg != nil {
			return _bb.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0042\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _gcg)
		}
		if _bdde, _gdca := _dcde.(_b.EndElement); _gdca && _bdde.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ObjectStyleDefaults and its children, prefixing error messages with path
func (_gfba *CT_ObjectStyleDefaults) ValidateWithPath(path string) error {
	if _gfba.SpDef != nil {
		if _acgab := _gfba.SpDef.ValidateWithPath(path + "\u002f\u0053\u0070\u0044\u0065\u0066"); _acgab != nil {
			return _acgab
		}
	}
	if _gfba.LnDef != nil {
		if _ebda := _gfba.LnDef.ValidateWithPath(path + "\u002f\u004c\u006e\u0044\u0065\u0066"); _ebda != nil {
			return _ebda
		}
	}
	if _gfba.TxDef != nil {
		if _gadeg := _gfba.TxDef.ValidateWithPath(path + "\u002f\u0054\u0078\u0044\u0065\u0066"); _gadeg != nil {
			return _gadeg
		}
	}
	if _gfba.ExtLst != nil {
		if _cdeda := _gfba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdeda != nil {
			return _cdeda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontReference and its children, prefixing error messages with path
func (_abgc *CT_FontReference) ValidateWithPath(path string) error {
	if _abgc.IdxAttr == ST_FontCollectionIndexUnset {
		return _bb.Errorf("\u0025\u0073\u002fI\u0064\u0078\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bcfgb := _abgc.IdxAttr.ValidateWithPath(path + "\u002f\u0049\u0064\u0078\u0041\u0074\u0074\u0072"); _bcfgb != nil {
		return _bcfgb
	}
	if _abgc.ScrgbClr != nil {
		if _ecggf := _abgc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ecggf != nil {
			return _ecggf
		}
	}
	if _abgc.SrgbClr != nil {
		if _aabd := _abgc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _aabd != nil {
			return _aabd
		}
	}
	if _abgc.HslClr != nil {
		if _ffae := _abgc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ffae != nil {
			return _ffae
		}
	}
	if _abgc.SysClr != nil {
		if _aaddf := _abgc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _aaddf != nil {
			return _aaddf
		}
	}
	if _abgc.SchemeClr != nil {
		if _dbcb := _abgc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dbcb != nil {
			return _dbcb
		}
	}
	if _abgc.PrstClr != nil {
		if _egag := _abgc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _egag != nil {
			return _egag
		}
	}
	return nil
}

// Validate validates the CT_SystemColor and its children
func (_gbacd *CT_SystemColor) Validate() error {
	return _gbacd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072")
}
func (_dcce *CT_SRgbColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _dcce.ValAttr)})
	e.EncodeToken(start)
	if _dcce.EG_ColorTransform != nil {
		for _, _gegfe := range _dcce.EG_ColorTransform {
			_gegfe.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AdjPoint2D and its children, prefixing error messages with path
func (_ageb *CT_AdjPoint2D) ValidateWithPath(path string) error {
	if _fga := _ageb.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _fga != nil {
		return _fga
	}
	if _dcb := _ageb.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _dcb != nil {
		return _dcb
	}
	return nil
}

type CT_GeomGuideList struct{ Gd []*CT_GeomGuide }

const (
	ST_BlendModeUnset   ST_BlendMode = 0
	ST_BlendModeOver    ST_BlendMode = 1
	ST_BlendModeMult    ST_BlendMode = 2
	ST_BlendModeScreen  ST_BlendMode = 3
	ST_BlendModeDarken  ST_BlendMode = 4
	ST_BlendModeLighten ST_BlendMode = 5
)

func (_gcgde *ST_TextVertOverflowType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abbgc, _aeaag := d.Token()
	if _aeaag != nil {
		return _aeaag
	}
	if _fgdga, _egaaa := _abbgc.(_b.EndElement); _egaaa && _fgdga.Name == start.Name {
		*_gcgde = 1
		return nil
	}
	if _ddfdda, _abbef := _abbgc.(_b.CharData); !_abbef {
		return _bb.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abbgc)
	} else {
		switch string(_ddfdda) {
		case "":
			*_gcgde = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_gcgde = 1
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
			*_gcgde = 2
		case "\u0063\u006c\u0069\u0070":
			*_gcgde = 3
		}
	}
	_abbgc, _aeaag = d.Token()
	if _aeaag != nil {
		return _aeaag
	}
	if _cddcb, _bdbcd := _abbgc.(_b.EndElement); _bdbcd && _cddcb.Name == start.Name {
		return nil
	}
	return _bb.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abbgc)
}

type EG_LineDashProperties struct {
	PrstDash *CT_PresetLineDashProperties
	CustDash *CT_DashStopList
}

func (_gaebee *CT_Scene3D) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gccef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0063\u0061\u006d\u0065\u0072\u0061"}}
	e.EncodeElement(_gaebee.Camera, _gccef)
	_abgd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
	e.EncodeElement(_gaebee.LightRig, _abgd)
	if _gaebee.Backdrop != nil {
		_ecfd := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}}
		e.EncodeElement(_gaebee.Backdrop, _ecfd)
	}
	if _gaebee.ExtLst != nil {
		_fdac := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaebee.ExtLst, _fdac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LineStyleList and its children
func (_ffbadd *CT_LineStyleList) Validate() error {
	return _ffbadd.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the EG_TextUnderlineLine and its children, prefixing error messages with path
func (_caaa *EG_TextUnderlineLine) ValidateWithPath(path string) error {
	if _caaa.ULnTx != nil {
		if _cdbba := _caaa.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _cdbba != nil {
			return _cdbba
		}
	}
	if _caaa.ULn != nil {
		if _badd := _caaa.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _badd != nil {
			return _badd
		}
	}
	return nil
}

type CT_Path2DCubicBezierTo struct{ Pt []*CT_AdjPoint2D }
type ST_ColorSchemeIndex byte

func (_dggec *CT_TextAutonumberBullet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_fbafce, _cdeag := _dggec.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cdeag != nil {
		return _cdeag
	}
	start.Attr = append(start.Attr, _fbafce)
	if _dggec.StartAtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0072\u0074\u0041\u0074"}, Value: _bb.Sprintf("\u0025\u0076", *_dggec.StartAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_begeg *CT_RegularTextRun) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _begeg.RPr != nil {
		_fegef := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_begeg.RPr, _fegef)
	}
	_adcfa := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0074"}}
	_f.AddPreserveSpaceAttr(&_adcfa, _begeg.T)
	e.EncodeElement(_begeg.T, _adcfa)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_BiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

// ValidateWithPath validates the Graphic and its children, prefixing error messages with path
func (_efcdc *Graphic) ValidateWithPath(path string) error {
	if _fgedce := _efcdc.CT_GraphicalObject.ValidateWithPath(path); _fgedce != nil {
		return _fgedce
	}
	return nil
}
func (_gcgbg ST_AnimationChartOnlyBuildType) ValidateWithPath(path string) error {
	switch _gcgbg {
	case 0, 1, 2, 3, 4:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcgbg))
	}
	return nil
}
func NewCT_ColorChangeEffect() *CT_ColorChangeEffect {
	_dfec := &CT_ColorChangeEffect{}
	_dfec.ClrFrom = NewCT_Color()
	_dfec.ClrTo = NewCT_Color()
	return _dfec
}
func (_effeee ST_PathShadeType) String() string {
	switch _effeee {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0061p\u0065"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0072\u0065\u0063\u0074"
	}
	return ""
}
func (_gfdea ST_RectAlignment) Validate() error  { return _gfdea.ValidateWithPath("") }
func NewCT_LuminanceEffect() *CT_LuminanceEffect { _acdfd := &CT_LuminanceEffect{}; return _acdfd }

type CT_EffectStyleList struct{ EffectStyle []*CT_EffectStyleItem }

func (_acgg *ST_BlackWhiteMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acgg = 0
	case "\u0063\u006c\u0072":
		*_acgg = 1
	case "\u0061\u0075\u0074\u006f":
		*_acgg = 2
	case "\u0067\u0072\u0061\u0079":
		*_acgg = 3
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_acgg = 4
	case "\u0069n\u0076\u0047\u0072\u0061\u0079":
		*_acgg = 5
	case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
		*_acgg = 6
	case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
		*_acgg = 7
	case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
		*_acgg = 8
	case "\u0062\u006c\u0061c\u006b":
		*_acgg = 9
	case "\u0077\u0068\u0069t\u0065":
		*_acgg = 10
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_acgg = 11
	}
	return nil
}
func (_fgba *CT_AudioCD) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_abc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0073\u0074"}}
	e.EncodeElement(_fgba.St, _abc)
	_dbec := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065n\u0064"}}
	e.EncodeElement(_fgba.End, _dbec)
	if _fgba.ExtLst != nil {
		_ebea := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgba.ExtLst, _ebea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ST_Coordinate is a union type
type ST_Coordinate struct {
	ST_CoordinateUnqualified *int64
	ST_UniversalMeasure      *string
}

func NewCT_TransformEffect() *CT_TransformEffect    { _bcgd := &CT_TransformEffect{}; return _bcgd }
func NewCT_FillEffect() *CT_FillEffect              { _bagd := &CT_FillEffect{}; return _bagd }
func (_cdddg ST_TextFontAlignType) Validate() error { return _cdddg.ValidateWithPath("") }

type CT_FontScheme struct {
	NameAttr  string
	MajorFont *CT_FontCollection
	MinorFont *CT_FontCollection
	ExtLst    *CT_OfficeArtExtensionList
}
type CT_TextNoBullet struct{}

// Validate validates the CT_Transform2D and its children
func (_addae *CT_Transform2D) Validate() error {
	return _addae.ValidateWithPath("\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044")
}

// Validate validates the CT_SupplementalFont and its children
func (_agfcc *CT_SupplementalFont) Validate() error {
	return _agfcc.ValidateWithPath("\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074")
}
func (_beafag *ST_PathShadeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_beafag = 0
	case "\u0073\u0068\u0061p\u0065":
		*_beafag = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_beafag = 2
	case "\u0072\u0065\u0063\u0074":
		*_beafag = 3
	}
	return nil
}
func (_efg *CT_AdjPoint2D) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfe := range start.Attr {
		if _bfe.Name.Local == "\u0078" {
			_gb, _fae := ParseUnionST_AdjCoordinate(_bfe.Value)
			if _fae != nil {
				return _fae
			}
			_efg.XAttr = _gb
			continue
		}
		if _bfe.Name.Local == "\u0079" {
			_gc, _feg := ParseUnionST_AdjCoordinate(_bfe.Value)
			if _feg != nil {
				return _feg
			}
			_efg.YAttr = _gc
			continue
		}
	}
	for {
		_efc, _cad := d.Token()
		if _cad != nil {
			return _bb.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041d\u006aP\u006fi\u006e\u0074\u0032\u0044\u003a\u0020\u0025s", _cad)
		}
		if _fbc, _bdf := _efc.(_b.EndElement); _bdf && _fbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffgbg *CT_TextBulletSizePercent) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffgbg.ValAttr = "\u0031\u0030\u0030\u0025"
	for _, _fdef := range start.Attr {
		if _fdef.Name.Local == "\u0076\u0061\u006c" {
			_dgeab, _edbfa := _fdef.Value, error(nil)
			if _edbfa != nil {
				return _edbfa
			}
			_ffgbg.ValAttr = _dgeab
			continue
		}
	}
	for {
		_cfcf, _ccgd := d.Token()
		if _ccgd != nil {
			return _bb.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054ext\u0042ul\u006c\u0065\u0074\u0053\u0069\u007a\u0065Pe\u0072\u0063\u0065\u006e\u0074\u003a\u0020%\u0073", _ccgd)
		}
		if _gedff, _acfde := _cfcf.(_b.EndElement); _acfde && _gedff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aabba *CT_TablePartStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aabba.TcTxStyle != nil {
		_acfcg := _b.StartElement{Name: _b.Name{Local: "a\u003a\u0074\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aabba.TcTxStyle, _acfcg)
	}
	if _aabba.TcStyle != nil {
		_afegf := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0074\u0063\u0053\u0074\u0079\u006ce"}}
		e.EncodeElement(_aabba.TcStyle, _afegf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bae *CT_AlphaReplaceEffect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcdb := range start.Attr {
		if _bcdb.Name.Local == "\u0061" {
			_acbf, _bab := ParseUnionST_PositiveFixedPercentage(_bcdb.Value)
			if _bab != nil {
				return _bab
			}
			_bae.AAttr = _acbf
			continue
		}
	}
	for {
		_bdd, _ebfc := d.Token()
		if _ebfc != nil {
			return _bb.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006ca\u0063\u0065\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _ebfc)
		}
		if _eege, _deebd := _bdd.(_b.EndElement); _deebd && _eege.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdceg ST_PathShadeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdceg.String(), start)
}

type CT_HslColor struct {
	HueAttr           int32
	SatAttr           ST_Percentage
	LumAttr           ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}
type CT_FillEffect struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_gabaa ST_TextUnderlineType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gabaa.String(), start)
}
func (_ccdeee ST_BlendMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efeca := _b.Attr{}
	_efeca.Name = name
	switch _ccdeee {
	case ST_BlendModeUnset:
		_efeca.Value = ""
	case ST_BlendModeOver:
		_efeca.Value = "\u006f\u0076\u0065\u0072"
	case ST_BlendModeMult:
		_efeca.Value = "\u006d\u0075\u006c\u0074"
	case ST_BlendModeScreen:
		_efeca.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlendModeDarken:
		_efeca.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_BlendModeLighten:
		_efeca.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return _efeca, nil
}

type CT_AnimationDgmElement struct {
	IdAttr      *string
	BldStepAttr ST_DgmBuildStep
}

func (_bfbgf *CT_GvmlConnector) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfbgf.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_bfbgf.SpPr = NewCT_ShapeProperties()
_dgdf:
	for {
		_dgge, _dfdfa := d.Token()
		if _dfdfa != nil {
			return _dfdfa
		}
		switch _aadac := _dgge.(type) {
		case _b.StartElement:
			switch _aadac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _fedb := d.DecodeElement(_bfbgf.NvCxnSpPr, &_aadac); _fedb != nil {
					return _fedb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _cbff := d.DecodeElement(_bfbgf.SpPr, &_aadac); _cbff != nil {
					return _cbff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_bfbgf.Style = NewCT_ShapeStyle()
				if _gdegg := d.DecodeElement(_bfbgf.Style, &_aadac); _gdegg != nil {
					return _gdegg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfbgf.ExtLst = NewCT_OfficeArtExtensionList()
				if _aafc := d.DecodeElement(_bfbgf.ExtLst, &_aadac); _aafc != nil {
					return _aafc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0020\u0025v", _aadac.Name)
				if _cgbdc := d.Skip(); _cgbdc != nil {
					return _cgbdc
				}
			}
		case _b.EndElement:
			break _dgdf
		case _b.CharData:
		}
	}
	return nil
}
func (_bedbaca *CT_Percentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _bedbaca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Percentage() *CT_Percentage { _efced := &CT_Percentage{}; return _efced }
func (_dbdfa *CT_DashStopList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dbdfa.Ds != nil {
		_eddee := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0064\u0073"}}
		for _, _dbbcd := range _dbdfa.Ds {
			e.EncodeElement(_dbbcd, _eddee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcfaa *EG_Geometry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edgde:
	for {
		_edeeb, _ggadga := d.Token()
		if _ggadga != nil {
			return _ggadga
		}
		switch _eefea := _edeeb.(type) {
		case _b.StartElement:
			switch _eefea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_gcfaa.CustGeom = NewCT_CustomGeometry2D()
				if _aecae := d.DecodeElement(_gcfaa.CustGeom, &_eefea); _aecae != nil {
					return _aecae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_gcfaa.PrstGeom = NewCT_PresetGeometry2D()
				if _dgac := d.DecodeElement(_gcfaa.PrstGeom, &_eefea); _dgac != nil {
					return _dgac
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _eefea.Name)
				if _cbaab := d.Skip(); _cbaab != nil {
					return _cbaab
				}
			}
		case _b.EndElement:
			break _edgde
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Point3D and its children
func (_ccbde *CT_Point3D) Validate() error {
	return _ccbde.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044")
}
func (_fffebf ST_LineCap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fffebf.String(), start)
}
func (_fbef *CT_EmptyElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bdea, _fgbc := d.Token()
		if _fgbc != nil {
			return _bb.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079\u0045l\u0065\u006d\u0065n\u0074:\u0020\u0025\u0073", _fgbc)
		}
		if _fegaa, _cagbg := _bdea.(_b.EndElement); _cagbg && _fegaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_acba ST_AnimationChartOnlyBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_caccf := _b.Attr{}
	_caccf.Name = name
	switch _acba {
	case ST_AnimationChartOnlyBuildTypeUnset:
		_caccf.Value = ""
	case ST_AnimationChartOnlyBuildTypeSeries:
		_caccf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_AnimationChartOnlyBuildTypeCategory:
		_caccf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_AnimationChartOnlyBuildTypeSeriesEl:
		_caccf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_AnimationChartOnlyBuildTypeCategoryEl:
		_caccf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _caccf, nil
}
func NewCT_Cell3D() *CT_Cell3D { _gbf := &CT_Cell3D{}; _gbf.Bevel = NewCT_Bevel(); return _gbf }
func NewEG_ThemeableFillStyle() *EG_ThemeableFillStyle {
	_gfbgg := &EG_ThemeableFillStyle{}
	return _gfbgg
}

// Validate validates the CT_TableGrid and its children
func (_cebf *CT_TableGrid) Validate() error {
	return _cebf.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064")
}

// Validate validates the CT_NonVisualPictureProperties and its children
func (_acff *CT_NonVisualPictureProperties) Validate() error {
	return _acff.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073")
}
func (_degb *CT_GeomRect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _bb.Sprintf("\u0025\u0076", _degb.LAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _bb.Sprintf("\u0025\u0076", _degb.TAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _bb.Sprintf("\u0025\u0076", _degb.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _bb.Sprintf("\u0025\u0076", _degb.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcefb *CT_GvmlGroupShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fdaa := _b.StartElement{Name: _b.Name{Local: "a\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gcefb.NvGrpSpPr, _fdaa)
	_bbfdc := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_gcefb.GrpSpPr, _bbfdc)
	if _gcefb.Choice != nil {
		for _, _edfde := range _gcefb.Choice {
			_edfde.MarshalXML(e, _b.StartElement{})
		}
	}
	if _gcefb.ExtLst != nil {
		_gfcc := _b.StartElement{Name: _b.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcefb.ExtLst, _gfcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cdeagf ST_PitchFamily) Validate() error { return _cdeagf.ValidateWithPath("") }

type CT_StretchInfoProperties struct{ FillRect *CT_RelativeRect }

func (_cgfed ST_TextAlignType) ValidateWithPath(path string) error {
	switch _cgfed {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _bb.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgfed))
	}
	return nil
}

// ValidateWithPath validates the CT_EffectProperties and its children, prefixing error messages with path
func (_fcad *CT_EffectProperties) ValidateWithPath(path string) error {
	if _fcad.EffectLst != nil {
		if _egacd := _fcad.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _egacd != nil {
			return _egacd
		}
	}
	if _fcad.EffectDag != nil {
		if _dcdd := _fcad.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _dcdd != nil {
			return _dcdd
		}
	}
	return nil
}
func init() {
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_AudioFile)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065", NewCT_VideoFile)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065", NewCT_QuickTimeFile)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065", NewCT_AudioCDTime)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044", NewCT_AudioCD)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065", NewCT_ColorScheme)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072", NewCT_CustomColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074", NewCT_SupplementalFont)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074", NewCT_CustomColorList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_FontCollection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d", NewCT_EffectStyleItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_FillStyleList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_LineStyleList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074", NewCT_EffectStyleList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074", NewCT_BackgroundFillStyleList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078", NewCT_StyleMatrix)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_BaseStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_OfficeArtExtension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065", NewCT_Angle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065", NewCT_PositiveFixedAngle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_Percentage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_PositivePercentage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065", NewCT_FixedPercentage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065", NewCT_PositiveFixedPercentage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f", NewCT_Ratio)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_Point2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044", NewCT_PositiveSize2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d", NewCT_ComplementTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_GrayscaleTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewCT_GammaTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseGammaTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_ScRgbColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_SRgbColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072", NewCT_HslColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072", NewCT_SystemColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072", NewCT_SchemeColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072", NewCT_PresetColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewCT_OfficeArtExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044", NewCT_Scale2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044", NewCT_Transform2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044", NewCT_GroupTransform2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044", NewCT_Point3D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044", NewCT_Vector3D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073", NewCT_SphereCoords)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074", NewCT_RelativeRect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055", NewCT_ColorMRU)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_EmbeddedWAVAudioFile)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ConnectorLocking)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ShapeLocking)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067", NewCT_PictureLocking)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GroupLocking)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GraphicalObjectFrameLocking)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ContentPartLocking)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualDrawingProps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073", NewCT_NonVisualDrawingShapeProps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualConnectorProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_NonVisualPictureProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualGroupDrawingShapeProps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualGraphicFrameProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_NonVisualContentPartProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061", NewCT_GraphicalObjectData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074", NewCT_GraphicalObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_AnimationDgmElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_AnimationChartElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e", NewCT_AnimationElementChoice)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationDgmBuildProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationChartBuildProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationGraphicalObjectBuildProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_BackgroundFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_WholeE2oFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065", NewCT_GvmlUseShapeRectangle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlTextShape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlShapeNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlShape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l", NewCT_GvmlConnectorNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_GvmlConnector)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlPictureNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065", NewCT_GvmlPicture)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c", NewCT_GvmlGraphicFrameNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065", NewCT_GvmlGraphicalObjectFrame)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c", NewCT_GvmlGroupShapeNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065", NewCT_GvmlGroupShape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a", NewCT_Camera)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067", NewCT_LightRig)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044", NewCT_Scene3D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070", NewCT_Backdrop)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c", NewCT_Bevel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044", NewCT_Shape3D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074", NewCT_FlatText)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaBiLevelEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaCeilingEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaFloorEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaInverseEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074", NewCT_AlphaModulateFixedEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074", NewCT_AlphaOutsetEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaReplaceEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BiLevelEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BlurEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074", NewCT_ColorChangeEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ColorReplaceEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_DuotoneEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_GlowEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_GrayscaleEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_HSLEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_InnerShadowEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_LuminanceEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_OuterShadowEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_PresetShadowEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ReflectionEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_RelativeOffsetEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074", NewCT_SoftEdgesEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_TintEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074", NewCT_TransformEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NoFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_SolidColorFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_LinearShadeProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_PathShadeProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_GradientStopList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_GradientFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TileInfoProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_StretchInfoProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006c\u0069\u0070", NewCT_Blip)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BlipFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_PatternFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_GroupFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_FillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_FillEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074", NewCT_FillOverlayEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065", NewCT_EffectReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072", NewCT_EffectContainer)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074", NewCT_AlphaModulateEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074", NewCT_BlendEffect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074", NewCT_EffectList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_EffectProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065", NewCT_GeomGuide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GeomGuideList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_AdjPoint2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074", NewCT_GeomRect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065", NewCT_XYAdjustHandle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065", NewCT_PolarAdjustHandle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065", NewCT_ConnectionSite)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_AdjustHandleList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074", NewCT_ConnectionSiteList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f", NewCT_Path2DMoveTo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f", NewCT_Path2DLineTo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f", NewCT_Path2DArcTo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f", NewCT_Path2DQuadBezierTo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f", NewCT_Path2DCubicBezierTo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065", NewCT_Path2DClose)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D", NewCT_Path2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074", NewCT_Path2DList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_PresetGeometry2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065", NewCT_PresetTextShape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_CustomGeometry2D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_LineEndProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c", NewCT_LineJoinBevel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064", NewCT_LineJoinRound)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_LineJoinMiterProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_PresetLineDashProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070", NewCT_DashStop)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_DashStopList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_LineProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_ShapeProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_GroupShapeProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_StyleMatrixReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_FontReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ShapeStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn", NewCT_DefaultShapeDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073", NewCT_ObjectStyleDefaults)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_EmptyElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorMapping)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_ColorMappingOverride)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorSchemeAndMapping)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074", NewCT_ColorSchemeList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewCT_OfficeStyleSheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_BaseStylesOverride)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074", NewCT_ClipboardStyleSheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_TableCellProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073", NewCT_Headers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c", NewCT_TableCol)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064", NewCT_TableGrid)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c", NewCT_TableCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077", NewCT_TableRow)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_TableProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D", NewCT_Cell3D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ThemeableLineStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065", NewCT_TableStyleTextStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065", NewCT_TableCellBorderStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065", NewCT_TableBackgroundStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065", NewCT_TableStyleCellStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065", NewCT_TablePartStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074", NewCT_TableStyleList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TextParagraph)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065", NewCT_TextListStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074", NewCT_TextNormalAutofit)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextShapeAutofit)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextNoAutofit)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TextBodyProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079", NewCT_TextBody)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074", NewCT_TextBulletColorFollowText)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074", NewCT_TextBulletSizeFollowText)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextBulletSizePercent)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074", NewCT_TextBulletSizePoint)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextBulletTypefaceFollowText)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextAutonumberBullet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074", NewCT_TextCharBullet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074", NewCT_TextBlipBullet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextNoBullet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074", NewCT_TextFont)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineLineFollowText)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineFillFollowText)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072", NewCT_TextUnderlineFillGroupWrapper)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextCharacterProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextSpacingPercent)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074", NewCT_TextSpacingPoint)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070", NewCT_TextTabStop)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074", NewCT_TextTabStopList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_TextLineBreak)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067", NewCT_TextSpacing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextParagraphProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e", NewCT_RegularTextRun)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce", NewVideoFile)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0067r\u0061\u0070\u0068\u0069\u0063", NewGraphic)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0062\u006c\u0069\u0070", NewBlip)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065", NewTheme)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewThemeOverride)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072", NewThemeManager)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0062\u006c", NewTbl)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "t\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074", NewTblStyleLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061", NewEG_Media)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewEG_ColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewEG_OfficeArtExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065", NewEG_ColorChoice)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D", NewEG_Text3D)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewEG_ShadeProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_FillModeProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewEG_FillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t", NewEG_Effect)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_EffectProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_Geometry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_TextGeometry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineFillProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineJoinProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineDashProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableFillStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableEffectStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073", NewEG_ThemeableFontStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074", NewEG_TextAutofit)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072", NewEG_TextBulletColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065", NewEG_TextBulletSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065", NewEG_TextBulletTypeface)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074", NewEG_TextBullet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065", NewEG_TextUnderlineLine)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c", NewEG_TextUnderlineFill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e", NewEG_TextRun)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041G\u005f\u0042\u006c\u006f\u0062", NewAG_Blob)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewAG_Locking)
}
