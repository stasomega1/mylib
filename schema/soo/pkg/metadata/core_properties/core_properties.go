//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package core_properties

import (
	_cc "encoding/xml"
	_b "fmt"
	_a "github.com/unidoc/unioffice"
	_cf "time"
)

type CT_CoreProperties struct {
	Category       *string
	ContentStatus  *string
	Created        *_a.XSDAny
	Creator        *_a.XSDAny
	Description    *_a.XSDAny
	Identifier     *_a.XSDAny
	Keywords       *CT_Keywords
	Language       *_a.XSDAny
	LastModifiedBy *string
	LastPrinted    *_cf.Time
	Modified       *_a.XSDAny
	Revision       *string
	Subject        *_a.XSDAny
	Title          *_a.XSDAny
	Version        *string
}

func (_da *CT_CoreProperties) UnmarshalXML(d *_cc.Decoder, start _cc.StartElement) error {
_e:
	for {
		_eb, _cgd := d.Token()
		if _cgd != nil {
			return _cgd
		}
		switch _ba := _eb.(type) {
		case _cc.StartElement:
			switch _ba.Name {
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}:
				_da.Category = new(string)
				if _dfa := d.DecodeElement(_da.Category, &_ba); _dfa != nil {
					return _dfa
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}:
				_da.ContentStatus = new(string)
				if _ccb := d.DecodeElement(_da.ContentStatus, &_ba); _ccb != nil {
					return _ccb
				}
			case _cc.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u0063r\u0065\u0061\u0074\u0065\u0064"}:
				_da.Created = new(_a.XSDAny)
				if _ef := d.DecodeElement(_da.Created, &_ba); _ef != nil {
					return _ef
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0063r\u0065\u0061\u0074\u006f\u0072"}:
				_da.Creator = new(_a.XSDAny)
				if _gf := d.DecodeElement(_da.Creator, &_ba); _gf != nil {
					return _gf
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}:
				_da.Description = new(_a.XSDAny)
				if _efg := d.DecodeElement(_da.Description, &_ba); _efg != nil {
					return _efg
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}:
				_da.Identifier = new(_a.XSDAny)
				if _ebf := d.DecodeElement(_da.Identifier, &_ba); _ebf != nil {
					return _ebf
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}:
				_da.Keywords = NewCT_Keywords()
				if _aff := d.DecodeElement(_da.Keywords, &_ba); _aff != nil {
					return _aff
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}:
				_da.Language = new(_a.XSDAny)
				if _aaa := d.DecodeElement(_da.Language, &_ba); _aaa != nil {
					return _aaa
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}:
				_da.LastModifiedBy = new(string)
				if _ca := d.DecodeElement(_da.LastModifiedBy, &_ba); _ca != nil {
					return _ca
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "l\u0061\u0073\u0074\u0050\u0072\u0069\u006e\u0074\u0065\u0064"}:
				_da.LastPrinted = new(_cf.Time)
				if _aag := d.DecodeElement(_da.LastPrinted, &_ba); _aag != nil {
					return _aag
				}
			case _cc.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}:
				_da.Modified = new(_a.XSDAny)
				if _efe := d.DecodeElement(_da.Modified, &_ba); _efe != nil {
					return _efe
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}:
				_da.Revision = new(string)
				if _ge := d.DecodeElement(_da.Revision, &_ba); _ge != nil {
					return _ge
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0073u\u0062\u006a\u0065\u0063\u0074"}:
				_da.Subject = new(_a.XSDAny)
				if _ee := d.DecodeElement(_da.Subject, &_ba); _ee != nil {
					return _ee
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0074\u0069\u0074l\u0065"}:
				_da.Title = new(_a.XSDAny)
				if _dab := d.DecodeElement(_da.Title, &_ba); _dab != nil {
					return _dab
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}:
				_da.Version = new(string)
				if _cga := d.DecodeElement(_da.Version, &_ba); _cga != nil {
					return _cga
				}
			default:
				_a.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ba.Name)
				if _eg := d.Skip(); _eg != nil {
					return _eg
				}
			}
		case _cc.EndElement:
			break _e
		case _cc.CharData:
		}
	}
	return nil
}

type CT_Keyword struct {
	LangAttr *string
	Content  string
}

func (_d *CT_CoreProperties) MarshalXML(e *_cc.Encoder, start _cc.StartElement) error {
	e.EncodeToken(start)
	if _d.Category != nil {
		_ff := _cc.StartElement{Name: _cc.Name{Local: "c\u0070\u003a\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}}
		_a.AddPreserveSpaceAttr(&_ff, *_d.Category)
		e.EncodeElement(_d.Category, _ff)
	}
	if _d.ContentStatus != nil {
		_fa := _cc.StartElement{Name: _cc.Name{Local: "\u0063\u0070:\u0063\u006f\u006et\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}}
		_a.AddPreserveSpaceAttr(&_fa, *_d.ContentStatus)
		e.EncodeElement(_d.ContentStatus, _fa)
	}
	if _d.Created != nil {
		_cg := _cc.StartElement{Name: _cc.Name{Local: "\u0064c\u0074e\u0072\u006d\u0073\u003a\u0063\u0072\u0065\u0061\u0074\u0065\u0064"}}
		e.EncodeElement(_d.Created, _cg)
	}
	if _d.Creator != nil {
		_df := _cc.StartElement{Name: _cc.Name{Local: "\u0064\u0063\u003a\u0063\u0072\u0065\u0061\u0074\u006f\u0072"}}
		e.EncodeElement(_d.Creator, _df)
	}
	if _d.Description != nil {
		_de := _cc.StartElement{Name: _cc.Name{Local: "\u0064\u0063\u003a\u0064\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_d.Description, _de)
	}
	if _d.Identifier != nil {
		_af := _cc.StartElement{Name: _cc.Name{Local: "\u0064\u0063\u003a\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_d.Identifier, _af)
	}
	if _d.Keywords != nil {
		_bc := _cc.StartElement{Name: _cc.Name{Local: "c\u0070\u003a\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}}
		e.EncodeElement(_d.Keywords, _bc)
	}
	if _d.Language != nil {
		_fb := _cc.StartElement{Name: _cc.Name{Local: "d\u0063\u003a\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}}
		e.EncodeElement(_d.Language, _fb)
	}
	if _d.LastModifiedBy != nil {
		_bb := _cc.StartElement{Name: _cc.Name{Local: "\u0063\u0070\u003a\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}}
		_a.AddPreserveSpaceAttr(&_bb, *_d.LastModifiedBy)
		e.EncodeElement(_d.LastModifiedBy, _bb)
	}
	if _d.LastPrinted != nil {
		_def := _cc.StartElement{Name: _cc.Name{Local: "\u0063\u0070\u003a\u006c\u0061\u0073\u0074\u0050\u0072i\u006e\u0074\u0065\u0064"}}
		e.EncodeElement(_d.LastPrinted, _def)
	}
	if _d.Modified != nil {
		_be := _cc.StartElement{Name: _cc.Name{Local: "\u0064\u0063t\u0065\u0072\u006ds\u003a\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}}
		e.EncodeElement(_d.Modified, _be)
	}
	if _d.Revision != nil {
		_dea := _cc.StartElement{Name: _cc.Name{Local: "c\u0070\u003a\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}}
		_a.AddPreserveSpaceAttr(&_dea, *_d.Revision)
		e.EncodeElement(_d.Revision, _dea)
	}
	if _d.Subject != nil {
		_g := _cc.StartElement{Name: _cc.Name{Local: "\u0064\u0063\u003a\u0073\u0075\u0062\u006a\u0065\u0063\u0074"}}
		e.EncodeElement(_d.Subject, _g)
	}
	if _d.Title != nil {
		_dec := _cc.StartElement{Name: _cc.Name{Local: "\u0064\u0063\u003a\u0074\u0069\u0074\u006c\u0065"}}
		e.EncodeElement(_d.Title, _dec)
	}
	if _d.Version != nil {
		_aa := _cc.StartElement{Name: _cc.Name{Local: "\u0063\u0070\u003a\u0076\u0065\u0072\u0073\u0069\u006f\u006e"}}
		_a.AddPreserveSpaceAttr(&_aa, *_d.Version)
		e.EncodeElement(_d.Version, _aa)
	}
	e.EncodeToken(_cc.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CoreProperties and its children
func (_dfc *CT_CoreProperties) Validate() error {
	return _dfc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

type CT_Keywords struct {
	LangAttr *string
	Value    []*CT_Keyword
}

func (_ffd *CT_Keywords) MarshalXML(e *_cc.Encoder, start _cc.StartElement) error {
	if _ffd.LangAttr != nil {
		start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078\u006d\u006c\u003a\u006c\u0061\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_ffd.LangAttr)})
	}
	e.EncodeToken(start)
	if _ffd.Value != nil {
		_gb := _cc.StartElement{Name: _cc.Name{Local: "\u0063\u0070\u003a\u0076\u0061\u006c\u0075\u0065"}}
		for _, _cb := range _ffd.Value {
			e.EncodeElement(_cb, _gb)
		}
	}
	e.EncodeToken(_cc.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Keywords and its children, prefixing error messages with path
func (_cgdc *CT_Keywords) ValidateWithPath(path string) error {
	for _fgc, _dff := range _cgdc.Value {
		if _dc := _dff.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _fgc)); _dc != nil {
			return _dc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Keyword and its children, prefixing error messages with path
func (_aad *CT_Keyword) ValidateWithPath(path string) error { return nil }
func (_gbg *CT_Keywords) UnmarshalXML(d *_cc.Decoder, start _cc.StartElement) error {
	for _, _ffe := range start.Attr {
		if _ffe.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _ffe.Name.Local == "\u006c\u0061\u006e\u0067" {
			_gba, _ecd := _ffe.Value, error(nil)
			if _ecd != nil {
				return _ecd
			}
			_gbg.LangAttr = &_gba
			continue
		}
	}
_gg:
	for {
		_bcc, _ae := d.Token()
		if _ae != nil {
			return _ae
		}
		switch _bbfg := _bcc.(type) {
		case _cc.StartElement:
			switch _bbfg.Name {
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076\u0061\u006cu\u0065"}:
				_ffdc := NewCT_Keyword()
				if _ag := d.DecodeElement(_ffdc, &_bbfg); _ag != nil {
					return _ag
				}
				_gbg.Value = append(_gbg.Value, _ffdc)
			default:
				_a.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _bbfg.Name)
				if _bg := d.Skip(); _bg != nil {
					return _bg
				}
			}
		case _cc.EndElement:
			break _gg
		case _cc.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CoreProperties and its children, prefixing error messages with path
func (_aggb *CoreProperties) ValidateWithPath(path string) error {
	if _cbf := _aggb.CT_CoreProperties.ValidateWithPath(path); _cbf != nil {
		return _cbf
	}
	return nil
}
func (_efc *CT_Keyword) MarshalXML(e *_cc.Encoder, start _cc.StartElement) error {
	if _efc.LangAttr != nil {
		start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078\u006d\u006c\u003a\u006c\u0061\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_efc.LangAttr)})
	}
	e.EncodeElement(_efc.Content, start)
	e.EncodeToken(_cc.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CoreProperties and its children
func (_bbfge *CoreProperties) Validate() error {
	return _bbfge.ValidateWithPath("\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_Keyword and its children
func (_ece *CT_Keyword) Validate() error {
	return _ece.ValidateWithPath("\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064")
}

// Validate validates the CT_Keywords and its children
func (_db *CT_Keywords) Validate() error {
	return _db.ValidateWithPath("C\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073")
}
func (_egc *CT_Keyword) UnmarshalXML(d *_cc.Decoder, start _cc.StartElement) error {
	for _, _eeg := range start.Attr {
		if _eeg.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _eeg.Name.Local == "\u006c\u0061\u006e\u0067" {
			_gc, _bd := _eeg.Value, error(nil)
			if _bd != nil {
				return _bd
			}
			_egc.LangAttr = &_gc
			continue
		}
	}
	for {
		_beg, _cae := d.Token()
		if _cae != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u003a\u0020%\u0073", _cae)
		}
		if _dabf, _dfg := _beg.(_cc.CharData); _dfg {
			_egc.Content = string(_dabf)
		}
		if _aaga, _efgb := _beg.(_cc.EndElement); _efgb && _aaga.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Keywords() *CT_Keywords { _aaab := &CT_Keywords{}; return _aaab }

// ValidateWithPath validates the CT_CoreProperties and its children, prefixing error messages with path
func (_bbf *CT_CoreProperties) ValidateWithPath(path string) error {
	if _bbf.Keywords != nil {
		if _ec := _bbf.Keywords.ValidateWithPath(path + "\u002fK\u0065\u0079\u0077\u006f\u0072\u0064s"); _ec != nil {
			return _ec
		}
	}
	return nil
}

type CoreProperties struct{ CT_CoreProperties }

func NewCT_Keyword() *CT_Keyword { _fba := &CT_Keyword{}; return _fba }
func NewCoreProperties() *CoreProperties {
	_ad := &CoreProperties{}
	_ad.CT_CoreProperties = *NewCT_CoreProperties()
	return _ad
}
func (_dag *CoreProperties) MarshalXML(e *_cc.Encoder, start _cc.StartElement) error {
	start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"})
	start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0063\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"})
	start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0064\u0063"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f"})
	start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0064\u0063\u0074\u0065\u0072\u006d\u0073"}, Value: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/"})
	start.Attr = append(start.Attr, _cc.Attr{Name: _cc.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0063\u0070\u003a\u0063\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"
	return _dag.CT_CoreProperties.MarshalXML(e, start)
}
func NewCT_CoreProperties() *CT_CoreProperties { _f := &CT_CoreProperties{}; return _f }
func (_gd *CoreProperties) UnmarshalXML(d *_cc.Decoder, start _cc.StartElement) error {
	_gd.CT_CoreProperties = *NewCT_CoreProperties()
_fbf:
	for {
		_dg, _dgb := d.Token()
		if _dgb != nil {
			return _dgb
		}
		switch _agg := _dg.(type) {
		case _cc.StartElement:
			switch _agg.Name {
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}:
				_gd.Category = new(string)
				if _bef := d.DecodeElement(_gd.Category, &_agg); _bef != nil {
					return _bef
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}:
				_gd.ContentStatus = new(string)
				if _baa := d.DecodeElement(_gd.ContentStatus, &_agg); _baa != nil {
					return _baa
				}
			case _cc.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u0063r\u0065\u0061\u0074\u0065\u0064"}:
				_gd.Created = new(_a.XSDAny)
				if _fgg := d.DecodeElement(_gd.Created, &_agg); _fgg != nil {
					return _fgg
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0063r\u0065\u0061\u0074\u006f\u0072"}:
				_gd.Creator = new(_a.XSDAny)
				if _deg := d.DecodeElement(_gd.Creator, &_agg); _deg != nil {
					return _deg
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}:
				_gd.Description = new(_a.XSDAny)
				if _dbb := d.DecodeElement(_gd.Description, &_agg); _dbb != nil {
					return _dbb
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}:
				_gd.Identifier = new(_a.XSDAny)
				if _afb := d.DecodeElement(_gd.Identifier, &_agg); _afb != nil {
					return _afb
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}:
				_gd.Keywords = NewCT_Keywords()
				if _egb := d.DecodeElement(_gd.Keywords, &_agg); _egb != nil {
					return _egb
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}:
				_gd.Language = new(_a.XSDAny)
				if _ga := d.DecodeElement(_gd.Language, &_agg); _ga != nil {
					return _ga
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}:
				_gd.LastModifiedBy = new(string)
				if _fc := d.DecodeElement(_gd.LastModifiedBy, &_agg); _fc != nil {
					return _fc
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "l\u0061\u0073\u0074\u0050\u0072\u0069\u006e\u0074\u0065\u0064"}:
				_gd.LastPrinted = new(_cf.Time)
				if _fca := d.DecodeElement(_gd.LastPrinted, &_agg); _fca != nil {
					return _fca
				}
			case _cc.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}:
				_gd.Modified = new(_a.XSDAny)
				if _ea := d.DecodeElement(_gd.Modified, &_agg); _ea != nil {
					return _ea
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}:
				_gd.Revision = new(string)
				if _ccg := d.DecodeElement(_gd.Revision, &_agg); _ccg != nil {
					return _ccg
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0073u\u0062\u006a\u0065\u0063\u0074"}:
				_gd.Subject = new(_a.XSDAny)
				if _fga := d.DecodeElement(_gd.Subject, &_agg); _fga != nil {
					return _fga
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0074\u0069\u0074l\u0065"}:
				_gd.Title = new(_a.XSDAny)
				if _fd := d.DecodeElement(_gd.Title, &_agg); _fd != nil {
					return _fd
				}
			case _cc.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}:
				_gd.Version = new(string)
				if _bdc := d.DecodeElement(_gd.Version, &_agg); _bdc != nil {
					return _bdc
				}
			default:
				_a.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072t\u0069e\u0073\u0020\u0025\u0076", _agg.Name)
				if _eaf := d.Skip(); _eaf != nil {
					return _eaf
				}
			}
		case _cc.EndElement:
			break _fbf
		case _cc.CharData:
		}
	}
	return nil
}
func init() {
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_CoreProperties)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "C\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073", NewCT_Keywords)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064", NewCT_Keyword)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0063\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCoreProperties)
}
