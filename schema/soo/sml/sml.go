//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sml

import (
	_b "encoding/xml"
	_f "fmt"
	_d "github.com/stasomega1/mylib"
	_a "github.com/stasomega1/mylib/schema/soo/dml/spreadsheetDrawing"
	_c "github.com/stasomega1/mylib/schema/soo/ofc/sharedTypes"
	_e "strconv"
	_gf "strings"
	_gb "time"
)

func NewCT_SharedItems() *CT_SharedItems { _eacag := &CT_SharedItems{}; return _eacag }

// ValidateWithPath validates the CT_DbPr and its children, prefixing error messages with path
func (_afbaf *CT_DbPr) ValidateWithPath(path string) error { return nil }
func (_egfec ST_UpdateLinks) ValidateWithPath(path string) error {
	switch _egfec {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egfec))
	}
	return nil
}
func NewCT_CustomFilters() *CT_CustomFilters { _ecdeb := &CT_CustomFilters{}; return _ecdeb }
func NewCT_Chartsheet() *CT_Chartsheet {
	_dgcg := &CT_Chartsheet{}
	_dgcg.SheetViews = NewCT_ChartsheetViews()
	_dgcg.Drawing = NewCT_Drawing()
	return _dgcg
}
func (_egbee ST_OleUpdate) Validate() error { return _egbee.ValidateWithPath("") }
func NewCT_Table() *CT_Table {
	_eabfcc := &CT_Table{}
	_eabfcc.TableColumns = NewCT_TableColumns()
	return _eabfcc
}
func (_cdcef ST_FileType) String() string {
	switch _cdcef {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u0063"
	case 2:
		return "\u0077\u0069\u006e"
	case 3:
		return "\u0064\u006f\u0073"
	case 4:
		return "\u006c\u0069\u006e"
	case 5:
		return "\u006f\u0074\u0068e\u0072"
	}
	return ""
}

// Validate validates the CT_CellWatches and its children
func (_gdedb *CT_CellWatches) Validate() error {
	return _gdedb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073")
}

// Validate validates the CT_ExternalReferences and its children
func (_ddcfd *CT_ExternalReferences) Validate() error {
	return _ddcfd.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073")
}

type CT_GroupLevels struct {

	// Grouping Level Count
	CountAttr *uint32

	// OLAP Grouping Levels
	GroupLevel []*CT_GroupLevel
}

func (_ffcbg ST_TargetScreenSize) ValidateWithPath(path string) error {
	switch _ffcbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcbg))
	}
	return nil
}

type CT_DateGroupItem struct {

	// Year
	YearAttr uint16

	// Month
	MonthAttr *uint16

	// Day
	DayAttr *uint16

	// Hour
	HourAttr *uint16

	// Minute
	MinuteAttr *uint16

	// Second
	SecondAttr *uint16

	// Date Time Grouping
	DateTimeGroupingAttr ST_DateTimeGrouping
}

func (_eggefa *CT_RElt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edgg:
	for {
		_agfb, _gaaaaa := d.Token()
		if _gaaaaa != nil {
			return _gaaaaa
		}
		switch _dfeae := _agfb.(type) {
		case _b.StartElement:
			switch _dfeae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_eggefa.RPr = NewCT_RPrElt()
				if _dceba := d.DecodeElement(_eggefa.RPr, &_dfeae); _dceba != nil {
					return _dceba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _aggeg := d.DecodeElement(&_eggefa.T, &_dfeae); _aggeg != nil {
					return _aggeg
				}
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0045\u006c\u0074\u0020\u0025\u0076", _dfeae.Name)
				if _fggag := d.Skip(); _fggag != nil {
					return _fggag
				}
			}
		case _b.EndElement:
			break _edgg
		case _b.CharData:
		}
	}
	return nil
}
func (_efag *CT_CalculatedMembers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efag.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_efag.CountAttr)})
	}
	e.EncodeToken(start)
	_gfdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _bbgd := range _efag.CalculatedMember {
		e.EncodeElement(_bbgd, _gfdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleSize and its children
func (_gbbba *CT_OleSize) Validate() error {
	return _gbbba.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065")
}

type CT_PivotTableStyle struct {

	// Table Style Name
	NameAttr *string

	// Show Row Header Formatting
	ShowRowHeadersAttr *bool

	// Show Table Style Column Header Formatting
	ShowColHeadersAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColStripesAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool
}

func NewCT_Rst() *CT_Rst { _ffdgc := &CT_Rst{}; return _ffdgc }

// Validate validates the CT_ChartsheetPr and its children
func (_gcbc *CT_ChartsheetPr) Validate() error {
	return _gcbc.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072")
}
func (_eeed *CT_Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeed.Authors = NewCT_Authors()
	_eeed.CommentList = NewCT_CommentList()
_faegb:
	for {
		_gdeg, _fdfef := d.Token()
		if _fdfef != nil {
			return _fdfef
		}
		switch _dedf := _gdeg.(type) {
		case _b.StartElement:
			switch _dedf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _ddbe := d.DecodeElement(_eeed.Authors, &_dedf); _ddbe != nil {
					return _ddbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _baa := d.DecodeElement(_eeed.CommentList, &_dedf); _baa != nil {
					return _baa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eeed.ExtLst = NewCT_ExtensionList()
				if _cddb := d.DecodeElement(_eeed.ExtLst, &_dedf); _cddb != nil {
					return _cddb
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _dedf.Name)
				if _affe := d.Skip(); _affe != nil {
					return _affe
				}
			}
		case _b.EndElement:
			break _faegb
		case _b.CharData:
		}
	}
	return nil
}
func (_bdefg *CT_CalculatedMember) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _bdefg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078"}, Value: _f.Sprintf("\u0025\u0076", _bdefg.MdxAttr)})
	if _bdefg.MemberNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bdefg.MemberNameAttr)})
	}
	if _bdefg.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _f.Sprintf("\u0025\u0076", *_bdefg.HierarchyAttr)})
	}
	if _bdefg.ParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bdefg.ParentAttr)})
	}
	if _bdefg.SolveOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bdefg.SolveOrderAttr)})
	}
	if _bdefg.SetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bdefg.SetAttr))})
	}
	e.EncodeToken(start)
	if _bdefg.ExtLst != nil {
		_dbab := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdefg.ExtLst, _dbab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adddeb *ST_UnderlineValues) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adddeb = 0
	case "\u0073\u0069\u006e\u0067\u006c\u0065":
		*_adddeb = 1
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_adddeb = 2
	case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_adddeb = 3
	case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_adddeb = 4
	case "\u006e\u006f\u006e\u0065":
		*_adddeb = 5
	}
	return nil
}
func (_efdda ST_ItemType) ValidateWithPath(path string) error {
	switch _efdda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efdda))
	}
	return nil
}

type CT_Sheet struct {

	// Sheet Name
	NameAttr string

	// Sheet Tab Id
	SheetIdAttr uint32

	// Visible State
	StateAttr ST_SheetState
	IdAttr    string
}

func (_gdbcg ST_MdxKPIProperty) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cabdde := _b.Attr{}
	_cabdde.Name = name
	switch _gdbcg {
	case ST_MdxKPIPropertyUnset:
		_cabdde.Value = ""
	case ST_MdxKPIPropertyV:
		_cabdde.Value = "\u0076"
	case ST_MdxKPIPropertyG:
		_cabdde.Value = "\u0067"
	case ST_MdxKPIPropertyS:
		_cabdde.Value = "\u0073"
	case ST_MdxKPIPropertyT:
		_cabdde.Value = "\u0074"
	case ST_MdxKPIPropertyW:
		_cabdde.Value = "\u0077"
	case ST_MdxKPIPropertyM:
		_cabdde.Value = "\u006d"
	}
	return _cabdde, nil
}
func NewCT_Dimensions() *CT_Dimensions { _ffbga := &CT_Dimensions{}; return _ffbga }

type ST_VolValueType byte

func (_dbebc ST_FormatAction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gegeg := _b.Attr{}
	_gegeg.Name = name
	switch _dbebc {
	case ST_FormatActionUnset:
		_gegeg.Value = ""
	case ST_FormatActionBlank:
		_gegeg.Value = "\u0062\u006c\u0061n\u006b"
	case ST_FormatActionFormatting:
		_gegeg.Value = "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case ST_FormatActionDrill:
		_gegeg.Value = "\u0064\u0072\u0069l\u006c"
	case ST_FormatActionFormula:
		_gegeg.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return _gegeg, nil
}

type CT_CustomFilter struct {

	// Filter Comparison Operator
	OperatorAttr ST_FilterOperator

	// Top or Bottom Value
	ValAttr *string
}
type CT_pivotTableDefinition struct {

	// Name
	NameAttr string

	// PivotCache Definition Id
	CacheIdAttr uint32

	// Data On Rows
	DataOnRowsAttr *bool

	// Default Data Field Position
	DataPositionAttr *uint32

	// Data Field Header Name
	DataCaptionAttr string

	// Grand Totals Caption
	GrandTotalCaptionAttr *string

	// Error Caption
	ErrorCaptionAttr *string

	// Show Error
	ShowErrorAttr *bool

	// Caption for Missing Values
	MissingCaptionAttr *string

	// Show Missing
	ShowMissingAttr *bool

	// Page Header Style Name
	PageStyleAttr *string

	// Table Style Name
	PivotTableStyleAttr *string

	// Vacated Style
	VacatedStyleAttr *string

	// PivotTable Custom String
	TagAttr *string

	// PivotTable Last Updated Version
	UpdatedVersionAttr *uint8

	// Minimum Refreshable Version
	MinRefreshableVersionAttr *uint8

	// Asterisk Totals
	AsteriskTotalsAttr *bool

	// Show Item Names
	ShowItemsAttr *bool

	// Allow Edit Data
	EditDataAttr *bool

	// Disable Field List
	DisableFieldListAttr *bool

	// Show Calculated Members
	ShowCalcMbrsAttr *bool

	// Total Visual Data
	VisualTotalsAttr *bool

	// Show Multiple Labels
	ShowMultipleLabelAttr *bool

	// Show Drop Down
	ShowDataDropDownAttr *bool

	// Show Expand Collapse
	ShowDrillAttr *bool

	// Print Drill Indicators
	PrintDrillAttr *bool

	// Show Member Property ToolTips
	ShowMemberPropertyTipsAttr *bool

	// Show ToolTips on Data
	ShowDataTipsAttr *bool

	// Enable PivotTable Wizard
	EnableWizardAttr *bool

	// Enable Drill Down
	EnableDrillAttr *bool

	// Enable Field Properties
	EnableFieldPropertiesAttr *bool

	// Preserve Formatting
	PreserveFormattingAttr *bool

	// Auto Formatting
	UseAutoFormattingAttr *bool

	// Page Wrap
	PageWrapAttr *uint32

	// Page Over Then Down
	PageOverThenDownAttr *bool

	// Subtotal Hidden Items
	SubtotalHiddenItemsAttr *bool

	// Row Grand Totals
	RowGrandTotalsAttr *bool

	// Grand Totals On Columns
	ColGrandTotalsAttr *bool

	// Field Print Titles
	FieldPrintTitlesAttr *bool

	// Item Print Titles
	ItemPrintTitlesAttr *bool

	// Merge Titles
	MergeItemAttr *bool

	// Show Drop Zones
	ShowDropZonesAttr *bool

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// Indentation for Compact Axis
	IndentAttr *uint32

	// Show Empty Row
	ShowEmptyRowAttr *bool

	// Show Empty Column
	ShowEmptyColAttr *bool

	// Show Field Headers
	ShowHeadersAttr *bool

	// Compact New Fields
	CompactAttr *bool

	// Outline New Fields
	OutlineAttr *bool

	// Outline Data Fields
	OutlineDataAttr *bool

	// Compact Data
	CompactDataAttr *bool

	// Data Fields Published
	PublishedAttr *bool

	// Enable Drop Zones
	GridDropZonesAttr *bool

	// Stop Immersive UI
	ImmersiveAttr *bool

	// Multiple Field Filters
	MultipleFieldFiltersAttr *bool

	// Chart Format Id
	ChartFormatAttr *uint32

	// Row Header Caption
	RowHeaderCaptionAttr *string

	// Column Header Caption
	ColHeaderCaptionAttr *string

	// Default Sort Order
	FieldListSortAscendingAttr *bool

	// MDX Subqueries Supported
	MdxSubqueriesAttr *bool

	// Custom List AutoSort
	CustomListSortAttr *bool

	// PivotTable Location
	Location *CT_Location

	// PivotTable Fields
	PivotFields *CT_PivotFields

	// Row Fields
	RowFields *CT_RowFields

	// Row Items
	RowItems *CT_rowItems

	// Column Fields
	ColFields *CT_ColFields

	// Column Items
	ColItems *CT_colItems

	// Page Field Items
	PageFields *CT_PageFields

	// Data Fields
	DataFields *CT_DataFields

	// PivotTable Formats
	Formats *CT_Formats

	// Conditional Formats
	ConditionalFormats *CT_ConditionalFormats

	// PivotChart Formats
	ChartFormats *CT_ChartFormats

	// PivotTable OLAP Hierarchies
	PivotHierarchies *CT_PivotHierarchies

	// PivotTable Style
	PivotTableStyleInfo *CT_PivotTableStyle

	// Filters
	Filters *CT_PivotFilters

	// Row OLAP Hierarchy References
	RowHierarchiesUsage *CT_RowHierarchiesUsage

	// Column OLAP Hierarchy References
	ColHierarchiesUsage *CT_ColHierarchiesUsage

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_ccfdd *CT_FunctionGroups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccfdd.BuiltInGroupCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ccfdd.BuiltInGroupCountAttr)})
	}
	e.EncodeToken(start)
	if _ccfdd.FunctionGroup != nil {
		_bfefa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0066\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}}
		for _, _gbead := range _ccfdd.FunctionGroup {
			e.EncodeElement(_gbead, _bfefa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdcf *CT_Break) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdcf.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fdcf.IdAttr)})
	}
	if _fdcf.MinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_fdcf.MinAttr)})
	}
	if _fdcf.MaxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _f.Sprintf("\u0025\u0076", *_fdcf.MaxAttr)})
	}
	if _fdcf.ManAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdcf.ManAttr))})
	}
	if _fdcf.PtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdcf.PtAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalcPr and its children
func (_efeb *CT_CalcPr) Validate() error {
	return _efeb.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r")
}

// Validate validates the CT_SingleXmlCell and its children
func (_bdgcef *CT_SingleXmlCell) Validate() error {
	return _bdgcef.ValidateWithPath("\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c")
}
func (_afebg *CT_GroupLevels) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bafdc := range start.Attr {
		if _bafdc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbebb, _dccfd := _e.ParseUint(_bafdc.Value, 10, 32)
			if _dccfd != nil {
				return _dccfd
			}
			_cdecb := uint32(_bbebb)
			_afebg.CountAttr = &_cdecb
			continue
		}
	}
_aggde:
	for {
		_bgafc, _aggeb := d.Token()
		if _aggeb != nil {
			return _aggeb
		}
		switch _gbfbg := _bgafc.(type) {
		case _b.StartElement:
			switch _gbfbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}:
				_ccdc := NewCT_GroupLevel()
				if _bdfeb := d.DecodeElement(_ccdc, &_gbfbg); _bdfeb != nil {
					return _bdfeb
				}
				_afebg.GroupLevel = append(_afebg.GroupLevel, _ccdc)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065v\u0065l\u0073\u0020\u0025\u0076", _gbfbg.Name)
				if _gdgb := d.Skip(); _gdgb != nil {
					return _gdgb
				}
			}
		case _b.EndElement:
			break _aggde
		case _b.CharData:
		}
	}
	return nil
}
func (_gbeb *CT_ExternalReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egbcg := range start.Attr {
		if _egbcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egbcg.Name.Local == "\u0069\u0064" || _egbcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egbcg.Name.Local == "\u0069\u0064" {
			_fffca, _acace := _egbcg.Value, error(nil)
			if _acace != nil {
				return _acace
			}
			_gbeb.IdAttr = _fffca
			continue
		}
	}
	for {
		_cfbcg, _bdcda := d.Token()
		if _bdcda != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _bdcda)
		}
		if _abdaa, _gaeg := _cfbcg.(_b.EndElement); _gaeg && _abdaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgbcb ST_WebSourceType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dadcae := _b.Attr{}
	_dadcae.Name = name
	switch _fgbcb {
	case ST_WebSourceTypeUnset:
		_dadcae.Value = ""
	case ST_WebSourceTypeSheet:
		_dadcae.Value = "\u0073\u0068\u0065e\u0074"
	case ST_WebSourceTypePrintArea:
		_dadcae.Value = "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case ST_WebSourceTypeAutoFilter:
		_dadcae.Value = "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case ST_WebSourceTypeRange:
		_dadcae.Value = "\u0072\u0061\u006eg\u0065"
	case ST_WebSourceTypeChart:
		_dadcae.Value = "\u0063\u0068\u0061r\u0074"
	case ST_WebSourceTypePivotTable:
		_dadcae.Value = "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case ST_WebSourceTypeQuery:
		_dadcae.Value = "\u0071\u0075\u0065r\u0079"
	case ST_WebSourceTypeLabel:
		_dadcae.Value = "\u006c\u0061\u0062e\u006c"
	}
	return _dadcae, nil
}

type CT_VolType struct {

	// Type
	TypeAttr ST_VolDepType

	// Main
	Main []*CT_VolMain
}

func (_gbbdf ST_Qualifier) String() string {
	switch _gbbdf {
	case 0:
		return ""
	case 1:
		return "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 2:
		return "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type ST_CellFormulaType byte

// Validate validates the CT_DateTime and its children
func (_ddab *CT_DateTime) Validate() error {
	return _ddab.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065")
}
func (_gfeba *CT_DataField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfeba.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_gfeba.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gfeba.FldAttr)})
	if _gfeba.SubtotalAttr != ST_DataConsolidateFunctionUnset {
		_gfagc, _egfbd := _gfeba.SubtotalAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c"})
		if _egfbd != nil {
			return _egfbd
		}
		start.Attr = append(start.Attr, _gfagc)
	}
	if _gfeba.ShowDataAsAttr != ST_ShowDataAsUnset {
		_cadb, _aeaeg := _gfeba.ShowDataAsAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073"})
		if _aeaeg != nil {
			return _aeaeg
		}
		start.Attr = append(start.Attr, _cadb)
	}
	if _gfeba.BaseFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd"}, Value: _f.Sprintf("\u0025\u0076", *_gfeba.BaseFieldAttr)})
	}
	if _gfeba.BaseItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_gfeba.BaseItemAttr)})
	}
	if _gfeba.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gfeba.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	if _gfeba.ExtLst != nil {
		_bgfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfeba.ExtLst, _bgfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewAG_RevData() *AG_RevData { _gd := &AG_RevData{}; return _gd }

type CT_DdeLink struct {

	// Service name
	DdeServiceAttr string

	// Topic for DDE server
	DdeTopicAttr string

	// DDE Items Collection
	DdeItems *CT_DdeItems
}

// ValidateWithPath validates the CT_CustomChartsheetView and its children, prefixing error messages with path
func (_gedc *CT_CustomChartsheetView) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_gedc.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _gedc.GuidAttr)
	}
	if _dddfa := _gedc.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _dddfa != nil {
		return _dddfa
	}
	if _gedc.PageMargins != nil {
		if _dagdf := _gedc.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dagdf != nil {
			return _dagdf
		}
	}
	if _gedc.PageSetup != nil {
		if _bfgg := _gedc.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _bfgg != nil {
			return _bfgg
		}
	}
	if _gedc.HeaderFooter != nil {
		if _geacc := _gedc.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _geacc != nil {
			return _geacc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FunctionGroups and its children, prefixing error messages with path
func (_gfed *CT_FunctionGroups) ValidateWithPath(path string) error {
	for _dcggd, _geggcc := range _gfed.FunctionGroup {
		if _dgcd := _geggcc.ValidateWithPath(_f.Sprintf("%\u0073/\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070[%\u0064\u005d", path, _dcggd)); _dgcd != nil {
			return _dgcd
		}
	}
	return nil
}
func NewCT_ConditionalFormat() *CT_ConditionalFormat {
	_ebfb := &CT_ConditionalFormat{}
	_ebfb.PivotAreas = NewCT_PivotAreas()
	return _ebfb
}
func (_bggef *CT_PatternFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bggef.PatternTypeAttr != ST_PatternTypeUnset {
		_gbaac, _bcfag := _bggef.PatternTypeAttr.MarshalXMLAttr(_b.Name{Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065"})
		if _bcfag != nil {
			return _bcfag
		}
		start.Attr = append(start.Attr, _gbaac)
	}
	e.EncodeToken(start)
	if _bggef.FgColor != nil {
		_bbbcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bggef.FgColor, _bbbcb)
	}
	if _bggef.BgColor != nil {
		_feagb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bggef.BgColor, _feagb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_AutoFilter struct {

	// Cell or Range Reference
	RefAttr *string

	// AutoFilter Column
	FilterColumn []*CT_FilterColumn

	// Sort State for Auto Filter
	SortState *CT_SortState
	ExtLst    *CT_ExtensionList
}

// Validate validates the CT_Top10 and its children
func (_fgdga *CT_Top10) Validate() error {
	return _fgdga.ValidateWithPath("\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030")
}
func (_bbefc *CT_DrawingHF) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bbefc.IdAttr)})
	if _bbefc.LhoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.LhoAttr)})
	}
	if _bbefc.LheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.LheAttr)})
	}
	if _bbefc.LhfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.LhfAttr)})
	}
	if _bbefc.ChoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.ChoAttr)})
	}
	if _bbefc.CheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.CheAttr)})
	}
	if _bbefc.ChfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.ChfAttr)})
	}
	if _bbefc.RhoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.RhoAttr)})
	}
	if _bbefc.RheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.RheAttr)})
	}
	if _bbefc.RhfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.RhfAttr)})
	}
	if _bbefc.LfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.LfoAttr)})
	}
	if _bbefc.LfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.LfeAttr)})
	}
	if _bbefc.LffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.LffAttr)})
	}
	if _bbefc.CfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.CfoAttr)})
	}
	if _bbefc.CfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.CfeAttr)})
	}
	if _bbefc.CffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.CffAttr)})
	}
	if _bbefc.RfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.RfoAttr)})
	}
	if _bbefc.RfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.RfeAttr)})
	}
	if _bbefc.RffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bbefc.RffAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgac *CT_ChartsheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dadg := range start.Attr {
		if _dadg.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_ebdgd, _fgce := _e.ParseBool(_dadg.Value)
			if _fgce != nil {
				return _fgce
			}
			_cgac.TabSelectedAttr = &_ebdgd
			continue
		}
		if _dadg.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_eafc, _fbeba := _e.ParseUint(_dadg.Value, 10, 32)
			if _fbeba != nil {
				return _fbeba
			}
			_ddacd := uint32(_eafc)
			_cgac.ZoomScaleAttr = &_ddacd
			continue
		}
		if _dadg.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_faef, _agcc := _e.ParseUint(_dadg.Value, 10, 32)
			if _agcc != nil {
				return _agcc
			}
			_cgac.WorkbookViewIdAttr = uint32(_faef)
			continue
		}
		if _dadg.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_gdaf, _cgfbd := _e.ParseBool(_dadg.Value)
			if _cgfbd != nil {
				return _cgfbd
			}
			_cgac.ZoomToFitAttr = &_gdaf
			continue
		}
	}
_faceg:
	for {
		_afceb, _ddfc := d.Token()
		if _ddfc != nil {
			return _ddfc
		}
		switch _fbfdb := _afceb.(type) {
		case _b.StartElement:
			switch _fbfdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgac.ExtLst = NewCT_ExtensionList()
				if _ddeb := d.DecodeElement(_cgac.ExtLst, &_fbfdb); _ddeb != nil {
					return _ddeb
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _fbfdb.Name)
				if _cgcg := d.Skip(); _cgcg != nil {
					return _cgcg
				}
			}
		case _b.EndElement:
			break _faceg
		case _b.CharData:
		}
	}
	return nil
}
func (_cbacf *CT_SortState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbacf.ColumnSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbacf.ColumnSortAttr))})
	}
	if _cbacf.CaseSensitiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbacf.CaseSensitiveAttr))})
	}
	if _cbacf.SortMethodAttr != ST_SortMethodUnset {
		_dedfd, _ccaae := _cbacf.SortMethodAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064"})
		if _ccaae != nil {
			return _ccaae
		}
		start.Attr = append(start.Attr, _dedfd)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _cbacf.RefAttr)})
	e.EncodeToken(start)
	if _cbacf.SortCondition != nil {
		_dgcgcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}}
		for _, _befad := range _cbacf.SortCondition {
			e.EncodeElement(_befad, _dgcgcd)
		}
	}
	if _cbacf.ExtLst != nil {
		_dggfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbacf.ExtLst, _dggfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dabgf *CT_Xf) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aadcce := range start.Attr {
		if _aadcce.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et" {
			_fcabd, _cefcg := _e.ParseBool(_aadcce.Value)
			if _cefcg != nil {
				return _cefcg
			}
			_dabgf.ApplyFontAttr = &_fcabd
			continue
		}
		if _aadcce.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_efcde, _agebcf := _e.ParseUint(_aadcce.Value, 10, 32)
			if _agebcf != nil {
				return _agebcf
			}
			_bbadcc := uint32(_efcde)
			_dabgf.NumFmtIdAttr = &_bbadcc
			continue
		}
		if _aadcce.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl" {
			_bcdafcb, _bcegag := _e.ParseBool(_aadcce.Value)
			if _bcegag != nil {
				return _bcegag
			}
			_dabgf.ApplyFillAttr = &_bcdafcb
			continue
		}
		if _aadcce.Name.Local == "\u0066\u0069\u006c\u006c\u0049\u0064" {
			_eacfgaa, _fbege := _e.ParseUint(_aadcce.Value, 10, 32)
			if _fbege != nil {
				return _fbege
			}
			_eggfca := uint32(_eacfgaa)
			_dabgf.FillIdAttr = &_eggfca
			continue
		}
		if _aadcce.Name.Local == "\u0078\u0066\u0049\u0064" {
			_dfefgd, _baeeg := _e.ParseUint(_aadcce.Value, 10, 32)
			if _baeeg != nil {
				return _baeeg
			}
			_dddge := uint32(_dfefgd)
			_dabgf.XfIdAttr = &_dddge
			continue
		}
		if _aadcce.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_gggcd, _ccfaf := _e.ParseBool(_aadcce.Value)
			if _ccfaf != nil {
				return _ccfaf
			}
			_dabgf.QuotePrefixAttr = &_gggcd
			continue
		}
		if _aadcce.Name.Local == "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e" {
			_baebge, _gdgdef := _e.ParseBool(_aadcce.Value)
			if _gdgdef != nil {
				return _gdgdef
			}
			_dabgf.PivotButtonAttr = &_baebge
			continue
		}
		if _aadcce.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074" {
			_cdgdg, _fefcdb := _e.ParseBool(_aadcce.Value)
			if _fefcdb != nil {
				return _fefcdb
			}
			_dabgf.ApplyNumberFormatAttr = &_cdgdg
			continue
		}
		if _aadcce.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_abcff, _cdcge := _e.ParseUint(_aadcce.Value, 10, 32)
			if _cdcge != nil {
				return _cdcge
			}
			_ggaea := uint32(_abcff)
			_dabgf.FontIdAttr = &_ggaea
			continue
		}
		if _aadcce.Name.Local == "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064" {
			_baaga, _aabdde := _e.ParseUint(_aadcce.Value, 10, 32)
			if _aabdde != nil {
				return _aabdde
			}
			_ccfafa := uint32(_baaga)
			_dabgf.BorderIdAttr = &_ccfafa
			continue
		}
		if _aadcce.Name.Local == "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072" {
			_ecaff, _cbdadb := _e.ParseBool(_aadcce.Value)
			if _cbdadb != nil {
				return _cbdadb
			}
			_dabgf.ApplyBorderAttr = &_ecaff
			continue
		}
		if _aadcce.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074" {
			_dcddg, _dgffa := _e.ParseBool(_aadcce.Value)
			if _dgffa != nil {
				return _dgffa
			}
			_dabgf.ApplyAlignmentAttr = &_dcddg
			continue
		}
		if _aadcce.Name.Local == "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_ebdbb, _dbeggb := _e.ParseBool(_aadcce.Value)
			if _dbeggb != nil {
				return _dbeggb
			}
			_dabgf.ApplyProtectionAttr = &_ebdbb
			continue
		}
	}
_gbef:
	for {
		_dbgdd, _edabae := d.Token()
		if _edabae != nil {
			return _edabae
		}
		switch _ecceg := _dbgdd.(type) {
		case _b.StartElement:
			switch _ecceg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_dabgf.Alignment = NewCT_CellAlignment()
				if _cgdgeb := d.DecodeElement(_dabgf.Alignment, &_ecceg); _cgdgeb != nil {
					return _cgdgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dabgf.Protection = NewCT_CellProtection()
				if _fafcbf := d.DecodeElement(_dabgf.Protection, &_ecceg); _fafcbf != nil {
					return _fafcbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dabgf.ExtLst = NewCT_ExtensionList()
				if _gacda := d.DecodeElement(_dabgf.ExtLst, &_ecceg); _gacda != nil {
					return _gacda
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fX\u0066 \u0025\u0076", _ecceg.Name)
				if _cddce := d.Skip(); _cddce != nil {
					return _cddce
				}
			}
		case _b.EndElement:
			break _gbef
		case _b.CharData:
		}
	}
	return nil
}
func (_eebaa *CT_CellWatches) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_efbe:
	for {
		_bdfe, _bcbg := d.Token()
		if _bcbg != nil {
			return _bcbg
		}
		switch _bfag := _bdfe.(type) {
		case _b.StartElement:
			switch _bfag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}:
				_dgafd := NewCT_CellWatch()
				if _cgcb := d.DecodeElement(_dgafd, &_bfag); _cgcb != nil {
					return _cgcb
				}
				_eebaa.CellWatch = append(_eebaa.CellWatch, _dgafd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061\u0074c\u0068e\u0073\u0020\u0025\u0076", _bfag.Name)
				if _eeae := d.Skip(); _eeae != nil {
					return _eeae
				}
			}
		case _b.EndElement:
			break _efbe
		case _b.CharData:
		}
	}
	return nil
}
func (_eegag ST_PivotFilterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egaad := _b.Attr{}
	_egaad.Name = name
	switch _eegag {
	case ST_PivotFilterTypeUnset:
		_egaad.Value = ""
	case ST_PivotFilterTypeUnknown:
		_egaad.Value = "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case ST_PivotFilterTypeCount:
		_egaad.Value = "\u0063\u006f\u0075n\u0074"
	case ST_PivotFilterTypePercent:
		_egaad.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_PivotFilterTypeSum:
		_egaad.Value = "\u0073\u0075\u006d"
	case ST_PivotFilterTypeCaptionEqual:
		_egaad.Value = "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionNotEqual:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionBeginsWith:
		_egaad.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotBeginsWith:
		_egaad.Value = "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case ST_PivotFilterTypeCaptionEndsWith:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotEndsWith:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionContains:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionNotContains:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionGreaterThan:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionGreaterThanOrEqual:
		_egaad.Value = "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeCaptionLessThan:
		_egaad.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionLessThanOrEqual:
		_egaad.Value = "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case ST_PivotFilterTypeCaptionBetween:
		_egaad.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeCaptionNotBetween:
		_egaad.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueEqual:
		_egaad.Value = "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueNotEqual:
		_egaad.Value = "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueGreaterThan:
		_egaad.Value = "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueGreaterThanOrEqual:
		_egaad.Value = "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueLessThan:
		_egaad.Value = "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueLessThanOrEqual:
		_egaad.Value = "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeValueBetween:
		_egaad.Value = "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueNotBetween:
		_egaad.Value = "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateEqual:
		_egaad.Value = "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeDateNotEqual:
		_egaad.Value = "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeDateOlderThan:
		_egaad.Value = "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateOlderThanOrEqual:
		_egaad.Value = "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateNewerThan:
		_egaad.Value = "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateNewerThanOrEqual:
		_egaad.Value = "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateBetween:
		_egaad.Value = "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateNotBetween:
		_egaad.Value = "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeTomorrow:
		_egaad.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_PivotFilterTypeToday:
		_egaad.Value = "\u0074\u006f\u0064a\u0079"
	case ST_PivotFilterTypeYesterday:
		_egaad.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_PivotFilterTypeNextWeek:
		_egaad.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeThisWeek:
		_egaad.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeLastWeek:
		_egaad.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeNextMonth:
		_egaad.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeThisMonth:
		_egaad.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeLastMonth:
		_egaad.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeNextQuarter:
		_egaad.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeThisQuarter:
		_egaad.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeLastQuarter:
		_egaad.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeNextYear:
		_egaad.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeThisYear:
		_egaad.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeLastYear:
		_egaad.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeYearToDate:
		_egaad.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_PivotFilterTypeQ1:
		_egaad.Value = "\u0051\u0031"
	case ST_PivotFilterTypeQ2:
		_egaad.Value = "\u0051\u0032"
	case ST_PivotFilterTypeQ3:
		_egaad.Value = "\u0051\u0033"
	case ST_PivotFilterTypeQ4:
		_egaad.Value = "\u0051\u0034"
	case ST_PivotFilterTypeM1:
		_egaad.Value = "\u004d\u0031"
	case ST_PivotFilterTypeM2:
		_egaad.Value = "\u004d\u0032"
	case ST_PivotFilterTypeM3:
		_egaad.Value = "\u004d\u0033"
	case ST_PivotFilterTypeM4:
		_egaad.Value = "\u004d\u0034"
	case ST_PivotFilterTypeM5:
		_egaad.Value = "\u004d\u0035"
	case ST_PivotFilterTypeM6:
		_egaad.Value = "\u004d\u0036"
	case ST_PivotFilterTypeM7:
		_egaad.Value = "\u004d\u0037"
	case ST_PivotFilterTypeM8:
		_egaad.Value = "\u004d\u0038"
	case ST_PivotFilterTypeM9:
		_egaad.Value = "\u004d\u0039"
	case ST_PivotFilterTypeM10:
		_egaad.Value = "\u004d\u0031\u0030"
	case ST_PivotFilterTypeM11:
		_egaad.Value = "\u004d\u0031\u0031"
	case ST_PivotFilterTypeM12:
		_egaad.Value = "\u004d\u0031\u0032"
	}
	return _egaad, nil
}
func (_baafgg *CT_FileSharing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baafgg.ReadOnlyRecommendedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_baafgg.ReadOnlyRecommendedAttr))})
	}
	if _baafgg.UserNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_baafgg.UserNameAttr)})
	}
	if _baafgg.ReservationPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_baafgg.ReservationPasswordAttr)})
	}
	if _baafgg.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_baafgg.AlgorithmNameAttr)})
	}
	if _baafgg.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_baafgg.HashValueAttr)})
	}
	if _baafgg.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_baafgg.SaltValueAttr)})
	}
	if _baafgg.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _f.Sprintf("\u0025\u0076", *_baafgg.SpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_colItems struct {

	// Column Item Count
	CountAttr *uint32

	// Column Items
	I []*CT_I
}

// Validate validates the CT_CustomSheetViews and its children
func (_cddeb *CT_CustomSheetViews) Validate() error {
	return _cddeb.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}
func (_acfcd *CT_RPrElt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _acfcd.RFont != nil {
		_eabcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_acfcd.RFont, _eabcd)
	}
	if _acfcd.Charset != nil {
		_bfdabb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_acfcd.Charset, _bfdabb)
	}
	if _acfcd.Family != nil {
		_dedgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		e.EncodeElement(_acfcd.Family, _dedgf)
	}
	if _acfcd.B != nil {
		_dccee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		e.EncodeElement(_acfcd.B, _dccee)
	}
	if _acfcd.I != nil {
		_beadca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
		e.EncodeElement(_acfcd.I, _beadca)
	}
	if _acfcd.Strike != nil {
		_gccge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		e.EncodeElement(_acfcd.Strike, _gccge)
	}
	if _acfcd.Outline != nil {
		_ebdcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_acfcd.Outline, _ebdcc)
	}
	if _acfcd.Shadow != nil {
		_gebbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		e.EncodeElement(_acfcd.Shadow, _gebbd)
	}
	if _acfcd.Condense != nil {
		_geceg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_acfcd.Condense, _geceg)
	}
	if _acfcd.Extend != nil {
		_bcgegc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		e.EncodeElement(_acfcd.Extend, _bcgegc)
	}
	if _acfcd.Color != nil {
		_gdecdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_acfcd.Color, _gdecdf)
	}
	if _acfcd.Sz != nil {
		_cdbbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u007a"}}
		e.EncodeElement(_acfcd.Sz, _cdbbb)
	}
	if _acfcd.U != nil {
		_gcccd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0075"}}
		e.EncodeElement(_acfcd.U, _gcccd)
	}
	if _acfcd.VertAlign != nil {
		_aggedb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_acfcd.VertAlign, _aggedb)
	}
	if _acfcd.Scheme != nil {
		_ggece := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		e.EncodeElement(_acfcd.Scheme, _ggece)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PrintOptions and its children, prefixing error messages with path
func (_gegdc *CT_PrintOptions) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_DataRef and its children, prefixing error messages with path
func (_aaed *CT_DataRef) ValidateWithPath(path string) error { return nil }
func (_bebcb *CT_Drawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebde := range start.Attr {
		if _ebde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebde.Name.Local == "\u0069\u0064" || _ebde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ebde.Name.Local == "\u0069\u0064" {
			_ebgee, _aefbg := _ebde.Value, error(nil)
			if _aefbg != nil {
				return _aefbg
			}
			_bebcb.IdAttr = _ebgee
			continue
		}
	}
	for {
		_daegc, _ggeg := d.Token()
		if _ggeg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u003a\u0020%\u0073", _ggeg)
		}
		if _eebe, _agegd := _daegc.(_b.EndElement); _agegd && _eebe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_aaea *CT_Control) ValidateWithPath(path string) error {
	if _aaea.ControlPr != nil {
		if _fdgbg := _aaea.ControlPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"); _fdgbg != nil {
			return _fdgbg
		}
	}
	return nil
}

type CT_SheetView struct {

	// Window Protection
	WindowProtectionAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColHeadersAttr *bool

	// Show Zero Values
	ShowZerosAttr *bool

	// Right To Left
	RightToLeftAttr *bool

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Show Ruler
	ShowRulerAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool

	// Default Grid Color
	DefaultGridColorAttr *bool

	// Show White Space
	ShowWhiteSpaceAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Color Id
	ColorIdAttr *uint32

	// Zoom Scale
	ZoomScaleAttr *uint32

	// Zoom Scale Normal View
	ZoomScaleNormalAttr *uint32

	// Zoom Scale Page Break Preview
	ZoomScaleSheetLayoutViewAttr *uint32

	// Zoom Scale Page Layout View
	ZoomScalePageLayoutViewAttr *uint32

	// Workbook View Index
	WorkbookViewIdAttr uint32

	// View Pane
	Pane *CT_Pane

	// Selection
	Selection []*CT_Selection

	// PivotTable Selection
	PivotSelection []*CT_PivotSelection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_efadea *ST_OleUpdate) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_efadea = 0
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
		*_efadea = 1
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
		*_efadea = 2
	}
	return nil
}

// Validate validates the CT_RevisionConflict and its children
func (_fcfaba *CT_RevisionConflict) Validate() error {
	return _fcfaba.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074")
}

// Validate validates the CT_DdeLink and its children
func (_eeeb *CT_DdeLink) Validate() error {
	return _eeeb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b")
}

// ValidateWithPath validates the CT_RevisionInsertSheet and its children, prefixing error messages with path
func (_ggdcg *CT_RevisionInsertSheet) ValidateWithPath(path string) error { return nil }
func (_agbfbc *CT_RevisionHeader) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agbfbc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_agbfbc.SheetIdMap = NewCT_SheetIdMap()
	for _, _bebfd := range start.Attr {
		if _bebfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bebfd.Name.Local == "\u0069\u0064" || _bebfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bebfd.Name.Local == "\u0069\u0064" {
			_fffgf, _dbbeg := _bebfd.Value, error(nil)
			if _dbbeg != nil {
				return _dbbeg
			}
			_agbfbc.IdAttr = _fffgf
			continue
		}
		if _bebfd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_acbcd, _fadad := _bebfd.Value, error(nil)
			if _fadad != nil {
				return _fadad
			}
			_agbfbc.GuidAttr = _acbcd
			continue
		}
		if _bebfd.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_gdbffb, _abaaff := ParseStdlibTime(_bebfd.Value)
			if _abaaff != nil {
				return _abaaff
			}
			_agbfbc.DateTimeAttr = _gdbffb
			continue
		}
		if _bebfd.Name.Local == "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_fcebbaa, _acfcdd := _e.ParseUint(_bebfd.Value, 10, 32)
			if _acfcdd != nil {
				return _acfcdd
			}
			_agbfbc.MaxSheetIdAttr = uint32(_fcebbaa)
			continue
		}
		if _bebfd.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_gbfcc, _fcafd := _bebfd.Value, error(nil)
			if _fcafd != nil {
				return _fcafd
			}
			_agbfbc.UserNameAttr = _gbfcc
			continue
		}
		if _bebfd.Name.Local == "\u006d\u0069\u006e\u0052\u0049\u0064" {
			_aeecgc, _gdfeg := _e.ParseUint(_bebfd.Value, 10, 32)
			if _gdfeg != nil {
				return _gdfeg
			}
			_gebba := uint32(_aeecgc)
			_agbfbc.MinRIdAttr = &_gebba
			continue
		}
		if _bebfd.Name.Local == "\u006d\u0061\u0078\u0052\u0049\u0064" {
			_ddagd, _fecdb := _e.ParseUint(_bebfd.Value, 10, 32)
			if _fecdb != nil {
				return _fecdb
			}
			_dagba := uint32(_ddagd)
			_agbfbc.MaxRIdAttr = &_dagba
			continue
		}
	}
_fdabb:
	for {
		_cdace, _cbfac := d.Token()
		if _cbfac != nil {
			return _cbfac
		}
		switch _ccfdcd := _cdace.(type) {
		case _b.StartElement:
			switch _ccfdcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}:
				if _egbgcf := d.DecodeElement(_agbfbc.SheetIdMap, &_ccfdcd); _egbgcf != nil {
					return _egbgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}:
				_agbfbc.ReviewedList = NewCT_ReviewedRevisions()
				if _bccgbd := d.DecodeElement(_agbfbc.ReviewedList, &_ccfdcd); _bccgbd != nil {
					return _bccgbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agbfbc.ExtLst = NewCT_ExtensionList()
				if _baddbd := d.DecodeElement(_agbfbc.ExtLst, &_ccfdcd); _baddbd != nil {
					return _baddbd
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0020\u0025\u0076", _ccfdcd.Name)
				if _aegbg := d.Skip(); _aegbg != nil {
					return _aegbg
				}
			}
		case _b.EndElement:
			break _fdabb
		case _b.CharData:
		}
	}
	return nil
}

type CT_Cell struct {

	// Reference
	RAttr *string

	// Style Index
	SAttr *uint32

	// Cell Data Type
	TAttr ST_CellType

	// Cell Metadata Index
	CmAttr *uint32

	// Value Metadata Index
	VmAttr *uint32

	// Show Phonetic
	PhAttr *bool

	// Formula
	F *CT_CellFormula

	// Cell Value
	V *string

	// Rich Text Inline
	Is *CT_Rst

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_feage ST_SheetState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_feage.String(), start)
}

// ValidateWithPath validates the CT_PCDSCPage and its children, prefixing error messages with path
func (_gbdg *CT_PCDSCPage) ValidateWithPath(path string) error {
	for _bddeb, _adgaa := range _gbdg.PageItem {
		if _dafgd := _adgaa.ValidateWithPath(_f.Sprintf("\u0025s\u002fP\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _bddeb)); _dafgd != nil {
			return _dafgd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_edgfc *CT_Schema) ValidateWithPath(path string) error { return nil }
func (_gefac *CT_MapInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdcfc := range start.Attr {
		if _fdcfc.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_bace, _cfagfa := _fdcfc.Value, error(nil)
			if _cfagfa != nil {
				return _cfagfa
			}
			_gefac.SelectionNamespacesAttr = _bace
			continue
		}
	}
_feggg:
	for {
		_cacbe, _affgg := d.Token()
		if _affgg != nil {
			return _affgg
		}
		switch _eccca := _cacbe.(type) {
		case _b.StartElement:
			switch _eccca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_gdgcd := NewCT_Schema()
				if _afefd := d.DecodeElement(_gdgcd, &_eccca); _afefd != nil {
					return _afefd
				}
				_gefac.Schema = append(_gefac.Schema, _gdgcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_bcgcd := NewCT_Map()
				if _gebdc := d.DecodeElement(_bcgcd, &_eccca); _gebdc != nil {
					return _gebdc
				}
				_gefac.Map = append(_gefac.Map, _bcgcd)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0061\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _eccca.Name)
				if _ffdff := d.Skip(); _ffdff != nil {
					return _ffdff
				}
			}
		case _b.EndElement:
			break _feggg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Cell and its children
func (_bcaa *CT_Cell) Validate() error {
	return _bcaa.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c")
}

// ValidateWithPath validates the CT_FunctionGroup and its children, prefixing error messages with path
func (_fcfc *CT_FunctionGroup) ValidateWithPath(path string) error { return nil }
func (_cdgba ST_RevisionAction) String() string {
	switch _cdgba {
	case 0:
		return ""
	case 1:
		return "\u0061\u0064\u0064"
	case 2:
		return "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return ""
}
func (_gcaeg *CT_ObjectAnchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcaeg.From = _a.NewFrom()
	_gcaeg.To = _a.NewTo()
	for _, _bbba := range start.Attr {
		if _bbba.Name.Local == "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_deabb, _eadbcb := _e.ParseBool(_bbba.Value)
			if _eadbcb != nil {
				return _eadbcb
			}
			_gcaeg.MoveWithCellsAttr = &_deabb
			continue
		}
		if _bbba.Name.Local == "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_aaaf, _fdgg := _e.ParseBool(_bbba.Value)
			if _fdgg != nil {
				return _fdgg
			}
			_gcaeg.SizeWithCellsAttr = &_aaaf
			continue
		}
	}
_dfcac:
	for {
		_cfdcc, _accaf := d.Token()
		if _accaf != nil {
			return _accaf
		}
		switch _eebbec := _cfdcc.(type) {
		case _b.StartElement:
			switch _eebbec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _gagfe := d.DecodeElement(_gcaeg.From, &_eebbec); _gagfe != nil {
					return _gagfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _fecgd := d.DecodeElement(_gcaeg.To, &_eebbec); _fecgd != nil {
					return _fecgd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006ae\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _eebbec.Name)
				if _dagbea := d.Skip(); _dagbea != nil {
					return _dagbea
				}
			}
		case _b.EndElement:
			break _dfcac
		case _b.CharData:
		}
	}
	return nil
}
func (_beag *CT_MdxMemeberProp) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _beadc := range start.Attr {
		if _beadc.Name.Local == "\u006e" {
			_ccdecb, _dcaec := _e.ParseUint(_beadc.Value, 10, 32)
			if _dcaec != nil {
				return _dcaec
			}
			_beag.NAttr = uint32(_ccdecb)
			continue
		}
		if _beadc.Name.Local == "\u006e\u0070" {
			_baggc, _gcfac := _e.ParseUint(_beadc.Value, 10, 32)
			if _gcfac != nil {
				return _gcfac
			}
			_beag.NpAttr = uint32(_baggc)
			continue
		}
	}
	for {
		_gfacb, _aaffd := d.Token()
		if _aaffd != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065\u0072\u0050\u0072\u006f\u0070: \u0025\u0073", _aaffd)
		}
		if _aggff, _daacgf := _gfacb.(_b.EndElement); _daacgf && _aggff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cebe *CT_DataBar) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cebe.MinLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h"}, Value: _f.Sprintf("\u0025\u0076", *_cebe.MinLengthAttr)})
	}
	if _cebe.MaxLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h"}, Value: _f.Sprintf("\u0025\u0076", *_cebe.MaxLengthAttr)})
	}
	if _cebe.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cebe.ShowValueAttr))})
	}
	e.EncodeToken(start)
	_dcbge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _dgaec := range _cebe.Cfvo {
		e.EncodeElement(_dgaec, _dcbge)
	}
	_cfaea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_cebe.Color, _cfaea)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Metadata and its children, prefixing error messages with path
func (_adccf *Metadata) ValidateWithPath(path string) error {
	if _ddeae := _adccf.CT_Metadata.ValidateWithPath(path); _ddeae != nil {
		return _ddeae
	}
	return nil
}
func (_efdef *CT_Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _efdef.IdAttr)})
	if _efdef.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _efdef.DisplayNameAttr)})
	if _efdef.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.CommentAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _efdef.RefAttr)})
	if _efdef.TableTypeAttr != ST_TableTypeUnset {
		_bdebd, _daagc := _efdef.TableTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e"})
		if _daagc != nil {
			return _daagc
		}
		start.Attr = append(start.Attr, _bdebd)
	}
	if _efdef.HeaderRowCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.HeaderRowCountAttr)})
	}
	if _efdef.InsertRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efdef.InsertRowAttr))})
	}
	if _efdef.InsertRowShiftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efdef.InsertRowShiftAttr))})
	}
	if _efdef.TotalsRowCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.TotalsRowCountAttr)})
	}
	if _efdef.TotalsRowShownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efdef.TotalsRowShownAttr))})
	}
	if _efdef.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efdef.PublishedAttr))})
	}
	if _efdef.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.HeaderRowDxfIdAttr)})
	}
	if _efdef.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.DataDxfIdAttr)})
	}
	if _efdef.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.TotalsRowDxfIdAttr)})
	}
	if _efdef.HeaderRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.HeaderRowBorderDxfIdAttr)})
	}
	if _efdef.TableBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.TableBorderDxfIdAttr)})
	}
	if _efdef.TotalsRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.TotalsRowBorderDxfIdAttr)})
	}
	if _efdef.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.HeaderRowCellStyleAttr)})
	}
	if _efdef.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.DataCellStyleAttr)})
	}
	if _efdef.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.TotalsRowCellStyleAttr)})
	}
	if _efdef.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_efdef.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _efdef.AutoFilter != nil {
		_edgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_efdef.AutoFilter, _edgc)
	}
	if _efdef.SortState != nil {
		_ebeag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_efdef.SortState, _ebeag)
	}
	_fffac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003at\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}}
	e.EncodeElement(_efdef.TableColumns, _fffac)
	if _efdef.TableStyleInfo != nil {
		_fagec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_efdef.TableStyleInfo, _fagec)
	}
	if _efdef.ExtLst != nil {
		_cagac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_efdef.ExtLst, _cagac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalBook struct {
	IdAttr string

	// Supporting Workbook Sheet Names
	SheetNames *CT_ExternalSheetNames

	// Named Links
	DefinedNames *CT_ExternalDefinedNames

	// Cached Worksheet Data
	SheetDataSet *CT_ExternalSheetDataSet
}

func (_gfgbb *CT_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_dfaab, _ecaeg := _gfgbb.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _ecaeg != nil {
		return _ecaeg
	}
	start.Attr = append(start.Attr, _dfaab)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_daeg *CT_ChartFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daeg.PivotArea = NewCT_PivotArea()
	for _, _cccgg := range start.Attr {
		if _cccgg.Name.Local == "\u0063\u0068\u0061r\u0074" {
			_cegb, _cgdg := _e.ParseUint(_cccgg.Value, 10, 32)
			if _cgdg != nil {
				return _cgdg
			}
			_daeg.ChartAttr = uint32(_cegb)
			continue
		}
		if _cccgg.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_acda, _cfgb := _e.ParseUint(_cccgg.Value, 10, 32)
			if _cfgb != nil {
				return _cfgb
			}
			_daeg.FormatAttr = uint32(_acda)
			continue
		}
		if _cccgg.Name.Local == "\u0073\u0065\u0072\u0069\u0065\u0073" {
			_fcb, _effb := _e.ParseBool(_cccgg.Value)
			if _effb != nil {
				return _effb
			}
			_daeg.SeriesAttr = &_fcb
			continue
		}
	}
_bfdge:
	for {
		_eggd, _ffdg := d.Token()
		if _ffdg != nil {
			return _ffdg
		}
		switch _ffaa := _eggd.(type) {
		case _b.StartElement:
			switch _ffaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _bddf := d.DecodeElement(_daeg.PivotArea, &_ffaa); _bddf != nil {
					return _bddf
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046\u006fr\u006da\u0074\u0020\u0025\u0076", _ffaa.Name)
				if _cfga := d.Skip(); _cfga != nil {
					return _cfga
				}
			}
		case _b.EndElement:
			break _bfdge
		case _b.CharData:
		}
	}
	return nil
}
func (_edda *CT_DataRefs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfabf := range start.Attr {
		if _cfabf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_egeb, _dcff := _e.ParseUint(_cfabf.Value, 10, 32)
			if _dcff != nil {
				return _dcff
			}
			_cfgge := uint32(_egeb)
			_edda.CountAttr = &_cfgge
			continue
		}
	}
_geaa:
	for {
		_egcf, _baefe := d.Token()
		if _baefe != nil {
			return _baefe
		}
		switch _bbafb := _egcf.(type) {
		case _b.StartElement:
			switch _bbafb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}:
				_badee := NewCT_DataRef()
				if _acgfg := d.DecodeElement(_badee, &_bbafb); _acgfg != nil {
					return _acgfg
				}
				_edda.DataRef = append(_edda.DataRef, _badee)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073\u0020\u0025\u0076", _bbafb.Name)
				if _dgadc := d.Skip(); _dgadc != nil {
					return _dgadc
				}
			}
		case _b.EndElement:
			break _geaa
		case _b.CharData:
		}
	}
	return nil
}
func (_deca *CT_TableStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _deca.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_deca.CountAttr)})
	}
	if _deca.DefaultTableStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_deca.DefaultTableStyleAttr)})
	}
	if _deca.DefaultPivotStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_deca.DefaultPivotStyleAttr)})
	}
	e.EncodeToken(start)
	if _deca.TableStyle != nil {
		_agfae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		for _, _geaedg := range _deca.TableStyle {
			e.EncodeElement(_geaedg, _agfae)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_IconSetType byte

func NewCT_ExternalDefinedName() *CT_ExternalDefinedName {
	_fccge := &CT_ExternalDefinedName{}
	return _fccge
}
func (_gfbga *ST_SortType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dagfb, _deefbd := d.Token()
	if _deefbd != nil {
		return _deefbd
	}
	if _fbbad, _eecbaea := _dagfb.(_b.EndElement); _eecbaea && _fbbad.Name == start.Name {
		*_gfbga = 1
		return nil
	}
	if _afafdd, _cgbgg := _dagfb.(_b.CharData); !_cgbgg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dagfb)
	} else {
		switch string(_afafdd) {
		case "":
			*_gfbga = 0
		case "\u006e\u006f\u006e\u0065":
			*_gfbga = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_gfbga = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_gfbga = 3
		case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
			*_gfbga = 4
		case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
			*_gfbga = 5
		case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
			*_gfbga = 6
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
			*_gfbga = 7
		}
	}
	_dagfb, _deefbd = d.Token()
	if _deefbd != nil {
		return _deefbd
	}
	if _gbdge, _daabg := _dagfb.(_b.EndElement); _daabg && _gbdge.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dagfb)
}
func (_daeca *CT_PageSetup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daeca.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.PaperSizeAttr)})
	}
	if _daeca.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.PaperHeightAttr)})
	}
	if _daeca.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.PaperWidthAttr)})
	}
	if _daeca.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.ScaleAttr)})
	}
	if _daeca.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.FirstPageNumberAttr)})
	}
	if _daeca.FitToWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.FitToWidthAttr)})
	}
	if _daeca.FitToHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.FitToHeightAttr)})
	}
	if _daeca.PageOrderAttr != ST_PageOrderUnset {
		_bacd, _ddcgf := _daeca.PageOrderAttr.MarshalXMLAttr(_b.Name{Local: "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r"})
		if _ddcgf != nil {
			return _ddcgf
		}
		start.Attr = append(start.Attr, _bacd)
	}
	if _daeca.OrientationAttr != ST_OrientationUnset {
		_egegd, _bcdd := _daeca.OrientationAttr.MarshalXMLAttr(_b.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _bcdd != nil {
			return _bcdd
		}
		start.Attr = append(start.Attr, _egegd)
	}
	if _daeca.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_daeca.UsePrinterDefaultsAttr))})
	}
	if _daeca.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_daeca.BlackAndWhiteAttr))})
	}
	if _daeca.DraftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_daeca.DraftAttr))})
	}
	if _daeca.CellCommentsAttr != ST_CellCommentsUnset {
		_gafab, _daada := _daeca.CellCommentsAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _daada != nil {
			return _daada
		}
		start.Attr = append(start.Attr, _gafab)
	}
	if _daeca.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_daeca.UseFirstPageNumberAttr))})
	}
	if _daeca.ErrorsAttr != ST_PrintErrorUnset {
		_bggfd, _bagbg := _daeca.ErrorsAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0073"})
		if _bagbg != nil {
			return _bagbg
		}
		start.Attr = append(start.Attr, _bggfd)
	}
	if _daeca.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.HorizontalDpiAttr)})
	}
	if _daeca.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.VerticalDpiAttr)})
	}
	if _daeca.CopiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.CopiesAttr)})
	}
	if _daeca.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_daeca.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbce ST_rwColActionType) String() string {
	switch _bbce {
	case 0:
		return ""
	case 1:
		return "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case 2:
		return "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case 3:
		return "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case 4:
		return "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return ""
}
func (_efcbc *CT_Connections) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gcgbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}}
	for _, _gecc := range _efcbc.Connection {
		e.EncodeElement(_gecc, _gcgbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MergeCells() *CT_MergeCells { _ebadg := &CT_MergeCells{}; return _ebadg }

// Validate validates the CT_GradientFill and its children
func (_ecdaed *CT_GradientFill) Validate() error {
	return _ecdaed.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c")
}

type CT_PivotCacheDefinition struct {
	IdAttr *string

	// Invalid Cache
	InvalidAttr *bool

	// Save Pivot Records
	SaveDataAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Optimize Cache for Memory
	OptimizeMemoryAttr *bool

	// Enable PivotCache Refresh
	EnableRefreshAttr *bool

	// Last Refreshed By
	RefreshedByAttr *string

	// PivotCache Last Refreshed Date
	RefreshedDateAttr *float64

	// PivotCache Last Refreshed Date ISO
	RefreshedDateIsoAttr *_gb.Time

	// Background Query
	BackgroundQueryAttr *bool

	// Missing Items Limit
	MissingItemsLimitAttr *uint32

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// PivotCache Last Refreshed Version
	RefreshedVersionAttr *uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// PivotCache Record Count
	RecordCountAttr *uint32

	// Upgrade PivotCache on Refresh
	UpgradeOnRefreshAttr *bool

	// Tuple Cache
	TupleCacheAttr *bool

	// Supports Subqueries
	SupportSubqueryAttr *bool

	// Supports Attribute Drilldown
	SupportAdvancedDrillAttr *bool

	// PivotCache Source Description
	CacheSource *CT_CacheSource

	// PivotCache Fields
	CacheFields *CT_CacheFields

	// PivotCache Hierarchies
	CacheHierarchies *CT_CacheHierarchies

	// OLAP KPIs
	Kpis *CT_PCDKPIs

	// Tuple Cache
	TupleCache *CT_TupleCache

	// Calculated Items
	CalculatedItems *CT_CalculatedItems

	// Calculated Members
	CalculatedMembers *CT_CalculatedMembers

	// OLAP Dimensions
	Dimensions *CT_Dimensions

	// OLAP Measure Groups
	MeasureGroups *CT_MeasureGroups

	// OLAP Measure Group
	Maps *CT_MeasureDimensionMaps

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_RgbColor and its children, prefixing error messages with path
func (_cgfgg *CT_RgbColor) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ChartsheetView and its children, prefixing error messages with path
func (_bgfa *CT_ChartsheetView) ValidateWithPath(path string) error {
	if _bgfa.ExtLst != nil {
		if _dgcba := _bgfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgcba != nil {
			return _dgcba
		}
	}
	return nil
}

// Validate validates the CT_Cfvo and its children
func (_ecec *CT_Cfvo) Validate() error {
	return _ecec.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0076\u006f")
}
func (_cagab ST_CalcMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cagab.String(), start)
}
func (_fcccd *CT_OutlinePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egba := range start.Attr {
		if _egba.Name.Local == "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073" {
			_gdcba, _bdfbbd := _e.ParseBool(_egba.Value)
			if _bdfbbd != nil {
				return _bdfbbd
			}
			_fcccd.ApplyStylesAttr = &_gdcba
			continue
		}
		if _egba.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077" {
			_agcff, _cfefe := _e.ParseBool(_egba.Value)
			if _cfefe != nil {
				return _cfefe
			}
			_fcccd.SummaryBelowAttr = &_agcff
			continue
		}
		if _egba.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074" {
			_facce, _cadfdd := _e.ParseBool(_egba.Value)
			if _cadfdd != nil {
				return _cadfdd
			}
			_fcccd.SummaryRightAttr = &_facce
			continue
		}
		if _egba.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_afggf, _ffbb := _e.ParseBool(_egba.Value)
			if _ffbb != nil {
				return _ffbb
			}
			_fcccd.ShowOutlineSymbolsAttr = &_afggf
			continue
		}
	}
	for {
		_acbab, _gefgf := d.Token()
		if _gefgf != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0075t\u006c\u0069\u006e\u0065\u0050\u0072\u003a\u0020\u0025\u0073", _gefgf)
		}
		if _acbge, _faeff := _acbab.(_b.EndElement); _faeff && _acbge.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beaf *CT_MergeCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgcebc := range start.Attr {
		if _fgcebc.Name.Local == "\u0072\u0065\u0066" {
			_dcdab, _eddca := _fgcebc.Value, error(nil)
			if _eddca != nil {
				return _eddca
			}
			_beaf.RefAttr = _dcdab
			continue
		}
	}
	for {
		_bbcaf, _cfdgf := d.Token()
		if _cfdgf != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065r\u0067\u0065\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _cfdgf)
		}
		if _cdagd, _bacacg := _bbcaf.(_b.EndElement); _bacacg && _cdagd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcecc *CT_ColorFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bede := range start.Attr {
		if _bede.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_acbg, _dacc := _e.ParseUint(_bede.Value, 10, 32)
			if _dacc != nil {
				return _dacc
			}
			_adeg := uint32(_acbg)
			_fcecc.DxfIdAttr = &_adeg
			continue
		}
		if _bede.Name.Local == "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr" {
			_dfcc, _effd := _e.ParseBool(_bede.Value)
			if _effd != nil {
				return _effd
			}
			_fcecc.CellColorAttr = &_dfcc
			continue
		}
	}
	for {
		_fdcc, _eadf := d.Token()
		if _eadf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072:\u0020\u0025\u0073", _eadf)
		}
		if _gaff, _cbgff := _fdcc.(_b.EndElement); _cbgff && _gaff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efgcdf ST_CalcMode) String() string {
	switch _efgcdf {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}
func (_bbeccd *ST_DataConsolidateFunction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggebd, _abdfbc := d.Token()
	if _abdfbc != nil {
		return _abdfbc
	}
	if _cbfdb, _cdade := _ggebd.(_b.EndElement); _cdade && _cbfdb.Name == start.Name {
		*_bbeccd = 1
		return nil
	}
	if _fafgd, _bgeca := _ggebd.(_b.CharData); !_bgeca {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggebd)
	} else {
		switch string(_fafgd) {
		case "":
			*_bbeccd = 0
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_bbeccd = 1
		case "\u0063\u006f\u0075n\u0074":
			*_bbeccd = 2
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_bbeccd = 3
		case "\u006d\u0061\u0078":
			*_bbeccd = 4
		case "\u006d\u0069\u006e":
			*_bbeccd = 5
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_bbeccd = 6
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_bbeccd = 7
		case "\u0073t\u0064\u0044\u0065\u0076\u0070":
			*_bbeccd = 8
		case "\u0073\u0075\u006d":
			*_bbeccd = 9
		case "\u0076\u0061\u0072":
			*_bbeccd = 10
		case "\u0076\u0061\u0072\u0070":
			*_bbeccd = 11
		}
	}
	_ggebd, _abdfbc = d.Token()
	if _abdfbc != nil {
		return _abdfbc
	}
	if _dcece, _cefbf := _ggebd.(_b.EndElement); _cefbf && _dcece.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggebd)
}
func NewCT_PCDSDTCEntries() *CT_PCDSDTCEntries { _eeca := &CT_PCDSDTCEntries{}; return _eeca }
func NewCT_ChartFormat() *CT_ChartFormat {
	_adeeg := &CT_ChartFormat{}
	_adeeg.PivotArea = NewCT_PivotArea()
	return _adeeg
}
func (_dfdbb *ST_SortBy) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dfdbb = 0
	case "\u0076\u0061\u006cu\u0065":
		*_dfdbb = 1
	case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
		*_dfdbb = 2
	case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
		*_dfdbb = 3
	case "\u0069\u0063\u006f\u006e":
		*_dfdbb = 4
	}
	return nil
}
func (_fdfe *CT_CellSmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", _fdfe.RAttr)})
	e.EncodeToken(start)
	_ccac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}}
	for _, _fgb := range _fdfe.CellSmartTag {
		e.EncodeElement(_fgb, _ccac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_NumFmt struct {

	// Number Format Id
	NumFmtIdAttr uint32

	// Number Format Code
	FormatCodeAttr string
}

func (_gbcag *CT_Rst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_faefgb:
	for {
		_gaefd, _fcbfg := d.Token()
		if _fcbfg != nil {
			return _fcbfg
		}
		switch _fcdba := _gaefd.(type) {
		case _b.StartElement:
			switch _fcdba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_gbcag.T = new(string)
				if _dbead := d.DecodeElement(_gbcag.T, &_fcdba); _dbead != nil {
					return _dbead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_gdbef := NewCT_RElt()
				if _gdeb := d.DecodeElement(_gdbef, &_fcdba); _gdeb != nil {
					return _gdeb
				}
				_gbcag.R = append(_gbcag.R, _gdbef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}:
				_fafgce := NewCT_PhoneticRun()
				if _cdcfc := d.DecodeElement(_fafgce, &_fcdba); _cdcfc != nil {
					return _cdcfc
				}
				_gbcag.RPh = append(_gbcag.RPh, _fafgce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_gbcag.PhoneticPr = NewCT_PhoneticPr()
				if _dcdca := d.DecodeElement(_gbcag.PhoneticPr, &_fcdba); _dcdca != nil {
					return _dcdca
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0073\u0074\u0020\u0025\u0076", _fcdba.Name)
				if _fagge := d.Skip(); _fagge != nil {
					return _fagge
				}
			}
		case _b.EndElement:
			break _faefgb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FieldsUsage and its children, prefixing error messages with path
func (_bgaeg *CT_FieldsUsage) ValidateWithPath(path string) error {
	for _cdcaf, _bbdgb := range _bgaeg.FieldUsage {
		if _bbebg := _bbdgb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067e\u005b\u0025\u0064\u005d", path, _cdcaf)); _bbebg != nil {
			return _bbebg
		}
	}
	return nil
}
func NewCT_PivotHierarchies() *CT_PivotHierarchies { _bbfcd := &CT_PivotHierarchies{}; return _bbfcd }
func (_gaaf *CT_CommentList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfea:
	for {
		_ffee, _abbe := d.Token()
		if _abbe != nil {
			return _abbe
		}
		switch _dfad := _ffee.(type) {
		case _b.StartElement:
			switch _dfad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}:
				_dfeg := NewCT_Comment()
				if _gbddd := d.DecodeElement(_dfeg, &_dfad); _gbddd != nil {
					return _gbddd
				}
				_gaaf.Comment = append(_gaaf.Comment, _dfeg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _dfad.Name)
				if _ccefc := d.Skip(); _ccefc != nil {
					return _ccefc
				}
			}
		case _b.EndElement:
			break _cfea
		case _b.CharData:
		}
	}
	return nil
}
func (_cagf *CT_ColorScale) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_beg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _eeacb := range _cagf.Cfvo {
		e.EncodeElement(_eeacb, _beg)
	}
	_cacfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _gdbgd := range _cagf.Color {
		e.EncodeElement(_gdbgd, _cacfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DiscretePr and its children, prefixing error messages with path
func (_gafdc *CT_DiscretePr) ValidateWithPath(path string) error {
	for _daff, _befe := range _gafdc.X {
		if _eabga := _befe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _daff)); _eabga != nil {
			return _eabga
		}
	}
	return nil
}

type ST_TextVAlign byte

// ValidateWithPath validates the CT_SortState and its children, prefixing error messages with path
func (_facgff *CT_SortState) ValidateWithPath(path string) error {
	if _efccad := _facgff.SortMethodAttr.ValidateWithPath(path + "\u002fS\u006fr\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0041\u0074\u0074\u0072"); _efccad != nil {
		return _efccad
	}
	for _fdcdg, _bdfbg := range _facgff.SortCondition {
		if _aeceddb := _bdfbg.ValidateWithPath(_f.Sprintf("%\u0073/\u0053\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e[%\u0064\u005d", path, _fdcdg)); _aeceddb != nil {
			return _aeceddb
		}
	}
	if _facgff.ExtLst != nil {
		if _eddcg := _facgff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eddcg != nil {
			return _eddcg
		}
	}
	return nil
}

// Validate validates the CT_PivotHierarchies and its children
func (_ffccg *CT_PivotHierarchies) Validate() error {
	return _ffccg.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}
func (_acbed ST_PaneState) Validate() error { return _acbed.ValidateWithPath("") }

// Validate validates the CT_WorksheetSource and its children
func (_ecccc *CT_WorksheetSource) Validate() error {
	return _ecccc.ValidateWithPath("\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065")
}

type ST_SmartTagShow byte

func (_bgage *CT_DataBar) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgage.Color = NewCT_Color()
	for _, _cdac := range start.Attr {
		if _cdac.Name.Local == "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h" {
			_gcffd, _faaa := _e.ParseUint(_cdac.Value, 10, 32)
			if _faaa != nil {
				return _faaa
			}
			_dcgeb := uint32(_gcffd)
			_bgage.MinLengthAttr = &_dcgeb
			continue
		}
		if _cdac.Name.Local == "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h" {
			_cffea, _ccgeg := _e.ParseUint(_cdac.Value, 10, 32)
			if _ccgeg != nil {
				return _ccgeg
			}
			_ggdbg := uint32(_cffea)
			_bgage.MaxLengthAttr = &_ggdbg
			continue
		}
		if _cdac.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_ddbae, _eacf := _e.ParseBool(_cdac.Value)
			if _eacf != nil {
				return _eacf
			}
			_bgage.ShowValueAttr = &_ddbae
			continue
		}
	}
_bdbf:
	for {
		_gfge, _fabe := d.Token()
		if _fabe != nil {
			return _fabe
		}
		switch _degb := _gfge.(type) {
		case _b.StartElement:
			switch _degb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_fbebab := NewCT_Cfvo()
				if _eacfg := d.DecodeElement(_fbebab, &_degb); _eacfg != nil {
					return _eacfg
				}
				_bgage.Cfvo = append(_bgage.Cfvo, _fbebab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _fbfce := d.DecodeElement(_bgage.Color, &_degb); _fbfce != nil {
					return _fbfce
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0061\u0074\u0061\u0042\u0061\u0072\u0020\u0025\u0076", _degb.Name)
				if _baeg := d.Skip(); _baeg != nil {
					return _baeg
				}
			}
		case _b.EndElement:
			break _bdbf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetFormatPr and its children
func (_ffffg *CT_SheetFormatPr) Validate() error {
	return _ffffg.ValidateWithPath("\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072")
}
func (_cddgce *CT_Set) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eacgf := range start.Attr {
		if _eacgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfcbea, _gddbc := _e.ParseUint(_eacgf.Value, 10, 32)
			if _gddbc != nil {
				return _gddbc
			}
			_eacef := uint32(_cfcbea)
			_cddgce.CountAttr = &_eacef
			continue
		}
		if _eacgf.Name.Local == "\u006da\u0078\u0052\u0061\u006e\u006b" {
			_dagfcc, _dfdgaf := _e.ParseInt(_eacgf.Value, 10, 32)
			if _dfdgaf != nil {
				return _dfdgaf
			}
			_cddgce.MaxRankAttr = int32(_dagfcc)
			continue
		}
		if _eacgf.Name.Local == "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e" {
			_efcfe, _gdbdc := _eacgf.Value, error(nil)
			if _gdbdc != nil {
				return _gdbdc
			}
			_cddgce.SetDefinitionAttr = _efcfe
			continue
		}
		if _eacgf.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_cddgce.SortTypeAttr.UnmarshalXMLAttr(_eacgf)
			continue
		}
		if _eacgf.Name.Local == "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064" {
			_fccfbc, _aedda := _e.ParseBool(_eacgf.Value)
			if _aedda != nil {
				return _aedda
			}
			_cddgce.QueryFailedAttr = &_fccfbc
			continue
		}
	}
_fdgdd:
	for {
		_facef, _faafed := d.Token()
		if _faafed != nil {
			return _faafed
		}
		switch _deecbe := _facef.(type) {
		case _b.StartElement:
			switch _deecbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_ceeed := NewCT_Tuples()
				if _defga := d.DecodeElement(_ceeed, &_deecbe); _defga != nil {
					return _defga
				}
				_cddgce.Tpls = append(_cddgce.Tpls, _ceeed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}:
				_cddgce.SortByTuple = NewCT_Tuples()
				if _decdfe := d.DecodeElement(_cddgce.SortByTuple, &_deecbe); _decdfe != nil {
					return _decdfe
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0074\u0020\u0025\u0076", _deecbe.Name)
				if _debbf := d.Skip(); _debbf != nil {
					return _debbf
				}
			}
		case _b.EndElement:
			break _fdgdd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Pane and its children
func (_cccca *CT_Pane) Validate() error {
	return _cccca.ValidateWithPath("\u0043T\u005f\u0050\u0061\u006e\u0065")
}

// ValidateWithPath validates the CT_WebPublishItem and its children, prefixing error messages with path
func (_ebafa *CT_WebPublishItem) ValidateWithPath(path string) error {
	if _ebafa.SourceTypeAttr == ST_WebSourceTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0053\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006da\u006e\u0064\u0061\u0074\u006fr\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _aabba := _ebafa.SourceTypeAttr.ValidateWithPath(path + "\u002fS\u006fu\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _aabba != nil {
		return _aabba
	}
	return nil
}

// Validate validates the CT_TableColumns and its children
func (_gbaeea *CT_TableColumns) Validate() error {
	return _gbaeea.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}
func NewCT_PrintOptions() *CT_PrintOptions { _gadbd := &CT_PrintOptions{}; return _gadbd }

// Validate validates the CT_PageBreak and its children
func (_ffede *CT_PageBreak) Validate() error {
	return _ffede.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b")
}
func NewCT_ExternalReference() *CT_ExternalReference {
	_bbfbc := &CT_ExternalReference{}
	return _bbfbc
}

const (
	ST_ConditionalFormattingOperatorUnset              ST_ConditionalFormattingOperator = 0
	ST_ConditionalFormattingOperatorLessThan           ST_ConditionalFormattingOperator = 1
	ST_ConditionalFormattingOperatorLessThanOrEqual    ST_ConditionalFormattingOperator = 2
	ST_ConditionalFormattingOperatorEqual              ST_ConditionalFormattingOperator = 3
	ST_ConditionalFormattingOperatorNotEqual           ST_ConditionalFormattingOperator = 4
	ST_ConditionalFormattingOperatorGreaterThanOrEqual ST_ConditionalFormattingOperator = 5
	ST_ConditionalFormattingOperatorGreaterThan        ST_ConditionalFormattingOperator = 6
	ST_ConditionalFormattingOperatorBetween            ST_ConditionalFormattingOperator = 7
	ST_ConditionalFormattingOperatorNotBetween         ST_ConditionalFormattingOperator = 8
	ST_ConditionalFormattingOperatorContainsText       ST_ConditionalFormattingOperator = 9
	ST_ConditionalFormattingOperatorNotContains        ST_ConditionalFormattingOperator = 10
	ST_ConditionalFormattingOperatorBeginsWith         ST_ConditionalFormattingOperator = 11
	ST_ConditionalFormattingOperatorEndsWith           ST_ConditionalFormattingOperator = 12
)

type CT_MetadataType struct {

	// Metadata Type Name
	NameAttr string

	// Minimum Supported Version
	MinSupportedVersionAttr uint32

	// Metadata Ghost Row
	GhostRowAttr *bool

	// Metadata Ghost Column
	GhostColAttr *bool

	// Metadata Edit
	EditAttr *bool

	// Metadata Cell Value Delete
	DeleteAttr *bool

	// Metadata Copy
	CopyAttr *bool

	// Metadata Paste All
	PasteAllAttr *bool

	// Metadata Paste Formulas
	PasteFormulasAttr *bool

	// Metadata Paste Special Values
	PasteValuesAttr *bool

	// Metadata Paste Formats
	PasteFormatsAttr *bool

	// Metadata Paste Comments
	PasteCommentsAttr *bool

	// Metadata Paste Data Validation
	PasteDataValidationAttr *bool

	// Metadata Paste Borders
	PasteBordersAttr *bool

	// Metadata Paste Column Widths
	PasteColWidthsAttr *bool

	// Metadata Paste Number Formats
	PasteNumberFormatsAttr *bool

	// Metadata Merge
	MergeAttr *bool

	// Meatadata Split First
	SplitFirstAttr *bool

	// Metadata Split All
	SplitAllAttr *bool

	// Metadata Insert Delete
	RowColShiftAttr *bool

	// Metadata Clear All
	ClearAllAttr *bool

	// Metadata Clear Formats
	ClearFormatsAttr *bool

	// Metadata Clear Contents
	ClearContentsAttr *bool

	// Metadata Clear Comments
	ClearCommentsAttr *bool

	// Metadata Formula Assignment
	AssignAttr *bool

	// Metadata Coercion
	CoerceAttr *bool

	// Adjust Metadata
	AdjustAttr *bool

	// Cell Metadata
	CellMetaAttr *bool
}

// Validate validates the CT_Groups and its children
func (_dbcdg *CT_Groups) Validate() error {
	return _dbcdg.ValidateWithPath("\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s")
}

type CT_FileRecoveryPr struct {

	// Auto Recover
	AutoRecoverAttr *bool

	// Crash Save
	CrashSaveAttr *bool

	// Data Extract Load
	DataExtractLoadAttr *bool

	// Repair Load
	RepairLoadAttr *bool
}

func NewCT_CacheHierarchy() *CT_CacheHierarchy { _ecbe := &CT_CacheHierarchy{}; return _ecbe }
func (_bbecd *CT_I) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbecd.TAttr != ST_ItemTypeUnset {
		_ecbfba, _ddcbg := _bbecd.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _ddcbg != nil {
			return _ddcbg
		}
		start.Attr = append(start.Attr, _ecbfba)
	}
	if _bbecd.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bbecd.RAttr)})
	}
	if _bbecd.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_bbecd.IAttr)})
	}
	e.EncodeToken(start)
	if _bbecd.X != nil {
		_fggga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dfgag := range _bbecd.X {
			e.EncodeElement(_dfgag, _fggga)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataBar() *CT_DataBar {
	_eaffg := &CT_DataBar{}
	_eaffg.Color = NewCT_Color()
	return _eaffg
}
func (_befde *CT_ControlPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_befde.Anchor = NewCT_ObjectAnchor()
	for _, _fcfee := range start.Attr {
		if _fcfee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcfee.Name.Local == "\u0069\u0064" || _fcfee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fcfee.Name.Local == "\u0069\u0064" {
			_becd, _baebd := _fcfee.Value, error(nil)
			if _baebd != nil {
				return _baebd
			}
			_befde.IdAttr = &_becd
			continue
		}
		if _fcfee.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_fdgc, _fdge := _e.ParseBool(_fcfee.Value)
			if _fdge != nil {
				return _fdge
			}
			_befde.AutoPictAttr = &_fdgc
			continue
		}
		if _fcfee.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_daefbe, _cfcda := _fcfee.Value, error(nil)
			if _cfcda != nil {
				return _cfcda
			}
			_befde.MacroAttr = &_daefbe
			continue
		}
		if _fcfee.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_bgfde, _gcbb := _e.ParseBool(_fcfee.Value)
			if _gcbb != nil {
				return _gcbb
			}
			_befde.PrintAttr = &_bgfde
			continue
		}
		if _fcfee.Name.Local == "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073" {
			_bdag, _afcba := _e.ParseBool(_fcfee.Value)
			if _afcba != nil {
				return _afcba
			}
			_befde.RecalcAlwaysAttr = &_bdag
			continue
		}
		if _fcfee.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_fgeeg, _aaba := _e.ParseBool(_fcfee.Value)
			if _aaba != nil {
				return _aaba
			}
			_befde.UiObjectAttr = &_fgeeg
			continue
		}
		if _fcfee.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_eadb, _adefb := _e.ParseBool(_fcfee.Value)
			if _adefb != nil {
				return _adefb
			}
			_befde.AutoFillAttr = &_eadb
			continue
		}
		if _fcfee.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_efcaa, _bacc := _e.ParseBool(_fcfee.Value)
			if _bacc != nil {
				return _bacc
			}
			_befde.AutoLineAttr = &_efcaa
			continue
		}
		if _fcfee.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_efbf, _dbcbg := _e.ParseBool(_fcfee.Value)
			if _dbcbg != nil {
				return _dbcbg
			}
			_befde.LockedAttr = &_efbf
			continue
		}
		if _fcfee.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_ddee, _dbgd := _e.ParseBool(_fcfee.Value)
			if _dbgd != nil {
				return _dbgd
			}
			_befde.DisabledAttr = &_ddee
			continue
		}
		if _fcfee.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_cfgg, _dcaabd := _fcfee.Value, error(nil)
			if _dcaabd != nil {
				return _dcaabd
			}
			_befde.AltTextAttr = &_cfgg
			continue
		}
		if _fcfee.Name.Local == "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c" {
			_deaea, _cecc := _fcfee.Value, error(nil)
			if _cecc != nil {
				return _cecc
			}
			_befde.LinkedCellAttr = &_deaea
			continue
		}
		if _fcfee.Name.Local == "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065" {
			_gffeb, _ggee := _fcfee.Value, error(nil)
			if _ggee != nil {
				return _ggee
			}
			_befde.ListFillRangeAttr = &_gffeb
			continue
		}
		if _fcfee.Name.Local == "\u0063\u0066" {
			_fdba, _bcae := _fcfee.Value, error(nil)
			if _bcae != nil {
				return _bcae
			}
			_befde.CfAttr = &_fdba
			continue
		}
		if _fcfee.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_bdfc, _ebdf := _e.ParseBool(_fcfee.Value)
			if _ebdf != nil {
				return _ebdf
			}
			_befde.DefaultSizeAttr = &_bdfc
			continue
		}
	}
_bdfcb:
	for {
		_fceaf, _dece := d.Token()
		if _dece != nil {
			return _dece
		}
		switch _agebe := _fceaf.(type) {
		case _b.StartElement:
			switch _agebe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _begeg := d.DecodeElement(_befde.Anchor, &_agebe); _begeg != nil {
					return _begeg
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006et\u0072\u006f\u006c\u0050\u0072\u0020\u0025\u0076", _agebe.Name)
				if _dggba := d.Skip(); _dggba != nil {
					return _dggba
				}
			}
		case _b.EndElement:
			break _bdfcb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SmartTagPr() *CT_SmartTagPr { _bgcfdf := &CT_SmartTagPr{}; return _bgcfdf }
func (_bgeb *CT_ExternalSheetDataSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cceca:
	for {
		_bdffd, _cfbfe := d.Token()
		if _cfbfe != nil {
			return _cfbfe
		}
		switch _gdaae := _bdffd.(type) {
		case _b.StartElement:
			switch _gdaae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				_bbdcf := NewCT_ExternalSheetData()
				if _gcade := d.DecodeElement(_bbdcf, &_gdaae); _gcade != nil {
					return _gcade
				}
				_bgeb.SheetData = append(_bgeb.SheetData, _bbdcf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053h\u0065\u0065\u0074\u0044\u0061\u0074a\u0053\u0065\u0074 \u0025\u0076", _gdaae.Name)
				if _egcfg := d.Skip(); _egcfg != nil {
					return _egcfg
				}
			}
		case _b.EndElement:
			break _cceca
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_PivotCacheRecords() *CT_PivotCacheRecords {
	_fdcba := &CT_PivotCacheRecords{}
	return _fdcba
}

type Sst struct{ CT_Sst }
type CT_Fill struct {

	// Pattern
	PatternFill *CT_PatternFill

	// Gradient
	GradientFill *CT_GradientFill
}
type ST_DynamicFilterType byte
type CT_Rst struct {

	// Text
	T *string

	// Rich Text Run
	R []*CT_RElt

	// Phonetic Run
	RPh []*CT_PhoneticRun

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr
}
type CT_SheetData struct {

	// Row
	Row []*CT_Row
}

func NewCT_WebPublishItems() *CT_WebPublishItems { _aabdd := &CT_WebPublishItems{}; return _aabdd }
func (_aagbe *CT_WebPublishing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daaef := range start.Attr {
		if _daaef.Name.Local == "\u0063\u0073\u0073" {
			_bbfad, _cbaba := _e.ParseBool(_daaef.Value)
			if _cbaba != nil {
				return _cbaba
			}
			_aagbe.CssAttr = &_bbfad
			continue
		}
		if _daaef.Name.Local == "\u0074h\u0069\u0063\u006b\u0065\u0074" {
			_geccc, _afbga := _e.ParseBool(_daaef.Value)
			if _afbga != nil {
				return _afbga
			}
			_aagbe.ThicketAttr = &_geccc
			continue
		}
		if _daaef.Name.Local == "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073" {
			_ccfge, _dbeec := _e.ParseBool(_daaef.Value)
			if _dbeec != nil {
				return _dbeec
			}
			_aagbe.LongFileNamesAttr = &_ccfge
			continue
		}
		if _daaef.Name.Local == "\u0076\u006d\u006c" {
			_geeac, _cbbdc := _e.ParseBool(_daaef.Value)
			if _cbbdc != nil {
				return _cbbdc
			}
			_aagbe.VmlAttr = &_geeac
			continue
		}
		if _daaef.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_fbgff, _fdeae := _e.ParseBool(_daaef.Value)
			if _fdeae != nil {
				return _fdeae
			}
			_aagbe.AllowPngAttr = &_fbgff
			continue
		}
		if _daaef.Name.Local == "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065" {
			_aagbe.TargetScreenSizeAttr.UnmarshalXMLAttr(_daaef)
			continue
		}
		if _daaef.Name.Local == "\u0064\u0070\u0069" {
			_ebeacc, _ddcab := _e.ParseUint(_daaef.Value, 10, 32)
			if _ddcab != nil {
				return _ddcab
			}
			_bcgbg := uint32(_ebeacc)
			_aagbe.DpiAttr = &_bcgbg
			continue
		}
		if _daaef.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_cfdbc, _efgfc := _e.ParseUint(_daaef.Value, 10, 32)
			if _efgfc != nil {
				return _efgfc
			}
			_bccag := uint32(_cfdbc)
			_aagbe.CodePageAttr = &_bccag
			continue
		}
		if _daaef.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_gddea, _ecfaf := _daaef.Value, error(nil)
			if _ecfaf != nil {
				return _ecfaf
			}
			_aagbe.CharacterSetAttr = &_gddea
			continue
		}
	}
	for {
		_bcega, _dcacf := d.Token()
		if _dcacf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050u\u0062l\u0069\u0073\u0068\u0069\u006e\u0067\u003a \u0025\u0073", _dcacf)
		}
		if _ffacgb, _cgffge := _bcega.(_b.EndElement); _cgffge && _ffacgb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_DateGroupItem() *CT_DateGroupItem {
	_dgec := &CT_DateGroupItem{}
	_dgec.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	return _dgec
}
func NewCT_CacheHierarchies() *CT_CacheHierarchies { _dfg := &CT_CacheHierarchies{}; return _dfg }

// ValidateWithPath validates the CT_BooleanProperty and its children, prefixing error messages with path
func (_bfe *CT_BooleanProperty) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Boolean and its children
func (_aeb *CT_Boolean) Validate() error {
	return _aeb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

type CT_DataBinding struct {

	// Unique Identifer
	DataBindingNameAttr *string

	// Binding to External File
	FileBindingAttr *bool

	// Reference to Connection ID
	ConnectionIDAttr *uint32

	// File Binding Name
	FileBindingNameAttr *string

	// XML Data Loading Behavior
	DataBindingLoadModeAttr uint32
	Any                     _d.Any
}
type ST_PrintError byte

func NewCT_IconFilter() *CT_IconFilter {
	_dedgd := &CT_IconFilter{}
	_dedgd.IconSetAttr = ST_IconSetType(1)
	return _dedgd
}
func (_gaa *CT_Border) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdb := range start.Attr {
		if _fdb.Name.Local == "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070" {
			_aead, _cbe := _e.ParseBool(_fdb.Value)
			if _cbe != nil {
				return _cbe
			}
			_gaa.DiagonalUpAttr = &_aead
			continue
		}
		if _fdb.Name.Local == "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e" {
			_dgbg, _bcca := _e.ParseBool(_fdb.Value)
			if _bcca != nil {
				return _bcca
			}
			_gaa.DiagonalDownAttr = &_dgbg
			continue
		}
		if _fdb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_agg, _gdc := _e.ParseBool(_fdb.Value)
			if _gdc != nil {
				return _gdc
			}
			_gaa.OutlineAttr = &_agg
			continue
		}
	}
_bab:
	for {
		_ggbf, _bgg := d.Token()
		if _bgg != nil {
			return _bgg
		}
		switch _dgc := _ggbf.(type) {
		case _b.StartElement:
			switch _dgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}:
				_gaa.Start = NewCT_BorderPr()
				if _cde := d.DecodeElement(_gaa.Start, &_dgc); _cde != nil {
					return _cde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				_gaa.End = NewCT_BorderPr()
				if _dag := d.DecodeElement(_gaa.End, &_dgc); _dag != nil {
					return _dag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_gaa.Left = NewCT_BorderPr()
				if _eda := d.DecodeElement(_gaa.Left, &_dgc); _eda != nil {
					return _eda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_gaa.Right = NewCT_BorderPr()
				if _eaaf := d.DecodeElement(_gaa.Right, &_dgc); _eaaf != nil {
					return _eaaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_gaa.Top = NewCT_BorderPr()
				if _ffd := d.DecodeElement(_gaa.Top, &_dgc); _ffd != nil {
					return _ffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_gaa.Bottom = NewCT_BorderPr()
				if _feg := d.DecodeElement(_gaa.Bottom, &_dgc); _feg != nil {
					return _feg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}:
				_gaa.Diagonal = NewCT_BorderPr()
				if _ebd := d.DecodeElement(_gaa.Diagonal, &_dgc); _ebd != nil {
					return _ebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}:
				_gaa.Vertical = NewCT_BorderPr()
				if _afge := d.DecodeElement(_gaa.Vertical, &_dgc); _afge != nil {
					return _afge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}:
				_gaa.Horizontal = NewCT_BorderPr()
				if _edaf := d.DecodeElement(_gaa.Horizontal, &_dgc); _edaf != nil {
					return _edaf
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0042\u006f\u0072d\u0065\u0072 \u0025\u0076", _dgc.Name)
				if _gcc := d.Skip(); _gcc != nil {
					return _gcc
				}
			}
		case _b.EndElement:
			break _bab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleInfo and its children, prefixing error messages with path
func (_fagcae *CT_TableStyleInfo) ValidateWithPath(path string) error { return nil }
func (_cgf *CT_BookView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgf.VisibilityAttr != ST_VisibilityUnset {
		_bgd, _gafd := _cgf.VisibilityAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079"})
		if _gafd != nil {
			return _gafd
		}
		start.Attr = append(start.Attr, _bgd)
	}
	if _cgf.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgf.MinimizedAttr))})
	}
	if _cgf.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgf.ShowHorizontalScrollAttr))})
	}
	if _cgf.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgf.ShowVerticalScrollAttr))})
	}
	if _cgf.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgf.ShowSheetTabsAttr))})
	}
	if _cgf.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.XWindowAttr)})
	}
	if _cgf.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.YWindowAttr)})
	}
	if _cgf.WindowWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.WindowWidthAttr)})
	}
	if _cgf.WindowHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.WindowHeightAttr)})
	}
	if _cgf.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.TabRatioAttr)})
	}
	if _cgf.FirstSheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.FirstSheetAttr)})
	}
	if _cgf.ActiveTabAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b"}, Value: _f.Sprintf("\u0025\u0076", *_cgf.ActiveTabAttr)})
	}
	if _cgf.AutoFilterDateGroupingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgf.AutoFilterDateGroupingAttr))})
	}
	e.EncodeToken(start)
	if _cgf.ExtLst != nil {
		_fg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgf.ExtLst, _fg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecfdgd ST_TableType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecfdgd.String(), start)
}
func (_fcbcd *CT_GradientStop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcbcd.Color = NewCT_Color()
	for _, _fafde := range start.Attr {
		if _fafde.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_gabag, _ggded := _e.ParseFloat(_fafde.Value, 64)
			if _ggded != nil {
				return _ggded
			}
			_fcbcd.PositionAttr = _gabag
			continue
		}
	}
_gaef:
	for {
		_ecabe, _bfadf := d.Token()
		if _bfadf != nil {
			return _bfadf
		}
		switch _efcf := _ecabe.(type) {
		case _b.StartElement:
			switch _efcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _abfdcc := d.DecodeElement(_fcbcd.Color, &_efcf); _abfdcc != nil {
					return _abfdcc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _efcf.Name)
				if _bcfbc := d.Skip(); _bcfbc != nil {
					return _bcfbc
				}
			}
		case _b.EndElement:
			break _gaef
		case _b.CharData:
		}
	}
	return nil
}
func (_gfafc *CT_RevisionSheetRename) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gfafc.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _gfafc.OldNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ee\u0077\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _gfafc.NewNameAttr)})
	if _gfafc.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gfafc.RIdAttr)})
	}
	if _gfafc.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfafc.UaAttr))})
	}
	if _gfafc.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfafc.RaAttr))})
	}
	e.EncodeToken(start)
	if _gfafc.ExtLst != nil {
		_cbceg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfafc.ExtLst, _cbceg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gce *CT_CacheHierarchies) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gce.CountAttr)})
	}
	e.EncodeToken(start)
	if _gce.CacheHierarchy != nil {
		_gaaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
		for _, _eabg := range _gce.CacheHierarchy {
			e.EncodeElement(_eabg, _gaaae)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfgg *CT_ConditionalFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfgg.ScopeAttr != ST_ScopeUnset {
		_cacg, _ebdge := _gfgg.ScopeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0063\u006fp\u0065"})
		if _ebdge != nil {
			return _ebdge
		}
		start.Attr = append(start.Attr, _cacg)
	}
	if _gfgg.TypeAttr != ST_TypeUnset {
		_fcdfe, _dffb := _gfgg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dffb != nil {
			return _dffb
		}
		start.Attr = append(start.Attr, _fcdfe)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _f.Sprintf("\u0025\u0076", _gfgg.PriorityAttr)})
	e.EncodeToken(start)
	_gefa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}}
	e.EncodeElement(_gfgg.PivotAreas, _gefa)
	if _gfgg.ExtLst != nil {
		_fcfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfgg.ExtLst, _fcfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deeb *CT_SmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_feeef:
	for {
		_fedde, _cffcfe := d.Token()
		if _cffcfe != nil {
			return _cffcfe
		}
		switch _acgcd := _fedde.(type) {
		case _b.StartElement:
			switch _acgcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}:
				_geaed := NewCT_CellSmartTags()
				if _cgfdd := d.DecodeElement(_geaed, &_acgcd); _cgfdd != nil {
					return _cgfdd
				}
				_deeb.CellSmartTags = append(_deeb.CellSmartTags, _geaed)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006d\u0061r\u0074\u0054\u0061\u0067\u0073\u0020\u0025\u0076", _acgcd.Name)
				if _fddac := d.Skip(); _fddac != nil {
					return _fddac
				}
			}
		case _b.EndElement:
			break _feeef
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTableField and its children, prefixing error messages with path
func (_ecbab *CT_QueryTableField) ValidateWithPath(path string) error {
	if _ecbab.ExtLst != nil {
		if _fefbae := _ecbab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fefbae != nil {
			return _fefbae
		}
	}
	return nil
}
func (_begf *CT_NumFmt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _begf.NumFmtIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065"}, Value: _f.Sprintf("\u0025\u0076", _begf.FormatCodeAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotCaches() *CT_PivotCaches { _cbdef := &CT_PivotCaches{}; return _cbdef }

// Validate validates the CT_IgnoredErrors and its children
func (_gfebd *CT_IgnoredErrors) Validate() error {
	return _gfebd.ValidateWithPath("\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073")
}

type ST_CalcMode byte

// ValidateWithPath validates the CT_MdxMemeberProp and its children, prefixing error messages with path
func (_dadeb *CT_MdxMemeberProp) ValidateWithPath(path string) error { return nil }

type CT_ObjectPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Dynamic Data Exchange Flag
	DdeAttr *bool
	IdAttr  *string
	Anchor  *CT_ObjectAnchor
}

func (_adccd *CT_RevisionAutoFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _adccd.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _adccd.RefAttr)})
	if _adccd.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_adccd.AutoFormatIdAttr)})
	}
	if _adccd.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adccd.ApplyNumberFormatsAttr))})
	}
	if _adccd.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adccd.ApplyBorderFormatsAttr))})
	}
	if _adccd.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adccd.ApplyFontFormatsAttr))})
	}
	if _adccd.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adccd.ApplyPatternFormatsAttr))})
	}
	if _adccd.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adccd.ApplyAlignmentFormatsAttr))})
	}
	if _adccd.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adccd.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FunctionGroups and its children
func (_gcga *CT_FunctionGroups) Validate() error {
	return _gcga.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073")
}
func (_bcdce *CT_OutlinePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcdce.ApplyStylesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bcdce.ApplyStylesAttr))})
	}
	if _bcdce.SummaryBelowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bcdce.SummaryBelowAttr))})
	}
	if _bcdce.SummaryRightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bcdce.SummaryRightAttr))})
	}
	if _bcdce.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bcdce.ShowOutlineSymbolsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbcgc ST_PrintError) Validate() error { return _gbcgc.ValidateWithPath("") }
func NewCT_DateTime() *CT_DateTime           { _gdccg := &CT_DateTime{}; return _gdccg }

// Validate validates the CT_PatternFill and its children
func (_eccg *CT_PatternFill) Validate() error {
	return _eccg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c")
}
func NewCT_QueryTable() *CT_QueryTable { _fgddbd := &CT_QueryTable{}; return _fgddbd }
func (_cfbdb *ST_RefMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbfcd, _geaba := d.Token()
	if _geaba != nil {
		return _geaba
	}
	if _cebbg, _dbcga := _cbfcd.(_b.EndElement); _dbcga && _cebbg.Name == start.Name {
		*_cfbdb = 1
		return nil
	}
	if _affdc, _ccadfd := _cbfcd.(_b.CharData); !_ccadfd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbfcd)
	} else {
		switch string(_affdc) {
		case "":
			*_cfbdb = 0
		case "\u0041\u0031":
			*_cfbdb = 1
		case "\u0052\u0031\u0043\u0031":
			*_cfbdb = 2
		}
	}
	_cbfcd, _geaba = d.Token()
	if _geaba != nil {
		return _geaba
	}
	if _bcdgaf, _cgbdd := _cbfcd.(_b.EndElement); _cgbdd && _bcdgaf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbfcd)
}

type CT_XStringElement struct {

	// Value
	VAttr string
}

func (_cbdea ST_BorderStyle) Validate() error { return _cbdea.ValidateWithPath("") }
func (_ggaedd *CT_VolType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_adcbb, _accee := _ggaedd.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _accee != nil {
		return _accee
	}
	start.Attr = append(start.Attr, _adcbb)
	e.EncodeToken(start)
	_dffgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0061\u0069\u006e"}}
	for _, _aagee := range _ggaedd.Main {
		e.EncodeElement(_aagee, _dffgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbadd ST_DvAspect) Validate() error { return _bbadd.ValidateWithPath("") }
func (_ddeef ST_Scope) ValidateWithPath(path string) error {
	switch _ddeef {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddeef))
	}
	return nil
}

type CT_MetadataTypes struct {

	// Metadata Type Count
	CountAttr *uint32

	// Metadata Type Information
	MetadataType []*CT_MetadataType
}

func (_adc *CT_AutoFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebb := range start.Attr {
		if _ebb.Name.Local == "\u0072\u0065\u0066" {
			_afd, _cb := _ebb.Value, error(nil)
			if _cb != nil {
				return _cb
			}
			_adc.RefAttr = &_afd
			continue
		}
	}
_edc:
	for {
		_ea, _fbf := d.Token()
		if _fbf != nil {
			return _fbf
		}
		switch _ddf := _ea.(type) {
		case _b.StartElement:
			switch _ddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_bcf := NewCT_FilterColumn()
				if _ba := d.DecodeElement(_bcf, &_ddf); _ba != nil {
					return _ba
				}
				_adc.FilterColumn = append(_adc.FilterColumn, _bcf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_adc.SortState = NewCT_SortState()
				if _ggb := d.DecodeElement(_adc.SortState, &_ddf); _ggb != nil {
					return _ggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adc.ExtLst = NewCT_ExtensionList()
				if _cgd := d.DecodeElement(_adc.ExtLst, &_ddf); _cgd != nil {
					return _cgd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041u\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072 \u0025\u0076", _ddf.Name)
				if _gcf := d.Skip(); _gcf != nil {
					return _gcf
				}
			}
		case _b.EndElement:
			break _edc
		case _b.CharData:
		}
	}
	return nil
}

type CT_TableMissing struct{}
type CT_UnderlineProperty struct {

	// Underline Value
	ValAttr ST_UnderlineValues
}
type ST_PageOrder byte

// Validate validates the CT_MetadataType and its children
func (_fdda *CT_MetadataType) Validate() error {
	return _fdda.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065")
}
func (_ffegd ST_GroupBy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffegd.String(), start)
}

// ValidateWithPath validates the CT_PivotCacheRecords and its children, prefixing error messages with path
func (_fgcf *CT_PivotCacheRecords) ValidateWithPath(path string) error {
	for _eedgd, _cccfb := range _fgcf.R {
		if _bbgec := _cccfb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _eedgd)); _bbgec != nil {
			return _bbgec
		}
	}
	if _fgcf.ExtLst != nil {
		if _gfcgg := _fgcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfcgg != nil {
			return _gfcgg
		}
	}
	return nil
}

// Validate validates the Users and its children
func (_cfedg *Users) Validate() error { return _cfedg.ValidateWithPath("\u0055\u0073\u0065r\u0073") }

// ValidateWithPath validates the CT_ChartsheetPr and its children, prefixing error messages with path
func (_cadd *CT_ChartsheetPr) ValidateWithPath(path string) error {
	if _cadd.TabColor != nil {
		if _bdabg := _cadd.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _bdabg != nil {
			return _bdabg
		}
	}
	return nil
}
func NewCT_PivotArea() *CT_PivotArea { _ecbdab := &CT_PivotArea{}; return _ecbdab }

type ST_SortMethod byte

func (_bgbf *CT_ChartsheetPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgbf.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgbf.PublishedAttr))})
	}
	if _bgbf.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bgbf.CodeNameAttr)})
	}
	e.EncodeToken(start)
	if _bgbf.TabColor != nil {
		_egcdb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bgbf.TabColor, _egcdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_QualifierUnset       ST_Qualifier = 0
	ST_QualifierDoubleQuote ST_Qualifier = 1
	ST_QualifierSingleQuote ST_Qualifier = 2
	ST_QualifierNone        ST_Qualifier = 3
)

type CT_IconSet struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Show Value
	ShowValueAttr *bool

	// Percent
	PercentAttr *bool

	// Reverse Icons
	ReverseAttr *bool

	// Conditional Formatting Object
	Cfvo []*CT_Cfvo
}

func NewCT_ConditionalFormats() *CT_ConditionalFormats {
	_bccebb := &CT_ConditionalFormats{}
	return _bccebb
}
func (_aceaa *ST_MdxFunctionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aceaa = 0
	case "\u006d":
		*_aceaa = 1
	case "\u0076":
		*_aceaa = 2
	case "\u0073":
		*_aceaa = 3
	case "\u0063":
		*_aceaa = 4
	case "\u0072":
		*_aceaa = 5
	case "\u0070":
		*_aceaa = 6
	case "\u006b":
		*_aceaa = 7
	}
	return nil
}
func NewCT_VolType() *CT_VolType {
	_ecabd := &CT_VolType{}
	_ecabd.TypeAttr = ST_VolDepType(1)
	return _ecabd
}
func (_fbcf *CT_ChartsheetProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gebce := range start.Attr {
		if _gebce.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_acfb, _bfba := _gebce.Value, error(nil)
			if _bfba != nil {
				return _bfba
			}
			_fbcf.PasswordAttr = &_acfb
			continue
		}
		if _gebce.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_aeee, _cgec := _gebce.Value, error(nil)
			if _cgec != nil {
				return _cgec
			}
			_fbcf.AlgorithmNameAttr = &_aeee
			continue
		}
		if _gebce.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_gccc, _bbde := _gebce.Value, error(nil)
			if _bbde != nil {
				return _bbde
			}
			_fbcf.HashValueAttr = &_gccc
			continue
		}
		if _gebce.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_dafg, _afbbe := _gebce.Value, error(nil)
			if _afbbe != nil {
				return _afbbe
			}
			_fbcf.SaltValueAttr = &_dafg
			continue
		}
		if _gebce.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_cfgf, _cbddd := _e.ParseUint(_gebce.Value, 10, 32)
			if _cbddd != nil {
				return _cbddd
			}
			_dbae := uint32(_cfgf)
			_fbcf.SpinCountAttr = &_dbae
			continue
		}
		if _gebce.Name.Local == "\u0063o\u006e\u0074\u0065\u006e\u0074" {
			_bccg, _affg := _e.ParseBool(_gebce.Value)
			if _affg != nil {
				return _affg
			}
			_fbcf.ContentAttr = &_bccg
			continue
		}
		if _gebce.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_ebfc, _gdga := _e.ParseBool(_gebce.Value)
			if _gdga != nil {
				return _gdga
			}
			_fbcf.ObjectsAttr = &_ebfc
			continue
		}
	}
	for {
		_baed, _faeg := d.Token()
		if _faeg != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _faeg)
		}
		if _fbebd, _abae := _baed.(_b.EndElement); _abae && _fbebd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_DataValidation() *CT_DataValidation { _dcca := &CT_DataValidation{}; return _dcca }
func (_efbag *CT_MergeCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _baagf := range start.Attr {
		if _baagf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfafe, _bfafe := _e.ParseUint(_baagf.Value, 10, 32)
			if _bfafe != nil {
				return _bfafe
			}
			_bfdba := uint32(_cfafe)
			_efbag.CountAttr = &_bfdba
			continue
		}
	}
_eegdg:
	for {
		_eaccec, _gbgccf := d.Token()
		if _gbgccf != nil {
			return _gbgccf
		}
		switch _acabb := _eaccec.(type) {
		case _b.StartElement:
			switch _acabb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}:
				_fcafc := NewCT_MergeCell()
				if _egcdc := d.DecodeElement(_fcafc, &_acabb); _egcdc != nil {
					return _egcdc
				}
				_efbag.MergeCell = append(_efbag.MergeCell, _fcafc)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004de\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073 \u0025\u0076", _acabb.Name)
				if _gabef := d.Skip(); _gabef != nil {
					return _gabef
				}
			}
		case _b.EndElement:
			break _eegdg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RPrElt and its children, prefixing error messages with path
func (_dgegc *CT_RPrElt) ValidateWithPath(path string) error {
	if _dgegc.RFont != nil {
		if _bccgg := _dgegc.RFont.ValidateWithPath(path + "\u002f\u0052\u0046\u006f\u006e\u0074"); _bccgg != nil {
			return _bccgg
		}
	}
	if _dgegc.Charset != nil {
		if _fggebc := _dgegc.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _fggebc != nil {
			return _fggebc
		}
	}
	if _dgegc.Family != nil {
		if _dgcfe := _dgegc.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _dgcfe != nil {
			return _dgcfe
		}
	}
	if _dgegc.B != nil {
		if _bacag := _dgegc.B.ValidateWithPath(path + "\u002f\u0042"); _bacag != nil {
			return _bacag
		}
	}
	if _dgegc.I != nil {
		if _beeec := _dgegc.I.ValidateWithPath(path + "\u002f\u0049"); _beeec != nil {
			return _beeec
		}
	}
	if _dgegc.Strike != nil {
		if _bgcaf := _dgegc.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _bgcaf != nil {
			return _bgcaf
		}
	}
	if _dgegc.Outline != nil {
		if _bceag := _dgegc.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _bceag != nil {
			return _bceag
		}
	}
	if _dgegc.Shadow != nil {
		if _bbcde := _dgegc.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _bbcde != nil {
			return _bbcde
		}
	}
	if _dgegc.Condense != nil {
		if _deacda := _dgegc.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _deacda != nil {
			return _deacda
		}
	}
	if _dgegc.Extend != nil {
		if _faged := _dgegc.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _faged != nil {
			return _faged
		}
	}
	if _dgegc.Color != nil {
		if _cafcf := _dgegc.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _cafcf != nil {
			return _cafcf
		}
	}
	if _dgegc.Sz != nil {
		if _ebdccd := _dgegc.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _ebdccd != nil {
			return _ebdccd
		}
	}
	if _dgegc.U != nil {
		if _badaa := _dgegc.U.ValidateWithPath(path + "\u002f\u0055"); _badaa != nil {
			return _badaa
		}
	}
	if _dgegc.VertAlign != nil {
		if _ddgdg := _dgegc.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _ddgdg != nil {
			return _ddgdg
		}
	}
	if _dgegc.Scheme != nil {
		if _gffeg := _dgegc.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _gffeg != nil {
			return _gffeg
		}
	}
	return nil
}
func (_cagb *CT_CellXfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbbb := range start.Attr {
		if _dbbb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddba, _gccb := _e.ParseUint(_dbbb.Value, 10, 32)
			if _gccb != nil {
				return _gccb
			}
			_ceee := uint32(_ddba)
			_cagb.CountAttr = &_ceee
			continue
		}
	}
_gdbge:
	for {
		_eebf, _eafe := d.Token()
		if _eafe != nil {
			return _eafe
		}
		switch _gbce := _eebf.(type) {
		case _b.StartElement:
			switch _gbce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_aae := NewCT_Xf()
				if _cdccd := d.DecodeElement(_aae, &_gbce); _cdccd != nil {
					return _cdccd
				}
				_cagb.Xf = append(_cagb.Xf, _aae)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0058\u0066\u0073\u0020\u0025\u0076", _gbce.Name)
				if _bdcd := d.Skip(); _bdcd != nil {
					return _bdcd
				}
			}
		case _b.EndElement:
			break _gdbge
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_PageField() *CT_PageField { _fbdge := &CT_PageField{}; return _fbdge }

// Validate validates the CT_DataRef and its children
func (_ggeeg *CT_DataRef) Validate() error {
	return _ggeeg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066")
}

// Validate validates the CT_Selection and its children
func (_dabfb *CT_Selection) Validate() error {
	return _dabfb.ValidateWithPath("\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}
func NewCT_ExternalSheetNames() *CT_ExternalSheetNames {
	_cafed := &CT_ExternalSheetNames{}
	return _cafed
}
func (_ebdeb *CT_WorkbookProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebdeb.WorkbookPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.WorkbookPasswordAttr)})
	}
	if _ebdeb.WorkbookPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.WorkbookPasswordCharacterSetAttr)})
	}
	if _ebdeb.RevisionsPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.RevisionsPasswordAttr)})
	}
	if _ebdeb.RevisionsPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.RevisionsPasswordCharacterSetAttr)})
	}
	if _ebdeb.LockStructureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebdeb.LockStructureAttr))})
	}
	if _ebdeb.LockWindowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebdeb.LockWindowsAttr))})
	}
	if _ebdeb.LockRevisionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebdeb.LockRevisionAttr))})
	}
	if _ebdeb.RevisionsAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.RevisionsAlgorithmNameAttr)})
	}
	if _ebdeb.RevisionsHashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.RevisionsHashValueAttr)})
	}
	if _ebdeb.RevisionsSaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.RevisionsSaltValueAttr)})
	}
	if _ebdeb.RevisionsSpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.RevisionsSpinCountAttr)})
	}
	if _ebdeb.WorkbookAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.WorkbookAlgorithmNameAttr)})
	}
	if _ebdeb.WorkbookHashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.WorkbookHashValueAttr)})
	}
	if _ebdeb.WorkbookSaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.WorkbookSaltValueAttr)})
	}
	if _ebdeb.WorkbookSpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ebdeb.WorkbookSpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddddbg *ST_ConditionalFormattingOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aaecd, _dddga := d.Token()
	if _dddga != nil {
		return _dddga
	}
	if _eacab, _dcgfff := _aaecd.(_b.EndElement); _dcgfff && _eacab.Name == start.Name {
		*_ddddbg = 1
		return nil
	}
	if _cbgecb, _bggd := _aaecd.(_b.CharData); !_bggd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaecd)
	} else {
		switch string(_cbgecb) {
		case "":
			*_ddddbg = 0
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ddddbg = 1
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_ddddbg = 2
		case "\u0065\u0071\u0075a\u006c":
			*_ddddbg = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ddddbg = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_ddddbg = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ddddbg = 6
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_ddddbg = 7
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ddddbg = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_ddddbg = 9
		case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_ddddbg = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_ddddbg = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_ddddbg = 12
		}
	}
	_aaecd, _dddga = d.Token()
	if _dddga != nil {
		return _dddga
	}
	if _fgeebf, _acaff := _aaecd.(_b.EndElement); _acaff && _fgeebf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaecd)
}
func NewCT_Connections() *CT_Connections { _efdc := &CT_Connections{}; return _efdc }
func (_gbae *CT_CalculatedItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbae.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gbae.CountAttr)})
	}
	e.EncodeToken(start)
	_ccag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}}
	for _, _ccfg := range _gbae.CalculatedItem {
		e.EncodeElement(_ccfg, _ccag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableColumn() *CT_TableColumn { _gedac := &CT_TableColumn{}; return _gedac }

// ValidateWithPath validates the CT_ExternalReference and its children, prefixing error messages with path
func (_cdefd *CT_ExternalReference) ValidateWithPath(path string) error { return nil }
func ParseSliceST_CellSpans(s string) (ST_CellSpans, error)             { return ST_CellSpans(_gf.Fields(s)), nil }

const (
	ST_GradientTypeUnset  ST_GradientType = 0
	ST_GradientTypeLinear ST_GradientType = 1
	ST_GradientTypePath   ST_GradientType = 2
)

type CT_ControlPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Recalculation Flag
	RecalcAlwaysAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Linked Formula
	LinkedCellAttr *string

	// List Items Source Range
	ListFillRangeAttr *string

	// Image Format
	CfAttr *string
	IdAttr *string

	// Object Cell Anchor
	Anchor *CT_ObjectAnchor
}

func (_aggf *CT_IgnoredErrors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fbaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ai\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}}
	for _, _facad := range _aggf.IgnoredError {
		e.EncodeElement(_facad, _fbaa)
	}
	if _aggf.ExtLst != nil {
		_eebcd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aggf.ExtLst, _eebcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eabcg ST_SortType) Validate() error { return _eabcg.ValidateWithPath("") }

// ValidateWithPath validates the CT_Workbook and its children, prefixing error messages with path
func (_fdbdg *CT_Workbook) ValidateWithPath(path string) error {
	if _bbcfe := _fdbdg.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _bbcfe != nil {
		return _bbcfe
	}
	if _fdbdg.FileVersion != nil {
		if _deafa := _fdbdg.FileVersion.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"); _deafa != nil {
			return _deafa
		}
	}
	if _fdbdg.FileSharing != nil {
		if _egebe := _fdbdg.FileSharing.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"); _egebe != nil {
			return _egebe
		}
	}
	if _fdbdg.WorkbookPr != nil {
		if _bfgcee := _fdbdg.WorkbookPr.ValidateWithPath(path + "/\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"); _bfgcee != nil {
			return _bfgcee
		}
	}
	if _fdbdg.WorkbookProtection != nil {
		if _egfff := _fdbdg.WorkbookProtection.ValidateWithPath(path + "\u002f\u0057\u006f\u0072kb\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _egfff != nil {
			return _egfff
		}
	}
	if _fdbdg.BookViews != nil {
		if _bccgd := _fdbdg.BookViews.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"); _bccgd != nil {
			return _bccgd
		}
	}
	if _ebadfe := _fdbdg.Sheets.ValidateWithPath(path + "\u002fS\u0068\u0065\u0065\u0074\u0073"); _ebadfe != nil {
		return _ebadfe
	}
	if _fdbdg.FunctionGroups != nil {
		if _dbadg := _fdbdg.FunctionGroups.ValidateWithPath(path + "\u002fF\u0075n\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073"); _dbadg != nil {
			return _dbadg
		}
	}
	if _fdbdg.ExternalReferences != nil {
		if _cdfgca := _fdbdg.ExternalReferences.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _cdfgca != nil {
			return _cdfgca
		}
	}
	if _fdbdg.DefinedNames != nil {
		if _bbegb := _fdbdg.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _bbegb != nil {
			return _bbegb
		}
	}
	if _fdbdg.CalcPr != nil {
		if _ecfbg := _fdbdg.CalcPr.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0050\u0072"); _ecfbg != nil {
			return _ecfbg
		}
	}
	if _fdbdg.OleSize != nil {
		if _dcfga := _fdbdg.OleSize.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0053\u0069\u007a\u0065"); _dcfga != nil {
			return _dcfga
		}
	}
	if _fdbdg.CustomWorkbookViews != nil {
		if _daebb := _fdbdg.CustomWorkbookViews.ValidateWithPath(path + "/\u0043u\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006bb\u006f\u006f\u006b\u0056ie\u0077\u0073"); _daebb != nil {
			return _daebb
		}
	}
	if _fdbdg.PivotCaches != nil {
		if _ebebf := _fdbdg.PivotCaches.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"); _ebebf != nil {
			return _ebebf
		}
	}
	if _fdbdg.SmartTagPr != nil {
		if _gdceb := _fdbdg.SmartTagPr.ValidateWithPath(path + "/\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"); _gdceb != nil {
			return _gdceb
		}
	}
	if _fdbdg.SmartTagTypes != nil {
		if _cbafb := _fdbdg.SmartTagTypes.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"); _cbafb != nil {
			return _cbafb
		}
	}
	if _fdbdg.WebPublishing != nil {
		if _fefcd := _fdbdg.WebPublishing.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"); _fefcd != nil {
			return _fefcd
		}
	}
	for _gbdcce, _fgbece := range _fdbdg.FileRecoveryPr {
		if _dgffb := _fgbece.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0046\u0069le\u0052e\u0063\u006f\u0076\u0065\u0072y\u0050\u0072\u005b\u0025\u0064\u005d", path, _gbdcce)); _dgffb != nil {
			return _dgffb
		}
	}
	if _fdbdg.WebPublishObjects != nil {
		if _eddcc := _fdbdg.WebPublishObjects.ValidateWithPath(path + "\u002fW\u0065b\u0050\u0075\u0062\u006c\u0069s\u0068\u004fb\u006a\u0065\u0063\u0074\u0073"); _eddcc != nil {
			return _eddcc
		}
	}
	if _fdbdg.ExtLst != nil {
		if _cedfbf := _fdbdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cedfbf != nil {
			return _cedfbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCache and its children, prefixing error messages with path
func (_dbdc *CT_PivotCache) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_QueryCache and its children
func (_dfgd *CT_QueryCache) Validate() error {
	return _dfgd.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065")
}
func NewCT_CellAlignment() *CT_CellAlignment { _dedc := &CT_CellAlignment{}; return _dedc }
func (_bdfef ST_RefMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bdfef.String(), start)
}

// ValidateWithPath validates the CT_CellWatch and its children, prefixing error messages with path
func (_fcef *CT_CellWatch) ValidateWithPath(path string) error { return nil }
func (_cgbaa *CT_XmlPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cgbaa.MapIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _f.Sprintf("\u0025\u0076", _cgbaa.XpathAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cgbaa.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _cgbaa.ExtLst != nil {
		_dgafdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgbaa.ExtLst, _dgafdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FontName and its children
func (_gcadb *CT_FontName) Validate() error {
	return _gcadb.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065")
}
func (_dcgbb ST_DataValidationType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eebedd := _b.Attr{}
	_eebedd.Name = name
	switch _dcgbb {
	case ST_DataValidationTypeUnset:
		_eebedd.Value = ""
	case ST_DataValidationTypeNone:
		_eebedd.Value = "\u006e\u006f\u006e\u0065"
	case ST_DataValidationTypeWhole:
		_eebedd.Value = "\u0077\u0068\u006fl\u0065"
	case ST_DataValidationTypeDecimal:
		_eebedd.Value = "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case ST_DataValidationTypeList:
		_eebedd.Value = "\u006c\u0069\u0073\u0074"
	case ST_DataValidationTypeDate:
		_eebedd.Value = "\u0064\u0061\u0074\u0065"
	case ST_DataValidationTypeTime:
		_eebedd.Value = "\u0074\u0069\u006d\u0065"
	case ST_DataValidationTypeTextLength:
		_eebedd.Value = "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case ST_DataValidationTypeCustom:
		_eebedd.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _eebedd, nil
}
func (_ggceb *CT_FutureMetadataBlock) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gadgc:
	for {
		_fdaaa, _aagcf := d.Token()
		if _aagcf != nil {
			return _aagcf
		}
		switch _cddae := _fdaaa.(type) {
		case _b.StartElement:
			switch _cddae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggceb.ExtLst = NewCT_ExtensionList()
				if _fddg := d.DecodeElement(_ggceb.ExtLst, &_cddae); _fddg != nil {
					return _fddg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u0074\u0075r\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025\u0076", _cddae.Name)
				if _bdfbf := d.Skip(); _bdfbf != nil {
					return _bdfbf
				}
			}
		case _b.EndElement:
			break _gadgc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PCDSDTCEntries and its children
func (_bagcdb *CT_PCDSDTCEntries) Validate() error {
	return _bagcdb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_SharedUser and its children, prefixing error messages with path
func (_fdceg *CT_SharedUser) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_fdceg.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _fdceg.GuidAttr)
	}
	if _fdceg.ExtLst != nil {
		if _ddfae := _fdceg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddfae != nil {
			return _ddfae
		}
	}
	return nil
}
func (_bdea *CT_CustomSheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdea.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _baaf := range start.Attr {
		if _baaf.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_bdea.StateAttr.UnmarshalXMLAttr(_baaf)
			continue
		}
		if _baaf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cdfe, _ecdda := _baaf.Value, error(nil)
			if _ecdda != nil {
				return _ecdda
			}
			_bdea.GuidAttr = _cdfe
			continue
		}
		if _baaf.Name.Local == "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065" {
			_defe, _bgcg := _e.ParseBool(_baaf.Value)
			if _bgcg != nil {
				return _bgcg
			}
			_bdea.FilterUniqueAttr = &_defe
			continue
		}
		if _baaf.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_eeaf, _acggc := _e.ParseUint(_baaf.Value, 10, 32)
			if _acggc != nil {
				return _acggc
			}
			_gfgd := uint32(_eeaf)
			_bdea.ColorIdAttr = &_gfgd
			continue
		}
		if _baaf.Name.Local == "\u0076\u0069\u0065\u0077" {
			_bdea.ViewAttr.UnmarshalXMLAttr(_baaf)
			continue
		}
		if _baaf.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_bcec, _ffge := _e.ParseBool(_baaf.Value)
			if _ffge != nil {
				return _ffge
			}
			_bdea.ShowFormulasAttr = &_bcec
			continue
		}
		if _baaf.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_bebec, _cddfdd := _e.ParseBool(_baaf.Value)
			if _cddfdd != nil {
				return _cddfdd
			}
			_bdea.ShowRulerAttr = &_bebec
			continue
		}
		if _baaf.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c" {
			_gdcca, _affga := _e.ParseBool(_baaf.Value)
			if _affga != nil {
				return _affga
			}
			_bdea.ShowRowColAttr = &_gdcca
			continue
		}
		if _baaf.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_cdag, _ecdadf := _baaf.Value, error(nil)
			if _ecdadf != nil {
				return _ecdadf
			}
			_bdea.TopLeftCellAttr = &_cdag
			continue
		}
		if _baaf.Name.Local == "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073" {
			_ffed, _afgac := _e.ParseBool(_baaf.Value)
			if _afgac != nil {
				return _afgac
			}
			_bdea.ZeroValuesAttr = &_ffed
			continue
		}
		if _baaf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_fdaf, _afced := _e.ParseBool(_baaf.Value)
			if _afced != nil {
				return _afced
			}
			_bdea.HiddenColumnsAttr = &_fdaf
			continue
		}
		if _baaf.Name.Local == "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073" {
			_dbgfd, _efdga := _e.ParseBool(_baaf.Value)
			if _efdga != nil {
				return _efdga
			}
			_bdea.OutlineSymbolsAttr = &_dbgfd
			continue
		}
		if _baaf.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_gafa, _agda := _e.ParseBool(_baaf.Value)
			if _agda != nil {
				return _agda
			}
			_bdea.FilterAttr = &_gafa
			continue
		}
		if _baaf.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_faed, _eabda := _e.ParseUint(_baaf.Value, 10, 32)
			if _eabda != nil {
				return _eabda
			}
			_efcef := uint32(_faed)
			_bdea.ScaleAttr = &_efcef
			continue
		}
		if _baaf.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_ddbd, _gacgg := _e.ParseBool(_baaf.Value)
			if _gacgg != nil {
				return _gacgg
			}
			_bdea.ShowGridLinesAttr = &_ddbd
			continue
		}
		if _baaf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073" {
			_fbafg, _fdcee := _e.ParseBool(_baaf.Value)
			if _fdcee != nil {
				return _fdcee
			}
			_bdea.HiddenRowsAttr = &_fbafg
			continue
		}
		if _baaf.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_aeecg, _cbaea := _e.ParseBool(_baaf.Value)
			if _cbaea != nil {
				return _cbaea
			}
			_bdea.FitToPageAttr = &_aeecg
			continue
		}
		if _baaf.Name.Local == "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a" {
			_cbde, _bcdg := _e.ParseBool(_baaf.Value)
			if _bcdg != nil {
				return _bcdg
			}
			_bdea.PrintAreaAttr = &_cbde
			continue
		}
		if _baaf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072" {
			_adeb, _ceead := _e.ParseBool(_baaf.Value)
			if _ceead != nil {
				return _ceead
			}
			_bdea.ShowAutoFilterAttr = &_adeb
			continue
		}
		if _baaf.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_bcdc, _bacbc := _e.ParseBool(_baaf.Value)
			if _bacbc != nil {
				return _bacbc
			}
			_bdea.ShowPageBreaksAttr = &_bcdc
			continue
		}
	}
_ddag:
	for {
		_gcbf, _ebfd := d.Token()
		if _ebfd != nil {
			return _ebfd
		}
		switch _ddgd := _gcbf.(type) {
		case _b.StartElement:
			switch _ddgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_bdea.Pane = NewCT_Pane()
				if _acefc := d.DecodeElement(_bdea.Pane, &_ddgd); _acefc != nil {
					return _acefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_bdea.Selection = NewCT_Selection()
				if _eccea := d.DecodeElement(_bdea.Selection, &_ddgd); _eccea != nil {
					return _eccea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_bdea.RowBreaks = NewCT_PageBreak()
				if _efae := d.DecodeElement(_bdea.RowBreaks, &_ddgd); _efae != nil {
					return _efae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_bdea.ColBreaks = NewCT_PageBreak()
				if _cedf := d.DecodeElement(_bdea.ColBreaks, &_ddgd); _cedf != nil {
					return _cedf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bdea.PageMargins = NewCT_PageMargins()
				if _ggcea := d.DecodeElement(_bdea.PageMargins, &_ddgd); _ggcea != nil {
					return _ggcea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_bdea.PrintOptions = NewCT_PrintOptions()
				if _cacb := d.DecodeElement(_bdea.PrintOptions, &_ddgd); _cacb != nil {
					return _cacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bdea.PageSetup = NewCT_PageSetup()
				if _efda := d.DecodeElement(_bdea.PageSetup, &_ddgd); _efda != nil {
					return _efda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bdea.HeaderFooter = NewCT_HeaderFooter()
				if _dddde := d.DecodeElement(_bdea.HeaderFooter, &_ddgd); _dddde != nil {
					return _dddde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bdea.AutoFilter = NewCT_AutoFilter()
				if _fafcb := d.DecodeElement(_bdea.AutoFilter, &_ddgd); _fafcb != nil {
					return _fafcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdea.ExtLst = NewCT_ExtensionList()
				if _bfecc := d.DecodeElement(_bdea.ExtLst, &_ddgd); _bfecc != nil {
					return _bfecc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _ddgd.Name)
				if _dadb := d.Skip(); _dadb != nil {
					return _dadb
				}
			}
		case _b.EndElement:
			break _ddag
		case _b.CharData:
		}
	}
	return nil
}
func (_gceea *CT_ExternalSheetNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065"}}
	for _, _cfaaf := range _gceea.SheetName {
		e.EncodeElement(_cfaaf, _fbcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cabbd *CT_Member) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agdbe := range start.Attr {
		if _agdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edgaa, _cebgc := _agdbe.Value, error(nil)
			if _cebgc != nil {
				return _cebgc
			}
			_cabbd.NameAttr = _edgaa
			continue
		}
	}
	for {
		_gdecd, _cadfba := d.Token()
		if _cadfba != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0065\u006db\u0065\u0072\u003a\u0020\u0025\u0073", _cadfba)
		}
		if _edgd, _agfaa := _gdecd.(_b.EndElement); _agfaa && _edgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dgedg ST_PrintError) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fcdfb := _b.Attr{}
	_fcdfb.Name = name
	switch _dgedg {
	case ST_PrintErrorUnset:
		_fcdfb.Value = ""
	case ST_PrintErrorDisplayed:
		_fcdfb.Value = "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case ST_PrintErrorBlank:
		_fcdfb.Value = "\u0062\u006c\u0061n\u006b"
	case ST_PrintErrorDash:
		_fcdfb.Value = "\u0064\u0061\u0073\u0068"
	case ST_PrintErrorNA:
		_fcdfb.Value = "\u004e\u0041"
	}
	return _fcdfb, nil
}

// Validate validates the CT_XmlCellPr and its children
func (_daabba *CT_XmlCellPr) Validate() error {
	return _daabba.ValidateWithPath("\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072")
}

// ValidateWithPath validates the CT_CellSmartTag and its children, prefixing error messages with path
func (_dccf *CT_CellSmartTag) ValidateWithPath(path string) error {
	for _fedf, _daef := range _dccf.CellSmartTagPr {
		if _dceb := _daef.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0065ll\u0053m\u0061\u0072\u0074\u0054\u0061g\u0050\u0072\u005b\u0025\u0064\u005d", path, _fedf)); _dceb != nil {
			return _dceb
		}
	}
	return nil
}

// Validate validates the CT_Rst and its children
func (_deabbe *CT_Rst) Validate() error {
	return _deabbe.ValidateWithPath("\u0043\u0054\u005f\u0052\u0073\u0074")
}
func (_aeedf *ST_CellFormulaType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efdab, _gecccc := d.Token()
	if _gecccc != nil {
		return _gecccc
	}
	if _cfaccff, _fbcdfb := _efdab.(_b.EndElement); _fbcdfb && _cfaccff.Name == start.Name {
		*_aeedf = 1
		return nil
	}
	if _dbaff, _egagg := _efdab.(_b.CharData); !_egagg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efdab)
	} else {
		switch string(_dbaff) {
		case "":
			*_aeedf = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_aeedf = 1
		case "\u0061\u0072\u0072a\u0079":
			*_aeedf = 2
		case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
			*_aeedf = 3
		case "\u0073\u0068\u0061\u0072\u0065\u0064":
			*_aeedf = 4
		}
	}
	_efdab, _gecccc = d.Token()
	if _gecccc != nil {
		return _gecccc
	}
	if _ebcecd, _dbdfa := _efdab.(_b.EndElement); _dbdfa && _ebcecd.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efdab)
}
func (_egbgd ST_MdxSetOrder) String() string {
	switch _egbgd {
	case 0:
		return ""
	case 1:
		return "\u0075"
	case 2:
		return "\u0061"
	case 3:
		return "\u0064"
	case 4:
		return "\u0061\u0061"
	case 5:
		return "\u0061\u0064"
	case 6:
		return "\u006e\u0061"
	case 7:
		return "\u006e\u0064"
	}
	return ""
}
func NewCT_ColHierarchiesUsage() *CT_ColHierarchiesUsage {
	_bfbg := &CT_ColHierarchiesUsage{}
	return _bfbg
}
func (_bgfag *CT_RevisionQueryTableField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bgfag.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _bgfag.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0065\u006c\u0064\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bgfag.FieldIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FieldGroup struct {

	// Parent
	ParAttr *uint32

	// Field Base
	BaseAttr *uint32

	// Range Grouping Properties
	RangePr *CT_RangePr

	// Discrete Grouping Properties
	DiscretePr *CT_DiscretePr

	// OLAP Group Items
	GroupItems *CT_GroupItems
}

func (_aabaed *PivotCacheRecords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aabaed.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	for _, _efadde := range start.Attr {
		if _efadde.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_edaae, _gfdaed := _e.ParseUint(_efadde.Value, 10, 32)
			if _gfdaed != nil {
				return _gfdaed
			}
			_cfdaf := uint32(_edaae)
			_aabaed.CountAttr = &_cfdaf
			continue
		}
	}
_caebg:
	for {
		_fbaabc, _bdbdg := d.Token()
		if _bdbdg != nil {
			return _bdbdg
		}
		switch _cabacd := _fbaabc.(type) {
		case _b.StartElement:
			switch _cabacd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_fddca := NewCT_Record()
				if _caedb := d.DecodeElement(_fddca, &_cabacd); _caedb != nil {
					return _caedb
				}
				_aabaed.R = append(_aabaed.R, _fddca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabaed.ExtLst = NewCT_ExtensionList()
				if _fegbc := d.DecodeElement(_aabaed.ExtLst, &_cabacd); _fegbc != nil {
					return _fegbc
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _cabacd.Name)
				if _gcgage := d.Skip(); _gcgage != nil {
					return _gcgage
				}
			}
		case _b.EndElement:
			break _caebg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColFields and its children
func (_dddc *CT_ColFields) Validate() error {
	return _dddc.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_BorderPr and its children
func (_eee *CT_BorderPr) Validate() error {
	return _eee.ValidateWithPath("C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072")
}

// ValidateWithPath validates the CT_BookViews and its children, prefixing error messages with path
func (_ffa *CT_BookViews) ValidateWithPath(path string) error {
	for _dbbe, _gfb := range _ffa.WorkbookView {
		if _dcg := _gfb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0057or\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _dbbe)); _dcg != nil {
			return _dcg
		}
	}
	return nil
}

type CT_TableColumn struct {

	// Table Field Id
	IdAttr uint32

	// Unique Name
	UniqueNameAttr *string

	// Column name
	NameAttr string

	// Totals Row Function
	TotalsRowFunctionAttr ST_TotalsRowFunction

	// Totals Row Label
	TotalsRowLabelAttr *string

	// Query Table Field Id
	QueryTableFieldIdAttr *uint32

	// Header Row Cell Format Id
	HeaderRowDxfIdAttr *uint32

	// Data & Insert Row Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Cell Style
	HeaderRowCellStyleAttr *string

	// Data Area Style Name
	DataCellStyleAttr *string

	// Totals Row Style Name
	TotalsRowCellStyleAttr *string

	// Calculated Column Formula
	CalculatedColumnFormula *CT_TableFormula

	// Totals Row Formula
	TotalsRowFormula *CT_TableFormula

	// XML Column Properties
	XmlColumnPr *CT_XmlColumnPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type Headers struct{ CT_RevisionHeaders }

func NewCT_QueryCache() *CT_QueryCache { _deabf := &CT_QueryCache{}; return _deabf }

type CT_IndexedColors struct {

	// RGB Color
	RgbColor []*CT_RgbColor
}

func NewCT_RevisionHeaders() *CT_RevisionHeaders {
	_adfcd := &CT_RevisionHeaders{}
	_adfcd.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _adfcd
}

type CT_ColFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Field
	Field []*CT_Field
}

func NewCT_PCDKPI() *CT_PCDKPI { _eedga := &CT_PCDKPI{}; return _eedga }
func (_dfabe *CT_PivotDimension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfabe.MeasureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dfabe.MeasureAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dfabe.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dfabe.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _dfabe.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetCalcPr and its children
func (_gacbf *CT_SheetCalcPr) Validate() error {
	return _gacbf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072")
}

type ST_FormulaExpression byte

func (_adbdge ST_SortBy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_adbdge.String(), start)
}

type CT_PivotCacheRecords struct {

	// PivotCache Records Count
	CountAttr *uint32

	// PivotCache Record
	R []*CT_Record

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ggbff *Metadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggbff.CT_Metadata = *NewCT_Metadata()
_egfgc:
	for {
		_bffad, _cfgfbff := d.Token()
		if _cfgfbff != nil {
			return _cfgfbff
		}
		switch _bcgbad := _bffad.(type) {
		case _b.StartElement:
			switch _bcgbad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_ggbff.MetadataTypes = NewCT_MetadataTypes()
				if _fcecb := d.DecodeElement(_ggbff.MetadataTypes, &_bcgbad); _fcecb != nil {
					return _fcecb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_ggbff.MetadataStrings = NewCT_MetadataStrings()
				if _dgccgb := d.DecodeElement(_ggbff.MetadataStrings, &_bcgbad); _dgccgb != nil {
					return _dgccgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_ggbff.MdxMetadata = NewCT_MdxMetadata()
				if _ebaaba := d.DecodeElement(_ggbff.MdxMetadata, &_bcgbad); _ebaaba != nil {
					return _ebaaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_ffaeg := NewCT_FutureMetadata()
				if _eccaca := d.DecodeElement(_ffaeg, &_bcgbad); _eccaca != nil {
					return _eccaca
				}
				_ggbff.FutureMetadata = append(_ggbff.FutureMetadata, _ffaeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_ggbff.CellMetadata = NewCT_MetadataBlocks()
				if _cagcg := d.DecodeElement(_ggbff.CellMetadata, &_bcgbad); _cagcg != nil {
					return _cagcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_ggbff.ValueMetadata = NewCT_MetadataBlocks()
				if _accbc := d.DecodeElement(_ggbff.ValueMetadata, &_bcgbad); _accbc != nil {
					return _accbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggbff.ExtLst = NewCT_ExtensionList()
				if _bafag := d.DecodeElement(_ggbff.ExtLst, &_bcgbad); _bafag != nil {
					return _bafag
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _bcgbad.Name)
				if _beggd := d.Skip(); _beggd != nil {
					return _beggd
				}
			}
		case _b.EndElement:
			break _egfgc
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetViews struct {

	// Worksheet View
	SheetView []*CT_SheetView

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_SmartTagType and its children, prefixing error messages with path
func (_cgacf *CT_SmartTagType) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_beedg *CT_String) ValidateWithPath(path string) error {
	for _fdecg, _bdbbgb := range _beedg.Tpls {
		if _dafab := _bdbbgb.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _fdecg)); _dafab != nil {
			return _dafab
		}
	}
	for _dgddd, _agbdf := range _beedg.X {
		if _gafdbd := _agbdf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _dgddd)); _gafdbd != nil {
			return _gafdbd
		}
	}
	return nil
}
func NewCT_Sheet() *CT_Sheet { _cgceb := &CT_Sheet{}; return _cgceb }

// ValidateWithPath validates the CT_DataRefs and its children, prefixing error messages with path
func (_eebc *CT_DataRefs) ValidateWithPath(path string) error {
	for _ebgef, _eege := range _eebc.DataRef {
		if _fega := _eege.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044\u0061\u0074\u0061\u0052\u0065f\u005b\u0025\u0064\u005d", path, _ebgef)); _fega != nil {
			return _fega
		}
	}
	return nil
}

// Validate validates the CT_VolTopic and its children
func (_bgadg *CT_VolTopic) Validate() error {
	return _bgadg.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063")
}
func NewCT_Borders() *CT_Borders { _fce := &CT_Borders{}; return _fce }
func (_gcdec *CT_Items) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cggfg := range start.Attr {
		if _cggfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eaabc, _dbedfa := _e.ParseUint(_cggfg.Value, 10, 32)
			if _dbedfa != nil {
				return _dbedfa
			}
			_dade := uint32(_eaabc)
			_gcdec.CountAttr = &_dade
			continue
		}
	}
_gefge:
	for {
		_cebga, _dbcab := d.Token()
		if _dbcab != nil {
			return _dbcab
		}
		switch _aaccg := _cebga.(type) {
		case _b.StartElement:
			switch _aaccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}:
				_aecbf := NewCT_Item()
				if _cggg := d.DecodeElement(_aecbf, &_aaccg); _cggg != nil {
					return _cggg
				}
				_gcdec.Item = append(_gcdec.Item, _aecbf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _aaccg.Name)
				if _bcceba := d.Skip(); _bcceba != nil {
					return _bcceba
				}
			}
		case _b.EndElement:
			break _gefge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Query and its children, prefixing error messages with path
func (_bffge *CT_Query) ValidateWithPath(path string) error {
	if _bffge.Tpls != nil {
		if _gbaef := _bffge.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _gbaef != nil {
			return _gbaef
		}
	}
	return nil
}
func NewCT_DrawingHF() *CT_DrawingHF { _bcga := &CT_DrawingHF{}; return _bcga }
func (_geb *CT_AutoFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geb.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_geb.RefAttr)})
	}
	e.EncodeToken(start)
	if _geb.FilterColumn != nil {
		_bfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003af\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}}
		for _, _dc := range _geb.FilterColumn {
			e.EncodeElement(_dc, _bfa)
		}
	}
	if _geb.SortState != nil {
		_dbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_geb.SortState, _dbg)
	}
	if _geb.ExtLst != nil {
		_dbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_geb.ExtLst, _dbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gafceg *CT_VolType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gafceg.TypeAttr = ST_VolDepType(1)
	for _, _gefgb := range start.Attr {
		if _gefgb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gafceg.TypeAttr.UnmarshalXMLAttr(_gefgb)
			continue
		}
	}
_agggcc:
	for {
		_aeedc, _gbcae := d.Token()
		if _gbcae != nil {
			return _gbcae
		}
		switch _acagfb := _aeedc.(type) {
		case _b.StartElement:
			switch _acagfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}:
				_dgadac := NewCT_VolMain()
				if _fagggc := d.DecodeElement(_dgadac, &_acagfb); _fagggc != nil {
					return _fagggc
				}
				_gafceg.Main = append(_gafceg.Main, _dgadac)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _acagfb.Name)
				if _bdbcd := d.Skip(); _bdbcd != nil {
					return _bdbcd
				}
			}
		case _b.EndElement:
			break _agggcc
		case _b.CharData:
		}
	}
	return nil
}

type CT_CacheHierarchy struct {

	// Hierarchy Unique Name
	UniqueNameAttr string

	// Hierarchy Display Name
	CaptionAttr *string

	// Measure Hierarchy
	MeasureAttr *bool

	// Set
	SetAttr *bool

	// Parent Set
	ParentSetAttr *uint32

	// KPI Icon Set
	IconSetAttr *int32

	// Attribute Hierarchy
	AttributeAttr *bool

	// Time
	TimeAttr *bool

	// Key Attribute Hierarchy
	KeyAttributeAttr *bool

	// Default Member Unique Name
	DefaultMemberUniqueNameAttr *string

	// Unique Name of 'All'
	AllUniqueNameAttr *string

	// Display Name of 'All'
	AllCaptionAttr *string

	// Dimension Unique Name
	DimensionUniqueNameAttr *string

	// Display Folder
	DisplayFolderAttr *string

	// Measure Group Name
	MeasureGroupAttr *string

	// Measures
	MeasuresAttr *bool

	// Levels Count
	CountAttr uint32

	// One Field
	OneFieldAttr *bool

	// Member Value Data Type
	MemberValueDatatypeAttr *uint16

	// Unbalanced
	UnbalancedAttr *bool

	// Unbalanced Group
	UnbalancedGroupAttr *bool

	// Hidden
	HiddenAttr *bool

	// Fields Usage
	FieldsUsage *CT_FieldsUsage

	// OLAP Grouping Levels
	GroupLevels *CT_GroupLevels

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_DataValidationErrorStyle byte

// ValidateWithPath validates the Headers and its children, prefixing error messages with path
func (_cecac *Headers) ValidateWithPath(path string) error {
	if _aacbd := _cecac.CT_RevisionHeaders.ValidateWithPath(path); _aacbd != nil {
		return _aacbd
	}
	return nil
}
func (_gcaefa *MapInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcaefa.CT_MapInfo = *NewCT_MapInfo()
	for _, _fffga := range start.Attr {
		if _fffga.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_bgebee, _gggfgf := _fffga.Value, error(nil)
			if _gggfgf != nil {
				return _gggfgf
			}
			_gcaefa.SelectionNamespacesAttr = _bgebee
			continue
		}
	}
_abfbac:
	for {
		_fcaeg, _cdefb := d.Token()
		if _cdefb != nil {
			return _cdefb
		}
		switch _aebee := _fcaeg.(type) {
		case _b.StartElement:
			switch _aebee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_bdffb := NewCT_Schema()
				if _bedcdc := d.DecodeElement(_bdffb, &_aebee); _bedcdc != nil {
					return _bedcdc
				}
				_gcaefa.Schema = append(_gcaefa.Schema, _bdffb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_cebd := NewCT_Map()
				if _caeda := d.DecodeElement(_cebd, &_aebee); _caeda != nil {
					return _caeda
				}
				_gcaefa.Map = append(_gcaefa.Map, _cebd)
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004da\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _aebee.Name)
				if _bbfbf := d.Skip(); _bbfbf != nil {
					return _bbfbf
				}
			}
		case _b.EndElement:
			break _abfbac
		case _b.CharData:
		}
	}
	return nil
}
func (_eeffcf ST_Comments) Validate() error        { return _eeffcf.ValidateWithPath("") }
func NewCT_WebPublishObject() *CT_WebPublishObject { _befbf := &CT_WebPublishObject{}; return _befbf }
func (_ebbcd *ST_SortMethod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_geeaf, _ceaca := d.Token()
	if _ceaca != nil {
		return _ceaca
	}
	if _fbegd, _gfdbgc := _geeaf.(_b.EndElement); _gfdbgc && _fbegd.Name == start.Name {
		*_ebbcd = 1
		return nil
	}
	if _abbbeg, _afefa := _geeaf.(_b.CharData); !_afefa {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geeaf)
	} else {
		switch string(_abbbeg) {
		case "":
			*_ebbcd = 0
		case "\u0073\u0074\u0072\u006f\u006b\u0065":
			*_ebbcd = 1
		case "\u0070\u0069\u006e\u0059\u0069\u006e":
			*_ebbcd = 2
		case "\u006e\u006f\u006e\u0065":
			*_ebbcd = 3
		}
	}
	_geeaf, _ceaca = d.Token()
	if _ceaca != nil {
		return _ceaca
	}
	if _agfgc, _gbabgd := _geeaf.(_b.EndElement); _gbabgd && _agfgc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geeaf)
}
func (_acfae *CT_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_acfae.ValAttr = ST_FontScheme(1)
	for _, _fcgca := range start.Attr {
		if _fcgca.Name.Local == "\u0076\u0061\u006c" {
			_acfae.ValAttr.UnmarshalXMLAttr(_fcgca)
			continue
		}
	}
	for {
		_facb, _baagc := d.Token()
		if _baagc != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0053c\u0068\u0065\u006d\u0065\u003a\u0020\u0025s", _baagc)
		}
		if _cbdb, _eabeg := _facb.(_b.EndElement); _eabeg && _cbdb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhoneticPr and its children, prefixing error messages with path
func (_fgcaa *CT_PhoneticPr) ValidateWithPath(path string) error {
	if _fdebf := _fgcaa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fdebf != nil {
		return _fdebf
	}
	if _ffafb := _fgcaa.AlignmentAttr.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006et\u0041\u0074\u0074\u0072"); _ffafb != nil {
		return _ffafb
	}
	return nil
}

// Validate validates the CT_IgnoredError and its children
func (_cceb *CT_IgnoredError) Validate() error {
	return _cceb.ValidateWithPath("\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072")
}

// Validate validates the CT_ExternalLinkChoice and its children
func (_cedd *CT_ExternalLinkChoice) Validate() error {
	return _cedd.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u004c\u0069\u006ek\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_fba *CT_Borders) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acfa := range start.Attr {
		if _acfa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdab, _ffcd := _e.ParseUint(_acfa.Value, 10, 32)
			if _ffcd != nil {
				return _ffcd
			}
			_fgde := uint32(_gdab)
			_fba.CountAttr = &_fgde
			continue
		}
	}
_gdd:
	for {
		_efe, _fdfa := d.Token()
		if _fdfa != nil {
			return _fdfa
		}
		switch _afe := _efe.(type) {
		case _b.StartElement:
			switch _afe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_egb := NewCT_Border()
				if _eaae := d.DecodeElement(_egb, &_afe); _eaae != nil {
					return _eaae
				}
				_fba.Border = append(_fba.Border, _egb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _afe.Name)
				if _aefb := d.Skip(); _aefb != nil {
					return _aefb
				}
			}
		case _b.EndElement:
			break _gdd
		case _b.CharData:
		}
	}
	return nil
}
func (_aeefcf *ST_MdxKPIProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebgdc, _agdcg := d.Token()
	if _agdcg != nil {
		return _agdcg
	}
	if _gbgfe, _gbadb := _ebgdc.(_b.EndElement); _gbadb && _gbgfe.Name == start.Name {
		*_aeefcf = 1
		return nil
	}
	if _cadcee, _ddbda := _ebgdc.(_b.CharData); !_ddbda {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebgdc)
	} else {
		switch string(_cadcee) {
		case "":
			*_aeefcf = 0
		case "\u0076":
			*_aeefcf = 1
		case "\u0067":
			*_aeefcf = 2
		case "\u0073":
			*_aeefcf = 3
		case "\u0074":
			*_aeefcf = 4
		case "\u0077":
			*_aeefcf = 5
		case "\u006d":
			*_aeefcf = 6
		}
	}
	_ebgdc, _agdcg = d.Token()
	if _agdcg != nil {
		return _agdcg
	}
	if _fddacg, _fgdede := _ebgdc.(_b.EndElement); _fgdede && _fddacg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebgdc)
}
func NewCT_FutureMetadataBlock() *CT_FutureMetadataBlock {
	_debb := &CT_FutureMetadataBlock{}
	return _debb
}
func (_bfbc *CT_ColorScale) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_geegc:
	for {
		_egfd, _ggac := d.Token()
		if _ggac != nil {
			return _ggac
		}
		switch _cgcgd := _egfd.(type) {
		case _b.StartElement:
			switch _cgcgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_cgab := NewCT_Cfvo()
				if _eage := d.DecodeElement(_cgab, &_cgcgd); _eage != nil {
					return _eage
				}
				_bfbc.Cfvo = append(_bfbc.Cfvo, _cgab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_befd := NewCT_Color()
				if _bfbb := d.DecodeElement(_befd, &_cgcgd); _bfbb != nil {
					return _bfbb
				}
				_bfbc.Color = append(_bfbc.Color, _befd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065 \u0025\u0076", _cgcgd.Name)
				if _fcgge := d.Skip(); _fcgge != nil {
					return _fcgge
				}
			}
		case _b.EndElement:
			break _geegc
		case _b.CharData:
		}
	}
	return nil
}
func (_eggbg *ST_CalcMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eggbg = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_eggbg = 1
	case "\u0061\u0075\u0074\u006f":
		*_eggbg = 2
	case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
		*_eggbg = 3
	}
	return nil
}
func (_gbaba ST_CredMethod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egdga := _b.Attr{}
	_egdga.Name = name
	switch _gbaba {
	case ST_CredMethodUnset:
		_egdga.Value = ""
	case ST_CredMethodIntegrated:
		_egdga.Value = "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case ST_CredMethodNone:
		_egdga.Value = "\u006e\u006f\u006e\u0065"
	case ST_CredMethodStored:
		_egdga.Value = "\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_CredMethodPrompt:
		_egdga.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return _egdga, nil
}
func (_baefcg *CT_SmartTagType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baefcg.NamespaceUriAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_baefcg.NamespaceUriAttr)})
	}
	if _baefcg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_baefcg.NameAttr)})
	}
	if _baefcg.UrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_baefcg.UrlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ChartsheetPr struct {

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string
	TabColor     *CT_Color
}

func (_dadfa *CT_VerticalAlignFontProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_dfcbbg, _dgfee := _dadfa.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _dgfee != nil {
		return _dgfee
	}
	start.Attr = append(start.Attr, _dfcbbg)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcecf *CT_OlapPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cafc := range start.Attr {
		if _cafc.Name.Local == "\u006c\u006f\u0063a\u006c" {
			_dadgc, _bceede := _e.ParseBool(_cafc.Value)
			if _bceede != nil {
				return _bceede
			}
			_fcecf.LocalAttr = &_dadgc
			continue
		}
		if _cafc.Name.Local == "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_caccdb, _ececa := _cafc.Value, error(nil)
			if _ececa != nil {
				return _ececa
			}
			_fcecf.LocalConnectionAttr = &_caccdb
			continue
		}
		if _cafc.Name.Local == "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_aagda, _bbbab := _e.ParseBool(_cafc.Value)
			if _bbbab != nil {
				return _bbbab
			}
			_fcecf.LocalRefreshAttr = &_aagda
			continue
		}
		if _cafc.Name.Local == "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065" {
			_dgbbgc, _gbagc := _e.ParseBool(_cafc.Value)
			if _gbagc != nil {
				return _gbagc
			}
			_fcecf.SendLocaleAttr = &_dgbbgc
			continue
		}
		if _cafc.Name.Local == "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074" {
			_baccf, _dffcf := _e.ParseUint(_cafc.Value, 10, 32)
			if _dffcf != nil {
				return _dffcf
			}
			_dfeab := uint32(_baccf)
			_fcecf.RowDrillCountAttr = &_dfeab
			continue
		}
		if _cafc.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c" {
			_dddb, _fcccc := _e.ParseBool(_cafc.Value)
			if _fcccc != nil {
				return _fcccc
			}
			_fcecf.ServerFillAttr = &_dddb
			continue
		}
		if _cafc.Name.Local == "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074" {
			_fbaaa, _abecf := _e.ParseBool(_cafc.Value)
			if _abecf != nil {
				return _abecf
			}
			_fcecf.ServerNumberFormatAttr = &_fbaaa
			continue
		}
		if _cafc.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074" {
			_cace, _bgebe := _e.ParseBool(_cafc.Value)
			if _bgebe != nil {
				return _bgebe
			}
			_fcecf.ServerFontAttr = &_cace
			continue
		}
		if _cafc.Name.Local == "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072" {
			_dfdaf, _fgaga := _e.ParseBool(_cafc.Value)
			if _fgaga != nil {
				return _fgaga
			}
			_fcecf.ServerFontColorAttr = &_dfdaf
			continue
		}
	}
	for {
		_ecag, _gbaeeg := d.Token()
		if _gbaeeg != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004f\u006c\u0061p\u0050\u0072\u003a\u0020\u0025\u0073", _gbaeeg)
		}
		if _fgbgd, _eggedd := _ecag.(_b.EndElement); _eggedd && _fgbgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egfcfd *CT_ExternalDefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _defa := range start.Attr {
		if _defa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gfbde, _bdbc := _defa.Value, error(nil)
			if _bdbc != nil {
				return _bdbc
			}
			_egfcfd.NameAttr = _gfbde
			continue
		}
		if _defa.Name.Local == "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f" {
			_gagg, _fecf := _defa.Value, error(nil)
			if _fecf != nil {
				return _fecf
			}
			_egfcfd.RefersToAttr = &_gagg
			continue
		}
		if _defa.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ecbfb, _dbaeg := _e.ParseUint(_defa.Value, 10, 32)
			if _dbaeg != nil {
				return _dbaeg
			}
			_eddg := uint32(_ecbfb)
			_egfcfd.SheetIdAttr = &_eddg
			continue
		}
	}
	for {
		_adca, _fabdd := d.Token()
		if _fabdd != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072n\u0061l\u0044e\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _fabdd)
		}
		if _fdgbe, _bfdd := _adca.(_b.EndElement); _bfdd && _fdgbe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Consolidation and its children
func (_bbdg *CT_Consolidation) Validate() error {
	return _bbdg.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_CacheSource and its children, prefixing error messages with path
func (_eabb *CT_CacheSource) ValidateWithPath(path string) error {
	if _eabb.TypeAttr == ST_SourceTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aeab := _eabb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _aeab != nil {
		return _aeab
	}
	if _eabb.WorksheetSource != nil {
		if _bfdg := _eabb.WorksheetSource.ValidateWithPath(path + "\u002f\u0057o\u0072\u006b\u0073h\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"); _bfdg != nil {
			return _bfdg
		}
	}
	if _eabb.Consolidation != nil {
		if _cadf := _eabb.Consolidation.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"); _cadf != nil {
			return _cadf
		}
	}
	if _eabb.ExtLst != nil {
		if _ccd := _eabb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccd != nil {
			return _ccd
		}
	}
	return nil
}

// Validate validates the CT_PhoneticPr and its children
func (_acagf *CT_PhoneticPr) Validate() error {
	return _acagf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072")
}
func (_cfb *CT_Authors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfb.Author != nil {
		_cdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u0075\u0074\u0068\u006fr"}}
		for _, _gaf := range _cfb.Author {
			e.EncodeElement(_gaf, _cdd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CfRule and its children, prefixing error messages with path
func (_gdfb *CT_CfRule) ValidateWithPath(path string) error {
	if _cebc := _gdfb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cebc != nil {
		return _cebc
	}
	if _beff := _gdfb.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _beff != nil {
		return _beff
	}
	if _ccgf := _gdfb.TimePeriodAttr.ValidateWithPath(path + "\u002fT\u0069m\u0065\u0050\u0065\u0072\u0069\u006f\u0064\u0041\u0074\u0074\u0072"); _ccgf != nil {
		return _ccgf
	}
	if _gdfb.ColorScale != nil {
		if _bed := _gdfb.ColorScale.ValidateWithPath(path + "/\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"); _bed != nil {
			return _bed
		}
	}
	if _gdfb.DataBar != nil {
		if _bfge := _gdfb.DataBar.ValidateWithPath(path + "\u002f\u0044\u0061\u0074\u0061\u0042\u0061\u0072"); _bfge != nil {
			return _bfge
		}
	}
	if _gdfb.IconSet != nil {
		if _aeae := _gdfb.IconSet.ValidateWithPath(path + "\u002f\u0049\u0063\u006f\u006e\u0053\u0065\u0074"); _aeae != nil {
			return _aeae
		}
	}
	if _gdfb.ExtLst != nil {
		if _dgab := _gdfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgab != nil {
			return _dgab
		}
	}
	return nil
}
func (_cgbgb *CT_Selection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgae := range start.Attr {
		if _cgae.Name.Local == "\u0070\u0061\u006e\u0065" {
			_cgbgb.PaneAttr.UnmarshalXMLAttr(_cgae)
			continue
		}
		if _cgae.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c" {
			_fdabf, _abdae := _cgae.Value, error(nil)
			if _abdae != nil {
				return _abdae
			}
			_cgbgb.ActiveCellAttr = &_fdabf
			continue
		}
		if _cgae.Name.Local == "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064" {
			_cbcbf, _fbbfa := _e.ParseUint(_cgae.Value, 10, 32)
			if _fbbfa != nil {
				return _fbbfa
			}
			_cgaea := uint32(_cbcbf)
			_cgbgb.ActiveCellIdAttr = &_cgaea
			continue
		}
		if _cgae.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_dfgbg, _gdege := ParseSliceST_Sqref(_cgae.Value)
			if _gdege != nil {
				return _gdege
			}
			_cgbgb.SqrefAttr = &_dfgbg
			continue
		}
	}
	for {
		_bddce, _edadb := d.Token()
		if _edadb != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _edadb)
		}
		if _cbeebc, _ggbbd := _bddce.(_b.EndElement); _ggbbd && _cbeebc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_daddf *CT_TupleCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _daddf.Entries != nil {
		_bfbef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0074\u0072\u0069\u0065\u0073"}}
		e.EncodeElement(_daddf.Entries, _bfbef)
	}
	if _daddf.Sets != nil {
		_acbafe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0065\u0074\u0073"}}
		e.EncodeElement(_daddf.Sets, _acbafe)
	}
	if _daddf.QueryCache != nil {
		_cfdggf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_daddf.QueryCache, _cfdggf)
	}
	if _daddf.ServerFormats != nil {
		_eddabga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_daddf.ServerFormats, _eddabga)
	}
	if _daddf.ExtLst != nil {
		_acgcaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_daddf.ExtLst, _acgcaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbfbf *CT_RangePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbfbf.AutoStartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbf.AutoStartAttr))})
	}
	if _gbfbf.AutoEndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0045\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbf.AutoEndAttr))})
	}
	if _gbfbf.GroupByAttr != ST_GroupByUnset {
		_cbafa, _eecgd := _gbfbf.GroupByAttr.MarshalXMLAttr(_b.Name{Local: "\u0067r\u006f\u0075\u0070\u0042\u0079"})
		if _eecgd != nil {
			return _eecgd
		}
		start.Attr = append(start.Attr, _cbafa)
	}
	if _gbfbf.StartNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_gbfbf.StartNumAttr)})
	}
	if _gbfbf.EndNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u004e\u0075\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_gbfbf.EndNumAttr)})
	}
	if _gbfbf.StartDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e"}, Value: _f.Sprintf("\u0025\u0076", *_gbfbf.StartDateAttr)})
	}
	if _gbfbf.EndDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065n\u0064\u0044\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_gbfbf.EndDateAttr)})
	}
	if _gbfbf.GroupIntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_gbfbf.GroupIntervalAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Reviewed and its children
func (_cgabg *CT_Reviewed) Validate() error {
	return _cgabg.ValidateWithPath("C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064")
}
func (_egedd *CT_HeaderFooter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egedd.DifferentOddEvenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egedd.DifferentOddEvenAttr))})
	}
	if _egedd.DifferentFirstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egedd.DifferentFirstAttr))})
	}
	if _egedd.ScaleWithDocAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egedd.ScaleWithDocAttr))})
	}
	if _egedd.AlignWithMarginsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egedd.AlignWithMarginsAttr))})
	}
	e.EncodeToken(start)
	if _egedd.OddHeader != nil {
		_dfebb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_d.AddPreserveSpaceAttr(&_dfebb, *_egedd.OddHeader)
		e.EncodeElement(_egedd.OddHeader, _dfebb)
	}
	if _egedd.OddFooter != nil {
		_bedfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_d.AddPreserveSpaceAttr(&_bedfd, *_egedd.OddFooter)
		e.EncodeElement(_egedd.OddFooter, _bedfd)
	}
	if _egedd.EvenHeader != nil {
		_dddfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_d.AddPreserveSpaceAttr(&_dddfb, *_egedd.EvenHeader)
		e.EncodeElement(_egedd.EvenHeader, _dddfb)
	}
	if _egedd.EvenFooter != nil {
		_fffde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_d.AddPreserveSpaceAttr(&_fffde, *_egedd.EvenFooter)
		e.EncodeElement(_egedd.EvenFooter, _fffde)
	}
	if _egedd.FirstHeader != nil {
		_abgag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0048e\u0061\u0064\u0065\u0072"}}
		_d.AddPreserveSpaceAttr(&_abgag, *_egedd.FirstHeader)
		e.EncodeElement(_egedd.FirstHeader, _abgag)
	}
	if _egedd.FirstFooter != nil {
		_faeeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0046o\u006f\u0074\u0065\u0072"}}
		_d.AddPreserveSpaceAttr(&_faeeg, *_egedd.FirstFooter)
		e.EncodeElement(_egedd.FirstFooter, _faeeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbbca *CT_TableColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abdgd := range start.Attr {
		if _abdgd.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_baggd, _fcgdad := _e.ParseUint(_abdgd.Value, 10, 32)
			if _fcgdad != nil {
				return _fcgdad
			}
			_dedfa := uint32(_baggd)
			_dbbca.TotalsRowDxfIdAttr = &_dedfa
			continue
		}
		if _abdgd.Name.Local == "\u0069\u0064" {
			_gbcdgc, _baeed := _e.ParseUint(_abdgd.Value, 10, 32)
			if _baeed != nil {
				return _baeed
			}
			_dbbca.IdAttr = uint32(_gbcdgc)
			continue
		}
		if _abdgd.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_eadfe, _fcffb := _abdgd.Value, error(nil)
			if _fcffb != nil {
				return _fcffb
			}
			_dbbca.HeaderRowCellStyleAttr = &_eadfe
			continue
		}
		if _abdgd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_deafbc, _becdde := _abdgd.Value, error(nil)
			if _becdde != nil {
				return _becdde
			}
			_dbbca.NameAttr = _deafbc
			continue
		}
		if _abdgd.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c" {
			_cfcccg, _dbbgce := _abdgd.Value, error(nil)
			if _dbbgce != nil {
				return _dbbgce
			}
			_dbbca.TotalsRowLabelAttr = &_cfcccg
			continue
		}
		if _abdgd.Name.Local == "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064" {
			_dfeag, _cebcg := _e.ParseUint(_abdgd.Value, 10, 32)
			if _cebcg != nil {
				return _cebcg
			}
			_acffa := uint32(_dfeag)
			_dbbca.QueryTableFieldIdAttr = &_acffa
			continue
		}
		if _abdgd.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_agffd, _aedbb := _e.ParseUint(_abdgd.Value, 10, 32)
			if _aedbb != nil {
				return _aedbb
			}
			_eabfccc := uint32(_agffd)
			_dbbca.HeaderRowDxfIdAttr = &_eabfccc
			continue
		}
		if _abdgd.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_cddca, _cagbd := _e.ParseUint(_abdgd.Value, 10, 32)
			if _cagbd != nil {
				return _cagbd
			}
			_faag := uint32(_cddca)
			_dbbca.DataDxfIdAttr = &_faag
			continue
		}
		if _abdgd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_eadbb, _afgbbf := _abdgd.Value, error(nil)
			if _afgbbf != nil {
				return _afgbbf
			}
			_dbbca.UniqueNameAttr = &_eadbb
			continue
		}
		if _abdgd.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e" {
			_dbbca.TotalsRowFunctionAttr.UnmarshalXMLAttr(_abdgd)
			continue
		}
		if _abdgd.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_deegf, _bafbd := _abdgd.Value, error(nil)
			if _bafbd != nil {
				return _bafbd
			}
			_dbbca.DataCellStyleAttr = &_deegf
			continue
		}
		if _abdgd.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_bceecg, _dagce := _abdgd.Value, error(nil)
			if _dagce != nil {
				return _dagce
			}
			_dbbca.TotalsRowCellStyleAttr = &_bceecg
			continue
		}
	}
_dfeegd:
	for {
		_aggcb, _ccafb := d.Token()
		if _ccafb != nil {
			return _ccafb
		}
		switch _abege := _aggcb.(type) {
		case _b.StartElement:
			switch _abege.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_dbbca.CalculatedColumnFormula = NewCT_TableFormula()
				if _cdbfe := d.DecodeElement(_dbbca.CalculatedColumnFormula, &_abege); _cdbfe != nil {
					return _cdbfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_dbbca.TotalsRowFormula = NewCT_TableFormula()
				if _dggdb := d.DecodeElement(_dbbca.TotalsRowFormula, &_abege); _dggdb != nil {
					return _dggdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}:
				_dbbca.XmlColumnPr = NewCT_XmlColumnPr()
				if _bbcfg := d.DecodeElement(_dbbca.XmlColumnPr, &_abege); _bbcfg != nil {
					return _bbcfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbbca.ExtLst = NewCT_ExtensionList()
				if _bfgfd := d.DecodeElement(_dbbca.ExtLst, &_abege); _bfgfd != nil {
					return _bfgfd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006fl\u0075m\u006e\u0020\u0025\u0076", _abege.Name)
				if _fbcdg := d.Skip(); _fbcdg != nil {
					return _fbcdg
				}
			}
		case _b.EndElement:
			break _dfeegd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Workbook and its children, prefixing error messages with path
func (_gafgd *Workbook) ValidateWithPath(path string) error {
	if _gdgfag := _gafgd.CT_Workbook.ValidateWithPath(path); _gdgfag != nil {
		return _gdgfag
	}
	return nil
}

// Validate validates the CT_RevisionCellChange and its children
func (_bdcc *CT_RevisionCellChange) Validate() error {
	return _bdcc.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065")
}

// ValidateWithPath validates the CT_PageBreak and its children, prefixing error messages with path
func (_bfabfb *CT_PageBreak) ValidateWithPath(path string) error {
	for _bcbfg, _gccfe := range _bfabfb.Brk {
		if _bgfaa := _gccfe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0042\u0072\u006b\u005b\u0025\u0064\u005d", path, _bcbfg)); _bgfaa != nil {
			return _bgfaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureDimensionMaps and its children, prefixing error messages with path
func (_bbega *CT_MeasureDimensionMaps) ValidateWithPath(path string) error {
	for _egebf, _facff := range _bbega.Map {
		if _faced := _facff.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _egebf)); _faced != nil {
			return _faced
		}
	}
	return nil
}
func (_abbdc *CT_Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abbdc.TableColumns = NewCT_TableColumns()
	for _, _gedcf := range start.Attr {
		if _gedcf.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_dbgda, _fedff := _e.ParseUint(_gedcf.Value, 10, 32)
			if _fedff != nil {
				return _fedff
			}
			_eaabf := uint32(_dbgda)
			_abbdc.DataDxfIdAttr = &_eaabf
			continue
		}
		if _gedcf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_cccba, _efcab := _e.ParseUint(_gedcf.Value, 10, 32)
			if _efcab != nil {
				return _efcab
			}
			_gcagb := uint32(_cccba)
			_abbdc.TotalsRowDxfIdAttr = &_gcagb
			continue
		}
		if _gedcf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcfed, _gddfg := _gedcf.Value, error(nil)
			if _gddfg != nil {
				return _gddfg
			}
			_abbdc.NameAttr = &_gcfed
			continue
		}
		if _gedcf.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_bdfffd, _eeeff := _e.ParseUint(_gedcf.Value, 10, 32)
			if _eeeff != nil {
				return _eeeff
			}
			_cdceg := uint32(_bdfffd)
			_abbdc.HeaderRowBorderDxfIdAttr = &_cdceg
			continue
		}
		if _gedcf.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_ddbgb, _cdbef := _gedcf.Value, error(nil)
			if _cdbef != nil {
				return _cdbef
			}
			_abbdc.CommentAttr = &_ddbgb
			continue
		}
		if _gedcf.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_fecac, _bgeab := _e.ParseUint(_gedcf.Value, 10, 32)
			if _bgeab != nil {
				return _bgeab
			}
			_aebgd := uint32(_fecac)
			_abbdc.TableBorderDxfIdAttr = &_aebgd
			continue
		}
		if _gedcf.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_abbdc.TableTypeAttr.UnmarshalXMLAttr(_gedcf)
			continue
		}
		if _gedcf.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_cbcbfa, _egffg := _e.ParseUint(_gedcf.Value, 10, 32)
			if _egffg != nil {
				return _egffg
			}
			_bfea := uint32(_cbcbfa)
			_abbdc.TotalsRowBorderDxfIdAttr = &_bfea
			continue
		}
		if _gedcf.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_ggcfc, _abdff := _e.ParseBool(_gedcf.Value)
			if _abdff != nil {
				return _abdff
			}
			_abbdc.InsertRowAttr = &_ggcfc
			continue
		}
		if _gedcf.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cgced, _adgef := _gedcf.Value, error(nil)
			if _adgef != nil {
				return _adgef
			}
			_abbdc.HeaderRowCellStyleAttr = &_cgced
			continue
		}
		if _gedcf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_ceddgbc, _dabbd := _e.ParseUint(_gedcf.Value, 10, 32)
			if _dabbd != nil {
				return _dabbd
			}
			_eceff := uint32(_ceddgbc)
			_abbdc.TotalsRowCountAttr = &_eceff
			continue
		}
		if _gedcf.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cgcbac, _eedcc := _gedcf.Value, error(nil)
			if _eedcc != nil {
				return _eedcc
			}
			_abbdc.TotalsRowCellStyleAttr = &_cgcbac
			continue
		}
		if _gedcf.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_bfaegf, _dbbecb := _gedcf.Value, error(nil)
			if _dbbecb != nil {
				return _dbbecb
			}
			_abbdc.DisplayNameAttr = _bfaegf
			continue
		}
		if _gedcf.Name.Local == "\u0069\u0064" {
			_edaaf, _egafe := _e.ParseUint(_gedcf.Value, 10, 32)
			if _egafe != nil {
				return _egafe
			}
			_abbdc.IdAttr = uint32(_edaaf)
			continue
		}
		if _gedcf.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_acfaa, _feffc := _gedcf.Value, error(nil)
			if _feffc != nil {
				return _feffc
			}
			_abbdc.DataCellStyleAttr = &_acfaa
			continue
		}
		if _gedcf.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dgffeb, _ddcbf := _e.ParseBool(_gedcf.Value)
			if _ddcbf != nil {
				return _ddcbf
			}
			_abbdc.PublishedAttr = &_dgffeb
			continue
		}
		if _gedcf.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_fdecga, _dcfac := _e.ParseUint(_gedcf.Value, 10, 32)
			if _dcfac != nil {
				return _dcfac
			}
			_fccfg := uint32(_fdecga)
			_abbdc.ConnectionIdAttr = &_fccfg
			continue
		}
		if _gedcf.Name.Local == "\u0072\u0065\u0066" {
			_ebbcgg, _gaaca := _gedcf.Value, error(nil)
			if _gaaca != nil {
				return _gaaca
			}
			_abbdc.RefAttr = _ebbcgg
			continue
		}
		if _gedcf.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_bdbfg, _egacc := _e.ParseBool(_gedcf.Value)
			if _egacc != nil {
				return _egacc
			}
			_abbdc.InsertRowShiftAttr = &_bdbfg
			continue
		}
		if _gedcf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_dbdbabe, _ebbbf := _e.ParseBool(_gedcf.Value)
			if _ebbbf != nil {
				return _ebbbf
			}
			_abbdc.TotalsRowShownAttr = &_dbdbabe
			continue
		}
		if _gedcf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_aggbf, _cabae := _e.ParseUint(_gedcf.Value, 10, 32)
			if _cabae != nil {
				return _cabae
			}
			_bfdfb := uint32(_aggbf)
			_abbdc.HeaderRowDxfIdAttr = &_bfdfb
			continue
		}
		if _gedcf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_beded, _eaaec := _e.ParseUint(_gedcf.Value, 10, 32)
			if _eaaec != nil {
				return _eaaec
			}
			_facedb := uint32(_beded)
			_abbdc.HeaderRowCountAttr = &_facedb
			continue
		}
	}
_gbgbge:
	for {
		_ffacd, _fbbed := d.Token()
		if _fbbed != nil {
			return _fbbed
		}
		switch _cbggc := _ffacd.(type) {
		case _b.StartElement:
			switch _cbggc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_abbdc.AutoFilter = NewCT_AutoFilter()
				if _afgbb := d.DecodeElement(_abbdc.AutoFilter, &_cbggc); _afgbb != nil {
					return _afgbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_abbdc.SortState = NewCT_SortState()
				if _fecgc := d.DecodeElement(_abbdc.SortState, &_cbggc); _fecgc != nil {
					return _fecgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _aagac := d.DecodeElement(_abbdc.TableColumns, &_cbggc); _aagac != nil {
					return _aagac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_abbdc.TableStyleInfo = NewCT_TableStyleInfo()
				if _efaac := d.DecodeElement(_abbdc.TableStyleInfo, &_cbggc); _efaac != nil {
					return _efaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abbdc.ExtLst = NewCT_ExtensionList()
				if _fcede := d.DecodeElement(_abbdc.ExtLst, &_cbggc); _fcede != nil {
					return _fcede
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _cbggc.Name)
				if _gaaac := d.Skip(); _gaaac != nil {
					return _gaaac
				}
			}
		case _b.EndElement:
			break _gbgbge
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Dxf() *CT_Dxf { _cfabc := &CT_Dxf{}; return _cfabc }
func NewCT_RevisionRowColumn() *CT_RevisionRowColumn {
	_cfdcbc := &CT_RevisionRowColumn{}
	_cfdcbc.ActionAttr = ST_rwColActionType(1)
	return _cfdcbc
}
func (_ebege *CT_MdxMetadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebege.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ebege.CountAttr)})
	}
	e.EncodeToken(start)
	_eefd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078"}}
	for _, _eeaaf := range _ebege.Mdx {
		e.EncodeElement(_eeaaf, _eefd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ChartsheetView and its children
func (_decf *CT_ChartsheetView) Validate() error {
	return _decf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077")
}
func (_faaeb *ST_ParameterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_faaeb = 0
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_faaeb = 1
	case "\u0076\u0061\u006cu\u0065":
		*_faaeb = 2
	case "\u0063\u0065\u006c\u006c":
		*_faaeb = 3
	}
	return nil
}

type CT_SmartTags struct {

	// Cell Smart Tags
	CellSmartTags []*CT_CellSmartTags
}
type CT_RevisionQueryTableField struct {

	// Sheet Id
	SheetIdAttr uint32

	// QueryTable Reference
	RefAttr string

	// Field Id
	FieldIdAttr uint32
}

func (_agcaac *Dialogsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agcaac.CT_Dialogsheet = *NewCT_Dialogsheet()
_fddbc:
	for {
		_ecdfc, _dafef := d.Token()
		if _dafef != nil {
			return _dafef
		}
		switch _gffffb := _ecdfc.(type) {
		case _b.StartElement:
			switch _gffffb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_agcaac.SheetPr = NewCT_SheetPr()
				if _bfabd := d.DecodeElement(_agcaac.SheetPr, &_gffffb); _bfabd != nil {
					return _bfabd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_agcaac.SheetViews = NewCT_SheetViews()
				if _baefbb := d.DecodeElement(_agcaac.SheetViews, &_gffffb); _baefbb != nil {
					return _baefbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_agcaac.SheetFormatPr = NewCT_SheetFormatPr()
				if _geefa := d.DecodeElement(_agcaac.SheetFormatPr, &_gffffb); _geefa != nil {
					return _geefa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_agcaac.SheetProtection = NewCT_SheetProtection()
				if _geedcc := d.DecodeElement(_agcaac.SheetProtection, &_gffffb); _geedcc != nil {
					return _geedcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_agcaac.CustomSheetViews = NewCT_CustomSheetViews()
				if _gaded := d.DecodeElement(_agcaac.CustomSheetViews, &_gffffb); _gaded != nil {
					return _gaded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_agcaac.PrintOptions = NewCT_PrintOptions()
				if _dcgee := d.DecodeElement(_agcaac.PrintOptions, &_gffffb); _dcgee != nil {
					return _dcgee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_agcaac.PageMargins = NewCT_PageMargins()
				if _cedgb := d.DecodeElement(_agcaac.PageMargins, &_gffffb); _cedgb != nil {
					return _cedgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_agcaac.PageSetup = NewCT_PageSetup()
				if _cfffc := d.DecodeElement(_agcaac.PageSetup, &_gffffb); _cfffc != nil {
					return _cfffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_agcaac.HeaderFooter = NewCT_HeaderFooter()
				if _ecbac := d.DecodeElement(_agcaac.HeaderFooter, &_gffffb); _ecbac != nil {
					return _ecbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_agcaac.Drawing = NewCT_Drawing()
				if _bgeege := d.DecodeElement(_agcaac.Drawing, &_gffffb); _bgeege != nil {
					return _bgeege
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_agcaac.LegacyDrawing = NewCT_LegacyDrawing()
				if _deeefd := d.DecodeElement(_agcaac.LegacyDrawing, &_gffffb); _deeefd != nil {
					return _deeefd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_agcaac.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bdgbgf := d.DecodeElement(_agcaac.LegacyDrawingHF, &_gffffb); _bdgbgf != nil {
					return _bdgbgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_agcaac.DrawingHF = NewCT_DrawingHF()
				if _ebcaec := d.DecodeElement(_agcaac.DrawingHF, &_gffffb); _ebcaec != nil {
					return _ebcaec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_agcaac.OleObjects = NewCT_OleObjects()
				if _gfdagd := d.DecodeElement(_agcaac.OleObjects, &_gffffb); _gfdagd != nil {
					return _gfdagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_agcaac.Controls = NewCT_Controls()
				if _addged := d.DecodeElement(_agcaac.Controls, &_gffffb); _addged != nil {
					return _addged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agcaac.ExtLst = NewCT_ExtensionList()
				if _bdabga := d.DecodeElement(_agcaac.ExtLst, &_gffffb); _bdabga != nil {
					return _bdabga
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0044\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _gffffb.Name)
				if _accde := d.Skip(); _accde != nil {
					return _accde
				}
			}
		case _b.EndElement:
			break _fddbc
		case _b.CharData:
		}
	}
	return nil
}
func (_aeac *CT_Cfvo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_effge, _afgeb := _aeac.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _afgeb != nil {
		return _afgeb
	}
	start.Attr = append(start.Attr, _effge)
	if _aeac.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_aeac.ValAttr)})
	}
	if _aeac.GteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_aeac.GteAttr))})
	}
	e.EncodeToken(start)
	if _aeac.ExtLst != nil {
		_acfgb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aeac.ExtLst, _acfgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gadced *CT_MetadataStrings) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbecg := range start.Attr {
		if _cbecg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acfff, _ggcfa := _e.ParseUint(_cbecg.Value, 10, 32)
			if _ggcfa != nil {
				return _ggcfa
			}
			_efabg := uint32(_acfff)
			_gadced.CountAttr = &_efabg
			continue
		}
	}
_efecf:
	for {
		_dgdce, _ccdf := d.Token()
		if _ccdf != nil {
			return _ccdf
		}
		switch _bfcgc := _dgdce.(type) {
		case _b.StartElement:
			switch _bfcgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_bfggg := NewCT_XStringElement()
				if _beef := d.DecodeElement(_bfggg, &_bfcgc); _beef != nil {
					return _beef
				}
				_gadced.S = append(_gadced.S, _bfggg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073\u0020\u0025\u0076", _bfcgc.Name)
				if _bbede := d.Skip(); _bbede != nil {
					return _bbede
				}
			}
		case _b.EndElement:
			break _efecf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MdxTuple and its children
func (_acfdc *CT_MdxTuple) Validate() error {
	return _acfdc.ValidateWithPath("C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065")
}
func (_dcfc *CT_FunctionGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcfc.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dcfc.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PageBreak struct {

	// Page Break Count
	CountAttr *uint32

	// Manual Break Count
	ManualBreakCountAttr *uint32

	// Break
	Brk []*CT_Break
}

func (_gedcdb ST_CredMethod) String() string {
	switch _gedcdb {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "\u0073\u0074\u006f\u0072\u0065\u0064"
	case 4:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return ""
}
func (_bacae ST_Pane) String() string {
	switch _bacae {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 2:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 4:
		return "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return ""
}
func (_bfcf *CT_DateGroupItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079\u0065\u0061\u0072"}, Value: _f.Sprintf("\u0025\u0076", _bfcf.YearAttr)})
	if _bfcf.MonthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u006et\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_bfcf.MonthAttr)})
	}
	if _bfcf.DayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_bfcf.DayAttr)})
	}
	if _bfcf.HourAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0075\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bfcf.HourAttr)})
	}
	if _bfcf.MinuteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0075\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bfcf.MinuteAttr)})
	}
	if _bfcf.SecondAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0063\u006f\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bfcf.SecondAttr)})
	}
	_dgeca, _ccad := _bfcf.DateTimeGroupingAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067"})
	if _ccad != nil {
		return _ccad
	}
	start.Attr = append(start.Attr, _dgeca)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebbee *CT_Groups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebbee.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ebbee.CountAttr)})
	}
	e.EncodeToken(start)
	_gagd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070"}}
	for _, _cbgdd := range _ebbee.Group {
		e.EncodeElement(_cbgdd, _gagd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eaaab ST_ConditionalFormattingOperator) String() string {
	switch _eaaab {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 2:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 7:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 8:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return ""
}

// Validate validates the CT_DdeItems and its children
func (_cgdacb *CT_DdeItems) Validate() error {
	return _cgdacb.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073")
}

// ValidateWithPath validates the CT_Top10 and its children, prefixing error messages with path
func (_dcfaa *CT_Top10) ValidateWithPath(path string) error { return nil }

const (
	ST_TextVAlignUnset       ST_TextVAlign = 0
	ST_TextVAlignTop         ST_TextVAlign = 1
	ST_TextVAlignCenter      ST_TextVAlign = 2
	ST_TextVAlignBottom      ST_TextVAlign = 3
	ST_TextVAlignJustify     ST_TextVAlign = 4
	ST_TextVAlignDistributed ST_TextVAlign = 5
)

// ValidateWithPath validates the PivotCacheRecords and its children, prefixing error messages with path
func (_fgddg *PivotCacheRecords) ValidateWithPath(path string) error {
	if _aebgc := _fgddg.CT_PivotCacheRecords.ValidateWithPath(path); _aebgc != nil {
		return _aebgc
	}
	return nil
}
func NewCT_ServerFormats() *CT_ServerFormats { _afgbf := &CT_ServerFormats{}; return _afgbf }

// Validate validates the CT_CacheHierarchies and its children
func (_debcb *CT_CacheHierarchies) Validate() error {
	return _debcb.ValidateWithPath("\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_GroupMembers and its children, prefixing error messages with path
func (_dfage *CT_GroupMembers) ValidateWithPath(path string) error {
	for _fgfc, _bcceeb := range _dfage.GroupMember {
		if _fgcebe := _bcceeb.ValidateWithPath(_f.Sprintf("\u0025s\u002fG\u0072\u006f\u0075\u0070\u004de\u006d\u0062e\u0072\u005b\u0025\u0064\u005d", path, _fgfc)); _fgcebe != nil {
			return _fgcebe
		}
	}
	return nil
}
func NewCT_FieldsUsage() *CT_FieldsUsage { _baaeb := &CT_FieldsUsage{}; return _baaeb }

// ValidateWithPath validates the CT_MetadataBlocks and its children, prefixing error messages with path
func (_ggcce *CT_MetadataBlocks) ValidateWithPath(path string) error {
	for _ffeecg, _daae := range _ggcce.Bk {
		if _eecge := _daae.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _ffeecg)); _eecge != nil {
			return _eecge
		}
	}
	return nil
}

// Validate validates the CT_PhoneticRun and its children
func (_ggfee *CT_PhoneticRun) Validate() error {
	return _ggfee.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e")
}

// ValidateWithPath validates the CT_Consolidation and its children, prefixing error messages with path
func (_cbab *CT_Consolidation) ValidateWithPath(path string) error {
	if _cbab.Pages != nil {
		if _dbeb := _cbab.Pages.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0073"); _dbeb != nil {
			return _dbeb
		}
	}
	if _bdce := _cbab.RangeSets.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"); _bdce != nil {
		return _bdce
	}
	return nil
}
func (_fegdbf ST_CellFormulaType) Validate() error { return _fegdbf.ValidateWithPath("") }

// Validate validates the Table and its children
func (_bcbbc *Table) Validate() error { return _bcbbc.ValidateWithPath("\u0054\u0061\u0062l\u0065") }

// Validate validates the CT_SheetBackgroundPicture and its children
func (_bdfdc *CT_SheetBackgroundPicture) Validate() error {
	return _bdfdc.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e")
}

// ValidateWithPath validates the CT_DynamicFilter and its children, prefixing error messages with path
func (_dgcgf *CT_DynamicFilter) ValidateWithPath(path string) error {
	if _dgcgf.TypeAttr == ST_DynamicFilterTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ebfa := _dgcgf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ebfa != nil {
		return _ebfa
	}
	return nil
}

// Validate validates the CT_ConditionalFormats and its children
func (_cdeg *CT_ConditionalFormats) Validate() error {
	return _cdeg.ValidateWithPath("C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073")
}
func NewSst() *Sst { _efcadg := &Sst{}; _efcadg.CT_Sst = *NewCT_Sst(); return _efcadg }
func (_edafd *CT_Tuples) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edafd.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_edafd.CAttr)})
	}
	e.EncodeToken(start)
	_dgbbea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0070\u006c"}}
	for _, _ggebe := range _edafd.Tpl {
		e.EncodeElement(_ggebe, _dgbbea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_BooleanProperty struct {

	// Value
	ValAttr *bool
}
type Table struct{ CT_Table }

func (_dafcb *ST_PrintError) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffccd, _bgaffb := d.Token()
	if _bgaffb != nil {
		return _bgaffb
	}
	if _befacf, _cbcaa := _ffccd.(_b.EndElement); _cbcaa && _befacf.Name == start.Name {
		*_dafcb = 1
		return nil
	}
	if _dgcab, _bcgfb := _ffccd.(_b.CharData); !_bcgfb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffccd)
	} else {
		switch string(_dgcab) {
		case "":
			*_dafcb = 0
		case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
			*_dafcb = 1
		case "\u0062\u006c\u0061n\u006b":
			*_dafcb = 2
		case "\u0064\u0061\u0073\u0068":
			*_dafcb = 3
		case "\u004e\u0041":
			*_dafcb = 4
		}
	}
	_ffccd, _bgaffb = d.Token()
	if _bgaffb != nil {
		return _bgaffb
	}
	if _baedf, _abcdg := _ffccd.(_b.EndElement); _abcdg && _baedf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffccd)
}

type CT_MRUColors struct {

	// Color
	Color []*CT_Color
}

func (_agbdee ST_MdxKPIProperty) String() string {
	switch _agbdee {
	case 0:
		return ""
	case 1:
		return "\u0076"
	case 2:
		return "\u0067"
	case 3:
		return "\u0073"
	case 4:
		return "\u0074"
	case 5:
		return "\u0077"
	case 6:
		return "\u006d"
	}
	return ""
}

type CT_CellSmartTagPr struct {

	// Key Name
	KeyAttr string

	// Value
	ValAttr string
}

func (_ggdace ST_CfvoType) ValidateWithPath(path string) error {
	switch _ggdace {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggdace))
	}
	return nil
}

// ValidateWithPath validates the CT_DataConsolidate and its children, prefixing error messages with path
func (_bdaa *CT_DataConsolidate) ValidateWithPath(path string) error {
	if _ccdd := _bdaa.FunctionAttr.ValidateWithPath(path + "\u002f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _ccdd != nil {
		return _ccdd
	}
	if _bdaa.DataRefs != nil {
		if _abca := _bdaa.DataRefs.ValidateWithPath(path + "\u002fD\u0061\u0074\u0061\u0052\u0065\u0066s"); _abca != nil {
			return _abca
		}
	}
	return nil
}
func NewCT_DefinedNames() *CT_DefinedNames { _gcaf := &CT_DefinedNames{}; return _gcaf }

// Validate validates the CT_Controls and its children
func (_gegfb *CT_Controls) Validate() error {
	return _gegfb.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073")
}

type CT_MdxKPI struct {

	// Member Unique Name Index
	NAttr uint32

	// KPI Index
	NpAttr uint32

	// KPI Property
	PAttr ST_MdxKPIProperty
}

// ValidateWithPath validates the CT_SheetFormatPr and its children, prefixing error messages with path
func (_bfdgb *CT_SheetFormatPr) ValidateWithPath(path string) error { return nil }

type CT_MemberProperties struct {

	// OLAP Member Properties Count
	CountAttr *uint32

	// OLAP Member Property
	Mp []*CT_MemberProperty
}

func NewCT_QueryTableDeletedFields() *CT_QueryTableDeletedFields {
	_fceca := &CT_QueryTableDeletedFields{}
	return _fceca
}
func (_cfagad ST_HtmlFmt) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gfaefe := _b.Attr{}
	_gfaefe.Name = name
	switch _cfagad {
	case ST_HtmlFmtUnset:
		_gfaefe.Value = ""
	case ST_HtmlFmtNone:
		_gfaefe.Value = "\u006e\u006f\u006e\u0065"
	case ST_HtmlFmtRtf:
		_gfaefe.Value = "\u0072\u0074\u0066"
	case ST_HtmlFmtAll:
		_gfaefe.Value = "\u0061\u006c\u006c"
	}
	return _gfaefe, nil
}
func (_gegea ST_DataConsolidateFunction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbcbbg := _b.Attr{}
	_cbcbbg.Name = name
	switch _gegea {
	case ST_DataConsolidateFunctionUnset:
		_cbcbbg.Value = ""
	case ST_DataConsolidateFunctionAverage:
		_cbcbbg.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_DataConsolidateFunctionCount:
		_cbcbbg.Value = "\u0063\u006f\u0075n\u0074"
	case ST_DataConsolidateFunctionCountNums:
		_cbcbbg.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_DataConsolidateFunctionMax:
		_cbcbbg.Value = "\u006d\u0061\u0078"
	case ST_DataConsolidateFunctionMin:
		_cbcbbg.Value = "\u006d\u0069\u006e"
	case ST_DataConsolidateFunctionProduct:
		_cbcbbg.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_DataConsolidateFunctionStdDev:
		_cbcbbg.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_DataConsolidateFunctionStdDevp:
		_cbcbbg.Value = "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case ST_DataConsolidateFunctionSum:
		_cbcbbg.Value = "\u0073\u0075\u006d"
	case ST_DataConsolidateFunctionVar:
		_cbcbbg.Value = "\u0076\u0061\u0072"
	case ST_DataConsolidateFunctionVarp:
		_cbcbbg.Value = "\u0076\u0061\u0072\u0070"
	}
	return _cbcbbg, nil
}
func NewCT_XmlCellPr() *CT_XmlCellPr {
	_gcdcag := &CT_XmlCellPr{}
	_gcdcag.XmlPr = NewCT_XmlPr()
	return _gcdcag
}
func (_gfffa *CT_DeletedField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fccdd := range start.Attr {
		if _fccdd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfbda, _dfda := _fccdd.Value, error(nil)
			if _dfda != nil {
				return _dfda
			}
			_gfffa.NameAttr = _dfbda
			continue
		}
	}
	for {
		_gdabe, _gecda := d.Token()
		if _gecda != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0044\u0065\u006c\u0065\u0074\u0065d\u0046\u0069\u0065l\u0064:\u0020\u0025\u0073", _gecda)
		}
		if _gddfd, _aeeag := _gdabe.(_b.EndElement); _aeeag && _gddfd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetIdMap struct {

	// Sheet Count
	CountAttr *uint32

	// Sheet Id
	SheetId []*CT_SheetId
}

func (_fedfgd *CT_MetadataBlocks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceegg := range start.Attr {
		if _ceegg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbecc, _dgbbeg := _e.ParseUint(_ceegg.Value, 10, 32)
			if _dgbbeg != nil {
				return _dgbbeg
			}
			_gfadac := uint32(_bbecc)
			_fedfgd.CountAttr = &_gfadac
			continue
		}
	}
_bcebe:
	for {
		_bdege, _acaaeb := d.Token()
		if _acaaeb != nil {
			return _acaaeb
		}
		switch _faaac := _bdege.(type) {
		case _b.StartElement:
			switch _faaac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_ebggg := NewCT_MetadataBlock()
				if _befaa := d.DecodeElement(_ebggg, &_faaac); _befaa != nil {
					return _befaa
				}
				_fedfgd.Bk = append(_fedfgd.Bk, _ebggg)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0073\u0020\u0025\u0076", _faaac.Name)
				if _egdbg := d.Skip(); _egdbg != nil {
					return _egdbg
				}
			}
		case _b.EndElement:
			break _bcebe
		case _b.CharData:
		}
	}
	return nil
}

type ST_TableType byte

func NewCT_TablePart() *CT_TablePart { _gdaaeg := &CT_TablePart{}; return _gdaaeg }
func (_fedfae ST_SortMethod) ValidateWithPath(path string) error {
	switch _fedfae {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fedfae))
	}
	return nil
}
func (_dfag *CT_DataField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eggeb := range start.Attr {
		if _eggeb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfce, _bedc := _eggeb.Value, error(nil)
			if _bedc != nil {
				return _bedc
			}
			_dfag.NameAttr = &_dfce
			continue
		}
		if _eggeb.Name.Local == "\u0066\u006c\u0064" {
			_gadb, _eabgc := _e.ParseUint(_eggeb.Value, 10, 32)
			if _eabgc != nil {
				return _eabgc
			}
			_dfag.FldAttr = uint32(_gadb)
			continue
		}
		if _eggeb.Name.Local == "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dfag.SubtotalAttr.UnmarshalXMLAttr(_eggeb)
			continue
		}
		if _eggeb.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073" {
			_dfag.ShowDataAsAttr.UnmarshalXMLAttr(_eggeb)
			continue
		}
		if _eggeb.Name.Local == "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd" {
			_aacfg, _caebc := _e.ParseInt(_eggeb.Value, 10, 32)
			if _caebc != nil {
				return _caebc
			}
			_gfcb := int32(_aacfg)
			_dfag.BaseFieldAttr = &_gfcb
			continue
		}
		if _eggeb.Name.Local == "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d" {
			_efef, _ggffc := _e.ParseUint(_eggeb.Value, 10, 32)
			if _ggffc != nil {
				return _ggffc
			}
			_eaeg := uint32(_efef)
			_dfag.BaseItemAttr = &_eaeg
			continue
		}
		if _eggeb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_eccce, _ccfc := _e.ParseUint(_eggeb.Value, 10, 32)
			if _ccfc != nil {
				return _ccfc
			}
			_cbbed := uint32(_eccce)
			_dfag.NumFmtIdAttr = &_cbbed
			continue
		}
	}
_bbcb:
	for {
		_ggbc, _bccge := d.Token()
		if _bccge != nil {
			return _bccge
		}
		switch _fedbg := _ggbc.(type) {
		case _b.StartElement:
			switch _fedbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfag.ExtLst = NewCT_ExtensionList()
				if _fefdc := d.DecodeElement(_dfag.ExtLst, &_fedbg); _fefdc != nil {
					return _fefdc
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _fedbg.Name)
				if _gbcg := d.Skip(); _gbcg != nil {
					return _gbcg
				}
			}
		case _b.EndElement:
			break _bbcb
		case _b.CharData:
		}
	}
	return nil
}
func (_abacg *CT_OleLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afcbb := range start.Attr {
		if _afcbb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afcbb.Name.Local == "\u0069\u0064" || _afcbb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afcbb.Name.Local == "\u0069\u0064" {
			_fcebb, _aebfe := _afcbb.Value, error(nil)
			if _aebfe != nil {
				return _aebfe
			}
			_abacg.IdAttr = _fcebb
			continue
		}
		if _afcbb.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_bdbd, _bacfae := _afcbb.Value, error(nil)
			if _bacfae != nil {
				return _bacfae
			}
			_abacg.ProgIdAttr = _bdbd
			continue
		}
	}
_bbaef:
	for {
		_gaaab, _bgecd := d.Token()
		if _bgecd != nil {
			return _bgecd
		}
		switch _gafde := _gaaab.(type) {
		case _b.StartElement:
			switch _gafde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_abacg.OleItems = NewCT_OleItems()
				if _ffab := d.DecodeElement(_abacg.OleItems, &_gafde); _ffab != nil {
					return _ffab
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fO\u006c\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _gafde.Name)
				if _defae := d.Skip(); _defae != nil {
					return _defae
				}
			}
		case _b.EndElement:
			break _bbaef
		case _b.CharData:
		}
	}
	return nil
}
func (_bfeee *ST_BorderStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cagceb, _aedag := d.Token()
	if _aedag != nil {
		return _aedag
	}
	if _bfefcg, _gdeefb := _cagceb.(_b.EndElement); _gdeefb && _bfefcg.Name == start.Name {
		*_bfeee = 1
		return nil
	}
	if _ecgfg, _fabegf := _cagceb.(_b.CharData); !_fabegf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cagceb)
	} else {
		switch string(_ecgfg) {
		case "":
			*_bfeee = 0
		case "\u006e\u006f\u006e\u0065":
			*_bfeee = 1
		case "\u0074\u0068\u0069\u006e":
			*_bfeee = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d":
			*_bfeee = 3
		case "\u0064\u0061\u0073\u0068\u0065\u0064":
			*_bfeee = 4
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_bfeee = 5
		case "\u0074\u0068\u0069c\u006b":
			*_bfeee = 6
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_bfeee = 7
		case "\u0068\u0061\u0069\u0072":
			*_bfeee = 8
		case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
			*_bfeee = 9
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_bfeee = 10
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bfeee = 11
		case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bfeee = 12
		case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bfeee = 13
		case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bfeee = 14
		}
	}
	_cagceb, _aedag = d.Token()
	if _aedag != nil {
		return _aedag
	}
	if _dgedba, _ccbged := _cagceb.(_b.EndElement); _ccbged && _dgedba.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cagceb)
}
func (_bgfdec *CT_InputCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bccbc := range start.Attr {
		if _bccbc.Name.Local == "\u0072" {
			_aaddc, _gcgea := _bccbc.Value, error(nil)
			if _gcgea != nil {
				return _gcgea
			}
			_bgfdec.RAttr = _aaddc
			continue
		}
		if _bccbc.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_cacfdg, _gecdf := _e.ParseBool(_bccbc.Value)
			if _gecdf != nil {
				return _gecdf
			}
			_bgfdec.DeletedAttr = &_cacfdg
			continue
		}
		if _bccbc.Name.Local == "\u0075\u006e\u0064\u006f\u006e\u0065" {
			_abcda, _fgdcg := _e.ParseBool(_bccbc.Value)
			if _fgdcg != nil {
				return _fgdcg
			}
			_bgfdec.UndoneAttr = &_abcda
			continue
		}
		if _bccbc.Name.Local == "\u0076\u0061\u006c" {
			_gbaed, _ddcaf := _bccbc.Value, error(nil)
			if _ddcaf != nil {
				return _ddcaf
			}
			_bgfdec.ValAttr = _gbaed
			continue
		}
		if _bccbc.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_gcbee, _cbcba := _e.ParseUint(_bccbc.Value, 10, 32)
			if _cbcba != nil {
				return _cbcba
			}
			_ggaab := uint32(_gcbee)
			_bgfdec.NumFmtIdAttr = &_ggaab
			continue
		}
	}
	for {
		_ggdf, _cdcdb := d.Token()
		if _cdcdb != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0070u\u0074C\u0065\u006c\u006c\u0073\u003a\u0020\u0025s", _cdcdb)
		}
		if _fdcd, _cdbbd := _ggdf.(_b.EndElement); _cdbbd && _fdcd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dgaeca *CT_Query) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aebaea := range start.Attr {
		if _aebaea.Name.Local == "\u006d\u0064\u0078" {
			_dbdfb, _ffacfe := _aebaea.Value, error(nil)
			if _ffacfe != nil {
				return _ffacfe
			}
			_dgaeca.MdxAttr = _dbdfb
			continue
		}
	}
_daagd:
	for {
		_feeba, _ecbdgd := d.Token()
		if _ecbdgd != nil {
			return _ecbdgd
		}
		switch _cfccf := _feeba.(type) {
		case _b.StartElement:
			switch _cfccf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_dgaeca.Tpls = NewCT_Tuples()
				if _ddbffe := d.DecodeElement(_dgaeca.Tpls, &_cfccf); _ddbffe != nil {
					return _ddbffe
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0020\u0025\u0076", _cfccf.Name)
				if _gdged := d.Skip(); _gdged != nil {
					return _gdged
				}
			}
		case _b.EndElement:
			break _daagd
		case _b.CharData:
		}
	}
	return nil
}

type ST_DataValidationImeMode byte

// Validate validates the CT_Map and its children
func (_beffcd *CT_Map) Validate() error {
	return _beffcd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070")
}

// Validate validates the CT_Revisions and its children
func (_cbcgg *CT_Revisions) Validate() error {
	return _cbcgg.ValidateWithPath("\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073")
}
func (_bdcba ST_SheetViewType) ValidateWithPath(path string) error {
	switch _bdcba {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdcba))
	}
	return nil
}
func (_dggc *CT_IntProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _dggc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FileSharing and its children
func (_ggga *CT_FileSharing) Validate() error {
	return _ggga.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067")
}
func (_bgfef *CT_I) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbad := range start.Attr {
		if _dbad.Name.Local == "\u0074" {
			_bgfef.TAttr.UnmarshalXMLAttr(_dbad)
			continue
		}
		if _dbad.Name.Local == "\u0072" {
			_fage, _gcdd := _e.ParseUint(_dbad.Value, 10, 32)
			if _gcdd != nil {
				return _gcdd
			}
			_cegab := uint32(_fage)
			_bgfef.RAttr = &_cegab
			continue
		}
		if _dbad.Name.Local == "\u0069" {
			_bacfg, _cfgaf := _e.ParseUint(_dbad.Value, 10, 32)
			if _cfgaf != nil {
				return _cfgaf
			}
			_dfgb := uint32(_bacfg)
			_bgfef.IAttr = &_dfgb
			continue
		}
	}
_ccbeg:
	for {
		_gfggf, _dcgd := d.Token()
		if _dcgd != nil {
			return _dcgd
		}
		switch _gaeba := _gfggf.(type) {
		case _b.StartElement:
			switch _gaeba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_facgb := NewCT_X()
				if _acfbb := d.DecodeElement(_facgb, &_gaeba); _acfbb != nil {
					return _acfbb
				}
				_bgfef.X = append(_bgfef.X, _facgb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0049\u0020\u0025\u0076", _gaeba.Name)
				if _fgaag := d.Skip(); _fgaag != nil {
					return _fgaag
				}
			}
		case _b.EndElement:
			break _ccbeg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CustomFilters and its children
func (_dbea *CT_CustomFilters) Validate() error {
	return _dbea.ValidateWithPath("\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func NewCT_WorksheetSource() *CT_WorksheetSource { _cfbcf := &CT_WorksheetSource{}; return _cfbcf }

// ValidateWithPath validates the CT_RevisionCustomView and its children, prefixing error messages with path
func (_acbea *CT_RevisionCustomView) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_acbea.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _acbea.GuidAttr)
	}
	if _acbea.ActionAttr == ST_RevisionActionUnset {
		return _f.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fdddb := _acbea.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fdddb != nil {
		return _fdddb
	}
	return nil
}

// ValidateWithPath validates the CT_DdeValue and its children, prefixing error messages with path
func (_efbgf *CT_DdeValue) ValidateWithPath(path string) error {
	if _feff := _efbgf.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _feff != nil {
		return _feff
	}
	return nil
}
func (_bcbc *CT_ExternalCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcbc.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bcbc.RAttr)})
	}
	if _bcbc.TAttr != ST_CellTypeUnset {
		_cgdge, _cbeac := _bcbc.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _cbeac != nil {
			return _cbeac
		}
		start.Attr = append(start.Attr, _cgdge)
	}
	if _bcbc.VmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_bcbc.VmAttr)})
	}
	e.EncodeToken(start)
	if _bcbc.V != nil {
		_baag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_d.AddPreserveSpaceAttr(&_baag, *_bcbc.V)
		e.EncodeElement(_bcbc.V, _baag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataBlock struct {

	// Metadata Record
	Rc []*CT_MetadataRecord
}

func (_ggcae *CT_RevisionFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _ggcae.SheetIdAttr)})
	if _ggcae.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ggcae.XfDxfAttr))})
	}
	if _ggcae.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ggcae.SAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", _ggcae.SqrefAttr)})
	if _ggcae.StartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ggcae.StartAttr)})
	}
	if _ggcae.LengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u006e\u0067\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_ggcae.LengthAttr)})
	}
	e.EncodeToken(start)
	if _ggcae.Dxf != nil {
		_gacbed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		e.EncodeElement(_ggcae.Dxf, _gacbed)
	}
	if _ggcae.ExtLst != nil {
		_fdbeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ggcae.ExtLst, _fdbeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_UndoInfo and its children
func (_dfbcc *CT_UndoInfo) Validate() error {
	return _dfbcc.ValidateWithPath("C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f")
}
func (_bgbfd *CT_TablePart) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feebg := range start.Attr {
		if _feebg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _feebg.Name.Local == "\u0069\u0064" || _feebg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _feebg.Name.Local == "\u0069\u0064" {
			_geeef, _dfdfb := _feebg.Value, error(nil)
			if _dfdfb != nil {
				return _dfdfb
			}
			_bgbfd.IdAttr = _geeef
			continue
		}
	}
	for {
		_bcfaea, _cffdd := d.Token()
		if _cffdd != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061b\u006c\u0065\u0050\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _cffdd)
		}
		if _dfbbee, _fffbg := _bcfaea.(_b.EndElement); _fffbg && _dfbbee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eecbdb *ST_SheetViewType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eecbdb = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_eecbdb = 1
	case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
		*_eecbdb = 2
	case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
		*_eecbdb = 3
	}
	return nil
}

// Validate validates the CT_ExternalRow and its children
func (_bddca *CT_ExternalRow) Validate() error {
	return _bddca.ValidateWithPath("\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077")
}

type CT_DdeValues struct {

	// Rows
	RowsAttr *uint32

	// Columns
	ColsAttr *uint32

	// Value
	Value []*CT_DdeValue
}

func (_ecbgf *CT_PivotFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecbgf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ecbgf.CountAttr)})
	}
	e.EncodeToken(start)
	_feafg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _fafdda := range _ecbgf.PivotField {
		e.EncodeElement(_fafdda, _feafg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExternalRow() *CT_ExternalRow { _egab := &CT_ExternalRow{}; return _egab }

// ValidateWithPath validates the CT_CalcCell and its children, prefixing error messages with path
func (_cgfb *CT_CalcCell) ValidateWithPath(path string) error { return nil }

type CT_DataBar struct {

	// Minimum Length
	MinLengthAttr *uint32

	// Maximum Length
	MaxLengthAttr *uint32

	// Show Values
	ShowValueAttr *bool

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Data Bar Color
	Color *CT_Color
}

func (_gdece *CT_ConditionalFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdece.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gdece.CountAttr)})
	}
	e.EncodeToken(start)
	_faab := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074"}}
	for _, _aacce := range _gdece.ConditionalFormat {
		e.EncodeElement(_aacce, _faab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aafaf *CT_Tables) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acgfb := range start.Attr {
		if _acgfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gaddcd, _aebfcf := _e.ParseUint(_acgfb.Value, 10, 32)
			if _aebfcf != nil {
				return _aebfcf
			}
			_ddccbd := uint32(_gaddcd)
			_aafaf.CountAttr = &_ddccbd
			continue
		}
	}
_baegbg:
	for {
		_defff, _aeeeb := d.Token()
		if _aeeeb != nil {
			return _aeeeb
		}
		switch _cgadd := _defff.(type) {
		case _b.StartElement:
			switch _cgadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_gdeef := NewCT_TableMissing()
				if _fefbaec := d.DecodeElement(_gdeef, &_cgadd); _fefbaec != nil {
					return _fefbaec
				}
				_aafaf.M = append(_aafaf.M, _gdeef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_aeagb := NewCT_XStringElement()
				if _effee := d.DecodeElement(_aeagb, &_cgadd); _effee != nil {
					return _effee
				}
				_aafaf.S = append(_aafaf.S, _aeagb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cggcb := NewCT_Index()
				if _ggbcc := d.DecodeElement(_cggcb, &_cgadd); _ggbcc != nil {
					return _ggbcc
				}
				_aafaf.X = append(_aafaf.X, _cggcb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073 \u0025\u0076", _cgadd.Name)
				if _abfeb := d.Skip(); _abfeb != nil {
					return _abfeb
				}
			}
		case _b.EndElement:
			break _baegbg
		case _b.CharData:
		}
	}
	return nil
}
func (_faaaa *CT_ExternalLinkChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _faaaa.ExternalBook != nil {
		_dbgdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}}
		e.EncodeElement(_faaaa.ExternalBook, _dbgdf)
	}
	if _faaaa.DdeLink != nil {
		_fbede := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_faaaa.DdeLink, _fbede)
	}
	if _faaaa.OleLink != nil {
		_cdbgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_faaaa.OleLink, _cdbgf)
	}
	return nil
}
func NewCT_Map() *CT_Map { _dbgdb := &CT_Map{}; return _dbgdb }
func NewCT_pivotTableDefinition() *CT_pivotTableDefinition {
	_bgggf := &CT_pivotTableDefinition{}
	_bgggf.Location = NewCT_Location()
	return _bgggf
}

type CT_TextPr struct {

	// Prompt for File Name
	PromptAttr *bool

	// File Type
	FileTypeAttr ST_FileType

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string

	// First Row
	FirstRowAttr *uint32

	// Source File Name
	SourceFileAttr *string

	// Delimited File
	DelimitedAttr *bool

	// Decimal Separator
	DecimalAttr *string

	// Thousands Separator
	ThousandsAttr *string

	// Tab as Delimiter
	TabAttr *bool

	// Space is Delimiter
	SpaceAttr *bool

	// Comma is Delimiter
	CommaAttr *bool

	// Semicolon is Delimiter
	SemicolonAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Qualifier
	QualifierAttr ST_Qualifier

	// Custom Delimiter
	DelimiterAttr *string

	// Fields
	TextFields *CT_TextFields
}

func (_gdgadc ST_FormulaExpression) String() string {
	switch _gdgadc {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0066"
	case 2:
		return "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case 3:
		return "\u0061\u0072\u0065\u0061"
	case 4:
		return "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case 5:
		return "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return ""
}
func (_cefba *CT_DdeItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cefba.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cefba.NameAttr)})
	}
	if _cefba.OleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cefba.OleAttr))})
	}
	if _cefba.AdviseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cefba.AdviseAttr))})
	}
	if _cefba.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cefba.PreferPicAttr))})
	}
	e.EncodeToken(start)
	if _cefba.Values != nil {
		_aaaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0076\u0061\u006c\u0075\u0065s"}}
		e.EncodeElement(_cefba.Values, _aaaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gebgb *CT_MeasureDimensionMaps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbaee := range start.Attr {
		if _fbaee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aaceb, _gafgg := _e.ParseUint(_fbaee.Value, 10, 32)
			if _gafgg != nil {
				return _gafgg
			}
			_cgfbfc := uint32(_aaceb)
			_gebgb.CountAttr = &_cgfbfc
			continue
		}
	}
_adfc:
	for {
		_fddfa, _ccdab := d.Token()
		if _ccdab != nil {
			return _ccdab
		}
		switch _fcbcdc := _fddfa.(type) {
		case _b.StartElement:
			switch _fcbcdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}:
				_gffde := NewCT_MeasureDimensionMap()
				if _aedba := d.DecodeElement(_gffde, &_fcbcdc); _aedba != nil {
					return _aedba
				}
				_gebgb.Map = append(_gebgb.Map, _gffde)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0044\u0069m\u0065\u006e\u0073\u0069\u006f\u006eM\u0061\u0070\u0073 \u0025\u0076", _fcbcdc.Name)
				if _becfe := d.Skip(); _becfe != nil {
					return _becfe
				}
			}
		case _b.EndElement:
			break _adfc
		case _b.CharData:
		}
	}
	return nil
}
func (_cgfacg ST_FormatAction) ValidateWithPath(path string) error {
	switch _cgfacg {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgfacg))
	}
	return nil
}

// ValidateWithPath validates the CT_DdeItems and its children, prefixing error messages with path
func (_cbea *CT_DdeItems) ValidateWithPath(path string) error {
	for _ccea, _fgccf := range _cbea.DdeItem {
		if _bggge := _fgccf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044\u0064\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _ccea)); _bggge != nil {
			return _bggge
		}
	}
	return nil
}
func (_aabag *CT_FileRecoveryPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dffd := range start.Attr {
		if _dffd.Name.Local == "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072" {
			_gbgd, _fgeag := _e.ParseBool(_dffd.Value)
			if _fgeag != nil {
				return _fgeag
			}
			_aabag.AutoRecoverAttr = &_gbgd
			continue
		}
		if _dffd.Name.Local == "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e" {
			_aedae, _bffag := _e.ParseBool(_dffd.Value)
			if _bffag != nil {
				return _bffag
			}
			_aabag.CrashSaveAttr = &_aedae
			continue
		}
		if _dffd.Name.Local == "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064" {
			_bfaeg, _affee := _e.ParseBool(_dffd.Value)
			if _affee != nil {
				return _affee
			}
			_aabag.DataExtractLoadAttr = &_bfaeg
			continue
		}
		if _dffd.Name.Local == "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064" {
			_cbfg, _ebbec := _e.ParseBool(_dffd.Value)
			if _ebbec != nil {
				return _ebbec
			}
			_aabag.RepairLoadAttr = &_cbfg
			continue
		}
	}
	for {
		_agcfg, _cbaabg := d.Token()
		if _cbaabg != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0050\u0072: \u0025\u0073", _cbaabg)
		}
		if _eabbb, _eadg := _agcfg.(_b.EndElement); _eadg && _eabbb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ExternalLink() *CT_ExternalLink { _bcdcc := &CT_ExternalLink{}; return _bcdcc }

// ValidateWithPath validates the CT_QueryTableRefresh and its children, prefixing error messages with path
func (_ebbag *CT_QueryTableRefresh) ValidateWithPath(path string) error {
	if _bcdef := _ebbag.QueryTableFields.ValidateWithPath(path + "\u002f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064\u0073"); _bcdef != nil {
		return _bcdef
	}
	if _ebbag.QueryTableDeletedFields != nil {
		if _gdabee := _ebbag.QueryTableDeletedFields.ValidateWithPath(path + "\u002fQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"); _gdabee != nil {
			return _gdabee
		}
	}
	if _ebbag.SortState != nil {
		if _bgdafg := _ebbag.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _bgdafg != nil {
			return _bgdafg
		}
	}
	if _ebbag.ExtLst != nil {
		if _bacfgd := _ebbag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bacfgd != nil {
			return _bacfgd
		}
	}
	return nil
}
func NewCT_PageSetup() *CT_PageSetup     { _cfcfe := &CT_PageSetup{}; return _cfcfe }
func NewCT_FileVersion() *CT_FileVersion { _ggdd := &CT_FileVersion{}; return _ggdd }
func (_baede *QueryTable) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_baede.CT_QueryTable = *NewCT_QueryTable()
	for _, _fgebcg := range start.Attr {
		if _fgebcg.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_ddddff, _aecbc := _e.ParseBool(_fgebcg.Value)
			if _aecbc != nil {
				return _aecbc
			}
			_baede.AdjustColumnWidthAttr = &_ddddff
			continue
		}
		if _fgebcg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfggb, _fefeg := _fgebcg.Value, error(nil)
			if _fefeg != nil {
				return _fefeg
			}
			_baede.NameAttr = _cfggb
			continue
		}
		if _fgebcg.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_gagbe, _caaab := _e.ParseBool(_fgebcg.Value)
			if _caaab != nil {
				return _caaab
			}
			_baede.IntermediateAttr = &_gagbe
			continue
		}
		if _fgebcg.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_cgfee, _gbgfdb := _e.ParseBool(_fgebcg.Value)
			if _gbgfdb != nil {
				return _gbgfdb
			}
			_baede.RowNumbersAttr = &_cgfee
			continue
		}
		if _fgebcg.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_ddegf, _bdecf := _e.ParseUint(_fgebcg.Value, 10, 32)
			if _bdecf != nil {
				return _bdecf
			}
			_baede.ConnectionIdAttr = uint32(_ddegf)
			continue
		}
		if _fgebcg.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_efeeda, _dgecb := _e.ParseBool(_fgebcg.Value)
			if _dgecb != nil {
				return _dgecb
			}
			_baede.BackgroundRefreshAttr = &_efeeda
			continue
		}
		if _fgebcg.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_gfgdc, _cgaffc := _e.ParseBool(_fgebcg.Value)
			if _cgaffc != nil {
				return _cgaffc
			}
			_baede.RefreshOnLoadAttr = &_gfgdc
			continue
		}
		if _fgebcg.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_cbccf, _dgcbc := _e.ParseBool(_fgebcg.Value)
			if _dgcbc != nil {
				return _dgcbc
			}
			_baede.FillFormulasAttr = &_cbccf
			continue
		}
		if _fgebcg.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ggdede, _afdce := _e.ParseBool(_fgebcg.Value)
			if _afdce != nil {
				return _afdce
			}
			_baede.ApplyNumberFormatsAttr = &_ggdede
			continue
		}
		if _fgebcg.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bcecbc, _ebafe := _e.ParseBool(_fgebcg.Value)
			if _ebafe != nil {
				return _ebafe
			}
			_baede.ApplyFontFormatsAttr = &_bcecbc
			continue
		}
		if _fgebcg.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_dfffg, _feace := _e.ParseBool(_fgebcg.Value)
			if _feace != nil {
				return _feace
			}
			_baede.FirstBackgroundRefreshAttr = &_dfffg
			continue
		}
		if _fgebcg.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_beeaag, _efdff := _e.ParseUint(_fgebcg.Value, 10, 32)
			if _efdff != nil {
				return _efdff
			}
			_aebcg := uint32(_beeaag)
			_baede.AutoFormatIdAttr = &_aebcg
			continue
		}
		if _fgebcg.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gfccc, _fddfeb := _e.ParseBool(_fgebcg.Value)
			if _fddfeb != nil {
				return _fddfeb
			}
			_baede.ApplyAlignmentFormatsAttr = &_gfccc
			continue
		}
		if _fgebcg.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_fbfaaa, _ggecdd := _e.ParseBool(_fgebcg.Value)
			if _ggecdd != nil {
				return _ggecdd
			}
			_baede.DisableRefreshAttr = &_fbfaaa
			continue
		}
		if _fgebcg.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dcdabf, _edccf := _e.ParseBool(_fgebcg.Value)
			if _edccf != nil {
				return _edccf
			}
			_baede.ApplyBorderFormatsAttr = &_dcdabf
			continue
		}
		if _fgebcg.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_ddbgab, _fecbec := _e.ParseBool(_fgebcg.Value)
			if _fecbec != nil {
				return _fecbec
			}
			_baede.PreserveFormattingAttr = &_ddbgab
			continue
		}
		if _fgebcg.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gggee, _gcdfea := _e.ParseBool(_fgebcg.Value)
			if _gcdfea != nil {
				return _gcdfea
			}
			_baede.ApplyPatternFormatsAttr = &_gggee
			continue
		}
		if _fgebcg.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_baede.GrowShrinkTypeAttr.UnmarshalXMLAttr(_fgebcg)
			continue
		}
		if _fgebcg.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_egfbf, _cfaggf := _e.ParseBool(_fgebcg.Value)
			if _cfaggf != nil {
				return _cfaggf
			}
			_baede.DisableEditAttr = &_egfbf
			continue
		}
		if _fgebcg.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_edbdd, _dafdfg := _e.ParseBool(_fgebcg.Value)
			if _dafdfg != nil {
				return _dafdfg
			}
			_baede.HeadersAttr = &_edbdd
			continue
		}
		if _fgebcg.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_ecfc, _bdefcc := _e.ParseBool(_fgebcg.Value)
			if _bdefcc != nil {
				return _bdefcc
			}
			_baede.RemoveDataOnSaveAttr = &_ecfc
			continue
		}
		if _fgebcg.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ebdcb, _fdadc := _e.ParseBool(_fgebcg.Value)
			if _fdadc != nil {
				return _fdadc
			}
			_baede.ApplyWidthHeightFormatsAttr = &_ebdcb
			continue
		}
	}
_fgbae:
	for {
		_decef, _gdcgb := d.Token()
		if _gdcgb != nil {
			return _gdcgb
		}
		switch _fcbfd := _decef.(type) {
		case _b.StartElement:
			switch _fcbfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_baede.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _deacdc := d.DecodeElement(_baede.QueryTableRefresh, &_fcbfd); _deacdc != nil {
					return _deacdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_baede.ExtLst = NewCT_ExtensionList()
				if _bafccf := d.DecodeElement(_baede.ExtLst, &_fcbfd); _bafccf != nil {
					return _bafccf
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0051\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _fcbfd.Name)
				if _gccbe := d.Skip(); _gccbe != nil {
					return _gccbe
				}
			}
		case _b.EndElement:
			break _fgbae
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CacheField and its children
func (_acef *CT_CacheField) Validate() error {
	return _acef.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064")
}

type CT_WebPublishObjects struct {

	// Count
	CountAttr *uint32

	// Web Publishing Object
	WebPublishObject []*CT_WebPublishObject
}

// Validate validates the Sst and its children
func (_cagaaf *Sst) Validate() error { return _cagaaf.ValidateWithPath("\u0053\u0073\u0074") }
func (_dgede *CT_Format) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgede.PivotArea = NewCT_PivotArea()
	for _, _bfaaa := range start.Attr {
		if _bfaaa.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_dgede.ActionAttr.UnmarshalXMLAttr(_bfaaa)
			continue
		}
		if _bfaaa.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_bcbf, _aeabb := _e.ParseUint(_bfaaa.Value, 10, 32)
			if _aeabb != nil {
				return _aeabb
			}
			_agdec := uint32(_bcbf)
			_dgede.DxfIdAttr = &_agdec
			continue
		}
	}
_gcdbg:
	for {
		_bfaege, _fggab := d.Token()
		if _fggab != nil {
			return _fggab
		}
		switch _gaggc := _bfaege.(type) {
		case _b.StartElement:
			switch _gaggc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _afggg := d.DecodeElement(_dgede.PivotArea, &_gaggc); _afggg != nil {
					return _afggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgede.ExtLst = NewCT_ExtensionList()
				if _ffcgc := d.DecodeElement(_dgede.ExtLst, &_gaggc); _ffcgc != nil {
					return _ffcgc
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u006f\u0072m\u0061\u0074 \u0025\u0076", _gaggc.Name)
				if _bedcf := d.Skip(); _bedcf != nil {
					return _bedcf
				}
			}
		case _b.EndElement:
			break _gcdbg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalSheetData and its children
func (_gagf *CT_ExternalSheetData) Validate() error {
	return _gagf.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061")
}
func (_deeda ST_SmartTagShow) Validate() error { return _deeda.ValidateWithPath("") }

// ValidateWithPath validates the CT_SmartTagPr and its children, prefixing error messages with path
func (_ffgda *CT_SmartTagPr) ValidateWithPath(path string) error {
	if _gdbebe := _ffgda.ShowAttr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0041\u0074\u0074r"); _gdbebe != nil {
		return _gdbebe
	}
	return nil
}
func (_adgg *CT_Break) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddc := range start.Attr {
		if _ddc.Name.Local == "\u0069\u0064" {
			_agf, _dbbg := _e.ParseUint(_ddc.Value, 10, 32)
			if _dbbg != nil {
				return _dbbg
			}
			_fde := uint32(_agf)
			_adgg.IdAttr = &_fde
			continue
		}
		if _ddc.Name.Local == "\u006d\u0069\u006e" {
			_caa, _ebg := _e.ParseUint(_ddc.Value, 10, 32)
			if _ebg != nil {
				return _ebg
			}
			_ddg := uint32(_caa)
			_adgg.MinAttr = &_ddg
			continue
		}
		if _ddc.Name.Local == "\u006d\u0061\u0078" {
			_daga, _cbbd := _e.ParseUint(_ddc.Value, 10, 32)
			if _cbbd != nil {
				return _cbbd
			}
			_afce := uint32(_daga)
			_adgg.MaxAttr = &_afce
			continue
		}
		if _ddc.Name.Local == "\u006d\u0061\u006e" {
			_cac, _dca := _e.ParseBool(_ddc.Value)
			if _dca != nil {
				return _dca
			}
			_adgg.ManAttr = &_cac
			continue
		}
		if _ddc.Name.Local == "\u0070\u0074" {
			_baeb, _cea := _e.ParseBool(_ddc.Value)
			if _cea != nil {
				return _cea
			}
			_adgg.PtAttr = &_baeb
			continue
		}
	}
	for {
		_dab, _eaaa := d.Token()
		if _eaaa != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b: \u0025\u0073", _eaaa)
		}
		if _bfcc, _ggda := _dab.(_b.EndElement); _ggda && _bfcc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the Revisions and its children, prefixing error messages with path
func (_gcagf *Revisions) ValidateWithPath(path string) error {
	if _baddc := _gcagf.CT_Revisions.ValidateWithPath(path); _baddc != nil {
		return _baddc
	}
	return nil
}
func (_ggccd *CT_GroupMember) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _ggccd.UniqueNameAttr)})
	if _ggccd.GroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006fu\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ggccd.GroupAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_UnderlineProperty and its children
func (_aegdeb *CT_UnderlineProperty) Validate() error {
	return _aegdeb.ValidateWithPath("C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079")
}
func NewCT_Record() *CT_Record              { _fdegc := &CT_Record{}; return _fdegc }
func NewCT_Connection() *CT_Connection      { _fceff := &CT_Connection{}; return _fceff }
func (_addaf ST_PageOrder) Validate() error { return _addaf.ValidateWithPath("") }
func (_edff *CT_ConditionalFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdad := range start.Attr {
		if _cdad.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_bgac, _cfdd := _e.ParseBool(_cdad.Value)
			if _cfdd != nil {
				return _cfdd
			}
			_edff.PivotAttr = &_bgac
			continue
		}
		if _cdad.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_aebf, _ecbgd := ParseSliceST_Sqref(_cdad.Value)
			if _ecbgd != nil {
				return _ecbgd
			}
			_edff.SqrefAttr = &_aebf
			continue
		}
	}
_afgc:
	for {
		_fadga, _bagbe := d.Token()
		if _bagbe != nil {
			return _bagbe
		}
		switch _ecbda := _fadga.(type) {
		case _b.StartElement:
			switch _ecbda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}:
				_daccc := NewCT_CfRule()
				if _cdef := d.DecodeElement(_daccc, &_ecbda); _cdef != nil {
					return _cdef
				}
				_edff.CfRule = append(_edff.CfRule, _daccc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edff.ExtLst = NewCT_ExtensionList()
				if _ccecg := d.DecodeElement(_edff.ExtLst, &_ecbda); _ccecg != nil {
					return _ccecg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067\u0020%\u0076", _ecbda.Name)
				if _gadc := d.Skip(); _gadc != nil {
					return _gadc
				}
			}
		case _b.EndElement:
			break _afgc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MdxMetadata and its children
func (_edeec *CT_MdxMetadata) Validate() error {
	return _edeec.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}
func (_dafae *CT_TableStyleElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_cabcf, _cacfaf := _dafae.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cacfaf != nil {
		return _cacfaf
	}
	start.Attr = append(start.Attr, _cabcf)
	if _dafae.SizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u007a\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dafae.SizeAttr)})
	}
	if _dafae.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dafae.DxfIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_caba *CT_Field) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbged := range start.Attr {
		if _cbged.Name.Local == "\u0078" {
			_gdeff, _gbabd := _e.ParseInt(_cbged.Value, 10, 32)
			if _gbabd != nil {
				return _gbabd
			}
			_caba.XAttr = int32(_gdeff)
			continue
		}
	}
	for {
		_fggff, _eecda := d.Token()
		if _eecda != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u0065\u006c\u0064: \u0025\u0073", _eecda)
		}
		if _dggbe, _ceegf := _fggff.(_b.EndElement); _ceegf && _dggbe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_faddg *CT_FunctionGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdcef := range start.Attr {
		if _fdcef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fffd, _dcbaa := _fdcef.Value, error(nil)
			if _dcbaa != nil {
				return _dcbaa
			}
			_faddg.NameAttr = &_fffd
			continue
		}
	}
	for {
		_gbdfe, _fegfgb := d.Token()
		if _fegfgb != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063t\u0069o\u006e\u0047\u0072\u006f\u0075\u0070\u003a \u0025\u0073", _fegfgb)
		}
		if _agbfb, _ccbea := _gbdfe.(_b.EndElement); _ccbea && _agbfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcaabc *ST_SmartTagShow) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcaabc = 0
	case "\u0061\u006c\u006c":
		*_dcaabc = 1
	case "\u006e\u006f\u006e\u0065":
		*_dcaabc = 2
	case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_dcaabc = 3
	}
	return nil
}
func (_eddcbg ST_CfType) String() string {
	switch _eddcbg {
	case 0:
		return ""
	case 1:
		return "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case 2:
		return "\u0063\u0065\u006c\u006c\u0049\u0073"
	case 3:
		return "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case 4:
		return "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case 5:
		return "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case 6:
		return "\u0074\u006f\u00701\u0030"
	case 7:
		return "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 8:
		return "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 13:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 14:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 16:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 17:
		return "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case 18:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return ""
}
func (_aabeg ST_DataValidationErrorStyle) String() string {
	switch _aabeg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u006f\u0070"
	case 2:
		return "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case 3:
		return "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return ""
}
func (_ggggf *CT_SmartTagTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gcgbce:
	for {
		_cddfa, _caagfe := d.Token()
		if _caagfe != nil {
			return _caagfe
		}
		switch _gfeca := _cddfa.(type) {
		case _b.StartElement:
			switch _gfeca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}:
				_abdeb := NewCT_SmartTagType()
				if _feefg := d.DecodeElement(_abdeb, &_gfeca); _feefg != nil {
					return _feefg
				}
				_ggggf.SmartTagType = append(_ggggf.SmartTagType, _abdeb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _gfeca.Name)
				if _acggfe := d.Skip(); _acggfe != nil {
					return _acggfe
				}
			}
		case _b.EndElement:
			break _gcgbce
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OlapPr and its children
func (_efadcd *CT_OlapPr) Validate() error {
	return _efadcd.ValidateWithPath("\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r")
}

// ValidateWithPath validates the Users and its children, prefixing error messages with path
func (_dcdda *Users) ValidateWithPath(path string) error {
	if _bggfdg := _dcdda.CT_Users.ValidateWithPath(path); _bggfdg != nil {
		return _bggfdg
	}
	return nil
}

// Validate validates the CT_MemberProperty and its children
func (_gdag *CT_MemberProperty) Validate() error {
	return _gdag.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

// ValidateWithPath validates the CT_DdeLink and its children, prefixing error messages with path
func (_gcab *CT_DdeLink) ValidateWithPath(path string) error {
	if _gcab.DdeItems != nil {
		if _gegfbd := _gcab.DdeItems.ValidateWithPath(path + "\u002fD\u0064\u0065\u0049\u0074\u0065\u006ds"); _gegfbd != nil {
			return _gegfbd
		}
	}
	return nil
}
func NewCT_ObjectAnchor() *CT_ObjectAnchor {
	_geafbb := &CT_ObjectAnchor{}
	_geafbb.From = _a.NewFrom()
	_geafbb.To = _a.NewTo()
	return _geafbb
}
func (_fbagd ST_IconSetType) Validate() error    { return _fbagd.ValidateWithPath("") }
func NewCT_QueryTableField() *CT_QueryTableField { _dccbgg := &CT_QueryTableField{}; return _dccbgg }
func (_aadcbg *CT_TableMissing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataStrings struct {

	// MDX Metadata String Count
	CountAttr *uint32

	// MDX Metadata String
	S []*CT_XStringElement
}

func (_ggcgb *CT_WorkbookProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddfcd := range start.Attr {
		if _ddfcd.Name.Local == "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065" {
			_cecbcf, _bcfcb := _ddfcd.Value, error(nil)
			if _bcfcb != nil {
				return _bcfcb
			}
			_ggcgb.RevisionsAlgorithmNameAttr = &_cecbcf
			continue
		}
		if _ddfcd.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065" {
			_bcage, _cfbbg := _ddfcd.Value, error(nil)
			if _cfbbg != nil {
				return _cfbbg
			}
			_ggcgb.RevisionsHashValueAttr = &_bcage
			continue
		}
		if _ddfcd.Name.Local == "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074" {
			_afaga, _cgbgbg := _ddfcd.Value, error(nil)
			if _cgbgbg != nil {
				return _cgbgbg
			}
			_ggcgb.WorkbookPasswordCharacterSetAttr = &_afaga
			continue
		}
		if _ddfcd.Name.Local == "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074" {
			_ecacca, _bbdag := _ddfcd.Value, error(nil)
			if _bbdag != nil {
				return _bbdag
			}
			_ggcgb.RevisionsPasswordCharacterSetAttr = &_ecacca
			continue
		}
		if _ddfcd.Name.Local == "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065" {
			_cdffb, _fbfbfc := _e.ParseBool(_ddfcd.Value)
			if _fbfbfc != nil {
				return _fbfbfc
			}
			_ggcgb.LockStructureAttr = &_cdffb
			continue
		}
		if _ddfcd.Name.Local == "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073" {
			_dagabb, _gccfa := _e.ParseBool(_ddfcd.Value)
			if _gccfa != nil {
				return _gccfa
			}
			_ggcgb.LockWindowsAttr = &_dagabb
			continue
		}
		if _ddfcd.Name.Local == "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e" {
			_dgdac, _cfdbfb := _e.ParseBool(_ddfcd.Value)
			if _cfdbfb != nil {
				return _cfdbfb
			}
			_ggcgb.LockRevisionAttr = &_dgdac
			continue
		}
		if _ddfcd.Name.Local == "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_fegdb, _gbfgg := _ddfcd.Value, error(nil)
			if _gbfgg != nil {
				return _gbfgg
			}
			_ggcgb.WorkbookPasswordAttr = &_fegdb
			continue
		}
		if _ddfcd.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064" {
			_ceced, _dbdgg := _ddfcd.Value, error(nil)
			if _dbdgg != nil {
				return _dbdgg
			}
			_ggcgb.RevisionsPasswordAttr = &_ceced
			continue
		}
		if _ddfcd.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065" {
			_fadda, _afgabc := _ddfcd.Value, error(nil)
			if _afgabc != nil {
				return _afgabc
			}
			_ggcgb.RevisionsSaltValueAttr = &_fadda
			continue
		}
		if _ddfcd.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074" {
			_fabgb, _fbagc := _e.ParseUint(_ddfcd.Value, 10, 32)
			if _fbagc != nil {
				return _fbagc
			}
			_bfbbf := uint32(_fabgb)
			_ggcgb.RevisionsSpinCountAttr = &_bfbbf
			continue
		}
		if _ddfcd.Name.Local == "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065" {
			_ebfbed, _gcdebbg := _ddfcd.Value, error(nil)
			if _gcdebbg != nil {
				return _gcdebbg
			}
			_ggcgb.WorkbookAlgorithmNameAttr = &_ebfbed
			continue
		}
		if _ddfcd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065" {
			_dfbffe, _bgebbg := _ddfcd.Value, error(nil)
			if _bgebbg != nil {
				return _bgebbg
			}
			_ggcgb.WorkbookHashValueAttr = &_dfbffe
			continue
		}
		if _ddfcd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065" {
			_cfggg, _eegfgd := _ddfcd.Value, error(nil)
			if _eegfgd != nil {
				return _eegfgd
			}
			_ggcgb.WorkbookSaltValueAttr = &_cfggg
			continue
		}
		if _ddfcd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074" {
			_ddbeg, _cggfae := _e.ParseUint(_ddfcd.Value, 10, 32)
			if _cggfae != nil {
				return _cggfae
			}
			_adfe := uint32(_ddbeg)
			_ggcgb.WorkbookSpinCountAttr = &_adfe
			continue
		}
	}
	for {
		_cfbca, _aefdf := d.Token()
		if _aefdf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _aefdf)
		}
		if _cffbc, _ebcae := _cfbca.(_b.EndElement); _ebcae && _cffbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetProtection struct {

	// Legacy Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Sheet Locked
	SheetAttr *bool

	// Objects Locked
	ObjectsAttr *bool

	// Scenarios Locked
	ScenariosAttr *bool

	// Format Cells Locked
	FormatCellsAttr *bool

	// Format Columns Locked
	FormatColumnsAttr *bool

	// Format Rows Locked
	FormatRowsAttr *bool

	// Insert Columns Locked
	InsertColumnsAttr *bool

	// Insert Rows Locked
	InsertRowsAttr *bool

	// Insert Hyperlinks Locked
	InsertHyperlinksAttr *bool

	// Delete Columns Locked
	DeleteColumnsAttr *bool

	// Delete Rows Locked
	DeleteRowsAttr *bool

	// Select Locked Cells Locked
	SelectLockedCellsAttr *bool

	// Sort Locked
	SortAttr *bool

	// AutoFilter Locked
	AutoFilterAttr *bool

	// Pivot Tables Locked
	PivotTablesAttr *bool

	// Select Unlocked Cells Locked
	SelectUnlockedCellsAttr *bool
}

// ValidateWithPath validates the CT_ExternalReferences and its children, prefixing error messages with path
func (_eeaac *CT_ExternalReferences) ValidateWithPath(path string) error {
	for _aggd, _agaa := range _eeaac.ExternalReference {
		if _baabf := _agaa.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _aggd)); _baabf != nil {
			return _baabf
		}
	}
	return nil
}

type CT_ExternalLink struct {
	Choice *CT_ExternalLinkChoice
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_OleLink and its children
func (_acfga *CT_OleLink) Validate() error {
	return _acfga.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b")
}

// Validate validates the CT_FontScheme and its children
func (_cafdd *CT_FontScheme) Validate() error {
	return _cafdd.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

// ValidateWithPath validates the QueryTable and its children, prefixing error messages with path
func (_degeg *QueryTable) ValidateWithPath(path string) error {
	if _fdfdc := _degeg.CT_QueryTable.ValidateWithPath(path); _fdfdc != nil {
		return _fdfdc
	}
	return nil
}

// ValidateWithPath validates the CT_Cfvo and its children, prefixing error messages with path
func (_ebbb *CT_Cfvo) ValidateWithPath(path string) error {
	if _ebbb.TypeAttr == ST_CfvoTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _efdgg := _ebbb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _efdgg != nil {
		return _efdgg
	}
	if _ebbb.ExtLst != nil {
		if _gfaa := _ebbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfaa != nil {
			return _gfaa
		}
	}
	return nil
}
func (_fbagbd ST_Orientation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbagbd.String(), start)
}
func NewCT_TextPr() *CT_TextPr { _adfgf := &CT_TextPr{}; return _adfgf }
func (_bbbgd *CT_PivotCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cffed := range start.Attr {
		if _cffed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cffed.Name.Local == "\u0069\u0064" || _cffed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cffed.Name.Local == "\u0069\u0064" {
			_fecge, _dfcae := _cffed.Value, error(nil)
			if _dfcae != nil {
				return _dfcae
			}
			_bbbgd.IdAttr = _fecge
			continue
		}
		if _cffed.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_gdfc, _fgbb := _e.ParseUint(_cffed.Value, 10, 32)
			if _fgbb != nil {
				return _fgbb
			}
			_bbbgd.CacheIdAttr = uint32(_gdfc)
			continue
		}
	}
	for {
		_bgegf, _efbef := d.Token()
		if _efbef != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050i\u0076o\u0074C\u0061\u0063\u0068\u0065\u003a\u0020\u0025s", _efbef)
		}
		if _dggfa, _fccddd := _bgegf.(_b.EndElement); _fccddd && _dggfa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eafab *CT_PageBreak) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eafab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eafab.CountAttr)})
	}
	if _eafab.ManualBreakCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eafab.ManualBreakCountAttr)})
	}
	e.EncodeToken(start)
	if _eafab.Brk != nil {
		_ebeeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u0072\u006b"}}
		for _, _bcadg := range _eafab.Brk {
			e.EncodeElement(_bcadg, _ebeeb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dgeb *CT_DynamicFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_ebag, _gbada := _dgeb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _gbada != nil {
		return _gbada
	}
	start.Attr = append(start.Attr, _ebag)
	if _dgeb.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_dgeb.ValAttr)})
	}
	if _dgeb.ValIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c\u0049\u0073\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_dgeb.ValIsoAttr)})
	}
	if _dgeb.MaxValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_dgeb.MaxValAttr)})
	}
	if _dgeb.MaxValIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o"}, Value: _f.Sprintf("\u0025\u0076", *_dgeb.MaxValIsoAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dgabf *CT_PCDSCPage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggcbf := range start.Attr {
		if _ggcbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aadee, _fgeed := _e.ParseUint(_ggcbf.Value, 10, 32)
			if _fgeed != nil {
				return _fgeed
			}
			_fadaa := uint32(_aadee)
			_dgabf.CountAttr = &_fadaa
			continue
		}
	}
_ggedc:
	for {
		_febcd, _dccfb := d.Token()
		if _dccfb != nil {
			return _dccfb
		}
		switch _ebgde := _febcd.(type) {
		case _b.StartElement:
			switch _ebgde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}:
				_feabca := NewCT_PageItem()
				if _daca := d.DecodeElement(_feabca, &_ebgde); _daca != nil {
					return _daca
				}
				_dgabf.PageItem = append(_dgabf.PageItem, _feabca)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0043\u0044S\u0043\u0050\u0061\u0067\u0065\u0020\u0025\u0076", _ebgde.Name)
				if _eafae := d.Skip(); _eafae != nil {
					return _eafae
				}
			}
		case _b.EndElement:
			break _ggedc
		case _b.CharData:
		}
	}
	return nil
}
func (_ffeff *ST_DateTimeGrouping) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffeff = 0
	case "\u0079\u0065\u0061\u0072":
		*_ffeff = 1
	case "\u006d\u006f\u006et\u0068":
		*_ffeff = 2
	case "\u0064\u0061\u0079":
		*_ffeff = 3
	case "\u0068\u006f\u0075\u0072":
		*_ffeff = 4
	case "\u006d\u0069\u006e\u0075\u0074\u0065":
		*_ffeff = 5
	case "\u0073\u0065\u0063\u006f\u006e\u0064":
		*_ffeff = 6
	}
	return nil
}

// ValidateWithPath validates the CT_Map and its children, prefixing error messages with path
func (_bdfcg *CT_Map) ValidateWithPath(path string) error {
	if _bdfcg.DataBinding != nil {
		if _ebcgg := _bdfcg.DataBinding.ValidateWithPath(path + "\u002f\u0044\u0061t\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"); _ebcgg != nil {
			return _ebcgg
		}
	}
	return nil
}
func NewCT_SharedUser() *CT_SharedUser {
	_ggfeb := &CT_SharedUser{}
	_ggfeb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _ggfeb
}

type StyleSheet struct{ CT_Stylesheet }

func (_dfgdaf *CT_WebPublishObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dfgdaf.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dfgdaf.DivIdAttr)})
	if _dfgdaf.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dfgdaf.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dfgdaf.DestinationFileAttr)})
	if _dfgdaf.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dfgdaf.TitleAttr)})
	}
	if _dfgdaf.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dfgdaf.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellFormula and its children, prefixing error messages with path
func (_aeba *CT_CellFormula) ValidateWithPath(path string) error {
	if _dgcb := _aeba.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _dgcb != nil {
		return _dgcb
	}
	return nil
}
func (_bfedbg ST_CellType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ageegdd := _b.Attr{}
	_ageegdd.Name = name
	switch _bfedbg {
	case ST_CellTypeUnset:
		_ageegdd.Value = ""
	case ST_CellTypeB:
		_ageegdd.Value = "\u0062"
	case ST_CellTypeN:
		_ageegdd.Value = "\u006e"
	case ST_CellTypeE:
		_ageegdd.Value = "\u0065"
	case ST_CellTypeS:
		_ageegdd.Value = "\u0073"
	case ST_CellTypeStr:
		_ageegdd.Value = "\u0073\u0074\u0072"
	case ST_CellTypeInlineStr:
		_ageegdd.Value = "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return _ageegdd, nil
}

type CT_RangeSets struct {

	// Reference and Page Item Count
	CountAttr *uint32

	// Range Set
	RangeSet []*CT_RangeSet
}

func (_gbafb *CT_SortCondition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbafb.DescendingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbafb.DescendingAttr))})
	}
	if _gbafb.SortByAttr != ST_SortByUnset {
		_aeffge, _ggbgdc := _gbafb.SortByAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0042\u0079"})
		if _ggbgdc != nil {
			return _ggbgdc
		}
		start.Attr = append(start.Attr, _aeffge)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _gbafb.RefAttr)})
	if _gbafb.CustomListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gbafb.CustomListAttr)})
	}
	if _gbafb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gbafb.DxfIdAttr)})
	}
	if _gbafb.IconSetAttr != ST_IconSetTypeUnset {
		_fdgeb, _ebbcb := _gbafb.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _ebbcb != nil {
			return _ebbcb
		}
		start.Attr = append(start.Attr, _fdgeb)
	}
	if _gbafb.IconIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gbafb.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Drawing struct{ IdAttr string }

func (_fedgc *CT_TableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bddegd := range start.Attr {
		if _bddegd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_egcaad, _cagbe := _bddegd.Value, error(nil)
			if _cagbe != nil {
				return _cagbe
			}
			_fedgc.NameAttr = _egcaad
			continue
		}
		if _bddegd.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_edcbd, _fgggg := _e.ParseBool(_bddegd.Value)
			if _fgggg != nil {
				return _fgggg
			}
			_fedgc.PivotAttr = &_edcbd
			continue
		}
		if _bddegd.Name.Local == "\u0074\u0061\u0062l\u0065" {
			_fcecaa, _bbccb := _e.ParseBool(_bddegd.Value)
			if _bbccb != nil {
				return _bbccb
			}
			_fedgc.TableAttr = &_fcecaa
			continue
		}
		if _bddegd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acaeg, _ceaae := _e.ParseUint(_bddegd.Value, 10, 32)
			if _ceaae != nil {
				return _ceaae
			}
			_bfgfeg := uint32(_acaeg)
			_fedgc.CountAttr = &_bfgfeg
			continue
		}
	}
_eeccee:
	for {
		_gadbdf, _cdgf := d.Token()
		if _cdgf != nil {
			return _cdgf
		}
		switch _dgcedb := _gadbdf.(type) {
		case _b.StartElement:
			switch _dgcedb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}:
				_ffdab := NewCT_TableStyleElement()
				if _ebebc := d.DecodeElement(_ffdab, &_dgcedb); _ebebc != nil {
					return _ebebc
				}
				_fedgc.TableStyleElement = append(_fedgc.TableStyleElement, _ffdab)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _dgcedb.Name)
				if _ddcca := d.Skip(); _ddcca != nil {
					return _ddcca
				}
			}
		case _b.EndElement:
			break _eeccee
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CellWatch() *CT_CellWatch { _eed := &CT_CellWatch{}; return _eed }

// Validate validates the CT_Members and its children
func (_dbbdf *CT_Members) Validate() error {
	return _dbbdf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

type CT_Tuple struct {

	// Field Index
	FldAttr *uint32

	// Hierarchy Index
	HierAttr *uint32

	// Item Index
	ItemAttr uint32
}

func NewCT_SingleXmlCell() *CT_SingleXmlCell {
	_dbegg := &CT_SingleXmlCell{}
	_dbegg.XmlCellPr = NewCT_XmlCellPr()
	return _dbegg
}

// ValidateWithPath validates the CT_CustomProperties and its children, prefixing error messages with path
func (_dgca *CT_CustomProperties) ValidateWithPath(path string) error {
	for _cddee, _dafa := range _dgca.CustomPr {
		if _eaafd := _dafa.ValidateWithPath(_f.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u005b\u0025\u0064\u005d", path, _cddee)); _eaafd != nil {
			return _eaafd
		}
	}
	return nil
}
func NewCT_OleObject() *CT_OleObject         { _dgcec := &CT_OleObject{}; return _dgcec }
func NewCT_IgnoredErrors() *CT_IgnoredErrors { _fcdcg := &CT_IgnoredErrors{}; return _fcdcg }
func (_cbdgac *CT_Revisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cbdgac.Rrc != nil {
		_dafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0072\u0063"}}
		for _, _bdgfcf := range _cbdgac.Rrc {
			e.EncodeElement(_bdgfcf, _dafc)
		}
	}
	if _cbdgac.Rm != nil {
		_abeddf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006d"}}
		for _, _cbgdb := range _cbdgac.Rm {
			e.EncodeElement(_cbgdb, _abeddf)
		}
	}
	if _cbdgac.Rcv != nil {
		_efbcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0076"}}
		for _, _bdggb := range _cbdgac.Rcv {
			e.EncodeElement(_bdggb, _efbcd)
		}
	}
	if _cbdgac.Rsnm != nil {
		_ebbdgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0073\u006e\u006d"}}
		for _, _abgac := range _cbdgac.Rsnm {
			e.EncodeElement(_abgac, _ebbdgg)
		}
	}
	if _cbdgac.Ris != nil {
		_dgbbeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0073"}}
		for _, _cageg := range _cbdgac.Ris {
			e.EncodeElement(_cageg, _dgbbeb)
		}
	}
	if _cbdgac.Rcc != nil {
		_defee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _edfab := range _cbdgac.Rcc {
			e.EncodeElement(_edfab, _defee)
		}
	}
	if _cbdgac.Rfmt != nil {
		_eaeca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _fbcgcd := range _cbdgac.Rfmt {
			e.EncodeElement(_fbcgcd, _eaeca)
		}
	}
	if _cbdgac.Raf != nil {
		_ccbbga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u0066"}}
		for _, _fgfeg := range _cbdgac.Raf {
			e.EncodeElement(_fgfeg, _ccbbga)
		}
	}
	if _cbdgac.Rdn != nil {
		_faabdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0064\u006e"}}
		for _, _febgga := range _cbdgac.Rdn {
			e.EncodeElement(_febgga, _faabdd)
		}
	}
	if _cbdgac.Rcmt != nil {
		_fefbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0063\u006d\u0074"}}
		for _, _fcdec := range _cbdgac.Rcmt {
			e.EncodeElement(_fcdec, _fefbb)
		}
	}
	if _cbdgac.Rqt != nil {
		_bagca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0071\u0074"}}
		for _, _bafgg := range _cbdgac.Rqt {
			e.EncodeElement(_bafgg, _bagca)
		}
	}
	if _cbdgac.Rcft != nil {
		_aaebc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0063\u0066\u0074"}}
		for _, _eegae := range _cbdgac.Rcft {
			e.EncodeElement(_eegae, _aaebc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfcc *CT_Formats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfcc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gfcc.CountAttr)})
	}
	e.EncodeToken(start)
	_fefec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u0072\u006d\u0061t"}}
	for _, _feada := range _gfcc.Format {
		e.EncodeElement(_feada, _fefec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eddbaf *CT_Sets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcdccg := range start.Attr {
		if _bcdccg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddafe, _dfddf := _e.ParseUint(_bcdccg.Value, 10, 32)
			if _dfddf != nil {
				return _dfddf
			}
			_dgfef := uint32(_ddafe)
			_eddbaf.CountAttr = &_dgfef
			continue
		}
	}
_bfeed:
	for {
		_gdbbae, _bdcdbc := d.Token()
		if _bdcdbc != nil {
			return _bdcdbc
		}
		switch _gcgbf := _gdbbae.(type) {
		case _b.StartElement:
			switch _gcgbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_abdbe := NewCT_Set()
				if _gdgabg := d.DecodeElement(_abdbe, &_gcgbf); _gdgabg != nil {
					return _gdgabg
				}
				_eddbaf.Set = append(_eddbaf.Set, _abdbe)
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _gcgbf.Name)
				if _ceccc := d.Skip(); _ceccc != nil {
					return _ceccc
				}
			}
		case _b.EndElement:
			break _bfeed
		case _b.CharData:
		}
	}
	return nil
}
func (_eca *CT_CacheFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eca.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eca.CountAttr)})
	}
	e.EncodeToken(start)
	if _eca.CacheField != nil {
		_egd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}}
		for _, _gaaa := range _eca.CacheField {
			e.EncodeElement(_gaaa, _egd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfecd ST_SortMethod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfecd.String(), start)
}

const (
	ST_VolDepTypeUnset         ST_VolDepType = 0
	ST_VolDepTypeRealTimeData  ST_VolDepType = 1
	ST_VolDepTypeOlapFunctions ST_VolDepType = 2
)

func (_ccde *CT_CalcPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccde.CalcIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ccde.CalcIdAttr)})
	}
	if _ccde.CalcModeAttr != ST_CalcModeUnset {
		_bbfe, _bgge := _ccde.CalcModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065"})
		if _bgge != nil {
			return _bgge
		}
		start.Attr = append(start.Attr, _bbfe)
	}
	if _ccde.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.FullCalcOnLoadAttr))})
	}
	if _ccde.RefModeAttr != ST_RefModeUnset {
		_dcbb, _fgf := _ccde.RefModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0072e\u0066\u004d\u006f\u0064\u0065"})
		if _fgf != nil {
			return _fgf
		}
		start.Attr = append(start.Attr, _dcbb)
	}
	if _ccde.IterateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.IterateAttr))})
	}
	if _ccde.IterateCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ccde.IterateCountAttr)})
	}
	if _ccde.IterateDeltaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0076", *_ccde.IterateDeltaAttr)})
	}
	if _ccde.FullPrecisionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.FullPrecisionAttr))})
	}
	if _ccde.CalcCompletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.CalcCompletedAttr))})
	}
	if _ccde.CalcOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.CalcOnSaveAttr))})
	}
	if _ccde.ConcurrentCalcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.ConcurrentCalcAttr))})
	}
	if _ccde.ConcurrentManualCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ccde.ConcurrentManualCountAttr)})
	}
	if _ccde.ForceFullCalcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccde.ForceFullCalcAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfgbg *CT_SheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffffdg:
	for {
		_bdffed, _ebfege := d.Token()
		if _ebfege != nil {
			return _ebfege
		}
		switch _ebecb := _bdffed.(type) {
		case _b.StartElement:
			switch _ebecb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_ceffac := NewCT_SheetView()
				if _gcgbcf := d.DecodeElement(_ceffac, &_ebecb); _gcgbcf != nil {
					return _gcgbcf
				}
				_cfgbg.SheetView = append(_cfgbg.SheetView, _ceffac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfgbg.ExtLst = NewCT_ExtensionList()
				if _gecdg := d.DecodeElement(_cfgbg.ExtLst, &_ebecb); _gecdg != nil {
					return _gecdg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073 \u0025\u0076", _ebecb.Name)
				if _eggbc := d.Skip(); _eggbc != nil {
					return _eggbc
				}
			}
		case _b.EndElement:
			break _ffffdg
		case _b.CharData:
		}
	}
	return nil
}
func (_ggbcd *CT_FontName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbccb := range start.Attr {
		if _fbccb.Name.Local == "\u0076\u0061\u006c" {
			_bbgdae, _egfef := _fbccb.Value, error(nil)
			if _egfef != nil {
				return _egfef
			}
			_ggbcd.ValAttr = _bbgdae
			continue
		}
	}
	for {
		_cgega, _aafdcf := d.Token()
		if _aafdcf != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _aafdcf)
		}
		if _abac, _dccadd := _cgega.(_b.EndElement); _dccadd && _abac.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CalculatedMember() *CT_CalculatedMember { _daa := &CT_CalculatedMember{}; return _daa }

type CT_ExternalSheetNames struct {

	// Sheet Name
	SheetName []*CT_ExternalSheetName
}

// ValidateWithPath validates the VolTypes and its children, prefixing error messages with path
func (_cedeee *VolTypes) ValidateWithPath(path string) error {
	if _gbegd := _cedeee.CT_VolTypes.ValidateWithPath(path); _gbegd != nil {
		return _gbegd
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetData and its children, prefixing error messages with path
func (_daac *CT_ExternalSheetData) ValidateWithPath(path string) error {
	for _eeffc, _gced := range _daac.Row {
		if _feagg := _gced.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _eeffc)); _feagg != nil {
			return _feagg
		}
	}
	return nil
}
func (_fccbc *CT_Users) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fccbc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fccbc.CountAttr)})
	}
	e.EncodeToken(start)
	if _fccbc.UserInfo != nil {
		_cdbefd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}}
		for _, _efbde := range _fccbc.UserInfo {
			e.EncodeElement(_efbde, _cdbefd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CellSmartTags struct {

	// Reference
	RAttr string

	// Cell Smart Tag
	CellSmartTag []*CT_CellSmartTag
}

func (_becba *CT_Item) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _becba.NAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_becba.NAttr)})
	}
	if _becba.TAttr != ST_ItemTypeUnset {
		_egbb, _abdcc := _becba.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _abdcc != nil {
			return _abdcc
		}
		start.Attr = append(start.Attr, _egbb)
	}
	if _becba.HAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.HAttr))})
	}
	if _becba.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.SAttr))})
	}
	if _becba.SdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.SdAttr))})
	}
	if _becba.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.FAttr))})
	}
	if _becba.MAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.MAttr))})
	}
	if _becba.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.CAttr))})
	}
	if _becba.XAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _f.Sprintf("\u0025\u0076", *_becba.XAttr)})
	}
	if _becba.DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.DAttr))})
	}
	if _becba.EAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becba.EAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CsPageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// First Page Number
	FirstPageNumberAttr *uint32

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func NewCT_PCDSCPage() *CT_PCDSCPage { _bafgc := &CT_PCDSCPage{}; return _bafgc }
func NewCT_Drawing() *CT_Drawing     { _edeccb := &CT_Drawing{}; return _edeccb }
func (_fegccb ST_ShowDataAs) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gebfa := _b.Attr{}
	_gebfa.Name = name
	switch _fegccb {
	case ST_ShowDataAsUnset:
		_gebfa.Value = ""
	case ST_ShowDataAsNormal:
		_gebfa.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_ShowDataAsDifference:
		_gebfa.Value = "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case ST_ShowDataAsPercent:
		_gebfa.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_ShowDataAsPercentDiff:
		_gebfa.Value = "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case ST_ShowDataAsRunTotal:
		_gebfa.Value = "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsPercentOfRow:
		_gebfa.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case ST_ShowDataAsPercentOfCol:
		_gebfa.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case ST_ShowDataAsPercentOfTotal:
		_gebfa.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsIndex:
		_gebfa.Value = "\u0069\u006e\u0064e\u0078"
	}
	return _gebfa, nil
}
func (_fdaed *CT_GroupLevel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cabdb := range start.Attr {
		if _cabdb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_ecaab, _gbfee := _cabdb.Value, error(nil)
			if _gbfee != nil {
				return _gbfee
			}
			_fdaed.UniqueNameAttr = _ecaab
			continue
		}
		if _cabdb.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_babdc, _cgee := _cabdb.Value, error(nil)
			if _cgee != nil {
				return _cgee
			}
			_fdaed.CaptionAttr = _babdc
			continue
		}
		if _cabdb.Name.Local == "\u0075\u0073\u0065\u0072" {
			_aacdf, _efgge := _e.ParseBool(_cabdb.Value)
			if _efgge != nil {
				return _efgge
			}
			_fdaed.UserAttr = &_aacdf
			continue
		}
		if _cabdb.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070" {
			_eeace, _aaec := _e.ParseBool(_cabdb.Value)
			if _aaec != nil {
				return _aaec
			}
			_fdaed.CustomRollUpAttr = &_eeace
			continue
		}
	}
_eecf:
	for {
		_ddfcb, _bcbd := d.Token()
		if _bcbd != nil {
			return _bcbd
		}
		switch _fdegf := _ddfcb.(type) {
		case _b.StartElement:
			switch _fdegf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}:
				_fdaed.Groups = NewCT_Groups()
				if _eeegf := d.DecodeElement(_fdaed.Groups, &_fdegf); _eeegf != nil {
					return _eeegf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdaed.ExtLst = NewCT_ExtensionList()
				if _abgeb := d.DecodeElement(_fdaed.ExtLst, &_fdegf); _abgeb != nil {
					return _abgeb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c \u0025\u0076", _fdegf.Name)
				if _bfcbb := d.Skip(); _bfcbb != nil {
					return _bfcbb
				}
			}
		case _b.EndElement:
			break _eecf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_DiscretePr() *CT_DiscretePr { _agcg := &CT_DiscretePr{}; return _agcg }
func (_fgdab ST_Pane) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gedbb := _b.Attr{}
	_gedbb.Name = name
	switch _fgdab {
	case ST_PaneUnset:
		_gedbb.Value = ""
	case ST_PaneBottomRight:
		_gedbb.Value = "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneTopRight:
		_gedbb.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneBottomLeft:
		_gedbb.Value = "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PaneTopLeft:
		_gedbb.Value = "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return _gedbb, nil
}
func (_edeab *CT_QueryTableField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceebf := range start.Attr {
		if _ceebf.Name.Local == "\u0069\u0064" {
			_gbbeed, _agdcf := _e.ParseUint(_ceebf.Value, 10, 32)
			if _agdcf != nil {
				return _agdcf
			}
			_edeab.IdAttr = uint32(_gbbeed)
			continue
		}
		if _ceebf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efgcd, _ccaa := _ceebf.Value, error(nil)
			if _ccaa != nil {
				return _ccaa
			}
			_edeab.NameAttr = &_efgcd
			continue
		}
		if _ceebf.Name.Local == "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed" {
			_degdb, _dfaaf := _e.ParseBool(_ceebf.Value)
			if _dfaaf != nil {
				return _dfaaf
			}
			_edeab.DataBoundAttr = &_degdb
			continue
		}
		if _ceebf.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_gedab, _bcdcec := _e.ParseBool(_ceebf.Value)
			if _bcdcec != nil {
				return _bcdcec
			}
			_edeab.RowNumbersAttr = &_gedab
			continue
		}
		if _ceebf.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_afgacc, _aeeeee := _e.ParseBool(_ceebf.Value)
			if _aeeeee != nil {
				return _aeeeee
			}
			_edeab.FillFormulasAttr = &_afgacc
			continue
		}
		if _ceebf.Name.Local == "\u0063l\u0069\u0070\u0070\u0065\u0064" {
			_cdfebb, _dcdfa := _e.ParseBool(_ceebf.Value)
			if _dcdfa != nil {
				return _dcdfa
			}
			_edeab.ClippedAttr = &_cdfebb
			continue
		}
		if _ceebf.Name.Local == "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064" {
			_gceeg, _afcfc := _e.ParseUint(_ceebf.Value, 10, 32)
			if _afcfc != nil {
				return _afcfc
			}
			_bgfg := uint32(_gceeg)
			_edeab.TableColumnIdAttr = &_bgfg
			continue
		}
	}
_edbfcb:
	for {
		_eefab, _cecaf := d.Token()
		if _cecaf != nil {
			return _cecaf
		}
		switch _abdca := _eefab.(type) {
		case _b.StartElement:
			switch _abdca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edeab.ExtLst = NewCT_ExtensionList()
				if _daddc := d.DecodeElement(_edeab.ExtLst, &_abdca); _daddc != nil {
					return _daddc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _abdca.Name)
				if _eegda := d.Skip(); _eegda != nil {
					return _eegda
				}
			}
		case _b.EndElement:
			break _edbfcb
		case _b.CharData:
		}
	}
	return nil
}
func (_cebbc *CT_RevisionQueryTableField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcagf := range start.Attr {
		if _bcagf.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ceddf, _aegcd := _e.ParseUint(_bcagf.Value, 10, 32)
			if _aegcd != nil {
				return _aegcd
			}
			_cebbc.SheetIdAttr = uint32(_ceddf)
			continue
		}
		if _bcagf.Name.Local == "\u0072\u0065\u0066" {
			_ecbfca, _febbb := _bcagf.Value, error(nil)
			if _febbb != nil {
				return _febbb
			}
			_cebbc.RefAttr = _ecbfca
			continue
		}
		if _bcagf.Name.Local == "\u0066i\u0065\u006c\u0064\u0049\u0064" {
			_dedec, _dbcfca := _e.ParseUint(_bcagf.Value, 10, 32)
			if _dbcfca != nil {
				return _dbcfca
			}
			_cebbc.FieldIdAttr = uint32(_dedec)
			continue
		}
	}
	for {
		_fbbcf, _ddaba := d.Token()
		if _ddaba != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0051\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065\u0046i\u0065\u006cd\u003a\u0020\u0025\u0073", _ddaba)
		}
		if _aggddf, _gaegd := _fbbcf.(_b.EndElement); _gaegd && _aggddf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Hyperlink struct {

	// Reference
	RefAttr string
	IdAttr  *string

	// Location
	LocationAttr *string

	// Tool Tip
	TooltipAttr *string

	// Display String
	DisplayAttr *string
}

func NewCT_AutoFilter() *CT_AutoFilter { _af := &CT_AutoFilter{}; return _af }
func (_fgeee ST_TextHAlign) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_acgbgc := _b.Attr{}
	_acgbgc.Name = name
	switch _fgeee {
	case ST_TextHAlignUnset:
		_acgbgc.Value = ""
	case ST_TextHAlignLeft:
		_acgbgc.Value = "\u006c\u0065\u0066\u0074"
	case ST_TextHAlignCenter:
		_acgbgc.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextHAlignRight:
		_acgbgc.Value = "\u0072\u0069\u0067h\u0074"
	case ST_TextHAlignJustify:
		_acgbgc.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextHAlignDistributed:
		_acgbgc.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _acgbgc, nil
}
func (_edddfc *ST_PivotFilterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edddfc = 0
	case "\u0075n\u006b\u006e\u006f\u0077\u006e":
		*_edddfc = 1
	case "\u0063\u006f\u0075n\u0074":
		*_edddfc = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_edddfc = 3
	case "\u0073\u0075\u006d":
		*_edddfc = 4
	case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
		*_edddfc = 5
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_edddfc = 6
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
		*_edddfc = 7
	case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
		*_edddfc = 8
	case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_edddfc = 9
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
		*_edddfc = 10
	case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_edddfc = 11
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
		*_edddfc = 12
	case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
		*_edddfc = 13
	case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
		*_edddfc = 14
	case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_edddfc = 15
	case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
		*_edddfc = 16
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_edddfc = 17
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_edddfc = 18
	case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
		*_edddfc = 19
	case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_edddfc = 20
	case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_edddfc = 21
	case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_edddfc = 22
	case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_edddfc = 23
	case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_edddfc = 24
	case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_edddfc = 25
	case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_edddfc = 26
	case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
		*_edddfc = 27
	case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_edddfc = 28
	case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
		*_edddfc = 29
	case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_edddfc = 30
	case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
		*_edddfc = 31
	case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_edddfc = 32
	case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_edddfc = 33
	case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_edddfc = 34
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_edddfc = 35
	case "\u0074\u006f\u0064a\u0079":
		*_edddfc = 36
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_edddfc = 37
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_edddfc = 38
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_edddfc = 39
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_edddfc = 40
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_edddfc = 41
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_edddfc = 42
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_edddfc = 43
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_edddfc = 44
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_edddfc = 45
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_edddfc = 46
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_edddfc = 47
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_edddfc = 48
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_edddfc = 49
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_edddfc = 50
	case "\u0051\u0031":
		*_edddfc = 51
	case "\u0051\u0032":
		*_edddfc = 52
	case "\u0051\u0033":
		*_edddfc = 53
	case "\u0051\u0034":
		*_edddfc = 54
	case "\u004d\u0031":
		*_edddfc = 55
	case "\u004d\u0032":
		*_edddfc = 56
	case "\u004d\u0033":
		*_edddfc = 57
	case "\u004d\u0034":
		*_edddfc = 58
	case "\u004d\u0035":
		*_edddfc = 59
	case "\u004d\u0036":
		*_edddfc = 60
	case "\u004d\u0037":
		*_edddfc = 61
	case "\u004d\u0038":
		*_edddfc = 62
	case "\u004d\u0039":
		*_edddfc = 63
	case "\u004d\u0031\u0030":
		*_edddfc = 64
	case "\u004d\u0031\u0031":
		*_edddfc = 65
	case "\u004d\u0031\u0032":
		*_edddfc = 66
	}
	return nil
}

// ValidateWithPath validates the CT_Revisions and its children, prefixing error messages with path
func (_baaaf *CT_Revisions) ValidateWithPath(path string) error {
	for _bgcge, _ceged := range _baaaf.Rrc {
		if _cfebe := _ceged.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0072\u0063\u005b\u0025\u0064\u005d", path, _bgcge)); _cfebe != nil {
			return _cfebe
		}
	}
	for _gggfe, _eggee := range _baaaf.Rm {
		if _feafgd := _eggee.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0052\u006d\u005b\u0025\u0064]", path, _gggfe)); _feafgd != nil {
			return _feafgd
		}
	}
	for _bfagcg, _fdedf := range _baaaf.Rcv {
		if _bgbdgg := _fdedf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0076\u005b\u0025\u0064\u005d", path, _bfagcg)); _bgbdgg != nil {
			return _bgbdgg
		}
	}
	for _eggefe, _dffcc := range _baaaf.Rsnm {
		if _eaadfe := _dffcc.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0052\u0073\u006e\u006d\u005b\u0025\u0064\u005d", path, _eggefe)); _eaadfe != nil {
			return _eaadfe
		}
	}
	for _bbeaf, _cdffa := range _baaaf.Ris {
		if _dbegf := _cdffa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0069\u0073\u005b\u0025\u0064\u005d", path, _bbeaf)); _dbegf != nil {
			return _dbegf
		}
	}
	for _ddbdc, _gffba := range _baaaf.Rcc {
		if _cbaedd := _gffba.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _ddbdc)); _cbaedd != nil {
			return _cbaedd
		}
	}
	for _cbgag, _babeag := range _baaaf.Rfmt {
		if _bgfdd := _babeag.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _cbgag)); _bgfdd != nil {
			return _bgfdd
		}
	}
	for _fffgc, _ebcec := range _baaaf.Raf {
		if _aefbbg := _ebcec.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0061\u0066\u005b\u0025\u0064\u005d", path, _fffgc)); _aefbbg != nil {
			return _aefbbg
		}
	}
	for _cdfgf, _efdfb := range _baaaf.Rdn {
		if _gdfcff := _efdfb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0064\u006e\u005b\u0025\u0064\u005d", path, _cdfgf)); _gdfcff != nil {
			return _gdfcff
		}
	}
	for _edfdc, _dgbea := range _baaaf.Rcmt {
		if _decdfb := _dgbea.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0052\u0063\u006d\u0074\u005b\u0025\u0064\u005d", path, _edfdc)); _decdfb != nil {
			return _decdfb
		}
	}
	for _febad, _gafbf := range _baaaf.Rqt {
		if _bccgee := _gafbf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0071\u0074\u005b\u0025\u0064\u005d", path, _febad)); _bccgee != nil {
			return _bccgee
		}
	}
	for _fbbbge, _dfbe := range _baaaf.Rcft {
		if _dggda := _dfbe.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0052\u0063\u0066\u0074\u005b\u0025\u0064\u005d", path, _fbbbge)); _dggda != nil {
			return _dggda
		}
	}
	return nil
}
func (_fabbg *CT_RevisionComment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fabbg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _dgcdg := range start.Attr {
		if _dgcdg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_abbc, _bacfb := _e.ParseUint(_dgcdg.Value, 10, 32)
			if _bacfb != nil {
				return _bacfb
			}
			_fabbg.SheetIdAttr = uint32(_abbc)
			continue
		}
		if _dgcdg.Name.Local == "\u0063\u0065\u006c\u006c" {
			_gagae, _ecafc := _dgcdg.Value, error(nil)
			if _ecafc != nil {
				return _ecafc
			}
			_fabbg.CellAttr = _gagae
			continue
		}
		if _dgcdg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_gbcdg, _ccgdb := _dgcdg.Value, error(nil)
			if _ccgdb != nil {
				return _ccgdb
			}
			_fabbg.GuidAttr = _gbcdg
			continue
		}
		if _dgcdg.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_fabbg.ActionAttr.UnmarshalXMLAttr(_dgcdg)
			continue
		}
		if _dgcdg.Name.Local == "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077" {
			_acbfc, _cbecee := _e.ParseBool(_dgcdg.Value)
			if _cbecee != nil {
				return _cbecee
			}
			_fabbg.AlwaysShowAttr = &_acbfc
			continue
		}
		if _dgcdg.Name.Local == "\u006f\u006c\u0064" {
			_edefdg, _eccde := _e.ParseBool(_dgcdg.Value)
			if _eccde != nil {
				return _eccde
			}
			_fabbg.OldAttr = &_edefdg
			continue
		}
		if _dgcdg.Name.Local == "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw" {
			_ccfea, _dbaaa := _e.ParseBool(_dgcdg.Value)
			if _dbaaa != nil {
				return _dbaaa
			}
			_fabbg.HiddenRowAttr = &_ccfea
			continue
		}
		if _dgcdg.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e" {
			_acffgg, _dfeeg := _e.ParseBool(_dgcdg.Value)
			if _dfeeg != nil {
				return _dfeeg
			}
			_fabbg.HiddenColumnAttr = &_acffgg
			continue
		}
		if _dgcdg.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_gbaacb, _eabbe := _dgcdg.Value, error(nil)
			if _eabbe != nil {
				return _eabbe
			}
			_fabbg.AuthorAttr = _gbaacb
			continue
		}
		if _dgcdg.Name.Local == "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h" {
			_gebcga, _bfdbab := _e.ParseUint(_dgcdg.Value, 10, 32)
			if _bfdbab != nil {
				return _bfdbab
			}
			_cgeag := uint32(_gebcga)
			_fabbg.OldLengthAttr = &_cgeag
			continue
		}
		if _dgcdg.Name.Local == "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h" {
			_afbecg, _ageee := _e.ParseUint(_dgcdg.Value, 10, 32)
			if _ageee != nil {
				return _ageee
			}
			_caabg := uint32(_afbecg)
			_fabbg.NewLengthAttr = &_caabg
			continue
		}
	}
	for {
		_gdfcf, _egedc := d.Token()
		if _egedc != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _egedc)
		}
		if _gdfec, _bebad := _gdfcf.(_b.EndElement); _bebad && _gdfec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aedfcg *ST_DataValidationErrorStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edega, _fcccf := d.Token()
	if _fcccf != nil {
		return _fcccf
	}
	if _cgfca, _cgcbacf := _edega.(_b.EndElement); _cgcbacf && _cgfca.Name == start.Name {
		*_aedfcg = 1
		return nil
	}
	if _dbcbd, _gefdeg := _edega.(_b.CharData); !_gefdeg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edega)
	} else {
		switch string(_dbcbd) {
		case "":
			*_aedfcg = 0
		case "\u0073\u0074\u006f\u0070":
			*_aedfcg = 1
		case "\u0077a\u0072\u006e\u0069\u006e\u0067":
			*_aedfcg = 2
		case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_aedfcg = 3
		}
	}
	_edega, _fcccf = d.Token()
	if _fcccf != nil {
		return _fcccf
	}
	if _baaae, _dacedc := _edega.(_b.EndElement); _dacedc && _baaae.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edega)
}
func (_acgfdd *CT_RevisionFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggcced := range start.Attr {
		if _ggcced.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ffdba, _fdedg := _e.ParseUint(_ggcced.Value, 10, 32)
			if _fdedg != nil {
				return _fdedg
			}
			_acgfdd.SheetIdAttr = uint32(_ffdba)
			continue
		}
		if _ggcced.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_bcdcb, _cccdg := _e.ParseBool(_ggcced.Value)
			if _cccdg != nil {
				return _cccdg
			}
			_acgfdd.XfDxfAttr = &_bcdcb
			continue
		}
		if _ggcced.Name.Local == "\u0073" {
			_gbecd, _bedgeb := _e.ParseBool(_ggcced.Value)
			if _bedgeb != nil {
				return _bedgeb
			}
			_acgfdd.SAttr = &_gbecd
			continue
		}
		if _ggcced.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bbdbf, _ebacc := ParseSliceST_Sqref(_ggcced.Value)
			if _ebacc != nil {
				return _ebacc
			}
			_acgfdd.SqrefAttr = _bbdbf
			continue
		}
		if _ggcced.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_ededd, _eagce := _e.ParseUint(_ggcced.Value, 10, 32)
			if _eagce != nil {
				return _eagce
			}
			_befaec := uint32(_ededd)
			_acgfdd.StartAttr = &_befaec
			continue
		}
		if _ggcced.Name.Local == "\u006c\u0065\u006e\u0067\u0074\u0068" {
			_ggbbe, _cgdgg := _e.ParseUint(_ggcced.Value, 10, 32)
			if _cgdgg != nil {
				return _cgdgg
			}
			_agbde := uint32(_ggbbe)
			_acgfdd.LengthAttr = &_agbde
			continue
		}
	}
_feebag:
	for {
		_bddgd, _dgabe := d.Token()
		if _dgabe != nil {
			return _dgabe
		}
		switch _dfacf := _bddgd.(type) {
		case _b.StartElement:
			switch _dfacf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_acgfdd.Dxf = NewCT_Dxf()
				if _ecgdec := d.DecodeElement(_acgfdd.Dxf, &_dfacf); _ecgdec != nil {
					return _ecgdec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acgfdd.ExtLst = NewCT_ExtensionList()
				if _ggdbd := d.DecodeElement(_acgfdd.ExtLst, &_dfacf); _ggdbd != nil {
					return _ggdbd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _dfacf.Name)
				if _efecg := d.Skip(); _efecg != nil {
					return _efecg
				}
			}
		case _b.EndElement:
			break _feebag
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Sets and its children, prefixing error messages with path
func (_fdbac *CT_Sets) ValidateWithPath(path string) error {
	for _bbffc, _afbaff := range _fdbac.Set {
		if _fcbaf := _afbaff.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _bbffc)); _fcbaf != nil {
			return _fcbaf
		}
	}
	return nil
}

type CT_Authors struct {

	// Author
	Author []string
}

func (_bcabad *ST_TextHAlign) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcabad = 0
	case "\u006c\u0065\u0066\u0074":
		*_bcabad = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_bcabad = 2
	case "\u0072\u0069\u0067h\u0074":
		*_bcabad = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_bcabad = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_bcabad = 5
	}
	return nil
}

// Validate validates the CT_GroupLevels and its children
func (_cgeb *CT_GroupLevels) Validate() error {
	return _cgeb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073")
}
func (_cdcdef *ST_SourceType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdcdef = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_cdcdef = 1
	case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
		*_cdcdef = 2
	case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
		*_cdcdef = 3
	case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
		*_cdcdef = 4
	}
	return nil
}
func (_gadbg ST_WebSourceType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gadbg.String(), start)
}
func (_adcgeb *ST_CellFormulaType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adcgeb = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_adcgeb = 1
	case "\u0061\u0072\u0072a\u0079":
		*_adcgeb = 2
	case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
		*_adcgeb = 3
	case "\u0073\u0068\u0061\u0072\u0065\u0064":
		*_adcgeb = 4
	}
	return nil
}
func (_ddbea ST_Sqref) String() string { return _gf.Join(_ddbea, "\u0020") }
func (_dfegf *CT_Sheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcbcd := range start.Attr {
		if _bcbcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcbcd.Name.Local == "\u0069\u0064" || _bcbcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcbcd.Name.Local == "\u0069\u0064" {
			_fdddg, _efeef := _bcbcd.Value, error(nil)
			if _efeef != nil {
				return _efeef
			}
			_dfegf.IdAttr = _fdddg
			continue
		}
		if _bcbcd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgedc, _egadd := _bcbcd.Value, error(nil)
			if _egadd != nil {
				return _egadd
			}
			_dfegf.NameAttr = _dgedc
			continue
		}
		if _bcbcd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_dbdec, _cbaef := _e.ParseUint(_bcbcd.Value, 10, 32)
			if _cbaef != nil {
				return _cbaef
			}
			_dfegf.SheetIdAttr = uint32(_dbdec)
			continue
		}
		if _bcbcd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_dfegf.StateAttr.UnmarshalXMLAttr(_bcbcd)
			continue
		}
	}
	for {
		_dfgbd, _bfgba := d.Token()
		if _bfgba != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074: \u0025\u0073", _bfgba)
		}
		if _efagf, _ggdgf := _dfgbd.(_b.EndElement); _ggdgf && _efagf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the Comments and its children
func (_fddgcg *Comments) Validate() error {
	return _fddgcg.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func (_beadfe ST_DataValidationErrorStyle) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ecfce := _b.Attr{}
	_ecfce.Name = name
	switch _beadfe {
	case ST_DataValidationErrorStyleUnset:
		_ecfce.Value = ""
	case ST_DataValidationErrorStyleStop:
		_ecfce.Value = "\u0073\u0074\u006f\u0070"
	case ST_DataValidationErrorStyleWarning:
		_ecfce.Value = "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case ST_DataValidationErrorStyleInformation:
		_ecfce.Value = "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return _ecfce, nil
}
func (_ccgfbc *CT_OleItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfggab := range start.Attr {
		if _gfggab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aceeb, _ceecf := _gfggab.Value, error(nil)
			if _ceecf != nil {
				return _ceecf
			}
			_ccgfbc.NameAttr = _aceeb
			continue
		}
		if _gfggab.Name.Local == "\u0069\u0063\u006f\u006e" {
			_caece, _afae := _e.ParseBool(_gfggab.Value)
			if _afae != nil {
				return _afae
			}
			_ccgfbc.IconAttr = &_caece
			continue
		}
		if _gfggab.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_cgcbff, _agaeg := _e.ParseBool(_gfggab.Value)
			if _agaeg != nil {
				return _agaeg
			}
			_ccgfbc.AdviseAttr = &_cgcbff
			continue
		}
		if _gfggab.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_ebcdfb, _efbgg := _e.ParseBool(_gfggab.Value)
			if _efbgg != nil {
				return _efbgg
			}
			_ccgfbc.PreferPicAttr = &_ebcdfb
			continue
		}
	}
	for {
		_gfdeg, _gdgfe := d.Token()
		if _gdgfe != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u003a\u0020%\u0073", _gdgfe)
		}
		if _egffd, _ffgcd := _gfdeg.(_b.EndElement); _ffgcd && _egffd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dgccc ST_Scope) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dgccc.String(), start)
}

type CT_QueryCache struct {

	// Cached Query Count
	CountAttr *uint32

	// Query
	Query []*CT_Query
}
type CT_PageItem struct {

	// Page Item Name
	NameAttr string
}

// Validate validates the CT_DrawingHF and its children
func (_dedea *CT_DrawingHF) Validate() error {
	return _dedea.ValidateWithPath("\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046")
}
func (_fcdea *CT_DataBinding) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geda := range start.Attr {
		if _geda.Name.Local == "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_beffe, _bbgba := _geda.Value, error(nil)
			if _bbgba != nil {
				return _bbgba
			}
			_fcdea.DataBindingNameAttr = &_beffe
			continue
		}
		if _geda.Name.Local == "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067" {
			_caagd, _gdae := _e.ParseBool(_geda.Value)
			if _gdae != nil {
				return _gdae
			}
			_fcdea.FileBindingAttr = &_caagd
			continue
		}
		if _geda.Name.Local == "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044" {
			_eadff, _effba := _e.ParseUint(_geda.Value, 10, 32)
			if _effba != nil {
				return _effba
			}
			_gdgf := uint32(_eadff)
			_fcdea.ConnectionIDAttr = &_gdgf
			continue
		}
		if _geda.Name.Local == "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_ebcdg, _abba := _geda.Value, error(nil)
			if _abba != nil {
				return _abba
			}
			_fcdea.FileBindingNameAttr = &_ebcdg
			continue
		}
		if _geda.Name.Local == "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065" {
			_feb, _eadeg := _e.ParseUint(_geda.Value, 10, 32)
			if _eadeg != nil {
				return _eadeg
			}
			_fcdea.DataBindingLoadModeAttr = uint32(_feb)
			continue
		}
	}
_gdcb:
	for {
		_gdade, _gcgfcg := d.Token()
		if _gcgfcg != nil {
			return _gcgfcg
		}
		switch _dbdgd := _gdade.(type) {
		case _b.StartElement:
			switch _dbdgd.Name {
			default:
				if _bbac, _faae := _d.CreateElement(_dbdgd); _faae != nil {
					return _faae
				} else {
					if _fgcba := d.DecodeElement(_bbac, &_dbdgd); _fgcba != nil {
						return _fgcba
					}
					_fcdea.Any = _bbac
				}
			}
		case _b.EndElement:
			break _gdcb
		case _b.CharData:
		}
	}
	return nil
}
func (_cffgb ST_GradientType) Validate() error { return _cffgb.ValidateWithPath("") }

const (
	ST_DateTimeGroupingUnset  ST_DateTimeGrouping = 0
	ST_DateTimeGroupingYear   ST_DateTimeGrouping = 1
	ST_DateTimeGroupingMonth  ST_DateTimeGrouping = 2
	ST_DateTimeGroupingDay    ST_DateTimeGrouping = 3
	ST_DateTimeGroupingHour   ST_DateTimeGrouping = 4
	ST_DateTimeGroupingMinute ST_DateTimeGrouping = 5
	ST_DateTimeGroupingSecond ST_DateTimeGrouping = 6
)

// ValidateWithPath validates the CT_Chartsheet and its children, prefixing error messages with path
func (_ecafe *CT_Chartsheet) ValidateWithPath(path string) error {
	if _ecafe.SheetPr != nil {
		if _deec := _ecafe.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _deec != nil {
			return _deec
		}
	}
	if _cgbc := _ecafe.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _cgbc != nil {
		return _cgbc
	}
	if _ecafe.SheetProtection != nil {
		if _fgeaa := _ecafe.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _fgeaa != nil {
			return _fgeaa
		}
	}
	if _ecafe.CustomSheetViews != nil {
		if _ddfga := _ecafe.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _ddfga != nil {
			return _ddfga
		}
	}
	if _ecafe.PageMargins != nil {
		if _aadc := _ecafe.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _aadc != nil {
			return _aadc
		}
	}
	if _ecafe.PageSetup != nil {
		if _ddac := _ecafe.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _ddac != nil {
			return _ddac
		}
	}
	if _ecafe.HeaderFooter != nil {
		if _afcg := _ecafe.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _afcg != nil {
			return _afcg
		}
	}
	if _gaea := _ecafe.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _gaea != nil {
		return _gaea
	}
	if _ecafe.LegacyDrawing != nil {
		if _bfaa := _ecafe.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _bfaa != nil {
			return _bfaa
		}
	}
	if _ecafe.LegacyDrawingHF != nil {
		if _acfgf := _ecafe.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _acfgf != nil {
			return _acfgf
		}
	}
	if _ecafe.DrawingHF != nil {
		if _efbc := _ecafe.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _efbc != nil {
			return _efbc
		}
	}
	if _ecafe.Picture != nil {
		if _abfd := _ecafe.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _abfd != nil {
			return _abfd
		}
	}
	if _ecafe.WebPublishItems != nil {
		if _deaeg := _ecafe.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _deaeg != nil {
			return _deaeg
		}
	}
	if _ecafe.ExtLst != nil {
		if _ffbe := _ecafe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffbe != nil {
			return _ffbe
		}
	}
	return nil
}
func NewCT_Error() *CT_Error     { _bfgfe := &CT_Error{}; return _bfgfe }
func NewCT_Control() *CT_Control { _ebge := &CT_Control{}; return _ebge }

// ValidateWithPath validates the CT_PivotFilters and its children, prefixing error messages with path
func (_cfaccf *CT_PivotFilters) ValidateWithPath(path string) error {
	for _abfb, _afffd := range _cfaccf.Filter {
		if _bceac := _afffd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _abfb)); _bceac != nil {
			return _bceac
		}
	}
	return nil
}

type CT_ServerFormat struct {

	// Culture
	CultureAttr *string

	// Format
	FormatAttr *string
}
type CT_RevisionHeader struct {

	// GUID
	GuidAttr string

	// Date Time
	DateTimeAttr _gb.Time

	// Last Sheet Id
	MaxSheetIdAttr uint32

	// User Name
	UserNameAttr string
	IdAttr       string

	// Minimum Revision Id
	MinRIdAttr *uint32

	// Max Revision Id
	MaxRIdAttr *uint32

	// Sheet Id Map
	SheetIdMap *CT_SheetIdMap

	// Reviewed List
	ReviewedList *CT_ReviewedRevisions
	ExtLst       *CT_ExtensionList
}
type CT_RevisionSheetRename struct {

	// Sheet Id
	SheetIdAttr uint32

	// Old Sheet Name
	OldNameAttr string

	// New Sheet Name
	NewNameAttr string
	ExtLst      *CT_ExtensionList
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_fddea *CT_LevelGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fddea.GroupMembers = NewCT_GroupMembers()
	for _, _adfaf := range start.Attr {
		if _adfaf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dccfdg, _geeeeg := _adfaf.Value, error(nil)
			if _geeeeg != nil {
				return _geeeeg
			}
			_fddea.NameAttr = _dccfdg
			continue
		}
		if _adfaf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_faebc, _bedga := _adfaf.Value, error(nil)
			if _bedga != nil {
				return _bedga
			}
			_fddea.UniqueNameAttr = _faebc
			continue
		}
		if _adfaf.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_bdffc, _dcfa := _adfaf.Value, error(nil)
			if _dcfa != nil {
				return _dcfa
			}
			_fddea.CaptionAttr = _bdffc
			continue
		}
		if _adfaf.Name.Local == "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074" {
			_fcadd, _dgacb := _adfaf.Value, error(nil)
			if _dgacb != nil {
				return _dgacb
			}
			_fddea.UniqueParentAttr = &_fcadd
			continue
		}
		if _adfaf.Name.Local == "\u0069\u0064" {
			_cabgc, _efcad := _e.ParseInt(_adfaf.Value, 10, 32)
			if _efcad != nil {
				return _efcad
			}
			_beadg := int32(_cabgc)
			_fddea.IdAttr = &_beadg
			continue
		}
	}
_aeafb:
	for {
		_bbgbe, _dgfff := d.Token()
		if _dgfff != nil {
			return _dgfff
		}
		switch _cfbad := _bbgbe.(type) {
		case _b.StartElement:
			switch _cfbad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}:
				if _egdecb := d.DecodeElement(_fddea.GroupMembers, &_cfbad); _egdecb != nil {
					return _egdecb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004ce\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _cfbad.Name)
				if _ggcfb := d.Skip(); _ggcfb != nil {
					return _ggcfb
				}
			}
		case _b.EndElement:
			break _aeafb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Fill and its children
func (_abeaf *CT_Fill) Validate() error {
	return _abeaf.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u006c")
}
func NewCT_CacheFields() *CT_CacheFields { _gga := &CT_CacheFields{}; return _gga }
func (_fddae *ST_SortType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fddae = 0
	case "\u006e\u006f\u006e\u0065":
		*_fddae = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_fddae = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_fddae = 3
	case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
		*_fddae = 4
	case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
		*_fddae = 5
	case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
		*_fddae = 6
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
		*_fddae = 7
	}
	return nil
}
func (_cddfc *CT_DdeValues) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cddfc.RowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_cddfc.RowsAttr)})
	}
	if _cddfc.ColsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_cddfc.ColsAttr)})
	}
	e.EncodeToken(start)
	_gcfdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c\u0075\u0065"}}
	for _, _fbdbc := range _cddfc.Value {
		e.EncodeElement(_fbdbc, _gcfdd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Font() *CT_Font { _bfaec := &CT_Font{}; return _bfaec }

// Validate validates the CT_PageItem and its children
func (_fgfef *CT_PageItem) Validate() error {
	return _fgfef.ValidateWithPath("C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d")
}
func NewCT_MetadataTypes() *CT_MetadataTypes { _eeebc := &CT_MetadataTypes{}; return _eeebc }
func (_acacc *CT_MdxMemeberProp) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _f.Sprintf("\u0025\u0076", _acacc.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0070"}, Value: _f.Sprintf("\u0025\u0076", _acacc.NpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomProperty and its children
func (_becdg *CT_CustomProperty) Validate() error {
	return _becdg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func (_dcdfcga ST_MdxSetOrder) ValidateWithPath(path string) error {
	switch _dcdfcga {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcdfcga))
	}
	return nil
}

// Validate validates the CT_DataValidations and its children
func (_gdef *CT_DataValidations) Validate() error {
	return _gdef.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073")
}

// Validate validates the CT_TableFormula and its children
func (_eabcba *CT_TableFormula) Validate() error {
	return _eabcba.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061")
}

// ValidateWithPath validates the CT_ConditionalFormats and its children, prefixing error messages with path
func (_cfgfb *CT_ConditionalFormats) ValidateWithPath(path string) error {
	for _gcdbf, _bege := range _cfgfb.ConditionalFormat {
		if _badf := _bege.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _gcdbf)); _badf != nil {
			return _badf
		}
	}
	return nil
}

// Validate validates the CT_Schema and its children
func (_edaa *CT_Schema) Validate() error {
	return _edaa.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da")
}
func (_cbafad *CT_WebPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egedg := range start.Attr {
		if _egedg.Name.Local == "\u0078\u006c\u0032\u0030\u0030\u0030" {
			_egdgg, _ffcfgg := _e.ParseBool(_egedg.Value)
			if _ffcfgg != nil {
				return _ffcfgg
			}
			_cbafad.Xl2000Attr = &_egdgg
			continue
		}
		if _egedg.Name.Local == "\u0078\u006d\u006c" {
			_fgbd, _ecaed := _e.ParseBool(_egedg.Value)
			if _ecaed != nil {
				return _ecaed
			}
			_cbafad.XmlAttr = &_fgbd
			continue
		}
		if _egedg.Name.Local == "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065" {
			_gefbc, _fgceca := _e.ParseBool(_egedg.Value)
			if _fgceca != nil {
				return _fgceca
			}
			_cbafad.ParsePreAttr = &_gefbc
			continue
		}
		if _egedg.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_aebfge, _dacfed := _e.ParseBool(_egedg.Value)
			if _dacfed != nil {
				return _dacfed
			}
			_cbafad.ConsecutiveAttr = &_aebfge
			continue
		}
		if _egedg.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_daagac, _cdgbde := _e.ParseBool(_egedg.Value)
			if _cdgbde != nil {
				return _cdgbde
			}
			_cbafad.FirstRowAttr = &_daagac
			continue
		}
		if _egedg.Name.Local == "\u0078\u006c\u0039\u0037" {
			_aefcb, _bgfgab := _e.ParseBool(_egedg.Value)
			if _bgfgab != nil {
				return _bgfgab
			}
			_cbafad.Xl97Attr = &_aefcb
			continue
		}
		if _egedg.Name.Local == "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s" {
			_beega, _fdccda := _e.ParseBool(_egedg.Value)
			if _fdccda != nil {
				return _fdccda
			}
			_cbafad.TextDatesAttr = &_beega
			continue
		}
		if _egedg.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061" {
			_defag, _aagdc := _e.ParseBool(_egedg.Value)
			if _aagdc != nil {
				return _aagdc
			}
			_cbafad.SourceDataAttr = &_defag
			continue
		}
		if _egedg.Name.Local == "\u0075\u0072\u006c" {
			_cedad, _dbffad := _egedg.Value, error(nil)
			if _dbffad != nil {
				return _dbffad
			}
			_cbafad.UrlAttr = &_cedad
			continue
		}
		if _egedg.Name.Local == "\u0070\u006f\u0073\u0074" {
			_bfaeca, _dfbaa := _egedg.Value, error(nil)
			if _dfbaa != nil {
				return _dfbaa
			}
			_cbafad.PostAttr = &_bfaeca
			continue
		}
		if _egedg.Name.Local == "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073" {
			_dabdaa, _fbdag := _e.ParseBool(_egedg.Value)
			if _fbdag != nil {
				return _fbdag
			}
			_cbafad.HtmlTablesAttr = &_dabdaa
			continue
		}
		if _egedg.Name.Local == "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074" {
			_cbafad.HtmlFormatAttr.UnmarshalXMLAttr(_egedg)
			continue
		}
		if _egedg.Name.Local == "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065" {
			_dececd, _baffb := _egedg.Value, error(nil)
			if _baffb != nil {
				return _baffb
			}
			_cbafad.EditPageAttr = &_dececd
			continue
		}
	}
_adcbee:
	for {
		_cdbbf, _efbcfa := d.Token()
		if _efbcfa != nil {
			return _efbcfa
		}
		switch _gagba := _cdbbf.(type) {
		case _b.StartElement:
			switch _gagba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}:
				_cbafad.Tables = NewCT_Tables()
				if _cebfg := d.DecodeElement(_cbafad.Tables, &_gagba); _cebfg != nil {
					return _cebfg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u0020\u0025\u0076", _gagba.Name)
				if _gcabf := d.Skip(); _gcabf != nil {
					return _gcabf
				}
			}
		case _b.EndElement:
			break _adcbee
		case _b.CharData:
		}
	}
	return nil
}
func (_bfddde *ST_UpdateLinks) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bfddde = 0
	case "\u0075s\u0065\u0072\u0053\u0065\u0074":
		*_bfddde = 1
	case "\u006e\u0065\u0076e\u0072":
		*_bfddde = 2
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_bfddde = 3
	}
	return nil
}
func (_feefbf *CT_RevisionHeaders) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _feefbf.GuidAttr)})
	if _feefbf.LastGuidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_feefbf.LastGuidAttr)})
	}
	if _feefbf.SharedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0061\u0072\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.SharedAttr))})
	}
	if _feefbf.DiskRevisionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.DiskRevisionsAttr))})
	}
	if _feefbf.HistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.HistoryAttr))})
	}
	if _feefbf.TrackRevisionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.TrackRevisionsAttr))})
	}
	if _feefbf.ExclusiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.ExclusiveAttr))})
	}
	if _feefbf.RevisionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_feefbf.RevisionIdAttr)})
	}
	if _feefbf.VersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_feefbf.VersionAttr)})
	}
	if _feefbf.KeepChangeHistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.KeepChangeHistoryAttr))})
	}
	if _feefbf.ProtectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_feefbf.ProtectedAttr))})
	}
	if _feefbf.PreserveHistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_feefbf.PreserveHistoryAttr)})
	}
	e.EncodeToken(start)
	_dfdca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0068\u0065\u0061\u0064\u0065r"}}
	for _, _bedfe := range _feefbf.Header {
		e.EncodeElement(_bedfe, _dfdca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcgd *CT_ColorFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcgd.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fcgd.DxfIdAttr)})
	}
	if _fcgd.CellColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fcgd.CellColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcbg *CT_CacheHierarchy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcea := range start.Attr {
		if _fcea.Name.Local == "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fbd, _feeac := _fcea.Value, error(nil)
			if _feeac != nil {
				return _feeac
			}
			_dcbg.DimensionUniqueNameAttr = &_fbd
			continue
		}
		if _fcea.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_dbbc, _fagf := _fcea.Value, error(nil)
			if _fagf != nil {
				return _fagf
			}
			_dcbg.DisplayFolderAttr = &_dbbc
			continue
		}
		if _fcea.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fcc, _abe := _fcea.Value, error(nil)
			if _abe != nil {
				return _abe
			}
			_dcbg.CaptionAttr = &_fcc
			continue
		}
		if _fcea.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_dfcb, _ega := _fcea.Value, error(nil)
			if _ega != nil {
				return _ega
			}
			_dcbg.MeasureGroupAttr = &_dfcb
			continue
		}
		if _fcea.Name.Local == "\u0073\u0065\u0074" {
			_ecfg, _gebc := _e.ParseBool(_fcea.Value)
			if _gebc != nil {
				return _gebc
			}
			_dcbg.SetAttr = &_ecfg
			continue
		}
		if _fcea.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073" {
			_deg, _bbca := _e.ParseBool(_fcea.Value)
			if _bbca != nil {
				return _bbca
			}
			_dcbg.MeasuresAttr = &_deg
			continue
		}
		if _fcea.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_ccgc, _ccb := _e.ParseInt(_fcea.Value, 10, 32)
			if _ccb != nil {
				return _ccb
			}
			_afcea := int32(_ccgc)
			_dcbg.IconSetAttr = &_afcea
			continue
		}
		if _fcea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efad, _fdef := _e.ParseUint(_fcea.Value, 10, 32)
			if _fdef != nil {
				return _fdef
			}
			_dcbg.CountAttr = uint32(_efad)
			continue
		}
		if _fcea.Name.Local == "\u0074\u0069\u006d\u0065" {
			_cbf, _bac := _e.ParseBool(_fcea.Value)
			if _bac != nil {
				return _bac
			}
			_dcbg.TimeAttr = &_cbf
			continue
		}
		if _fcea.Name.Local == "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064" {
			_bde, _geg := _e.ParseBool(_fcea.Value)
			if _geg != nil {
				return _geg
			}
			_dcbg.OneFieldAttr = &_bde
			continue
		}
		if _fcea.Name.Local == "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065" {
			_fda, _efaf := _e.ParseUint(_fcea.Value, 10, 16)
			if _efaf != nil {
				return _efaf
			}
			_fgef := uint16(_fda)
			_dcbg.MemberValueDatatypeAttr = &_fgef
			continue
		}
		if _fcea.Name.Local == "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070" {
			_debg, _bbed := _e.ParseBool(_fcea.Value)
			if _bbed != nil {
				return _bbed
			}
			_dcbg.UnbalancedGroupAttr = &_debg
			continue
		}
		if _fcea.Name.Local == "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t" {
			_ccbg, _ddbff := _e.ParseUint(_fcea.Value, 10, 32)
			if _ddbff != nil {
				return _ddbff
			}
			_dbc := uint32(_ccbg)
			_dcbg.ParentSetAttr = &_dbc
			continue
		}
		if _fcea.Name.Local == "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gacg, _gbb := _fcea.Value, error(nil)
			if _gbb != nil {
				return _gbb
			}
			_dcbg.DefaultMemberUniqueNameAttr = &_gacg
			continue
		}
		if _fcea.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_eabf, _feee := _e.ParseBool(_fcea.Value)
			if _feee != nil {
				return _feee
			}
			_dcbg.MeasureAttr = &_eabf
			continue
		}
		if _fcea.Name.Local == "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064" {
			_eecb, _ebbc := _e.ParseBool(_fcea.Value)
			if _ebbc != nil {
				return _ebbc
			}
			_dcbg.UnbalancedAttr = &_eecb
			continue
		}
		if _fcea.Name.Local == "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bcdb, _fdbf := _fcea.Value, error(nil)
			if _fdbf != nil {
				return _fdbf
			}
			_dcbg.AllCaptionAttr = &_bcdb
			continue
		}
		if _fcea.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gfcd, _eea := _e.ParseBool(_fcea.Value)
			if _eea != nil {
				return _eea
			}
			_dcbg.HiddenAttr = &_gfcd
			continue
		}
		if _fcea.Name.Local == "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e" {
			_agfgb, _befc := _e.ParseBool(_fcea.Value)
			if _befc != nil {
				return _befc
			}
			_dcbg.AttributeAttr = &_agfgb
			continue
		}
		if _fcea.Name.Local == "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_abc, _afcf := _fcea.Value, error(nil)
			if _afcf != nil {
				return _afcf
			}
			_dcbg.AllUniqueNameAttr = &_abc
			continue
		}
		if _fcea.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fagc, _ecda := _fcea.Value, error(nil)
			if _ecda != nil {
				return _ecda
			}
			_dcbg.UniqueNameAttr = _fagc
			continue
		}
		if _fcea.Name.Local == "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065" {
			_fbe, _afgd := _e.ParseBool(_fcea.Value)
			if _afgd != nil {
				return _afgd
			}
			_dcbg.KeyAttributeAttr = &_fbe
			continue
		}
	}
_ceea:
	for {
		_cgb, _egbf := d.Token()
		if _egbf != nil {
			return _egbf
		}
		switch _fbfe := _cgb.(type) {
		case _b.StartElement:
			switch _fbfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_dcbg.FieldsUsage = NewCT_FieldsUsage()
				if _ffgc := d.DecodeElement(_dcbg.FieldsUsage, &_fbfe); _ffgc != nil {
					return _ffgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}:
				_dcbg.GroupLevels = NewCT_GroupLevels()
				if _fbg := d.DecodeElement(_dcbg.GroupLevels, &_fbfe); _fbg != nil {
					return _fbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcbg.ExtLst = NewCT_ExtensionList()
				if _egdf := d.DecodeElement(_dcbg.ExtLst, &_fbfe); _egdf != nil {
					return _egdf
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _fbfe.Name)
				if _befg := d.Skip(); _befg != nil {
					return _befg
				}
			}
		case _b.EndElement:
			break _ceea
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetBackgroundPicture and its children, prefixing error messages with path
func (_fdfbea *CT_SheetBackgroundPicture) ValidateWithPath(path string) error { return nil }
func NewCT_Colors() *CT_Colors                                                { _caad := &CT_Colors{}; return _caad }
func (_faafg *CT_RgbColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _faafg.RgbAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0067\u0062"}, Value: _f.Sprintf("\u0025\u0076", *_faafg.RgbAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfbfa *CT_RevisionRowColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gfbfa.SIdAttr)})
	if _gfbfa.EolAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfbfa.EolAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _gfbfa.RefAttr)})
	_eagdc, _cbgaa := _gfbfa.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _cbgaa != nil {
		return _cbgaa
	}
	start.Attr = append(start.Attr, _eagdc)
	if _gfbfa.EdgeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfbfa.EdgeAttr))})
	}
	if _gfbfa.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gfbfa.RIdAttr)})
	}
	if _gfbfa.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfbfa.UaAttr))})
	}
	if _gfbfa.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfbfa.RaAttr))})
	}
	e.EncodeToken(start)
	if _gfbfa.Undo != nil {
		_adcdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _dgbca := range _gfbfa.Undo {
			e.EncodeElement(_dgbca, _adcdc)
		}
	}
	if _gfbfa.Rcc != nil {
		_afdbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _ffaaba := range _gfbfa.Rcc {
			e.EncodeElement(_ffaaba, _afdbf)
		}
	}
	if _gfbfa.Rfmt != nil {
		_ddedd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _caabff := range _gfbfa.Rfmt {
			e.EncodeElement(_caabff, _ddedd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotCacheDefinition and its children
func (_fcagb *CT_PivotCacheDefinition) Validate() error {
	return _fcagb.ValidateWithPath("\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}
func (_bacbbd ST_CfType) ValidateWithPath(path string) error {
	switch _bacbbd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bacbbd))
	}
	return nil
}
func (_abeca *CT_RPrElt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_geffd:
	for {
		_feded, _ddaec := d.Token()
		if _ddaec != nil {
			return _ddaec
		}
		switch _bdgbg := _feded.(type) {
		case _b.StartElement:
			switch _bdgbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
				_abeca.RFont = NewCT_FontName()
				if _dgebf := d.DecodeElement(_abeca.RFont, &_bdgbg); _dgebf != nil {
					return _dgebf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_abeca.Charset = NewCT_IntProperty()
				if _gcefg := d.DecodeElement(_abeca.Charset, &_bdgbg); _gcefg != nil {
					return _gcefg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_abeca.Family = NewCT_IntProperty()
				if _bcdgc := d.DecodeElement(_abeca.Family, &_bdgbg); _bcdgc != nil {
					return _bcdgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_abeca.B = NewCT_BooleanProperty()
				if _geadc := d.DecodeElement(_abeca.B, &_bdgbg); _geadc != nil {
					return _geadc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_abeca.I = NewCT_BooleanProperty()
				if _cffca := d.DecodeElement(_abeca.I, &_bdgbg); _cffca != nil {
					return _cffca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_abeca.Strike = NewCT_BooleanProperty()
				if _dfdga := d.DecodeElement(_abeca.Strike, &_bdgbg); _dfdga != nil {
					return _dfdga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_abeca.Outline = NewCT_BooleanProperty()
				if _aaegc := d.DecodeElement(_abeca.Outline, &_bdgbg); _aaegc != nil {
					return _aaegc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_abeca.Shadow = NewCT_BooleanProperty()
				if _dceaa := d.DecodeElement(_abeca.Shadow, &_bdgbg); _dceaa != nil {
					return _dceaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_abeca.Condense = NewCT_BooleanProperty()
				if _dfbad := d.DecodeElement(_abeca.Condense, &_bdgbg); _dfbad != nil {
					return _dfbad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_abeca.Extend = NewCT_BooleanProperty()
				if _cagaa := d.DecodeElement(_abeca.Extend, &_bdgbg); _cagaa != nil {
					return _cagaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_abeca.Color = NewCT_Color()
				if _egeae := d.DecodeElement(_abeca.Color, &_bdgbg); _egeae != nil {
					return _egeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_abeca.Sz = NewCT_FontSize()
				if _gccgd := d.DecodeElement(_abeca.Sz, &_bdgbg); _gccgd != nil {
					return _gccgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_abeca.U = NewCT_UnderlineProperty()
				if _cdfgc := d.DecodeElement(_abeca.U, &_bdgbg); _cdfgc != nil {
					return _cdfgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_abeca.VertAlign = NewCT_VerticalAlignFontProperty()
				if _bbeee := d.DecodeElement(_abeca.VertAlign, &_bdgbg); _bbeee != nil {
					return _bbeee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_abeca.Scheme = NewCT_FontScheme()
				if _eabgcf := d.DecodeElement(_abeca.Scheme, &_bdgbg); _eabgcf != nil {
					return _eabgcf
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074 \u0025\u0076", _bdgbg.Name)
				if _fafaff := d.Skip(); _fafaff != nil {
					return _fafaff
				}
			}
		case _b.EndElement:
			break _geffd
		case _b.CharData:
		}
	}
	return nil
}

type CT_Stylesheet struct {

	// Number Formats
	NumFmts *CT_NumFmts

	// Fonts
	Fonts *CT_Fonts

	// Fills
	Fills *CT_Fills

	// Borders
	Borders *CT_Borders

	// Formatting Records
	CellStyleXfs *CT_CellStyleXfs

	// Cell Formats
	CellXfs *CT_CellXfs

	// Cell Styles
	CellStyles *CT_CellStyles

	// Formats
	Dxfs *CT_Dxfs

	// Table Styles
	TableStyles *CT_TableStyles

	// Colors
	Colors *CT_Colors

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Hyperlink and its children
func (_cbbefg *CT_Hyperlink) Validate() error {
	return _cbbefg.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}
func NewCT_RevisionCustomView() *CT_RevisionCustomView {
	_ccdff := &CT_RevisionCustomView{}
	_ccdff.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_ccdff.ActionAttr = ST_RevisionAction(1)
	return _ccdff
}
func (_eefcg *CT_Xf) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eefcg.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eefcg.NumFmtIdAttr)})
	}
	if _eefcg.FontIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eefcg.FontIdAttr)})
	}
	if _eefcg.FillIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u006c\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eefcg.FillIdAttr)})
	}
	if _eefcg.BorderIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eefcg.BorderIdAttr)})
	}
	if _eefcg.XfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eefcg.XfIdAttr)})
	}
	if _eefcg.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.QuotePrefixAttr))})
	}
	if _eefcg.PivotButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.PivotButtonAttr))})
	}
	if _eefcg.ApplyNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.ApplyNumberFormatAttr))})
	}
	if _eefcg.ApplyFontAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.ApplyFontAttr))})
	}
	if _eefcg.ApplyFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.ApplyFillAttr))})
	}
	if _eefcg.ApplyBorderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.ApplyBorderAttr))})
	}
	if _eefcg.ApplyAlignmentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.ApplyAlignmentAttr))})
	}
	if _eefcg.ApplyProtectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcg.ApplyProtectionAttr))})
	}
	e.EncodeToken(start)
	if _eefcg.Alignment != nil {
		_edfcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_eefcg.Alignment, _edfcb)
	}
	if _eefcg.Protection != nil {
		_cgbfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_eefcg.Protection, _cgbfa)
	}
	if _eefcg.ExtLst != nil {
		_ebccae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eefcg.ExtLst, _ebccae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fggac *CT_Filter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abfed := range start.Attr {
		if _abfed.Name.Local == "\u0076\u0061\u006c" {
			_efcg, _efgf := _abfed.Value, error(nil)
			if _efgf != nil {
				return _efgf
			}
			_fggac.ValAttr = &_efcg
			continue
		}
	}
	for {
		_fbefd, _ecbbg := d.Token()
		if _ecbbg != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u003a\u0020\u0025\u0073", _ecbbg)
		}
		if _dbfca, _gdgc := _fbefd.(_b.EndElement); _gdgc && _dbfca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbbgb *CT_SheetData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gbdafg:
	for {
		_gcgfcge, _dacfe := d.Token()
		if _dacfe != nil {
			return _dacfe
		}
		switch _cacag := _gcgfcge.(type) {
		case _b.StartElement:
			switch _cacag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_egbccb := NewCT_Row()
				if _cdedc := d.DecodeElement(_egbccb, &_cacag); _cdedc != nil {
					return _cdedc
				}
				_bbbgb.Row = append(_bbbgb.Row, _egbccb)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _cacag.Name)
				if _gddgad := d.Skip(); _gddgad != nil {
					return _gddgad
				}
			}
		case _b.EndElement:
			break _gbdafg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RPrElt and its children
func (_gccbf *CT_RPrElt) Validate() error {
	return _gccbf.ValidateWithPath("\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct")
}
func (_fcfgb *CT_PivotHierarchy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cadee := range start.Attr {
		if _cadee.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_addde, _gcfaa := _e.ParseBool(_cadee.Value)
			if _gcfaa != nil {
				return _gcfaa
			}
			_fcfgb.DragToDataAttr = &_addde
			continue
		}
		if _cadee.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_gfcad, _dcbfge := _e.ParseBool(_cadee.Value)
			if _dcbfge != nil {
				return _dcbfge
			}
			_fcfgb.OutlineAttr = &_gfcad
			continue
		}
		if _cadee.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_cagfb, _bfega := _e.ParseBool(_cadee.Value)
			if _bfega != nil {
				return _bfega
			}
			_fcfgb.SubtotalTopAttr = &_cagfb
			continue
		}
		if _cadee.Name.Local == "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_aggce, _edceg := _e.ParseBool(_cadee.Value)
			if _edceg != nil {
				return _edceg
			}
			_fcfgb.ShowInFieldListAttr = &_aggce
			continue
		}
		if _cadee.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_fbfec, _febbg := _e.ParseBool(_cadee.Value)
			if _febbg != nil {
				return _febbg
			}
			_fcfgb.DragToRowAttr = &_fbfec
			continue
		}
		if _cadee.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_aadeg, _edfb := _e.ParseBool(_cadee.Value)
			if _edfb != nil {
				return _edfb
			}
			_fcfgb.DragToColAttr = &_aadeg
			continue
		}
		if _cadee.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_abgcd, _caeba := _e.ParseBool(_cadee.Value)
			if _caeba != nil {
				return _caeba
			}
			_fcfgb.DragToPageAttr = &_abgcd
			continue
		}
		if _cadee.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_aacdb, _ccace := _e.ParseBool(_cadee.Value)
			if _ccace != nil {
				return _ccace
			}
			_fcfgb.MultipleItemSelectionAllowedAttr = &_aacdb
			continue
		}
		if _cadee.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_ffdfc, _cfece := _e.ParseBool(_cadee.Value)
			if _cfece != nil {
				return _cfece
			}
			_fcfgb.DragOffAttr = &_ffdfc
			continue
		}
		if _cadee.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_fdaac, _feffe := _e.ParseBool(_cadee.Value)
			if _feffe != nil {
				return _feffe
			}
			_fcfgb.IncludeNewItemsInFilterAttr = &_fdaac
			continue
		}
		if _cadee.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ffecf, _aegfc := _cadee.Value, error(nil)
			if _aegfc != nil {
				return _aegfc
			}
			_fcfgb.CaptionAttr = &_ffecf
			continue
		}
	}
_cgffg:
	for {
		_gddee, _dacbc := d.Token()
		if _dacbc != nil {
			return _dacbc
		}
		switch _eabfg := _gddee.(type) {
		case _b.StartElement:
			switch _eabfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}:
				_fcfgb.Mps = NewCT_MemberProperties()
				if _gdbed := d.DecodeElement(_fcfgb.Mps, &_eabfg); _gdbed != nil {
					return _gdbed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}:
				_cfdeb := NewCT_Members()
				if _cbcffb := d.DecodeElement(_cfdeb, &_eabfg); _cbcffb != nil {
					return _cbcffb
				}
				_fcfgb.Members = append(_fcfgb.Members, _cfdeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcfgb.ExtLst = NewCT_ExtensionList()
				if _fcggf := d.DecodeElement(_fcfgb.ExtLst, &_eabfg); _fcggf != nil {
					return _fcggf
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _eabfg.Name)
				if _eeeeeb := d.Skip(); _eeeeeb != nil {
					return _eeeeeb
				}
			}
		case _b.EndElement:
			break _cgffg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_OutlinePr() *CT_OutlinePr { _bacga := &CT_OutlinePr{}; return _bacga }

const (
	ST_PhoneticAlignmentUnset       ST_PhoneticAlignment = 0
	ST_PhoneticAlignmentNoControl   ST_PhoneticAlignment = 1
	ST_PhoneticAlignmentLeft        ST_PhoneticAlignment = 2
	ST_PhoneticAlignmentCenter      ST_PhoneticAlignment = 3
	ST_PhoneticAlignmentDistributed ST_PhoneticAlignment = 4
)

func NewCT_FieldGroup() *CT_FieldGroup { _bbeg := &CT_FieldGroup{}; return _bbeg }

// Validate validates the CT_Index and its children
func (_bdgcd *CT_Index) Validate() error {
	return _bdgcd.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078")
}
func (_agbgbb ST_Visibility) Validate() error { return _agbgbb.ValidateWithPath("") }
func (_gbgbbc ST_PivotAreaType) String() string {
	switch _gbgbbc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 3:
		return "\u0064\u0061\u0074\u0061"
	case 4:
		return "\u0061\u006c\u006c"
	case 5:
		return "\u006f\u0072\u0069\u0067\u0069\u006e"
	case 6:
		return "\u0062\u0075\u0074\u0074\u006f\u006e"
	case 7:
		return "\u0074\u006f\u0070\u0045\u006e\u0064"
	case 8:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_RangePr and its children, prefixing error messages with path
func (_afaef *CT_RangePr) ValidateWithPath(path string) error {
	if _dbfdbf := _afaef.GroupByAttr.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u0042\u0079\u0041\u0074\u0074\u0072"); _dbfdbf != nil {
		return _dbfdbf
	}
	return nil
}
func (_gfecca *CT_OleLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gfecca.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gfecca.ProgIdAttr)})
	e.EncodeToken(start)
	if _gfecca.OleItems != nil {
		_fffa := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_gfecca.OleItems, _fffa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Xf struct {

	// Number Format Id
	NumFmtIdAttr *uint32

	// Font Id
	FontIdAttr *uint32

	// Fill Id
	FillIdAttr *uint32

	// Border Id
	BorderIdAttr *uint32

	// Format Id
	XfIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Pivot Button
	PivotButtonAttr *bool

	// Apply Number Format
	ApplyNumberFormatAttr *bool

	// Apply Font
	ApplyFontAttr *bool

	// Apply Fill
	ApplyFillAttr *bool

	// Apply Border
	ApplyBorderAttr *bool

	// Apply Alignment
	ApplyAlignmentAttr *bool

	// Apply Protection
	ApplyProtectionAttr *bool

	// Alignment
	Alignment *CT_CellAlignment

	// Protection
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_MetadataBlock and its children
func (_abeeg *CT_MetadataBlock) Validate() error {
	return _abeeg.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b")
}

// Validate validates the CT_DataConsolidate and its children
func (_ceffd *CT_DataConsolidate) Validate() error {
	return _ceffd.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065")
}
func (_bgbefe *ST_PageOrder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efegd, _dbdbacg := d.Token()
	if _dbdbacg != nil {
		return _dbdbacg
	}
	if _adgad, _aagdfe := _efegd.(_b.EndElement); _aagdfe && _adgad.Name == start.Name {
		*_bgbefe = 1
		return nil
	}
	if _ddgeed, _facgg := _efegd.(_b.CharData); !_facgg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efegd)
	} else {
		switch string(_ddgeed) {
		case "":
			*_bgbefe = 0
		case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
			*_bgbefe = 1
		case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
			*_bgbefe = 2
		}
	}
	_efegd, _dbdbacg = d.Token()
	if _dbdbacg != nil {
		return _dbdbacg
	}
	if _bgdcb, _fabeb := _efegd.(_b.EndElement); _fabeb && _bgdcb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efegd)
}
func (_egdaee *ST_PrintError) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_egdaee = 0
	case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
		*_egdaee = 1
	case "\u0062\u006c\u0061n\u006b":
		*_egdaee = 2
	case "\u0064\u0061\u0073\u0068":
		*_egdaee = 3
	case "\u004e\u0041":
		*_egdaee = 4
	}
	return nil
}

type CT_Filter struct {

	// Filter Value
	ValAttr *string
}

// Validate validates the CT_Error and its children
func (_dfceg *CT_Error) Validate() error {
	return _dfceg.ValidateWithPath("\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072")
}

type CT_ChartsheetView struct {

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Window Zoom Scale
	ZoomScaleAttr *uint32

	// Workbook View Id
	WorkbookViewIdAttr uint32

	// Zoom To Fit
	ZoomToFitAttr *bool
	ExtLst        *CT_ExtensionList
}

func (_cfbb *CT_PhoneticRun) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adgc := range start.Attr {
		if _adgc.Name.Local == "\u0073\u0062" {
			_efcbd, _aegba := _e.ParseUint(_adgc.Value, 10, 32)
			if _aegba != nil {
				return _aegba
			}
			_cfbb.SbAttr = uint32(_efcbd)
			continue
		}
		if _adgc.Name.Local == "\u0065\u0062" {
			_baeba, _gfgbg := _e.ParseUint(_adgc.Value, 10, 32)
			if _gfgbg != nil {
				return _gfgbg
			}
			_cfbb.EbAttr = uint32(_baeba)
			continue
		}
	}
_fafge:
	for {
		_gbgfa, _eceed := d.Token()
		if _eceed != nil {
			return _eceed
		}
		switch _eegce := _gbgfa.(type) {
		case _b.StartElement:
			switch _eegce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _aebeab := d.DecodeElement(&_cfbb.T, &_eegce); _aebeab != nil {
					return _aebeab
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069c\u0052u\u006e\u0020\u0025\u0076", _eegce.Name)
				if _dggefd := d.Skip(); _dggefd != nil {
					return _dggefd
				}
			}
		case _b.EndElement:
			break _fafge
		case _b.CharData:
		}
	}
	return nil
}
func (_bbf *CT_Borders) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bbf.CountAttr)})
	}
	e.EncodeToken(start)
	if _bbf.Border != nil {
		_fgcb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		for _, _adga := range _bbf.Border {
			e.EncodeElement(_adga, _fgcb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aceefa *CT_Workbook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aceefa.Sheets = NewCT_Sheets()
	for _, _fegbb := range start.Attr {
		if _fegbb.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_aceefa.ConformanceAttr.UnmarshalXMLAttr(_fegbb)
			continue
		}
	}
_dbadd:
	for {
		_cagega, _fdged := d.Token()
		if _fdged != nil {
			return _fdged
		}
		switch _bccgbb := _cagega.(type) {
		case _b.StartElement:
			switch _bccgbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_aceefa.FileVersion = NewCT_FileVersion()
				if _caafc := d.DecodeElement(_aceefa.FileVersion, &_bccgbb); _caafc != nil {
					return _caafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_aceefa.FileSharing = NewCT_FileSharing()
				if _aegaac := d.DecodeElement(_aceefa.FileSharing, &_bccgbb); _aegaac != nil {
					return _aegaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_aceefa.WorkbookPr = NewCT_WorkbookPr()
				if _aegdc := d.DecodeElement(_aceefa.WorkbookPr, &_bccgbb); _aegdc != nil {
					return _aegdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_aceefa.WorkbookProtection = NewCT_WorkbookProtection()
				if _gdefa := d.DecodeElement(_aceefa.WorkbookProtection, &_bccgbb); _gdefa != nil {
					return _gdefa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_aceefa.BookViews = NewCT_BookViews()
				if _bdfgf := d.DecodeElement(_aceefa.BookViews, &_bccgbb); _bdfgf != nil {
					return _bdfgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _gdecgd := d.DecodeElement(_aceefa.Sheets, &_bccgbb); _gdecgd != nil {
					return _gdecgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_aceefa.FunctionGroups = NewCT_FunctionGroups()
				if _fbffd := d.DecodeElement(_aceefa.FunctionGroups, &_bccgbb); _fbffd != nil {
					return _fbffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_aceefa.ExternalReferences = NewCT_ExternalReferences()
				if _acdab := d.DecodeElement(_aceefa.ExternalReferences, &_bccgbb); _acdab != nil {
					return _acdab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_aceefa.DefinedNames = NewCT_DefinedNames()
				if _bedgc := d.DecodeElement(_aceefa.DefinedNames, &_bccgbb); _bedgc != nil {
					return _bedgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_aceefa.CalcPr = NewCT_CalcPr()
				if _aedcb := d.DecodeElement(_aceefa.CalcPr, &_bccgbb); _aedcb != nil {
					return _aedcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_aceefa.OleSize = NewCT_OleSize()
				if _bcaeg := d.DecodeElement(_aceefa.OleSize, &_bccgbb); _bcaeg != nil {
					return _bcaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_aceefa.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _deebb := d.DecodeElement(_aceefa.CustomWorkbookViews, &_bccgbb); _deebb != nil {
					return _deebb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_aceefa.PivotCaches = NewCT_PivotCaches()
				if _aabfbc := d.DecodeElement(_aceefa.PivotCaches, &_bccgbb); _aabfbc != nil {
					return _aabfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_aceefa.SmartTagPr = NewCT_SmartTagPr()
				if _cfecfa := d.DecodeElement(_aceefa.SmartTagPr, &_bccgbb); _cfecfa != nil {
					return _cfecfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_aceefa.SmartTagTypes = NewCT_SmartTagTypes()
				if _fcdbc := d.DecodeElement(_aceefa.SmartTagTypes, &_bccgbb); _fcdbc != nil {
					return _fcdbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_aceefa.WebPublishing = NewCT_WebPublishing()
				if _ecegcf := d.DecodeElement(_aceefa.WebPublishing, &_bccgbb); _ecegcf != nil {
					return _ecegcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_eggfc := NewCT_FileRecoveryPr()
				if _fcadb := d.DecodeElement(_eggfc, &_bccgbb); _fcadb != nil {
					return _fcadb
				}
				_aceefa.FileRecoveryPr = append(_aceefa.FileRecoveryPr, _eggfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_aceefa.WebPublishObjects = NewCT_WebPublishObjects()
				if _daggg := d.DecodeElement(_aceefa.WebPublishObjects, &_bccgbb); _daggg != nil {
					return _daggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aceefa.ExtLst = NewCT_ExtensionList()
				if _ebfegg := d.DecodeElement(_aceefa.ExtLst, &_bccgbb); _ebfegg != nil {
					return _ebfegg
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _bccgbb.Name)
				if _cgefa := d.Skip(); _cgefa != nil {
					return _cgefa
				}
			}
		case _b.EndElement:
			break _dbadd
		case _b.CharData:
		}
	}
	return nil
}
func (_eefc *CT_MetadataStringIndex) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _f.Sprintf("\u0025\u0076", _eefc.XAttr)})
	if _eefc.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefc.SAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebgdf *CT_ExternalLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfeba:
	for {
		_ecdaa, _afcgf := d.Token()
		if _afcgf != nil {
			return _afcgf
		}
		switch _ddccf := _ecdaa.(type) {
		case _b.StartElement:
			switch _ddccf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_ebgdf.Choice = NewCT_ExternalLinkChoice()
				if _adgdcg := d.DecodeElement(&_ebgdf.Choice.ExternalBook, &_ddccf); _adgdcg != nil {
					return _adgdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_ebgdf.Choice = NewCT_ExternalLinkChoice()
				if _caafg := d.DecodeElement(&_ebgdf.Choice.DdeLink, &_ddccf); _caafg != nil {
					return _caafg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_ebgdf.Choice = NewCT_ExternalLinkChoice()
				if _ecdg := d.DecodeElement(&_ebgdf.Choice.OleLink, &_ddccf); _ecdg != nil {
					return _ecdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebgdf.ExtLst = NewCT_ExtensionList()
				if _cdgb := d.DecodeElement(_ebgdf.ExtLst, &_ddccf); _cdgb != nil {
					return _cdgb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _ddccf.Name)
				if _ecbfa := d.Skip(); _ecbfa != nil {
					return _ecbfa
				}
			}
		case _b.EndElement:
			break _bfeba
		case _b.CharData:
		}
	}
	return nil
}
func (_gfebc *CT_QueryTableFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfcce := range start.Attr {
		if _bfcce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbaf, _bdaaa := _e.ParseUint(_bfcce.Value, 10, 32)
			if _bdaaa != nil {
				return _bdaaa
			}
			_dddbd := uint32(_cbaf)
			_gfebc.CountAttr = &_dddbd
			continue
		}
	}
_fcaaa:
	for {
		_dgccg, _adgbbf := d.Token()
		if _adgbbf != nil {
			return _adgbbf
		}
		switch _eeaea := _dgccg.(type) {
		case _b.StartElement:
			switch _eeaea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_adfbd := NewCT_QueryTableField()
				if _ffcfc := d.DecodeElement(_adfbd, &_eeaea); _ffcfc != nil {
					return _ffcfc
				}
				_gfebc.QueryTableField = append(_gfebc.QueryTableField, _adfbd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061bl\u0065\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _eeaea.Name)
				if _aacaba := d.Skip(); _aacaba != nil {
					return _aacaba
				}
			}
		case _b.EndElement:
			break _fcaaa
		case _b.CharData:
		}
	}
	return nil
}

type CT_MergeCell struct {

	// Reference
	RefAttr string
}

// ValidateWithPath validates the CT_RevisionQueryTableField and its children, prefixing error messages with path
func (_bgdeac *CT_RevisionQueryTableField) ValidateWithPath(path string) error { return nil }
func (_fcgce *CT_ExternalSheetData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fcgce.SheetIdAttr)})
	if _fcgce.RefreshErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fcgce.RefreshErrorAttr))})
	}
	e.EncodeToken(start)
	if _fcgce.Row != nil {
		_cead := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _dcdaa := range _fcgce.Row {
			e.EncodeElement(_dcdaa, _cead)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DataConsolidateFunction byte
type CT_CustomChartsheetViews struct {

	// Custom Chart Sheet View
	CustomSheetView []*CT_CustomChartsheetView
}

func NewVolTypes() *VolTypes {
	_eeccb := &VolTypes{}
	_eeccb.CT_VolTypes = *NewCT_VolTypes()
	return _eeccb
}

type CT_MdxMemeberProp struct {

	// Member Unique Name Index
	NAttr uint32

	// Property Name Index
	NpAttr uint32
}

func (_adba *CT_DataConsolidate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adba.FunctionAttr != ST_DataConsolidateFunctionUnset {
		_agdbd, _ccbc := _adba.FunctionAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"})
		if _ccbc != nil {
			return _ccbc
		}
		start.Attr = append(start.Attr, _agdbd)
	}
	if _adba.StartLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adba.StartLabelsAttr))})
	}
	if _adba.LeftLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adba.LeftLabelsAttr))})
	}
	if _adba.TopLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adba.TopLabelsAttr))})
	}
	if _adba.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_adba.LinkAttr))})
	}
	e.EncodeToken(start)
	if _adba.DataRefs != nil {
		_ecgcb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}}
		e.EncodeElement(_adba.DataRefs, _ecgcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotHierarchies and its children, prefixing error messages with path
func (_geaaf *CT_PivotHierarchies) ValidateWithPath(path string) error {
	for _cbcfc, _cadad := range _geaaf.PivotHierarchy {
		if _cbdbf := _cadad.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _cbcfc)); _cbdbf != nil {
			return _cbdbf
		}
	}
	return nil
}

// Validate validates the CT_CacheHierarchy and its children
func (_cegd *CT_CacheHierarchy) Validate() error {
	return _cegd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}
func (_deacec ST_CfvoType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_deacec.String(), start)
}
func NewCT_Color() *CT_Color                     { _agefb := &CT_Color{}; return _agefb }
func NewCT_ChartsheetViews() *CT_ChartsheetViews { _aeeef := &CT_ChartsheetViews{}; return _aeeef }

// Validate validates the CT_ExternalBook and its children
func (_faac *CT_ExternalBook) Validate() error {
	return _faac.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b")
}
func (_dgbfg *CT_MdxTuple) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgbfg.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_dgbfg.CAttr)})
	}
	if _dgbfg.CtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dgbfg.CtAttr)})
	}
	if _dgbfg.SiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_dgbfg.SiAttr)})
	}
	if _dgbfg.FiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_dgbfg.FiAttr)})
	}
	if _dgbfg.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_dgbfg.BcAttr)})
	}
	if _dgbfg.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_dgbfg.FcAttr)})
	}
	if _dgbfg.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dgbfg.IAttr))})
	}
	if _dgbfg.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dgbfg.UAttr))})
	}
	if _dgbfg.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dgbfg.StAttr))})
	}
	if _dgbfg.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dgbfg.BAttr))})
	}
	e.EncodeToken(start)
	if _dgbfg.N != nil {
		_bbcdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _egcb := range _dgbfg.N {
			e.EncodeElement(_egcb, _bbcdc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Fills struct {

	// Fill Count
	CountAttr *uint32

	// Fill
	Fill []*CT_Fill
}

func (_bafgf *CT_Parameter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbbfag := range start.Attr {
		if _gbbfag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edece, _ffdfb := _gbbfag.Value, error(nil)
			if _ffdfb != nil {
				return _ffdfb
			}
			_bafgf.NameAttr = &_edece
			continue
		}
		if _gbbfag.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_addbg, _bdgega := _e.ParseInt(_gbbfag.Value, 10, 32)
			if _bdgega != nil {
				return _bdgega
			}
			_gfbcc := int32(_addbg)
			_bafgf.SqlTypeAttr = &_gfbcc
			continue
		}
		if _gbbfag.Name.Local == "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065" {
			_bafgf.ParameterTypeAttr.UnmarshalXMLAttr(_gbbfag)
			continue
		}
		if _gbbfag.Name.Local == "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065" {
			_badbfa, _faabd := _e.ParseBool(_gbbfag.Value)
			if _faabd != nil {
				return _faabd
			}
			_bafgf.RefreshOnChangeAttr = &_badbfa
			continue
		}
		if _gbbfag.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_edbcg, _edcf := _gbbfag.Value, error(nil)
			if _edcf != nil {
				return _edcf
			}
			_bafgf.PromptAttr = &_edbcg
			continue
		}
		if _gbbfag.Name.Local == "\u0062o\u006f\u006c\u0065\u0061\u006e" {
			_gfcfe, _aedbd := _e.ParseBool(_gbbfag.Value)
			if _aedbd != nil {
				return _aedbd
			}
			_bafgf.BooleanAttr = &_gfcfe
			continue
		}
		if _gbbfag.Name.Local == "\u0064\u006f\u0075\u0062\u006c\u0065" {
			_faacc, _beagb := _e.ParseFloat(_gbbfag.Value, 64)
			if _beagb != nil {
				return _beagb
			}
			_bafgf.DoubleAttr = &_faacc
			continue
		}
		if _gbbfag.Name.Local == "\u0069n\u0074\u0065\u0067\u0065\u0072" {
			_deafb, _cdfg := _e.ParseInt(_gbbfag.Value, 10, 32)
			if _cdfg != nil {
				return _cdfg
			}
			_bffgb := int32(_deafb)
			_bafgf.IntegerAttr = &_bffgb
			continue
		}
		if _gbbfag.Name.Local == "\u0073\u0074\u0072\u0069\u006e\u0067" {
			_gbca, _ebdffb := _gbbfag.Value, error(nil)
			if _ebdffb != nil {
				return _ebdffb
			}
			_bafgf.StringAttr = &_gbca
			continue
		}
		if _gbbfag.Name.Local == "\u0063\u0065\u006c\u006c" {
			_cddgc, _gacad := _gbbfag.Value, error(nil)
			if _gacad != nil {
				return _gacad
			}
			_bafgf.CellAttr = &_cddgc
			continue
		}
	}
	for {
		_bggc, _decfd := d.Token()
		if _decfd != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061r\u0061\u006d\u0065\u0074\u0065\u0072\u003a\u0020\u0025\u0073", _decfd)
		}
		if _bddbd, _facda := _bggc.(_b.EndElement); _facda && _bddbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efbcg *ST_WebSourceType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_efbcg = 0
	case "\u0073\u0068\u0065e\u0074":
		*_efbcg = 1
	case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
		*_efbcg = 2
	case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
		*_efbcg = 3
	case "\u0072\u0061\u006eg\u0065":
		*_efbcg = 4
	case "\u0063\u0068\u0061r\u0074":
		*_efbcg = 5
	case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
		*_efbcg = 6
	case "\u0071\u0075\u0065r\u0079":
		*_efbcg = 7
	case "\u006c\u0061\u0062e\u006c":
		*_efbcg = 8
	}
	return nil
}
func (_fgcdae *ST_PhoneticType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fggbb, _bcbgga := d.Token()
	if _bcbgga != nil {
		return _bcbgga
	}
	if _dfcafd, _bbbgfd := _fggbb.(_b.EndElement); _bbbgfd && _dfcafd.Name == start.Name {
		*_fgcdae = 1
		return nil
	}
	if _efcfa, _bfefeg := _fggbb.(_b.CharData); !_bfefeg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fggbb)
	} else {
		switch string(_efcfa) {
		case "":
			*_fgcdae = 0
		case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_fgcdae = 1
		case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_fgcdae = 2
		case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_fgcdae = 3
		case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
			*_fgcdae = 4
		}
	}
	_fggbb, _bcbgga = d.Token()
	if _bcbgga != nil {
		return _bcbgga
	}
	if _eagbb, _bdffec := _fggbb.(_b.EndElement); _bdffec && _eagbb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fggbb)
}
func NewCT_PivotTableStyle() *CT_PivotTableStyle { _ffegf := &CT_PivotTableStyle{}; return _ffegf }

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_ccddb *CT_GradientStop) ValidateWithPath(path string) error {
	if _dbedc := _ccddb.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _dbedc != nil {
		return _dbedc
	}
	return nil
}
func (_bagbc *CT_ControlPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bagbc.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.LockedAttr))})
	}
	if _bagbc.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.DefaultSizeAttr))})
	}
	if _bagbc.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.PrintAttr))})
	}
	if _bagbc.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.DisabledAttr))})
	}
	if _bagbc.RecalcAlwaysAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.RecalcAlwaysAttr))})
	}
	if _bagbc.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.UiObjectAttr))})
	}
	if _bagbc.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.AutoFillAttr))})
	}
	if _bagbc.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.AutoLineAttr))})
	}
	if _bagbc.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bagbc.AutoPictAttr))})
	}
	if _bagbc.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bagbc.MacroAttr)})
	}
	if _bagbc.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bagbc.AltTextAttr)})
	}
	if _bagbc.LinkedCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_bagbc.LinkedCellAttr)})
	}
	if _bagbc.ListFillRangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bagbc.ListFillRangeAttr)})
	}
	if _bagbc.CfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bagbc.CfAttr)})
	}
	if _bagbc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bagbc.IdAttr)})
	}
	e.EncodeToken(start)
	_dabf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_bagbc.Anchor, _dabf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_CfType byte

func (_fcbeda ST_GrowShrinkType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdeceg := _b.Attr{}
	_cdeceg.Name = name
	switch _fcbeda {
	case ST_GrowShrinkTypeUnset:
		_cdeceg.Value = ""
	case ST_GrowShrinkTypeInsertDelete:
		_cdeceg.Value = "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case ST_GrowShrinkTypeInsertClear:
		_cdeceg.Value = "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case ST_GrowShrinkTypeOverwriteClear:
		_cdeceg.Value = "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return _cdeceg, nil
}
func (_agbc *CT_OlapPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agbc.LocalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.LocalAttr))})
	}
	if _agbc.LocalConnectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_agbc.LocalConnectionAttr)})
	}
	if _agbc.LocalRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.LocalRefreshAttr))})
	}
	if _agbc.SendLocaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.SendLocaleAttr))})
	}
	if _agbc.RowDrillCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_agbc.RowDrillCountAttr)})
	}
	if _agbc.ServerFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.ServerFillAttr))})
	}
	if _agbc.ServerNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.ServerNumberFormatAttr))})
	}
	if _agbc.ServerFontAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.ServerFontAttr))})
	}
	if _agbc.ServerFontColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agbc.ServerFontColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OleLink struct {
	IdAttr string

	// Object Link Identifier
	ProgIdAttr string

	// Object Link Items
	OleItems *CT_OleItems
}

const (
	ST_AxisUnset      ST_Axis = 0
	ST_AxisAxisRow    ST_Axis = 1
	ST_AxisAxisCol    ST_Axis = 2
	ST_AxisAxisPage   ST_Axis = 3
	ST_AxisAxisValues ST_Axis = 4
)

type ST_DvAspect byte

// ValidateWithPath validates the CT_TextFields and its children, prefixing error messages with path
func (_gbdfea *CT_TextFields) ValidateWithPath(path string) error {
	for _gcbdd, _dfaeb := range _gbdfea.TextField {
		if _agefbd := _dfaeb.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0054\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _gcbdd)); _agefbd != nil {
			return _agefbd
		}
	}
	return nil
}
func (_ffbdac *QueryTable) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	return _ffbdac.CT_QueryTable.MarshalXML(e, start)
}
func (_bebaa ST_Axis) String() string {
	switch _bebaa {
	case 0:
		return ""
	case 1:
		return "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case 2:
		return "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case 3:
		return "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case 4:
		return "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}
func (_gdbegg *CT_XmlPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cggee := range start.Attr {
		if _cggee.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_dcfaaf, _daee := _e.ParseUint(_cggee.Value, 10, 32)
			if _daee != nil {
				return _daee
			}
			_gdbegg.MapIdAttr = uint32(_dcfaaf)
			continue
		}
		if _cggee.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_adfgc, _aecba := _cggee.Value, error(nil)
			if _aecba != nil {
				return _aecba
			}
			_gdbegg.XpathAttr = _adfgc
			continue
		}
		if _cggee.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_befcf, _bcaae := _cggee.Value, error(nil)
			if _bcaae != nil {
				return _bcaae
			}
			_gdbegg.XmlDataTypeAttr = _befcf
			continue
		}
	}
_fcgfc:
	for {
		_febd, _ccbed := d.Token()
		if _ccbed != nil {
			return _ccbed
		}
		switch _dagaeb := _febd.(type) {
		case _b.StartElement:
			switch _dagaeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbegg.ExtLst = NewCT_ExtensionList()
				if _eagdca := d.DecodeElement(_gdbegg.ExtLst, &_dagaeb); _eagdca != nil {
					return _eagdca
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072\u0020\u0025\u0076", _dagaeb.Name)
				if _cabac := d.Skip(); _cabac != nil {
					return _cabac
				}
			}
		case _b.EndElement:
			break _fcgfc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObjects and its children
func (_bdggf *CT_OleObjects) Validate() error {
	return _bdggf.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073")
}
func (_fgaagf ST_PivotAreaType) ValidateWithPath(path string) error {
	switch _fgaagf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgaagf))
	}
	return nil
}

// ValidateWithPath validates the CT_MdxMetadata and its children, prefixing error messages with path
func (_aaagb *CT_MdxMetadata) ValidateWithPath(path string) error {
	for _faabg, _gdfdc := range _aaagb.Mdx {
		if _efedd := _gdfdc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u0064\u0078\u005b\u0025\u0064\u005d", path, _faabg)); _efedd != nil {
			return _efedd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontName and its children, prefixing error messages with path
func (_cdgec *CT_FontName) ValidateWithPath(path string) error { return nil }
func NewCT_CustomWorkbookViews() *CT_CustomWorkbookViews {
	_bcade := &CT_CustomWorkbookViews{}
	return _bcade
}

type CT_Items struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field Item
	Item []*CT_Item
}

const (
	ST_DataValidationOperatorUnset              ST_DataValidationOperator = 0
	ST_DataValidationOperatorBetween            ST_DataValidationOperator = 1
	ST_DataValidationOperatorNotBetween         ST_DataValidationOperator = 2
	ST_DataValidationOperatorEqual              ST_DataValidationOperator = 3
	ST_DataValidationOperatorNotEqual           ST_DataValidationOperator = 4
	ST_DataValidationOperatorLessThan           ST_DataValidationOperator = 5
	ST_DataValidationOperatorLessThanOrEqual    ST_DataValidationOperator = 6
	ST_DataValidationOperatorGreaterThan        ST_DataValidationOperator = 7
	ST_DataValidationOperatorGreaterThanOrEqual ST_DataValidationOperator = 8
)

func (_fbbgd *CT_XStringElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaeda := range start.Attr {
		if _eaeda.Name.Local == "\u0076" {
			_gbaeaa, _fgdag := _eaeda.Value, error(nil)
			if _fgdag != nil {
				return _fgdag
			}
			_fbbgd.VAttr = _gbaeaa
			continue
		}
	}
	for {
		_eebaeb, _gggaec := d.Token()
		if _gggaec != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006c\u0065\u006d\u0065\u006e\u0074: \u0025\u0073", _gggaec)
		}
		if _effaa, _ccdfc := _eebaeb.(_b.EndElement); _ccdfc && _effaa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FontScheme struct {

	// Font Scheme
	ValAttr ST_FontScheme
}

func NewCT_PhoneticPr() *CT_PhoneticPr { _cfbcc := &CT_PhoneticPr{}; return _cfbcc }

// ValidateWithPath validates the CT_Parameter and its children, prefixing error messages with path
func (_gcdeg *CT_Parameter) ValidateWithPath(path string) error {
	if _edefe := _gcdeg.ParameterTypeAttr.ValidateWithPath(path + "\u002fP\u0061r\u0061\u006d\u0065\u0074\u0065r\u0054\u0079p\u0065\u0041\u0074\u0074\u0072"); _edefe != nil {
		return _edefe
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilter and its children, prefixing error messages with path
func (_ecae *CT_CustomFilter) ValidateWithPath(path string) error {
	if _dcafa := _ecae.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _dcafa != nil {
		return _dcafa
	}
	return nil
}

// Validate validates the CT_RangeSets and its children
func (_dfdgad *CT_RangeSets) Validate() error {
	return _dfdgad.ValidateWithPath("\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073")
}
func NewCT_CellProtection() *CT_CellProtection { _gfbae := &CT_CellProtection{}; return _gfbae }
func (_cbegfg *CT_TableColumns) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbegfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cbegfg.CountAttr)})
	}
	e.EncodeToken(start)
	_bfdgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e"}}
	for _, _fbdf := range _cbegfg.TableColumn {
		e.EncodeElement(_fbdf, _bfdgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eebbbg *ST_CfType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcgad, _gedcb := d.Token()
	if _gedcb != nil {
		return _gedcb
	}
	if _fgccb, _ddeab := _bcgad.(_b.EndElement); _ddeab && _fgccb.Name == start.Name {
		*_eebbbg = 1
		return nil
	}
	if _eddbdb, _cabacdc := _bcgad.(_b.CharData); !_cabacdc {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcgad)
	} else {
		switch string(_eddbdb) {
		case "":
			*_eebbbg = 0
		case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
			*_eebbbg = 1
		case "\u0063\u0065\u006c\u006c\u0049\u0073":
			*_eebbbg = 2
		case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
			*_eebbbg = 3
		case "\u0064a\u0074\u0061\u0042\u0061\u0072":
			*_eebbbg = 4
		case "\u0069c\u006f\u006e\u0053\u0065\u0074":
			*_eebbbg = 5
		case "\u0074\u006f\u00701\u0030":
			*_eebbbg = 6
		case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_eebbbg = 7
		case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_eebbbg = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_eebbbg = 9
		case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_eebbbg = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_eebbbg = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_eebbbg = 12
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_eebbbg = 13
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_eebbbg = 14
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_eebbbg = 15
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_eebbbg = 16
		case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
			*_eebbbg = 17
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_eebbbg = 18
		}
	}
	_bcgad, _gedcb = d.Token()
	if _gedcb != nil {
		return _gedcb
	}
	if _bcfbg, _afaac := _bcgad.(_b.EndElement); _afaac && _bcfbg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcgad)
}
func (_fgdadg ST_PageOrder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgdadg.String(), start)
}

type CT_CalcChain struct {

	// Cell
	C      []*CT_CalcCell
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PCDKPIs and its children
func (_gbeaf *CT_PCDKPIs) Validate() error {
	return _gbeaf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073")
}
func (_affgd *CT_DdeValue) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _affgd.TAttr != ST_DdeValueTypeUnset {
		_ccbfgc, _efadc := _affgd.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _efadc != nil {
			return _efadc
		}
		start.Attr = append(start.Attr, _ccbfgc)
	}
	e.EncodeToken(start)
	_daccd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c"}}
	_d.AddPreserveSpaceAttr(&_daccd, _affgd.Val)
	e.EncodeElement(_affgd.Val, _daccd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_WebPublishObjects() *CT_WebPublishObjects {
	_dddagf := &CT_WebPublishObjects{}
	return _dddagf
}

// ValidateWithPath validates the CT_RevisionCellChange and its children, prefixing error messages with path
func (_fgbc *CT_RevisionCellChange) ValidateWithPath(path string) error {
	if _fgbc.Oc != nil {
		if _ecgcbf := _fgbc.Oc.ValidateWithPath(path + "\u002f\u004f\u0063"); _ecgcbf != nil {
			return _ecgcbf
		}
	}
	if _faebf := _fgbc.Nc.ValidateWithPath(path + "\u002f\u004e\u0063"); _faebf != nil {
		return _faebf
	}
	if _fgbc.Odxf != nil {
		if _efgfd := _fgbc.Odxf.ValidateWithPath(path + "\u002f\u004f\u0064x\u0066"); _efgfd != nil {
			return _efgfd
		}
	}
	if _fgbc.Ndxf != nil {
		if _fgfg := _fgbc.Ndxf.ValidateWithPath(path + "\u002f\u004e\u0064x\u0066"); _fgfg != nil {
			return _fgfg
		}
	}
	if _fgbc.ExtLst != nil {
		if _bedde := _fgbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bedde != nil {
			return _bedde
		}
	}
	return nil
}
func NewCT_FileRecoveryPr() *CT_FileRecoveryPr { _facg := &CT_FileRecoveryPr{}; return _facg }
func (_eefcd *CT_RevisionComment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _eefcd.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", _eefcd.CellAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _eefcd.GuidAttr)})
	if _eefcd.ActionAttr != ST_RevisionActionUnset {
		_bacfga, _bebcg := _eefcd.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _bebcg != nil {
			return _bebcg
		}
		start.Attr = append(start.Attr, _bacfga)
	}
	if _eefcd.AlwaysShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcd.AlwaysShowAttr))})
	}
	if _eefcd.OldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcd.OldAttr))})
	}
	if _eefcd.HiddenRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcd.HiddenRowAttr))})
	}
	if _eefcd.HiddenColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eefcd.HiddenColumnAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, Value: _f.Sprintf("\u0025\u0076", _eefcd.AuthorAttr)})
	if _eefcd.OldLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h"}, Value: _f.Sprintf("\u0025\u0076", *_eefcd.OldLengthAttr)})
	}
	if _eefcd.NewLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h"}, Value: _f.Sprintf("\u0025\u0076", *_eefcd.NewLengthAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RevisionDefinedName() *CT_RevisionDefinedName {
	_aebga := &CT_RevisionDefinedName{}
	return _aebga
}
func (_bcggf ST_Comments) ValidateWithPath(path string) error {
	switch _bcggf {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcggf))
	}
	return nil
}

type CT_FunctionGroups struct {

	// Built-in Function Group Count
	BuiltInGroupCountAttr *uint32

	// Function Group
	FunctionGroup []*CT_FunctionGroup
}

func (_acee *CT_IntProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fafdec := range start.Attr {
		if _fafdec.Name.Local == "\u0076\u0061\u006c" {
			_fecfg, _gfeea := _e.ParseInt(_fafdec.Value, 10, 32)
			if _gfeea != nil {
				return _gfeea
			}
			_acee.ValAttr = int32(_fecfg)
			continue
		}
	}
	for {
		_ccddd, _dfgcf := d.Token()
		if _dfgcf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079:\u0020\u0025\u0073", _dfgcf)
		}
		if _fbcdd, _ggccg := _ccddd.(_b.EndElement); _ggccg && _fbcdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cagcc *CT_CustomFilters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebff := range start.Attr {
		if _ebff.Name.Local == "\u0061\u006e\u0064" {
			_fecb, _gddcb := _e.ParseBool(_ebff.Value)
			if _gddcb != nil {
				return _gddcb
			}
			_cagcc.AndAttr = &_fecb
			continue
		}
	}
_eddbg:
	for {
		_aaeb, _fafdd := d.Token()
		if _fafdd != nil {
			return _fafdd
		}
		switch _gcfa := _aaeb.(type) {
		case _b.StartElement:
			switch _gcfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_gdegg := NewCT_CustomFilter()
				if _feefa := d.DecodeElement(_gdegg, &_gcfa); _feefa != nil {
					return _feefa
				}
				_cagcc.CustomFilter = append(_cagcc.CustomFilter, _gdegg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025v", _gcfa.Name)
				if _eceac := d.Skip(); _eceac != nil {
					return _eceac
				}
			}
		case _b.EndElement:
			break _eddbg
		case _b.CharData:
		}
	}
	return nil
}

type CT_Connections struct {

	// Connection
	Connection []*CT_Connection
}

func (_egdfc ST_CellType) ValidateWithPath(path string) error {
	switch _egdfc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egdfc))
	}
	return nil
}
func (_fcdge *CT_TableStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agbbd := range start.Attr {
		if _agbbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efecfc, _cfbaa := _e.ParseUint(_agbbd.Value, 10, 32)
			if _cfbaa != nil {
				return _cfbaa
			}
			_edfaa := uint32(_efecfc)
			_fcdge.CountAttr = &_edfaa
			continue
		}
		if _agbbd.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065" {
			_daabbc, _gefagf := _agbbd.Value, error(nil)
			if _gefagf != nil {
				return _gefagf
			}
			_fcdge.DefaultTableStyleAttr = &_daabbc
			continue
		}
		if _agbbd.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065" {
			_fceaff, _bgcged := _agbbd.Value, error(nil)
			if _bgcged != nil {
				return _bgcged
			}
			_fcdge.DefaultPivotStyleAttr = &_fceaff
			continue
		}
	}
_gebeg:
	for {
		_dgdfa, _deddb := d.Token()
		if _deddb != nil {
			return _deddb
		}
		switch _aggag := _dgdfa.(type) {
		case _b.StartElement:
			switch _aggag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_afada := NewCT_TableStyle()
				if _gbecdf := d.DecodeElement(_afada, &_aggag); _gbecdf != nil {
					return _gbecdf
				}
				_fcdge.TableStyle = append(_fcdge.TableStyle, _afada)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074y\u006ce\u0073\u0020\u0025\u0076", _aggag.Name)
				if _dbdcd := d.Skip(); _dbdcd != nil {
					return _dbdcd
				}
			}
		case _b.EndElement:
			break _gebeg
		case _b.CharData:
		}
	}
	return nil
}
func (_cbccd *CT_Hyperlink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _cbccd.RefAttr)})
	if _cbccd.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbccd.IdAttr)})
	}
	if _cbccd.LocationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_cbccd.LocationAttr)})
	}
	if _cbccd.TooltipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_cbccd.TooltipAttr)})
	}
	if _cbccd.DisplayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_cbccd.DisplayAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffgad *CT_PageMargins) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _f.Sprintf("\u0025\u0076", _ffgad.LeftAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _f.Sprintf("\u0025\u0076", _ffgad.RightAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0076", _ffgad.TopAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _f.Sprintf("\u0025\u0076", _ffgad.BottomAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", _ffgad.HeaderAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006f\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", _ffgad.FooterAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_X() *CT_X { _abcfc := &CT_X{}; return _abcfc }

// Validate validates the CT_RevisionSheetRename and its children
func (_begada *CT_RevisionSheetRename) Validate() error {
	return _begada.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065")
}

// Validate validates the CT_PivotFilters and its children
func (_facada *CT_PivotFilters) Validate() error {
	return _facada.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_acfdg ST_ExternalConnectionType) String() string {
	switch _acfdg {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u0074\u0065\u0078\u0074"
	case 3:
		return "\u004d\u0044\u0059"
	case 4:
		return "\u0044\u004d\u0059"
	case 5:
		return "\u0059\u004d\u0044"
	case 6:
		return "\u004d\u0059\u0044"
	case 7:
		return "\u0044\u0059\u004d"
	case 8:
		return "\u0059\u0044\u004d"
	case 9:
		return "\u0073\u006b\u0069\u0070"
	case 10:
		return "\u0045\u004d\u0044"
	}
	return ""
}
func (_bffd *CT_Parameter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bffd.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.NameAttr)})
	}
	if _bffd.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.SqlTypeAttr)})
	}
	if _bffd.ParameterTypeAttr != ST_ParameterTypeUnset {
		_dgaeaf, _dceec := _bffd.ParameterTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065"})
		if _dceec != nil {
			return _dceec
		}
		start.Attr = append(start.Attr, _dgaeaf)
	}
	if _bffd.RefreshOnChangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffd.RefreshOnChangeAttr))})
	}
	if _bffd.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.PromptAttr)})
	}
	if _bffd.BooleanAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062o\u006f\u006c\u0065\u0061\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffd.BooleanAttr))})
	}
	if _bffd.DoubleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u006f\u0075\u0062\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.DoubleAttr)})
	}
	if _bffd.IntegerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0074\u0065\u0067\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.IntegerAttr)})
	}
	if _bffd.StringAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.StringAttr)})
	}
	if _bffd.CellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_bffd.CellAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_QueryTableRefresh struct {

	// Preserve Sort & Filter Layout
	PreserveSortFilterLayoutAttr *bool

	// Next Field Id Wrapped
	FieldIdWrappedAttr *bool

	// Headers In Last Refresh
	HeadersInLastRefreshAttr *bool

	// Minimum Refresh Version
	MinimumVersionAttr *uint8

	// Next field id
	NextIdAttr *uint32

	// Columns Left
	UnboundColumnsLeftAttr *uint32

	// Columns Right
	UnboundColumnsRightAttr *uint32

	// Query table fields
	QueryTableFields *CT_QueryTableFields

	// Deleted Fields
	QueryTableDeletedFields *CT_QueryTableDeletedFields

	// Sort State
	SortState *CT_SortState

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_defef *CT_WebPublishItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _defef.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_defef.CountAttr)})
	}
	e.EncodeToken(start)
	_fdgca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}}
	for _, _gbcf := range _defef.WebPublishItem {
		e.EncodeElement(_gbcf, _fdgca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellStyles and its children
func (_bdca *CT_CellStyles) Validate() error {
	return _bdca.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073")
}

const (
	ST_CellTypeUnset     ST_CellType = 0
	ST_CellTypeB         ST_CellType = 1
	ST_CellTypeN         ST_CellType = 2
	ST_CellTypeE         ST_CellType = 3
	ST_CellTypeS         ST_CellType = 4
	ST_CellTypeStr       ST_CellType = 5
	ST_CellTypeInlineStr ST_CellType = 6
)

func (_beadf *CT_WorkbookPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _beadf.Date1904Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.Date1904Attr))})
	}
	if _beadf.ShowObjectsAttr != ST_ObjectsUnset {
		_gegbg, _bgceb := _beadf.ShowObjectsAttr.MarshalXMLAttr(_b.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _bgceb != nil {
			return _bgceb
		}
		start.Attr = append(start.Attr, _gegbg)
	}
	if _beadf.ShowBorderUnselectedTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.ShowBorderUnselectedTablesAttr))})
	}
	if _beadf.FilterPrivacyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.FilterPrivacyAttr))})
	}
	if _beadf.PromptedSolutionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.PromptedSolutionsAttr))})
	}
	if _beadf.ShowInkAnnotationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.ShowInkAnnotationAttr))})
	}
	if _beadf.BackupFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.BackupFileAttr))})
	}
	if _beadf.SaveExternalLinkValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.SaveExternalLinkValuesAttr))})
	}
	if _beadf.UpdateLinksAttr != ST_UpdateLinksUnset {
		_fgbce, _ccdca := _beadf.UpdateLinksAttr.MarshalXMLAttr(_b.Name{Local: "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073"})
		if _ccdca != nil {
			return _ccdca
		}
		start.Attr = append(start.Attr, _fgbce)
	}
	if _beadf.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_beadf.CodeNameAttr)})
	}
	if _beadf.HidePivotFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.HidePivotFieldListAttr))})
	}
	if _beadf.ShowPivotChartFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.ShowPivotChartFilterAttr))})
	}
	if _beadf.AllowRefreshQueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.AllowRefreshQueryAttr))})
	}
	if _beadf.PublishItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.PublishItemsAttr))})
	}
	if _beadf.CheckCompatibilityAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.CheckCompatibilityAttr))})
	}
	if _beadf.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.AutoCompressPicturesAttr))})
	}
	if _beadf.RefreshAllConnectionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_beadf.RefreshAllConnectionsAttr))})
	}
	if _beadf.DefaultThemeVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_beadf.DefaultThemeVersionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MeasureDimensionMap() *CT_MeasureDimensionMap {
	_agbaa := &CT_MeasureDimensionMap{}
	return _agbaa
}
func (_cecadf ST_Visibility) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cecadf.String(), start)
}
func (_ffceb *CT_PageSetUpPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecbdd := range start.Attr {
		if _ecbdd.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_deacf, _eegac := _e.ParseBool(_ecbdd.Value)
			if _eegac != nil {
				return _eegac
			}
			_ffceb.AutoPageBreaksAttr = &_deacf
			continue
		}
		if _ecbdd.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_gcaea, _edce := _e.ParseBool(_ecbdd.Value)
			if _edce != nil {
				return _edce
			}
			_ffceb.FitToPageAttr = &_gcaea
			continue
		}
	}
	for {
		_agbda, _dgcgd := d.Token()
		if _dgcgd != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072:\u0020\u0025\u0073", _dgcgd)
		}
		if _efgb, _gaccbc := _agbda.(_b.EndElement); _gaccbc && _efgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggaecf *CT_TableParts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggaecf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ggaecf.CountAttr)})
	}
	e.EncodeToken(start)
	if _ggaecf.TablePart != nil {
		_aebc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074"}}
		for _, _dbdefa := range _ggaecf.TablePart {
			e.EncodeElement(_dbdefa, _aebc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbagg *CT_Set) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbagg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gbagg.CountAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0052\u0061\u006e\u006b"}, Value: _f.Sprintf("\u0025\u0076", _gbagg.MaxRankAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _gbagg.SetDefinitionAttr)})
	if _gbagg.SortTypeAttr != ST_SortTypeUnset {
		_ebdfg, _dfcda := _gbagg.SortTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _dfcda != nil {
			return _dfcda
		}
		start.Attr = append(start.Attr, _ebdfg)
	}
	if _gbagg.QueryFailedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbagg.QueryFailedAttr))})
	}
	e.EncodeToken(start)
	if _gbagg.Tpls != nil {
		_bgegb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _fgbbc := range _gbagg.Tpls {
			e.EncodeElement(_fgbbc, _bgegb)
		}
	}
	if _gbagg.SortByTuple != nil {
		_gfcbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u006f\u0072\u0074\u0042\u0079T\u0075\u0070\u006c\u0065"}}
		e.EncodeElement(_gbagg.SortByTuple, _gfcbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgfdg *CT_ChartsheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgfdg.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgfdg.TabSelectedAttr))})
	}
	if _cgfdg.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _f.Sprintf("\u0025\u0076", *_cgfdg.ZoomScaleAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cgfdg.WorkbookViewIdAttr)})
	if _cgfdg.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgfdg.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _cgfdg.ExtLst != nil {
		_dcbbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgfdg.ExtLst, _dcbbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the SingleXmlCells and its children
func (_ddfbc *SingleXmlCells) Validate() error {
	return _ddfbc.ValidateWithPath("\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}
func (_bc *AG_RevData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bc.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bc.RIdAttr)})
	}
	if _bc.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bc.UaAttr))})
	}
	if _bc.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bc.RaAttr))})
	}
	return nil
}

// ValidateWithPath validates the CT_GradientFill and its children, prefixing error messages with path
func (_gabbg *CT_GradientFill) ValidateWithPath(path string) error {
	if _bgaae := _gabbg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bgaae != nil {
		return _bgaae
	}
	for _cdggd, _efgfe := range _gabbg.Stop {
		if _added := _efgfe.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0053\u0074\u006f\u0070\u005b\u0025\u0064\u005d", path, _cdggd)); _added != nil {
			return _added
		}
	}
	return nil
}

type CT_PivotSelection struct {

	// Pane
	PaneAttr ST_Pane

	// Show Header
	ShowHeaderAttr *bool

	// Label
	LabelAttr *bool

	// Data Selection
	DataAttr *bool

	// Extendable
	ExtendableAttr *bool

	// Selection Count
	CountAttr *uint32

	// Axis
	AxisAttr ST_Axis

	// Dimension
	DimensionAttr *uint32

	// Start
	StartAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Active Row
	ActiveRowAttr *uint32

	// Active Column
	ActiveColAttr *uint32

	// Previous Row
	PreviousRowAttr *uint32

	// Previous Column Selection
	PreviousColAttr *uint32

	// Click Count
	ClickAttr *uint32
	IdAttr    *string

	// Pivot Area
	PivotArea *CT_PivotArea
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_bgb *CT_Boolean) ValidateWithPath(path string) error {
	for _eeb, _dae := range _bgb.X {
		if _dad := _dae.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _eeb)); _dad != nil {
			return _dad
		}
	}
	return nil
}
func NewCT_RevisionSheetRename() *CT_RevisionSheetRename {
	_fgacee := &CT_RevisionSheetRename{}
	return _fgacee
}

type ST_HtmlFmt byte

func (_fdcgcf ST_DataValidationType) String() string {
	switch _fdcgcf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u0068\u006fl\u0065"
	case 3:
		return "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case 4:
		return "\u006c\u0069\u0073\u0074"
	case 5:
		return "\u0064\u0061\u0074\u0065"
	case 6:
		return "\u0074\u0069\u006d\u0065"
	case 7:
		return "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case 8:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

// Validate validates the CT_TableParts and its children
func (_dcegd *CT_TableParts) Validate() error {
	return _dcegd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073")
}

type CT_CellAlignment struct {

	// Horizontal Alignment
	HorizontalAttr ST_HorizontalAlignment

	// Vertical Alignment
	VerticalAttr ST_VerticalAlignment

	// Text Rotation
	TextRotationAttr *uint8

	// Wrap Text
	WrapTextAttr *bool

	// Indent
	IndentAttr *uint32

	// Relative Indent
	RelativeIndentAttr *int32

	// Justify Last Line
	JustifyLastLineAttr *bool

	// Shrink To Fit
	ShrinkToFitAttr *bool

	// Reading Order
	ReadingOrderAttr *uint32
}

func (_deffa ST_BorderStyle) ValidateWithPath(path string) error {
	switch _deffa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deffa))
	}
	return nil
}
func (_dcdaab *CT_GradientStop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _dcdaab.PositionAttr)})
	e.EncodeToken(start)
	_abgfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_dcdaab.Color, _abgfg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Controls() *CT_Controls { _cecgcb := &CT_Controls{}; return _cecgcb }

// Validate validates the Worksheet and its children
func (_faddd *Worksheet) Validate() error {
	return _faddd.ValidateWithPath("\u0057o\u0072\u006b\u0073\u0068\u0065\u0065t")
}
func (_baffefb ST_Comments) String() string {
	switch _baffefb {
	case 0:
		return ""
	case 1:
		return "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case 2:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case 3:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return ""
}

type CT_PageField struct {

	// Field
	FldAttr int32

	// Item Index
	ItemAttr *uint32

	// OLAP Hierarchy Index
	HierAttr *int32

	// Hierarchy Unique Name
	NameAttr *string

	// Hierarchy Display Name
	CapAttr *string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cadeg *CT_GroupMember) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adafb := range start.Attr {
		if _adafb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_adggc, _cafeb := _adafb.Value, error(nil)
			if _cafeb != nil {
				return _cafeb
			}
			_cadeg.UniqueNameAttr = _adggc
			continue
		}
		if _adafb.Name.Local == "\u0067\u0072\u006fu\u0070" {
			_bebac, _bedff := _e.ParseBool(_adafb.Value)
			if _bedff != nil {
				return _bedff
			}
			_cadeg.GroupAttr = &_bebac
			continue
		}
	}
	for {
		_faacg, _afgebd := d.Token()
		if _afgebd != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072:\u0020\u0025\u0073", _afgebd)
		}
		if _dafgc, _gffc := _faacg.(_b.EndElement); _gffc && _dafgc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalcPr and its children, prefixing error messages with path
func (_fbeb *CT_CalcPr) ValidateWithPath(path string) error {
	if _bdfa := _fbeb.CalcModeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _bdfa != nil {
		return _bdfa
	}
	if _acfd := _fbeb.RefModeAttr.ValidateWithPath(path + "\u002f\u0052\u0065f\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _acfd != nil {
		return _acfd
	}
	return nil
}

// ValidateWithPath validates the CT_Member and its children, prefixing error messages with path
func (_bcafg *CT_Member) ValidateWithPath(path string) error { return nil }
func (_aee *CT_Authors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ed:
	for {
		_aaa, _cee := d.Token()
		if _cee != nil {
			return _cee
		}
		switch _eb := _aaa.(type) {
		case _b.StartElement:
			switch _eb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}:
				var _ff string
				if _dg := d.DecodeElement(&_ff, &_eb); _dg != nil {
					return _dg
				}
				_aee.Author = append(_aee.Author, _ff)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0074\u0068\u006f\u0072\u0073\u0020\u0025\u0076", _eb.Name)
				if _adg := d.Skip(); _adg != nil {
					return _adg
				}
			}
		case _b.EndElement:
			break _ed
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetPr struct {

	// Synch Horizontal
	SyncHorizontalAttr *bool

	// Synch Vertical
	SyncVerticalAttr *bool

	// Synch Reference
	SyncRefAttr *string

	// Transition Formula Evaluation
	TransitionEvaluationAttr *bool

	// Transition Formula Entry
	TransitionEntryAttr *bool

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string

	// Filter Mode
	FilterModeAttr *bool

	// Enable Conditional Formatting Calculations
	EnableFormatConditionsCalculationAttr *bool

	// Sheet Tab Color
	TabColor *CT_Color

	// Outline Properties
	OutlinePr *CT_OutlinePr

	// Page Setup Properties
	PageSetUpPr *CT_PageSetUpPr
}
type CT_SheetCalcPr struct {

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool
}
type CT_ProtectedRange struct {

	// Legacy Password
	PasswordAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Name
	NameAttr string

	// Security Descriptor
	SecurityDescriptorAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Security Descriptor
	SecurityDescriptor []string
}

func NewCT_Field() *CT_Field { _bbdgc := &CT_Field{}; return _bbdgc }
func (_debgd *ST_RefMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_debgd = 0
	case "\u0041\u0031":
		*_debgd = 1
	case "\u0052\u0031\u0043\u0031":
		*_debgd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_TableFormula and its children, prefixing error messages with path
func (_ecege *CT_TableFormula) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_AutoFilter and its children, prefixing error messages with path
func (_cbb *CT_AutoFilter) ValidateWithPath(path string) error {
	for _bbg, _be := range _cbb.FilterColumn {
		if _bdb := _be.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0046il\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u005b\u0025\u0064\u005d", path, _bbg)); _bdb != nil {
			return _bdb
		}
	}
	if _cbb.SortState != nil {
		if _ace := _cbb.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _ace != nil {
			return _ace
		}
	}
	if _cbb.ExtLst != nil {
		if _geba := _cbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geba != nil {
			return _geba
		}
	}
	return nil
}

type CT_Pane struct {

	// Horizontal Split Position
	XSplitAttr *float64

	// Vertical Split Position
	YSplitAttr *float64

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Active Pane
	ActivePaneAttr ST_Pane

	// Split State
	StateAttr ST_PaneState
}

// Validate validates the CT_SheetId and its children
func (_fgaeac *CT_SheetId) Validate() error {
	return _fgaeac.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064")
}

// ValidateWithPath validates the CT_VolTopicRef and its children, prefixing error messages with path
func (_baagb *CT_VolTopicRef) ValidateWithPath(path string) error { return nil }
func (_cabd *CT_Col) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", _cabd.MinAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _f.Sprintf("\u0025\u0076", _cabd.MaxAttr)})
	if _cabd.WidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u0064t\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_cabd.WidthAttr)})
	}
	if _cabd.StyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0079l\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cabd.StyleAttr)})
	}
	if _cabd.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cabd.HiddenAttr))})
	}
	if _cabd.BestFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062e\u0073\u0074\u0046\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cabd.BestFitAttr))})
	}
	if _cabd.CustomWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cabd.CustomWidthAttr))})
	}
	if _cabd.PhoneticAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cabd.PhoneticAttr))})
	}
	if _cabd.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_cabd.OutlineLevelAttr)})
	}
	if _cabd.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cabd.CollapsedAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CalcCell struct {

	// Cell Reference
	RAttr   *string
	RefAttr *string

	// Sheet Id
	IAttr *int32

	// Child Chain
	SAttr *bool

	// New Dependency Level
	LAttr *bool

	// New Thread
	TAttr *bool

	// Array
	AAttr *bool
}
type CT_CommentPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Alternative Text
	AltTextAttr *string

	// Text Horizontal Alignment
	TextHAlignAttr ST_TextHAlign

	// ext Vertical Alignment
	TextVAlignAttr ST_TextVAlign

	// Text Lock Flag
	LockTextAttr *bool

	// Far East Alignment Flag
	JustLastXAttr *bool

	// Automatic Text Scaling Flag
	AutoScaleAttr *bool
	Anchor        *CT_ObjectAnchor
}

func (_dagag ST_SortMethod) String() string {
	switch _dagag {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072\u006f\u006b\u0065"
	case 2:
		return "\u0070\u0069\u006e\u0059\u0069\u006e"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// Validate validates the CT_CustomChartsheetViews and its children
func (_gedfe *CT_CustomChartsheetViews) Validate() error {
	return _gedfe.ValidateWithPath("\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

type CT_ObjectAnchor struct {

	// Move With Cells
	MoveWithCellsAttr *bool

	// Size With Cells
	SizeWithCellsAttr *bool
	From              *_a.From
	To                *_a.To
}
type CT_Reviewed struct {

	// revision Id
	RIdAttr uint32
}

func NewCT_Selection() *CT_Selection { _afafb := &CT_Selection{}; return _afafb }
func (_aegg *CT_CustomWorkbookView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aegg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gdfa := range start.Attr {
		if _gdfa.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_bfgc, _bagd := _e.ParseBool(_gdfa.Value)
			if _bagd != nil {
				return _bagd
			}
			_aegg.ShowVerticalScrollAttr = &_bfgc
			continue
		}
		if _gdfa.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_cbabe, _fcff := _e.ParseBool(_gdfa.Value)
			if _fcff != nil {
				return _fcff
			}
			_aegg.ShowSheetTabsAttr = &_cbabe
			continue
		}
		if _gdfa.Name.Local == "\u0067\u0075\u0069\u0064" {
			_gbea, _fcde := _gdfa.Value, error(nil)
			if _fcde != nil {
				return _fcde
			}
			_aegg.GuidAttr = _gbea
			continue
		}
		if _gdfa.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_fggge, _ebfeg := _e.ParseInt(_gdfa.Value, 10, 32)
			if _ebfeg != nil {
				return _ebfeg
			}
			_abbb := int32(_fggge)
			_aegg.XWindowAttr = &_abbb
			continue
		}
		if _gdfa.Name.Local == "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_affa, _cdgd := _e.ParseUint(_gdfa.Value, 10, 32)
			if _cdgd != nil {
				return _cdgd
			}
			_efge := uint32(_affa)
			_aegg.MergeIntervalAttr = &_efge
			continue
		}
		if _gdfa.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_fbgf, _caeg := _e.ParseInt(_gdfa.Value, 10, 32)
			if _caeg != nil {
				return _caeg
			}
			_aeecb := int32(_fbgf)
			_aegg.YWindowAttr = &_aeecb
			continue
		}
		if _gdfa.Name.Local == "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063" {
			_edfe, _cbgb := _e.ParseBool(_gdfa.Value)
			if _cbgb != nil {
				return _cbgb
			}
			_aegg.OnlySyncAttr = &_edfe
			continue
		}
		if _gdfa.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_fdada, _bgad := _e.ParseUint(_gdfa.Value, 10, 32)
			if _bgad != nil {
				return _bgad
			}
			_aegg.WindowWidthAttr = uint32(_fdada)
			continue
		}
		if _gdfa.Name.Local == "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073" {
			_edgf, _fcegb := _e.ParseBool(_gdfa.Value)
			if _fcegb != nil {
				return _fcegb
			}
			_aegg.IncludePrintSettingsAttr = &_edgf
			continue
		}
		if _gdfa.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_cgag, _dfebg := _e.ParseUint(_gdfa.Value, 10, 32)
			if _dfebg != nil {
				return _dfebg
			}
			_aegg.WindowHeightAttr = uint32(_cgag)
			continue
		}
		if _gdfa.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_gdfbe, _abddg := _e.ParseUint(_gdfa.Value, 10, 32)
			if _abddg != nil {
				return _abddg
			}
			_acdfb := uint32(_gdfbe)
			_aegg.TabRatioAttr = &_acdfb
			continue
		}
		if _gdfa.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072" {
			_adec, _gaadf := _e.ParseBool(_gdfa.Value)
			if _gaadf != nil {
				return _gaadf
			}
			_aegg.ShowFormulaBarAttr = &_adec
			continue
		}
		if _gdfa.Name.Local == "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e" {
			_ffcfg, _cbfa := _e.ParseBool(_gdfa.Value)
			if _cbfa != nil {
				return _cbfa
			}
			_aegg.ChangesSavedWinAttr = &_ffcfg
			continue
		}
		if _gdfa.Name.Local == "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d" {
			_dcge, _ceda := _e.ParseBool(_gdfa.Value)
			if _ceda != nil {
				return _ceda
			}
			_aegg.MaximizedAttr = &_dcge
			continue
		}
		if _gdfa.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_aegg.ShowCommentsAttr.UnmarshalXMLAttr(_gdfa)
			continue
		}
		if _gdfa.Name.Local == "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065" {
			_egged, _fdgf := _e.ParseBool(_gdfa.Value)
			if _fdgf != nil {
				return _fdgf
			}
			_aegg.AutoUpdateAttr = &_egged
			continue
		}
		if _gdfa.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_gdcfb, _eada := _e.ParseUint(_gdfa.Value, 10, 32)
			if _eada != nil {
				return _eada
			}
			_aegg.ActiveSheetIdAttr = uint32(_gdcfb)
			continue
		}
		if _gdfa.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_gega, _gfdaa := _e.ParseBool(_gdfa.Value)
			if _gfdaa != nil {
				return _gfdaa
			}
			_aegg.ShowHorizontalScrollAttr = &_gega
			continue
		}
		if _gdfa.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072" {
			_fbbbg, _adcca := _e.ParseBool(_gdfa.Value)
			if _adcca != nil {
				return _adcca
			}
			_aegg.ShowStatusbarAttr = &_fbbbg
			continue
		}
		if _gdfa.Name.Local == "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077" {
			_dgabd, _gegcd := _e.ParseBool(_gdfa.Value)
			if _gegcd != nil {
				return _gegcd
			}
			_aegg.PersonalViewAttr = &_dgabd
			continue
		}
		if _gdfa.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_edccg, _dgbc := _e.ParseBool(_gdfa.Value)
			if _dgbc != nil {
				return _dgbc
			}
			_aegg.MinimizedAttr = &_edccg
			continue
		}
		if _gdfa.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_aegg.ShowObjectsAttr.UnmarshalXMLAttr(_gdfa)
			continue
		}
		if _gdfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fegb, _dbac := _gdfa.Value, error(nil)
			if _dbac != nil {
				return _dbac
			}
			_aegg.NameAttr = _fegb
			continue
		}
		if _gdfa.Name.Local == "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c" {
			_ccfe, _fada := _e.ParseBool(_gdfa.Value)
			if _fada != nil {
				return _fada
			}
			_aegg.IncludeHiddenRowColAttr = &_ccfe
			continue
		}
	}
_gdace:
	for {
		_ccgb, _cgfac := d.Token()
		if _cgfac != nil {
			return _cgfac
		}
		switch _eaff := _ccgb.(type) {
		case _b.StartElement:
			switch _eaff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aegg.ExtLst = NewCT_ExtensionList()
				if _fcefc := d.DecodeElement(_aegg.ExtLst, &_eaff); _fcefc != nil {
					return _fcefc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _eaff.Name)
				if _adff := d.Skip(); _adff != nil {
					return _adff
				}
			}
		case _b.EndElement:
			break _gdace
		case _b.CharData:
		}
	}
	return nil
}

type ST_MdxSetOrder byte

func (_bbbeeg ST_DynamicFilterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbbeeg.String(), start)
}

// Validate validates the CT_Border and its children
func (_ddbf *CT_Border) Validate() error {
	return _ddbf.ValidateWithPath("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r")
}

// Validate validates the CT_PageSetUpPr and its children
func (_bafaa *CT_PageSetUpPr) Validate() error {
	return _bafaa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072")
}

const (
	ST_FieldSortTypeUnset      ST_FieldSortType = 0
	ST_FieldSortTypeManual     ST_FieldSortType = 1
	ST_FieldSortTypeAscending  ST_FieldSortType = 2
	ST_FieldSortTypeDescending ST_FieldSortType = 3
)

// ValidateWithPath validates the CT_Hyperlinks and its children, prefixing error messages with path
func (_feaee *CT_Hyperlinks) ValidateWithPath(path string) error {
	for _ebgfe, _dcedb := range _feaee.Hyperlink {
		if _dfac := _dcedb.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0048\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u005b\u0025\u0064\u005d", path, _ebgfe)); _dfac != nil {
			return _dfac
		}
	}
	return nil
}

type CT_Schema struct {

	// Schema ID
	IDAttr string

	// Schema Reference
	SchemaRefAttr *string

	// Schema Root Namespace
	NamespaceAttr *string

	// Schema Language
	SchemaLanguageAttr *string
	Any                _d.Any
}

func NewCT_DataRefs() *CT_DataRefs { _ffdge := &CT_DataRefs{}; return _ffdge }

// Validate validates the Workbook and its children
func (_bbdgd *Workbook) Validate() error {
	return _bbdgd.ValidateWithPath("\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

// Validate validates the CT_FutureMetadata and its children
func (_degcf *CT_FutureMetadata) Validate() error {
	return _degcf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}
func (_fgg *CT_BookView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceeg := range start.Attr {
		if _ceeg.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_ca, _bdg := _e.ParseUint(_ceeg.Value, 10, 32)
			if _bdg != nil {
				return _bdg
			}
			_da := uint32(_ca)
			_fgg.WindowWidthAttr = &_da
			continue
		}
		if _ceeg.Name.Local == "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079" {
			_fgg.VisibilityAttr.UnmarshalXMLAttr(_ceeg)
			continue
		}
		if _ceeg.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_abf, _fedc := _e.ParseBool(_ceeg.Value)
			if _fedc != nil {
				return _fedc
			}
			_fgg.ShowHorizontalScrollAttr = &_abf
			continue
		}
		if _ceeg.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_dga, _bbec := _e.ParseBool(_ceeg.Value)
			if _bbec != nil {
				return _bbec
			}
			_fgg.ShowVerticalScrollAttr = &_dga
			continue
		}
		if _ceeg.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_efg, _aaf := _e.ParseBool(_ceeg.Value)
			if _aaf != nil {
				return _aaf
			}
			_fgg.ShowSheetTabsAttr = &_efg
			continue
		}
		if _ceeg.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_ffce, _fbc := _e.ParseInt(_ceeg.Value, 10, 32)
			if _fbc != nil {
				return _fbc
			}
			_bcce := int32(_ffce)
			_fgg.XWindowAttr = &_bcce
			continue
		}
		if _ceeg.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_dbgf, _efa := _e.ParseInt(_ceeg.Value, 10, 32)
			if _efa != nil {
				return _efa
			}
			_abd := int32(_dbgf)
			_fgg.YWindowAttr = &_abd
			continue
		}
		if _ceeg.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_fee, _gdgd := _e.ParseBool(_ceeg.Value)
			if _gdgd != nil {
				return _gdgd
			}
			_fgg.MinimizedAttr = &_fee
			continue
		}
		if _ceeg.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_fgc, _gef := _e.ParseUint(_ceeg.Value, 10, 32)
			if _gef != nil {
				return _gef
			}
			_cge := uint32(_fgc)
			_fgg.WindowHeightAttr = &_cge
			continue
		}
		if _ceeg.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_gda, _dbe := _e.ParseUint(_ceeg.Value, 10, 32)
			if _dbe != nil {
				return _dbe
			}
			_ggd := uint32(_gda)
			_fgg.TabRatioAttr = &_ggd
			continue
		}
		if _ceeg.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074" {
			_ceba, _ebe := _e.ParseUint(_ceeg.Value, 10, 32)
			if _ebe != nil {
				return _ebe
			}
			_fdd := uint32(_ceba)
			_fgg.FirstSheetAttr = &_fdd
			continue
		}
		if _ceeg.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b" {
			_adcc, _gad := _e.ParseUint(_ceeg.Value, 10, 32)
			if _gad != nil {
				return _gad
			}
			_dedg := uint32(_adcc)
			_fgg.ActiveTabAttr = &_dedg
			continue
		}
		if _ceeg.Name.Local == "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067" {
			_afg, _cda := _e.ParseBool(_ceeg.Value)
			if _cda != nil {
				return _cda
			}
			_fgg.AutoFilterDateGroupingAttr = &_afg
			continue
		}
	}
_ccc:
	for {
		_afde, _dgac := d.Token()
		if _dgac != nil {
			return _dgac
		}
		switch _eaac := _afde.(type) {
		case _b.StartElement:
			switch _eaac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgg.ExtLst = NewCT_ExtensionList()
				if _cdc := d.DecodeElement(_fgg.ExtLst, &_eaac); _cdc != nil {
					return _cdc
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _eaac.Name)
				if _ddff := d.Skip(); _ddff != nil {
					return _ddff
				}
			}
		case _b.EndElement:
			break _ccc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishing and its children, prefixing error messages with path
func (_eabbbc *CT_WebPublishing) ValidateWithPath(path string) error {
	if _efbdeg := _eabbbc.TargetScreenSizeAttr.ValidateWithPath(path + "/\u0054\u0061\u0072\u0067et\u0053c\u0072\u0065\u0065\u006e\u0053i\u007a\u0065\u0041\u0074\u0074\u0072"); _efbdeg != nil {
		return _efbdeg
	}
	return nil
}
func (_eedee *CalcChain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ac\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e"
	return _eedee.CT_CalcChain.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_ExternalRow and its children, prefixing error messages with path
func (_aafdc *CT_ExternalRow) ValidateWithPath(path string) error {
	for _ggdea, _geab := range _aafdc.Cell {
		if _gaee := _geab.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _ggdea)); _gaee != nil {
			return _gaee
		}
	}
	return nil
}
func NewCT_ColorScale() *CT_ColorScale   { _cbge := &CT_ColorScale{}; return _cbge }
func NewCT_FileSharing() *CT_FileSharing { _cbfbb := &CT_FileSharing{}; return _cbfbb }
func (_aabf *CT_Filter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aabf.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_aabf.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupLevels() *CT_GroupLevels { _cfebb := &CT_GroupLevels{}; return _cfebb }
func (_gbgdd *ST_DynamicFilterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egegb, _cdefda := d.Token()
	if _cdefda != nil {
		return _cdefda
	}
	if _bcaba, _eeggf := _egegb.(_b.EndElement); _eeggf && _bcaba.Name == start.Name {
		*_gbgdd = 1
		return nil
	}
	if _daeed, _degbf := _egegb.(_b.CharData); !_degbf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egegb)
	} else {
		switch string(_daeed) {
		case "":
			*_gbgdd = 0
		case "\u006e\u0075\u006c\u006c":
			*_gbgdd = 1
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_gbgdd = 2
		case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_gbgdd = 3
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_gbgdd = 4
		case "\u0074\u006f\u0064a\u0079":
			*_gbgdd = 5
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_gbgdd = 6
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_gbgdd = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_gbgdd = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_gbgdd = 9
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_gbgdd = 10
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_gbgdd = 11
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_gbgdd = 12
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_gbgdd = 13
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_gbgdd = 14
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_gbgdd = 15
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_gbgdd = 16
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_gbgdd = 17
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_gbgdd = 18
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_gbgdd = 19
		case "\u0051\u0031":
			*_gbgdd = 20
		case "\u0051\u0032":
			*_gbgdd = 21
		case "\u0051\u0033":
			*_gbgdd = 22
		case "\u0051\u0034":
			*_gbgdd = 23
		case "\u004d\u0031":
			*_gbgdd = 24
		case "\u004d\u0032":
			*_gbgdd = 25
		case "\u004d\u0033":
			*_gbgdd = 26
		case "\u004d\u0034":
			*_gbgdd = 27
		case "\u004d\u0035":
			*_gbgdd = 28
		case "\u004d\u0036":
			*_gbgdd = 29
		case "\u004d\u0037":
			*_gbgdd = 30
		case "\u004d\u0038":
			*_gbgdd = 31
		case "\u004d\u0039":
			*_gbgdd = 32
		case "\u004d\u0031\u0030":
			*_gbgdd = 33
		case "\u004d\u0031\u0031":
			*_gbgdd = 34
		case "\u004d\u0031\u0032":
			*_gbgdd = 35
		}
	}
	_egegb, _cdefda = d.Token()
	if _cdefda != nil {
		return _cdefda
	}
	if _abgfcf, _adega := _egegb.(_b.EndElement); _adega && _abgfcf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egegb)
}
func NewCT_VolTopicRef() *CT_VolTopicRef { _fagbe := &CT_VolTopicRef{}; return _fagbe }
func (_abfbad ST_PaneState) String() string {
	switch _abfbad {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070\u006ci\u0074"
	case 2:
		return "\u0066\u0072\u006f\u007a\u0065\u006e"
	case 3:
		return "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return ""
}

// Validate validates the Headers and its children
func (_efbdf *Headers) Validate() error {
	return _efbdf.ValidateWithPath("\u0048e\u0061\u0064\u0065\u0072\u0073")
}

type CT_Color struct {

	// Automatic
	AutoAttr *bool

	// Index
	IndexedAttr *uint32

	// Alpha Red Green Blue Color Value
	RgbAttr *string

	// Theme Color
	ThemeAttr *uint32

	// Tint
	TintAttr *float64
}

func (_feede *CT_Revisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_acffbe:
	for {
		_dccbc, _agdda := d.Token()
		if _agdda != nil {
			return _agdda
		}
		switch _ccfb := _dccbc.(type) {
		case _b.StartElement:
			switch _ccfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_aacdef := NewCT_RevisionRowColumn()
				if _gceegc := d.DecodeElement(_aacdef, &_ccfb); _gceegc != nil {
					return _gceegc
				}
				_feede.Rrc = append(_feede.Rrc, _aacdef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_gcfffd := NewCT_RevisionMove()
				if _ceafg := d.DecodeElement(_gcfffd, &_ccfb); _ceafg != nil {
					return _ceafg
				}
				_feede.Rm = append(_feede.Rm, _gcfffd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_egeff := NewCT_RevisionCustomView()
				if _bdgcdd := d.DecodeElement(_egeff, &_ccfb); _bdgcdd != nil {
					return _bdgcdd
				}
				_feede.Rcv = append(_feede.Rcv, _egeff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_eabdb := NewCT_RevisionSheetRename()
				if _fgbeeb := d.DecodeElement(_eabdb, &_ccfb); _fgbeeb != nil {
					return _fgbeeb
				}
				_feede.Rsnm = append(_feede.Rsnm, _eabdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_aabcce := NewCT_RevisionInsertSheet()
				if _bccfc := d.DecodeElement(_aabcce, &_ccfb); _bccfc != nil {
					return _bccfc
				}
				_feede.Ris = append(_feede.Ris, _aabcce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_agded := NewCT_RevisionCellChange()
				if _eeccgf := d.DecodeElement(_agded, &_ccfb); _eeccgf != nil {
					return _eeccgf
				}
				_feede.Rcc = append(_feede.Rcc, _agded)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_decfe := NewCT_RevisionFormatting()
				if _afacf := d.DecodeElement(_decfe, &_ccfb); _afacf != nil {
					return _afacf
				}
				_feede.Rfmt = append(_feede.Rfmt, _decfe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_acedc := NewCT_RevisionAutoFormatting()
				if _fbgeba := d.DecodeElement(_acedc, &_ccfb); _fbgeba != nil {
					return _fbgeba
				}
				_feede.Raf = append(_feede.Raf, _acedc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_ddagba := NewCT_RevisionDefinedName()
				if _eabbg := d.DecodeElement(_ddagba, &_ccfb); _eabbg != nil {
					return _eabbg
				}
				_feede.Rdn = append(_feede.Rdn, _ddagba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_cgbaf := NewCT_RevisionComment()
				if _ggef := d.DecodeElement(_cgbaf, &_ccfb); _ggef != nil {
					return _ggef
				}
				_feede.Rcmt = append(_feede.Rcmt, _cgbaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_edbcgb := NewCT_RevisionQueryTableField()
				if _eecac := d.DecodeElement(_edbcgb, &_ccfb); _eecac != nil {
					return _eecac
				}
				_feede.Rqt = append(_feede.Rqt, _edbcgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_cfbgfd := NewCT_RevisionConflict()
				if _bfafac := d.DecodeElement(_cfbgfd, &_ccfb); _bfafac != nil {
					return _bfafac
				}
				_feede.Rcft = append(_feede.Rcft, _cfbgfd)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0065\u0076i\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _ccfb.Name)
				if _gfbaee := d.Skip(); _gfbaee != nil {
					return _gfbaee
				}
			}
		case _b.EndElement:
			break _acffbe
		case _b.CharData:
		}
	}
	return nil
}
func (_fcfdb *ST_PageOrder) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcfdb = 0
	case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
		*_fcfdb = 1
	case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
		*_fcfdb = 2
	}
	return nil
}
func (_cafec *ST_Scope) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aceffg, _dacedg := d.Token()
	if _dacedg != nil {
		return _dacedg
	}
	if _acbgc, _fbfbad := _aceffg.(_b.EndElement); _fbfbad && _acbgc.Name == start.Name {
		*_cafec = 1
		return nil
	}
	if _geacb, _dgcgcf := _aceffg.(_b.CharData); !_dgcgcf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aceffg)
	} else {
		switch string(_geacb) {
		case "":
			*_cafec = 0
		case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
			*_cafec = 1
		case "\u0064\u0061\u0074\u0061":
			*_cafec = 2
		case "\u0066\u0069\u0065l\u0064":
			*_cafec = 3
		}
	}
	_aceffg, _dacedg = d.Token()
	if _dacedg != nil {
		return _dacedg
	}
	if _bfeac, _eccdce := _aceffg.(_b.EndElement); _eccdce && _bfeac.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aceffg)
}
func (_dddcga *CT_Pane) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gggabe := range start.Attr {
		if _gggabe.Name.Local == "\u0078\u0053\u0070\u006c\u0069\u0074" {
			_bfcfd, _eebea := _e.ParseFloat(_gggabe.Value, 64)
			if _eebea != nil {
				return _eebea
			}
			_dddcga.XSplitAttr = &_bfcfd
			continue
		}
		if _gggabe.Name.Local == "\u0079\u0053\u0070\u006c\u0069\u0074" {
			_gdbfg, _adgec := _e.ParseFloat(_gggabe.Value, 64)
			if _adgec != nil {
				return _adgec
			}
			_dddcga.YSplitAttr = &_gdbfg
			continue
		}
		if _gggabe.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_eedcf, _adbc := _gggabe.Value, error(nil)
			if _adbc != nil {
				return _adbc
			}
			_dddcga.TopLeftCellAttr = &_eedcf
			continue
		}
		if _gggabe.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065" {
			_dddcga.ActivePaneAttr.UnmarshalXMLAttr(_gggabe)
			continue
		}
		if _gggabe.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_dddcga.StateAttr.UnmarshalXMLAttr(_gggabe)
			continue
		}
	}
	for {
		_fecad, _aeecc := d.Token()
		if _aeecc != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u006e\u0065\u003a\u0020\u0025\u0073", _aeecc)
		}
		if _bgcda, _eaag := _fecad.(_b.EndElement); _eaag && _bgcda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_WebPublishing and its children
func (_gfeaa *CT_WebPublishing) Validate() error {
	return _gfeaa.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067")
}
func (_abccfb *Sst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abccfb.CT_Sst = *NewCT_Sst()
	for _, _aecfd := range start.Attr {
		if _aecfd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gebgg, _bfgee := _e.ParseUint(_aecfd.Value, 10, 32)
			if _bfgee != nil {
				return _bfgee
			}
			_dcbeda := uint32(_gebgg)
			_abccfb.CountAttr = &_dcbeda
			continue
		}
		if _aecfd.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_fffdea, _ddbdf := _e.ParseUint(_aecfd.Value, 10, 32)
			if _ddbdf != nil {
				return _ddbdf
			}
			_dcgae := uint32(_fffdea)
			_abccfb.UniqueCountAttr = &_dcgae
			continue
		}
	}
_bacacf:
	for {
		_aabbag, _gdfcc := d.Token()
		if _gdfcc != nil {
			return _gdfcc
		}
		switch _abggc := _aabbag.(type) {
		case _b.StartElement:
			switch _abggc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_gfedd := NewCT_Rst()
				if _bagbee := d.DecodeElement(_gfedd, &_abggc); _bagbee != nil {
					return _bagbee
				}
				_abccfb.Si = append(_abccfb.Si, _gfedd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abccfb.ExtLst = NewCT_ExtensionList()
				if _cceg := d.DecodeElement(_abccfb.ExtLst, &_abggc); _cceg != nil {
					return _cceg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053s\u0074\u0020\u0025\u0076", _abggc.Name)
				if _gacagd := d.Skip(); _gacagd != nil {
					return _gacagd
				}
			}
		case _b.EndElement:
			break _bacacf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellProtection and its children, prefixing error messages with path
func (_bgbe *CT_CellProtection) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DefinedName and its children
func (_eacd *CT_DefinedName) Validate() error {
	return _eacd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065")
}
func (_adgda *ExternalLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adgda.CT_ExternalLink = *NewCT_ExternalLink()
_ecagd:
	for {
		_cbdgd, _fdabc := d.Token()
		if _fdabc != nil {
			return _fdabc
		}
		switch _cbegfa := _cbdgd.(type) {
		case _b.StartElement:
			switch _cbegfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_adgda.Choice = NewCT_ExternalLinkChoice()
				if _ggdgc := d.DecodeElement(&_adgda.Choice.ExternalBook, &_cbegfa); _ggdgc != nil {
					return _ggdgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_adgda.Choice = NewCT_ExternalLinkChoice()
				if _eebdbb := d.DecodeElement(&_adgda.Choice.DdeLink, &_cbegfa); _eebdbb != nil {
					return _eebdbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_adgda.Choice = NewCT_ExternalLinkChoice()
				if _ebefac := d.DecodeElement(&_adgda.Choice.OleLink, &_cbegfa); _ebefac != nil {
					return _ebefac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adgda.ExtLst = NewCT_ExtensionList()
				if _bcfgb := d.DecodeElement(_adgda.ExtLst, &_cbegfa); _bcfgb != nil {
					return _bcfgb
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0078te\u0072\u006ea\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _cbegfa.Name)
				if _cbead := d.Skip(); _cbead != nil {
					return _cbead
				}
			}
		case _b.EndElement:
			break _ecagd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ServerFormats and its children, prefixing error messages with path
func (_bffbd *CT_ServerFormats) ValidateWithPath(path string) error {
	for _abaac, _eeeec := range _bffbd.ServerFormat {
		if _fcfcf := _eeeec.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053er\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _abaac)); _fcfcf != nil {
			return _fcfcf
		}
	}
	return nil
}

// Validate validates the CT_Pages and its children
func (_afag *CT_Pages) Validate() error {
	return _afag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073")
}

// ValidateWithPath validates the CT_FieldUsage and its children, prefixing error messages with path
func (_bagdd *CT_FieldUsage) ValidateWithPath(path string) error { return nil }
func (_adafbb *ST_FieldSortType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efgda, _gfebdcf := d.Token()
	if _gfebdcf != nil {
		return _gfebdcf
	}
	if _gdcbbb, _dfffga := _efgda.(_b.EndElement); _dfffga && _gdcbbb.Name == start.Name {
		*_adafbb = 1
		return nil
	}
	if _dcebgf, _bfdaa := _efgda.(_b.CharData); !_bfdaa {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efgda)
	} else {
		switch string(_dcebgf) {
		case "":
			*_adafbb = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_adafbb = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_adafbb = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_adafbb = 3
		}
	}
	_efgda, _gfebdcf = d.Token()
	if _gfebdcf != nil {
		return _gfebdcf
	}
	if _bffcf, _baaea := _efgda.(_b.EndElement); _baaea && _bffcf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efgda)
}

// Validate validates the CT_Col and its children
func (_beace *CT_Col) Validate() error {
	return _beace.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c")
}

type CT_ExternalDefinedNames struct {

	// Defined Name
	DefinedName []*CT_ExternalDefinedName
}

func (_ecaea ST_GradientType) ValidateWithPath(path string) error {
	switch _ecaea {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecaea))
	}
	return nil
}
func NewCT_TableColumns() *CT_TableColumns { _gbfaea := &CT_TableColumns{}; return _gbfaea }

type CT_GroupLevel struct {

	// Unique Name
	UniqueNameAttr string

	// Grouping Level Display Name
	CaptionAttr string

	// User-Defined Group Level
	UserAttr *bool

	// Custom Roll Up
	CustomRollUpAttr *bool

	// OLAP Level Groups
	Groups *CT_Groups

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dedfe *CT_Dxf) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dedfe.Font != nil {
		_ddgfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_dedfe.Font, _ddgfa)
	}
	if _dedfe.NumFmt != nil {
		_gfdfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		e.EncodeElement(_dedfe.NumFmt, _gfdfa)
	}
	if _dedfe.Fill != nil {
		_cffc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_dedfe.Fill, _cffc)
	}
	if _dedfe.Alignment != nil {
		_adbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_dedfe.Alignment, _adbd)
	}
	if _dedfe.Border != nil {
		_eegbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		e.EncodeElement(_dedfe.Border, _eegbc)
	}
	if _dedfe.Protection != nil {
		_efffd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dedfe.Protection, _efffd)
	}
	if _dedfe.ExtLst != nil {
		_gcbbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dedfe.ExtLst, _gcbbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Formats() *CT_Formats { _ceeab := &CT_Formats{}; return _ceeab }
func NewCT_WebPr() *CT_WebPr     { _ddfbec := &CT_WebPr{}; return _ddfbec }
func (_dddcg *CT_MeasureDimensionMap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dddcg.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_dddcg.MeasureGroupAttr)})
	}
	if _dddcg.DimensionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _f.Sprintf("\u0025\u0076", *_dddcg.DimensionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Fonts() *CT_Fonts         { _cffff := &CT_Fonts{}; return _cffff }
func NewCT_CalcChain() *CT_CalcChain { _fcga := &CT_CalcChain{}; return _fcga }

const (
	ST_CommentsUnset             ST_Comments = 0
	ST_CommentsCommNone          ST_Comments = 1
	ST_CommentsCommIndicator     ST_Comments = 2
	ST_CommentsCommIndAndComment ST_Comments = 3
)

func (_efcdee ST_DataValidationImeMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bbgbd := _b.Attr{}
	_bbgbd.Name = name
	switch _efcdee {
	case ST_DataValidationImeModeUnset:
		_bbgbd.Value = ""
	case ST_DataValidationImeModeNoControl:
		_bbgbd.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_DataValidationImeModeOff:
		_bbgbd.Value = "\u006f\u0066\u0066"
	case ST_DataValidationImeModeOn:
		_bbgbd.Value = "\u006f\u006e"
	case ST_DataValidationImeModeDisabled:
		_bbgbd.Value = "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case ST_DataValidationImeModeHiragana:
		_bbgbd.Value = "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullKatakana:
		_bbgbd.Value = "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeHalfKatakana:
		_bbgbd.Value = "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullAlpha:
		_bbgbd.Value = "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeHalfAlpha:
		_bbgbd.Value = "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeFullHangul:
		_bbgbd.Value = "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case ST_DataValidationImeModeHalfHangul:
		_bbgbd.Value = "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return _bbgbd, nil
}
func NewCT_SheetViews() *CT_SheetViews { _abeag := &CT_SheetViews{}; return _abeag }
func (_bgaeb *CT_PivotFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _defbc := range start.Attr {
		if _defbc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfdec, _fbeca := _e.ParseUint(_defbc.Value, 10, 32)
			if _fbeca != nil {
				return _fbeca
			}
			_bfcbdg := uint32(_gfdec)
			_bgaeb.CountAttr = &_bfcbdg
			continue
		}
	}
_gfddbb:
	for {
		_aggcc, _bffaa := d.Token()
		if _bffaa != nil {
			return _bffaa
		}
		switch _bagfg := _aggcc.(type) {
		case _b.StartElement:
			switch _bagfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}:
				_ffffab := NewCT_PivotField()
				if _dbfce := d.DecodeElement(_ffffab, &_bagfg); _dbfce != nil {
					return _dbfce
				}
				_bgaeb.PivotField = append(_bgaeb.PivotField, _ffffab)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _bagfg.Name)
				if _cbaca := d.Skip(); _cbaca != nil {
					return _cbaca
				}
			}
		case _b.EndElement:
			break _gfddbb
		case _b.CharData:
		}
	}
	return nil
}
func (_fcbbf *CT_Sheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _fcbbf.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fcbbf.SheetIdAttr)})
	if _fcbbf.StateAttr != ST_SheetStateUnset {
		_befgc, _fdgfd := _fcbbf.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _fdgfd != nil {
			return _fdgfd
		}
		start.Attr = append(start.Attr, _befgc)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fcbbf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebaeg ST_MdxKPIProperty) ValidateWithPath(path string) error {
	switch _ebaeg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebaeg))
	}
	return nil
}

const (
	ST_MdxSetOrderUnset ST_MdxSetOrder = 0
	ST_MdxSetOrderU     ST_MdxSetOrder = 1
	ST_MdxSetOrderA     ST_MdxSetOrder = 2
	ST_MdxSetOrderD     ST_MdxSetOrder = 3
	ST_MdxSetOrderAa    ST_MdxSetOrder = 4
	ST_MdxSetOrderAd    ST_MdxSetOrder = 5
	ST_MdxSetOrderNa    ST_MdxSetOrder = 6
	ST_MdxSetOrderNd    ST_MdxSetOrder = 7
)

func (_eaggeb *CT_SheetId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdbeac := range start.Attr {
		if _gdbeac.Name.Local == "\u0076\u0061\u006c" {
			_adgebe, _bfffg := _e.ParseUint(_gdbeac.Value, 10, 32)
			if _bfffg != nil {
				return _bfffg
			}
			_eaggeb.ValAttr = uint32(_adgebe)
			continue
		}
	}
	for {
		_gebgbe, _edfde := d.Token()
		if _edfde != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u003a\u0020%\u0073", _edfde)
		}
		if _fdegfc, _bdbda := _gebgbe.(_b.EndElement); _bdbda && _fdegfc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afdag ST_DataValidationErrorStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_afdag.String(), start)
}

// ValidateWithPath validates the CT_CacheField and its children, prefixing error messages with path
func (_fcdf *CT_CacheField) ValidateWithPath(path string) error {
	if _fcdf.SharedItems != nil {
		if _dfbg := _fcdf.SharedItems.ValidateWithPath(path + "\u002f\u0053\u0068a\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _dfbg != nil {
			return _dfbg
		}
	}
	if _fcdf.FieldGroup != nil {
		if _efab := _fcdf.FieldGroup.ValidateWithPath(path + "/\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"); _efab != nil {
			return _efab
		}
	}
	for _fbaf, _cgfd := range _fcdf.MpMap {
		if _fdca := _cgfd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fM\u0070\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _fbaf)); _fdca != nil {
			return _fdca
		}
	}
	if _fcdf.ExtLst != nil {
		if _fdcb := _fcdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdcb != nil {
			return _fdcb
		}
	}
	return nil
}
func (_dbbecf *CT_RevisionHeaders) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbbecf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _dbaba := range start.Attr {
		if _dbaba.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_cggac, _daead := _e.ParseBool(_dbaba.Value)
			if _daead != nil {
				return _daead
			}
			_dbbecf.ExclusiveAttr = &_cggac
			continue
		}
		if _dbaba.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_gcbag, _cbbeg := _dbaba.Value, error(nil)
			if _cbbeg != nil {
				return _cbbeg
			}
			_dbbecf.LastGuidAttr = &_gcbag
			continue
		}
		if _dbaba.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_eccfb, _aeddd := _e.ParseBool(_dbaba.Value)
			if _aeddd != nil {
				return _aeddd
			}
			_dbbecf.SharedAttr = &_eccfb
			continue
		}
		if _dbaba.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_aagcaf, _fedccf := _e.ParseBool(_dbaba.Value)
			if _fedccf != nil {
				return _fedccf
			}
			_dbbecf.DiskRevisionsAttr = &_aagcaf
			continue
		}
		if _dbaba.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_bcdfg, _efcbe := _e.ParseBool(_dbaba.Value)
			if _efcbe != nil {
				return _efcbe
			}
			_dbbecf.HistoryAttr = &_bcdfg
			continue
		}
		if _dbaba.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_dcfge, _bcgcg := _e.ParseBool(_dbaba.Value)
			if _bcgcg != nil {
				return _bcgcg
			}
			_dbbecf.TrackRevisionsAttr = &_dcfge
			continue
		}
		if _dbaba.Name.Local == "\u0067\u0075\u0069\u0064" {
			_aedbdeb, _efdfg := _dbaba.Value, error(nil)
			if _efdfg != nil {
				return _efdfg
			}
			_dbbecf.GuidAttr = _aedbdeb
			continue
		}
		if _dbaba.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_efdca, _ffgea := _e.ParseUint(_dbaba.Value, 10, 32)
			if _ffgea != nil {
				return _ffgea
			}
			_cdbgfe := uint32(_efdca)
			_dbbecf.RevisionIdAttr = &_cdbgfe
			continue
		}
		if _dbaba.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_bafce, _abdbad := _e.ParseInt(_dbaba.Value, 10, 32)
			if _abdbad != nil {
				return _abdbad
			}
			_dgbgdb := int32(_bafce)
			_dbbecf.VersionAttr = &_dgbgdb
			continue
		}
		if _dbaba.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_badbg, _agccd := _e.ParseBool(_dbaba.Value)
			if _agccd != nil {
				return _agccd
			}
			_dbbecf.KeepChangeHistoryAttr = &_badbg
			continue
		}
		if _dbaba.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_cgfcd, _fcca := _e.ParseBool(_dbaba.Value)
			if _fcca != nil {
				return _fcca
			}
			_dbbecf.ProtectedAttr = &_cgfcd
			continue
		}
		if _dbaba.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_ecgbb, _aabfag := _e.ParseUint(_dbaba.Value, 10, 32)
			if _aabfag != nil {
				return _aabfag
			}
			_bcabdd := uint32(_ecgbb)
			_dbbecf.PreserveHistoryAttr = &_bcabdd
			continue
		}
	}
_fegdc:
	for {
		_geadf, _gccdd := d.Token()
		if _gccdd != nil {
			return _gccdd
		}
		switch _ccbaf := _geadf.(type) {
		case _b.StartElement:
			switch _ccbaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_dcabee := NewCT_RevisionHeader()
				if _cadfg := d.DecodeElement(_dcabee, &_ccbaf); _cadfg != nil {
					return _cadfg
				}
				_dbbecf.Header = append(_dbbecf.Header, _dcabee)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _ccbaf.Name)
				if _egafd := d.Skip(); _egafd != nil {
					return _egafd
				}
			}
		case _b.EndElement:
			break _fegdc
		case _b.CharData:
		}
	}
	return nil
}

type ST_WebSourceType byte
type CT_Location struct {

	// Reference
	RefAttr string

	// First Header Row
	FirstHeaderRowAttr uint32

	// PivotTable Data First Row
	FirstDataRowAttr uint32

	// First Data Column
	FirstDataColAttr uint32

	// Rows Per Page Count
	RowPageCountAttr *uint32

	// Columns Per Page
	ColPageCountAttr *uint32
}

func (_gdbec ST_SheetViewType) String() string {
	switch _gdbec {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case 3:
		return "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

type CT_PivotFilter struct {

	// Field Index
	FldAttr uint32

	// Member Property Field Id
	MpFldAttr *uint32

	// Pivot Filter Type
	TypeAttr ST_PivotFilterType

	// Evaluation Order
	EvalOrderAttr *int32

	// Pivot Filter Id
	IdAttr uint32

	// Measure Index
	IMeasureHierAttr *uint32

	// Measure Field Index
	IMeasureFldAttr *uint32

	// Pivot Filter Name
	NameAttr *string

	// Pivot Filter Description
	DescriptionAttr *string

	// Label Pivot
	StringValue1Attr *string

	// Label Pivot Filter String Value 2
	StringValue2Attr *string

	// Auto Filter
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

// Validate validates the CT_Parameter and its children
func (_ebfaa *CT_Parameter) Validate() error {
	return _ebfaa.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_Fill and its children, prefixing error messages with path
func (_gcbdg *CT_Fill) ValidateWithPath(path string) error {
	if _gcbdg.PatternFill != nil {
		if _bfbee := _gcbdg.PatternFill.ValidateWithPath(path + "\u002f\u0050\u0061t\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"); _bfbee != nil {
			return _bfbee
		}
	}
	if _gcbdg.GradientFill != nil {
		if _cbcbb := _gcbdg.GradientFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"); _cbcbb != nil {
			return _cbcbb
		}
	}
	return nil
}
func NewCT_Sets() *CT_Sets { _acbgeg := &CT_Sets{}; return _acbgeg }

// ValidateWithPath validates the CT_SheetData and its children, prefixing error messages with path
func (_dcbfbc *CT_SheetData) ValidateWithPath(path string) error {
	for _cbcdd, _abdbd := range _dcbfbc.Row {
		if _eecec := _abdbd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _cbcdd)); _eecec != nil {
			return _eecec
		}
	}
	return nil
}

// Validate validates the CT_BookViews and its children
func (_cce *CT_BookViews) Validate() error {
	return _cce.ValidateWithPath("\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073")
}
func (_ecbddc ST_GrowShrinkType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecbddc.String(), start)
}
func (_bgdd *CT_CsPageSetup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgdd.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.PaperSizeAttr)})
	}
	if _bgdd.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.PaperHeightAttr)})
	}
	if _bgdd.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.PaperWidthAttr)})
	}
	if _bgdd.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.FirstPageNumberAttr)})
	}
	if _bgdd.OrientationAttr != ST_OrientationUnset {
		_gebcg, _cfdg := _bgdd.OrientationAttr.MarshalXMLAttr(_b.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _cfdg != nil {
			return _cfdg
		}
		start.Attr = append(start.Attr, _gebcg)
	}
	if _bgdd.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdd.UsePrinterDefaultsAttr))})
	}
	if _bgdd.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdd.BlackAndWhiteAttr))})
	}
	if _bgdd.DraftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdd.DraftAttr))})
	}
	if _bgdd.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdd.UseFirstPageNumberAttr))})
	}
	if _bgdd.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.HorizontalDpiAttr)})
	}
	if _bgdd.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.VerticalDpiAttr)})
	}
	if _bgdd.CopiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.CopiesAttr)})
	}
	if _bgdd.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bgdd.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RElt() *CT_RElt { _ebbbb := &CT_RElt{}; return _ebbbb }
func (_cedec ST_ExternalConnectionType) ValidateWithPath(path string) error {
	switch _cedec {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cedec))
	}
	return nil
}
func (_gdff *CT_LegacyDrawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abfec := range start.Attr {
		if _abfec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _abfec.Name.Local == "\u0069\u0064" || _abfec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _abfec.Name.Local == "\u0069\u0064" {
			_ebbga, _babab := _abfec.Value, error(nil)
			if _babab != nil {
				return _babab
			}
			_gdff.IdAttr = _ebbga
			continue
		}
	}
	for {
		_eddabg, _ggaaa := d.Token()
		if _ggaaa != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0065\u0067\u0061c\u0079D\u0072\u0061\u0077\u0069\u006e\u0067\u003a \u0025\u0073", _ggaaa)
		}
		if _baefc, _bfafa := _eddabg.(_b.EndElement); _bfafa && _baefc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GroupMember struct {

	// Group Member Unique Name
	UniqueNameAttr string

	// Group
	GroupAttr *bool
}

func (_cdcd *CT_FileRecoveryPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdcd.AutoRecoverAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cdcd.AutoRecoverAttr))})
	}
	if _cdcd.CrashSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cdcd.CrashSaveAttr))})
	}
	if _cdcd.DataExtractLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cdcd.DataExtractLoadAttr))})
	}
	if _cdcd.RepairLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cdcd.RepairLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SingleXmlCells and its children, prefixing error messages with path
func (_bcfea *CT_SingleXmlCells) ValidateWithPath(path string) error {
	for _fcddfef, _aegbc := range _bcfea.SingleXmlCell {
		if _cgggc := _aegbc.ValidateWithPath(_f.Sprintf("%\u0073/\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c[%\u0064\u005d", path, _fcddfef)); _cgggc != nil {
			return _cgggc
		}
	}
	return nil
}
func (_gddbcc ST_ShowDataAs) Validate() error { return _gddbcc.ValidateWithPath("") }
func (_gdg *AG_RevData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fag := range start.Attr {
		if _fag.Name.Local == "\u0072\u0049\u0064" {
			_ga, _gdb := _e.ParseUint(_fag.Value, 10, 32)
			if _gdb != nil {
				return _gdb
			}
			_ae := uint32(_ga)
			_gdg.RIdAttr = &_ae
			continue
		}
		if _fag.Name.Local == "\u0075\u0061" {
			_eg, _dbf := _e.ParseBool(_fag.Value)
			if _dbf != nil {
				return _dbf
			}
			_gdg.UaAttr = &_eg
			continue
		}
		if _fag.Name.Local == "\u0072\u0061" {
			_dd, _fdf := _e.ParseBool(_fag.Value)
			if _fdf != nil {
				return _fdf
			}
			_gdg.RaAttr = &_dd
			continue
		}
	}
	for {
		_gea, _fcf := d.Token()
		if _fcf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _fcf)
		}
		if _bcc, _ac := _gea.(_b.EndElement); _ac && _bcc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dabaf *CT_RangeSets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dabaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dabaf.CountAttr)})
	}
	e.EncodeToken(start)
	_ecefd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}}
	for _, _gdbeg := range _dabaf.RangeSet {
		e.EncodeElement(_gdbeg, _ecefd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Drawing and its children
func (_fccbg *CT_Drawing) Validate() error {
	return _fccbg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func NewCT_Schema() *CT_Schema { _eeaacd := &CT_Schema{}; return _eeaacd }
func (_egebdc *CT_PivotHierarchy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egebdc.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.OutlineAttr))})
	}
	if _egebdc.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.MultipleItemSelectionAllowedAttr))})
	}
	if _egebdc.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.SubtotalTopAttr))})
	}
	if _egebdc.ShowInFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.ShowInFieldListAttr))})
	}
	if _egebdc.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.DragToRowAttr))})
	}
	if _egebdc.DragToColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.DragToColAttr))})
	}
	if _egebdc.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.DragToPageAttr))})
	}
	if _egebdc.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.DragToDataAttr))})
	}
	if _egebdc.DragOffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.DragOffAttr))})
	}
	if _egebdc.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egebdc.IncludeNewItemsInFilterAttr))})
	}
	if _egebdc.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_egebdc.CaptionAttr)})
	}
	e.EncodeToken(start)
	if _egebdc.Mps != nil {
		_cdcba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u0073"}}
		e.EncodeElement(_egebdc.Mps, _cdcba)
	}
	if _egebdc.Members != nil {
		_bgafd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u006d\u0062\u0065\u0072\u0073"}}
		for _, _badeg := range _egebdc.Members {
			e.EncodeElement(_badeg, _bgafd)
		}
	}
	if _egebdc.ExtLst != nil {
		_fdfbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_egebdc.ExtLst, _fdfbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efdg *CT_Cfvo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efdg.TypeAttr = ST_CfvoType(1)
	for _, _ebdd := range start.Attr {
		if _ebdd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_efdg.TypeAttr.UnmarshalXMLAttr(_ebdd)
			continue
		}
		if _ebdd.Name.Local == "\u0076\u0061\u006c" {
			_ecaf, _bdbb := _ebdd.Value, error(nil)
			if _bdbb != nil {
				return _bdbb
			}
			_efdg.ValAttr = &_ecaf
			continue
		}
		if _ebdd.Name.Local == "\u0067\u0074\u0065" {
			_eefe, _ced := _e.ParseBool(_ebdd.Value)
			if _ced != nil {
				return _ced
			}
			_efdg.GteAttr = &_eefe
			continue
		}
	}
_eebae:
	for {
		_abde, _bggg := d.Token()
		if _bggg != nil {
			return _bggg
		}
		switch _eedc := _abde.(type) {
		case _b.StartElement:
			switch _eedc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efdg.ExtLst = NewCT_ExtensionList()
				if _cefe := d.DecodeElement(_efdg.ExtLst, &_eedc); _cefe != nil {
					return _cefe
				}
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0066\u0076\u006f\u0020\u0025\u0076", _eedc.Name)
				if _cacf := d.Skip(); _cacf != nil {
					return _cacf
				}
			}
		case _b.EndElement:
			break _eebae
		case _b.CharData:
		}
	}
	return nil
}
func (_fedd *CT_CustomFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fedd.OperatorAttr != ST_FilterOperatorUnset {
		_ecbba, _cbac := _fedd.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _cbac != nil {
			return _cbac
		}
		start.Attr = append(start.Attr, _ecbba)
	}
	if _fedd.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_fedd.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CfRule and its children
func (_ecaac *CT_CfRule) Validate() error {
	return _ecaac.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce")
}
func NewCT_LevelGroup() *CT_LevelGroup {
	_cbcaf := &CT_LevelGroup{}
	_cbcaf.GroupMembers = NewCT_GroupMembers()
	return _cbcaf
}
func (_fbaeae ST_VerticalAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgffc := _b.Attr{}
	_cgffc.Name = name
	switch _fbaeae {
	case ST_VerticalAlignmentUnset:
		_cgffc.Value = ""
	case ST_VerticalAlignmentTop:
		_cgffc.Value = "\u0074\u006f\u0070"
	case ST_VerticalAlignmentCenter:
		_cgffc.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_VerticalAlignmentBottom:
		_cgffc.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_VerticalAlignmentJustify:
		_cgffc.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_VerticalAlignmentDistributed:
		_cgffc.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _cgffc, nil
}
func (_cabe *CT_FieldGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfgeg := range start.Attr {
		if _bfgeg.Name.Local == "\u0070\u0061\u0072" {
			_abfda, _dfdg := _e.ParseUint(_bfgeg.Value, 10, 32)
			if _dfdg != nil {
				return _dfdg
			}
			_cbbb := uint32(_abfda)
			_cabe.ParAttr = &_cbbb
			continue
		}
		if _bfgeg.Name.Local == "\u0062\u0061\u0073\u0065" {
			_bfae, _agad := _e.ParseUint(_bfgeg.Value, 10, 32)
			if _agad != nil {
				return _agad
			}
			_dgada := uint32(_bfae)
			_cabe.BaseAttr = &_dgada
			continue
		}
	}
_aece:
	for {
		_ffbag, _cbeda := d.Token()
		if _cbeda != nil {
			return _cbeda
		}
		switch _acfeb := _ffbag.(type) {
		case _b.StartElement:
			switch _acfeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}:
				_cabe.RangePr = NewCT_RangePr()
				if _dabdg := d.DecodeElement(_cabe.RangePr, &_acfeb); _dabdg != nil {
					return _dabdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}:
				_cabe.DiscretePr = NewCT_DiscretePr()
				if _fdeba := d.DecodeElement(_cabe.DiscretePr, &_acfeb); _fdeba != nil {
					return _fdeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}:
				_cabe.GroupItems = NewCT_GroupItems()
				if _egbg := d.DecodeElement(_cabe.GroupItems, &_acfeb); _egbg != nil {
					return _egbg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _acfeb.Name)
				if _ddeac := d.Skip(); _ddeac != nil {
					return _ddeac
				}
			}
		case _b.EndElement:
			break _aece
		case _b.CharData:
		}
	}
	return nil
}
func (_dgaeg *CT_CustomProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aafc:
	for {
		_ffea, _gegfbc := d.Token()
		if _gegfbc != nil {
			return _gegfbc
		}
		switch _fdbab := _ffea.(type) {
		case _b.StartElement:
			switch _fdbab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}:
				_ceag := NewCT_CustomProperty()
				if _dagbe := d.DecodeElement(_ceag, &_fdbab); _dagbe != nil {
					return _dagbe
				}
				_dgaeg.CustomPr = append(_dgaeg.CustomPr, _ceag)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fdbab.Name)
				if _debd := d.Skip(); _debd != nil {
					return _debd
				}
			}
		case _b.EndElement:
			break _aafc
		case _b.CharData:
		}
	}
	return nil
}
func (_bggfe *CT_MeasureGroups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcee := range start.Attr {
		if _dcee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgfe, _gdabdg := _e.ParseUint(_dcee.Value, 10, 32)
			if _gdabdg != nil {
				return _gdabdg
			}
			_fgdaa := uint32(_dgfe)
			_bggfe.CountAttr = &_fgdaa
			continue
		}
	}
_cedfb:
	for {
		_geagfd, _dfdabb := d.Token()
		if _dfdabb != nil {
			return _dfdabb
		}
		switch _adbad := _geagfd.(type) {
		case _b.StartElement:
			switch _adbad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}:
				_gdfeb := NewCT_MeasureGroup()
				if _bfgfg := d.DecodeElement(_gdfeb, &_adbad); _bfgfg != nil {
					return _bfgfg
				}
				_bggfe.MeasureGroup = append(_bggfe.MeasureGroup, _gdfeb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025v", _adbad.Name)
				if _aabbd := d.Skip(); _aabbd != nil {
					return _aabbd
				}
			}
		case _b.EndElement:
			break _cedfb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TableTypeUnset      ST_TableType = 0
	ST_TableTypeWorksheet  ST_TableType = 1
	ST_TableTypeXml        ST_TableType = 2
	ST_TableTypeQueryTable ST_TableType = 3
)

func NewCT_OlapPr() *CT_OlapPr { _egad := &CT_OlapPr{}; return _egad }

// Validate validates the CT_SmartTagType and its children
func (_efbff *CT_SmartTagType) Validate() error {
	return _efbff.ValidateWithPath("\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065")
}
func NewCT_CustomSheetViews() *CT_CustomSheetViews { _eegc := &CT_CustomSheetViews{}; return _eegc }
func NewCT_MdxKPI() *CT_MdxKPI {
	_dabg := &CT_MdxKPI{}
	_dabg.PAttr = ST_MdxKPIProperty(1)
	return _dabg
}
func NewCT_DbPr() *CT_DbPr { _egcff := &CT_DbPr{}; return _egcff }

// ValidateWithPath validates the Sst and its children, prefixing error messages with path
func (_ceaabg *Sst) ValidateWithPath(path string) error {
	if _cecdd := _ceaabg.CT_Sst.ValidateWithPath(path); _cecdd != nil {
		return _cecdd
	}
	return nil
}

const (
	ST_RefModeUnset ST_RefMode = 0
	ST_RefModeA1    ST_RefMode = 1
	ST_RefModeR1C1  ST_RefMode = 2
)

func (_gdfca *ST_ParameterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adcceb, _cdeba := d.Token()
	if _cdeba != nil {
		return _cdeba
	}
	if _dbgcd, _aefad := _adcceb.(_b.EndElement); _aefad && _dbgcd.Name == start.Name {
		*_gdfca = 1
		return nil
	}
	if _fecba, _gcca := _adcceb.(_b.CharData); !_gcca {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adcceb)
	} else {
		switch string(_fecba) {
		case "":
			*_gdfca = 0
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_gdfca = 1
		case "\u0076\u0061\u006cu\u0065":
			*_gdfca = 2
		case "\u0063\u0065\u006c\u006c":
			*_gdfca = 3
		}
	}
	_adcceb, _cdeba = d.Token()
	if _cdeba != nil {
		return _cdeba
	}
	if _bcfdb, _edcbg := _adcceb.(_b.EndElement); _edcbg && _bcfdb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adcceb)
}

// Validate validates the CT_CommentList and its children
func (_ffbgf *CT_CommentList) Validate() error {
	return _ffbgf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

type CT_PCDKPIs struct {

	// KPI Count
	CountAttr *uint32

	// OLAP KPI
	Kpi []*CT_PCDKPI
}

// ValidateWithPath validates the CT_Selection and its children, prefixing error messages with path
func (_cfffa *CT_Selection) ValidateWithPath(path string) error {
	if _befbd := _cfffa.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _befbd != nil {
		return _befbd
	}
	return nil
}
func (_afebgc *CT_Record) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gaceea:
	for {
		_eddff, _acaceg := d.Token()
		if _acaceg != nil {
			return _acaceg
		}
		switch _badgc := _eddff.(type) {
		case _b.StartElement:
			switch _badgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_gdbffg := NewCT_Missing()
				if _abdfd := d.DecodeElement(_gdbffg, &_badgc); _abdfd != nil {
					return _abdfd
				}
				_afebgc.M = append(_afebgc.M, _gdbffg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_fbfcag := NewCT_Number()
				if _eecdf := d.DecodeElement(_fbfcag, &_badgc); _eecdf != nil {
					return _eecdf
				}
				_afebgc.N = append(_afebgc.N, _fbfcag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_gfdaf := NewCT_Boolean()
				if _dfbbe := d.DecodeElement(_gfdaf, &_badgc); _dfbbe != nil {
					return _dfbbe
				}
				_afebgc.B = append(_afebgc.B, _gfdaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_aggdef := NewCT_Error()
				if _dacad := d.DecodeElement(_aggdef, &_badgc); _dacad != nil {
					return _dacad
				}
				_afebgc.E = append(_afebgc.E, _aggdef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_accfg := NewCT_String()
				if _aggb := d.DecodeElement(_accfg, &_badgc); _aggb != nil {
					return _aggb
				}
				_afebgc.S = append(_afebgc.S, _accfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_egaf := NewCT_DateTime()
				if _aacff := d.DecodeElement(_egaf, &_badgc); _aacff != nil {
					return _aacff
				}
				_afebgc.D = append(_afebgc.D, _egaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bafcc := NewCT_Index()
				if _gfgef := d.DecodeElement(_bafcc, &_badgc); _gfgef != nil {
					return _gfgef
				}
				_afebgc.X = append(_afebgc.X, _bafcc)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064 \u0025\u0076", _badgc.Name)
				if _fdbcef := d.Skip(); _fdbcef != nil {
					return _fdbcef
				}
			}
		case _b.EndElement:
			break _gaceea
		case _b.CharData:
		}
	}
	return nil
}
func (_gcebc *CT_TextField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgfefa := range start.Attr {
		if _dgfefa.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gcebc.TypeAttr.UnmarshalXMLAttr(_dgfefa)
			continue
		}
		if _dgfefa.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ecdf, _dfbfb := _e.ParseUint(_dgfefa.Value, 10, 32)
			if _dfbfb != nil {
				return _dfbfb
			}
			_dfaaa := uint32(_ecdf)
			_gcebc.PositionAttr = &_dfaaa
			continue
		}
	}
	for {
		_bggebe, _dfdcea := d.Token()
		if _dfdcea != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0073", _dfdcea)
		}
		if _gbbdd, _gcdbgc := _bggebe.(_b.EndElement); _gcdbgc && _gbbdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fceec ST_Axis) ValidateWithPath(path string) error {
	switch _fceec {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fceec))
	}
	return nil
}
func (_fbbga ST_FilterOperator) Validate() error { return _fbbga.ValidateWithPath("") }

type ST_SortBy byte
type ST_RefMode byte
type ST_PivotAreaType byte

func (_dcccf *CT_PCDSDTCEntries) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceffa := range start.Attr {
		if _ceffa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_accbf, _gcfba := _e.ParseUint(_ceffa.Value, 10, 32)
			if _gcfba != nil {
				return _gcfba
			}
			_faecf := uint32(_accbf)
			_dcccf.CountAttr = &_faecf
			continue
		}
	}
_geaea:
	for {
		_cccbc, _cdbdgd := d.Token()
		if _cdbdgd != nil {
			return _cdbdgd
		}
		switch _gaddb := _cccbc.(type) {
		case _b.StartElement:
			switch _gaddb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_cagd := NewCT_Missing()
				if _cbdac := d.DecodeElement(_cagd, &_gaddb); _cbdac != nil {
					return _cbdac
				}
				_dcccf.M = append(_dcccf.M, _cagd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gdeggb := NewCT_Number()
				if _cageb := d.DecodeElement(_gdeggb, &_gaddb); _cageb != nil {
					return _cageb
				}
				_dcccf.N = append(_dcccf.N, _gdeggb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_afgcb := NewCT_Error()
				if _gefbd := d.DecodeElement(_afgcb, &_gaddb); _gefbd != nil {
					return _gefbd
				}
				_dcccf.E = append(_dcccf.E, _afgcb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_ecedb := NewCT_String()
				if _gdcbfc := d.DecodeElement(_ecedb, &_gaddb); _gdcbfc != nil {
					return _gdcbfc
				}
				_dcccf.S = append(_dcccf.S, _ecedb)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0025\u0076", _gaddb.Name)
				if _efdfe := d.Skip(); _efdfe != nil {
					return _efdfe
				}
			}
		case _b.EndElement:
			break _geaea
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MapInfo and its children
func (_fcgbe *CT_MapInfo) Validate() error {
	return _fcgbe.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f")
}

type CT_PivotField struct {

	// Field Name
	NameAttr *string

	// Axis
	AxisAttr ST_Axis

	// Data Field
	DataFieldAttr *bool

	// Custom Subtotal Caption
	SubtotalCaptionAttr *string

	// Show PivotField Header Drop Downs
	ShowDropDownsAttr *bool

	// Hidden Level
	HiddenLevelAttr *bool

	// Unique Member Property
	UniqueMemberPropertyAttr *string

	// Compact
	CompactAttr *bool

	// All Items Expanded
	AllDrilledAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Outline Items
	OutlineAttr *bool

	// Subtotals At Top
	SubtotalTopAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// Drag Field to Page
	DragToPageAttr *bool

	// Field Can Drag to Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Show All Items
	ShowAllAttr *bool

	// Insert Blank Row
	InsertBlankRowAttr *bool

	// Server-based Page Field
	ServerFieldAttr *bool

	// Insert Item Page Break
	InsertPageBreakAttr *bool

	// Auto Show
	AutoShowAttr *bool

	// Top Auto Show
	TopAutoShowAttr *bool

	// Hide New Items
	HideNewItemsAttr *bool

	// Measure Filter
	MeasureFilterAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Items Per Page Count
	ItemPageCountAttr *uint32

	// Auto Sort Type
	SortTypeAttr ST_FieldSortType

	// Data Source Sort
	DataSourceSortAttr *bool

	// Auto Sort
	NonAutoSortDefaultAttr *bool

	// Auto Show Rank By
	RankByAttr *uint32

	// Show Default Subtotal
	DefaultSubtotalAttr *bool

	// Sum Subtotal
	SumSubtotalAttr *bool

	// CountA
	CountASubtotalAttr *bool

	// Average
	AvgSubtotalAttr *bool

	// Max Subtotal
	MaxSubtotalAttr *bool

	// Min Subtotal
	MinSubtotalAttr *bool

	// Product Subtotal
	ProductSubtotalAttr *bool

	// Count
	CountSubtotalAttr *bool

	// StdDev Subtotal
	StdDevSubtotalAttr *bool

	// StdDevP Subtotal
	StdDevPSubtotalAttr *bool

	// Variance Subtotal
	VarSubtotalAttr *bool

	// VarP Subtotal
	VarPSubtotalAttr *bool

	// Show Member Property in Cell
	ShowPropCellAttr *bool

	// Show Member Property ToolTip
	ShowPropTipAttr *bool

	// Show As Caption
	ShowPropAsCaptionAttr *bool

	// Drill State
	DefaultAttributeDrillStateAttr *bool

	// Field Items
	Items *CT_Items

	// AutoSort Scope
	AutoSortScope *CT_AutoSortScope

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ebcad *ST_TableStyleType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gedgbcb, _cdgbee := d.Token()
	if _cdgbee != nil {
		return _cdgbee
	}
	if _ecbec, _ddfcda := _gedgbcb.(_b.EndElement); _ddfcda && _ecbec.Name == start.Name {
		*_ebcad = 1
		return nil
	}
	if _cffgd, _gbebe := _gedgbcb.(_b.CharData); !_gbebe {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gedgbcb)
	} else {
		switch string(_cffgd) {
		case "":
			*_ebcad = 0
		case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
			*_ebcad = 1
		case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
			*_ebcad = 2
		case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_ebcad = 3
		case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_ebcad = 4
		case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_ebcad = 5
		case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
			*_ebcad = 6
		case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
			*_ebcad = 7
		case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
			*_ebcad = 8
		case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
			*_ebcad = 9
		case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
			*_ebcad = 10
		case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
			*_ebcad = 11
		case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
			*_ebcad = 12
		case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
			*_ebcad = 13
		case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_ebcad = 14
		case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
			*_ebcad = 15
		case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_ebcad = 16
		case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_ebcad = 17
		case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
			*_ebcad = 18
		case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_ebcad = 19
		case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
			*_ebcad = 20
		case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_ebcad = 21
		case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
			*_ebcad = 22
		case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_ebcad = 23
		case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_ebcad = 24
		case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
			*_ebcad = 25
		case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_ebcad = 26
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
			*_ebcad = 27
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
			*_ebcad = 28
		}
	}
	_gedgbcb, _cdgbee = d.Token()
	if _cdgbee != nil {
		return _cdgbee
	}
	if _gddggb, _dedda := _gedgbcb.(_b.EndElement); _dedda && _gddggb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gedgbcb)
}

type CT_GroupMembers struct {

	// Group Member Count
	CountAttr *uint32

	// OLAP Group Member
	GroupMember []*CT_GroupMember
}

func (_bgded *CT_FilterColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _facfe := range start.Attr {
		if _facfe.Name.Local == "\u0063\u006f\u006cI\u0064" {
			_daec, _dbddge := _e.ParseUint(_facfe.Value, 10, 32)
			if _dbddge != nil {
				return _dbddge
			}
			_bgded.ColIdAttr = uint32(_daec)
			continue
		}
		if _facfe.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e" {
			_faafd, _decc := _e.ParseBool(_facfe.Value)
			if _decc != nil {
				return _decc
			}
			_bgded.HiddenButtonAttr = &_faafd
			continue
		}
		if _facfe.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e" {
			_acdfa, _afead := _e.ParseBool(_facfe.Value)
			if _afead != nil {
				return _afead
			}
			_bgded.ShowButtonAttr = &_acdfa
			continue
		}
	}
_febgg:
	for {
		_adagb, _dcgag := d.Token()
		if _dcgag != nil {
			return _dcgag
		}
		switch _afdb := _adagb.(type) {
		case _b.StartElement:
			switch _afdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_bgded.Filters = NewCT_Filters()
				if _bfdfa := d.DecodeElement(_bgded.Filters, &_afdb); _bfdfa != nil {
					return _bfdfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
				_bgded.Top10 = NewCT_Top10()
				if _gfga := d.DecodeElement(_bgded.Top10, &_afdb); _gfga != nil {
					return _gfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
				_bgded.CustomFilters = NewCT_CustomFilters()
				if _caaae := d.DecodeElement(_bgded.CustomFilters, &_afdb); _caaae != nil {
					return _caaae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bgded.DynamicFilter = NewCT_DynamicFilter()
				if _dcdfc := d.DecodeElement(_bgded.DynamicFilter, &_afdb); _dcdfc != nil {
					return _dcdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bgded.ColorFilter = NewCT_ColorFilter()
				if _eceg := d.DecodeElement(_bgded.ColorFilter, &_afdb); _eceg != nil {
					return _eceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bgded.IconFilter = NewCT_IconFilter()
				if _fagde := d.DecodeElement(_bgded.IconFilter, &_afdb); _fagde != nil {
					return _fagde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgded.ExtLst = NewCT_ExtensionList()
				if _fcefb := d.DecodeElement(_bgded.ExtLst, &_afdb); _fcefb != nil {
					return _fcefb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _afdb.Name)
				if _dfeba := d.Skip(); _dfeba != nil {
					return _dfeba
				}
			}
		case _b.EndElement:
			break _febgg
		case _b.CharData:
		}
	}
	return nil
}
func (_gfdde *CT_Filters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfdde.BlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061n\u006b"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfdde.BlankAttr))})
	}
	if _gfdde.CalendarTypeAttr != _c.ST_CalendarTypeUnset {
		_gedd, _fcbf := _gfdde.CalendarTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065"})
		if _fcbf != nil {
			return _fcbf
		}
		start.Attr = append(start.Attr, _gedd)
	}
	e.EncodeToken(start)
	if _gfdde.Filter != nil {
		_ebca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _fbega := range _gfdde.Filter {
			e.EncodeElement(_fbega, _ebca)
		}
	}
	if _gfdde.DateGroupItem != nil {
		_gbgac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0064\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}}
		for _, _ecbgcb := range _gfdde.DateGroupItem {
			e.EncodeElement(_ecbgcb, _gbgac)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PhoneticRun struct {

	// Base Text Start Index
	SbAttr uint32

	// Base Text End Index
	EbAttr uint32

	// Text
	T string
}

func NewCT_WebPublishing() *CT_WebPublishing { _fegdd := &CT_WebPublishing{}; return _fegdd }

// Validate validates the CT_GroupLevel and its children
func (_cafgc *CT_GroupLevel) Validate() error {
	return _cafgc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c")
}
func NewCT_OleObjects() *CT_OleObjects { _bgcdg := &CT_OleObjects{}; return _bgcdg }
func NewExternalLink() *ExternalLink {
	_bdggc := &ExternalLink{}
	_bdggc.CT_ExternalLink = *NewCT_ExternalLink()
	return _bdggc
}

// Validate validates the CT_Break and its children
func (_fegf *CT_Break) Validate() error {
	return _fegf.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b")
}
func (_gedfb *ST_CellType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gedfb = 0
	case "\u0062":
		*_gedfb = 1
	case "\u006e":
		*_gedfb = 2
	case "\u0065":
		*_gedfb = 3
	case "\u0073":
		*_gedfb = 4
	case "\u0073\u0074\u0072":
		*_gedfb = 5
	case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
		*_gedfb = 6
	}
	return nil
}
func (_acecc *CT_DateTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _acecc.VAttr)})
	if _acecc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_acecc.UAttr))})
	}
	if _acecc.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_acecc.FAttr))})
	}
	if _acecc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_acecc.CAttr)})
	}
	if _acecc.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_acecc.CpAttr)})
	}
	e.EncodeToken(start)
	if _acecc.X != nil {
		_bbgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _fdgfb := range _acecc.X {
			e.EncodeElement(_fdgfb, _bbgdg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aebac *CT_MetadataBlock) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_egca:
	for {
		_fbcggd, _egdba := d.Token()
		if _egdba != nil {
			return _egdba
		}
		switch _fgcgd := _fbcggd.(type) {
		case _b.StartElement:
			switch _fgcgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}:
				_faegg := NewCT_MetadataRecord()
				if _eeab := d.DecodeElement(_faegg, &_fgcgd); _eeab != nil {
					return _eeab
				}
				_aebac.Rc = append(_aebac.Rc, _faegg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025v", _fgcgd.Name)
				if _aeabg := d.Skip(); _aeabg != nil {
					return _aeabg
				}
			}
		case _b.EndElement:
			break _egca
		case _b.CharData:
		}
	}
	return nil
}

type CT_CustomProperties struct {

	// Custom Property
	CustomPr []*CT_CustomProperty
}

// Validate validates the CT_DataValidation and its children
func (_gaccb *CT_DataValidation) Validate() error {
	return _gaccb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_CommentPr and its children, prefixing error messages with path
func (_ccefd *CT_CommentPr) ValidateWithPath(path string) error {
	if _ccec := _ccefd.TextHAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0048\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _ccec != nil {
		return _ccec
	}
	if _ddbc := _ccefd.TextVAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0056\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _ddbc != nil {
		return _ddbc
	}
	if _gegd := _ccefd.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _gegd != nil {
		return _gegd
	}
	return nil
}

// Validate validates the CT_ColorFilter and its children
func (_add *CT_ColorFilter) Validate() error {
	return _add.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_I and its children, prefixing error messages with path
func (_bfdee *CT_I) ValidateWithPath(path string) error {
	if _gfca := _bfdee.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gfca != nil {
		return _gfca
	}
	for _bdec, _gceabc := range _bfdee.X {
		if _dcabfb := _gceabc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bdec)); _dcabfb != nil {
			return _dcabfb
		}
	}
	return nil
}
func NewCT_MapInfo() *CT_MapInfo                 { _dgdfg := &CT_MapInfo{}; return _dgdfg }
func (_ddebg ST_TableStyleType) Validate() error { return _ddebg.ValidateWithPath("") }

type CT_CalculatedMembers struct {

	// Calculated Members Count
	CountAttr *uint32

	// Calculated Member
	CalculatedMember []*CT_CalculatedMember
}

func (_fgcd *CT_CustomProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _fgcd.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fgcd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abgef ST_ConditionalFormattingOperator) ValidateWithPath(path string) error {
	switch _abgef {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abgef))
	}
	return nil
}

// Validate validates the CT_RgbColor and its children
func (_bggae *CT_RgbColor) Validate() error {
	return _bggae.ValidateWithPath("C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

type CT_RevisionDefinedName struct {

	// Local Name Sheet Id
	LocalSheetIdAttr *uint32

	// Custom View
	CustomViewAttr *bool

	// Name
	NameAttr string

	// Function
	FunctionAttr *bool

	// Old Function
	OldFunctionAttr *bool

	// Function Group Id
	FunctionGroupIdAttr *uint8

	// Old Function Group Id
	OldFunctionGroupIdAttr *uint8

	// Shortcut Key
	ShortcutKeyAttr *uint8

	// Old Short Cut Key
	OldShortcutKeyAttr *uint8

	// Named Range Hidden
	HiddenAttr *bool

	// Old Hidden
	OldHiddenAttr *bool

	// New Custom Menu
	CustomMenuAttr *string

	// Old Custom Menu Text
	OldCustomMenuAttr *string

	// Description
	DescriptionAttr *string

	// Old Description
	OldDescriptionAttr *string

	// New Help Topic
	HelpAttr *string

	// Old Help Topic
	OldHelpAttr *string

	// Status Bar
	StatusBarAttr *string

	// Old Status Bar
	OldStatusBarAttr *string

	// Name Comment
	CommentAttr *string

	// Old Name Comment
	OldCommentAttr *string

	// Formula
	Formula *string

	// Old Formula
	OldFormula *string
	ExtLst     *CT_ExtensionList
	RIdAttr    *uint32
	UaAttr     *bool
	RaAttr     *bool
}

func (_aagagb ST_ItemType) Validate() error { return _aagagb.ValidateWithPath("") }

// Validate validates the CT_NumFmts and its children
func (_abcbdc *CT_NumFmts) Validate() error {
	return _abcbdc.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073")
}
func (_dbfddg ST_DataValidationOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbfddg.String(), start)
}
func NewCT_FontName() *CT_FontName { _ecff := &CT_FontName{}; return _ecff }
func (_bgafdg ST_TableType) ValidateWithPath(path string) error {
	switch _bgafdg {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgafdg))
	}
	return nil
}
func (_ededff ST_VerticalAlignment) ValidateWithPath(path string) error {
	switch _ededff {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ededff))
	}
	return nil
}

type QueryTable struct{ CT_QueryTable }
type CT_MemberProperty struct {

	// OLAP Member Property Unique Name
	NameAttr *string

	// Show Cell
	ShowCellAttr *bool

	// Show Tooltip
	ShowTipAttr *bool

	// Show As Caption
	ShowAsCaptionAttr *bool

	// Name Length
	NameLenAttr *uint32

	// Property Name Character Index
	PPosAttr *uint32

	// Property Name Length
	PLenAttr *uint32

	// Level Index
	LevelAttr *uint32

	// Field Index
	FieldAttr uint32
}

// Validate validates the CT_BooleanProperty and its children
func (_ddfe *CT_BooleanProperty) Validate() error {
	return _ddfe.ValidateWithPath("\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079")
}

type CT_CellStyle struct {

	// User Defined Cell Style
	NameAttr *string

	// Format Id
	XfIdAttr uint32

	// Built-In Style Id
	BuiltinIdAttr *uint32

	// Outline Style
	ILevelAttr *uint32

	// Hidden Style
	HiddenAttr *bool

	// Custom Built In
	CustomBuiltinAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_aafcf ST_Axis) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfdfg := _b.Attr{}
	_bfdfg.Name = name
	switch _aafcf {
	case ST_AxisUnset:
		_bfdfg.Value = ""
	case ST_AxisAxisRow:
		_bfdfg.Value = "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case ST_AxisAxisCol:
		_bfdfg.Value = "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case ST_AxisAxisPage:
		_bfdfg.Value = "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case ST_AxisAxisValues:
		_bfdfg.Value = "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _bfdfg, nil
}

type CT_PatternFill struct {

	// Pattern Type
	PatternTypeAttr ST_PatternType

	// Foreground Color
	FgColor *CT_Color

	// Background Color
	BgColor *CT_Color
}

// ValidateWithPath validates the CT_WebPublishObject and its children, prefixing error messages with path
func (_dddff *CT_WebPublishObject) ValidateWithPath(path string) error { return nil }

type CT_MergeCells struct {

	// Count
	CountAttr *uint32

	// Merged Cell
	MergeCell []*CT_MergeCell
}

// Validate validates the CT_Filters and its children
func (_eebeee *CT_Filters) Validate() error {
	return _eebeee.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_eacgfc *CT_pivotTableDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _eacgfc.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _eacgfc.CacheIdAttr)})
	if _eacgfc.DataOnRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.DataOnRowsAttr))})
	}
	if _eacgfc.DataPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.DataPositionAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _eacgfc.DataCaptionAttr)})
	if _eacgfc.GrandTotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.GrandTotalCaptionAttr)})
	}
	if _eacgfc.ErrorCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.ErrorCaptionAttr)})
	}
	if _eacgfc.ShowErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowErrorAttr))})
	}
	if _eacgfc.MissingCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.MissingCaptionAttr)})
	}
	if _eacgfc.ShowMissingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowMissingAttr))})
	}
	if _eacgfc.PageStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.PageStyleAttr)})
	}
	if _eacgfc.PivotTableStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.PivotTableStyleAttr)})
	}
	if _eacgfc.VacatedStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.VacatedStyleAttr)})
	}
	if _eacgfc.TagAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0067"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.TagAttr)})
	}
	if _eacgfc.UpdatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.UpdatedVersionAttr)})
	}
	if _eacgfc.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.MinRefreshableVersionAttr)})
	}
	if _eacgfc.AsteriskTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.AsteriskTotalsAttr))})
	}
	if _eacgfc.ShowItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowItemsAttr))})
	}
	if _eacgfc.EditDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.EditDataAttr))})
	}
	if _eacgfc.DisableFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.DisableFieldListAttr))})
	}
	if _eacgfc.ShowCalcMbrsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowCalcMbrsAttr))})
	}
	if _eacgfc.VisualTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.VisualTotalsAttr))})
	}
	if _eacgfc.ShowMultipleLabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowMultipleLabelAttr))})
	}
	if _eacgfc.ShowDataDropDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowDataDropDownAttr))})
	}
	if _eacgfc.ShowDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowDrillAttr))})
	}
	if _eacgfc.PrintDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.PrintDrillAttr))})
	}
	if _eacgfc.ShowMemberPropertyTipsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowMemberPropertyTipsAttr))})
	}
	if _eacgfc.ShowDataTipsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowDataTipsAttr))})
	}
	if _eacgfc.EnableWizardAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.EnableWizardAttr))})
	}
	if _eacgfc.EnableDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.EnableDrillAttr))})
	}
	if _eacgfc.EnableFieldPropertiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.EnableFieldPropertiesAttr))})
	}
	if _eacgfc.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.PreserveFormattingAttr))})
	}
	if _eacgfc.UseAutoFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.UseAutoFormattingAttr))})
	}
	if _eacgfc.PageWrapAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.PageWrapAttr)})
	}
	if _eacgfc.PageOverThenDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.PageOverThenDownAttr))})
	}
	if _eacgfc.SubtotalHiddenItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.SubtotalHiddenItemsAttr))})
	}
	if _eacgfc.RowGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.RowGrandTotalsAttr))})
	}
	if _eacgfc.ColGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ColGrandTotalsAttr))})
	}
	if _eacgfc.FieldPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.FieldPrintTitlesAttr))})
	}
	if _eacgfc.ItemPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ItemPrintTitlesAttr))})
	}
	if _eacgfc.MergeItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.MergeItemAttr))})
	}
	if _eacgfc.ShowDropZonesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowDropZonesAttr))})
	}
	if _eacgfc.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.CreatedVersionAttr)})
	}
	if _eacgfc.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.IndentAttr)})
	}
	if _eacgfc.ShowEmptyRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowEmptyRowAttr))})
	}
	if _eacgfc.ShowEmptyColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowEmptyColAttr))})
	}
	if _eacgfc.ShowHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ShowHeadersAttr))})
	}
	if _eacgfc.CompactAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.CompactAttr))})
	}
	if _eacgfc.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.OutlineAttr))})
	}
	if _eacgfc.OutlineDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.OutlineDataAttr))})
	}
	if _eacgfc.CompactDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.CompactDataAttr))})
	}
	if _eacgfc.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.PublishedAttr))})
	}
	if _eacgfc.GridDropZonesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.GridDropZonesAttr))})
	}
	if _eacgfc.ImmersiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ImmersiveAttr))})
	}
	if _eacgfc.MultipleFieldFiltersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.MultipleFieldFiltersAttr))})
	}
	if _eacgfc.ChartFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.ChartFormatAttr)})
	}
	if _eacgfc.RowHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.RowHeaderCaptionAttr)})
	}
	if _eacgfc.ColHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.ColHeaderCaptionAttr)})
	}
	if _eacgfc.FieldListSortAscendingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.FieldListSortAscendingAttr))})
	}
	if _eacgfc.MdxSubqueriesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.MdxSubqueriesAttr))})
	}
	if _eacgfc.CustomListSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.CustomListSortAttr))})
	}
	if _eacgfc.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eacgfc.AutoFormatIdAttr)})
	}
	if _eacgfc.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ApplyNumberFormatsAttr))})
	}
	if _eacgfc.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ApplyBorderFormatsAttr))})
	}
	if _eacgfc.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ApplyFontFormatsAttr))})
	}
	if _eacgfc.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ApplyPatternFormatsAttr))})
	}
	if _eacgfc.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ApplyAlignmentFormatsAttr))})
	}
	if _eacgfc.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eacgfc.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	_aacbgd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}}
	e.EncodeElement(_eacgfc.Location, _aacbgd)
	if _eacgfc.PivotFields != nil {
		_dfccg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_eacgfc.PivotFields, _dfccg)
	}
	if _eacgfc.RowFields != nil {
		_gegeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_eacgfc.RowFields, _gegeb)
	}
	if _eacgfc.RowItems != nil {
		_ebfcc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_eacgfc.RowItems, _ebfcc)
	}
	if _eacgfc.ColFields != nil {
		_gbfag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_eacgfc.ColFields, _gbfag)
	}
	if _eacgfc.ColItems != nil {
		_cbcge := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_eacgfc.ColItems, _cbcge)
	}
	if _eacgfc.PageFields != nil {
		_adcce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_eacgfc.PageFields, _adcce)
	}
	if _eacgfc.DataFields != nil {
		_becg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_eacgfc.DataFields, _becg)
	}
	if _eacgfc.Formats != nil {
		_gcffdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_eacgfc.Formats, _gcffdg)
	}
	if _eacgfc.ConditionalFormats != nil {
		_gcfcg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_eacgfc.ConditionalFormats, _gcfcg)
	}
	if _eacgfc.ChartFormats != nil {
		_ggdba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_eacgfc.ChartFormats, _ggdba)
	}
	if _eacgfc.PivotHierarchies != nil {
		_gegbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_eacgfc.PivotHierarchies, _gegbe)
	}
	if _eacgfc.PivotTableStyleInfo != nil {
		_aabbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006ef\u006f"}}
		e.EncodeElement(_eacgfc.PivotTableStyleInfo, _aabbf)
	}
	if _eacgfc.Filters != nil {
		_dddba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_eacgfc.Filters, _dddba)
	}
	if _eacgfc.RowHierarchiesUsage != nil {
		_agdde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_eacgfc.RowHierarchiesUsage, _agdde)
	}
	if _eacgfc.ColHierarchiesUsage != nil {
		_eabgag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_eacgfc.ColHierarchiesUsage, _eabgag)
	}
	if _eacgfc.ExtLst != nil {
		_geadge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eacgfc.ExtLst, _geadge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aef *CT_Border) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aef.DiagonalUpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_aef.DiagonalUpAttr))})
	}
	if _aef.DiagonalDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_aef.DiagonalDownAttr))})
	}
	if _aef.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_aef.OutlineAttr))})
	}
	e.EncodeToken(start)
	if _aef.Start != nil {
		_ebed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0061\u0072\u0074"}}
		e.EncodeElement(_aef.Start, _ebed)
	}
	if _aef.End != nil {
		_ecf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0064"}}
		e.EncodeElement(_aef.End, _ecf)
	}
	if _aef.Left != nil {
		_adb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_aef.Left, _adb)
	}
	if _aef.Right != nil {
		_feeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_aef.Right, _feeb)
	}
	if _aef.Top != nil {
		_fdde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070"}}
		e.EncodeElement(_aef.Top, _fdde)
	}
	if _aef.Bottom != nil {
		_bec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0074\u0074\u006fm"}}
		e.EncodeElement(_aef.Bottom, _bec)
	}
	if _aef.Diagonal != nil {
		_fbca := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}}
		e.EncodeElement(_aef.Diagonal, _fbca)
	}
	if _aef.Vertical != nil {
		_dgba := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}}
		e.EncodeElement(_aef.Vertical, _dgba)
	}
	if _aef.Horizontal != nil {
		_bcfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}}
		e.EncodeElement(_aef.Horizontal, _bcfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcgff ST_Comments) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_agggb := _b.Attr{}
	_agggb.Name = name
	switch _bcgff {
	case ST_CommentsUnset:
		_agggb.Value = ""
	case ST_CommentsCommNone:
		_agggb.Value = "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case ST_CommentsCommIndicator:
		_agggb.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case ST_CommentsCommIndAndComment:
		_agggb.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return _agggb, nil
}

type CT_Query struct {

	// MDX Query String
	MdxAttr string

	// Tuples
	Tpls *CT_Tuples
}

func NewCT_CsPageSetup() *CT_CsPageSetup { _afbbb := &CT_CsPageSetup{}; return _afbbb }

// Validate validates the CT_RangePr and its children
func (_aebbf *CT_RangePr) Validate() error {
	return _aebbf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072")
}

// Validate validates the CT_RevisionCustomView and its children
func (_bdgedc *CT_RevisionCustomView) Validate() error {
	return _bdgedc.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_PivotCacheDefinition and its children, prefixing error messages with path
func (_dcbad *CT_PivotCacheDefinition) ValidateWithPath(path string) error {
	if _bcbcc := _dcbad.CacheSource.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"); _bcbcc != nil {
		return _bcbcc
	}
	if _dadcb := _dcbad.CacheFields.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _dadcb != nil {
		return _dadcb
	}
	if _dcbad.CacheHierarchies != nil {
		if _fcgcb := _dcbad.CacheHierarchies.ValidateWithPath(path + "\u002f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _fcgcb != nil {
			return _fcgcb
		}
	}
	if _dcbad.Kpis != nil {
		if _edad := _dcbad.Kpis.ValidateWithPath(path + "\u002f\u004b\u0070i\u0073"); _edad != nil {
			return _edad
		}
	}
	if _dcbad.TupleCache != nil {
		if _edbec := _dcbad.TupleCache.ValidateWithPath(path + "/\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"); _edbec != nil {
			return _edbec
		}
	}
	if _dcbad.CalculatedItems != nil {
		if _bcecb := _dcbad.CalculatedItems.ValidateWithPath(path + "\u002f\u0043a\u006c\u0063\u0075l\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _bcecb != nil {
			return _bcecb
		}
	}
	if _dcbad.CalculatedMembers != nil {
		if _bfaaaf := _dcbad.CalculatedMembers.ValidateWithPath(path + "\u002fC\u0061l\u0063\u0075\u006c\u0061\u0074e\u0064\u004de\u006d\u0062\u0065\u0072\u0073"); _bfaaaf != nil {
			return _bfaaaf
		}
	}
	if _dcbad.Dimensions != nil {
		if _fcfbc := _dcbad.Dimensions.ValidateWithPath(path + "/\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"); _fcfbc != nil {
			return _fcfbc
		}
	}
	if _dcbad.MeasureGroups != nil {
		if _bbbbfb := _dcbad.MeasureGroups.ValidateWithPath(path + "\u002f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"); _bbbbfb != nil {
			return _bbbbfb
		}
	}
	if _dcbad.Maps != nil {
		if _cggad := _dcbad.Maps.ValidateWithPath(path + "\u002f\u004d\u0061p\u0073"); _cggad != nil {
			return _cggad
		}
	}
	if _dcbad.ExtLst != nil {
		if _bafge := _dcbad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bafge != nil {
			return _bafge
		}
	}
	return nil
}

type CT_CustomSheetViews struct {

	// Custom Sheet View
	CustomSheetView []*CT_CustomSheetView
}

func (_bcfaf ST_DateTimeGrouping) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcfaf.String(), start)
}
func (_edecf *CT_CustomChartsheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _edecf.CustomSheetView != nil {
		_bdfcd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
		for _, _adgd := range _edecf.CustomSheetView {
			e.EncodeElement(_adgd, _bdfcd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RevisionAutoFormatting() *CT_RevisionAutoFormatting {
	_gddgc := &CT_RevisionAutoFormatting{}
	return _gddgc
}

type CT_OleObject struct {

	// Embedded Object ProgId
	ProgIdAttr *string

	// Data or View Aspect
	DvAspectAttr ST_DvAspect

	// Embedded Object's Link Moniker
	LinkAttr *string

	// Linked Embedded Object Update
	OleUpdateAttr ST_OleUpdate

	// Auto Load
	AutoLoadAttr *bool

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      *string

	// Embedded Object Properties
	ObjectPr *CT_ObjectPr
}

func NewCT_Mdx() *CT_Mdx { _ecdbc := &CT_Mdx{}; _ecdbc.FAttr = ST_MdxFunctionType(1); return _ecdbc }
func (_ddcae *CT_MeasureGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _ddcae.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _ddcae.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_FontFamily() *CT_FontFamily { _dcdbd := &CT_FontFamily{}; _dcdbd.ValAttr = 0; return _dcdbd }
func (_aafdb *ST_DateTimeGrouping) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agedb, _ccfcg := d.Token()
	if _ccfcg != nil {
		return _ccfcg
	}
	if _gaadfg, _dacfb := _agedb.(_b.EndElement); _dacfb && _gaadfg.Name == start.Name {
		*_aafdb = 1
		return nil
	}
	if _gdgcgb, _gbecf := _agedb.(_b.CharData); !_gbecf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agedb)
	} else {
		switch string(_gdgcgb) {
		case "":
			*_aafdb = 0
		case "\u0079\u0065\u0061\u0072":
			*_aafdb = 1
		case "\u006d\u006f\u006et\u0068":
			*_aafdb = 2
		case "\u0064\u0061\u0079":
			*_aafdb = 3
		case "\u0068\u006f\u0075\u0072":
			*_aafdb = 4
		case "\u006d\u0069\u006e\u0075\u0074\u0065":
			*_aafdb = 5
		case "\u0073\u0065\u0063\u006f\u006e\u0064":
			*_aafdb = 6
		}
	}
	_agedb, _ccfcg = d.Token()
	if _ccfcg != nil {
		return _ccfcg
	}
	if _ffgfe, _agdeg := _agedb.(_b.EndElement); _agdeg && _ffgfe.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agedb)
}
func (_afbcf *ST_PhoneticAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afbcf = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_afbcf = 1
	case "\u006c\u0065\u0066\u0074":
		*_afbcf = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_afbcf = 3
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_afbcf = 4
	}
	return nil
}

type CT_SmartTagPr struct {

	// Embed SmartTags
	EmbedAttr *bool

	// Show Smart Tags
	ShowAttr ST_SmartTagShow
}

func (_gbeg *CT_HierarchyUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbaeab := range start.Attr {
		if _cbaeab.Name.Local == "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065" {
			_gdecb, _bcbbd := _e.ParseInt(_cbaeab.Value, 10, 32)
			if _bcbbd != nil {
				return _bcbbd
			}
			_gbeg.HierarchyUsageAttr = int32(_gdecb)
			continue
		}
	}
	for {
		_dbedf, _afacg := d.Token()
		if _afacg != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0055\u0073\u0061\u0067\u0065: \u0025\u0073", _afacg)
		}
		if _dgdca, _ggbgb := _dbedf.(_b.EndElement); _ggbgb && _dgdca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebgcg *CT_PrintOptions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebgcg.HorizontalCenteredAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebgcg.HorizontalCenteredAttr))})
	}
	if _ebgcg.VerticalCenteredAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebgcg.VerticalCenteredAttr))})
	}
	if _ebgcg.HeadingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebgcg.HeadingsAttr))})
	}
	if _ebgcg.GridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebgcg.GridLinesAttr))})
	}
	if _ebgcg.GridLinesSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebgcg.GridLinesSetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the PivotCacheDefinition and its children
func (_acbdd *PivotCacheDefinition) Validate() error {
	return _acbdd.ValidateWithPath("P\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}
func NewCT_BookViews() *CT_BookViews { _acd := &CT_BookViews{}; return _acd }

type CT_DataConsolidate struct {

	// Function Index
	FunctionAttr ST_DataConsolidateFunction

	// Use Starting Column Labels
	StartLabelsAttr *bool

	// Starting Column Labels
	LeftLabelsAttr *bool

	// Labels In Top Row
	TopLabelsAttr *bool

	// Link
	LinkAttr *bool

	// Data Consolidation References
	DataRefs *CT_DataRefs
}

func (_ecbddd *ST_CellComments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_becgdd, _bacgd := d.Token()
	if _bacgd != nil {
		return _bacgd
	}
	if _bbeef, _aceac := _becgdd.(_b.EndElement); _aceac && _bbeef.Name == start.Name {
		*_ecbddd = 1
		return nil
	}
	if _afafbf, _aeeefb := _becgdd.(_b.CharData); !_aeeefb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _becgdd)
	} else {
		switch string(_afafbf) {
		case "":
			*_ecbddd = 0
		case "\u006e\u006f\u006e\u0065":
			*_ecbddd = 1
		case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
			*_ecbddd = 2
		case "\u0061\u0074\u0045n\u0064":
			*_ecbddd = 3
		}
	}
	_becgdd, _bacgd = d.Token()
	if _bacgd != nil {
		return _bacgd
	}
	if _gbceaf, _badaf := _becgdd.(_b.EndElement); _badaf && _gbceaf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _becgdd)
}
func (_fggfg *CT_Worksheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fggfg.SheetPr != nil {
		_bedcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fggfg.SheetPr, _bedcb)
	}
	if _fggfg.Dimension != nil {
		_fdcgca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_fggfg.Dimension, _fdcgca)
	}
	if _fggfg.SheetViews != nil {
		_dagbcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fggfg.SheetViews, _dagbcd)
	}
	if _fggfg.SheetFormatPr != nil {
		_fdfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_fggfg.SheetFormatPr, _fdfd)
	}
	if _fggfg.Cols != nil {
		_adbdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _dcaga := range _fggfg.Cols {
			e.EncodeElement(_dcaga, _adbdc)
		}
	}
	_cdcdca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_fggfg.SheetData, _cdcdca)
	if _fggfg.SheetCalcPr != nil {
		_befed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_fggfg.SheetCalcPr, _befed)
	}
	if _fggfg.SheetProtection != nil {
		_baeecf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fggfg.SheetProtection, _baeecf)
	}
	if _fggfg.ProtectedRanges != nil {
		_fgcdbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073"}}
		e.EncodeElement(_fggfg.ProtectedRanges, _fgcdbf)
	}
	if _fggfg.Scenarios != nil {
		_egbbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"}}
		e.EncodeElement(_fggfg.Scenarios, _egbbe)
	}
	if _fggfg.AutoFilter != nil {
		_gecbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fggfg.AutoFilter, _gecbg)
	}
	if _fggfg.SortState != nil {
		_eedfbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_fggfg.SortState, _eedfbf)
	}
	if _fggfg.DataConsolidate != nil {
		_eaeef := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_fggfg.DataConsolidate, _eaeef)
	}
	if _fggfg.CustomSheetViews != nil {
		_acbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fggfg.CustomSheetViews, _acbcc)
	}
	if _fggfg.MergeCells != nil {
		_bdgfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}}
		e.EncodeElement(_fggfg.MergeCells, _bdgfe)
	}
	if _fggfg.PhoneticPr != nil {
		_dadcff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_fggfg.PhoneticPr, _dadcff)
	}
	if _fggfg.ConditionalFormatting != nil {
		_bgdcdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _edfaae := range _fggfg.ConditionalFormatting {
			e.EncodeElement(_edfaae, _bgdcdg)
		}
	}
	if _fggfg.DataValidations != nil {
		_ffgcf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fggfg.DataValidations, _ffgcf)
	}
	if _fggfg.Hyperlinks != nil {
		_afafa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}}
		e.EncodeElement(_fggfg.Hyperlinks, _afafa)
	}
	if _fggfg.PrintOptions != nil {
		_ggecd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fggfg.PrintOptions, _ggecd)
	}
	if _fggfg.PageMargins != nil {
		_beeaad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fggfg.PageMargins, _beeaad)
	}
	if _fggfg.PageSetup != nil {
		_fabgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fggfg.PageSetup, _fabgd)
	}
	if _fggfg.HeaderFooter != nil {
		_efadf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fggfg.HeaderFooter, _efadf)
	}
	if _fggfg.RowBreaks != nil {
		_fedgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fggfg.RowBreaks, _fedgb)
	}
	if _fggfg.ColBreaks != nil {
		_aggbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fggfg.ColBreaks, _aggbe)
	}
	if _fggfg.CustomProperties != nil {
		_bbfega := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_fggfg.CustomProperties, _bbfega)
	}
	if _fggfg.CellWatches != nil {
		_bcfef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_fggfg.CellWatches, _bcfef)
	}
	if _fggfg.IgnoredErrors != nil {
		_abgab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}}
		e.EncodeElement(_fggfg.IgnoredErrors, _abgab)
	}
	if _fggfg.SmartTags != nil {
		_cabba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_fggfg.SmartTags, _cabba)
	}
	if _fggfg.Drawing != nil {
		_gbabde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fggfg.Drawing, _gbabde)
	}
	if _fggfg.LegacyDrawing != nil {
		_cfcae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fggfg.LegacyDrawing, _cfcae)
	}
	if _fggfg.LegacyDrawingHF != nil {
		_gdbdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fggfg.LegacyDrawingHF, _gdbdd)
	}
	if _fggfg.DrawingHF != nil {
		_aeafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fggfg.DrawingHF, _aeafc)
	}
	if _fggfg.Picture != nil {
		_ffaaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_fggfg.Picture, _ffaaae)
	}
	if _fggfg.OleObjects != nil {
		_fdeda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_fggfg.OleObjects, _fdeda)
	}
	if _fggfg.Controls != nil {
		_abccd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_fggfg.Controls, _abccd)
	}
	if _fggfg.WebPublishItems != nil {
		_gbced := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fggfg.WebPublishItems, _gbced)
	}
	if _fggfg.TableParts != nil {
		_fdgcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}}
		e.EncodeElement(_fggfg.TableParts, _fdgcb)
	}
	if _fggfg.ExtLst != nil {
		_gdaaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fggfg.ExtLst, _gdaaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Tuples and its children, prefixing error messages with path
func (_cfacd *CT_Tuples) ValidateWithPath(path string) error {
	for _eeffb, _addge := range _cfacd.Tpl {
		if _fcfdc := _addge.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0054\u0070\u006c\u005b\u0025\u0064\u005d", path, _eeffb)); _fcfdc != nil {
			return _fcfdc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupItems and its children, prefixing error messages with path
func (_dddfd *CT_GroupItems) ValidateWithPath(path string) error {
	for _aadb, _cgcae := range _dddfd.M {
		if _gabf := _cgcae.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _aadb)); _gabf != nil {
			return _gabf
		}
	}
	for _dedb, _deddgc := range _dddfd.N {
		if _dfeda := _deddgc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _dedb)); _dfeda != nil {
			return _dfeda
		}
	}
	for _bdcg, _gadca := range _dddfd.B {
		if _bcgf := _gadca.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _bdcg)); _bcgf != nil {
			return _bcgf
		}
	}
	for _cdadc, _cdff := range _dddfd.E {
		if _baeaf := _cdff.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _cdadc)); _baeaf != nil {
			return _baeaf
		}
	}
	for _fcee, _gefaf := range _dddfd.S {
		if _cbdbe := _gefaf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _fcee)); _cbdbe != nil {
			return _cbdbe
		}
	}
	for _gafac, _feefd := range _dddfd.D {
		if _bdebc := _feefd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _gafac)); _bdebc != nil {
			return _bdebc
		}
	}
	return nil
}

type CT_OleItem struct {

	// Object Name
	NameAttr string

	// Icon
	IconAttr *bool

	// Advise
	AdviseAttr *bool

	// Object is an Image
	PreferPicAttr *bool
}

// Validate validates the CT_RevisionComment and its children
func (_gecfa *CT_RevisionComment) Validate() error {
	return _gecfa.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074")
}
func (_aabcgd *CT_Workbook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aabcgd.ConformanceAttr != _c.ST_ConformanceClassUnset {
		_fcccca, _ggfed := _aabcgd.ConformanceAttr.MarshalXMLAttr(_b.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _ggfed != nil {
			return _ggfed
		}
		start.Attr = append(start.Attr, _fcccca)
	}
	e.EncodeToken(start)
	if _aabcgd.FileVersion != nil {
		_fadaad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_aabcgd.FileVersion, _fadaad)
	}
	if _aabcgd.FileSharing != nil {
		_cagcec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067"}}
		e.EncodeElement(_aabcgd.FileSharing, _cagcec)
	}
	if _aabcgd.WorkbookPr != nil {
		_dedab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}}
		e.EncodeElement(_aabcgd.WorkbookPr, _dedab)
	}
	if _aabcgd.WorkbookProtection != nil {
		_gcbdb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0077\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_aabcgd.WorkbookProtection, _gcbdb)
	}
	if _aabcgd.BookViews != nil {
		_edcff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_aabcgd.BookViews, _edcff)
	}
	_fcdbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0065\u0065\u0074s"}}
	e.EncodeElement(_aabcgd.Sheets, _fcdbb)
	if _aabcgd.FunctionGroups != nil {
		_dgdbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_aabcgd.FunctionGroups, _dgdbb)
	}
	if _aabcgd.ExternalReferences != nil {
		_bcaeb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0065\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_aabcgd.ExternalReferences, _bcaeb)
	}
	if _aabcgd.DefinedNames != nil {
		_dggaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_aabcgd.DefinedNames, _dggaa)
	}
	if _aabcgd.CalcPr != nil {
		_eaaeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0061\u006c\u0063\u0050r"}}
		e.EncodeElement(_aabcgd.CalcPr, _eaaeg)
	}
	if _aabcgd.OleSize != nil {
		_dgbbaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0053\u0069\u007a\u0065"}}
		e.EncodeElement(_aabcgd.OleSize, _dgbbaa)
	}
	if _aabcgd.CustomWorkbookViews != nil {
		_fecdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073"}}
		e.EncodeElement(_aabcgd.CustomWorkbookViews, _fecdd)
	}
	if _aabcgd.PivotCaches != nil {
		_cbbbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_aabcgd.PivotCaches, _cbbbb)
	}
	if _aabcgd.SmartTagPr != nil {
		_ceege := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}}
		e.EncodeElement(_aabcgd.SmartTagPr, _ceege)
	}
	if _aabcgd.SmartTagTypes != nil {
		_fgbgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_aabcgd.SmartTagTypes, _fgbgg)
	}
	if _aabcgd.WebPublishing != nil {
		_ffaee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0077\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}}
		e.EncodeElement(_aabcgd.WebPublishing, _ffaee)
	}
	if _aabcgd.FileRecoveryPr != nil {
		_adbde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}}
		for _, _dfdge := range _aabcgd.FileRecoveryPr {
			e.EncodeElement(_dfdge, _adbde)
		}
	}
	if _aabcgd.WebPublishObjects != nil {
		_dfbgcd := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073"}}
		e.EncodeElement(_aabcgd.WebPublishObjects, _dfbgcd)
	}
	if _aabcgd.ExtLst != nil {
		_badggd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aabcgd.ExtLst, _badggd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egefc ST_ItemType) String() string {
	switch _egefc {
	case 0:
		return ""
	case 1:
		return "\u0064\u0061\u0074\u0061"
	case 2:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0075\u006d"
	case 4:
		return "\u0063\u006f\u0075\u006e\u0074\u0041"
	case 5:
		return "\u0061\u0076\u0067"
	case 6:
		return "\u006d\u0061\u0078"
	case 7:
		return "\u006d\u0069\u006e"
	case 8:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 9:
		return "\u0063\u006f\u0075n\u0074"
	case 10:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 11:
		return "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case 12:
		return "\u0076\u0061\u0072"
	case 13:
		return "\u0076\u0061\u0072\u0050"
	case 14:
		return "\u0067\u0072\u0061n\u0064"
	case 15:
		return "\u0062\u006c\u0061n\u006b"
	}
	return ""
}
func (_dbabe *CT_ChartsheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gaecb:
	for {
		_afea, _fded := d.Token()
		if _fded != nil {
			return _fded
		}
		switch _dafd := _afea.(type) {
		case _b.StartElement:
			switch _dafd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_edgb := NewCT_ChartsheetView()
				if _aeec := d.DecodeElement(_edgb, &_dafd); _aeec != nil {
					return _aeec
				}
				_dbabe.SheetView = append(_dbabe.SheetView, _edgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbabe.ExtLst = NewCT_ExtensionList()
				if _afbg := d.DecodeElement(_dbabe.ExtLst, &_dafd); _afbg != nil {
					return _afbg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _dafd.Name)
				if _fcdc := d.Skip(); _fcdc != nil {
					return _fcdc
				}
			}
		case _b.EndElement:
			break _gaecb
		case _b.CharData:
		}
	}
	return nil
}
func (_gffec *CT_DataValidations) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddebc := range start.Attr {
		if _ddebc.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073" {
			_fcgad, _gefg := _e.ParseBool(_ddebc.Value)
			if _gefg != nil {
				return _gefg
			}
			_gffec.DisablePromptsAttr = &_fcgad
			continue
		}
		if _ddebc.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_fcaa, _eadab := _e.ParseUint(_ddebc.Value, 10, 32)
			if _eadab != nil {
				return _eadab
			}
			_dfegc := uint32(_fcaa)
			_gffec.XWindowAttr = &_dfegc
			continue
		}
		if _ddebc.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_gcfcc, _cadbf := _e.ParseUint(_ddebc.Value, 10, 32)
			if _cadbf != nil {
				return _cadbf
			}
			_dcgfc := uint32(_gcfcc)
			_gffec.YWindowAttr = &_dcgfc
			continue
		}
		if _ddebc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efeea, _agddc := _e.ParseUint(_ddebc.Value, 10, 32)
			if _agddc != nil {
				return _agddc
			}
			_cddbgd := uint32(_efeea)
			_gffec.CountAttr = &_cddbgd
			continue
		}
	}
_eecdde:
	for {
		_fccf, _gcega := d.Token()
		if _gcega != nil {
			return _gcega
		}
		switch _ccee := _fccf.(type) {
		case _b.StartElement:
			switch _ccee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}:
				_bbeb := NewCT_DataValidation()
				if _geagg := d.DecodeElement(_bbeb, &_ccee); _geagg != nil {
					return _geagg
				}
				_gffec.DataValidation = append(_gffec.DataValidation, _bbeb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061l\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _ccee.Name)
				if _aeffd := d.Skip(); _aeffd != nil {
					return _aeffd
				}
			}
		case _b.EndElement:
			break _eecdde
		case _b.CharData:
		}
	}
	return nil
}
func (_fdebad *CT_PivotTableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdebad.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fdebad.NameAttr)})
	}
	if _fdebad.ShowRowHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdebad.ShowRowHeadersAttr))})
	}
	if _fdebad.ShowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdebad.ShowColHeadersAttr))})
	}
	if _fdebad.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdebad.ShowRowStripesAttr))})
	}
	if _fdebad.ShowColStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdebad.ShowColStripesAttr))})
	}
	if _fdebad.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdebad.ShowLastColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Dimensions and its children, prefixing error messages with path
func (_gcfb *CT_Dimensions) ValidateWithPath(path string) error {
	for _adcge, _dgdad := range _gcfb.Dimension {
		if _bgggb := _dgdad.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0044\u0069\u006de\u006e\u0073\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _adcge)); _bgggb != nil {
			return _bgggb
		}
	}
	return nil
}

type CT_PCDSCPage struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Item
	PageItem []*CT_PageItem
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_afbfd *CT_TextField) ValidateWithPath(path string) error {
	if _ggade := _afbfd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ggade != nil {
		return _ggade
	}
	return nil
}
func (_ggdca *CT_TablePart) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _ggdca.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalReference struct{ IdAttr string }

// Validate validates the CT_MergeCell and its children
func (_ddaaf *CT_MergeCell) Validate() error {
	return _ddaaf.ValidateWithPath("\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c")
}
func (_caeceg *ST_DataValidationOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggdedd, _effedb := d.Token()
	if _effedb != nil {
		return _effedb
	}
	if _cbggbe, _fegce := _ggdedd.(_b.EndElement); _fegce && _cbggbe.Name == start.Name {
		*_caeceg = 1
		return nil
	}
	if _eacbd, _ffgafb := _ggdedd.(_b.CharData); !_ffgafb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggdedd)
	} else {
		switch string(_eacbd) {
		case "":
			*_caeceg = 0
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_caeceg = 1
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_caeceg = 2
		case "\u0065\u0071\u0075a\u006c":
			*_caeceg = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_caeceg = 4
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_caeceg = 5
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_caeceg = 6
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_caeceg = 7
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_caeceg = 8
		}
	}
	_ggdedd, _effedb = d.Token()
	if _effedb != nil {
		return _effedb
	}
	if _bccced, _baaee := _ggdedd.(_b.EndElement); _baaee && _bccced.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggdedd)
}

type CT_PivotFields struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field
	PivotField []*CT_PivotField
}
type CT_FontFamily struct{ ValAttr int64 }

func (_gddaf *CT_DataValidations) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gddaf.DisablePromptsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gddaf.DisablePromptsAttr))})
	}
	if _gddaf.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_gddaf.XWindowAttr)})
	}
	if _gddaf.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_gddaf.YWindowAttr)})
	}
	if _gddaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gddaf.CountAttr)})
	}
	e.EncodeToken(start)
	_cbef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}}
	for _, _dagf := range _gddaf.DataValidation {
		e.EncodeElement(_dagf, _cbef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_XmlPr and its children, prefixing error messages with path
func (_egfedb *CT_XmlPr) ValidateWithPath(path string) error {
	if _egfedb.ExtLst != nil {
		if _bbebgc := _egfedb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbebgc != nil {
			return _bbebgc
		}
	}
	return nil
}
func (_agdbee *StyleSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	return _agdbee.CT_Stylesheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_WebPublishObjects and its children, prefixing error messages with path
func (_gcgag *CT_WebPublishObjects) ValidateWithPath(path string) error {
	for _dffgd, _eddbe := range _gcgag.WebPublishObject {
		if _edaff := _eddbe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fWe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _dffgd)); _edaff != nil {
			return _edaff
		}
	}
	return nil
}
func NewCT_Fills() *CT_Fills { _beacg := &CT_Fills{}; return _beacg }

const (
	ST_TypeUnset  ST_Type = 0
	ST_TypeNone   ST_Type = 1
	ST_TypeAll    ST_Type = 2
	ST_TypeRow    ST_Type = 3
	ST_TypeColumn ST_Type = 4
)

func (_geagb *CT_ObjectPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_geagb.Anchor = NewCT_ObjectAnchor()
	for _, _bcbfb := range start.Attr {
		if _bcbfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcbfb.Name.Local == "\u0069\u0064" || _bcbfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcbfb.Name.Local == "\u0069\u0064" {
			_cebf, _adbge := _bcbfb.Value, error(nil)
			if _adbge != nil {
				return _adbge
			}
			_geagb.IdAttr = &_cebf
			continue
		}
		if _bcbfb.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_agedc, _dfeaa := _e.ParseBool(_bcbfb.Value)
			if _dfeaa != nil {
				return _dfeaa
			}
			_geagb.AutoLineAttr = &_agedc
			continue
		}
		if _bcbfb.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_dfba, _gfdae := _e.ParseBool(_bcbfb.Value)
			if _gfdae != nil {
				return _gfdae
			}
			_geagb.PrintAttr = &_dfba
			continue
		}
		if _bcbfb.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_cfdf, _acdc := _e.ParseBool(_bcbfb.Value)
			if _acdc != nil {
				return _acdc
			}
			_geagb.DisabledAttr = &_cfdf
			continue
		}
		if _bcbfb.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_cdaba, _dfabc := _e.ParseBool(_bcbfb.Value)
			if _dfabc != nil {
				return _dfabc
			}
			_geagb.UiObjectAttr = &_cdaba
			continue
		}
		if _bcbfb.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_fegda, _eabgb := _e.ParseBool(_bcbfb.Value)
			if _eabgb != nil {
				return _eabgb
			}
			_geagb.AutoFillAttr = &_fegda
			continue
		}
		if _bcbfb.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_ecdde, _gfgedc := _e.ParseBool(_bcbfb.Value)
			if _gfgedc != nil {
				return _gfgedc
			}
			_geagb.LockedAttr = &_ecdde
			continue
		}
		if _bcbfb.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_cbdga, _gebeb := _e.ParseBool(_bcbfb.Value)
			if _gebeb != nil {
				return _gebeb
			}
			_geagb.AutoPictAttr = &_cbdga
			continue
		}
		if _bcbfb.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bbagb, _gfadb := _bcbfb.Value, error(nil)
			if _gfadb != nil {
				return _gfadb
			}
			_geagb.MacroAttr = &_bbagb
			continue
		}
		if _bcbfb.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_abfea, _cfcbf := _bcbfb.Value, error(nil)
			if _cfcbf != nil {
				return _cfcbf
			}
			_geagb.AltTextAttr = &_abfea
			continue
		}
		if _bcbfb.Name.Local == "\u0064\u0064\u0065" {
			_begdc, _ecbfg := _e.ParseBool(_bcbfb.Value)
			if _ecbfg != nil {
				return _ecbfg
			}
			_geagb.DdeAttr = &_begdc
			continue
		}
		if _bcbfb.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_gdafg, _cfaad := _e.ParseBool(_bcbfb.Value)
			if _cfaad != nil {
				return _cfaad
			}
			_geagb.DefaultSizeAttr = &_gdafg
			continue
		}
	}
_cadca:
	for {
		_eagae, _gcfbf := d.Token()
		if _gcfbf != nil {
			return _gcfbf
		}
		switch _daacd := _eagae.(type) {
		case _b.StartElement:
			switch _daacd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _cgaff := d.DecodeElement(_geagb.Anchor, &_daacd); _cgaff != nil {
					return _cgaff
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072\u0020\u0025\u0076", _daacd.Name)
				if _egfdfe := d.Skip(); _egfdfe != nil {
					return _egfdfe
				}
			}
		case _b.EndElement:
			break _cadca
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_XmlPr() *CT_XmlPr         { _feece := &CT_XmlPr{}; return _feece }
func NewCT_SheetView() *CT_SheetView { _ebcdd := &CT_SheetView{}; return _ebcdd }
func (_ccdec *CT_Groups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acddg := range start.Attr {
		if _acddg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efaad, _agcba := _e.ParseUint(_acddg.Value, 10, 32)
			if _agcba != nil {
				return _agcba
			}
			_bcdcf := uint32(_efaad)
			_ccdec.CountAttr = &_bcdcf
			continue
		}
	}
_ffbcd:
	for {
		_egeaa, _ggcf := d.Token()
		if _ggcf != nil {
			return _ggcf
		}
		switch _cbccc := _egeaa.(type) {
		case _b.StartElement:
			switch _cbccc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}:
				_ggfdb := NewCT_LevelGroup()
				if _feae := d.DecodeElement(_ggfdb, &_cbccc); _feae != nil {
					return _feae
				}
				_ccdec.Group = append(_ccdec.Group, _ggfdb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u0073 \u0025\u0076", _cbccc.Name)
				if _fgcbf := d.Skip(); _fgcbf != nil {
					return _fgcbf
				}
			}
		case _b.EndElement:
			break _ffbcd
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalSheetDataSet struct {

	// External Sheet Data Set
	SheetData []*CT_ExternalSheetData
}

// ValidateWithPath validates the CT_SheetId and its children, prefixing error messages with path
func (_fbaca *CT_SheetId) ValidateWithPath(path string) error { return nil }
func (_efac *CT_Map) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbcce := range start.Attr {
		if _bbcce.Name.Local == "\u0049\u0044" {
			_fegc, _fadf := _e.ParseUint(_bbcce.Value, 10, 32)
			if _fadf != nil {
				return _fadf
			}
			_efac.IDAttr = uint32(_fegc)
			continue
		}
		if _bbcce.Name.Local == "\u004e\u0061\u006d\u0065" {
			_ffef, _eebfe := _bbcce.Value, error(nil)
			if _eebfe != nil {
				return _eebfe
			}
			_efac.NameAttr = _ffef
			continue
		}
		if _bbcce.Name.Local == "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074" {
			_bfacd, _gggfg := _bbcce.Value, error(nil)
			if _gggfg != nil {
				return _gggfg
			}
			_efac.RootElementAttr = _bfacd
			continue
		}
		if _bbcce.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044" {
			_cfcbb, _degae := _bbcce.Value, error(nil)
			if _degae != nil {
				return _degae
			}
			_efac.SchemaIDAttr = _cfcbb
			continue
		}
		if _bbcce.Name.Local == "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073" {
			_dfcg, _ffec := _e.ParseBool(_bbcce.Value)
			if _ffec != nil {
				return _ffec
			}
			_efac.ShowImportExportValidationErrorsAttr = _dfcg
			continue
		}
		if _bbcce.Name.Local == "\u0041u\u0074\u006f\u0046\u0069\u0074" {
			_fbdcb, _ebcdf := _e.ParseBool(_bbcce.Value)
			if _ebcdf != nil {
				return _ebcdf
			}
			_efac.AutoFitAttr = _fbdcb
			continue
		}
		if _bbcce.Name.Local == "\u0041\u0070\u0070\u0065\u006e\u0064" {
			_dbbcf, _eedg := _e.ParseBool(_bbcce.Value)
			if _eedg != nil {
				return _eedg
			}
			_efac.AppendAttr = _dbbcf
			continue
		}
		if _bbcce.Name.Local == "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074" {
			_ebbacc, _gcbcb := _e.ParseBool(_bbcce.Value)
			if _gcbcb != nil {
				return _gcbcb
			}
			_efac.PreserveSortAFLayoutAttr = _ebbacc
			continue
		}
		if _bbcce.Name.Local == "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074" {
			_gfecc, _bdgcce := _e.ParseBool(_bbcce.Value)
			if _bdgcce != nil {
				return _bdgcce
			}
			_efac.PreserveFormatAttr = _gfecc
			continue
		}
	}
_dfgfb:
	for {
		_beeeg, _bdfbb := d.Token()
		if _bdfbb != nil {
			return _bdfbb
		}
		switch _bebfg := _beeeg.(type) {
		case _b.StartElement:
			switch _bebfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}:
				_efac.DataBinding = NewCT_DataBinding()
				if _egbgc := d.DecodeElement(_efac.DataBinding, &_bebfg); _egbgc != nil {
					return _egbgc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0070\u0020\u0025\u0076", _bebfg.Name)
				if _ccfddf := d.Skip(); _ccfddf != nil {
					return _ccfddf
				}
			}
		case _b.EndElement:
			break _dfgfb
		case _b.CharData:
		}
	}
	return nil
}

type CT_MetadataStringIndex struct {

	// Index Value
	XAttr uint32

	// String is a Set
	SAttr *bool
}

// ValidateWithPath validates the CT_FieldGroup and its children, prefixing error messages with path
func (_aabd *CT_FieldGroup) ValidateWithPath(path string) error {
	if _aabd.RangePr != nil {
		if _dgebg := _aabd.RangePr.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0050\u0072"); _dgebg != nil {
			return _dgebg
		}
	}
	if _aabd.DiscretePr != nil {
		if _ccdbc := _aabd.DiscretePr.ValidateWithPath(path + "/\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"); _ccdbc != nil {
			return _ccdbc
		}
	}
	if _aabd.GroupItems != nil {
		if _gdbd := _aabd.GroupItems.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"); _gdbd != nil {
			return _gdbd
		}
	}
	return nil
}
func (_cegbg *CT_PhoneticPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cegbg.FontIdAttr)})
	if _cegbg.TypeAttr != ST_PhoneticTypeUnset {
		_aabce, _dddg := _cegbg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dddg != nil {
			return _dddg
		}
		start.Attr = append(start.Attr, _aabce)
	}
	if _cegbg.AlignmentAttr != ST_PhoneticAlignmentUnset {
		_gadfgb, _ddeg := _cegbg.AlignmentAttr.MarshalXMLAttr(_b.Name{Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"})
		if _ddeg != nil {
			return _ddeg
		}
		start.Attr = append(start.Attr, _gadfgb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_WorkbookPr and its children, prefixing error messages with path
func (_cbbde *CT_WorkbookPr) ValidateWithPath(path string) error {
	if _cgeaa := _cbbde.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _cgeaa != nil {
		return _cgeaa
	}
	if _gdcdcf := _cbbde.UpdateLinksAttr.ValidateWithPath(path + "\u002f\u0055p\u0064\u0061\u0074e\u004c\u0069\u006e\u006b\u0073\u0041\u0074\u0074\u0072"); _gdcdcf != nil {
		return _gdcdcf
	}
	return nil
}
func (_bcfga *CT_Tables) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcfga.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bcfga.CountAttr)})
	}
	e.EncodeToken(start)
	if _bcfga.M != nil {
		_dbffa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _fbaba := range _bcfga.M {
			e.EncodeElement(_fbaba, _dbffa)
		}
	}
	if _bcfga.S != nil {
		_dfgfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _bfddb := range _bcfga.S {
			e.EncodeElement(_bfddb, _dfgfg)
		}
	}
	if _bcfga.X != nil {
		_cdcafa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _degaa := range _bcfga.X {
			e.EncodeElement(_degaa, _cdcafa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fccfba *ST_FileType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcagae, _bgcbb := d.Token()
	if _bgcbb != nil {
		return _bgcbb
	}
	if _egaacd, _fbbge := _gcagae.(_b.EndElement); _fbbge && _egaacd.Name == start.Name {
		*_fccfba = 1
		return nil
	}
	if _deabeb, _geaccd := _gcagae.(_b.CharData); !_geaccd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcagae)
	} else {
		switch string(_deabeb) {
		case "":
			*_fccfba = 0
		case "\u006d\u0061\u0063":
			*_fccfba = 1
		case "\u0077\u0069\u006e":
			*_fccfba = 2
		case "\u0064\u006f\u0073":
			*_fccfba = 3
		case "\u006c\u0069\u006e":
			*_fccfba = 4
		case "\u006f\u0074\u0068e\u0072":
			*_fccfba = 5
		}
	}
	_gcagae, _bgcbb = d.Token()
	if _bgcbb != nil {
		return _bgcbb
	}
	if _befbaa, _deggd := _gcagae.(_b.EndElement); _deggd && _befbaa.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcagae)
}
func (_adeegb *CT_DdeValues) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egae := range start.Attr {
		if _egae.Name.Local == "\u0072\u006f\u0077\u0073" {
			_beda, _bggad := _e.ParseUint(_egae.Value, 10, 32)
			if _bggad != nil {
				return _bggad
			}
			_eedbg := uint32(_beda)
			_adeegb.RowsAttr = &_eedbg
			continue
		}
		if _egae.Name.Local == "\u0063\u006f\u006c\u0073" {
			_gagec, _cdadf := _e.ParseUint(_egae.Value, 10, 32)
			if _cdadf != nil {
				return _cdadf
			}
			_fbdg := uint32(_gagec)
			_adeegb.ColsAttr = &_fbdg
			continue
		}
	}
_edcd:
	for {
		_eagd, _ffda := d.Token()
		if _ffda != nil {
			return _ffda
		}
		switch _bfac := _eagd.(type) {
		case _b.StartElement:
			switch _bfac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}:
				_cfbf := NewCT_DdeValue()
				if _cbgeb := d.DecodeElement(_cfbf, &_bfac); _cbgeb != nil {
					return _cbgeb
				}
				_adeegb.Value = append(_adeegb.Value, _cfbf)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0064\u0065V\u0061\u006c\u0075\u0065\u0073\u0020\u0025\u0076", _bfac.Name)
				if _ecbfe := d.Skip(); _ecbfe != nil {
					return _ecbfe
				}
			}
		case _b.EndElement:
			break _edcd
		case _b.CharData:
		}
	}
	return nil
}
func (_cdge *CT_FieldsUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgeg := range start.Attr {
		if _cgeg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_daagfe, _aadgb := _e.ParseUint(_cgeg.Value, 10, 32)
			if _aadgb != nil {
				return _aadgb
			}
			_geeee := uint32(_daagfe)
			_cdge.CountAttr = &_geeee
			continue
		}
	}
_cfddg:
	for {
		_gffa, _dfcdc := d.Token()
		if _dfcdc != nil {
			return _dfcdc
		}
		switch _fddeb := _gffa.(type) {
		case _b.StartElement:
			switch _fddeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}:
				_cefec := NewCT_FieldUsage()
				if _fdeg := d.DecodeElement(_cefec, &_fddeb); _fdeg != nil {
					return _fdeg
				}
				_cdge.FieldUsage = append(_cdge.FieldUsage, _cefec)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073\u0055s\u0061g\u0065\u0020\u0025\u0076", _fddeb.Name)
				if _debed := d.Skip(); _debed != nil {
					return _debed
				}
			}
		case _b.EndElement:
			break _cfddg
		case _b.CharData:
		}
	}
	return nil
}

type ST_CellSpans []string

// Validate validates the CT_ConditionalFormat and its children
func (_agab *CT_ConditionalFormat) Validate() error {
	return _agab.ValidateWithPath("C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074")
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_cffdb *CT_SmartTags) ValidateWithPath(path string) error {
	for _adagf, _dbebff := range _cffdb.CellSmartTags {
		if _edeabf := _dbebff.ValidateWithPath(_f.Sprintf("%\u0073/\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073[%\u0064\u005d", path, _adagf)); _edeabf != nil {
			return _edeabf
		}
	}
	return nil
}

// Validate validates the CT_CsPageSetup and its children
func (_bbaf *CT_CsPageSetup) Validate() error {
	return _bbaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070")
}
func NewCT_SortCondition() *CT_SortCondition { _dbdbbe := &CT_SortCondition{}; return _dbdbbe }

// ValidateWithPath validates the CT_Sst and its children, prefixing error messages with path
func (_gcgbda *CT_Sst) ValidateWithPath(path string) error {
	for _fbfcg, _fgaceb := range _gcgbda.Si {
		if _abcde := _fgaceb.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0053\u0069\u005b\u0025\u0064]", path, _fbfcg)); _abcde != nil {
			return _abcde
		}
	}
	if _gcgbda.ExtLst != nil {
		if _dcfbf := _gcgbda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcfbf != nil {
			return _dcfbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ProtectedRanges and its children, prefixing error messages with path
func (_gbacc *CT_ProtectedRanges) ValidateWithPath(path string) error {
	for _afgbc, _eaaaaa := range _gbacc.ProtectedRange {
		if _fagfe := _eaaaaa.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0050\u0072ot\u0065c\u0074\u0065\u0064\u0052\u0061n\u0067\u0065\u005b\u0025\u0064\u005d", path, _afgbc)); _fagfe != nil {
			return _fagfe
		}
	}
	return nil
}
func (_gccbbe *CT_SmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_agfcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
	for _, _caaef := range _gccbbe.CellSmartTags {
		e.EncodeElement(_caaef, _agfcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfdded *CT_Query) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078"}, Value: _f.Sprintf("\u0025\u0076", _bfdded.MdxAttr)})
	e.EncodeToken(start)
	if _bfdded.Tpls != nil {
		_cgdee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_bfdded.Tpls, _cgdee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_PaneState byte

func NewCalcChain() *CalcChain {
	_ggafg := &CalcChain{}
	_ggafg.CT_CalcChain = *NewCT_CalcChain()
	return _ggafg
}
func (_fgagb *CT_SheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgagb.WindowProtectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.WindowProtectionAttr))})
	}
	if _fgagb.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowFormulasAttr))})
	}
	if _fgagb.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowGridLinesAttr))})
	}
	if _fgagb.ShowRowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowRowColHeadersAttr))})
	}
	if _fgagb.ShowZerosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowZerosAttr))})
	}
	if _fgagb.RightToLeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.RightToLeftAttr))})
	}
	if _fgagb.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.TabSelectedAttr))})
	}
	if _fgagb.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowRulerAttr))})
	}
	if _fgagb.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowOutlineSymbolsAttr))})
	}
	if _fgagb.DefaultGridColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.DefaultGridColorAttr))})
	}
	if _fgagb.ShowWhiteSpaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fgagb.ShowWhiteSpaceAttr))})
	}
	if _fgagb.ViewAttr != ST_SheetViewTypeUnset {
		_fggcg, _dcaaba := _fgagb.ViewAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _dcaaba != nil {
			return _dcaaba
		}
		start.Attr = append(start.Attr, _fggcg)
	}
	if _fgagb.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_fgagb.TopLeftCellAttr)})
	}
	if _fgagb.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fgagb.ColorIdAttr)})
	}
	if _fgagb.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _f.Sprintf("\u0025\u0076", *_fgagb.ZoomScaleAttr)})
	}
	if _fgagb.ZoomScaleNormalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_fgagb.ZoomScaleNormalAttr)})
	}
	if _fgagb.ZoomScaleSheetLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_fgagb.ZoomScaleSheetLayoutViewAttr)})
	}
	if _fgagb.ZoomScalePageLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_fgagb.ZoomScalePageLayoutViewAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fgagb.WorkbookViewIdAttr)})
	e.EncodeToken(start)
	if _fgagb.Pane != nil {
		_cgdbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_fgagb.Pane, _cgdbd)
	}
	if _fgagb.Selection != nil {
		_gbdcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		for _, _bdgfcg := range _fgagb.Selection {
			e.EncodeElement(_bdgfcg, _gbdcc)
		}
	}
	if _fgagb.PivotSelection != nil {
		_fgbadf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}}
		for _, _deadcf := range _fgagb.PivotSelection {
			e.EncodeElement(_deadcf, _fgbadf)
		}
	}
	if _fgagb.ExtLst != nil {
		_ceaab := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fgagb.ExtLst, _ceaab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PivotCaches struct {

	// PivotCache
	PivotCache []*CT_PivotCache
}

func (_fgec *CT_DateTime) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eceb := range start.Attr {
		if _eceb.Name.Local == "\u0076" {
			_dcfd, _bfeeb := ParseStdlibTime(_eceb.Value)
			if _bfeeb != nil {
				return _bfeeb
			}
			_fgec.VAttr = _dcfd
			continue
		}
		if _eceb.Name.Local == "\u0075" {
			_gabb, _ccdb := _e.ParseBool(_eceb.Value)
			if _ccdb != nil {
				return _ccdb
			}
			_fgec.UAttr = &_gabb
			continue
		}
		if _eceb.Name.Local == "\u0066" {
			_efcec, _gecgc := _e.ParseBool(_eceb.Value)
			if _gecgc != nil {
				return _gecgc
			}
			_fgec.FAttr = &_efcec
			continue
		}
		if _eceb.Name.Local == "\u0063" {
			_bged, _eeeaf := _eceb.Value, error(nil)
			if _eeeaf != nil {
				return _eeeaf
			}
			_fgec.CAttr = &_bged
			continue
		}
		if _eceb.Name.Local == "\u0063\u0070" {
			_acaab, _fcgbb := _e.ParseUint(_eceb.Value, 10, 32)
			if _fcgbb != nil {
				return _fcgbb
			}
			_dbcfg := uint32(_acaab)
			_fgec.CpAttr = &_dbcfg
			continue
		}
	}
_feged:
	for {
		_deecc, _gcfad := d.Token()
		if _gcfad != nil {
			return _gcfad
		}
		switch _fgbec := _deecc.(type) {
		case _b.StartElement:
			switch _fgbec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_gbac := NewCT_X()
				if _gddeg := d.DecodeElement(_gbac, &_fgbec); _gddeg != nil {
					return _gddeg
				}
				_fgec.X = append(_fgec.X, _gbac)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065\u0020\u0025\u0076", _fgbec.Name)
				if _dcbce := d.Skip(); _dcbce != nil {
					return _dcbce
				}
			}
		case _b.EndElement:
			break _feged
		case _b.CharData:
		}
	}
	return nil
}
func (_bgecf ST_FieldSortType) String() string {
	switch _bgecf {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return ""
}

type ST_Qualifier byte

func NewCT_RowFields() *CT_RowFields { _egfgb := &CT_RowFields{}; return _egfgb }
func (_fcaaab *ST_BorderStyle) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcaaab = 0
	case "\u006e\u006f\u006e\u0065":
		*_fcaaab = 1
	case "\u0074\u0068\u0069\u006e":
		*_fcaaab = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d":
		*_fcaaab = 3
	case "\u0064\u0061\u0073\u0068\u0065\u0064":
		*_fcaaab = 4
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_fcaaab = 5
	case "\u0074\u0068\u0069c\u006b":
		*_fcaaab = 6
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_fcaaab = 7
	case "\u0068\u0061\u0069\u0072":
		*_fcaaab = 8
	case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
		*_fcaaab = 9
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_fcaaab = 10
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_fcaaab = 11
	case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_fcaaab = 12
	case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_fcaaab = 13
	case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_fcaaab = 14
	}
	return nil
}
func (_daegga ST_PhoneticType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_acgga := _b.Attr{}
	_acgga.Name = name
	switch _daegga {
	case ST_PhoneticTypeUnset:
		_acgga.Value = ""
	case ST_PhoneticTypeHalfwidthKatakana:
		_acgga.Value = "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeFullwidthKatakana:
		_acgga.Value = "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeHiragana:
		_acgga.Value = "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_PhoneticTypeNoConversion:
		_acgga.Value = "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return _acgga, nil
}
func (_bcadf ST_Type) String() string {
	switch _bcadf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u006c"
	case 3:
		return "\u0072\u006f\u0077"
	case 4:
		return "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return ""
}
func (_ccfgd ST_DataValidationImeMode) String() string {
	switch _ccfgd {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u006f\u006e"
	case 4:
		return "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case 5:
		return "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 6:
		return "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 7:
		return "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 8:
		return "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case 9:
		return "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case 10:
		return "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case 11:
		return "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return ""
}
func NewCT_RevisionFormatting() *CT_RevisionFormatting {
	_fggec := &CT_RevisionFormatting{}
	return _fggec
}
func (_eabgeb *ST_PhoneticAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfabdg, _dbbgg := d.Token()
	if _dbbgg != nil {
		return _dbbgg
	}
	if _cebgcf, _eaccb := _gfabdg.(_b.EndElement); _eaccb && _cebgcf.Name == start.Name {
		*_eabgeb = 1
		return nil
	}
	if _gcbff, _cedea := _gfabdg.(_b.CharData); !_cedea {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfabdg)
	} else {
		switch string(_gcbff) {
		case "":
			*_eabgeb = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_eabgeb = 1
		case "\u006c\u0065\u0066\u0074":
			*_eabgeb = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_eabgeb = 3
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_eabgeb = 4
		}
	}
	_gfabdg, _dbbgg = d.Token()
	if _dbbgg != nil {
		return _dbbgg
	}
	if _aeebg, _adccgb := _gfabdg.(_b.EndElement); _adccgb && _aeebg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfabdg)
}

type CT_XmlCellPr struct {

	// Table Field Id
	IdAttr uint32

	// Unique Table Name
	UniqueNameAttr *string

	// Column XML Properties
	XmlPr *CT_XmlPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Error and its children, prefixing error messages with path
func (_cbfea *CT_Error) ValidateWithPath(path string) error {
	if _cbfea.Tpls != nil {
		if _dacf := _cbfea.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _dacf != nil {
			return _dacf
		}
	}
	for _edcab, _agbg := range _cbfea.X {
		if _egdc := _agbg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _edcab)); _egdc != nil {
			return _egdc
		}
	}
	return nil
}
func (_cfdgc *CT_Hyperlinks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_affda:
	for {
		_adabg, _edcaa := d.Token()
		if _edcaa != nil {
			return _edcaa
		}
		switch _eede := _adabg.(type) {
		case _b.StartElement:
			switch _eede.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}:
				_edecb := NewCT_Hyperlink()
				if _cbcfg := d.DecodeElement(_edecb, &_eede); _cbcfg != nil {
					return _cbcfg
				}
				_cfdgc.Hyperlink = append(_cfdgc.Hyperlink, _edecb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048y\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073 \u0025\u0076", _eede.Name)
				if _ddcd := d.Skip(); _ddcd != nil {
					return _ddcd
				}
			}
		case _b.EndElement:
			break _affda
		case _b.CharData:
		}
	}
	return nil
}

type CT_Parameters struct {

	// Parameter Count
	CountAttr *uint32

	// Parameter Properties
	Parameter []*CT_Parameter
}

func (_adaeag *ST_Orientation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebaea, _cfbaad := d.Token()
	if _cfbaad != nil {
		return _cfbaad
	}
	if _fcgbfd, _ggaef := _ebaea.(_b.EndElement); _ggaef && _fcgbfd.Name == start.Name {
		*_adaeag = 1
		return nil
	}
	if _dfgbfe, _eggca := _ebaea.(_b.CharData); !_eggca {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebaea)
	} else {
		switch string(_dfgbfe) {
		case "":
			*_adaeag = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_adaeag = 1
		case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
			*_adaeag = 2
		case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
			*_adaeag = 3
		}
	}
	_ebaea, _cfbaad = d.Token()
	if _cfbaad != nil {
		return _cfbaad
	}
	if _gffbe, _gdcfc := _ebaea.(_b.EndElement); _gdcfc && _gffbe.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebaea)
}
func (_ddbgc *CT_UnderlineProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddbgc.ValAttr != ST_UnderlineValuesUnset {
		_ddffg, _bfcfea := _ddbgc.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
		if _bfcfea != nil {
			return _bfcfea
		}
		start.Attr = append(start.Attr, _ddffg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DynamicFilterTypeUnset        ST_DynamicFilterType = 0
	ST_DynamicFilterTypeNull         ST_DynamicFilterType = 1
	ST_DynamicFilterTypeAboveAverage ST_DynamicFilterType = 2
	ST_DynamicFilterTypeBelowAverage ST_DynamicFilterType = 3
	ST_DynamicFilterTypeTomorrow     ST_DynamicFilterType = 4
	ST_DynamicFilterTypeToday        ST_DynamicFilterType = 5
	ST_DynamicFilterTypeYesterday    ST_DynamicFilterType = 6
	ST_DynamicFilterTypeNextWeek     ST_DynamicFilterType = 7
	ST_DynamicFilterTypeThisWeek     ST_DynamicFilterType = 8
	ST_DynamicFilterTypeLastWeek     ST_DynamicFilterType = 9
	ST_DynamicFilterTypeNextMonth    ST_DynamicFilterType = 10
	ST_DynamicFilterTypeThisMonth    ST_DynamicFilterType = 11
	ST_DynamicFilterTypeLastMonth    ST_DynamicFilterType = 12
	ST_DynamicFilterTypeNextQuarter  ST_DynamicFilterType = 13
	ST_DynamicFilterTypeThisQuarter  ST_DynamicFilterType = 14
	ST_DynamicFilterTypeLastQuarter  ST_DynamicFilterType = 15
	ST_DynamicFilterTypeNextYear     ST_DynamicFilterType = 16
	ST_DynamicFilterTypeThisYear     ST_DynamicFilterType = 17
	ST_DynamicFilterTypeLastYear     ST_DynamicFilterType = 18
	ST_DynamicFilterTypeYearToDate   ST_DynamicFilterType = 19
	ST_DynamicFilterTypeQ1           ST_DynamicFilterType = 20
	ST_DynamicFilterTypeQ2           ST_DynamicFilterType = 21
	ST_DynamicFilterTypeQ3           ST_DynamicFilterType = 22
	ST_DynamicFilterTypeQ4           ST_DynamicFilterType = 23
	ST_DynamicFilterTypeM1           ST_DynamicFilterType = 24
	ST_DynamicFilterTypeM2           ST_DynamicFilterType = 25
	ST_DynamicFilterTypeM3           ST_DynamicFilterType = 26
	ST_DynamicFilterTypeM4           ST_DynamicFilterType = 27
	ST_DynamicFilterTypeM5           ST_DynamicFilterType = 28
	ST_DynamicFilterTypeM6           ST_DynamicFilterType = 29
	ST_DynamicFilterTypeM7           ST_DynamicFilterType = 30
	ST_DynamicFilterTypeM8           ST_DynamicFilterType = 31
	ST_DynamicFilterTypeM9           ST_DynamicFilterType = 32
	ST_DynamicFilterTypeM10          ST_DynamicFilterType = 33
	ST_DynamicFilterTypeM11          ST_DynamicFilterType = 34
	ST_DynamicFilterTypeM12          ST_DynamicFilterType = 35
)

type CT_PivotAreaReferences struct {

	// Pivot Filter Count
	CountAttr *uint32

	// Reference
	Reference []*CT_PivotAreaReference
}

// Validate validates the CT_SheetIdMap and its children
func (_efeggc *CT_SheetIdMap) Validate() error {
	return _efeggc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070")
}

// Validate validates the Connections and its children
func (_bcfaeb *Connections) Validate() error {
	return _bcfaeb.ValidateWithPath("C\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073")
}
func NewCT_RevisionMove() *CT_RevisionMove { _ggagb := &CT_RevisionMove{}; return _ggagb }

// Validate validates the CT_SheetViews and its children
func (_bgeegd *CT_SheetViews) Validate() error {
	return _bgeegd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

type CT_Formats struct {

	// Formats Count
	CountAttr *uint32

	// PivotTable Format
	Format []*CT_Format
}

// Validate validates the CT_CommentPr and its children
func (_ccfdg *CT_CommentPr) Validate() error {
	return _ccfdg.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072")
}

type CalcChain struct{ CT_CalcChain }

func (_gfecg *ST_GroupBy) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfecg = 0
	case "\u0072\u0061\u006eg\u0065":
		*_gfecg = 1
	case "\u0073e\u0063\u006f\u006e\u0064\u0073":
		*_gfecg = 2
	case "\u006di\u006e\u0075\u0074\u0065\u0073":
		*_gfecg = 3
	case "\u0068\u006f\u0075r\u0073":
		*_gfecg = 4
	case "\u0064\u0061\u0079\u0073":
		*_gfecg = 5
	case "\u006d\u006f\u006e\u0074\u0068\u0073":
		*_gfecg = 6
	case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
		*_gfecg = 7
	case "\u0079\u0065\u0061r\u0073":
		*_gfecg = 8
	}
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_aega *CT_CommentList) ValidateWithPath(path string) error {
	for _gcdf, _cfef := range _aega.Comment {
		if _fcfed := _cfef.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006d\u006d\u0065\u006et\u005b\u0025\u0064\u005d", path, _gcdf)); _fcfed != nil {
			return _fcfed
		}
	}
	return nil
}
func NewCT_PageMargins() *CT_PageMargins             { _cbeae := &CT_PageMargins{}; return _cbeae }
func (_aaddga ST_PhoneticAlignment) Validate() error { return _aaddga.ValidateWithPath("") }
func (_dgdaca ST_UnderlineValues) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gfbdgd := _b.Attr{}
	_gfbdgd.Name = name
	switch _dgdaca {
	case ST_UnderlineValuesUnset:
		_gfbdgd.Value = ""
	case ST_UnderlineValuesSingle:
		_gfbdgd.Value = "\u0073\u0069\u006e\u0067\u006c\u0065"
	case ST_UnderlineValuesDouble:
		_gfbdgd.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_UnderlineValuesSingleAccounting:
		_gfbdgd.Value = "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesDoubleAccounting:
		_gfbdgd.Value = "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesNone:
		_gfbdgd.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gfbdgd, nil
}
func NewCT_Parameters() *CT_Parameters { _bdaeg := &CT_Parameters{}; return _bdaeg }
func (_egg *CT_CacheHierarchy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _egg.UniqueNameAttr)})
	if _egg.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_egg.CaptionAttr)})
	}
	if _egg.MeasureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.MeasureAttr))})
	}
	if _egg.SetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.SetAttr))})
	}
	if _egg.ParentSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t"}, Value: _f.Sprintf("\u0025\u0076", *_egg.ParentSetAttr)})
	}
	if _egg.IconSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_egg.IconSetAttr)})
	}
	if _egg.AttributeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.AttributeAttr))})
	}
	if _egg.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.TimeAttr))})
	}
	if _egg.KeyAttributeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.KeyAttributeAttr))})
	}
	if _egg.DefaultMemberUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_egg.DefaultMemberUniqueNameAttr)})
	}
	if _egg.AllUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_egg.AllUniqueNameAttr)})
	}
	if _egg.AllCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_egg.AllCaptionAttr)})
	}
	if _egg.DimensionUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_egg.DimensionUniqueNameAttr)})
	}
	if _egg.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_egg.DisplayFolderAttr)})
	}
	if _egg.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_egg.MeasureGroupAttr)})
	}
	if _egg.MeasuresAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.MeasuresAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", _egg.CountAttr)})
	if _egg.OneFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.OneFieldAttr))})
	}
	if _egg.MemberValueDatatypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_egg.MemberValueDatatypeAttr)})
	}
	if _egg.UnbalancedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.UnbalancedAttr))})
	}
	if _egg.UnbalancedGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.UnbalancedGroupAttr))})
	}
	if _egg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egg.HiddenAttr))})
	}
	e.EncodeToken(start)
	if _egg.FieldsUsage != nil {
		_cff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_egg.FieldsUsage, _cff)
	}
	if _egg.GroupLevels != nil {
		_ecbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073"}}
		e.EncodeElement(_egg.GroupLevels, _ecbg)
	}
	if _egg.ExtLst != nil {
		_aac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_egg.ExtLst, _aac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter { _dfef := &CT_HeaderFooter{}; return _dfef }

type ST_PatternType byte

// ValidateWithPath validates the CT_TableMissing and its children, prefixing error messages with path
func (_bfedf *CT_TableMissing) ValidateWithPath(path string) error { return nil }
func (_aaaddg ST_FieldSortType) ValidateWithPath(path string) error {
	switch _aaaddg {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaaddg))
	}
	return nil
}
func (_deaa *CT_Schema) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febfe := range start.Attr {
		if _febfe.Name.Local == "\u0049\u0044" {
			_bdcab, _cacgcb := _febfe.Value, error(nil)
			if _cacgcb != nil {
				return _cacgcb
			}
			_deaa.IDAttr = _bdcab
			continue
		}
		if _febfe.Name.Local == "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f" {
			_gfgcfg, _bebcc := _febfe.Value, error(nil)
			if _bebcc != nil {
				return _bebcc
			}
			_deaa.SchemaRefAttr = &_gfgcfg
			continue
		}
		if _febfe.Name.Local == "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e" {
			_agecgg, _beeaf := _febfe.Value, error(nil)
			if _beeaf != nil {
				return _beeaf
			}
			_deaa.NamespaceAttr = &_agecgg
			continue
		}
		if _febfe.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065" {
			_ebceac, _abacb := _febfe.Value, error(nil)
			if _abacb != nil {
				return _abacb
			}
			_deaa.SchemaLanguageAttr = &_ebceac
			continue
		}
	}
_gfadbc:
	for {
		_bgdda, _egbdg := d.Token()
		if _egbdg != nil {
			return _egbdg
		}
		switch _bebcd := _bgdda.(type) {
		case _b.StartElement:
			switch _bebcd.Name {
			default:
				if _facdc, _dgfbdc := _d.CreateElement(_bebcd); _dgfbdc != nil {
					return _dgfbdc
				} else {
					if _gbdea := d.DecodeElement(_facdc, &_bebcd); _gbdea != nil {
						return _gbdea
					}
					_deaa.Any = _facdc
				}
			}
		case _b.EndElement:
			break _gfadbc
		case _b.CharData:
		}
	}
	return nil
}
func (_gbdcg *CT_Missing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbdcg.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdcg.UAttr))})
	}
	if _gbdcg.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdcg.FAttr))})
	}
	if _gbdcg.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_gbdcg.CAttr)})
	}
	if _gbdcg.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_gbdcg.CpAttr)})
	}
	if _gbdcg.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_gbdcg.InAttr)})
	}
	if _gbdcg.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_gbdcg.BcAttr)})
	}
	if _gbdcg.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_gbdcg.FcAttr)})
	}
	if _gbdcg.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdcg.IAttr))})
	}
	if _gbdcg.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdcg.UnAttr))})
	}
	if _gbdcg.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdcg.StAttr))})
	}
	if _gbdcg.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdcg.BAttr))})
	}
	e.EncodeToken(start)
	if _gbdcg.Tpls != nil {
		_cddaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _fdec := range _gbdcg.Tpls {
			e.EncodeElement(_fdec, _cddaa)
		}
	}
	if _gbdcg.X != nil {
		_gedgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _ccfeb := range _gbdcg.X {
			e.EncodeElement(_ccfeb, _gedgb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbeg *CT_CellWatch) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", _cbeg.RAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableMissing() *CT_TableMissing     { _cgabbe := &CT_TableMissing{}; return _cgabbe }
func NewCT_MemberProperty() *CT_MemberProperty { _bdadbe := &CT_MemberProperty{}; return _bdadbe }

type CT_X struct {

	// Shared Items Index
	VAttr *int32
}

func (_aeafcd ST_PaneState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aeafcd.String(), start)
}

type CT_QueryTableField struct {

	// Field Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Data Bound Column
	DataBoundAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Fill This Formula On Refresh
	FillFormulasAttr *bool

	// Clipped Column
	ClippedAttr *bool

	// Table Column Id
	TableColumnIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_DataBinding() *CT_DataBinding { _bfed := &CT_DataBinding{}; return _bfed }

// Validate validates the CT_CellStyle and its children
func (_gff *CT_CellStyle) Validate() error {
	return _gff.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065")
}
func (_cbbab ST_TableType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cacfc := _b.Attr{}
	_cacfc.Name = name
	switch _cbbab {
	case ST_TableTypeUnset:
		_cacfc.Value = ""
	case ST_TableTypeWorksheet:
		_cacfc.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_TableTypeXml:
		_cacfc.Value = "\u0078\u006d\u006c"
	case ST_TableTypeQueryTable:
		_cacfc.Value = "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return _cacfc, nil
}

// ValidateWithPath validates the CT_ExternalDefinedName and its children, prefixing error messages with path
func (_bcfbe *CT_ExternalDefinedName) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_FileRecoveryPr and its children, prefixing error messages with path
func (_ggaa *CT_FileRecoveryPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_SmartTagPr and its children
func (_ebfed *CT_SmartTagPr) Validate() error {
	return _ebfed.ValidateWithPath("\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072")
}
func (_afbcg *CT_MeasureDimensionMaps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afbcg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_afbcg.CountAttr)})
	}
	e.EncodeToken(start)
	if _afbcg.Map != nil {
		_babdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0061\u0070"}}
		for _, _adcda := range _afbcg.Map {
			e.EncodeElement(_adcda, _babdd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bdgcca *ST_ExternalConnectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdgcca = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_bdgcca = 1
	case "\u0074\u0065\u0078\u0074":
		*_bdgcca = 2
	case "\u004d\u0044\u0059":
		*_bdgcca = 3
	case "\u0044\u004d\u0059":
		*_bdgcca = 4
	case "\u0059\u004d\u0044":
		*_bdgcca = 5
	case "\u004d\u0059\u0044":
		*_bdgcca = 6
	case "\u0044\u0059\u004d":
		*_bdgcca = 7
	case "\u0059\u0044\u004d":
		*_bdgcca = 8
	case "\u0073\u006b\u0069\u0070":
		*_bdgcca = 9
	case "\u0045\u004d\u0044":
		*_bdgcca = 10
	}
	return nil
}

// Validate validates the CT_SharedItems and its children
func (_dfbcf *CT_SharedItems) Validate() error {
	return _dfbcf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073")
}
func NewCT_Border() *CT_Border { _ecd := &CT_Border{}; return _ecd }
func NewCT_Filter() *CT_Filter { _ffcaa := &CT_Filter{}; return _ffcaa }
func (_begge *ST_IconSetType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fadddb, _geecd := d.Token()
	if _geecd != nil {
		return _geecd
	}
	if _gagdf, _cccbag := _fadddb.(_b.EndElement); _cccbag && _gagdf.Name == start.Name {
		*_begge = 1
		return nil
	}
	if _bacea, _ceefa := _fadddb.(_b.CharData); !_ceefa {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fadddb)
	} else {
		switch string(_bacea) {
		case "":
			*_begge = 0
		case "\u0033A\u0072\u0072\u006f\u0077\u0073":
			*_begge = 1
		case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_begge = 2
		case "\u0033\u0046\u006c\u0061\u0067\u0073":
			*_begge = 3
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
			*_begge = 4
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
			*_begge = 5
		case "\u0033\u0053\u0069\u0067\u006e\u0073":
			*_begge = 6
		case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
			*_begge = 7
		case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
			*_begge = 8
		case "\u0034A\u0072\u0072\u006f\u0077\u0073":
			*_begge = 9
		case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_begge = 10
		case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
			*_begge = 11
		case "\u0034R\u0061\u0074\u0069\u006e\u0067":
			*_begge = 12
		case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
			*_begge = 13
		case "\u0035A\u0072\u0072\u006f\u0077\u0073":
			*_begge = 14
		case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_begge = 15
		case "\u0035R\u0061\u0074\u0069\u006e\u0067":
			*_begge = 16
		case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
			*_begge = 17
		}
	}
	_fadddb, _geecd = d.Token()
	if _geecd != nil {
		return _geecd
	}
	if _faefa, _adccbd := _fadddb.(_b.EndElement); _adccbd && _faefa.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fadddb)
}
func (_dgfde *ST_SmartTagShow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgcdbf, _fgdcf := d.Token()
	if _fgdcf != nil {
		return _fgdcf
	}
	if _bddda, _gaedag := _cgcdbf.(_b.EndElement); _gaedag && _bddda.Name == start.Name {
		*_dgfde = 1
		return nil
	}
	if _aeffb, _fbgda := _cgcdbf.(_b.CharData); !_fbgda {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgcdbf)
	} else {
		switch string(_aeffb) {
		case "":
			*_dgfde = 0
		case "\u0061\u006c\u006c":
			*_dgfde = 1
		case "\u006e\u006f\u006e\u0065":
			*_dgfde = 2
		case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_dgfde = 3
		}
	}
	_cgcdbf, _fgdcf = d.Token()
	if _fgdcf != nil {
		return _fgdcf
	}
	if _eebfc, _gbgbba := _cgcdbf.(_b.EndElement); _gbgbba && _eebfc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgcdbf)
}

// ValidateWithPath validates the CT_Record and its children, prefixing error messages with path
func (_eagfg *CT_Record) ValidateWithPath(path string) error {
	for _agfba, _cefcc := range _eagfg.M {
		if _efcdgc := _cefcc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _agfba)); _efcdgc != nil {
			return _efcdgc
		}
	}
	for _cabad, _cdfgb := range _eagfg.N {
		if _fcggb := _cdfgb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cabad)); _fcggb != nil {
			return _fcggb
		}
	}
	for _fgfdd, _egbbg := range _eagfg.B {
		if _dddcge := _egbbg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _fgfdd)); _dddcge != nil {
			return _dddcge
		}
	}
	for _feebb, _abbbc := range _eagfg.E {
		if _abdcb := _abbbc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _feebb)); _abdcb != nil {
			return _abdcb
		}
	}
	for _gecee, _ddgbf := range _eagfg.S {
		if _cdfag := _ddgbf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _gecee)); _cdfag != nil {
			return _cdfag
		}
	}
	for _gfagbd, _dfbfa := range _eagfg.D {
		if _agaad := _dfbfa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _gfagbd)); _agaad != nil {
			return _agaad
		}
	}
	for _gebff, _bfegad := range _eagfg.X {
		if _fffag := _bfegad.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gebff)); _fffag != nil {
			return _fffag
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Location and its children, prefixing error messages with path
func (_bagcd *CT_Location) ValidateWithPath(path string) error { return nil }
func (_edfdcd *ST_TextVAlign) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edfdcd = 0
	case "\u0074\u006f\u0070":
		*_edfdcd = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_edfdcd = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_edfdcd = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_edfdcd = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_edfdcd = 5
	}
	return nil
}
func (_bdgea *ST_OleUpdate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fggbc, _bgfbd := d.Token()
	if _bgfbd != nil {
		return _bgfbd
	}
	if _afafc, _aaedfd := _fggbc.(_b.EndElement); _aaedfd && _afafc.Name == start.Name {
		*_bdgea = 1
		return nil
	}
	if _daaada, _baeddg := _fggbc.(_b.CharData); !_baeddg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fggbc)
	} else {
		switch string(_daaada) {
		case "":
			*_bdgea = 0
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
			*_bdgea = 1
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
			*_bdgea = 2
		}
	}
	_fggbc, _bgfbd = d.Token()
	if _bgfbd != nil {
		return _bgfbd
	}
	if _dbdgdg, _ebfac := _fggbc.(_b.EndElement); _ebfac && _dbdgdg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fggbc)
}

type CT_PivotAreaReference struct {

	// Field Index
	FieldAttr *uint32

	// Item Index Count
	CountAttr *uint32

	// Selected
	SelectedAttr *bool

	// Positional Reference
	ByPositionAttr *bool

	// Relative Reference
	RelativeAttr *bool

	// Include Default Filter
	DefaultSubtotalAttr *bool

	// Include Sum Filter
	SumSubtotalAttr *bool

	// Include CountA Filter
	CountASubtotalAttr *bool

	// Include Average Filter
	AvgSubtotalAttr *bool

	// Include Maximum Filter
	MaxSubtotalAttr *bool

	// Include Minimum Filter
	MinSubtotalAttr *bool

	// Include Product Filter
	ProductSubtotalAttr *bool

	// Include Count Subtotal
	CountSubtotalAttr *bool

	// Include StdDev Filter
	StdDevSubtotalAttr *bool

	// Include StdDevP Filter
	StdDevPSubtotalAttr *bool

	// Include Var Filter
	VarSubtotalAttr *bool

	// Include VarP Filter
	VarPSubtotalAttr *bool

	// Field Item
	X      []*CT_Index
	ExtLst *CT_ExtensionList
}

func (_abdeg *CT_PivotHierarchies) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abdeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_abdeg.CountAttr)})
	}
	e.EncodeToken(start)
	_dbfdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
	for _, _eddba := range _abdeg.PivotHierarchy {
		e.EncodeElement(_eddba, _dbfdd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcaba *Sst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0073\u0074"
	return _fcaba.CT_Sst.MarshalXML(e, start)
}

type CT_TableStyleElement struct {

	// Table Style Type
	TypeAttr ST_TableStyleType

	// Band Size
	SizeAttr *uint32

	// Formatting Id
	DxfIdAttr *uint32
}

func (_bfef *CT_CustomChartsheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bfef.GuidAttr)})
	if _bfef.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bfef.ScaleAttr)})
	}
	if _bfef.StateAttr != ST_SheetStateUnset {
		_aafd, _gbdag := _bfef.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gbdag != nil {
			return _gbdag
		}
		start.Attr = append(start.Attr, _aafd)
	}
	if _bfef.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfef.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _bfef.PageMargins != nil {
		_fegfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_bfef.PageMargins, _fegfb)
	}
	if _bfef.PageSetup != nil {
		_afgcf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_bfef.PageSetup, _afgcf)
	}
	if _bfef.HeaderFooter != nil {
		_geeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_bfef.HeaderFooter, _geeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewComments() *Comments {
	_eaecgf := &Comments{}
	_eaecgf.CT_Comments = *NewCT_Comments()
	return _eaecgf
}
func (_aafgd *ST_PhoneticType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aafgd = 0
	case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_aafgd = 1
	case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_aafgd = 2
	case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_aafgd = 3
	case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
		*_aafgd = 4
	}
	return nil
}
func _dfebbb(_ggdcad bool) uint8 {
	if _ggdcad {
		return 1
	}
	return 0
}

// ValidateWithPath validates the CT_Fills and its children, prefixing error messages with path
func (_cbacgd *CT_Fills) ValidateWithPath(path string) error {
	for _gfcdf, _cfccg := range _cbacgd.Fill {
		if _ffagf := _cfccg.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0046\u0069\u006c\u006c\u005b\u0025\u0064\u005d", path, _gfcdf)); _ffagf != nil {
			return _ffagf
		}
	}
	return nil
}
func (_bdafa *CT_Tuples) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _deceb := range start.Attr {
		if _deceb.Name.Local == "\u0063" {
			_fdbea, _egdda := _e.ParseUint(_deceb.Value, 10, 32)
			if _egdda != nil {
				return _egdda
			}
			_eebcec := uint32(_fdbea)
			_bdafa.CAttr = &_eebcec
			continue
		}
	}
_dafea:
	for {
		_fbaag, _fccfd := d.Token()
		if _fccfd != nil {
			return _fccfd
		}
		switch _acddgg := _fbaag.(type) {
		case _b.StartElement:
			switch _acddgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}:
				_eabeb := NewCT_Tuple()
				if _acebcc := d.DecodeElement(_eabeb, &_acddgg); _acebcc != nil {
					return _acebcc
				}
				_bdafa.Tpl = append(_bdafa.Tpl, _eabeb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0075\u0070l\u0065\u0073 \u0025\u0076", _acddgg.Name)
				if _gbcab := d.Skip(); _gbcab != nil {
					return _gbcab
				}
			}
		case _b.EndElement:
			break _dafea
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Color and its children
func (_egde *CT_Color) Validate() error {
	return _egde.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}
func NewCT_Hyperlinks() *CT_Hyperlinks         { _gdcfbg := &CT_Hyperlinks{}; return _gdcfbg }
func NewCT_ChartsheetView() *CT_ChartsheetView { _dfed := &CT_ChartsheetView{}; return _dfed }
func (_dceabc *CT_VolTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_baffg:
	for {
		_gfbccc, _acgcac := d.Token()
		if _acgcac != nil {
			return _acgcac
		}
		switch _ffddf := _gfbccc.(type) {
		case _b.StartElement:
			switch _ffddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_dcecd := NewCT_VolType()
				if _adcdg := d.DecodeElement(_dcecd, &_ffddf); _adcdg != nil {
					return _adcdg
				}
				_dceabc.VolType = append(_dceabc.VolType, _dcecd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dceabc.ExtLst = NewCT_ExtensionList()
				if _aggab := d.DecodeElement(_dceabc.ExtLst, &_ffddf); _aggab != nil {
					return _aggab
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _ffddf.Name)
				if _geafg := d.Skip(); _geafg != nil {
					return _geafg
				}
			}
		case _b.EndElement:
			break _baffg
		case _b.CharData:
		}
	}
	return nil
}
func (_abaafb *CT_SheetDimension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _abaafb.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_VolMain and its children
func (_gdbdf *CT_VolMain) Validate() error {
	return _gdbdf.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e")
}

// Validate validates the CT_MetadataStrings and its children
func (_aebea *CT_MetadataStrings) Validate() error {
	return _aebea.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073")
}
func NewCT_Users() *CT_Users { _dcacb := &CT_Users{}; return _dcacb }

// ValidateWithPath validates the CT_IgnoredError and its children, prefixing error messages with path
func (_cegbf *CT_IgnoredError) ValidateWithPath(path string) error { return nil }
func (_beebb *Users) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0075\u0073\u0065\u0072\u0073"
	return _beebb.CT_Users.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_RevisionDefinedName and its children, prefixing error messages with path
func (_eecfa *CT_RevisionDefinedName) ValidateWithPath(path string) error {
	if _eecfa.ExtLst != nil {
		if _dbbgf := _eecfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbbgf != nil {
			return _dbbgf
		}
	}
	return nil
}

type CT_WebPublishObject struct {

	// Id
	IdAttr uint32

	// Div Id
	DivIdAttr string

	// Source Object
	SourceObjectAttr *string

	// Destination File
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Auto Republish
	AutoRepublishAttr *bool
}

func (_effgef *CT_PivotSelection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _effgef.PaneAttr != ST_PaneUnset {
		_debdee, _gafce := _effgef.PaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _gafce != nil {
			return _gafce
		}
		start.Attr = append(start.Attr, _debdee)
	}
	if _effgef.ShowHeaderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_effgef.ShowHeaderAttr))})
	}
	if _effgef.LabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0062e\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_effgef.LabelAttr))})
	}
	if _effgef.DataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_effgef.DataAttr))})
	}
	if _effgef.ExtendableAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_effgef.ExtendableAttr))})
	}
	if _effgef.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.CountAttr)})
	}
	if _effgef.AxisAttr != ST_AxisUnset {
		_fdebb, _ebbfg := _effgef.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _ebbfg != nil {
			return _ebbfg
		}
		start.Attr = append(start.Attr, _fdebb)
	}
	if _effgef.DimensionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.DimensionAttr)})
	}
	if _effgef.StartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.StartAttr)})
	}
	if _effgef.MinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.MinAttr)})
	}
	if _effgef.MaxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.MaxAttr)})
	}
	if _effgef.ActiveRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.ActiveRowAttr)})
	}
	if _effgef.ActiveColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.ActiveColAttr)})
	}
	if _effgef.PreviousRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.PreviousRowAttr)})
	}
	if _effgef.PreviousColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.PreviousColAttr)})
	}
	if _effgef.ClickAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0069c\u006b"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.ClickAttr)})
	}
	if _effgef.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_effgef.IdAttr)})
	}
	e.EncodeToken(start)
	_aaegae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_effgef.PivotArea, _aaegae)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fecce *PivotCacheDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _fecce.CT_PivotCacheDefinition.MarshalXML(e, start)
}
func NewCT_PivotFilter() *CT_PivotFilter {
	_bcgg := &CT_PivotFilter{}
	_bcgg.TypeAttr = ST_PivotFilterType(1)
	_bcgg.AutoFilter = NewCT_AutoFilter()
	return _bcgg
}
func (_daddfg *CT_WebPublishItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _daddfg.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _f.Sprintf("\u0025\u0076", _daddfg.DivIdAttr)})
	_abafb, _bbbcf := _daddfg.SourceTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065"})
	if _bbbcf != nil {
		return _bbbcf
	}
	start.Attr = append(start.Attr, _abafb)
	if _daddfg.SourceRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f"}, Value: _f.Sprintf("\u0025\u0076", *_daddfg.SourceRefAttr)})
	}
	if _daddfg.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_daddfg.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", _daddfg.DestinationFileAttr)})
	if _daddfg.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_daddfg.TitleAttr)})
	}
	if _daddfg.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_daddfg.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OleObjects struct {

	// Embedded Object
	OleObject []*CT_OleObject
}

func (_aefca *CT_ProtectedRange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgaac := range start.Attr {
		if _cgaac.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_deba, _ggagf := _cgaac.Value, error(nil)
			if _ggagf != nil {
				return _ggagf
			}
			_aefca.PasswordAttr = &_deba
			continue
		}
		if _cgaac.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bcdda, _eddbd := ParseSliceST_Sqref(_cgaac.Value)
			if _eddbd != nil {
				return _eddbd
			}
			_aefca.SqrefAttr = _bcdda
			continue
		}
		if _cgaac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdgeda, _ddde := _cgaac.Value, error(nil)
			if _ddde != nil {
				return _ddde
			}
			_aefca.NameAttr = _bdgeda
			continue
		}
		if _cgaac.Name.Local == "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072" {
			_dfcad, _dgecd := _cgaac.Value, error(nil)
			if _dgecd != nil {
				return _dgecd
			}
			_aefca.SecurityDescriptorAttr = &_dfcad
			continue
		}
		if _cgaac.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_afdge, _gecgca := _cgaac.Value, error(nil)
			if _gecgca != nil {
				return _gecgca
			}
			_aefca.AlgorithmNameAttr = &_afdge
			continue
		}
		if _cgaac.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_aagag, _ccgged := _cgaac.Value, error(nil)
			if _ccgged != nil {
				return _ccgged
			}
			_aefca.HashValueAttr = &_aagag
			continue
		}
		if _cgaac.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_edgdg, _bafgfe := _cgaac.Value, error(nil)
			if _bafgfe != nil {
				return _bafgfe
			}
			_aefca.SaltValueAttr = &_edgdg
			continue
		}
		if _cgaac.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_agbfd, _egdae := _e.ParseUint(_cgaac.Value, 10, 32)
			if _egdae != nil {
				return _egdae
			}
			_cabff := uint32(_agbfd)
			_aefca.SpinCountAttr = &_cabff
			continue
		}
	}
_ebffed:
	for {
		_cbdc, _bbead := d.Token()
		if _bbead != nil {
			return _bbead
		}
		switch _gfbea := _cbdc.(type) {
		case _b.StartElement:
			switch _gfbea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}:
				var _adgeb string
				if _gaccef := d.DecodeElement(&_adgeb, &_gfbea); _gaccef != nil {
					return _gaccef
				}
				_aefca.SecurityDescriptor = append(_aefca.SecurityDescriptor, _adgeb)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _gfbea.Name)
				if _bcfeg := d.Skip(); _bcfeg != nil {
					return _bcfeg
				}
			}
		case _b.EndElement:
			break _ebffed
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_FunctionGroup() *CT_FunctionGroup { _bcdbd := &CT_FunctionGroup{}; return _bcdbd }
func (_edaee *CT_Tuple) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edaee.FldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_edaee.FldAttr)})
	}
	if _edaee.HierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_edaee.HierAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _f.Sprintf("\u0025\u0076", _edaee.ItemAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aadgg *CT_CustomWorkbookViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adaa:
	for {
		_dbeag, _agafe := d.Token()
		if _agafe != nil {
			return _agafe
		}
		switch _fcead := _dbeag.(type) {
		case _b.StartElement:
			switch _fcead.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}:
				_befba := NewCT_CustomWorkbookView()
				if _cafa := d.DecodeElement(_befba, &_fcead); _cafa != nil {
					return _cafa
				}
				_aadgg.CustomWorkbookView = append(_aadgg.CustomWorkbookView, _befba)
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0075\u0073\u0074o\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _fcead.Name)
				if _adea := d.Skip(); _adea != nil {
					return _adea
				}
			}
		case _b.EndElement:
			break _adaa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureDimensionMap and its children, prefixing error messages with path
func (_bfbgc *CT_MeasureDimensionMap) ValidateWithPath(path string) error { return nil }
func (_faffg *ST_DataValidationErrorStyle) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_faffg = 0
	case "\u0073\u0074\u006f\u0070":
		*_faffg = 1
	case "\u0077a\u0072\u006e\u0069\u006e\u0067":
		*_faffg = 2
	case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_faffg = 3
	}
	return nil
}

// Validate validates the CT_WebPublishItems and its children
func (_bdedfa *CT_WebPublishItems) Validate() error {
	return _bdedfa.ValidateWithPath("\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073")
}
func (_fdedc *CT_Schema) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0049\u0044"}, Value: _f.Sprintf("\u0025\u0076", _fdedc.IDAttr)})
	if _fdedc.SchemaRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f"}, Value: _f.Sprintf("\u0025\u0076", *_fdedc.SchemaRefAttr)})
	}
	if _fdedc.NamespaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e"}, Value: _f.Sprintf("\u0025\u0076", *_fdedc.NamespaceAttr)})
	}
	if _fdedc.SchemaLanguageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fdedc.SchemaLanguageAttr)})
	}
	e.EncodeToken(start)
	if _fdedc.Any != nil {
		_fdedc.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewSingleXmlCells() *SingleXmlCells {
	_cfdfe := &SingleXmlCells{}
	_cfdfe.CT_SingleXmlCells = *NewCT_SingleXmlCells()
	return _cfdfe
}
func NewCT_Number() *CT_Number { _abbaa := &CT_Number{}; return _abbaa }
func (_fedcab ST_TextHAlign) ValidateWithPath(path string) error {
	switch _fedcab {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fedcab))
	}
	return nil
}
func (_dacbe ST_PageOrder) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fccae := _b.Attr{}
	_fccae.Name = name
	switch _dacbe {
	case ST_PageOrderUnset:
		_fccae.Value = ""
	case ST_PageOrderDownThenOver:
		_fccae.Value = "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case ST_PageOrderOverThenDown:
		_fccae.Value = "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return _fccae, nil
}
func (_gfddbbc *CT_ReviewedRevisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfddbbc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gfddbbc.CountAttr)})
	}
	e.EncodeToken(start)
	_baefb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}}
	for _, _ecdea := range _gfddbbc.Reviewed {
		e.EncodeElement(_ecdea, _baefb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionCellChange struct {

	// Sheet Id
	SIdAttr uint32

	// Old Formatting Information
	OdxfAttr *bool

	// Row Column Formatting Change
	XfDxfAttr *bool

	// Style Revision
	SAttr *bool

	// Formatting
	DxfAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Old Quote Prefix
	OldQuotePrefixAttr *bool

	// Phonetic Text
	PhAttr *bool

	// Old Phonetic Text
	OldPhAttr *bool

	// End of List Formula Update
	EndOfListFormulaUpdateAttr *bool

	// Old Cell Data
	Oc *CT_Cell

	// New Cell Data
	Nc *CT_Cell

	// Old Formatting Information
	Odxf *CT_Dxf

	// New Formatting Information
	Ndxf    *CT_Dxf
	ExtLst  *CT_ExtensionList
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_cdfaa *CT_HierarchyUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cdfaa.HierarchyUsageAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edccfe ST_SheetState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_afaca := _b.Attr{}
	_afaca.Name = name
	switch _edccfe {
	case ST_SheetStateUnset:
		_afaca.Value = ""
	case ST_SheetStateVisible:
		_afaca.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_SheetStateHidden:
		_afaca.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_SheetStateVeryHidden:
		_afaca.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _afaca, nil
}

// ValidateWithPath validates the CT_Break and its children, prefixing error messages with path
func (_eef *CT_Break) ValidateWithPath(path string) error { return nil }
func (_aabfa *CT_PageItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _aabfa.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcfgc *CT_Item) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgcef := range start.Attr {
		if _fgcef.Name.Local == "\u006e" {
			_ecfbb, _cecbg := _fgcef.Value, error(nil)
			if _cecbg != nil {
				return _cecbg
			}
			_gcfgc.NAttr = &_ecfbb
			continue
		}
		if _fgcef.Name.Local == "\u0074" {
			_gcfgc.TAttr.UnmarshalXMLAttr(_fgcef)
			continue
		}
		if _fgcef.Name.Local == "\u0068" {
			_ebffe, _bgade := _e.ParseBool(_fgcef.Value)
			if _bgade != nil {
				return _bgade
			}
			_gcfgc.HAttr = &_ebffe
			continue
		}
		if _fgcef.Name.Local == "\u0073" {
			_ebdgc, _dcebb := _e.ParseBool(_fgcef.Value)
			if _dcebb != nil {
				return _dcebb
			}
			_gcfgc.SAttr = &_ebdgc
			continue
		}
		if _fgcef.Name.Local == "\u0073\u0064" {
			_cbad, _ebdae := _e.ParseBool(_fgcef.Value)
			if _ebdae != nil {
				return _ebdae
			}
			_gcfgc.SdAttr = &_cbad
			continue
		}
		if _fgcef.Name.Local == "\u0066" {
			_ddccg, _gcbdef := _e.ParseBool(_fgcef.Value)
			if _gcbdef != nil {
				return _gcbdef
			}
			_gcfgc.FAttr = &_ddccg
			continue
		}
		if _fgcef.Name.Local == "\u006d" {
			_dcecb, _dgcdb := _e.ParseBool(_fgcef.Value)
			if _dgcdb != nil {
				return _dgcdb
			}
			_gcfgc.MAttr = &_dcecb
			continue
		}
		if _fgcef.Name.Local == "\u0063" {
			_daaad, _ebbbc := _e.ParseBool(_fgcef.Value)
			if _ebbbc != nil {
				return _ebbbc
			}
			_gcfgc.CAttr = &_daaad
			continue
		}
		if _fgcef.Name.Local == "\u0078" {
			_gbgda, _cdabc := _e.ParseUint(_fgcef.Value, 10, 32)
			if _cdabc != nil {
				return _cdabc
			}
			_eddgb := uint32(_gbgda)
			_gcfgc.XAttr = &_eddgb
			continue
		}
		if _fgcef.Name.Local == "\u0064" {
			_efec, _geec := _e.ParseBool(_fgcef.Value)
			if _geec != nil {
				return _geec
			}
			_gcfgc.DAttr = &_efec
			continue
		}
		if _fgcef.Name.Local == "\u0065" {
			_eebbc, _cedff := _e.ParseBool(_fgcef.Value)
			if _cedff != nil {
				return _cedff
			}
			_gcfgc.EAttr = &_eebbc
			continue
		}
	}
	for {
		_aedaf, _gbdbg := d.Token()
		if _gbdbg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _gbdbg)
		}
		if _faddc, _faadc := _aedaf.(_b.EndElement); _faadc && _faddc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gdfge ST_Axis) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdfge.String(), start)
}
func NewCT_SmartTagType() *CT_SmartTagType { _debec := &CT_SmartTagType{}; return _debec }
func (_gbfbe *CT_MetadataType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _gbfbe.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _gbfbe.MinSupportedVersionAttr)})
	if _gbfbe.GhostRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.GhostRowAttr))})
	}
	if _gbfbe.GhostColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.GhostColAttr))})
	}
	if _gbfbe.EditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.EditAttr))})
	}
	if _gbfbe.DeleteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.DeleteAttr))})
	}
	if _gbfbe.CopyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.CopyAttr))})
	}
	if _gbfbe.PasteAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteAllAttr))})
	}
	if _gbfbe.PasteFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteFormulasAttr))})
	}
	if _gbfbe.PasteValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteValuesAttr))})
	}
	if _gbfbe.PasteFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteFormatsAttr))})
	}
	if _gbfbe.PasteCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteCommentsAttr))})
	}
	if _gbfbe.PasteDataValidationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteDataValidationAttr))})
	}
	if _gbfbe.PasteBordersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteBordersAttr))})
	}
	if _gbfbe.PasteColWidthsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteColWidthsAttr))})
	}
	if _gbfbe.PasteNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.PasteNumberFormatsAttr))})
	}
	if _gbfbe.MergeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0072g\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.MergeAttr))})
	}
	if _gbfbe.SplitFirstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.SplitFirstAttr))})
	}
	if _gbfbe.SplitAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.SplitAllAttr))})
	}
	if _gbfbe.RowColShiftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.RowColShiftAttr))})
	}
	if _gbfbe.ClearAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.ClearAllAttr))})
	}
	if _gbfbe.ClearFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.ClearFormatsAttr))})
	}
	if _gbfbe.ClearContentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.ClearContentsAttr))})
	}
	if _gbfbe.ClearCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.ClearCommentsAttr))})
	}
	if _gbfbe.AssignAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0073\u0073\u0069\u0067\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.AssignAttr))})
	}
	if _gbfbe.CoerceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0065\u0072\u0063\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.CoerceAttr))})
	}
	if _gbfbe.AdjustAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.AdjustAttr))})
	}
	if _gbfbe.CellMetaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbfbe.CellMetaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gdfad *CT_SheetId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _gdfad.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CellWatches struct {

	// Cell Watch Item
	CellWatch []*CT_CellWatch
}

// ValidateWithPath validates the CT_ExternalBook and its children, prefixing error messages with path
func (_gcdeb *CT_ExternalBook) ValidateWithPath(path string) error {
	if _gcdeb.SheetNames != nil {
		if _ebbcg := _gcdeb.SheetNames.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"); _ebbcg != nil {
			return _ebbcg
		}
	}
	if _gcdeb.DefinedNames != nil {
		if _cgacg := _gcdeb.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _cgacg != nil {
			return _cgacg
		}
	}
	if _gcdeb.SheetDataSet != nil {
		if _dbddg := _gcdeb.SheetDataSet.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"); _dbddg != nil {
			return _dbddg
		}
	}
	return nil
}
func (_edfbf *CT_TextFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edfbf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_edfbf.CountAttr)})
	}
	e.EncodeToken(start)
	_ceffb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _acdgfc := range _edfbf.TextField {
		e.EncodeElement(_acdgfc, _ceffb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fffaae *ST_PaneState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fffaae = 0
	case "\u0073\u0070\u006ci\u0074":
		*_fffaae = 1
	case "\u0066\u0072\u006f\u007a\u0065\u006e":
		*_fffaae = 2
	case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
		*_fffaae = 3
	}
	return nil
}

// ValidateWithPath validates the CT_PivotSelection and its children, prefixing error messages with path
func (_eeafe *CT_PivotSelection) ValidateWithPath(path string) error {
	if _gafgc := _eeafe.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _gafgc != nil {
		return _gafgc
	}
	if _begcd := _eeafe.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _begcd != nil {
		return _begcd
	}
	if _bfeec := _eeafe.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bfeec != nil {
		return _bfeec
	}
	return nil
}
func (_dccdcf ST_CellFormulaType) ValidateWithPath(path string) error {
	switch _dccdcf {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dccdcf))
	}
	return nil
}
func NewCT_SheetPr() *CT_SheetPr { _cgecd := &CT_SheetPr{}; return _cgecd }
func (_bdga *CT_Controls) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cagfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c"}}
	for _, _eddd := range _bdga.Control {
		e.EncodeElement(_eddd, _cagfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Comments and its children, prefixing error messages with path
func (_gbcaee *Comments) ValidateWithPath(path string) error {
	if _deccb := _gbcaee.CT_Comments.ValidateWithPath(path); _deccb != nil {
		return _deccb
	}
	return nil
}
func (_baaff ST_PatternType) String() string {
	switch _baaff {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006f\u006ci\u0064"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case 7:
		return "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 8:
		return "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case 9:
		return "\u0064\u0061\u0072\u006b\u0055\u0070"
	case 10:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case 11:
		return "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 12:
		return "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case 13:
		return "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 14:
		return "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case 15:
		return "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case 16:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case 17:
		return "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 18:
		return "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case 19:
		return "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return ""
}
func (_cbaccb ST_TableStyleType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbaccb.String(), start)
}
func (_geged *CT_PivotAreaReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geged.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_geged.FieldAttr)})
	}
	if _geged.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_geged.CountAttr)})
	}
	if _geged.SelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.SelectedAttr))})
	}
	if _geged.ByPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.ByPositionAttr))})
	}
	if _geged.RelativeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.RelativeAttr))})
	}
	if _geged.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.DefaultSubtotalAttr))})
	}
	if _geged.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.SumSubtotalAttr))})
	}
	if _geged.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.CountASubtotalAttr))})
	}
	if _geged.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.AvgSubtotalAttr))})
	}
	if _geged.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.MaxSubtotalAttr))})
	}
	if _geged.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.MinSubtotalAttr))})
	}
	if _geged.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.ProductSubtotalAttr))})
	}
	if _geged.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.CountSubtotalAttr))})
	}
	if _geged.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.StdDevSubtotalAttr))})
	}
	if _geged.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.StdDevPSubtotalAttr))})
	}
	if _geged.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.VarSubtotalAttr))})
	}
	if _geged.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geged.VarPSubtotalAttr))})
	}
	e.EncodeToken(start)
	if _geged.X != nil {
		_bgaba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _adccb := range _geged.X {
			e.EncodeElement(_adccb, _bgaba)
		}
	}
	if _geged.ExtLst != nil {
		_fgbfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_geged.ExtLst, _fgbfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the PivotCacheDefinition and its children, prefixing error messages with path
func (_feefab *PivotCacheDefinition) ValidateWithPath(path string) error {
	if _cdfc := _feefab.CT_PivotCacheDefinition.ValidateWithPath(path); _cdfc != nil {
		return _cdfc
	}
	return nil
}
func (_ebdgca *ST_GrowShrinkType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cddaac, _dagdc := d.Token()
	if _dagdc != nil {
		return _dagdc
	}
	if _ebgfa, _aebdb := _cddaac.(_b.EndElement); _aebdb && _ebgfa.Name == start.Name {
		*_ebdgca = 1
		return nil
	}
	if _gedce, _eebcag := _cddaac.(_b.CharData); !_eebcag {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cddaac)
	} else {
		switch string(_gedce) {
		case "":
			*_ebdgca = 0
		case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
			*_ebdgca = 1
		case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
			*_ebdgca = 2
		case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
			*_ebdgca = 3
		}
	}
	_cddaac, _dagdc = d.Token()
	if _dagdc != nil {
		return _dagdc
	}
	if _acdgc, _fcefg := _cddaac.(_b.EndElement); _fcefg && _acdgc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cddaac)
}

// Validate validates the CT_ExternalCell and its children
func (_daagf *CT_ExternalCell) Validate() error {
	return _daagf.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c")
}
func (_edcbcd *CT_FieldUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aggda := range start.Attr {
		if _aggda.Name.Local == "\u0078" {
			_ccaed, _dcbfc := _e.ParseInt(_aggda.Value, 10, 32)
			if _dcbfc != nil {
				return _dcbfc
			}
			_edcbcd.XAttr = int32(_ccaed)
			continue
		}
	}
	for {
		_caed, _aaede := d.Token()
		if _aaede != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046i\u0065l\u0064U\u0073\u0061\u0067\u0065\u003a\u0020\u0025s", _aaede)
		}
		if _fbfcd, _eaca := _caed.(_b.EndElement); _eaca && _fbfcd.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_RevisionActionUnset  ST_RevisionAction = 0
	ST_RevisionActionAdd    ST_RevisionAction = 1
	ST_RevisionActionDelete ST_RevisionAction = 2
)

// ValidateWithPath validates the CT_TableColumns and its children, prefixing error messages with path
func (_cagegb *CT_TableColumns) ValidateWithPath(path string) error {
	for _deaeb, _fgeede := range _cagegb.TableColumn {
		if _ggbag := _fgeede.ValidateWithPath(_f.Sprintf("\u0025s\u002fT\u0061\u0062\u006c\u0065\u0043o\u006c\u0075m\u006e\u005b\u0025\u0064\u005d", path, _deaeb)); _ggbag != nil {
			return _ggbag
		}
	}
	return nil
}
func (_gcgdae ST_FilterOperator) ValidateWithPath(path string) error {
	switch _gcgdae {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcgdae))
	}
	return nil
}
func (_dcdb *CT_ChartFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eebb := range start.Attr {
		if _eebb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eecgg, _cefa := _e.ParseUint(_eebb.Value, 10, 32)
			if _cefa != nil {
				return _cefa
			}
			_ceec := uint32(_eecgg)
			_dcdb.CountAttr = &_ceec
			continue
		}
	}
_fea:
	for {
		_bbbbf, _bdbbc := d.Token()
		if _bdbbc != nil {
			return _bdbbc
		}
		switch _cdcf := _bbbbf.(type) {
		case _b.StartElement:
			switch _cdcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_ageff := NewCT_ChartFormat()
				if _cbaeb := d.DecodeElement(_ageff, &_cdcf); _cbaeb != nil {
					return _cbaeb
				}
				_dcdb.ChartFormat = append(_dcdb.ChartFormat, _ageff)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _cdcf.Name)
				if _agecg := d.Skip(); _agecg != nil {
					return _agecg
				}
			}
		case _b.EndElement:
			break _fea
		case _b.CharData:
		}
	}
	return nil
}

type ST_Pane byte

func (_dbade ST_VerticalAlignment) Validate() error { return _dbade.ValidateWithPath("") }
func NewCT_BorderPr() *CT_BorderPr                  { _cad := &CT_BorderPr{}; return _cad }

// Validate validates the CT_MeasureGroup and its children
func (_gbfgc *CT_MeasureGroup) Validate() error {
	return _gbfgc.ValidateWithPath("\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070")
}

type CT_Revisions struct {

	// Revision Row Column Insert Delete
	Rrc []*CT_RevisionRowColumn

	// Revision Cell Move
	Rm []*CT_RevisionMove

	// Revision Custom View
	Rcv []*CT_RevisionCustomView

	// Revision Sheet Name
	Rsnm []*CT_RevisionSheetRename

	// Revision Insert Sheet
	Ris []*CT_RevisionInsertSheet

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting

	// Revision AutoFormat
	Raf []*CT_RevisionAutoFormatting

	// Revision Defined Name
	Rdn []*CT_RevisionDefinedName

	// Revision Cell Comment
	Rcmt []*CT_RevisionComment

	// Revision Query Table
	Rqt []*CT_RevisionQueryTableField

	// Revision Merge Conflict
	Rcft []*CT_RevisionConflict
}

func (_bfbae *CT_PivotCacheDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfbae.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.IdAttr)})
	}
	if _bfbae.InvalidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0076\u0061\u006c\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.InvalidAttr))})
	}
	if _bfbae.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.SaveDataAttr))})
	}
	if _bfbae.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.RefreshOnLoadAttr))})
	}
	if _bfbae.OptimizeMemoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.OptimizeMemoryAttr))})
	}
	if _bfbae.EnableRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.EnableRefreshAttr))})
	}
	if _bfbae.RefreshedByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.RefreshedByAttr)})
	}
	if _bfbae.RefreshedDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.RefreshedDateAttr)})
	}
	if _bfbae.RefreshedDateIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.RefreshedDateIsoAttr)})
	}
	if _bfbae.BackgroundQueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.BackgroundQueryAttr))})
	}
	if _bfbae.MissingItemsLimitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.MissingItemsLimitAttr)})
	}
	if _bfbae.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.CreatedVersionAttr)})
	}
	if _bfbae.RefreshedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.RefreshedVersionAttr)})
	}
	if _bfbae.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.MinRefreshableVersionAttr)})
	}
	if _bfbae.RecordCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bfbae.RecordCountAttr)})
	}
	if _bfbae.UpgradeOnRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.UpgradeOnRefreshAttr))})
	}
	if _bfbae.TupleCacheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.TupleCacheAttr))})
	}
	if _bfbae.SupportSubqueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.SupportSubqueryAttr))})
	}
	if _bfbae.SupportAdvancedDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbae.SupportAdvancedDrillAttr))})
	}
	e.EncodeToken(start)
	_ggcgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065"}}
	e.EncodeElement(_bfbae.CacheSource, _ggcgf)
	_eegdda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_bfbae.CacheFields, _eegdda)
	if _bfbae.CacheHierarchies != nil {
		_aeedd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_bfbae.CacheHierarchies, _aeedd)
	}
	if _bfbae.Kpis != nil {
		_dfgbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006b\u0070\u0069\u0073"}}
		e.EncodeElement(_bfbae.Kpis, _dfgbc)
	}
	if _bfbae.TupleCache != nil {
		_bdbfee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_bfbae.TupleCache, _bdbfee)
	}
	if _bfbae.CalculatedItems != nil {
		_ecba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_bfbae.CalculatedItems, _ecba)
	}
	if _bfbae.CalculatedMembers != nil {
		_aabdf := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073"}}
		e.EncodeElement(_bfbae.CalculatedMembers, _aabdf)
	}
	if _bfbae.Dimensions != nil {
		_cedfbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_bfbae.Dimensions, _cedfbe)
	}
	if _bfbae.MeasureGroups != nil {
		_gafdee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_bfbae.MeasureGroups, _gafdee)
	}
	if _bfbae.Maps != nil {
		_abdea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0061\u0070\u0073"}}
		e.EncodeElement(_bfbae.Maps, _abdea)
	}
	if _bfbae.ExtLst != nil {
		_abfce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bfbae.ExtLst, _abfce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcaea *CT_Rst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fcaea.T != nil {
		_fdbbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
		_d.AddPreserveSpaceAttr(&_fdbbc, *_fcaea.T)
		e.EncodeElement(_fcaea.T, _fdbbc)
	}
	if _fcaea.R != nil {
		_faegf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _ecdgf := range _fcaea.R {
			e.EncodeElement(_ecdgf, _faegf)
		}
	}
	if _fcaea.RPh != nil {
		_gfgcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0068"}}
		for _, _efadcc := range _fcaea.RPh {
			e.EncodeElement(_efadcc, _gfgcd)
		}
	}
	if _fcaea.PhoneticPr != nil {
		_bbbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_fcaea.PhoneticPr, _bbbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FontName struct {

	// String Value
	ValAttr string
}

// Validate validates the CT_OleObject and its children
func (_eacad *CT_OleObject) Validate() error {
	return _eacad.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}
func NewCT_Set() *CT_Set                 { _gdgdg := &CT_Set{}; return _gdgdg }
func NewCT_PivotFields() *CT_PivotFields { _agcfc := &CT_PivotFields{}; return _agcfc }

// Validate validates the CT_MeasureGroups and its children
func (_eaeaa *CT_MeasureGroups) Validate() error {
	return _eaeaa.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073")
}
func (_eeegc *CT_DdeValue) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adgdc := range start.Attr {
		if _adgdc.Name.Local == "\u0074" {
			_eeegc.TAttr.UnmarshalXMLAttr(_adgdc)
			continue
		}
	}
_cabc:
	for {
		_cbcbe, _dgde := d.Token()
		if _dgde != nil {
			return _dgde
		}
		switch _aacec := _cbcbe.(type) {
		case _b.StartElement:
			switch _aacec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				if _bgbeb := d.DecodeElement(&_eeegc.Val, &_aacec); _bgbeb != nil {
					return _bgbeb
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _aacec.Name)
				if _dccb := d.Skip(); _dccb != nil {
					return _dccb
				}
			}
		case _b.EndElement:
			break _cabc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Dxfs and its children
func (_cdfbb *CT_Dxfs) Validate() error {
	return _cdfbb.ValidateWithPath("\u0043T\u005f\u0044\u0078\u0066\u0073")
}

type ST_HorizontalAlignment byte

func NewCT_ProtectedRanges() *CT_ProtectedRanges { _adbdb := &CT_ProtectedRanges{}; return _adbdb }

// Validate validates the CT_Comments and its children
func (_aeacf *CT_Comments) Validate() error {
	return _aeacf.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func (_cggadc ST_MdxFunctionType) ValidateWithPath(path string) error {
	switch _cggadc {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cggadc))
	}
	return nil
}
func (_cegbga *Headers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072\u0073"
	return _cegbga.CT_RevisionHeaders.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_GroupLevels and its children, prefixing error messages with path
func (_fffed *CT_GroupLevels) ValidateWithPath(path string) error {
	for _aeaec, _eeeeb := range _fffed.GroupLevel {
		if _cdgaa := _eeeeb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _aeaec)); _cdgaa != nil {
			return _cdgaa
		}
	}
	return nil
}

type CT_HeaderFooter struct {

	// Different Odd Even Header Footer
	DifferentOddEvenAttr *bool

	// Different First Page
	DifferentFirstAttr *bool

	// Scale Header & Footer With Document
	ScaleWithDocAttr *bool

	// Align Margins
	AlignWithMarginsAttr *bool

	// Odd Header
	OddHeader *string

	// Odd Page Footer
	OddFooter *string

	// Even Page Header
	EvenHeader *string

	// Even Page Footer
	EvenFooter *string

	// First Page Header
	FirstHeader *string

	// First Page Footer
	FirstFooter *string
}

const (
	ST_PhoneticTypeUnset             ST_PhoneticType = 0
	ST_PhoneticTypeHalfwidthKatakana ST_PhoneticType = 1
	ST_PhoneticTypeFullwidthKatakana ST_PhoneticType = 2
	ST_PhoneticTypeHiragana          ST_PhoneticType = 3
	ST_PhoneticTypeNoConversion      ST_PhoneticType = 4
)

// ValidateWithPath validates the CT_pivotTableDefinition and its children, prefixing error messages with path
func (_badba *CT_pivotTableDefinition) ValidateWithPath(path string) error {
	if _deea := _badba.Location.ValidateWithPath(path + "\u002fL\u006f\u0063\u0061\u0074\u0069\u006fn"); _deea != nil {
		return _deea
	}
	if _badba.PivotFields != nil {
		if _aaacec := _badba.PivotFields.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _aaacec != nil {
			return _aaacec
		}
	}
	if _badba.RowFields != nil {
		if _cabcg := _badba.RowFields.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"); _cabcg != nil {
			return _cabcg
		}
	}
	if _badba.RowItems != nil {
		if _gabeb := _badba.RowItems.ValidateWithPath(path + "\u002fR\u006f\u0077\u0049\u0074\u0065\u006ds"); _gabeb != nil {
			return _gabeb
		}
	}
	if _badba.ColFields != nil {
		if _agfgbe := _badba.ColFields.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"); _agfgbe != nil {
			return _agfgbe
		}
	}
	if _badba.ColItems != nil {
		if _cbbfg := _badba.ColItems.ValidateWithPath(path + "\u002fC\u006f\u006c\u0049\u0074\u0065\u006ds"); _cbbfg != nil {
			return _cbbfg
		}
	}
	if _badba.PageFields != nil {
		if _daegf := _badba.PageFields.ValidateWithPath(path + "/\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _daegf != nil {
			return _daegf
		}
	}
	if _badba.DataFields != nil {
		if _ggeegf := _badba.DataFields.ValidateWithPath(path + "/\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"); _ggeegf != nil {
			return _ggeegf
		}
	}
	if _badba.Formats != nil {
		if _fdgbf := _badba.Formats.ValidateWithPath(path + "\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _fdgbf != nil {
			return _fdgbf
		}
	}
	if _badba.ConditionalFormats != nil {
		if _eegde := _badba.ConditionalFormats.ValidateWithPath(path + "\u002f\u0043\u006f\u006edi\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _eegde != nil {
			return _eegde
		}
	}
	if _badba.ChartFormats != nil {
		if _ggdbe := _badba.ChartFormats.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _ggdbe != nil {
			return _ggdbe
		}
	}
	if _badba.PivotHierarchies != nil {
		if _gaaff := _badba.PivotHierarchies.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _gaaff != nil {
			return _gaaff
		}
	}
	if _badba.PivotTableStyleInfo != nil {
		if _ecddc := _badba.PivotTableStyleInfo.ValidateWithPath(path + "/\u0050i\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065In\u0066\u006f"); _ecddc != nil {
			return _ecddc
		}
	}
	if _badba.Filters != nil {
		if _adddc := _badba.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _adddc != nil {
			return _adddc
		}
	}
	if _badba.RowHierarchiesUsage != nil {
		if _bedce := _badba.RowHierarchiesUsage.ValidateWithPath(path + "/\u0052o\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _bedce != nil {
			return _bedce
		}
	}
	if _badba.ColHierarchiesUsage != nil {
		if _feeab := _badba.ColHierarchiesUsage.ValidateWithPath(path + "/\u0043o\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _feeab != nil {
			return _feeab
		}
	}
	if _badba.ExtLst != nil {
		if _abecfg := _badba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abecfg != nil {
			return _abecfg
		}
	}
	return nil
}
func (_agcae ST_TotalsRowFunction) Validate() error { return _agcae.ValidateWithPath("") }
func (_bcbba *CT_RevisionSheetRename) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efbfe := range start.Attr {
		if _efbfe.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_abbab, _ggcbc := _e.ParseUint(_efbfe.Value, 10, 32)
			if _ggcbc != nil {
				return _ggcbc
			}
			_bcbba.SheetIdAttr = uint32(_abbab)
			continue
		}
		if _efbfe.Name.Local == "\u006fl\u0064\u004e\u0061\u006d\u0065" {
			_cbdab, _bbgggc := _efbfe.Value, error(nil)
			if _bbgggc != nil {
				return _bbgggc
			}
			_bcbba.OldNameAttr = _cbdab
			continue
		}
		if _efbfe.Name.Local == "\u006ee\u0077\u004e\u0061\u006d\u0065" {
			_adgde, _gagdg := _efbfe.Value, error(nil)
			if _gagdg != nil {
				return _gagdg
			}
			_bcbba.NewNameAttr = _adgde
			continue
		}
		if _efbfe.Name.Local == "\u0072\u0049\u0064" {
			_adfbdb, _dcceb := _e.ParseUint(_efbfe.Value, 10, 32)
			if _dcceb != nil {
				return _dcceb
			}
			_eadca := uint32(_adfbdb)
			_bcbba.RIdAttr = &_eadca
			continue
		}
		if _efbfe.Name.Local == "\u0075\u0061" {
			_dgebb, _bdgeb := _e.ParseBool(_efbfe.Value)
			if _bdgeb != nil {
				return _bdgeb
			}
			_bcbba.UaAttr = &_dgebb
			continue
		}
		if _efbfe.Name.Local == "\u0072\u0061" {
			_bcgac, _dcaeb := _e.ParseBool(_efbfe.Value)
			if _dcaeb != nil {
				return _dcaeb
			}
			_bcbba.RaAttr = &_bcgac
			continue
		}
	}
_gdcdf:
	for {
		_gdbbc, _gdgcg := d.Token()
		if _gdgcg != nil {
			return _gdgcg
		}
		switch _daddb := _gdbbc.(type) {
		case _b.StartElement:
			switch _daddb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcbba.ExtLst = NewCT_ExtensionList()
				if _ffacgc := d.DecodeElement(_bcbba.ExtLst, &_daddb); _ffacgc != nil {
					return _ffacgc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061\u006d\u0065\u0020\u0025\u0076", _daddb.Name)
				if _eaedf := d.Skip(); _eaedf != nil {
					return _eaedf
				}
			}
		case _b.EndElement:
			break _gdcdf
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_OrientationUnset     ST_Orientation = 0
	ST_OrientationDefault   ST_Orientation = 1
	ST_OrientationPortrait  ST_Orientation = 2
	ST_OrientationLandscape ST_Orientation = 3
)

func (_bdbaab ST_DataValidationImeMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bdbaab.String(), start)
}

type CT_Tuples struct {

	// Member Name Count
	CAttr *uint32

	// Tuple
	Tpl []*CT_Tuple
}

func (_bgec *CT_MetadataStringIndex) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egcga := range start.Attr {
		if _egcga.Name.Local == "\u0078" {
			_ababa, _bbdgg := _e.ParseUint(_egcga.Value, 10, 32)
			if _bbdgg != nil {
				return _bbdgg
			}
			_bgec.XAttr = uint32(_ababa)
			continue
		}
		if _egcga.Name.Local == "\u0073" {
			_bdcfec, _debba := _e.ParseBool(_egcga.Value)
			if _debba != nil {
				return _debba
			}
			_bgec.SAttr = &_bdcfec
			continue
		}
	}
	for {
		_daacb, _fffggb := d.Token()
		if _fffggb != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074a\u0064a\u0074a\u0053t\u0072\u0069\u006e\u0067\u0049\u006e\u0064\u0065\u0078\u003a\u0020\u0025\u0073", _fffggb)
		}
		if _eadaf, _aacgc := _daacb.(_b.EndElement); _aacgc && _eadaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Reviewed and its children, prefixing error messages with path
func (_bgfbc *CT_Reviewed) ValidateWithPath(path string) error { return nil }
func NewCT_GradientFill() *CT_GradientFill                     { _bdgdg := &CT_GradientFill{}; return _bdgdg }
func (_caccdf ST_Objects) ValidateWithPath(path string) error {
	switch _caccdf {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caccdf))
	}
	return nil
}

// Validate validates the CT_CustomFilter and its children
func (_aggg *CT_CustomFilter) Validate() error {
	return _aggg.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_edcabc *CT_PivotFilters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edcabc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_edcabc.CountAttr)})
	}
	e.EncodeToken(start)
	if _edcabc.Filter != nil {
		_ceeeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _fbgfa := range _edcabc.Filter {
			e.EncodeElement(_fbgfa, _ceeeg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dagabe *ST_rwColActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cffcg, _aefdd := d.Token()
	if _aefdd != nil {
		return _aefdd
	}
	if _bggga, _aaefa := _cffcg.(_b.EndElement); _aaefa && _bggga.Name == start.Name {
		*_dagabe = 1
		return nil
	}
	if _bfaecc, _fdafd := _cffcg.(_b.CharData); !_fdafd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cffcg)
	} else {
		switch string(_bfaecc) {
		case "":
			*_dagabe = 0
		case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
			*_dagabe = 1
		case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
			*_dagabe = 2
		case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
			*_dagabe = 3
		case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
			*_dagabe = 4
		}
	}
	_cffcg, _aefdd = d.Token()
	if _aefdd != nil {
		return _aefdd
	}
	if _dcdff, _fcfcc := _cffcg.(_b.EndElement); _fcfcc && _dcdff.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cffcg)
}

// ValidateWithPath validates the CT_CsPageSetup and its children, prefixing error messages with path
func (_gcaed *CT_CsPageSetup) ValidateWithPath(path string) error {
	if _gcaed.PaperHeightAttr != nil {
		if !_c.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gcaed.PaperHeightAttr) {
			return _f.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_PositiveUniversalMeasurePatternRe, *_gcaed.PaperHeightAttr)
		}
	}
	if _gcaed.PaperHeightAttr != nil {
		if !_c.ST_UniversalMeasurePatternRe.MatchString(*_gcaed.PaperHeightAttr) {
			return _f.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_UniversalMeasurePatternRe, *_gcaed.PaperHeightAttr)
		}
	}
	if _gcaed.PaperWidthAttr != nil {
		if !_c.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gcaed.PaperWidthAttr) {
			return _f.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_PositiveUniversalMeasurePatternRe, *_gcaed.PaperWidthAttr)
		}
	}
	if _gcaed.PaperWidthAttr != nil {
		if !_c.ST_UniversalMeasurePatternRe.MatchString(*_gcaed.PaperWidthAttr) {
			return _f.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_UniversalMeasurePatternRe, *_gcaed.PaperWidthAttr)
		}
	}
	if _fedb := _gcaed.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fedb != nil {
		return _fedb
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedItem and its children, prefixing error messages with path
func (_gdgg *CT_CalculatedItem) ValidateWithPath(path string) error {
	if _gfde := _gdgg.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _gfde != nil {
		return _gfde
	}
	if _gdgg.ExtLst != nil {
		if _bbef := _gdgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbef != nil {
			return _bbef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionAutoFormatting and its children, prefixing error messages with path
func (_gedfg *CT_RevisionAutoFormatting) ValidateWithPath(path string) error { return nil }
func (_ebade *Workbook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b"
	return _ebade.CT_Workbook.MarshalXML(e, start)
}

type CT_TableStyles struct {

	// Table Style Count
	CountAttr *uint32

	// Default Table Style
	DefaultTableStyleAttr *string

	// Default Pivot Style
	DefaultPivotStyleAttr *string

	// Table Style
	TableStyle []*CT_TableStyle
}

// Validate validates the CT_GroupMember and its children
func (_gdbff *CT_GroupMember) Validate() error {
	return _gdbff.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072")
}
func (_gbbaa ST_Pane) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbbaa.String(), start)
}

// ValidateWithPath validates the CT_SingleXmlCell and its children, prefixing error messages with path
func (_cgddb *CT_SingleXmlCell) ValidateWithPath(path string) error {
	if _cdfgba := _cgddb.XmlCellPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"); _cdfgba != nil {
		return _cdfgba
	}
	if _cgddb.ExtLst != nil {
		if _agdfce := _cgddb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdfce != nil {
			return _agdfce
		}
	}
	return nil
}
func (_aegcb ST_SheetViewType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cffceb := _b.Attr{}
	_cffceb.Name = name
	switch _aegcb {
	case ST_SheetViewTypeUnset:
		_cffceb.Value = ""
	case ST_SheetViewTypeNormal:
		_cffceb.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_SheetViewTypePageBreakPreview:
		_cffceb.Value = "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case ST_SheetViewTypePageLayout:
		_cffceb.Value = "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return _cffceb, nil
}

// ValidateWithPath validates the CT_LegacyDrawing and its children, prefixing error messages with path
func (_aeaac *CT_LegacyDrawing) ValidateWithPath(path string) error { return nil }
func (_efabe *CT_CalcCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efabe.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_efabe.RAttr)})
	}
	if _efabe.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_efabe.RefAttr)})
	}
	if _efabe.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_efabe.IAttr)})
	}
	if _efabe.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efabe.SAttr))})
	}
	if _efabe.LAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efabe.LAttr))})
	}
	if _efabe.TAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efabe.TAttr))})
	}
	if _efabe.AAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efabe.AAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdcce *CT_RevisionInsertSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geegb := range start.Attr {
		if _geegb.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_efabef, _ddgdb := _e.ParseUint(_geegb.Value, 10, 32)
			if _ddgdb != nil {
				return _ddgdb
			}
			_fdcce.SheetIdAttr = uint32(_efabef)
			continue
		}
		if _geegb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cabda, _acecdb := _geegb.Value, error(nil)
			if _acecdb != nil {
				return _acecdb
			}
			_fdcce.NameAttr = _cabda
			continue
		}
		if _geegb.Name.Local == "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_bdfd, _abaab := _e.ParseUint(_geegb.Value, 10, 32)
			if _abaab != nil {
				return _abaab
			}
			_fdcce.SheetPositionAttr = uint32(_bdfd)
			continue
		}
		if _geegb.Name.Local == "\u0072\u0049\u0064" {
			_gfbfg, _dcffd := _e.ParseUint(_geegb.Value, 10, 32)
			if _dcffd != nil {
				return _dcffd
			}
			_adabba := uint32(_gfbfg)
			_fdcce.RIdAttr = &_adabba
			continue
		}
		if _geegb.Name.Local == "\u0075\u0061" {
			_gdecg, _febec := _e.ParseBool(_geegb.Value)
			if _febec != nil {
				return _febec
			}
			_fdcce.UaAttr = &_gdecg
			continue
		}
		if _geegb.Name.Local == "\u0072\u0061" {
			_egacd, _dgbda := _e.ParseBool(_geegb.Value)
			if _dgbda != nil {
				return _dgbda
			}
			_fdcce.RaAttr = &_egacd
			continue
		}
	}
	for {
		_ddaag, _defeaa := d.Token()
		if _defeaa != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073i\u006fn\u0049n\u0073\u0065\u0072\u0074\u0053\u0068\u0065\u0065\u0074\u003a\u0020\u0025\u0073", _defeaa)
		}
		if _ccdabe, _cffcf := _ddaag.(_b.EndElement); _cffcf && _ccdabe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffcefd ST_ConditionalFormattingOperator) Validate() error { return _ffcefd.ValidateWithPath("") }

// ValidateWithPath validates the AG_AutoFormat and its children, prefixing error messages with path
func (_fad *AG_AutoFormat) ValidateWithPath(path string) error { return nil }

type ST_ParameterType byte

func (_defaf ST_Orientation) String() string {
	switch _defaf {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case 3:
		return "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return ""
}
func (_cdfef *CT_PCDKPI) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cdfef.UniqueNameAttr)})
	if _cdfef.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.CaptionAttr)})
	}
	if _cdfef.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.DisplayFolderAttr)})
	}
	if _cdfef.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.MeasureGroupAttr)})
	}
	if _cdfef.ParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.ParentAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006cu\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cdfef.ValueAttr)})
	if _cdfef.GoalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u006f\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.GoalAttr)})
	}
	if _cdfef.StatusAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061\u0074\u0075\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.StatusAttr)})
	}
	if _cdfef.TrendAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0065n\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.TrendAttr)})
	}
	if _cdfef.WeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.WeightAttr)})
	}
	if _cdfef.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cdfef.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aedaa *CT_LevelGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _aedaa.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _aedaa.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _aedaa.CaptionAttr)})
	if _aedaa.UniqueParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_aedaa.UniqueParentAttr)})
	}
	if _aedaa.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_aedaa.IdAttr)})
	}
	e.EncodeToken(start)
	_dddfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ag\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}}
	e.EncodeElement(_aedaa.GroupMembers, _dddfc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edcfc *CT_RevisionDefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edcfc.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.LocalSheetIdAttr)})
	}
	if _edcfc.CustomViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.CustomViewAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _edcfc.NameAttr)})
	if _edcfc.FunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.FunctionAttr))})
	}
	if _edcfc.OldFunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.OldFunctionAttr))})
	}
	if _edcfc.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.FunctionGroupIdAttr)})
	}
	if _edcfc.OldFunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldFunctionGroupIdAttr)})
	}
	if _edcfc.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.ShortcutKeyAttr)})
	}
	if _edcfc.OldShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldShortcutKeyAttr)})
	}
	if _edcfc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.HiddenAttr))})
	}
	if _edcfc.OldHiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.OldHiddenAttr))})
	}
	if _edcfc.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.CustomMenuAttr)})
	}
	if _edcfc.OldCustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldCustomMenuAttr)})
	}
	if _edcfc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.DescriptionAttr)})
	}
	if _edcfc.OldDescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldDescriptionAttr)})
	}
	if _edcfc.HelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.HelpAttr)})
	}
	if _edcfc.OldHelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u0048\u0065\u006c\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldHelpAttr)})
	}
	if _edcfc.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.StatusBarAttr)})
	}
	if _edcfc.OldStatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldStatusBarAttr)})
	}
	if _edcfc.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.CommentAttr)})
	}
	if _edcfc.OldCommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.OldCommentAttr)})
	}
	if _edcfc.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_edcfc.RIdAttr)})
	}
	if _edcfc.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.UaAttr))})
	}
	if _edcfc.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_edcfc.RaAttr))})
	}
	e.EncodeToken(start)
	if _edcfc.Formula != nil {
		_bfaaad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_d.AddPreserveSpaceAttr(&_bfaaad, *_edcfc.Formula)
		e.EncodeElement(_edcfc.Formula, _bfaaad)
	}
	if _edcfc.OldFormula != nil {
		_afaaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_d.AddPreserveSpaceAttr(&_afaaf, *_edcfc.OldFormula)
		e.EncodeElement(_edcfc.OldFormula, _afaaf)
	}
	if _edcfc.ExtLst != nil {
		_ggdacg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_edcfc.ExtLst, _ggdacg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Sst() *CT_Sst { _dccdb := &CT_Sst{}; return _dccdb }

// ValidateWithPath validates the CT_CustomSheetViews and its children, prefixing error messages with path
func (_eced *CT_CustomSheetViews) ValidateWithPath(path string) error {
	for _ccbge, _afeg := range _eced.CustomSheetView {
		if _ffffd := _afeg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _ccbge)); _ffffd != nil {
			return _ffffd
		}
	}
	return nil
}
func (_bbcabd *ST_Orientation) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbcabd = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_bbcabd = 1
	case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
		*_bbcabd = 2
	case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
		*_bbcabd = 3
	}
	return nil
}
func (_dacgb *CT_PageMargins) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfgecf := range start.Attr {
		if _bfgecf.Name.Local == "\u006c\u0065\u0066\u0074" {
			_gdagd, _aeeb := _e.ParseFloat(_bfgecf.Value, 64)
			if _aeeb != nil {
				return _aeeb
			}
			_dacgb.LeftAttr = _gdagd
			continue
		}
		if _bfgecf.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_edfgc, _cdeb := _e.ParseFloat(_bfgecf.Value, 64)
			if _cdeb != nil {
				return _cdeb
			}
			_dacgb.RightAttr = _edfgc
			continue
		}
		if _bfgecf.Name.Local == "\u0074\u006f\u0070" {
			_dbded, _eddda := _e.ParseFloat(_bfgecf.Value, 64)
			if _eddda != nil {
				return _eddda
			}
			_dacgb.TopAttr = _dbded
			continue
		}
		if _bfgecf.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_efecc, _bgdga := _e.ParseFloat(_bfgecf.Value, 64)
			if _bgdga != nil {
				return _bgdga
			}
			_dacgb.BottomAttr = _efecc
			continue
		}
		if _bfgecf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072" {
			_efaba, _eafgf := _e.ParseFloat(_bfgecf.Value, 64)
			if _eafgf != nil {
				return _eafgf
			}
			_dacgb.HeaderAttr = _efaba
			continue
		}
		if _bfgecf.Name.Local == "\u0066\u006f\u006f\u0074\u0065\u0072" {
			_gggde, _aabgff := _e.ParseFloat(_bfgecf.Value, 64)
			if _aabgff != nil {
				return _aabgff
			}
			_dacgb.FooterAttr = _gggde
			continue
		}
	}
	for {
		_beab, _dacag := d.Token()
		if _dacag != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073:\u0020\u0025\u0073", _dacag)
		}
		if _ecedbe, _afbab := _beab.(_b.EndElement); _afbab && _ecedbe.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TupleCache() *CT_TupleCache { _fcacc := &CT_TupleCache{}; return _fcacc }

type CT_CellStyles struct {

	// Style Count
	CountAttr *uint32

	// Cell Style
	CellStyle []*CT_CellStyle
}

// Validate validates the CT_DefinedNames and its children
func (_cddbgf *CT_DefinedNames) Validate() error {
	return _cddbgf.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func (_cgddd *CT_String) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gegdcb := range start.Attr {
		if _gegdcb.Name.Local == "\u0066\u0063" {
			_cadgb, _bdfgcc := _gegdcb.Value, error(nil)
			if _bdfgcc != nil {
				return _bdfgcc
			}
			_cgddd.FcAttr = &_cadgb
			continue
		}
		if _gegdcb.Name.Local == "\u0076" {
			_cccff, _agefc := _gegdcb.Value, error(nil)
			if _agefc != nil {
				return _agefc
			}
			_cgddd.VAttr = _cccff
			continue
		}
		if _gegdcb.Name.Local == "\u0066" {
			_dcbgd, _begda := _e.ParseBool(_gegdcb.Value)
			if _begda != nil {
				return _begda
			}
			_cgddd.FAttr = &_dcbgd
			continue
		}
		if _gegdcb.Name.Local == "\u0063" {
			_cefaf, _aagcff := _gegdcb.Value, error(nil)
			if _aagcff != nil {
				return _aagcff
			}
			_cgddd.CAttr = &_cefaf
			continue
		}
		if _gegdcb.Name.Local == "\u0063\u0070" {
			_acfab, _fdffa := _e.ParseUint(_gegdcb.Value, 10, 32)
			if _fdffa != nil {
				return _fdffa
			}
			_bbbegf := uint32(_acfab)
			_cgddd.CpAttr = &_bbbegf
			continue
		}
		if _gegdcb.Name.Local == "\u0069\u006e" {
			_bcaef, _ffdgd := _e.ParseUint(_gegdcb.Value, 10, 32)
			if _ffdgd != nil {
				return _ffdgd
			}
			_ggdga := uint32(_bcaef)
			_cgddd.InAttr = &_ggdga
			continue
		}
		if _gegdcb.Name.Local == "\u0062\u0063" {
			_egfee, _geddb := _gegdcb.Value, error(nil)
			if _geddb != nil {
				return _geddb
			}
			_cgddd.BcAttr = &_egfee
			continue
		}
		if _gegdcb.Name.Local == "\u0075" {
			_dgbec, _dcbec := _e.ParseBool(_gegdcb.Value)
			if _dcbec != nil {
				return _dcbec
			}
			_cgddd.UAttr = &_dgbec
			continue
		}
		if _gegdcb.Name.Local == "\u0069" {
			_ceegc, _baadf := _e.ParseBool(_gegdcb.Value)
			if _baadf != nil {
				return _baadf
			}
			_cgddd.IAttr = &_ceegc
			continue
		}
		if _gegdcb.Name.Local == "\u0075\u006e" {
			_fcbad, _adcbe := _e.ParseBool(_gegdcb.Value)
			if _adcbe != nil {
				return _adcbe
			}
			_cgddd.UnAttr = &_fcbad
			continue
		}
		if _gegdcb.Name.Local == "\u0073\u0074" {
			_gbgga, _dfacc := _e.ParseBool(_gegdcb.Value)
			if _dfacc != nil {
				return _dfacc
			}
			_cgddd.StAttr = &_gbgga
			continue
		}
		if _gegdcb.Name.Local == "\u0062" {
			_eggdf, _egdebb := _e.ParseBool(_gegdcb.Value)
			if _egdebb != nil {
				return _egdebb
			}
			_cgddd.BAttr = &_eggdf
			continue
		}
	}
_ffded:
	for {
		_bddbfc, _bacbf := d.Token()
		if _bacbf != nil {
			return _bacbf
		}
		switch _eaccg := _bddbfc.(type) {
		case _b.StartElement:
			switch _eaccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_gbecbg := NewCT_Tuples()
				if _ggfaf := d.DecodeElement(_gbecbg, &_eaccg); _ggfaf != nil {
					return _ggfaf
				}
				_cgddd.Tpls = append(_cgddd.Tpls, _gbecbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_acacf := NewCT_X()
				if _cgceba := d.DecodeElement(_acacf, &_eaccg); _cgceba != nil {
					return _cgceba
				}
				_cgddd.X = append(_cgddd.X, _acacf)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0074\u0072i\u006e\u0067 \u0025\u0076", _eaccg.Name)
				if _gaceb := d.Skip(); _gaceb != nil {
					return _gaceb
				}
			}
		case _b.EndElement:
			break _ffded
		case _b.CharData:
		}
	}
	return nil
}
func (_fgfcb *Revisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ar\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"
	return _fgfcb.CT_Revisions.MarshalXML(e, start)
}
func (_dega *CT_CalculatedMember) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcaaa := range start.Attr {
		if _dcaaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcab, _dffe := _dcaaa.Value, error(nil)
			if _dffe != nil {
				return _dffe
			}
			_dega.NameAttr = _bcab
			continue
		}
		if _dcaaa.Name.Local == "\u006d\u0064\u0078" {
			_acdd, _gfdeb := _dcaaa.Value, error(nil)
			if _gfdeb != nil {
				return _gfdeb
			}
			_dega.MdxAttr = _acdd
			continue
		}
		if _dcaaa.Name.Local == "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065" {
			_bcee, _eeg := _dcaaa.Value, error(nil)
			if _eeg != nil {
				return _eeg
			}
			_dega.MemberNameAttr = &_bcee
			continue
		}
		if _dcaaa.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_fceab, _bdab := _dcaaa.Value, error(nil)
			if _bdab != nil {
				return _bdab
			}
			_dega.HierarchyAttr = &_fceab
			continue
		}
		if _dcaaa.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_dbfc, _afa := _dcaaa.Value, error(nil)
			if _afa != nil {
				return _afa
			}
			_dega.ParentAttr = &_dbfc
			continue
		}
		if _dcaaa.Name.Local == "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072" {
			_ebba, _aeea := _e.ParseInt(_dcaaa.Value, 10, 32)
			if _aeea != nil {
				return _aeea
			}
			_dgge := int32(_ebba)
			_dega.SolveOrderAttr = &_dgge
			continue
		}
		if _dcaaa.Name.Local == "\u0073\u0065\u0074" {
			_fgefc, _becb := _e.ParseBool(_dcaaa.Value)
			if _becb != nil {
				return _becb
			}
			_dega.SetAttr = &_fgefc
			continue
		}
	}
_ffcc:
	for {
		_acc, _bdgf := d.Token()
		if _bdgf != nil {
			return _bdgf
		}
		switch _ddfg := _acc.(type) {
		case _b.StartElement:
			switch _ddfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dega.ExtLst = NewCT_ExtensionList()
				if _gbdd := d.DecodeElement(_dega.ExtLst, &_ddfg); _gbdd != nil {
					return _gbdd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061te\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0020\u0025\u0076", _ddfg.Name)
				if _bgcd := d.Skip(); _bgcd != nil {
					return _bgcd
				}
			}
		case _b.EndElement:
			break _ffcc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CalcPr() *CT_CalcPr { _baf := &CT_CalcPr{}; return _baf }

// Validate validates the CT_OutlinePr and its children
func (_dfdafd *CT_OutlinePr) Validate() error {
	return _dfdafd.ValidateWithPath("\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072")
}
func (_gcfga *CT_PivotField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcfga.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_gcfga.NameAttr)})
	}
	if _gcfga.AxisAttr != ST_AxisUnset {
		_cdddf, _adabd := _gcfga.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _adabd != nil {
			return _adabd
		}
		start.Attr = append(start.Attr, _cdddf)
	}
	if _gcfga.DataFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DataFieldAttr))})
	}
	if _gcfga.SubtotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_gcfga.SubtotalCaptionAttr)})
	}
	if _gcfga.ShowDropDownsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ShowDropDownsAttr))})
	}
	if _gcfga.HiddenLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.HiddenLevelAttr))})
	}
	if _gcfga.UniqueMemberPropertyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_gcfga.UniqueMemberPropertyAttr)})
	}
	if _gcfga.CompactAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.CompactAttr))})
	}
	if _gcfga.AllDrilledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.AllDrilledAttr))})
	}
	if _gcfga.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gcfga.NumFmtIdAttr)})
	}
	if _gcfga.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.OutlineAttr))})
	}
	if _gcfga.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.SubtotalTopAttr))})
	}
	if _gcfga.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DragToRowAttr))})
	}
	if _gcfga.DragToColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DragToColAttr))})
	}
	if _gcfga.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.MultipleItemSelectionAllowedAttr))})
	}
	if _gcfga.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DragToPageAttr))})
	}
	if _gcfga.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DragToDataAttr))})
	}
	if _gcfga.DragOffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DragOffAttr))})
	}
	if _gcfga.ShowAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0041\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ShowAllAttr))})
	}
	if _gcfga.InsertBlankRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.InsertBlankRowAttr))})
	}
	if _gcfga.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ServerFieldAttr))})
	}
	if _gcfga.InsertPageBreakAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.InsertPageBreakAttr))})
	}
	if _gcfga.AutoShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.AutoShowAttr))})
	}
	if _gcfga.TopAutoShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.TopAutoShowAttr))})
	}
	if _gcfga.HideNewItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.HideNewItemsAttr))})
	}
	if _gcfga.MeasureFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.MeasureFilterAttr))})
	}
	if _gcfga.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.IncludeNewItemsInFilterAttr))})
	}
	if _gcfga.ItemPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gcfga.ItemPageCountAttr)})
	}
	if _gcfga.SortTypeAttr != ST_FieldSortTypeUnset {
		_eggeg, _facag := _gcfga.SortTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _facag != nil {
			return _facag
		}
		start.Attr = append(start.Attr, _eggeg)
	}
	if _gcfga.DataSourceSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DataSourceSortAttr))})
	}
	if _gcfga.NonAutoSortDefaultAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.NonAutoSortDefaultAttr))})
	}
	if _gcfga.RankByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u006e\u006b\u0042\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_gcfga.RankByAttr)})
	}
	if _gcfga.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DefaultSubtotalAttr))})
	}
	if _gcfga.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.SumSubtotalAttr))})
	}
	if _gcfga.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.CountASubtotalAttr))})
	}
	if _gcfga.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.AvgSubtotalAttr))})
	}
	if _gcfga.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.MaxSubtotalAttr))})
	}
	if _gcfga.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.MinSubtotalAttr))})
	}
	if _gcfga.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ProductSubtotalAttr))})
	}
	if _gcfga.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.CountSubtotalAttr))})
	}
	if _gcfga.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.StdDevSubtotalAttr))})
	}
	if _gcfga.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.StdDevPSubtotalAttr))})
	}
	if _gcfga.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.VarSubtotalAttr))})
	}
	if _gcfga.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.VarPSubtotalAttr))})
	}
	if _gcfga.ShowPropCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ShowPropCellAttr))})
	}
	if _gcfga.ShowPropTipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ShowPropTipAttr))})
	}
	if _gcfga.ShowPropAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.ShowPropAsCaptionAttr))})
	}
	if _gcfga.DefaultAttributeDrillStateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gcfga.DefaultAttributeDrillStateAttr))})
	}
	e.EncodeToken(start)
	if _gcfga.Items != nil {
		_faffc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_gcfga.Items, _faffc)
	}
	if _gcfga.AutoSortScope != nil {
		_dgbfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0061\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}}
		e.EncodeElement(_gcfga.AutoSortScope, _dgbfa)
	}
	if _gcfga.ExtLst != nil {
		_dbfged := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcfga.ExtLst, _dbfged)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SharedUser struct {

	// User Revisions GUID
	GuidAttr string

	// User Name
	NameAttr string

	// User Id
	IdAttr int32

	// Date Time
	DateTimeAttr _gb.Time
	ExtLst       *CT_ExtensionList
}

func (_ddcgea *CT_VolMain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074"}, Value: _f.Sprintf("\u0025\u0076", _ddcgea.FirstAttr)})
	e.EncodeToken(start)
	_efabc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0070"}}
	for _, _gcddb := range _ddcgea.Tp {
		e.EncodeElement(_gcddb, _efabc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gdabd *CT_CacheHierarchies) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gacd := range start.Attr {
		if _gacd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agd, _abb := _e.ParseUint(_gacd.Value, 10, 32)
			if _abb != nil {
				return _abb
			}
			_cca := uint32(_agd)
			_gdabd.CountAttr = &_cca
			continue
		}
	}
_dcaa:
	for {
		_agfg, _gefe := d.Token()
		if _gefe != nil {
			return _gefe
		}
		switch _afdf := _agfg.(type) {
		case _b.StartElement:
			switch _afdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_eaf := NewCT_CacheHierarchy()
				if _ede := d.DecodeElement(_eaf, &_afdf); _ede != nil {
					return _ede
				}
				_gdabd.CacheHierarchy = append(_gdabd.CacheHierarchy, _eaf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _afdf.Name)
				if _adee := d.Skip(); _adee != nil {
					return _adee
				}
			}
		case _b.EndElement:
			break _dcaa
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Member and its children
func (_gefb *CT_Member) Validate() error {
	return _gefb.ValidateWithPath("\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r")
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_bdffg *CT_Table) ValidateWithPath(path string) error {
	if _befcd := _bdffg.TableTypeAttr.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _befcd != nil {
		return _befcd
	}
	if _bdffg.AutoFilter != nil {
		if _gbdgf := _bdffg.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _gbdgf != nil {
			return _gbdgf
		}
	}
	if _bdffg.SortState != nil {
		if _gcgcg := _bdffg.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _gcgcg != nil {
			return _gcgcg
		}
	}
	if _faedf := _bdffg.TableColumns.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"); _faedf != nil {
		return _faedf
	}
	if _bdffg.TableStyleInfo != nil {
		if _gaebe := _bdffg.TableStyleInfo.ValidateWithPath(path + "\u002fT\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"); _gaebe != nil {
			return _gaebe
		}
	}
	if _bdffg.ExtLst != nil {
		if _deaaa := _bdffg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deaaa != nil {
			return _deaaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XmlColumnPr and its children, prefixing error messages with path
func (_edadf *CT_XmlColumnPr) ValidateWithPath(path string) error {
	if _edadf.ExtLst != nil {
		if _cfcde := _edadf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfcde != nil {
			return _cfcde
		}
	}
	return nil
}
func (_abfa *ST_CalcMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgagbe, _dbeacf := d.Token()
	if _dbeacf != nil {
		return _dbeacf
	}
	if _bbfbe, _daabf := _dgagbe.(_b.EndElement); _daabf && _bbfbe.Name == start.Name {
		*_abfa = 1
		return nil
	}
	if _egacef, _gbgec := _dgagbe.(_b.CharData); !_gbgec {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgagbe)
	} else {
		switch string(_egacef) {
		case "":
			*_abfa = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_abfa = 1
		case "\u0061\u0075\u0074\u006f":
			*_abfa = 2
		case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
			*_abfa = 3
		}
	}
	_dgagbe, _dbeacf = d.Token()
	if _dbeacf != nil {
		return _dbeacf
	}
	if _fcffac, _gfdcdc := _dgagbe.(_b.EndElement); _gfdcdc && _fcffac.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgagbe)
}
func (_cafe *CT_CustomSheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ccgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
	for _, _addd := range _cafe.CustomSheetView {
		e.EncodeElement(_addd, _ccgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccaddg ST_DataValidationOperator) ValidateWithPath(path string) error {
	switch _ccaddg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccaddg))
	}
	return nil
}
func (_ggfaa ST_Type) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddbaea := _b.Attr{}
	_ddbaea.Name = name
	switch _ggfaa {
	case ST_TypeUnset:
		_ddbaea.Value = ""
	case ST_TypeNone:
		_ddbaea.Value = "\u006e\u006f\u006e\u0065"
	case ST_TypeAll:
		_ddbaea.Value = "\u0061\u006c\u006c"
	case ST_TypeRow:
		_ddbaea.Value = "\u0072\u006f\u0077"
	case ST_TypeColumn:
		_ddbaea.Value = "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return _ddbaea, nil
}

type CT_RangePr struct {

	// Source Data Set Beginning Range
	AutoStartAttr *bool

	// Source Data Ending Range
	AutoEndAttr *bool

	// Group By
	GroupByAttr ST_GroupBy

	// Numeric Grouping Start Value
	StartNumAttr *float64

	// Numeric Grouping End Value
	EndNumAttr *float64

	// Date Grouping Start Value
	StartDateAttr *_gb.Time

	// Date Grouping End Value
	EndDateAttr *_gb.Time

	// Grouping Interval
	GroupIntervalAttr *float64
}

func (_bcaga *CT_RangeSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcaga.I1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0031"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.I1Attr)})
	}
	if _bcaga.I2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0032"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.I2Attr)})
	}
	if _bcaga.I3Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0033"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.I3Attr)})
	}
	if _bcaga.I4Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0034"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.I4Attr)})
	}
	if _bcaga.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.RefAttr)})
	}
	if _bcaga.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.NameAttr)})
	}
	if _bcaga.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.SheetAttr)})
	}
	if _bcaga.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bcaga.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddefg ST_SourceType) ValidateWithPath(path string) error {
	switch _ddefg {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddefg))
	}
	return nil
}

const (
	ST_ParameterTypeUnset  ST_ParameterType = 0
	ST_ParameterTypePrompt ST_ParameterType = 1
	ST_ParameterTypeValue  ST_ParameterType = 2
	ST_ParameterTypeCell   ST_ParameterType = 3
)

type CT_WorkbookProtection struct {

	// Legacy Workbook Password
	WorkbookPasswordAttr *string

	// Workbook Password Character Set
	WorkbookPasswordCharacterSetAttr *string

	// Legacy Revisions Password
	RevisionsPasswordAttr *string

	// Revisions Password Character Set
	RevisionsPasswordCharacterSetAttr *string

	// Lock Structure
	LockStructureAttr *bool

	// Lock Windows
	LockWindowsAttr *bool

	// Lock Revisions
	LockRevisionAttr *bool

	// Cryptographic Algorithm Name
	RevisionsAlgorithmNameAttr *string

	// Password Hash Value
	RevisionsHashValueAttr *string

	// Salt Value for Password Verifier
	RevisionsSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	RevisionsSpinCountAttr *uint32

	// Cryptographic Algorithm Name
	WorkbookAlgorithmNameAttr *string

	// Password Hash Value
	WorkbookHashValueAttr *string

	// Salt Value for Password Verifier
	WorkbookSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	WorkbookSpinCountAttr *uint32
}

func (_gffdc ST_PhoneticType) ValidateWithPath(path string) error {
	switch _gffdc {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gffdc))
	}
	return nil
}
func NewCT_MetadataStrings() *CT_MetadataStrings { _gebbb := &CT_MetadataStrings{}; return _gebbb }
func (_fgace *CT_PivotFilters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfdfc := range start.Attr {
		if _bfdfc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbbeae, _fcegf := _e.ParseUint(_bfdfc.Value, 10, 32)
			if _fcegf != nil {
				return _fcegf
			}
			_fccfb := uint32(_dbbeae)
			_fgace.CountAttr = &_fccfb
			continue
		}
	}
_gecdb:
	for {
		_dcagc, _fecgb := d.Token()
		if _fecgb != nil {
			return _fecgb
		}
		switch _gebcee := _dcagc.(type) {
		case _b.StartElement:
			switch _gebcee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_efecb := NewCT_PivotFilter()
				if _fafed := d.DecodeElement(_efecb, &_gebcee); _fafed != nil {
					return _fafed
				}
				_fgace.Filter = append(_fgace.Filter, _efecb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076o\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _gebcee.Name)
				if _cdfde := d.Skip(); _cdfde != nil {
					return _cdfde
				}
			}
		case _b.EndElement:
			break _gecdb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextField and its children
func (_caffg *CT_TextField) Validate() error {
	return _caffg.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}
func (_adcgb *CT_ExternalBook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _adcgb.IdAttr)})
	e.EncodeToken(start)
	if _adcgb.SheetNames != nil {
		_bbgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_adcgb.SheetNames, _bbgc)
	}
	if _adcgb.DefinedNames != nil {
		_fccfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_adcgb.DefinedNames, _fccfa)
	}
	if _adcgb.SheetDataSet != nil {
		_dbdbab := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}}
		e.EncodeElement(_adcgb.SheetDataSet, _dbdbab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NumFmt and its children
func (_agebb *CT_NumFmt) Validate() error {
	return _agebb.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt")
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_fceac *CT_ExtensionList) ValidateWithPath(path string) error {
	for _gebbg, _efba := range _fceac.Ext {
		if _bcbad := _efba.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _gebbg)); _bcbad != nil {
			return _bcbad
		}
	}
	return nil
}
func (_edgbg *CT_MdxKPI) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edgbg.PAttr = ST_MdxKPIProperty(1)
	for _, _afbec := range start.Attr {
		if _afbec.Name.Local == "\u006e" {
			_gccgb, _eebbe := _e.ParseUint(_afbec.Value, 10, 32)
			if _eebbe != nil {
				return _eebbe
			}
			_edgbg.NAttr = uint32(_gccgb)
			continue
		}
		if _afbec.Name.Local == "\u006e\u0070" {
			_cfdec, _fbfgb := _e.ParseUint(_afbec.Value, 10, 32)
			if _fbfgb != nil {
				return _fbfgb
			}
			_edgbg.NpAttr = uint32(_cfdec)
			continue
		}
		if _afbec.Name.Local == "\u0070" {
			_edgbg.PAttr.UnmarshalXMLAttr(_afbec)
			continue
		}
	}
	for {
		_cccde, _bbdbg := d.Token()
		if _bbdbg != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0064\u0078K\u0050\u0049\u003a\u0020\u0025\u0073", _bbdbg)
		}
		if _cebabe, _ggdab := _cccde.(_b.EndElement); _ggdab && _cebabe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GroupMembers and its children
func (_feadag *CT_GroupMembers) Validate() error {
	return _feadag.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_IgnoredErrors and its children, prefixing error messages with path
func (_fgcg *CT_IgnoredErrors) ValidateWithPath(path string) error {
	for _dfefb, _cfcca := range _fgcg.IgnoredError {
		if _gacef := _cfcca.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0049gn\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u005b\u0025\u0064\u005d", path, _dfefb)); _gacef != nil {
			return _gacef
		}
	}
	if _fgcg.ExtLst != nil {
		if _ecga := _fgcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecga != nil {
			return _ecga
		}
	}
	return nil
}
func (_ccgdg *CT_rowItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccgdg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ccgdg.CountAttr)})
	}
	e.EncodeToken(start)
	_acfgec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _ddebfcf := range _ccgdg.I {
		e.EncodeElement(_ddebfcf, _acfgec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotField and its children
func (_ebfbd *CT_PivotField) Validate() error {
	return _ebfbd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064")
}
func (_fcgbf *ST_PivotAreaType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcgbf = 0
	case "\u006e\u006f\u006e\u0065":
		*_fcgbf = 1
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_fcgbf = 2
	case "\u0064\u0061\u0074\u0061":
		*_fcgbf = 3
	case "\u0061\u006c\u006c":
		*_fcgbf = 4
	case "\u006f\u0072\u0069\u0067\u0069\u006e":
		*_fcgbf = 5
	case "\u0062\u0075\u0074\u0074\u006f\u006e":
		*_fcgbf = 6
	case "\u0074\u006f\u0070\u0045\u006e\u0064":
		*_fcgbf = 7
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_fcgbf = 8
	}
	return nil
}
func NewCT_Top10() *CT_Top10 { _agggg := &CT_Top10{}; return _agggg }
func (_fgedf *CT_SingleXmlCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgedf.XmlCellPr = NewCT_XmlCellPr()
	for _, _fggabf := range start.Attr {
		if _fggabf.Name.Local == "\u0069\u0064" {
			_eeaeaa, _ddbacd := _e.ParseUint(_fggabf.Value, 10, 32)
			if _ddbacd != nil {
				return _ddbacd
			}
			_fgedf.IdAttr = uint32(_eeaeaa)
			continue
		}
		if _fggabf.Name.Local == "\u0072" {
			_cfgeg, _afcgd := _fggabf.Value, error(nil)
			if _afcgd != nil {
				return _afcgd
			}
			_fgedf.RAttr = _cfgeg
			continue
		}
		if _fggabf.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_afgcdf, _adbab := _e.ParseUint(_fggabf.Value, 10, 32)
			if _adbab != nil {
				return _adbab
			}
			_fgedf.ConnectionIdAttr = uint32(_afgcdf)
			continue
		}
	}
_ffbeaf:
	for {
		_eaefa, _acccf := d.Token()
		if _acccf != nil {
			return _acccf
		}
		switch _gbffb := _eaefa.(type) {
		case _b.StartElement:
			switch _gbffb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}:
				if _eaega := d.DecodeElement(_fgedf.XmlCellPr, &_gbffb); _eaega != nil {
					return _eaega
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgedf.ExtLst = NewCT_ExtensionList()
				if _ebabd := d.DecodeElement(_fgedf.ExtLst, &_gbffb); _ebabd != nil {
					return _ebabd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0020\u0025v", _gbffb.Name)
				if _bafgb := d.Skip(); _bafgb != nil {
					return _bafgb
				}
			}
		case _b.EndElement:
			break _ffbeaf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TableParts() *CT_TableParts { _afddc := &CT_TableParts{}; return _afddc }
func (_egccbc *CT_PrintOptions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfeffg := range start.Attr {
		if _cfeffg.Name.Local == "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064" {
			_ggfbc, _eecab := _e.ParseBool(_cfeffg.Value)
			if _eecab != nil {
				return _eecab
			}
			_egccbc.HorizontalCenteredAttr = &_ggfbc
			continue
		}
		if _cfeffg.Name.Local == "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064" {
			_aebae, _aeeec := _e.ParseBool(_cfeffg.Value)
			if _aeeec != nil {
				return _aeeec
			}
			_egccbc.VerticalCenteredAttr = &_aebae
			continue
		}
		if _cfeffg.Name.Local == "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073" {
			_dgabfg, _adbdgc := _e.ParseBool(_cfeffg.Value)
			if _adbdgc != nil {
				return _adbdgc
			}
			_egccbc.HeadingsAttr = &_dgabfg
			continue
		}
		if _cfeffg.Name.Local == "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s" {
			_egcbd, _gfagd := _e.ParseBool(_cfeffg.Value)
			if _gfagd != nil {
				return _gfagd
			}
			_egccbc.GridLinesAttr = &_egcbd
			continue
		}
		if _cfeffg.Name.Local == "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074" {
			_dgbge, _adddf := _e.ParseBool(_cfeffg.Value)
			if _adddf != nil {
				return _adddf
			}
			_egccbc.GridLinesSetAttr = &_dgbge
			continue
		}
	}
	for {
		_gafccg, _eddfd := d.Token()
		if _eddfd != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u004fp\u0074\u0069\u006fn\u0073:\u0020\u0025\u0073", _eddfd)
		}
		if _gegca, _efade := _gafccg.(_b.EndElement); _efade && _gegca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgfb *CT_Stylesheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fgfb.NumFmts != nil {
		_badfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e\u0075\u006d\u0046\u006d\u0074\u0073"}}
		e.EncodeElement(_fgfb.NumFmts, _badfc)
	}
	if _fgfb.Fonts != nil {
		_cegdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u006e\u0074\u0073"}}
		e.EncodeElement(_fgfb.Fonts, _cegdd)
	}
	if _fgfb.Fills != nil {
		_gafge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u006c\u0073"}}
		e.EncodeElement(_fgfb.Fills, _gafge)
	}
	if _fgfb.Borders != nil {
		_gfdge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0073"}}
		e.EncodeElement(_fgfb.Borders, _gfdge)
	}
	if _fgfb.CellStyleXfs != nil {
		_ggcecc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}}
		e.EncodeElement(_fgfb.CellStyleXfs, _ggcecc)
	}
	if _fgfb.CellXfs != nil {
		_dcffba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0058\u0066\u0073"}}
		e.EncodeElement(_fgfb.CellXfs, _dcffba)
	}
	if _fgfb.CellStyles != nil {
		_gddeef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_fgfb.CellStyles, _gddeef)
	}
	if _fgfb.Dxfs != nil {
		_ebddb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0064\u0078\u0066\u0073"}}
		e.EncodeElement(_fgfb.Dxfs, _ebddb)
	}
	if _fgfb.TableStyles != nil {
		_ffcdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_fgfb.TableStyles, _ffcdc)
	}
	if _fgfb.Colors != nil {
		_eddbab := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u006f\u0072s"}}
		e.EncodeElement(_fgfb.Colors, _eddbab)
	}
	if _fgfb.ExtLst != nil {
		_gddcc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fgfb.ExtLst, _gddcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efbdc ST_SortType) String() string {
	switch _efbdc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case 4:
		return "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case 5:
		return "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case 6:
		return "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case 7:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return ""
}

// Validate validates the EG_ExtensionList and its children
func (_dcgfdd *EG_ExtensionList) Validate() error {
	return _dcgfdd.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_df *AG_AutoFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ge := range start.Attr {
		if _ge.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_ab, _cd := _e.ParseUint(_ge.Value, 10, 32)
			if _cd != nil {
				return _cd
			}
			_de := uint32(_ab)
			_df.AutoFormatIdAttr = &_de
			continue
		}
		if _ge.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ad, _gg := _e.ParseBool(_ge.Value)
			if _gg != nil {
				return _gg
			}
			_df.ApplyNumberFormatsAttr = &_ad
			continue
		}
		if _ge.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bb, _aa := _e.ParseBool(_ge.Value)
			if _aa != nil {
				return _aa
			}
			_df.ApplyBorderFormatsAttr = &_bb
			continue
		}
		if _ge.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bg, _fe := _e.ParseBool(_ge.Value)
			if _fe != nil {
				return _fe
			}
			_df.ApplyFontFormatsAttr = &_bg
			continue
		}
		if _ge.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dfb, _db := _e.ParseBool(_ge.Value)
			if _db != nil {
				return _db
			}
			_df.ApplyPatternFormatsAttr = &_dfb
			continue
		}
		if _ge.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cg, _ef := _e.ParseBool(_ge.Value)
			if _ef != nil {
				return _ef
			}
			_df.ApplyAlignmentFormatsAttr = &_cg
			continue
		}
		if _ge.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bf, _dfc := _e.ParseBool(_ge.Value)
			if _dfc != nil {
				return _dfc
			}
			_df.ApplyWidthHeightFormatsAttr = &_bf
			continue
		}
	}
	for {
		_fc, _cc := d.Token()
		if _cc != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u003a\u0020\u0025s", _cc)
		}
		if _bd, _deb := _fc.(_b.EndElement); _deb && _bd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_QueryCache and its children, prefixing error messages with path
func (_edgbc *CT_QueryCache) ValidateWithPath(path string) error {
	for _fdadf, _bgdaf := range _edgbc.Query {
		if _ceedd := _bgdaf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fQ\u0075\u0065\u0072\u0079\u005b\u0025\u0064\u005d", path, _fdadf)); _ceedd != nil {
			return _ceedd
		}
	}
	return nil
}

// Validate validates the CT_RevisionMove and its children
func (_abgcb *CT_RevisionMove) Validate() error {
	return _abgcb.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065")
}
func (_egaga *Chartsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074"
	return _egaga.CT_Chartsheet.MarshalXML(e, start)
}

type CT_RElt struct {

	// Run Properties
	RPr *CT_RPrElt

	// Text
	T string
}

func (_eedcg *ST_UnderlineValues) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ceeaf, _dffdc := d.Token()
	if _dffdc != nil {
		return _dffdc
	}
	if _efgdg, _fafca := _ceeaf.(_b.EndElement); _fafca && _efgdg.Name == start.Name {
		*_eedcg = 1
		return nil
	}
	if _eeede, _edcbge := _ceeaf.(_b.CharData); !_edcbge {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceeaf)
	} else {
		switch string(_eeede) {
		case "":
			*_eedcg = 0
		case "\u0073\u0069\u006e\u0067\u006c\u0065":
			*_eedcg = 1
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_eedcg = 2
		case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_eedcg = 3
		case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_eedcg = 4
		case "\u006e\u006f\u006e\u0065":
			*_eedcg = 5
		}
	}
	_ceeaf, _dffdc = d.Token()
	if _dffdc != nil {
		return _dffdc
	}
	if _fdcdb, _gcadc := _ceeaf.(_b.EndElement); _gcadc && _fdcdb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceeaf)
}
func (_eeaff *CT_QueryTableRefresh) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeaff.QueryTableFields = NewCT_QueryTableFields()
	for _, _geegd := range start.Attr {
		if _geegd.Name.Local == "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074" {
			_acgca, _eabfc := _e.ParseBool(_geegd.Value)
			if _eabfc != nil {
				return _eabfc
			}
			_eeaff.PreserveSortFilterLayoutAttr = &_acgca
			continue
		}
		if _geegd.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064" {
			_cbacb, _agcce := _e.ParseBool(_geegd.Value)
			if _agcce != nil {
				return _agcce
			}
			_eeaff.FieldIdWrappedAttr = &_cbacb
			continue
		}
		if _geegd.Name.Local == "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068" {
			_cebcd, _gfbaf := _e.ParseBool(_geegd.Value)
			if _gfbaf != nil {
				return _gfbaf
			}
			_eeaff.HeadersInLastRefreshAttr = &_cebcd
			continue
		}
		if _geegd.Name.Local == "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gafca, _cfefad := _e.ParseUint(_geegd.Value, 10, 8)
			if _cfefad != nil {
				return _cfefad
			}
			_dgbgd := uint8(_gafca)
			_eeaff.MinimumVersionAttr = &_dgbgd
			continue
		}
		if _geegd.Name.Local == "\u006e\u0065\u0078\u0074\u0049\u0064" {
			_dgbeg, _ggccdf := _e.ParseUint(_geegd.Value, 10, 32)
			if _ggccdf != nil {
				return _ggccdf
			}
			_eabcb := uint32(_dgbeg)
			_eeaff.NextIdAttr = &_eabcb
			continue
		}
		if _geegd.Name.Local == "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074" {
			_bfagg, _cabgb := _e.ParseUint(_geegd.Value, 10, 32)
			if _cabgb != nil {
				return _cabgb
			}
			_fgdef := uint32(_bfagg)
			_eeaff.UnboundColumnsLeftAttr = &_fgdef
			continue
		}
		if _geegd.Name.Local == "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074" {
			_acfbe, _gabca := _e.ParseUint(_geegd.Value, 10, 32)
			if _gabca != nil {
				return _gabca
			}
			_gfcdg := uint32(_acfbe)
			_eeaff.UnboundColumnsRightAttr = &_gfcdg
			continue
		}
	}
_dagad:
	for {
		_debaa, _efeda := d.Token()
		if _efeda != nil {
			return _efeda
		}
		switch _aefac := _debaa.(type) {
		case _b.StartElement:
			switch _aefac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _dfbdce := d.DecodeElement(_eeaff.QueryTableFields, &_aefac); _dfbdce != nil {
					return _dfbdce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_eeaff.QueryTableDeletedFields = NewCT_QueryTableDeletedFields()
				if _cgebd := d.DecodeElement(_eeaff.QueryTableDeletedFields, &_aefac); _cgebd != nil {
					return _cgebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_eeaff.SortState = NewCT_SortState()
				if _dgbgc := d.DecodeElement(_eeaff.SortState, &_aefac); _dgbgc != nil {
					return _dgbgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eeaff.ExtLst = NewCT_ExtensionList()
				if _bgddf := d.DecodeElement(_eeaff.ExtLst, &_aefac); _bgddf != nil {
					return _bgddf
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068\u0020\u0025\u0076", _aefac.Name)
				if _cffdg := d.Skip(); _cffdg != nil {
					return _cffdg
				}
			}
		case _b.EndElement:
			break _dagad
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FontSize and its children
func (_bcbeb *CT_FontSize) Validate() error {
	return _bcbeb.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065")
}

// ValidateWithPath validates the CT_UnderlineProperty and its children, prefixing error messages with path
func (_cbabb *CT_UnderlineProperty) ValidateWithPath(path string) error {
	if _bffagc := _cbabb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bffagc != nil {
		return _bffagc
	}
	return nil
}
func NewCT_Extension() *CT_Extension { _fdcfg := &CT_Extension{}; return _fdcfg }

// Validate validates the CT_ServerFormats and its children
func (_ddfba *CT_ServerFormats) Validate() error {
	return _ddfba.ValidateWithPath("\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

type ST_RevisionAction byte
type CT_PhoneticPr struct {

	// Font Id
	FontIdAttr uint32

	// Character Type
	TypeAttr ST_PhoneticType

	// Alignment
	AlignmentAttr ST_PhoneticAlignment
}

func (_ggecbd ST_TextVAlign) String() string {
	switch _ggecbd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_dfbdg *CT_SingleXmlCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dfbdg.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", _dfbdg.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dfbdg.ConnectionIdAttr)})
	e.EncodeToken(start)
	_ccgffa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"}}
	e.EncodeElement(_dfbdg.XmlCellPr, _ccgffa)
	if _dfbdg.ExtLst != nil {
		_bfcae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfbdg.ExtLst, _bfcae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RowHierarchiesUsage and its children
func (_bdabe *CT_RowHierarchiesUsage) Validate() error {
	return _bdabe.ValidateWithPath("\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}
func (_bedfc ST_CredMethod) Validate() error { return _bedfc.ValidateWithPath("") }
func NewCT_CustomFilter() *CT_CustomFilter   { _eddb := &CT_CustomFilter{}; return _eddb }

const (
	ST_MdxFunctionTypeUnset ST_MdxFunctionType = 0
	ST_MdxFunctionTypeM     ST_MdxFunctionType = 1
	ST_MdxFunctionTypeV     ST_MdxFunctionType = 2
	ST_MdxFunctionTypeS     ST_MdxFunctionType = 3
	ST_MdxFunctionTypeC     ST_MdxFunctionType = 4
	ST_MdxFunctionTypeR     ST_MdxFunctionType = 5
	ST_MdxFunctionTypeP     ST_MdxFunctionType = 6
	ST_MdxFunctionTypeK     ST_MdxFunctionType = 7
)

func (_gbdad *CT_SheetCalcPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbdad.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbdad.FullCalcOnLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dafgdd *CT_Pages) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dafgdd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dafgdd.CountAttr)})
	}
	e.EncodeToken(start)
	_ddgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u0067\u0065"}}
	for _, _cddag := range _dafgdd.Page {
		e.EncodeElement(_cddag, _ddgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_BooleanProperty() *CT_BooleanProperty { _ebbe := &CT_BooleanProperty{}; return _ebbe }
func (_edddfd ST_Type) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edddfd.String(), start)
}

const (
	ST_PatternTypeUnset           ST_PatternType = 0
	ST_PatternTypeNone            ST_PatternType = 1
	ST_PatternTypeSolid           ST_PatternType = 2
	ST_PatternTypeMediumGray      ST_PatternType = 3
	ST_PatternTypeDarkGray        ST_PatternType = 4
	ST_PatternTypeLightGray       ST_PatternType = 5
	ST_PatternTypeDarkHorizontal  ST_PatternType = 6
	ST_PatternTypeDarkVertical    ST_PatternType = 7
	ST_PatternTypeDarkDown        ST_PatternType = 8
	ST_PatternTypeDarkUp          ST_PatternType = 9
	ST_PatternTypeDarkGrid        ST_PatternType = 10
	ST_PatternTypeDarkTrellis     ST_PatternType = 11
	ST_PatternTypeLightHorizontal ST_PatternType = 12
	ST_PatternTypeLightVertical   ST_PatternType = 13
	ST_PatternTypeLightDown       ST_PatternType = 14
	ST_PatternTypeLightUp         ST_PatternType = 15
	ST_PatternTypeLightGrid       ST_PatternType = 16
	ST_PatternTypeLightTrellis    ST_PatternType = 17
	ST_PatternTypeGray125         ST_PatternType = 18
	ST_PatternTypeGray0625        ST_PatternType = 19
)

// Validate validates the MapInfo and its children
func (_bedef *MapInfo) Validate() error {
	return _bedef.ValidateWithPath("\u004da\u0070\u0049\u006e\u0066\u006f")
}
func (_bgccb ST_OleUpdate) String() string {
	switch _bgccb {
	case 0:
		return ""
	case 1:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case 2:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return ""
}

type ST_PivotFilterType byte

func (_aeegba ST_HorizontalAlignment) ValidateWithPath(path string) error {
	switch _aeegba {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aeegba))
	}
	return nil
}
func (_abcg *CT_PivotCacheRecords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daedg := range start.Attr {
		if _daedg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cebfb, _efged := _e.ParseUint(_daedg.Value, 10, 32)
			if _efged != nil {
				return _efged
			}
			_caccdd := uint32(_cebfb)
			_abcg.CountAttr = &_caccdd
			continue
		}
	}
_febfd:
	for {
		_bdagb, _edfecd := d.Token()
		if _edfecd != nil {
			return _edfecd
		}
		switch _dcgfg := _bdagb.(type) {
		case _b.StartElement:
			switch _dcgfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_aacae := NewCT_Record()
				if _gcgfa := d.DecodeElement(_aacae, &_dcgfg); _gcgfa != nil {
					return _gcgfa
				}
				_abcg.R = append(_abcg.R, _aacae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abcg.ExtLst = NewCT_ExtensionList()
				if _bebce := d.DecodeElement(_abcg.ExtLst, &_dcgfg); _bebce != nil {
					return _bebce
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _dcgfg.Name)
				if _gfgcf := d.Skip(); _gfgcf != nil {
					return _gfgcf
				}
			}
		case _b.EndElement:
			break _febfd
		case _b.CharData:
		}
	}
	return nil
}
func (_bgbaef ST_TimePeriod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgbaef.String(), start)
}

// ValidateWithPath validates the CT_MdxSet and its children, prefixing error messages with path
func (_ffdfa *CT_MdxSet) ValidateWithPath(path string) error {
	if _dfgab := _ffdfa.OAttr.ValidateWithPath(path + "\u002f\u004f\u0041\u0074\u0074\u0072"); _dfgab != nil {
		return _dfgab
	}
	for _egccb, _aedgf := range _ffdfa.N {
		if _dbaac := _aedgf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _egccb)); _dbaac != nil {
			return _dbaac
		}
	}
	return nil
}
func (_bggfab *CT_SheetCalcPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdaadf := range start.Attr {
		if _bdaadf.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_efaadd, _cafgb := _e.ParseBool(_bdaadf.Value)
			if _cafgb != nil {
				return _cafgb
			}
			_bggfab.FullCalcOnLoadAttr = &_efaadd
			continue
		}
	}
	for {
		_fabdf, _eecgb := d.Token()
		if _eecgb != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072:\u0020\u0025\u0073", _eecgb)
		}
		if _gbcagc, _ggcab := _fabdf.(_b.EndElement); _ggcab && _gbcagc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbcfgf *ST_TextHAlign) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddadd, _bbbfda := d.Token()
	if _bbbfda != nil {
		return _bbbfda
	}
	if _cgeda, _eefdbd := _ddadd.(_b.EndElement); _eefdbd && _cgeda.Name == start.Name {
		*_fbcfgf = 1
		return nil
	}
	if _cfbdg, _fgbeg := _ddadd.(_b.CharData); !_fgbeg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddadd)
	} else {
		switch string(_cfbdg) {
		case "":
			*_fbcfgf = 0
		case "\u006c\u0065\u0066\u0074":
			*_fbcfgf = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_fbcfgf = 2
		case "\u0072\u0069\u0067h\u0074":
			*_fbcfgf = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_fbcfgf = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_fbcfgf = 5
		}
	}
	_ddadd, _bbbfda = d.Token()
	if _bbbfda != nil {
		return _bbbfda
	}
	if _gfafa, _eecff := _ddadd.(_b.EndElement); _eecff && _gfafa.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddadd)
}
func NewCT_PivotField() *CT_PivotField { _dcgagc := &CT_PivotField{}; return _dcgagc }

// ValidateWithPath validates the CT_DataFields and its children, prefixing error messages with path
func (_dded *CT_DataFields) ValidateWithPath(path string) error {
	for _fgad, _fced := range _dded.DataField {
		if _bcaf := _fced.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0044\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _fgad)); _bcaf != nil {
			return _bcaf
		}
	}
	return nil
}
func (_cbd *CT_CalcCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fddf := range start.Attr {
		if _fddf.Name.Local == "\u0072" {
			_ddef, _bfcbg := _fddf.Value, error(nil)
			if _bfcbg != nil {
				return _bfcbg
			}
			_cbd.RAttr = &_ddef
			continue
		}
		if _fddf.Name.Local == "\u0072\u0065\u0066" {
			_aba, _ecdd := _fddf.Value, error(nil)
			if _ecdd != nil {
				return _ecdd
			}
			_cbd.RefAttr = &_aba
			continue
		}
		if _fddf.Name.Local == "\u0069" {
			_dgdd, _gfba := _e.ParseInt(_fddf.Value, 10, 32)
			if _gfba != nil {
				return _gfba
			}
			_ebeg := int32(_dgdd)
			_cbd.IAttr = &_ebeg
			continue
		}
		if _fddf.Name.Local == "\u0073" {
			_gdda, _cded := _e.ParseBool(_fddf.Value)
			if _cded != nil {
				return _cded
			}
			_cbd.SAttr = &_gdda
			continue
		}
		if _fddf.Name.Local == "\u006c" {
			_cfcd, _dff := _e.ParseBool(_fddf.Value)
			if _dff != nil {
				return _dff
			}
			_cbd.LAttr = &_cfcd
			continue
		}
		if _fddf.Name.Local == "\u0074" {
			_abdf, _afca := _e.ParseBool(_fddf.Value)
			if _afca != nil {
				return _afca
			}
			_cbd.TAttr = &_abdf
			continue
		}
		if _fddf.Name.Local == "\u0061" {
			_fgdeg, _ggea := _e.ParseBool(_fddf.Value)
			if _ggea != nil {
				return _ggea
			}
			_cbd.AAttr = &_fgdeg
			continue
		}
	}
	for {
		_cag, _dgbf := d.Token()
		if _dgbf != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _dgbf)
		}
		if _ebcf, _fdg := _cag.(_b.EndElement); _fdg && _ebcf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionMove and its children, prefixing error messages with path
func (_affcd *CT_RevisionMove) ValidateWithPath(path string) error {
	for _dgfce, _gbfae := range _affcd.Undo {
		if _dcfgd := _gbfae.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _dgfce)); _dcfgd != nil {
			return _dcfgd
		}
	}
	for _bdgce, _eecdb := range _affcd.Rcc {
		if _dedbc := _eecdb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _bdgce)); _dedbc != nil {
			return _dedbc
		}
	}
	for _ebefd, _cbacc := range _affcd.Rfmt {
		if _fadcfb := _cbacc.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _ebefd)); _fadcfb != nil {
			return _fadcfb
		}
	}
	return nil
}

// Validate validates the CT_MergeCells and its children
func (_baffag *CT_MergeCells) Validate() error {
	return _baffag.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073")
}
func (_gacfd ST_DataValidationOperator) String() string {
	switch _gacfd {
	case 0:
		return ""
	case 1:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 2:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 6:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 8:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return ""
}
func NewCT_Metadata() *CT_Metadata { _eebce := &CT_Metadata{}; return _eebce }
func (_ecdgb ST_PhoneticType) String() string {
	switch _ecdgb {
	case 0:
		return ""
	case 1:
		return "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 2:
		return "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 3:
		return "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 4:
		return "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_FontSize and its children, prefixing error messages with path
func (_dbebb *CT_FontSize) ValidateWithPath(path string) error { return nil }

type CT_FutureMetadataBlock struct {

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}
type CT_DdeValue struct {

	// DDE Value Type
	TAttr ST_DdeValueType

	// DDE Link Value
	Val string
}

func NewEG_ExtensionList() *EG_ExtensionList { _ggggb := &EG_ExtensionList{}; return _ggggb }
func (_adcfb *CT_ProtectedRanges) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fecae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}}
	for _, _cbcgd := range _adcfb.ProtectedRange {
		e.EncodeElement(_cbcgd, _fecae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffaefd ST_PhoneticType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffaefd.String(), start)
}
func (_bdbaaf ST_DvAspect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bdbaaf.String(), start)
}
func (_cgea *CT_Reviewed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cgea.RIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_feadd ST_Scope) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adeafg := _b.Attr{}
	_adeafg.Name = name
	switch _feadd {
	case ST_ScopeUnset:
		_adeafg.Value = ""
	case ST_ScopeSelection:
		_adeafg.Value = "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case ST_ScopeData:
		_adeafg.Value = "\u0064\u0061\u0074\u0061"
	case ST_ScopeField:
		_adeafg.Value = "\u0066\u0069\u0065l\u0064"
	}
	return _adeafg, nil
}
func (_fgabg *CT_TableParts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgced := range start.Attr {
		if _dgced.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbffa, _cacbb := _e.ParseUint(_dgced.Value, 10, 32)
			if _cacbb != nil {
				return _cacbb
			}
			_fcabbd := uint32(_gbffa)
			_fgabg.CountAttr = &_fcabbd
			continue
		}
	}
_egdge:
	for {
		_edgdgf, _dfbbef := d.Token()
		if _dfbbef != nil {
			return _dfbbef
		}
		switch _befbc := _edgdgf.(type) {
		case _b.StartElement:
			switch _befbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}:
				_cfgce := NewCT_TablePart()
				if _fcegc := d.DecodeElement(_cfgce, &_befbc); _fcegc != nil {
					return _fcegc
				}
				_fgabg.TablePart = append(_fgabg.TablePart, _cfgce)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073 \u0025\u0076", _befbc.Name)
				if _becc := d.Skip(); _becc != nil {
					return _becc
				}
			}
		case _b.EndElement:
			break _egdge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheFields and its children, prefixing error messages with path
func (_ffgd *CT_CacheFields) ValidateWithPath(path string) error {
	for _dea, _dcb := range _ffgd.CacheField {
		if _bbc := _dcb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _dea)); _bbc != nil {
			return _bbc
		}
	}
	return nil
}

type CT_DdeItems struct {

	// DDE Item definition
	DdeItem []*CT_DdeItem
}

// ValidateWithPath validates the CT_DataBar and its children, prefixing error messages with path
func (_cfaff *CT_DataBar) ValidateWithPath(path string) error {
	for _fbfeb, _cbbc := range _cfaff.Cfvo {
		if _adcdb := _cbbc.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _fbfeb)); _adcdb != nil {
			return _adcdb
		}
	}
	if _gbeag := _cfaff.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _gbeag != nil {
		return _gbeag
	}
	return nil
}
func (_bfbfb ST_SourceType) Validate() error { return _bfbfb.ValidateWithPath("") }

// ValidateWithPath validates the CT_TablePart and its children, prefixing error messages with path
func (_fagfef *CT_TablePart) ValidateWithPath(path string) error { return nil }
func (_addac ST_UnderlineValues) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_addac.String(), start)
}
func (_gfacd *CT_GroupLevels) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfacd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gfacd.CountAttr)})
	}
	e.EncodeToken(start)
	_fbbag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}}
	for _, _defeg := range _gfacd.GroupLevel {
		e.EncodeElement(_defeg, _fbbag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_FormulaExpressionUnset        ST_FormulaExpression = 0
	ST_FormulaExpressionRef          ST_FormulaExpression = 1
	ST_FormulaExpressionRefError     ST_FormulaExpression = 2
	ST_FormulaExpressionArea         ST_FormulaExpression = 3
	ST_FormulaExpressionAreaError    ST_FormulaExpression = 4
	ST_FormulaExpressionComputedArea ST_FormulaExpression = 5
)

// Validate validates the CT_MeasureDimensionMap and its children
func (_ffgaf *CT_MeasureDimensionMap) Validate() error {
	return _ffgaf.ValidateWithPath("\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070")
}
func ParseSliceST_Sqref(s string) (ST_Sqref, error) { return ST_Sqref(_gf.Fields(s)), nil }
func (_eedeeb ST_CfType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eedeeb.String(), start)
}
func NewCT_Location() *CT_Location { _acdde := &CT_Location{}; return _acdde }
func (_fgefca ST_PrintError) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgefca.String(), start)
}

type CT_Colors struct {

	// Color Indexes
	IndexedColors *CT_IndexedColors

	// MRU Colors
	MruColors *CT_MRUColors
}

func (_ggbcb ST_VolValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfcdeb := _b.Attr{}
	_dfcdeb.Name = name
	switch _ggbcb {
	case ST_VolValueTypeUnset:
		_dfcdeb.Value = ""
	case ST_VolValueTypeB:
		_dfcdeb.Value = "\u0062"
	case ST_VolValueTypeN:
		_dfcdeb.Value = "\u006e"
	case ST_VolValueTypeE:
		_dfcdeb.Value = "\u0065"
	case ST_VolValueTypeS:
		_dfcdeb.Value = "\u0073"
	}
	return _dfcdeb, nil
}
func (_ecgbbb *CT_VolTopicRef) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", _ecgbbb.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0076", _ecgbbb.SAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Table and its children, prefixing error messages with path
func (_eabfd *Table) ValidateWithPath(path string) error {
	if _acgcb := _eabfd.CT_Table.ValidateWithPath(path); _acgcb != nil {
		return _acgcb
	}
	return nil
}
func (_decda *Worksheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_decda.CT_Worksheet = *NewCT_Worksheet()
_gcbfc:
	for {
		_bfbgcd, _ddeaa := d.Token()
		if _ddeaa != nil {
			return _ddeaa
		}
		switch _bafbg := _bfbgcd.(type) {
		case _b.StartElement:
			switch _bafbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_decda.SheetPr = NewCT_SheetPr()
				if _bbeeb := d.DecodeElement(_decda.SheetPr, &_bafbg); _bbeeb != nil {
					return _bbeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_decda.Dimension = NewCT_SheetDimension()
				if _agacg := d.DecodeElement(_decda.Dimension, &_bafbg); _agacg != nil {
					return _agacg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_decda.SheetViews = NewCT_SheetViews()
				if _dgaadb := d.DecodeElement(_decda.SheetViews, &_bafbg); _dgaadb != nil {
					return _dgaadb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_decda.SheetFormatPr = NewCT_SheetFormatPr()
				if _cbdbcg := d.DecodeElement(_decda.SheetFormatPr, &_bafbg); _cbdbcg != nil {
					return _cbdbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_fdebe := NewCT_Cols()
				if _cbaedc := d.DecodeElement(_fdebe, &_bafbg); _cbaedc != nil {
					return _cbaedc
				}
				_decda.Cols = append(_decda.Cols, _fdebe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _ecgcf := d.DecodeElement(_decda.SheetData, &_bafbg); _ecgcf != nil {
					return _ecgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_decda.SheetCalcPr = NewCT_SheetCalcPr()
				if _cecfc := d.DecodeElement(_decda.SheetCalcPr, &_bafbg); _cecfc != nil {
					return _cecfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_decda.SheetProtection = NewCT_SheetProtection()
				if _ddcfgf := d.DecodeElement(_decda.SheetProtection, &_bafbg); _ddcfgf != nil {
					return _ddcfgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_decda.ProtectedRanges = NewCT_ProtectedRanges()
				if _dbdbbf := d.DecodeElement(_decda.ProtectedRanges, &_bafbg); _dbdbbf != nil {
					return _dbdbbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_decda.Scenarios = NewCT_Scenarios()
				if _eeccf := d.DecodeElement(_decda.Scenarios, &_bafbg); _eeccf != nil {
					return _eeccf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_decda.AutoFilter = NewCT_AutoFilter()
				if _deaac := d.DecodeElement(_decda.AutoFilter, &_bafbg); _deaac != nil {
					return _deaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_decda.SortState = NewCT_SortState()
				if _ebgdef := d.DecodeElement(_decda.SortState, &_bafbg); _ebgdef != nil {
					return _ebgdef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_decda.DataConsolidate = NewCT_DataConsolidate()
				if _cgfdgf := d.DecodeElement(_decda.DataConsolidate, &_bafbg); _cgfdgf != nil {
					return _cgfdgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_decda.CustomSheetViews = NewCT_CustomSheetViews()
				if _fbdcfe := d.DecodeElement(_decda.CustomSheetViews, &_bafbg); _fbdcfe != nil {
					return _fbdcfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_decda.MergeCells = NewCT_MergeCells()
				if _dbgga := d.DecodeElement(_decda.MergeCells, &_bafbg); _dbgga != nil {
					return _dbgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_decda.PhoneticPr = NewCT_PhoneticPr()
				if _bdbfgb := d.DecodeElement(_decda.PhoneticPr, &_bafbg); _bdbfgb != nil {
					return _bdbfgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_gddgg := NewCT_ConditionalFormatting()
				if _cggb := d.DecodeElement(_gddgg, &_bafbg); _cggb != nil {
					return _cggb
				}
				_decda.ConditionalFormatting = append(_decda.ConditionalFormatting, _gddgg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_decda.DataValidations = NewCT_DataValidations()
				if _bbdegf := d.DecodeElement(_decda.DataValidations, &_bafbg); _bbdegf != nil {
					return _bbdegf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_decda.Hyperlinks = NewCT_Hyperlinks()
				if _gafccb := d.DecodeElement(_decda.Hyperlinks, &_bafbg); _gafccb != nil {
					return _gafccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_decda.PrintOptions = NewCT_PrintOptions()
				if _gdagf := d.DecodeElement(_decda.PrintOptions, &_bafbg); _gdagf != nil {
					return _gdagf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_decda.PageMargins = NewCT_PageMargins()
				if _cdbgc := d.DecodeElement(_decda.PageMargins, &_bafbg); _cdbgc != nil {
					return _cdbgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_decda.PageSetup = NewCT_PageSetup()
				if _eabdg := d.DecodeElement(_decda.PageSetup, &_bafbg); _eabdg != nil {
					return _eabdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_decda.HeaderFooter = NewCT_HeaderFooter()
				if _ebced := d.DecodeElement(_decda.HeaderFooter, &_bafbg); _ebced != nil {
					return _ebced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_decda.RowBreaks = NewCT_PageBreak()
				if _gbdfg := d.DecodeElement(_decda.RowBreaks, &_bafbg); _gbdfg != nil {
					return _gbdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_decda.ColBreaks = NewCT_PageBreak()
				if _bcfba := d.DecodeElement(_decda.ColBreaks, &_bafbg); _bcfba != nil {
					return _bcfba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_decda.CustomProperties = NewCT_CustomProperties()
				if _gdgfb := d.DecodeElement(_decda.CustomProperties, &_bafbg); _gdgfb != nil {
					return _gdgfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_decda.CellWatches = NewCT_CellWatches()
				if _befgec := d.DecodeElement(_decda.CellWatches, &_bafbg); _befgec != nil {
					return _befgec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_decda.IgnoredErrors = NewCT_IgnoredErrors()
				if _dccdc := d.DecodeElement(_decda.IgnoredErrors, &_bafbg); _dccdc != nil {
					return _dccdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_decda.SmartTags = NewCT_SmartTags()
				if _bcfefc := d.DecodeElement(_decda.SmartTags, &_bafbg); _bcfefc != nil {
					return _bcfefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_decda.Drawing = NewCT_Drawing()
				if _fabfg := d.DecodeElement(_decda.Drawing, &_bafbg); _fabfg != nil {
					return _fabfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_decda.LegacyDrawing = NewCT_LegacyDrawing()
				if _cgfeec := d.DecodeElement(_decda.LegacyDrawing, &_bafbg); _cgfeec != nil {
					return _cgfeec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_decda.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _gdcag := d.DecodeElement(_decda.LegacyDrawingHF, &_bafbg); _gdcag != nil {
					return _gdcag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_decda.DrawingHF = NewCT_DrawingHF()
				if _bfaded := d.DecodeElement(_decda.DrawingHF, &_bafbg); _bfaded != nil {
					return _bfaded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_decda.Picture = NewCT_SheetBackgroundPicture()
				if _cdbefc := d.DecodeElement(_decda.Picture, &_bafbg); _cdbefc != nil {
					return _cdbefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_decda.OleObjects = NewCT_OleObjects()
				if _agbeb := d.DecodeElement(_decda.OleObjects, &_bafbg); _agbeb != nil {
					return _agbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_decda.Controls = NewCT_Controls()
				if _gcbef := d.DecodeElement(_decda.Controls, &_bafbg); _gcbef != nil {
					return _gcbef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_decda.WebPublishItems = NewCT_WebPublishItems()
				if _fcddba := d.DecodeElement(_decda.WebPublishItems, &_bafbg); _fcddba != nil {
					return _fcddba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_decda.TableParts = NewCT_TableParts()
				if _ebegb := d.DecodeElement(_decda.TableParts, &_bafbg); _ebegb != nil {
					return _ebegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_decda.ExtLst = NewCT_ExtensionList()
				if _fdcae := d.DecodeElement(_decda.ExtLst, &_bafbg); _fdcae != nil {
					return _fdcae
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0057\u006f\u0072\u006b\u0073\u0068e\u0065\u0074 \u0025\u0076", _bafbg.Name)
				if _ddedf := d.Skip(); _ddedf != nil {
					return _ddedf
				}
			}
		case _b.EndElement:
			break _gcbfc
		case _b.CharData:
		}
	}
	return nil
}
func ParseStdlibTime(s string) (_gb.Time, error) { return _gb.Time{}, nil }
func (_ddgge *ST_HorizontalAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dafgg, _cafbb := d.Token()
	if _cafbb != nil {
		return _cafbb
	}
	if _ddeeae, _dgcbf := _dafgg.(_b.EndElement); _dgcbf && _ddeeae.Name == start.Name {
		*_ddgge = 1
		return nil
	}
	if _cebfd, _adbgd := _dafgg.(_b.CharData); !_adbgd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dafgg)
	} else {
		switch string(_cebfd) {
		case "":
			*_ddgge = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_ddgge = 1
		case "\u006c\u0065\u0066\u0074":
			*_ddgge = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ddgge = 3
		case "\u0072\u0069\u0067h\u0074":
			*_ddgge = 4
		case "\u0066\u0069\u006c\u006c":
			*_ddgge = 5
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_ddgge = 6
		case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
			*_ddgge = 7
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_ddgge = 8
		}
	}
	_dafgg, _cafbb = d.Token()
	if _cafbb != nil {
		return _cafbb
	}
	if _dbecgc, _geeae := _dafgg.(_b.EndElement); _geeae && _dbecgc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dafgg)
}
func (_gbdb *CT_BookViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bcd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _gfc := range _gbdb.WorkbookView {
		e.EncodeElement(_gfc, _bcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DefinedName and its children, prefixing error messages with path
func (_bgfdg *CT_DefinedName) ValidateWithPath(path string) error { return nil }
func (_fgdacc *StyleSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgdacc.CT_Stylesheet = *NewCT_Stylesheet()
_ababag:
	for {
		_ceeee, _fbgdbe := d.Token()
		if _fbgdbe != nil {
			return _fbgdbe
		}
		switch _decba := _ceeee.(type) {
		case _b.StartElement:
			switch _decba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_fgdacc.NumFmts = NewCT_NumFmts()
				if _dagda := d.DecodeElement(_fgdacc.NumFmts, &_decba); _dagda != nil {
					return _dagda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_fgdacc.Fonts = NewCT_Fonts()
				if _fdddc := d.DecodeElement(_fgdacc.Fonts, &_decba); _fdddc != nil {
					return _fdddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_fgdacc.Fills = NewCT_Fills()
				if _befgad := d.DecodeElement(_fgdacc.Fills, &_decba); _befgad != nil {
					return _befgad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_fgdacc.Borders = NewCT_Borders()
				if _adcgee := d.DecodeElement(_fgdacc.Borders, &_decba); _adcgee != nil {
					return _adcgee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_fgdacc.CellStyleXfs = NewCT_CellStyleXfs()
				if _gacaa := d.DecodeElement(_fgdacc.CellStyleXfs, &_decba); _gacaa != nil {
					return _gacaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_fgdacc.CellXfs = NewCT_CellXfs()
				if _cgcea := d.DecodeElement(_fgdacc.CellXfs, &_decba); _cgcea != nil {
					return _cgcea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fgdacc.CellStyles = NewCT_CellStyles()
				if _fbafc := d.DecodeElement(_fgdacc.CellStyles, &_decba); _fbafc != nil {
					return _fbafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_fgdacc.Dxfs = NewCT_Dxfs()
				if _cdabcf := d.DecodeElement(_fgdacc.Dxfs, &_decba); _cdabcf != nil {
					return _cdabcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fgdacc.TableStyles = NewCT_TableStyles()
				if _ccgdba := d.DecodeElement(_fgdacc.TableStyles, &_decba); _ccgdba != nil {
					return _ccgdba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_fgdacc.Colors = NewCT_Colors()
				if _afdgd := d.DecodeElement(_fgdacc.Colors, &_decba); _afdgd != nil {
					return _afdgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgdacc.ExtLst = NewCT_ExtensionList()
				if _dcegb := d.DecodeElement(_fgdacc.ExtLst, &_decba); _dcegb != nil {
					return _dcegb
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0074\u0079l\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _decba.Name)
				if _dbbaef := d.Skip(); _dbbaef != nil {
					return _dbbaef
				}
			}
		case _b.EndElement:
			break _ababag
		case _b.CharData:
		}
	}
	return nil
}

type PivotCacheRecords struct{ CT_PivotCacheRecords }

// Validate validates the CT_ExternalSheetDataSet and its children
func (_cadc *CT_ExternalSheetDataSet) Validate() error {
	return _cadc.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074")
}

// Validate validates the CT_Formats and its children
func (_bdcfe *CT_Formats) Validate() error {
	return _bdcfe.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}
func NewCT_Scenarios() *CT_Scenarios { _dbbfa := &CT_Scenarios{}; return _dbbfa }
func (_abdfc *CT_PivotCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _abdfc.CacheIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _abdfc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionHeader and its children, prefixing error messages with path
func (_ddebf *CT_RevisionHeader) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_ddebf.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _ddebf.GuidAttr)
	}
	if _ebggda := _ddebf.SheetIdMap.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"); _ebggda != nil {
		return _ebggda
	}
	if _ddebf.ReviewedList != nil {
		if _gefdbb := _ddebf.ReviewedList.ValidateWithPath(path + "\u002f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"); _gefdbb != nil {
			return _gefdbb
		}
	}
	if _ddebf.ExtLst != nil {
		if _beafc := _ddebf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _beafc != nil {
			return _beafc
		}
	}
	return nil
}

type ST_CfvoType byte

// Validate validates the CT_GradientStop and its children
func (_cedbf *CT_GradientStop) Validate() error {
	return _cedbf.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}
func (_dafdc *CT_DataValidation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dafdc.TypeAttr != ST_DataValidationTypeUnset {
		_dgcaa, _bcfg := _dafdc.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _bcfg != nil {
			return _bcfg
		}
		start.Attr = append(start.Attr, _dgcaa)
	}
	if _dafdc.ErrorStyleAttr != ST_DataValidationErrorStyleUnset {
		_ecace, _bfbf := _dafdc.ErrorStyleAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065"})
		if _bfbf != nil {
			return _bfbf
		}
		start.Attr = append(start.Attr, _ecace)
	}
	if _dafdc.ImeModeAttr != ST_DataValidationImeModeUnset {
		_ffacg, _cbeba := _dafdc.ImeModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0069m\u0065\u004d\u006f\u0064\u0065"})
		if _cbeba != nil {
			return _cbeba
		}
		start.Attr = append(start.Attr, _ffacg)
	}
	if _dafdc.OperatorAttr != ST_DataValidationOperatorUnset {
		_dbafg, _efefa := _dafdc.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _efefa != nil {
			return _efefa
		}
		start.Attr = append(start.Attr, _dbafg)
	}
	if _dafdc.AllowBlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dafdc.AllowBlankAttr))})
	}
	if _dafdc.ShowDropDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dafdc.ShowDropDownAttr))})
	}
	if _dafdc.ShowInputMessageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dafdc.ShowInputMessageAttr))})
	}
	if _dafdc.ShowErrorMessageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dafdc.ShowErrorMessageAttr))})
	}
	if _dafdc.ErrorTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dafdc.ErrorTitleAttr)})
	}
	if _dafdc.ErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072o\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_dafdc.ErrorAttr)})
	}
	if _dafdc.PromptTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dafdc.PromptTitleAttr)})
	}
	if _dafdc.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dafdc.PromptAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", _dafdc.SqrefAttr)})
	e.EncodeToken(start)
	if _dafdc.Formula1 != nil {
		_dgbae := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}}
		_d.AddPreserveSpaceAttr(&_dgbae, *_dafdc.Formula1)
		e.EncodeElement(_dafdc.Formula1, _dgbae)
	}
	if _dafdc.Formula2 != nil {
		_cbdff := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}}
		_d.AddPreserveSpaceAttr(&_cbdff, *_dafdc.Formula2)
		e.EncodeElement(_dafdc.Formula2, _cbdff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MetadataStringIndex() *CT_MetadataStringIndex {
	_dfedg := &CT_MetadataStringIndex{}
	return _dfedg
}

type CT_BookViews struct {

	// Workbook View
	WorkbookView []*CT_BookView
}

func (_cbebaa *CT_FontSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _cbebaa.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abfg *CT_ConditionalFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abfg.PivotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_abfg.PivotAttr))})
	}
	if _abfg.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_abfg.SqrefAttr)})
	}
	e.EncodeToken(start)
	_baca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0052\u0075\u006ce"}}
	for _, _gdfbb := range _abfg.CfRule {
		e.EncodeElement(_gdfbb, _baca)
	}
	if _abfg.ExtLst != nil {
		_cgdae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abfg.ExtLst, _cgdae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellXfs and its children
func (_ffgg *CT_CellXfs) Validate() error {
	return _ffgg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073")
}
func (_cbbfc *CT_OleSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcgc := range start.Attr {
		if _gcgc.Name.Local == "\u0072\u0065\u0066" {
			_decge, _efeed := _gcgc.Value, error(nil)
			if _efeed != nil {
				return _efeed
			}
			_cbbfc.RefAttr = _decge
			continue
		}
	}
	for {
		_fcaae, _daccg := d.Token()
		if _daccg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065\u003a\u0020%\u0073", _daccg)
		}
		if _bceg, _aacdcc := _fcaae.(_b.EndElement); _aacdcc && _bceg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Item and its children, prefixing error messages with path
func (_ffae *CT_Item) ValidateWithPath(path string) error {
	if _gbdef := _ffae.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gbdef != nil {
		return _gbdef
	}
	return nil
}

const (
	ST_FontSchemeUnset ST_FontScheme = 0
	ST_FontSchemeNone  ST_FontScheme = 1
	ST_FontSchemeMajor ST_FontScheme = 2
	ST_FontSchemeMinor ST_FontScheme = 3
)

func (_gafec *CT_ServerFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efecad := range start.Attr {
		if _efecad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebefdb, _egecd := _e.ParseUint(_efecad.Value, 10, 32)
			if _egecd != nil {
				return _egecd
			}
			_gdggc := uint32(_ebefdb)
			_gafec.CountAttr = &_gdggc
			continue
		}
	}
_ecega:
	for {
		_bfdbg, _bdgcg := d.Token()
		if _bdgcg != nil {
			return _bdgcg
		}
		switch _egcddf := _bfdbg.(type) {
		case _b.StartElement:
			switch _egcddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_fdaef := NewCT_ServerFormat()
				if _fefgdb := d.DecodeElement(_fdaef, &_egcddf); _fefgdb != nil {
					return _fefgdb
				}
				_gafec.ServerFormat = append(_gafec.ServerFormat, _fdaef)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025v", _egcddf.Name)
				if _cacae := d.Skip(); _cacae != nil {
					return _cacae
				}
			}
		case _b.EndElement:
			break _ecega
		case _b.CharData:
		}
	}
	return nil
}
func (_cdcde ST_TextVAlign) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdcde.String(), start)
}

// Validate validates the CT_Connections and its children
func (_faeb *CT_Connections) Validate() error {
	return _faeb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073")
}

// Validate validates the CT_PivotFields and its children
func (_cffaf *CT_PivotFields) Validate() error {
	return _cffaf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073")
}
func NewCT_VolTypes() *CT_VolTypes { _cbefd := &CT_VolTypes{}; return _cbefd }

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_ebdgf *CT_Hyperlink) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_VolTopic and its children, prefixing error messages with path
func (_agfgbg *CT_VolTopic) ValidateWithPath(path string) error {
	if _adbda := _agfgbg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _adbda != nil {
		return _adbda
	}
	for _dafge, _daegeb := range _agfgbg.Tr {
		if _fdcdc := _daegeb.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _dafge)); _fdcdc != nil {
			return _fdcdc
		}
	}
	return nil
}
func (_gdcgg *CT_ExternalReferences) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fddfe := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065"}}
	for _, _cgbf := range _gdcgg.ExternalReference {
		e.EncodeElement(_cgbf, _fddfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotCaches and its children
func (_bfdde *CT_PivotCaches) Validate() error {
	return _bfdde.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073")
}
func (_cffcc *CT_SingleXmlCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ccgfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}}
	for _, _agcbf := range _cffcc.SingleXmlCell {
		e.EncodeElement(_agcbf, _ccgfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PageFields and its children, prefixing error messages with path
func (_fcebba *CT_PageFields) ValidateWithPath(path string) error {
	for _fggaf, _bcacd := range _fcebba.PageField {
		if _bgcbc := _bcacd.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0050\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _fggaf)); _bgcbc != nil {
			return _bgcbc
		}
	}
	return nil
}

type CT_String struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func (_abcee *CT_RevisionConflict) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abcee.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_abcee.SheetIdAttr)})
	}
	if _abcee.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_abcee.RIdAttr)})
	}
	if _abcee.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_abcee.UaAttr))})
	}
	if _abcee.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_abcee.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type PivotCacheDefinition struct{ CT_PivotCacheDefinition }

func NewCT_RevisionConflict() *CT_RevisionConflict { _fedfc := &CT_RevisionConflict{}; return _fedfc }
func (_dfcce *CT_PivotHierarchies) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eafce := range start.Attr {
		if _eafce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcda, _bfbed := _e.ParseUint(_eafce.Value, 10, 32)
			if _bfbed != nil {
				return _bfbed
			}
			_gfefa := uint32(_bcda)
			_dfcce.CountAttr = &_gfefa
			continue
		}
	}
_bdfbbg:
	for {
		_edcbec, _aede := d.Token()
		if _aede != nil {
			return _aede
		}
		switch _eaef := _edcbec.(type) {
		case _b.StartElement:
			switch _eaef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_ggfca := NewCT_PivotHierarchy()
				if _eacfc := d.DecodeElement(_ggfca, &_eaef); _eacfc != nil {
					return _eacfc
				}
				_dfcce.PivotHierarchy = append(_dfcce.PivotHierarchy, _ggfca)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _eaef.Name)
				if _aafda := d.Skip(); _aafda != nil {
					return _aafda
				}
			}
		case _b.EndElement:
			break _bdfbbg
		case _b.CharData:
		}
	}
	return nil
}
func (_fefbgf *CT_SheetIdMap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fefbgf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fefbgf.CountAttr)})
	}
	e.EncodeToken(start)
	_afaad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064"}}
	for _, _ccdaf := range _fefbgf.SheetId {
		e.EncodeElement(_ccdaf, _afaad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dfacff *CT_UnderlineProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdfec := range start.Attr {
		if _bdfec.Name.Local == "\u0076\u0061\u006c" {
			_dfacff.ValAttr.UnmarshalXMLAttr(_bdfec)
			continue
		}
	}
	for {
		_ddabf, _gaaggg := d.Token()
		if _gaaggg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u0065r\u006ci\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _gaaggg)
		}
		if _agbbf, _aaccfg := _ddabf.(_b.EndElement); _aaccfg && _agbbf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Index struct {

	// Shared Items Index
	VAttr uint32
}

func (_gcgfg *CT_CacheField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcg := range start.Attr {
		if _bcg.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_caab, _gbf := _e.ParseInt(_bcg.Value, 10, 32)
			if _gbf != nil {
				return _gbf
			}
			_edcc := int32(_caab)
			_gcgfg.HierarchyAttr = &_edcc
			continue
		}
		if _bcg.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_fff, _cfe := _e.ParseUint(_bcg.Value, 10, 32)
			if _cfe != nil {
				return _cfe
			}
			_aeaa := uint32(_fff)
			_gcgfg.LevelAttr = &_aeaa
			continue
		}
		if _bcg.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_dgbb, _bge := _bcg.Value, error(nil)
			if _bge != nil {
				return _bge
			}
			_gcgfg.CaptionAttr = &_dgbb
			continue
		}
		if _bcg.Name.Local == "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064" {
			_babb, _ebbg := _e.ParseBool(_bcg.Value)
			if _ebbg != nil {
				return _ebbg
			}
			_gcgfg.DatabaseFieldAttr = &_babb
			continue
		}
		if _bcg.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_edd, _acb := _e.ParseBool(_bcg.Value)
			if _acb != nil {
				return _acb
			}
			_gcgfg.ServerFieldAttr = &_edd
			continue
		}
		if _bcg.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_adcf, _ege := _e.ParseUint(_bcg.Value, 10, 32)
			if _ege != nil {
				return _ege
			}
			_egbd := uint32(_adcf)
			_gcgfg.NumFmtIdAttr = &_egbd
			continue
		}
		if _bcg.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_cab, _eeeg := _bcg.Value, error(nil)
			if _eeeg != nil {
				return _eeeg
			}
			_gcgfg.FormulaAttr = &_cab
			continue
		}
		if _bcg.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_dee, _geac := _e.ParseInt(_bcg.Value, 10, 32)
			if _geac != nil {
				return _geac
			}
			_abdb := int32(_dee)
			_gcgfg.SqlTypeAttr = &_abdb
			continue
		}
		if _bcg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgaf, _bagbf := _bcg.Value, error(nil)
			if _bagbf != nil {
				return _bagbf
			}
			_gcgfg.NameAttr = _dgaf
			continue
		}
		if _bcg.Name.Local == "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065" {
			_bdd, _gcgfc := _bcg.Value, error(nil)
			if _gcgfc != nil {
				return _gcgfc
			}
			_gcgfg.PropertyNameAttr = &_bdd
			continue
		}
		if _bcg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074" {
			_gdec, _gfdd := _e.ParseBool(_bcg.Value)
			if _gfdd != nil {
				return _gfdd
			}
			_gcgfg.UniqueListAttr = &_gdec
			continue
		}
		if _bcg.Name.Local == "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074" {
			_bfeg, _ggf := _e.ParseUint(_bcg.Value, 10, 32)
			if _ggf != nil {
				return _ggf
			}
			_fbcad := uint32(_bfeg)
			_gcgfg.MappingCountAttr = &_fbcad
			continue
		}
		if _bcg.Name.Local == "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064" {
			_befb, _cbg := _e.ParseBool(_bcg.Value)
			if _cbg != nil {
				return _cbg
			}
			_gcgfg.MemberPropertyFieldAttr = &_befb
			continue
		}
	}
_ebdg:
	for {
		_ebga, _gab := d.Token()
		if _gab != nil {
			return _gab
		}
		switch _fggd := _ebga.(type) {
		case _b.StartElement:
			switch _fggd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_gcgfg.SharedItems = NewCT_SharedItems()
				if _ddcf := d.DecodeElement(_gcgfg.SharedItems, &_fggd); _ddcf != nil {
					return _ddcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}:
				_gcgfg.FieldGroup = NewCT_FieldGroup()
				if _dba := d.DecodeElement(_gcgfg.FieldGroup, &_fggd); _dba != nil {
					return _dba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}:
				_dgdg := NewCT_X()
				if _fcec := d.DecodeElement(_dgdg, &_fggd); _fcec != nil {
					return _fcec
				}
				_gcgfg.MpMap = append(_gcgfg.MpMap, _dgdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcgfg.ExtLst = NewCT_ExtensionList()
				if _aca := d.DecodeElement(_gcgfg.ExtLst, &_fggd); _aca != nil {
					return _aca
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043a\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _fggd.Name)
				if _ecc := d.Skip(); _ecc != nil {
					return _ecc
				}
			}
		case _b.EndElement:
			break _ebdg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_gafbc *CT_HeaderFooter) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Borders and its children
func (_adccg *CT_Borders) Validate() error {
	return _adccg.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073")
}
func (_dac *CT_CalculatedMembers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eeee := range start.Attr {
		if _eeee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eac, _bgag := _e.ParseUint(_eeee.Value, 10, 32)
			if _bgag != nil {
				return _bgag
			}
			_eeea := uint32(_eac)
			_dac.CountAttr = &_eeea
			continue
		}
	}
_accd:
	for {
		_afcb, _abgfc := d.Token()
		if _abgfc != nil {
			return _abgfc
		}
		switch _bcde := _afcb.(type) {
		case _b.StartElement:
			switch _bcde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_agef := NewCT_CalculatedMember()
				if _dccc := d.DecodeElement(_agef, &_bcde); _dccc != nil {
					return _dccc
				}
				_dac.CalculatedMember = append(_dac.CalculatedMember, _agef)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _bcde.Name)
				if _bgbd := d.Skip(); _bgbd != nil {
					return _bgbd
				}
			}
		case _b.EndElement:
			break _accd
		case _b.CharData:
		}
	}
	return nil
}
func (_gafad *CT_SmartTagPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfcad := range start.Attr {
		if _bfcad.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_faega, _dbefg := _e.ParseBool(_bfcad.Value)
			if _dbefg != nil {
				return _dbefg
			}
			_gafad.EmbedAttr = &_faega
			continue
		}
		if _bfcad.Name.Local == "\u0073\u0068\u006f\u0077" {
			_gafad.ShowAttr.UnmarshalXMLAttr(_bfcad)
			continue
		}
	}
	for {
		_dgaad, _bcgcdg := d.Token()
		if _bcgcdg != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0053m\u0061r\u0074T\u0061\u0067\u0050\u0072\u003a\u0020\u0025s", _bcgcdg)
		}
		if _fedcag, _gcbeea := _dgaad.(_b.EndElement); _gcbeea && _fedcag.Name == start.Name {
			break
		}
	}
	return nil
}
func (_acfdf *CT_ExternalSheetName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcgd := range start.Attr {
		if _bcgd.Name.Local == "\u0076\u0061\u006c" {
			_baafg, _begb := _bcgd.Value, error(nil)
			if _begb != nil {
				return _begb
			}
			_acfdf.ValAttr = &_baafg
			continue
		}
	}
	for {
		_fgabe, _abdg := d.Token()
		if _abdg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _abdg)
		}
		if _gcef, _eaffe := _fgabe.(_b.EndElement); _eaffe && _gcef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbdgc ST_IconSetType) String() string {
	switch _cbdgc {
	case 0:
		return ""
	case 1:
		return "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case 2:
		return "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 3:
		return "\u0033\u0046\u006c\u0061\u0067\u0073"
	case 4:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case 5:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case 6:
		return "\u0033\u0053\u0069\u0067\u006e\u0073"
	case 7:
		return "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case 8:
		return "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case 9:
		return "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case 10:
		return "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 11:
		return "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case 12:
		return "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case 13:
		return "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case 14:
		return "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case 15:
		return "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 16:
		return "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case 17:
		return "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return ""
}

type CT_RevisionFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Row or Column Formatting Change
	XfDxfAttr *bool

	// Style
	SAttr *bool

	// Sequence Of References
	SqrefAttr ST_Sqref

	// Start index
	StartAttr *uint32

	// Length
	LengthAttr *uint32

	// Formatting
	Dxf    *CT_Dxf
	ExtLst *CT_ExtensionList
}
type CT_HierarchyUsage struct {

	// Hierarchy Usage
	HierarchyUsageAttr int32
}
type CT_FileSharing struct {

	// Read Only Recommended
	ReadOnlyRecommendedAttr *bool

	// User Name
	UserNameAttr *string

	// Write Reservation Password
	ReservationPasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32
}
type MapInfo struct{ CT_MapInfo }

func (_fddc *CT_Connection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fddc.IdAttr)})
	if _fddc.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.SourceFileAttr)})
	}
	if _fddc.OdcFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fd\u0063\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.OdcFileAttr)})
	}
	if _fddc.KeepAliveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.KeepAliveAttr))})
	}
	if _fddc.IntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.IntervalAttr)})
	}
	if _fddc.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.NameAttr)})
	}
	if _fddc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.DescriptionAttr)})
	}
	if _fddc.TypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.TypeAttr)})
	}
	if _fddc.ReconnectionMethodAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.ReconnectionMethodAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _fddc.RefreshedVersionAttr)})
	if _fddc.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.MinRefreshableVersionAttr)})
	}
	if _fddc.SavePasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.SavePasswordAttr))})
	}
	if _fddc.NewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0065\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.NewAttr))})
	}
	if _fddc.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.DeletedAttr))})
	}
	if _fddc.OnlyUseConnectionFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.OnlyUseConnectionFileAttr))})
	}
	if _fddc.BackgroundAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.BackgroundAttr))})
	}
	if _fddc.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.RefreshOnLoadAttr))})
	}
	if _fddc.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fddc.SaveDataAttr))})
	}
	if _fddc.CredentialsAttr != ST_CredMethodUnset {
		_eccb, _fcce := _fddc.CredentialsAttr.MarshalXMLAttr(_b.Name{Local: "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073"})
		if _fcce != nil {
			return _fcce
		}
		start.Attr = append(start.Attr, _eccb)
	}
	if _fddc.SingleSignOnIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fddc.SingleSignOnIdAttr)})
	}
	e.EncodeToken(start)
	if _fddc.DbPr != nil {
		_egga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0064\u0062\u0050\u0072"}}
		e.EncodeElement(_fddc.DbPr, _egga)
	}
	if _fddc.OlapPr != nil {
		_cfecg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006f\u006c\u0061\u0070\u0050r"}}
		e.EncodeElement(_fddc.OlapPr, _cfecg)
	}
	if _fddc.WebPr != nil {
		_bbdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_fddc.WebPr, _bbdc)
	}
	if _fddc.TextPr != nil {
		_eeff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074\u0050r"}}
		e.EncodeElement(_fddc.TextPr, _eeff)
	}
	if _fddc.Parameters != nil {
		_dfega := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_fddc.Parameters, _dfega)
	}
	if _fddc.ExtLst != nil {
		_ffde := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fddc.ExtLst, _ffde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_daecd ST_DdeValueType) Validate() error { return _daecd.ValidateWithPath("") }
func (_dbcff *CT_VolTopicRef) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gffdff := range start.Attr {
		if _gffdff.Name.Local == "\u0072" {
			_gcgda, _agacc := _gffdff.Value, error(nil)
			if _agacc != nil {
				return _agacc
			}
			_dbcff.RAttr = _gcgda
			continue
		}
		if _gffdff.Name.Local == "\u0073" {
			_affbc, _adacfd := _e.ParseUint(_gffdff.Value, 10, 32)
			if _adacfd != nil {
				return _adacfd
			}
			_dbcff.SAttr = uint32(_affbc)
			continue
		}
	}
	for {
		_bcedd, _egacdb := d.Token()
		if _egacdb != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0052\u0065\u0066:\u0020\u0025\u0073", _egacdb)
		}
		if _ccbead, _cgebf := _bcedd.(_b.EndElement); _cgebf && _ccbead.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RevisionDefinedName and its children
func (_eabadb *CT_RevisionDefinedName) Validate() error {
	return _eabadb.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

type Connections struct{ CT_Connections }

// Validate validates the CT_TableStyle and its children
func (_ecabf *CT_TableStyle) Validate() error {
	return _ecabf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_cagdbg ST_RefMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfedee := _b.Attr{}
	_dfedee.Name = name
	switch _cagdbg {
	case ST_RefModeUnset:
		_dfedee.Value = ""
	case ST_RefModeA1:
		_dfedee.Value = "\u0041\u0031"
	case ST_RefModeR1C1:
		_dfedee.Value = "\u0052\u0031\u0043\u0031"
	}
	return _dfedee, nil
}
func (_effbb *VolTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_effbb.CT_VolTypes = *NewCT_VolTypes()
_bgbagb:
	for {
		_bgddcf, _cbefb := d.Token()
		if _cbefb != nil {
			return _cbefb
		}
		switch _cdfff := _bgddcf.(type) {
		case _b.StartElement:
			switch _cdfff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_beeegg := NewCT_VolType()
				if _bfgdg := d.DecodeElement(_beeegg, &_cdfff); _bfgdg != nil {
					return _bfgdg
				}
				_effbb.VolType = append(_effbb.VolType, _beeegg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_effbb.ExtLst = NewCT_ExtensionList()
				if _efcgb := d.DecodeElement(_effbb.ExtLst, &_cdfff); _efcgb != nil {
					return _efcgb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _cdfff.Name)
				if _bbabf := d.Skip(); _bbabf != nil {
					return _bbabf
				}
			}
		case _b.EndElement:
			break _bgbagb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_IndexedColors and its children, prefixing error messages with path
func (_dfeed *CT_IndexedColors) ValidateWithPath(path string) error {
	for _feaf, _dfgaa := range _dfeed.RgbColor {
		if _fgecd := _dfgaa.ValidateWithPath(_f.Sprintf("\u0025s\u002fR\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _feaf)); _fgecd != nil {
			return _fgecd
		}
	}
	return nil
}

type ST_ExternalConnectionType byte
type CT_CustomFilters struct {

	// And
	AndAttr *bool

	// Custom Filter Criteria
	CustomFilter []*CT_CustomFilter
}

func (_egfde *CT_Stylesheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adbca:
	for {
		_bdgada, _abdfb := d.Token()
		if _abdfb != nil {
			return _abdfb
		}
		switch _cbabg := _bdgada.(type) {
		case _b.StartElement:
			switch _cbabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_egfde.NumFmts = NewCT_NumFmts()
				if _bafef := d.DecodeElement(_egfde.NumFmts, &_cbabg); _bafef != nil {
					return _bafef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_egfde.Fonts = NewCT_Fonts()
				if _bedca := d.DecodeElement(_egfde.Fonts, &_cbabg); _bedca != nil {
					return _bedca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_egfde.Fills = NewCT_Fills()
				if _bacge := d.DecodeElement(_egfde.Fills, &_cbabg); _bacge != nil {
					return _bacge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_egfde.Borders = NewCT_Borders()
				if _cadgbe := d.DecodeElement(_egfde.Borders, &_cbabg); _cadgbe != nil {
					return _cadgbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_egfde.CellStyleXfs = NewCT_CellStyleXfs()
				if _acddf := d.DecodeElement(_egfde.CellStyleXfs, &_cbabg); _acddf != nil {
					return _acddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_egfde.CellXfs = NewCT_CellXfs()
				if _fcedg := d.DecodeElement(_egfde.CellXfs, &_cbabg); _fcedg != nil {
					return _fcedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_egfde.CellStyles = NewCT_CellStyles()
				if _fdfccd := d.DecodeElement(_egfde.CellStyles, &_cbabg); _fdfccd != nil {
					return _fdfccd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_egfde.Dxfs = NewCT_Dxfs()
				if _acebf := d.DecodeElement(_egfde.Dxfs, &_cbabg); _acebf != nil {
					return _acebf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_egfde.TableStyles = NewCT_TableStyles()
				if _efggb := d.DecodeElement(_egfde.TableStyles, &_cbabg); _efggb != nil {
					return _efggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_egfde.Colors = NewCT_Colors()
				if _eggede := d.DecodeElement(_egfde.Colors, &_cbabg); _eggede != nil {
					return _eggede
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egfde.ExtLst = NewCT_ExtensionList()
				if _gadfc := d.DecodeElement(_egfde.ExtLst, &_cbabg); _gadfc != nil {
					return _gadfc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053t\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _cbabg.Name)
				if _efeeaa := d.Skip(); _efeeaa != nil {
					return _efeeaa
				}
			}
		case _b.EndElement:
			break _adbca
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Format and its children
func (_gfbf *CT_Format) Validate() error {
	return _gfbf.ValidateWithPath("\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t")
}

// Validate validates the CT_ExternalSheetName and its children
func (_bgebb *CT_ExternalSheetName) Validate() error {
	return _bgebb.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065")
}
func (_caca *CT_FontSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gccdg := range start.Attr {
		if _gccdg.Name.Local == "\u0076\u0061\u006c" {
			_acdgf, _bbdeb := _e.ParseFloat(_gccdg.Value, 64)
			if _bbdeb != nil {
				return _bbdeb
			}
			_caca.ValAttr = _acdgf
			continue
		}
	}
	for {
		_cgfbcd, _fcaf := d.Token()
		if _fcaf != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _fcaf)
		}
		if _eabc, _gbgcce := _cgfbcd.(_b.EndElement); _gbgcce && _eabc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Macrosheet and its children
func (_adfff *CT_Macrosheet) Validate() error {
	return _adfff.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074")
}
func (_effed *CT_RevisionCellChange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_effed.Nc = NewCT_Cell()
	for _, _ffefd := range start.Attr {
		if _ffefd.Name.Local == "\u006f\u006c\u0064P\u0068" {
			_cabbfb, _bfafd := _e.ParseBool(_ffefd.Value)
			if _bfafd != nil {
				return _bfafd
			}
			_effed.OldPhAttr = &_cabbfb
			continue
		}
		if _ffefd.Name.Local == "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065" {
			_dgefc, _ddcaea := _e.ParseBool(_ffefd.Value)
			if _ddcaea != nil {
				return _ddcaea
			}
			_effed.EndOfListFormulaUpdateAttr = &_dgefc
			continue
		}
		if _ffefd.Name.Local == "\u006f\u0064\u0078\u0066" {
			_efdeb, _ffafc := _e.ParseBool(_ffefd.Value)
			if _ffafc != nil {
				return _ffafc
			}
			_effed.OdxfAttr = &_efdeb
			continue
		}
		if _ffefd.Name.Local == "\u0073" {
			_feebbg, _ebbed := _e.ParseBool(_ffefd.Value)
			if _ebbed != nil {
				return _ebbed
			}
			_effed.SAttr = &_feebbg
			continue
		}
		if _ffefd.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_ffabb, _ccfeg := _e.ParseUint(_ffefd.Value, 10, 32)
			if _ccfeg != nil {
				return _ccfeg
			}
			_cefd := uint32(_ffabb)
			_effed.NumFmtIdAttr = &_cefd
			continue
		}
		if _ffefd.Name.Local == "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078" {
			_gdea, _bggbcc := _e.ParseBool(_ffefd.Value)
			if _bggbcc != nil {
				return _bggbcc
			}
			_effed.OldQuotePrefixAttr = &_gdea
			continue
		}
		if _ffefd.Name.Local == "\u0070\u0068" {
			_afcadg, _gecb := _e.ParseBool(_ffefd.Value)
			if _gecb != nil {
				return _gecb
			}
			_effed.PhAttr = &_afcadg
			continue
		}
		if _ffefd.Name.Local == "\u0073\u0049\u0064" {
			_aedee, _cbefa := _e.ParseUint(_ffefd.Value, 10, 32)
			if _cbefa != nil {
				return _cbefa
			}
			_effed.SIdAttr = uint32(_aedee)
			continue
		}
		if _ffefd.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_bcdad, _aafgf := _e.ParseBool(_ffefd.Value)
			if _aafgf != nil {
				return _aafgf
			}
			_effed.XfDxfAttr = &_bcdad
			continue
		}
		if _ffefd.Name.Local == "\u0064\u0078\u0066" {
			_bffeb, _eacgd := _e.ParseBool(_ffefd.Value)
			if _eacgd != nil {
				return _eacgd
			}
			_effed.DxfAttr = &_bffeb
			continue
		}
		if _ffefd.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_aebfeg, _cgfeg := _e.ParseBool(_ffefd.Value)
			if _cgfeg != nil {
				return _cgfeg
			}
			_effed.QuotePrefixAttr = &_aebfeg
			continue
		}
		if _ffefd.Name.Local == "\u0072\u0049\u0064" {
			_acbaf, _fbdce := _e.ParseUint(_ffefd.Value, 10, 32)
			if _fbdce != nil {
				return _fbdce
			}
			_gfdegg := uint32(_acbaf)
			_effed.RIdAttr = &_gfdegg
			continue
		}
		if _ffefd.Name.Local == "\u0075\u0061" {
			_bdebg, _dbaggb := _e.ParseBool(_ffefd.Value)
			if _dbaggb != nil {
				return _dbaggb
			}
			_effed.UaAttr = &_bdebg
			continue
		}
		if _ffefd.Name.Local == "\u0072\u0061" {
			_ccbfb, _accg := _e.ParseBool(_ffefd.Value)
			if _accg != nil {
				return _accg
			}
			_effed.RaAttr = &_ccbfb
			continue
		}
	}
_fdegec:
	for {
		_cccfg, _fddaf := d.Token()
		if _fddaf != nil {
			return _fddaf
		}
		switch _fabcc := _cccfg.(type) {
		case _b.StartElement:
			switch _fabcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}:
				_effed.Oc = NewCT_Cell()
				if _egfad := d.DecodeElement(_effed.Oc, &_fabcc); _egfad != nil {
					return _egfad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}:
				if _ffbaf := d.DecodeElement(_effed.Nc, &_fabcc); _ffbaf != nil {
					return _ffbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}:
				_effed.Odxf = NewCT_Dxf()
				if _cbccb := d.DecodeElement(_effed.Odxf, &_fabcc); _cbccb != nil {
					return _cbccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}:
				_effed.Ndxf = NewCT_Dxf()
				if _abefdf := d.DecodeElement(_effed.Ndxf, &_fabcc); _abefdf != nil {
					return _abefdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_effed.ExtLst = NewCT_ExtensionList()
				if _bdaab := d.DecodeElement(_effed.ExtLst, &_fabcc); _bdaab != nil {
					return _bdaab
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043\u0065\u006c\u006c\u0043\u0068\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _fabcc.Name)
				if _degba := d.Skip(); _degba != nil {
					return _degba
				}
			}
		case _b.EndElement:
			break _fdegec
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Dxf and its children
func (_aaedd *CT_Dxf) Validate() error {
	return _aaedd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0078\u0066")
}

// Validate validates the CT_RevisionFormatting and its children
func (_edcce *CT_RevisionFormatting) Validate() error {
	return _edcce.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

// Validate validates the CT_DeletedField and its children
func (_abgbc *CT_DeletedField) Validate() error {
	return _abgbc.ValidateWithPath("\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064")
}
func (_bcgfg *CT_QueryTableDeletedFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcgfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bcgfg.CountAttr)})
	}
	e.EncodeToken(start)
	_caaaec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}}
	for _, _cgdb := range _bcgfg.DeletedField {
		e.EncodeElement(_cgdb, _caaaec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalSheetNames and its children
func (_cdce *CT_ExternalSheetNames) Validate() error {
	return _cdce.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073")
}
func NewCT_Revisions() *CT_Revisions { _eaadf := &CT_Revisions{}; return _eaadf }

type ST_Type byte

func (_dfacd *CT_Sheets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbecbc:
	for {
		_gdgbaa, _ebbfd := d.Token()
		if _ebbfd != nil {
			return _ebbfd
		}
		switch _fagdd := _gdgbaa.(type) {
		case _b.StartElement:
			switch _fagdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}:
				_fdccd := NewCT_Sheet()
				if _babaa := d.DecodeElement(_fdccd, &_fagdd); _babaa != nil {
					return _babaa
				}
				_dfacd.Sheet = append(_dfacd.Sheet, _fdccd)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0065e\u0074\u0073 \u0025\u0076", _fagdd.Name)
				if _fdeac := d.Skip(); _fdeac != nil {
					return _fdeac
				}
			}
		case _b.EndElement:
			break _cbecbc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Xf and its children
func (_cfdbd *CT_Xf) Validate() error { return _cfdbd.ValidateWithPath("\u0043\u0054\u005fX\u0066") }

type CT_Dxf struct {

	// Font Properties
	Font *CT_Font

	// Number Format
	NumFmt *CT_NumFmt

	// Fill
	Fill *CT_Fill

	// Alignment
	Alignment *CT_CellAlignment

	// Border Properties
	Border *CT_Border

	// Protection Properties
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cbcfgc *CT_ProtectedRange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbcfgc.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbcfgc.PasswordAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", _cbcfgc.SqrefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cbcfgc.NameAttr)})
	if _cbcfgc.SecurityDescriptorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_cbcfgc.SecurityDescriptorAttr)})
	}
	if _cbcfgc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cbcfgc.AlgorithmNameAttr)})
	}
	if _cbcfgc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_cbcfgc.HashValueAttr)})
	}
	if _cbcfgc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_cbcfgc.SaltValueAttr)})
	}
	if _cbcfgc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _f.Sprintf("\u0025\u0076", *_cbcfgc.SpinCountAttr)})
	}
	e.EncodeToken(start)
	if _cbcfgc.SecurityDescriptor != nil {
		_aefd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0073\u0065cu\u0072i\u0074\u0079\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072"}}
		for _, _cgfc := range _cbcfgc.SecurityDescriptor {
			e.EncodeElement(_cgfc, _aefd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Worksheet and its children
func (_eeeaff *CT_Worksheet) Validate() error {
	return _eeeaff.ValidateWithPath("\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074")
}
func NewCT_Tables() *CT_Tables { _accdf := &CT_Tables{}; return _accdf }
func (_ddecbg *PivotTableDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _ddecbg.CT_pivotTableDefinition.MarshalXML(e, start)
}
func (_edgeec *CT_WebPublishItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edgeec.SourceTypeAttr = ST_WebSourceType(1)
	for _, _fabeg := range start.Attr {
		if _fabeg.Name.Local == "\u0069\u0064" {
			_gebbbd, _cbafd := _e.ParseUint(_fabeg.Value, 10, 32)
			if _cbafd != nil {
				return _cbafd
			}
			_edgeec.IdAttr = uint32(_gebbbd)
			continue
		}
		if _fabeg.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_fedbd, _abcefa := _fabeg.Value, error(nil)
			if _abcefa != nil {
				return _abcefa
			}
			_edgeec.DivIdAttr = _fedbd
			continue
		}
		if _fabeg.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065" {
			_edgeec.SourceTypeAttr.UnmarshalXMLAttr(_fabeg)
			continue
		}
		if _fabeg.Name.Local == "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f" {
			_gbged, _bbcbg := _fabeg.Value, error(nil)
			if _bbcbg != nil {
				return _bbcbg
			}
			_edgeec.SourceRefAttr = &_gbged
			continue
		}
		if _fabeg.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_abfcc, _aeddc := _fabeg.Value, error(nil)
			if _aeddc != nil {
				return _aeddc
			}
			_edgeec.SourceObjectAttr = &_abfcc
			continue
		}
		if _fabeg.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_cdgdb, _aabae := _fabeg.Value, error(nil)
			if _aabae != nil {
				return _aabae
			}
			_edgeec.DestinationFileAttr = _cdgdb
			continue
		}
		if _fabeg.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_abcf, _dfede := _fabeg.Value, error(nil)
			if _dfede != nil {
				return _dfede
			}
			_edgeec.TitleAttr = &_abcf
			continue
		}
		if _fabeg.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_gfgac, _ccbcg := _e.ParseBool(_fabeg.Value)
			if _ccbcg != nil {
				return _ccbcg
			}
			_edgeec.AutoRepublishAttr = &_gfgac
			continue
		}
	}
	for {
		_cceag, _gebffg := d.Token()
		if _gebffg != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d: \u0025\u0073", _gebffg)
		}
		if _egdega, _afceg := _cceag.(_b.EndElement); _afceg && _egdega.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgeagaf *ST_SheetViewType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdbbaa, _adadd := d.Token()
	if _adadd != nil {
		return _adadd
	}
	if _cacbg, _gdcdb := _bdbbaa.(_b.EndElement); _gdcdb && _cacbg.Name == start.Name {
		*_cgeagaf = 1
		return nil
	}
	if _bgegg, _bcbdg := _bdbbaa.(_b.CharData); !_bcbdg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdbbaa)
	} else {
		switch string(_bgegg) {
		case "":
			*_cgeagaf = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_cgeagaf = 1
		case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
			*_cgeagaf = 2
		case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
			*_cgeagaf = 3
		}
	}
	_bdbbaa, _adadd = d.Token()
	if _adadd != nil {
		return _adadd
	}
	if _affef, _fgcga := _bdbbaa.(_b.EndElement); _fgcga && _affef.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdbbaa)
}
func NewCT_ChartsheetPr() *CT_ChartsheetPr { _acac := &CT_ChartsheetPr{}; return _acac }

// Validate validates the CT_PivotDimension and its children
func (_dadf *CT_PivotDimension) Validate() error {
	return _dadf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}
func (_eegceb *CT_Scenarios) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eegceb.CurrentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063u\u0072\u0072\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eegceb.CurrentAttr)})
	}
	if _eegceb.ShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_eegceb.ShowAttr)})
	}
	if _eegceb.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_eegceb.SqrefAttr)})
	}
	e.EncodeToken(start)
	_dccfc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}}
	for _, _cecgg := range _eegceb.Scenario {
		e.EncodeElement(_cecgg, _dccfc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cdfabf ST_Orientation) ValidateWithPath(path string) error {
	switch _cdfabf {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdfabf))
	}
	return nil
}

type CT_RowHierarchiesUsage struct {

	// Item Count
	CountAttr *uint32

	// Row OLAP Hierarchies
	RowHierarchyUsage []*CT_HierarchyUsage
}

func (_aadga *CT_RowHierarchiesUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aadga.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_aadga.CountAttr)})
	}
	e.EncodeToken(start)
	_fgbgb := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _gaaaab := range _aadga.RowHierarchyUsage {
		e.EncodeElement(_gaaaab, _fgbgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_baeab ST_rwColActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdgdf := _b.Attr{}
	_fdgdf.Name = name
	switch _baeab {
	case ST_rwColActionTypeUnset:
		_fdgdf.Value = ""
	case ST_rwColActionTypeInsertRow:
		_fdgdf.Value = "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case ST_rwColActionTypeDeleteRow:
		_fdgdf.Value = "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case ST_rwColActionTypeInsertCol:
		_fdgdf.Value = "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case ST_rwColActionTypeDeleteCol:
		_fdgdf.Value = "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return _fdgdf, nil
}

type Comments struct{ CT_Comments }

func (_fefafd *CT_TableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _fefafd.NameAttr)})
	if _fefafd.PivotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fefafd.PivotAttr))})
	}
	if _fefafd.TableAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062l\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fefafd.TableAttr))})
	}
	if _fefafd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fefafd.CountAttr)})
	}
	e.EncodeToken(start)
	if _fefafd.TableStyleElement != nil {
		_ecgeb := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074"}}
		for _, _geebg := range _fefafd.TableStyleElement {
			e.EncodeElement(_geebg, _ecgeb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbbfcda ST_DataConsolidateFunction) ValidateWithPath(path string) error {
	switch _cbbfcda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbbfcda))
	}
	return nil
}
func (_fbcge *CT_SheetProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbcge.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fbcge.PasswordAttr)})
	}
	if _fbcge.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fbcge.AlgorithmNameAttr)})
	}
	if _fbcge.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_fbcge.HashValueAttr)})
	}
	if _fbcge.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_fbcge.SaltValueAttr)})
	}
	if _fbcge.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _f.Sprintf("\u0025\u0076", *_fbcge.SpinCountAttr)})
	}
	if _fbcge.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.SheetAttr))})
	}
	if _fbcge.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.ObjectsAttr))})
	}
	if _fbcge.ScenariosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.ScenariosAttr))})
	}
	if _fbcge.FormatCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.FormatCellsAttr))})
	}
	if _fbcge.FormatColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.FormatColumnsAttr))})
	}
	if _fbcge.FormatRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.FormatRowsAttr))})
	}
	if _fbcge.InsertColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.InsertColumnsAttr))})
	}
	if _fbcge.InsertRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.InsertRowsAttr))})
	}
	if _fbcge.InsertHyperlinksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.InsertHyperlinksAttr))})
	}
	if _fbcge.DeleteColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.DeleteColumnsAttr))})
	}
	if _fbcge.DeleteRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.DeleteRowsAttr))})
	}
	if _fbcge.SelectLockedCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.SelectLockedCellsAttr))})
	}
	if _fbcge.SortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0072\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.SortAttr))})
	}
	if _fbcge.AutoFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.AutoFilterAttr))})
	}
	if _fbcge.PivotTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.PivotTablesAttr))})
	}
	if _fbcge.SelectUnlockedCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbcge.SelectUnlockedCellsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionRowColumn and its children, prefixing error messages with path
func (_eeebd *CT_RevisionRowColumn) ValidateWithPath(path string) error {
	if _eeebd.ActionAttr == ST_rwColActionTypeUnset {
		return _f.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dbfbe := _eeebd.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _dbfbe != nil {
		return _dbfbe
	}
	for _acdff, _ebfcb := range _eeebd.Undo {
		if _cfeef := _ebfcb.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _acdff)); _cfeef != nil {
			return _cfeef
		}
	}
	for _gaffg, _facagc := range _eeebd.Rcc {
		if _dgdcb := _facagc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _gaffg)); _dgdcb != nil {
			return _dgdcb
		}
	}
	for _ebacd, _dcgfd := range _eeebd.Rfmt {
		if _dgcgfe := _dcgfd.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _ebacd)); _dgcgfe != nil {
			return _dgcgfe
		}
	}
	return nil
}
func NewConnections() *Connections {
	_cdeae := &Connections{}
	_cdeae.CT_Connections = *NewCT_Connections()
	return _cdeae
}
func (_bedab *CT_TableMissing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_dceecd, _ddebfc := d.Token()
		if _ddebfc != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u004di\u0073\u0073\u0069n\u0067:\u0020\u0025\u0073", _ddebfc)
		}
		if _cdbca, _dagbc := _dceecd.(_b.EndElement); _dagbc && _cdbca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dfcfe *CT_IndexedColors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fagff := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}}
	for _, _cfdc := range _dfcfe.RgbColor {
		e.EncodeElement(_cfdc, _fagff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableParts and its children, prefixing error messages with path
func (_feedeg *CT_TableParts) ValidateWithPath(path string) error {
	for _fbcbe, _dgbbf := range _feedeg.TablePart {
		if _fbfdg := _dgbbf.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0074\u005b\u0025\u0064\u005d", path, _fbcbe)); _fbfdg != nil {
			return _fbfdg
		}
	}
	return nil
}
func (_bdge *CT_ExternalReferences) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adbdg:
	for {
		_gebe, _aagfa := d.Token()
		if _aagfa != nil {
			return _aagfa
		}
		switch _deece := _gebe.(type) {
		case _b.StartElement:
			switch _deece.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}:
				_fbabf := NewCT_ExternalReference()
				if _adcaf := d.DecodeElement(_fbabf, &_deece); _adcaf != nil {
					return _adcaf
				}
				_bdge.ExternalReference = append(_bdge.ExternalReference, _fbabf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _deece.Name)
				if _ecbc := d.Skip(); _ecbc != nil {
					return _ecbc
				}
			}
		case _b.EndElement:
			break _adbdg
		case _b.CharData:
		}
	}
	return nil
}
func (_efc *CT_BooleanProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efc.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efc.ValAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ServerFormats struct {

	// Format Count
	CountAttr *uint32

	// Server Format
	ServerFormat []*CT_ServerFormat
}

func (_dcgebee ST_ShowDataAs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcgebee.String(), start)
}
func (_dcdaba *ST_Visibility) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_caggg, _fafafa := d.Token()
	if _fafafa != nil {
		return _fafafa
	}
	if _aebdef, _daegb := _caggg.(_b.EndElement); _daegb && _aebdef.Name == start.Name {
		*_dcdaba = 1
		return nil
	}
	if _egfccd, _faaeg := _caggg.(_b.CharData); !_faaeg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caggg)
	} else {
		switch string(_egfccd) {
		case "":
			*_dcdaba = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_dcdaba = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_dcdaba = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_dcdaba = 3
		}
	}
	_caggg, _fafafa = d.Token()
	if _fafafa != nil {
		return _fafafa
	}
	if _cdddbb, _dbbga := _caggg.(_b.EndElement); _dbbga && _cdddbb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caggg)
}
func NewCT_RevisionComment() *CT_RevisionComment {
	_cdgcg := &CT_RevisionComment{}
	_cdgcg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _cdgcg
}

// ValidateWithPath validates the CT_Col and its children, prefixing error messages with path
func (_eegb *CT_Col) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_QueryTableDeletedFields and its children, prefixing error messages with path
func (_fbefe *CT_QueryTableDeletedFields) ValidateWithPath(path string) error {
	for _agebee, _dgbcg := range _fbefe.DeletedField {
		if _gdadec := _dgbcg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044el\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _agebee)); _gdadec != nil {
			return _gdadec
		}
	}
	return nil
}
func (_bdeefc *CT_ProtectedRanges) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfdab:
	for {
		_efafe, _fcbbe := d.Token()
		if _fcbbe != nil {
			return _fcbbe
		}
		switch _fcfbf := _efafe.(type) {
		case _b.StartElement:
			switch _fcfbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}:
				_babc := NewCT_ProtectedRange()
				if _cfbcge := d.DecodeElement(_babc, &_fcfbf); _cfbcge != nil {
					return _cfbcge
				}
				_bdeefc.ProtectedRange = append(_bdeefc.ProtectedRange, _babc)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063t\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073\u0020\u0025\u0076", _fcfbf.Name)
				if _bbfag := d.Skip(); _bbfag != nil {
					return _bbfag
				}
			}
		case _b.EndElement:
			break _bfdab
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetBackgroundPicture struct{ IdAttr string }
type CT_PivotArea struct {

	// Field Index
	FieldAttr *int32

	// Rule Type
	TypeAttr ST_PivotAreaType

	// Data Only
	DataOnlyAttr *bool

	// Labels Only
	LabelOnlyAttr *bool

	// Include Row Grand Total
	GrandRowAttr *bool

	// Include Column Grand Total
	GrandColAttr *bool

	// Cache Index
	CacheIndexAttr *bool

	// Outline
	OutlineAttr *bool

	// Offset Reference
	OffsetAttr *string

	// Collapsed Levels Are Subtotals
	CollapsedLevelsAreSubtotalsAttr *bool

	// Axis
	AxisAttr ST_Axis

	// Field Position
	FieldPositionAttr *uint32

	// References
	References *CT_PivotAreaReferences

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dfaa *CT_CellWatches) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_acgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068"}}
	for _, _ggeb := range _dfaa.CellWatch {
		e.EncodeElement(_ggeb, _acgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddddb *CT_DdeItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _baea := range start.Attr {
		if _baea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdca, _afef := _baea.Value, error(nil)
			if _afef != nil {
				return _afef
			}
			_ddddb.NameAttr = &_gdca
			continue
		}
		if _baea.Name.Local == "\u006f\u006c\u0065" {
			_dedce, _dfff := _e.ParseBool(_baea.Value)
			if _dfff != nil {
				return _dfff
			}
			_ddddb.OleAttr = &_dedce
			continue
		}
		if _baea.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_babbc, _eabab := _e.ParseBool(_baea.Value)
			if _eabab != nil {
				return _eabab
			}
			_ddddb.AdviseAttr = &_babbc
			continue
		}
		if _baea.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_fefg, _bfcge := _e.ParseBool(_baea.Value)
			if _bfcge != nil {
				return _bfcge
			}
			_ddddb.PreferPicAttr = &_fefg
			continue
		}
	}
_ffacf:
	for {
		_cfbc, _dgbd := d.Token()
		if _dgbd != nil {
			return _dgbd
		}
		switch _gacb := _cfbc.(type) {
		case _b.StartElement:
			switch _gacb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}:
				_ddddb.Values = NewCT_DdeValues()
				if _ffcdg := d.DecodeElement(_ddddb.Values, &_gacb); _ffcdg != nil {
					return _ffcdg
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _gacb.Name)
				if _gdcfab := d.Skip(); _gdcfab != nil {
					return _gdcfab
				}
			}
		case _b.EndElement:
			break _ffacf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetCalcPr and its children, prefixing error messages with path
func (_fdegeb *CT_SheetCalcPr) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Rst and its children, prefixing error messages with path
func (_bggbf *CT_Rst) ValidateWithPath(path string) error {
	for _aaafc, _acgcgc := range _bggbf.R {
		if _fggef := _acgcgc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _aaafc)); _fggef != nil {
			return _fggef
		}
	}
	for _fegga, _dbdfba := range _bggbf.RPh {
		if _dbda := _dbdfba.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0052\u0050\u0068\u005b\u0025\u0064\u005d", path, _fegga)); _dbda != nil {
			return _dbda
		}
	}
	if _bggbf.PhoneticPr != nil {
		if _gefgea := _bggbf.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _gefgea != nil {
			return _gefgea
		}
	}
	return nil
}
func (_gcfacc *CT_MetadataStrings) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcfacc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gcfacc.CountAttr)})
	}
	e.EncodeToken(start)
	_gdcbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
	for _, _cgfdc := range _gcfacc.S {
		e.EncodeElement(_cgfdc, _gdcbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cagc *CT_CalculatedItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cagc.PivotArea = NewCT_PivotArea()
	for _, _cgfdb := range start.Attr {
		if _cgfdb.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_cgg, _debe := _e.ParseUint(_cgfdb.Value, 10, 32)
			if _debe != nil {
				return _debe
			}
			_fdff := uint32(_cgg)
			_cagc.FieldAttr = &_fdff
			continue
		}
		if _cgfdb.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_aab, _cccg := _cgfdb.Value, error(nil)
			if _cccg != nil {
				return _cccg
			}
			_cagc.FormulaAttr = &_aab
			continue
		}
	}
_eebd:
	for {
		_dccg, _dfa := d.Token()
		if _dfa != nil {
			return _dfa
		}
		switch _edg := _dccg.(type) {
		case _b.StartElement:
			switch _edg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _ebea := d.DecodeElement(_cagc.PivotArea, &_edg); _ebea != nil {
					return _ebea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cagc.ExtLst = NewCT_ExtensionList()
				if _aeg := d.DecodeElement(_cagc.ExtLst, &_edg); _aeg != nil {
					return _aeg
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _edg.Name)
				if _geed := d.Skip(); _geed != nil {
					return _geed
				}
			}
		case _b.EndElement:
			break _eebd
		case _b.CharData:
		}
	}
	return nil
}

type CT_SharedItems struct {

	// Contains Semi Mixed Data Types
	ContainsSemiMixedTypesAttr *bool

	// Contains Non Date
	ContainsNonDateAttr *bool

	// Contains Date
	ContainsDateAttr *bool

	// Contains String
	ContainsStringAttr *bool

	// Contains Blank
	ContainsBlankAttr *bool

	// Contains Mixed Data Types
	ContainsMixedTypesAttr *bool

	// Contains Numbers
	ContainsNumberAttr *bool

	// Contains Integer
	ContainsIntegerAttr *bool

	// Minimum Numeric Value
	MinValueAttr *float64

	// Maximum Numeric Value
	MaxValueAttr *float64

	// Minimum Date Time
	MinDateAttr *_gb.Time

	// Maximum Date Time Value
	MaxDateAttr *_gb.Time

	// Shared Items Count
	CountAttr *uint32

	// Long Text
	LongTextAttr *bool

	// No Value
	M []*CT_Missing

	// Numeric
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

func (_cbagg *CT_SmartTagPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbagg.EmbedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006d\u0062e\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbagg.EmbedAttr))})
	}
	if _cbagg.ShowAttr != ST_SmartTagShowUnset {
		_edbgf, _ecdbd := _cbagg.ShowAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006f\u0077"})
		if _ecdbd != nil {
			return _ecdbd
		}
		start.Attr = append(start.Attr, _edbgf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bdgfc *CT_CellAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bdgfc.HorizontalAttr != ST_HorizontalAlignmentUnset {
		_cegf, _gbbb := _bdgfc.HorizontalAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"})
		if _gbbb != nil {
			return _gbbb
		}
		start.Attr = append(start.Attr, _cegf)
	}
	if _bdgfc.VerticalAttr != ST_VerticalAlignmentUnset {
		_fbag, _ababg := _bdgfc.VerticalAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"})
		if _ababg != nil {
			return _ababg
		}
		start.Attr = append(start.Attr, _fbag)
	}
	if _bdgfc.TextRotationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_bdgfc.TextRotationAttr)})
	}
	if _bdgfc.WrapTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bdgfc.WrapTextAttr))})
	}
	if _bdgfc.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bdgfc.IndentAttr)})
	}
	if _bdgfc.RelativeIndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bdgfc.RelativeIndentAttr)})
	}
	if _bdgfc.JustifyLastLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bdgfc.JustifyLastLineAttr))})
	}
	if _bdgfc.ShrinkToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bdgfc.ShrinkToFitAttr))})
	}
	if _bdgfc.ReadingOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_bdgfc.ReadingOrderAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type VolTypes struct{ CT_VolTypes }

func NewCT_Member() *CT_Member { _eceaa := &CT_Member{}; return _eceaa }
func NewCT_MdxSet() *CT_MdxSet { _fffda := &CT_MdxSet{}; return _fffda }

const (
	ST_ItemTypeUnset   ST_ItemType = 0
	ST_ItemTypeData    ST_ItemType = 1
	ST_ItemTypeDefault ST_ItemType = 2
	ST_ItemTypeSum     ST_ItemType = 3
	ST_ItemTypeCountA  ST_ItemType = 4
	ST_ItemTypeAvg     ST_ItemType = 5
	ST_ItemTypeMax     ST_ItemType = 6
	ST_ItemTypeMin     ST_ItemType = 7
	ST_ItemTypeProduct ST_ItemType = 8
	ST_ItemTypeCount   ST_ItemType = 9
	ST_ItemTypeStdDev  ST_ItemType = 10
	ST_ItemTypeStdDevP ST_ItemType = 11
	ST_ItemTypeVar     ST_ItemType = 12
	ST_ItemTypeVarP    ST_ItemType = 13
	ST_ItemTypeGrand   ST_ItemType = 14
	ST_ItemTypeBlank   ST_ItemType = 15
)

func (_dbfdgc ST_VolDepType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adgff := _b.Attr{}
	_adgff.Name = name
	switch _dbfdgc {
	case ST_VolDepTypeUnset:
		_adgff.Value = ""
	case ST_VolDepTypeRealTimeData:
		_adgff.Value = "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case ST_VolDepTypeOlapFunctions:
		_adgff.Value = "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return _adgff, nil
}
func (_bfbga *CT_IgnoredError) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agcab := range start.Attr {
		if _agcab.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_dfggc, _fbgbc := ParseSliceST_Sqref(_agcab.Value)
			if _fbgbc != nil {
				return _fbgbc
			}
			_bfbga.SqrefAttr = _dfggc
			continue
		}
		if _agcab.Name.Local == "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr" {
			_daafd, _eaegb := _e.ParseBool(_agcab.Value)
			if _eaegb != nil {
				return _eaegb
			}
			_bfbga.EvalErrorAttr = &_daafd
			continue
		}
		if _agcab.Name.Local == "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072" {
			_ecgdc, _agaaa := _e.ParseBool(_agcab.Value)
			if _agaaa != nil {
				return _agaaa
			}
			_bfbga.TwoDigitTextYearAttr = &_ecgdc
			continue
		}
		if _agcab.Name.Local == "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074" {
			_afffa, _gcfg := _e.ParseBool(_agcab.Value)
			if _gcfg != nil {
				return _gcfg
			}
			_bfbga.NumberStoredAsTextAttr = &_afffa
			continue
		}
		if _agcab.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_dcdd, _fdcgc := _e.ParseBool(_agcab.Value)
			if _fdcgc != nil {
				return _fdcgc
			}
			_bfbga.FormulaAttr = &_dcdd
			continue
		}
		if _agcab.Name.Local == "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065" {
			_ddace, _baeec := _e.ParseBool(_agcab.Value)
			if _baeec != nil {
				return _baeec
			}
			_bfbga.FormulaRangeAttr = &_ddace
			continue
		}
		if _agcab.Name.Local == "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061" {
			_eggaa, _dcdcfa := _e.ParseBool(_agcab.Value)
			if _dcdcfa != nil {
				return _dcdcfa
			}
			_bfbga.UnlockedFormulaAttr = &_eggaa
			continue
		}
		if _agcab.Name.Local == "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065" {
			_efcdd, _babeb := _e.ParseBool(_agcab.Value)
			if _babeb != nil {
				return _babeb
			}
			_bfbga.EmptyCellReferenceAttr = &_efcdd
			continue
		}
		if _agcab.Name.Local == "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e" {
			_gbeea, _dggab := _e.ParseBool(_agcab.Value)
			if _dggab != nil {
				return _dggab
			}
			_bfbga.ListDataValidationAttr = &_gbeea
			continue
		}
		if _agcab.Name.Local == "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e" {
			_dbfbf, _adgbb := _e.ParseBool(_agcab.Value)
			if _adgbb != nil {
				return _adgbb
			}
			_bfbga.CalculatedColumnAttr = &_dbfbf
			continue
		}
	}
	for {
		_bfcd, _bcgb := d.Token()
		if _bcgb != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065d\u0045\u0072\u0072o\u0072:\u0020\u0025\u0073", _bcgb)
		}
		if _dbefd, _bbafce := _bfcd.(_b.EndElement); _bbafce && _dbefd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gadga *CT_XStringElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _gadga.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_baaeg *PivotTableDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_baaeg.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	for _, _ebcee := range start.Attr {
		if _ebcee.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_dbagdf, _gdeae := _e.ParseUint(_ebcee.Value, 10, 8)
			if _gdeae != nil {
				return _gdeae
			}
			_fedafg := uint8(_dbagdf)
			_baaeg.CreatedVersionAttr = &_fedafg
			continue
		}
		if _ebcee.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_eabde, _deaedf := _e.ParseUint(_ebcee.Value, 10, 32)
			if _deaedf != nil {
				return _deaedf
			}
			_affad := uint32(_eabde)
			_baaeg.IndentAttr = &_affad
			continue
		}
		if _ebcee.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_defbf, _fedbef := _ebcee.Value, error(nil)
			if _fedbef != nil {
				return _fedbef
			}
			_baaeg.PivotTableStyleAttr = &_defbf
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_aecg, _adagdfc := _e.ParseBool(_ebcee.Value)
			if _adagdfc != nil {
				return _adagdfc
			}
			_baaeg.ShowEmptyRowAttr = &_aecg
			continue
		}
		if _ebcee.Name.Local == "\u0074\u0061\u0067" {
			_aafbg, _fgbef := _ebcee.Value, error(nil)
			if _fgbef != nil {
				return _fgbef
			}
			_baaeg.TagAttr = &_aafbg
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_befeb, _ddbefe := _e.ParseBool(_ebcee.Value)
			if _ddbefe != nil {
				return _ddbefe
			}
			_baaeg.ShowEmptyColAttr = &_befeb
			continue
		}
		if _ebcee.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gffebd, _ececda := _e.ParseUint(_ebcee.Value, 10, 8)
			if _ececda != nil {
				return _ececda
			}
			_aacea := uint8(_gffebd)
			_baaeg.MinRefreshableVersionAttr = &_aacea
			continue
		}
		if _ebcee.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_gcegaf, _cbecc := _e.ParseBool(_ebcee.Value)
			if _cbecc != nil {
				return _cbecc
			}
			_baaeg.ShowHeadersAttr = &_gcegaf
			continue
		}
		if _ebcee.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_cbaecg, _bagbce := _e.ParseBool(_ebcee.Value)
			if _bagbce != nil {
				return _bagbce
			}
			_baaeg.AsteriskTotalsAttr = &_cbaecg
			continue
		}
		if _ebcee.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_bedabc, _gbefc := _e.ParseBool(_ebcee.Value)
			if _gbefc != nil {
				return _gbefc
			}
			_baaeg.CompactAttr = &_bedabc
			continue
		}
		if _ebcee.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_gafda, _dgbcb := _e.ParseBool(_ebcee.Value)
			if _dgbcb != nil {
				return _dgbcb
			}
			_baaeg.EditDataAttr = &_gafda
			continue
		}
		if _ebcee.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_cgabd, _gccgg := _e.ParseBool(_ebcee.Value)
			if _gccgg != nil {
				return _gccgg
			}
			_baaeg.OutlineAttr = &_cgabd
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_becgd, _gfdbbf := _e.ParseBool(_ebcee.Value)
			if _gfdbbf != nil {
				return _gfdbbf
			}
			_baaeg.ShowCalcMbrsAttr = &_becgd
			continue
		}
		if _ebcee.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_gaggg, _ecbdgg := _e.ParseBool(_ebcee.Value)
			if _ecbdgg != nil {
				return _ecbdgg
			}
			_baaeg.OutlineDataAttr = &_gaggg
			continue
		}
		if _ebcee.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_dbada, _efaaba := _e.ParseBool(_ebcee.Value)
			if _efaaba != nil {
				return _efaaba
			}
			_baaeg.GridDropZonesAttr = &_dbada
			continue
		}
		if _ebcee.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_aagga, _bfddae := _e.ParseBool(_ebcee.Value)
			if _bfddae != nil {
				return _bfddae
			}
			_baaeg.CustomListSortAttr = &_aagga
			continue
		}
		if _ebcee.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_aebde, _ecfac := _e.ParseBool(_ebcee.Value)
			if _ecfac != nil {
				return _ecfac
			}
			_baaeg.RowGrandTotalsAttr = &_aebde
			continue
		}
		if _ebcee.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dacfa, _abaabe := _e.ParseBool(_ebcee.Value)
			if _abaabe != nil {
				return _abaabe
			}
			_baaeg.ApplyWidthHeightFormatsAttr = &_dacfa
			continue
		}
		if _ebcee.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_eeebee, _efabab := _e.ParseBool(_ebcee.Value)
			if _efabab != nil {
				return _efabab
			}
			_baaeg.UseAutoFormattingAttr = &_eeebee
			continue
		}
		if _ebcee.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ddefa, _faebe := _ebcee.Value, error(nil)
			if _faebe != nil {
				return _faebe
			}
			_baaeg.RowHeaderCaptionAttr = &_ddefa
			continue
		}
		if _ebcee.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_gdeeac, _gddcac := _e.ParseBool(_ebcee.Value)
			if _gddcac != nil {
				return _gddcac
			}
			_baaeg.ShowDrillAttr = &_gdeeac
			continue
		}
		if _ebcee.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_bbfdf, _ggcaa := _e.ParseBool(_ebcee.Value)
			if _ggcaa != nil {
				return _ggcaa
			}
			_baaeg.MergeItemAttr = &_bbfdf
			continue
		}
		if _ebcee.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_gbeba, _eaeab := _e.ParseBool(_ebcee.Value)
			if _eaeab != nil {
				return _eaeab
			}
			_baaeg.ApplyBorderFormatsAttr = &_gbeba
			continue
		}
		if _ebcee.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_ccdba, _fcbge := _e.ParseBool(_ebcee.Value)
			if _fcbge != nil {
				return _fcbge
			}
			_baaeg.VisualTotalsAttr = &_ccdba
			continue
		}
		if _ebcee.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_adgfa, _ddcfg := _e.ParseBool(_ebcee.Value)
			if _ddcfg != nil {
				return _ddcfg
			}
			_baaeg.CompactDataAttr = &_adgfa
			continue
		}
		if _ebcee.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_gaagf, _ggbbg := _e.ParseUint(_ebcee.Value, 10, 32)
			if _ggbbg != nil {
				return _ggbbg
			}
			_ffafbc := uint32(_gaagf)
			_baaeg.DataPositionAttr = &_ffafbc
			continue
		}
		if _ebcee.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_baacg, _afcdb := _e.ParseBool(_ebcee.Value)
			if _afcdb != nil {
				return _afcdb
			}
			_baaeg.MultipleFieldFiltersAttr = &_baacg
			continue
		}
		if _ebcee.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_eaggb, _cabffa := _e.ParseBool(_ebcee.Value)
			if _cabffa != nil {
				return _cabffa
			}
			_baaeg.PageOverThenDownAttr = &_eaggb
			continue
		}
		if _ebcee.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_dceda, _ccdbe := _e.ParseBool(_ebcee.Value)
			if _ccdbe != nil {
				return _ccdbe
			}
			_baaeg.FieldListSortAscendingAttr = &_dceda
			continue
		}
		if _ebcee.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_gbecag, _eefdbf := _e.ParseBool(_ebcee.Value)
			if _eefdbf != nil {
				return _eefdbf
			}
			_baaeg.ShowMissingAttr = &_gbecag
			continue
		}
		if _ebcee.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_agaae, _cdgbb := _e.ParseBool(_ebcee.Value)
			if _cdgbb != nil {
				return _cdgbb
			}
			_baaeg.FieldPrintTitlesAttr = &_agaae
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_debcgc, _bgcba := _e.ParseBool(_ebcee.Value)
			if _bgcba != nil {
				return _bgcba
			}
			_baaeg.ShowMemberPropertyTipsAttr = &_debcgc
			continue
		}
		if _ebcee.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_ebdbbc, _gacbd := _ebcee.Value, error(nil)
			if _gacbd != nil {
				return _gacbd
			}
			_baaeg.PageStyleAttr = &_ebdbbc
			continue
		}
		if _ebcee.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fdacb, _bgaee := _e.ParseUint(_ebcee.Value, 10, 32)
			if _bgaee != nil {
				return _bgaee
			}
			_ggab := uint32(_fdacb)
			_baaeg.AutoFormatIdAttr = &_ggab
			continue
		}
		if _ebcee.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_ecgfd, _cfbfc := _e.ParseBool(_ebcee.Value)
			if _cfbfc != nil {
				return _cfbfc
			}
			_baaeg.ShowItemsAttr = &_ecgfd
			continue
		}
		if _ebcee.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bbgcf, _bacfd := _e.ParseBool(_ebcee.Value)
			if _bacfd != nil {
				return _bacfd
			}
			_baaeg.ApplyPatternFormatsAttr = &_bbgcf
			continue
		}
		if _ebcee.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_fgcbeg, _gfefg := _e.ParseBool(_ebcee.Value)
			if _gfefg != nil {
				return _gfefg
			}
			_baaeg.EnableFieldPropertiesAttr = &_fgcbeg
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_dedcdc, _eeggg := _e.ParseBool(_ebcee.Value)
			if _eeggg != nil {
				return _eeggg
			}
			_baaeg.ShowMultipleLabelAttr = &_dedcdc
			continue
		}
		if _ebcee.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_adeac, _ffcaag := _e.ParseBool(_ebcee.Value)
			if _ffcaag != nil {
				return _ffcaag
			}
			_baaeg.PreserveFormattingAttr = &_adeac
			continue
		}
		if _ebcee.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_faead, _bfafbc := _e.ParseBool(_ebcee.Value)
			if _bfafbc != nil {
				return _bfafbc
			}
			_baaeg.PublishedAttr = &_faead
			continue
		}
		if _ebcee.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_adggcd, _aafgfc := _ebcee.Value, error(nil)
			if _aafgfc != nil {
				return _aafgfc
			}
			_baaeg.MissingCaptionAttr = &_adggcd
			continue
		}
		if _ebcee.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_ccbag, _ceggc := _e.ParseBool(_ebcee.Value)
			if _ceggc != nil {
				return _ceggc
			}
			_baaeg.ImmersiveAttr = &_ccbag
			continue
		}
		if _ebcee.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_edfdg, _dbafeg := _e.ParseUint(_ebcee.Value, 10, 32)
			if _dbafeg != nil {
				return _dbafeg
			}
			_eaeeab := uint32(_edfdg)
			_baaeg.PageWrapAttr = &_eaeeab
			continue
		}
		if _ebcee.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_debbaa, _bcbbf := _e.ParseUint(_ebcee.Value, 10, 32)
			if _bcbbf != nil {
				return _bcbbf
			}
			_dbbfee := uint32(_debbaa)
			_baaeg.ChartFormatAttr = &_dbbfee
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_dacgc, _eefgf := _e.ParseBool(_ebcee.Value)
			if _eefgf != nil {
				return _eefgf
			}
			_baaeg.ShowDataDropDownAttr = &_dacgc
			continue
		}
		if _ebcee.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_eagab, _bafbb := _ebcee.Value, error(nil)
			if _bafbb != nil {
				return _bafbb
			}
			_baaeg.ColHeaderCaptionAttr = &_eagab
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_ccdfce, _dfcbe := _e.ParseBool(_ebcee.Value)
			if _dfcbe != nil {
				return _dfcbe
			}
			_baaeg.SubtotalHiddenItemsAttr = &_ccdfce
			continue
		}
		if _ebcee.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_bagfd, _aageg := _e.ParseBool(_ebcee.Value)
			if _aageg != nil {
				return _aageg
			}
			_baaeg.MdxSubqueriesAttr = &_bagfd
			continue
		}
		if _ebcee.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_abdbec, _fbfdgd := _ebcee.Value, error(nil)
			if _fbfdgd != nil {
				return _fbfdgd
			}
			_baaeg.ErrorCaptionAttr = &_abdbec
			continue
		}
		if _ebcee.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_fegff, _baedd := _e.ParseBool(_ebcee.Value)
			if _baedd != nil {
				return _baedd
			}
			_baaeg.ColGrandTotalsAttr = &_fegff
			continue
		}
		if _ebcee.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_efffc, _gbgacd := _e.ParseBool(_ebcee.Value)
			if _gbgacd != nil {
				return _gbgacd
			}
			_baaeg.PrintDrillAttr = &_efffc
			continue
		}
		if _ebcee.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_cbddc, _beagg := _e.ParseBool(_ebcee.Value)
			if _beagg != nil {
				return _beagg
			}
			_baaeg.ItemPrintTitlesAttr = &_cbddc
			continue
		}
		if _ebcee.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcfbc, _gegec := _ebcee.Value, error(nil)
			if _gegec != nil {
				return _gegec
			}
			_baaeg.NameAttr = _dcfbc
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_bcdfcaa, _dcaac := _e.ParseBool(_ebcee.Value)
			if _dcaac != nil {
				return _dcaac
			}
			_baaeg.ShowDropZonesAttr = &_bcdfcaa
			continue
		}
		if _ebcee.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_bebcga, _bffbf := _e.ParseBool(_ebcee.Value)
			if _bffbf != nil {
				return _bffbf
			}
			_baaeg.ShowDataTipsAttr = &_bebcga
			continue
		}
		if _ebcee.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_fgeacf, _gebebge := _ebcee.Value, error(nil)
			if _gebebge != nil {
				return _gebebge
			}
			_baaeg.VacatedStyleAttr = &_fgeacf
			continue
		}
		if _ebcee.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_facae, _cddaed := _ebcee.Value, error(nil)
			if _cddaed != nil {
				return _cddaed
			}
			_baaeg.GrandTotalCaptionAttr = &_facae
			continue
		}
		if _ebcee.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ecbacg, _bbfgf := _e.ParseBool(_ebcee.Value)
			if _bbfgf != nil {
				return _bbfgf
			}
			_baaeg.ApplyNumberFormatsAttr = &_ecbacg
			continue
		}
		if _ebcee.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_ccdgd, _bbdafg := _e.ParseBool(_ebcee.Value)
			if _bbdafg != nil {
				return _bbdafg
			}
			_baaeg.EnableDrillAttr = &_ccdgd
			continue
		}
		if _ebcee.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ffggc, _beadd := _e.ParseBool(_ebcee.Value)
			if _beadd != nil {
				return _beadd
			}
			_baaeg.ApplyFontFormatsAttr = &_ffggc
			continue
		}
		if _ebcee.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_efgaa, _eadec := _e.ParseBool(_ebcee.Value)
			if _eadec != nil {
				return _eadec
			}
			_baaeg.DisableFieldListAttr = &_efgaa
			continue
		}
		if _ebcee.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fcdfgd, _cfagfd := _e.ParseBool(_ebcee.Value)
			if _cfagfd != nil {
				return _cfagfd
			}
			_baaeg.ApplyAlignmentFormatsAttr = &_fcdfgd
			continue
		}
		if _ebcee.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_beaccb, _ececf := _e.ParseBool(_ebcee.Value)
			if _ececf != nil {
				return _ececf
			}
			_baaeg.DataOnRowsAttr = &_beaccb
			continue
		}
		if _ebcee.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_afcge, _deeaa := _ebcee.Value, error(nil)
			if _deeaa != nil {
				return _deeaa
			}
			_baaeg.DataCaptionAttr = _afcge
			continue
		}
		if _ebcee.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_cbbfe, _bdgae := _e.ParseBool(_ebcee.Value)
			if _bdgae != nil {
				return _bdgae
			}
			_baaeg.ShowErrorAttr = &_cbbfe
			continue
		}
		if _ebcee.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_agdgb, _cagccg := _e.ParseUint(_ebcee.Value, 10, 32)
			if _cagccg != nil {
				return _cagccg
			}
			_baaeg.CacheIdAttr = uint32(_agdgb)
			continue
		}
		if _ebcee.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_cbagf, _bfaeag := _e.ParseBool(_ebcee.Value)
			if _bfaeag != nil {
				return _bfaeag
			}
			_baaeg.EnableWizardAttr = &_cbagf
			continue
		}
		if _ebcee.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_cfgbgd, _egbea := _e.ParseUint(_ebcee.Value, 10, 8)
			if _egbea != nil {
				return _egbea
			}
			_edgcc := uint8(_cfgbgd)
			_baaeg.UpdatedVersionAttr = &_edgcc
			continue
		}
	}
_beabc:
	for {
		_gacecg, _dfded := d.Token()
		if _dfded != nil {
			return _dfded
		}
		switch _fabacg := _gacecg.(type) {
		case _b.StartElement:
			switch _fabacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _dgega := d.DecodeElement(_baaeg.Location, &_fabacg); _dgega != nil {
					return _dgega
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_baaeg.PivotFields = NewCT_PivotFields()
				if _fdebcf := d.DecodeElement(_baaeg.PivotFields, &_fabacg); _fdebcf != nil {
					return _fdebcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_baaeg.RowFields = NewCT_RowFields()
				if _gcdcd := d.DecodeElement(_baaeg.RowFields, &_fabacg); _gcdcd != nil {
					return _gcdcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_baaeg.RowItems = NewCT_rowItems()
				if _beaaa := d.DecodeElement(_baaeg.RowItems, &_fabacg); _beaaa != nil {
					return _beaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_baaeg.ColFields = NewCT_ColFields()
				if _dafdbc := d.DecodeElement(_baaeg.ColFields, &_fabacg); _dafdbc != nil {
					return _dafdbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_baaeg.ColItems = NewCT_colItems()
				if _ecgea := d.DecodeElement(_baaeg.ColItems, &_fabacg); _ecgea != nil {
					return _ecgea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_baaeg.PageFields = NewCT_PageFields()
				if _febcda := d.DecodeElement(_baaeg.PageFields, &_fabacg); _febcda != nil {
					return _febcda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_baaeg.DataFields = NewCT_DataFields()
				if _eaegf := d.DecodeElement(_baaeg.DataFields, &_fabacg); _eaegf != nil {
					return _eaegf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_baaeg.Formats = NewCT_Formats()
				if _aedeb := d.DecodeElement(_baaeg.Formats, &_fabacg); _aedeb != nil {
					return _aedeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_baaeg.ConditionalFormats = NewCT_ConditionalFormats()
				if _cgdba := d.DecodeElement(_baaeg.ConditionalFormats, &_fabacg); _cgdba != nil {
					return _cgdba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_baaeg.ChartFormats = NewCT_ChartFormats()
				if _fdgcg := d.DecodeElement(_baaeg.ChartFormats, &_fabacg); _fdgcg != nil {
					return _fdgcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_baaeg.PivotHierarchies = NewCT_PivotHierarchies()
				if _eecaa := d.DecodeElement(_baaeg.PivotHierarchies, &_fabacg); _eecaa != nil {
					return _eecaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_baaeg.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _dccaf := d.DecodeElement(_baaeg.PivotTableStyleInfo, &_fabacg); _dccaf != nil {
					return _dccaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_baaeg.Filters = NewCT_PivotFilters()
				if _cbaad := d.DecodeElement(_baaeg.Filters, &_fabacg); _cbaad != nil {
					return _cbaad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_baaeg.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _bgbagd := d.DecodeElement(_baaeg.RowHierarchiesUsage, &_fabacg); _bgbagd != nil {
					return _bgbagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_baaeg.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _ecfdfe := d.DecodeElement(_baaeg.ColHierarchiesUsage, &_fabacg); _ecfdfe != nil {
					return _ecfdfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_baaeg.ExtLst = NewCT_ExtensionList()
				if _ffecfa := d.DecodeElement(_baaeg.ExtLst, &_fabacg); _ffecfa != nil {
					return _ffecfa
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _fabacg.Name)
				if _cddcf := d.Skip(); _cddcf != nil {
					return _cddcf
				}
			}
		case _b.EndElement:
			break _beabc
		case _b.CharData:
		}
	}
	return nil
}
func (_cbfec *CT_DataRef) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febg := range start.Attr {
		if _febg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _febg.Name.Local == "\u0069\u0064" || _febg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _febg.Name.Local == "\u0069\u0064" {
			_cbebg, _bbfd := _febg.Value, error(nil)
			if _bbfd != nil {
				return _bbfd
			}
			_cbfec.IdAttr = &_cbebg
			continue
		}
		if _febg.Name.Local == "\u0072\u0065\u0066" {
			_eefed, _ddcc := _febg.Value, error(nil)
			if _ddcc != nil {
				return _ddcc
			}
			_cbfec.RefAttr = &_eefed
			continue
		}
		if _febg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_deefg, _ffcg := _febg.Value, error(nil)
			if _ffcg != nil {
				return _ffcg
			}
			_cbfec.NameAttr = &_deefg
			continue
		}
		if _febg.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_gdcfa, _bgdgb := _febg.Value, error(nil)
			if _bgdgb != nil {
				return _bgdgb
			}
			_cbfec.SheetAttr = &_gdcfa
			continue
		}
	}
	for {
		_affc, _ebdca := d.Token()
		if _ebdca != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u003a\u0020%\u0073", _ebdca)
		}
		if _dgddc, _aacd := _affc.(_b.EndElement); _aacd && _dgddc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_GroupMembers() *CT_GroupMembers { _eaga := &CT_GroupMembers{}; return _eaga }
func (_afdeg *CT_TextPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afdeg.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.PromptAttr))})
	}
	if _afdeg.FileTypeAttr != ST_FileTypeUnset {
		_bgebg, _fbegc := _afdeg.FileTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065"})
		if _fbegc != nil {
			return _fbegc
		}
		start.Attr = append(start.Attr, _bgebg)
	}
	if _afdeg.CodePageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.CodePageAttr)})
	}
	if _afdeg.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.CharacterSetAttr)})
	}
	if _afdeg.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.FirstRowAttr)})
	}
	if _afdeg.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.SourceFileAttr)})
	}
	if _afdeg.DelimitedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.DelimitedAttr))})
	}
	if _afdeg.DecimalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0063\u0069\u006d\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.DecimalAttr)})
	}
	if _afdeg.ThousandsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.ThousandsAttr)})
	}
	if _afdeg.TabAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.TabAttr))})
	}
	if _afdeg.SpaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0061c\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.SpaceAttr))})
	}
	if _afdeg.CommaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006dm\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.CommaAttr))})
	}
	if _afdeg.SemicolonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.SemicolonAttr))})
	}
	if _afdeg.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdeg.ConsecutiveAttr))})
	}
	if _afdeg.QualifierAttr != ST_QualifierUnset {
		_gbeec, _cgggb := _afdeg.QualifierAttr.MarshalXMLAttr(_b.Name{Local: "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r"})
		if _cgggb != nil {
			return _cgggb
		}
		start.Attr = append(start.Attr, _gbeec)
	}
	if _afdeg.DelimiterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r"}, Value: _f.Sprintf("\u0025\u0076", *_afdeg.DelimiterAttr)})
	}
	e.EncodeToken(start)
	if _afdeg.TextFields != nil {
		_debcda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_afdeg.TextFields, _debcda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataRef() *CT_DataRef { _cbcb := &CT_DataRef{}; return _cbcb }
func (_daea *CT_Control) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _daea.ShapeIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _daea.IdAttr)})
	if _daea.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_daea.NameAttr)})
	}
	e.EncodeToken(start)
	if _daea.ControlPr != nil {
		_ebgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"}}
		e.EncodeElement(_daea.ControlPr, _ebgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bffa *CT_CustomSheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bffa.GuidAttr)})
	if _bffa.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bffa.ScaleAttr)})
	}
	if _bffa.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bffa.ColorIdAttr)})
	}
	if _bffa.ShowPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ShowPageBreaksAttr))})
	}
	if _bffa.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ShowFormulasAttr))})
	}
	if _bffa.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ShowGridLinesAttr))})
	}
	if _bffa.ShowRowColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ShowRowColAttr))})
	}
	if _bffa.OutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.OutlineSymbolsAttr))})
	}
	if _bffa.ZeroValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ZeroValuesAttr))})
	}
	if _bffa.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.FitToPageAttr))})
	}
	if _bffa.PrintAreaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.PrintAreaAttr))})
	}
	if _bffa.FilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.FilterAttr))})
	}
	if _bffa.ShowAutoFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ShowAutoFilterAttr))})
	}
	if _bffa.HiddenRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.HiddenRowsAttr))})
	}
	if _bffa.HiddenColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.HiddenColumnsAttr))})
	}
	if _bffa.StateAttr != ST_SheetStateUnset {
		_ddbag, _ddaa := _bffa.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _ddaa != nil {
			return _ddaa
		}
		start.Attr = append(start.Attr, _ddbag)
	}
	if _bffa.FilterUniqueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.FilterUniqueAttr))})
	}
	if _bffa.ViewAttr != ST_SheetViewTypeUnset {
		_ecdad, _befda := _bffa.ViewAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _befda != nil {
			return _befda
		}
		start.Attr = append(start.Attr, _ecdad)
	}
	if _bffa.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bffa.ShowRulerAttr))})
	}
	if _bffa.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_bffa.TopLeftCellAttr)})
	}
	e.EncodeToken(start)
	if _bffa.Pane != nil {
		_edee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_bffa.Pane, _edee)
	}
	if _bffa.Selection != nil {
		_agcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_bffa.Selection, _agcb)
	}
	if _bffa.RowBreaks != nil {
		_gbadf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_bffa.RowBreaks, _gbadf)
	}
	if _bffa.ColBreaks != nil {
		_fffc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_bffa.ColBreaks, _fffc)
	}
	if _bffa.PageMargins != nil {
		_aagca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_bffa.PageMargins, _aagca)
	}
	if _bffa.PrintOptions != nil {
		_dcfeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_bffa.PrintOptions, _dcfeb)
	}
	if _bffa.PageSetup != nil {
		_acfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_bffa.PageSetup, _acfc)
	}
	if _bffa.HeaderFooter != nil {
		_caac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_bffa.HeaderFooter, _caac)
	}
	if _bffa.AutoFilter != nil {
		_aecac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_bffa.AutoFilter, _aecac)
	}
	if _bffa.ExtLst != nil {
		_egge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bffa.ExtLst, _egge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbcgc ST_DvAspect) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_beccg := _b.Attr{}
	_beccg.Name = name
	switch _cbcgc {
	case ST_DvAspectUnset:
		_beccg.Value = ""
	case ST_DvAspectDVASPECT_CONTENT:
		_beccg.Value = "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case ST_DvAspectDVASPECT_ICON:
		_beccg.Value = "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return _beccg, nil
}

// Validate validates the CT_CustomProperties and its children
func (_efbcf *CT_CustomProperties) Validate() error {
	return _efbcf.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_Authors and its children
func (_ceb *CT_Authors) Validate() error {
	return _ceb.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073")
}
func (_dbdgf *CT_PivotArea) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffeac := range start.Attr {
		if _ffeac.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_begdb, _fbbef := _e.ParseBool(_ffeac.Value)
			if _fbbef != nil {
				return _fbbef
			}
			_dbdgf.OutlineAttr = &_begdb
			continue
		}
		if _ffeac.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_bfefd, _dbdeb := _e.ParseInt(_ffeac.Value, 10, 32)
			if _dbdeb != nil {
				return _dbdeb
			}
			_dcgebe := int32(_bfefd)
			_dbdgf.FieldAttr = &_dcgebe
			continue
		}
		if _ffeac.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079" {
			_gggff, _aded := _e.ParseBool(_ffeac.Value)
			if _aded != nil {
				return _aded
			}
			_dbdgf.DataOnlyAttr = &_gggff
			continue
		}
		if _ffeac.Name.Local == "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy" {
			_bgdde, _agcdf := _e.ParseBool(_ffeac.Value)
			if _agcdf != nil {
				return _agcdf
			}
			_dbdgf.LabelOnlyAttr = &_bgdde
			continue
		}
		if _ffeac.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077" {
			_eacfgc, _dfcgc := _e.ParseBool(_ffeac.Value)
			if _dfcgc != nil {
				return _dfcgc
			}
			_dbdgf.GrandRowAttr = &_eacfgc
			continue
		}
		if _ffeac.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c" {
			_edbb, _bafga := _e.ParseBool(_ffeac.Value)
			if _bafga != nil {
				return _bafga
			}
			_dbdgf.GrandColAttr = &_edbb
			continue
		}
		if _ffeac.Name.Local == "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078" {
			_dgcgda, _fcbcb := _e.ParseBool(_ffeac.Value)
			if _fcbcb != nil {
				return _fcbcb
			}
			_dbdgf.CacheIndexAttr = &_dgcgda
			continue
		}
		if _ffeac.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dbdgf.TypeAttr.UnmarshalXMLAttr(_ffeac)
			continue
		}
		if _ffeac.Name.Local == "\u006f\u0066\u0066\u0073\u0065\u0074" {
			_gdfeba, _ddffc := _ffeac.Value, error(nil)
			if _ddffc != nil {
				return _ddffc
			}
			_dbdgf.OffsetAttr = &_gdfeba
			continue
		}
		if _ffeac.Name.Local == "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073" {
			_aedgb, _fccccg := _e.ParseBool(_ffeac.Value)
			if _fccccg != nil {
				return _fccccg
			}
			_dbdgf.CollapsedLevelsAreSubtotalsAttr = &_aedgb
			continue
		}
		if _ffeac.Name.Local == "\u0061\u0078\u0069\u0073" {
			_dbdgf.AxisAttr.UnmarshalXMLAttr(_ffeac)
			continue
		}
		if _ffeac.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ccgffg, _cbgae := _e.ParseUint(_ffeac.Value, 10, 32)
			if _cbgae != nil {
				return _cbgae
			}
			_acabab := uint32(_ccgffg)
			_dbdgf.FieldPositionAttr = &_acabab
			continue
		}
	}
_gbede:
	for {
		_edged, _dageaf := d.Token()
		if _dageaf != nil {
			return _dageaf
		}
		switch _faeead := _edged.(type) {
		case _b.StartElement:
			switch _faeead.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}:
				_dbdgf.References = NewCT_PivotAreaReferences()
				if _dccfe := d.DecodeElement(_dbdgf.References, &_faeead); _dccfe != nil {
					return _dccfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbdgf.ExtLst = NewCT_ExtensionList()
				if _gfggfa := d.DecodeElement(_dbdgf.ExtLst, &_faeead); _gfggfa != nil {
					return _gfggfa
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u0020\u0025\u0076", _faeead.Name)
				if _egfcg := d.Skip(); _egfcg != nil {
					return _egfcg
				}
			}
		case _b.EndElement:
			break _gbede
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotArea and its children
func (_cfeff *CT_PivotArea) Validate() error {
	return _cfeff.ValidateWithPath("\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061")
}

// Validate validates the CT_Colors and its children
func (_aggc *CT_Colors) Validate() error {
	return _aggc.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s")
}

// Validate validates the CT_CacheSource and its children
func (_bbgg *CT_CacheSource) Validate() error {
	return _bbgg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065")
}
func (_gggbfc ST_CellComments) ValidateWithPath(path string) error {
	switch _gggbfc {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gggbfc))
	}
	return nil
}

const (
	ST_FormatActionUnset      ST_FormatAction = 0
	ST_FormatActionBlank      ST_FormatAction = 1
	ST_FormatActionFormatting ST_FormatAction = 2
	ST_FormatActionDrill      ST_FormatAction = 3
	ST_FormatActionFormula    ST_FormatAction = 4
)

// Validate validates the CT_QueryTableRefresh and its children
func (_fbgba *CT_QueryTableRefresh) Validate() error {
	return _fbgba.ValidateWithPath("C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068")
}
func (_fgadg *CT_QueryCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgadg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fgadg.CountAttr)})
	}
	e.EncodeToken(start)
	_bbggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079"}}
	for _, _gaceed := range _fgadg.Query {
		e.EncodeElement(_gaceed, _bbggc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dggfc *CT_PivotCaches) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cfcdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}}
	for _, _gabbf := range _dggfc.PivotCache {
		e.EncodeElement(_gabbf, _cfcdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Groups and its children, prefixing error messages with path
func (_eegd *CT_Groups) ValidateWithPath(path string) error {
	for _becac, _fbccd := range _eegd.Group {
		if _aggdf := _fbccd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fG\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _becac)); _aggdf != nil {
			return _aggdf
		}
	}
	return nil
}
func (_dgceee *CT_Pane) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgceee.XSplitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0053\u0070\u006c\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dgceee.XSplitAttr)})
	}
	if _dgceee.YSplitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079\u0053\u0070\u006c\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dgceee.YSplitAttr)})
	}
	if _dgceee.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_dgceee.TopLeftCellAttr)})
	}
	if _dgceee.ActivePaneAttr != ST_PaneUnset {
		_cafdde, _dcfcc := _dgceee.ActivePaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065"})
		if _dcfcc != nil {
			return _dcfcc
		}
		start.Attr = append(start.Attr, _cafdde)
	}
	if _dgceee.StateAttr != ST_PaneStateUnset {
		_ggffd, _gbbfb := _dgceee.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gbbfb != nil {
			return _gbbfb
		}
		start.Attr = append(start.Attr, _ggffd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CustomProperty struct {

	// Custom Property Name
	NameAttr string
	IdAttr   string
}

// ValidateWithPath validates the CT_DataBinding and its children, prefixing error messages with path
func (_dbbgc *CT_DataBinding) ValidateWithPath(path string) error { return nil }

type CT_CacheHierarchies struct {

	// Hierarchy Count
	CountAttr *uint32

	// PivotCache Hierarchy
	CacheHierarchy []*CT_CacheHierarchy
}

func NewCT_Hyperlink() *CT_Hyperlink { _cabdc := &CT_Hyperlink{}; return _cabdc }
func (_ccbec ST_PatternType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ccbec.String(), start)
}

// ValidateWithPath validates the CT_SheetIdMap and its children, prefixing error messages with path
func (_efgff *CT_SheetIdMap) ValidateWithPath(path string) error {
	for _degfg, _fgagac := range _efgff.SheetId {
		if _fdfcf := _fgagac.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0065\u0065\u0074\u0049d\u005b\u0025\u0064\u005d", path, _degfg)); _fdfcf != nil {
			return _fdfcf
		}
	}
	return nil
}

type CT_SmartTagTypes struct {

	// Smart Tag Type
	SmartTagType []*CT_SmartTagType
}

func (_fbffca ST_Objects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbffca.String(), start)
}
func (_baefef *CT_NumFmt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfcce := range start.Attr {
		if _gfcce.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_cdfbf, _dccd := _e.ParseUint(_gfcce.Value, 10, 32)
			if _dccd != nil {
				return _dccd
			}
			_baefef.NumFmtIdAttr = uint32(_cdfbf)
			continue
		}
		if _gfcce.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065" {
			_faeggb, _defbg := _gfcce.Value, error(nil)
			if _defbg != nil {
				return _defbg
			}
			_baefef.FormatCodeAttr = _faeggb
			continue
		}
	}
	for {
		_gcdcb, _abdbg := d.Token()
		if _abdbg != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004e\u0075\u006dF\u006d\u0074\u003a\u0020\u0025\u0073", _abdbg)
		}
		if _bfbgb, _fgcad := _gcdcb.(_b.EndElement); _fgcad && _bfbgb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PageSetUpPr and its children, prefixing error messages with path
func (_ebaab *CT_PageSetUpPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_FieldsUsage and its children
func (_ggbgc *CT_FieldsUsage) Validate() error {
	return _ggbgc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065")
}
func (_cggd *CT_Fills) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aggcf := range start.Attr {
		if _aggcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cffad, _ecaaf := _e.ParseUint(_aggcf.Value, 10, 32)
			if _ecaaf != nil {
				return _ecaaf
			}
			_cagge := uint32(_cffad)
			_cggd.CountAttr = &_cagge
			continue
		}
	}
_bgdbb:
	for {
		_dbeaa, _begdd := d.Token()
		if _begdd != nil {
			return _begdd
		}
		switch _fffcea := _dbeaa.(type) {
		case _b.StartElement:
			switch _fffcea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fbfca := NewCT_Fill()
				if _geafb := d.DecodeElement(_fbfca, &_fffcea); _geafb != nil {
					return _geafb
				}
				_cggd.Fill = append(_cggd.Fill, _fbfca)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073\u0020\u0025\u0076", _fffcea.Name)
				if _gefde := d.Skip(); _gefde != nil {
					return _gefde
				}
			}
		case _b.EndElement:
			break _bgdbb
		case _b.CharData:
		}
	}
	return nil
}
func (_cedggg ST_SortType) ValidateWithPath(path string) error {
	switch _cedggg {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cedggg))
	}
	return nil
}
func (_facbgd *CT_QueryCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aabaf := range start.Attr {
		if _aabaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebbda, _fdege := _e.ParseUint(_aabaf.Value, 10, 32)
			if _fdege != nil {
				return _fdege
			}
			_bfafb := uint32(_ebbda)
			_facbgd.CountAttr = &_bfafb
			continue
		}
	}
_efcee:
	for {
		_abacf, _cbfbbc := d.Token()
		if _cbfbbc != nil {
			return _cbfbbc
		}
		switch _dadef := _abacf.(type) {
		case _b.StartElement:
			switch _dadef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}:
				_bfgd := NewCT_Query()
				if _fcbgag := d.DecodeElement(_bfgd, &_dadef); _fcbgag != nil {
					return _fcbgag
				}
				_facbgd.Query = append(_facbgd.Query, _bfgd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _dadef.Name)
				if _cgdec := d.Skip(); _cgdec != nil {
					return _cgdec
				}
			}
		case _b.EndElement:
			break _efcee
		case _b.CharData:
		}
	}
	return nil
}

type CT_RgbColor struct {

	// Alpha Red Green Blue
	RgbAttr *string
}
type CT_SingleXmlCell struct {

	// Table Id
	IdAttr uint32

	// Reference
	RAttr string

	// Connection ID
	ConnectionIdAttr uint32

	// Cell Properties
	XmlCellPr *CT_XmlCellPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_WebPublishObject and its children
func (_bbeede *CT_WebPublishObject) Validate() error {
	return _bbeede.ValidateWithPath("\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074")
}
func (_befcgd *Headers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_befcgd.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	for _, _fgfaf := range start.Attr {
		if _fgfaf.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_ecafeb, _cbdbc := _e.ParseBool(_fgfaf.Value)
			if _cbdbc != nil {
				return _cbdbc
			}
			_befcgd.ExclusiveAttr = &_ecafeb
			continue
		}
		if _fgfaf.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_gcaedf, _cfggf := _fgfaf.Value, error(nil)
			if _cfggf != nil {
				return _cfggf
			}
			_befcgd.LastGuidAttr = &_gcaedf
			continue
		}
		if _fgfaf.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_afcfb, _eccaa := _e.ParseBool(_fgfaf.Value)
			if _eccaa != nil {
				return _eccaa
			}
			_befcgd.SharedAttr = &_afcfb
			continue
		}
		if _fgfaf.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_dacgg, _defgd := _e.ParseBool(_fgfaf.Value)
			if _defgd != nil {
				return _defgd
			}
			_befcgd.DiskRevisionsAttr = &_dacgg
			continue
		}
		if _fgfaf.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_fcbgdc, _ceaaa := _e.ParseBool(_fgfaf.Value)
			if _ceaaa != nil {
				return _ceaaa
			}
			_befcgd.HistoryAttr = &_fcbgdc
			continue
		}
		if _fgfaf.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_edcad, _geabe := _e.ParseBool(_fgfaf.Value)
			if _geabe != nil {
				return _geabe
			}
			_befcgd.TrackRevisionsAttr = &_edcad
			continue
		}
		if _fgfaf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_badge, _cbgaf := _fgfaf.Value, error(nil)
			if _cbgaf != nil {
				return _cbgaf
			}
			_befcgd.GuidAttr = _badge
			continue
		}
		if _fgfaf.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_ecdcdb, _adfd := _e.ParseUint(_fgfaf.Value, 10, 32)
			if _adfd != nil {
				return _adfd
			}
			_addbf := uint32(_ecdcdb)
			_befcgd.RevisionIdAttr = &_addbf
			continue
		}
		if _fgfaf.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_fegdg, _acfec := _e.ParseInt(_fgfaf.Value, 10, 32)
			if _acfec != nil {
				return _acfec
			}
			_eegdag := int32(_fegdg)
			_befcgd.VersionAttr = &_eegdag
			continue
		}
		if _fgfaf.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_fegcf, _fdggg := _e.ParseBool(_fgfaf.Value)
			if _fdggg != nil {
				return _fdggg
			}
			_befcgd.KeepChangeHistoryAttr = &_fegcf
			continue
		}
		if _fgfaf.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_dfbdb, _dafbe := _e.ParseBool(_fgfaf.Value)
			if _dafbe != nil {
				return _dafbe
			}
			_befcgd.ProtectedAttr = &_dfbdb
			continue
		}
		if _fgfaf.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_gacfca, _affba := _e.ParseUint(_fgfaf.Value, 10, 32)
			if _affba != nil {
				return _affba
			}
			_bbbbc := uint32(_gacfca)
			_befcgd.PreserveHistoryAttr = &_bbbbc
			continue
		}
	}
_dbaaf:
	for {
		_adfga, _adeef := d.Token()
		if _adeef != nil {
			return _adeef
		}
		switch _baafb := _adfga.(type) {
		case _b.StartElement:
			switch _baafb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_gfbfe := NewCT_RevisionHeader()
				if _bedaa := d.DecodeElement(_gfbfe, &_baafb); _bedaa != nil {
					return _bedaa
				}
				_befcgd.Header = append(_befcgd.Header, _gfbfe)
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048e\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _baafb.Name)
				if _agdbgg := d.Skip(); _agdbgg != nil {
					return _agdbgg
				}
			}
		case _b.EndElement:
			break _dbaaf
		case _b.CharData:
		}
	}
	return nil
}
func (_abcce ST_SortBy) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ffeeb := _b.Attr{}
	_ffeeb.Name = name
	switch _abcce {
	case ST_SortByUnset:
		_ffeeb.Value = ""
	case ST_SortByValue:
		_ffeeb.Value = "\u0076\u0061\u006cu\u0065"
	case ST_SortByCellColor:
		_ffeeb.Value = "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case ST_SortByFontColor:
		_ffeeb.Value = "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case ST_SortByIcon:
		_ffeeb.Value = "\u0069\u0063\u006f\u006e"
	}
	return _ffeeb, nil
}
func NewCT_OleLink() *CT_OleLink { _bcecc := &CT_OleLink{}; return _bcecc }
func (_eefeg *CT_OleItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gebfe:
	for {
		_dcfffd, _ccgcg := d.Token()
		if _ccgcg != nil {
			return _ccgcg
		}
		switch _ddced := _dcfffd.(type) {
		case _b.StartElement:
			switch _ddced.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}:
				_dfedd := NewCT_OleItem()
				if _efefac := d.DecodeElement(_dfedd, &_ddced); _efefac != nil {
					return _efefac
				}
				_eefeg.OleItem = append(_eefeg.OleItem, _dfedd)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _ddced.Name)
				if _cddc := d.Skip(); _cddc != nil {
					return _cddc
				}
			}
		case _b.EndElement:
			break _gebfe
		case _b.CharData:
		}
	}
	return nil
}
func (_deegcb ST_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_deegcb.String(), start)
}
func NewCT_Xf() *CT_Xf { _aaadd := &CT_Xf{}; return _aaadd }
func (_ebdfe ST_RefMode) String() string {
	switch _ebdfe {
	case 0:
		return ""
	case 1:
		return "\u0041\u0031"
	case 2:
		return "\u0052\u0031\u0043\u0031"
	}
	return ""
}

type CT_FieldsUsage struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field Id
	FieldUsage []*CT_FieldUsage
}

func (_affgb *CT_IconFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_eebgce, _bfbadc := _affgb.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
	if _bfbadc != nil {
		return _bfbadc
	}
	start.Attr = append(start.Attr, _eebgce)
	if _affgb.IconIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_affgb.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalReference and its children
func (_ceedb *CT_ExternalReference) Validate() error {
	return _ceedb.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065")
}

// Validate validates the CT_DataField and its children
func (_cafb *CT_DataField) Validate() error {
	return _cafb.ValidateWithPath("\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064")
}
func (_edeb *CT_CfRule) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abcc := range start.Attr {
		if _abcc.Name.Local == "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064" {
			_edeb.TimePeriodAttr.UnmarshalXMLAttr(_abcc)
			continue
		}
		if _abcc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_edeb.TypeAttr.UnmarshalXMLAttr(_abcc)
			continue
		}
		if _abcc.Name.Local == "\u0072\u0061\u006e\u006b" {
			_dcbgf, _aga := _e.ParseUint(_abcc.Value, 10, 32)
			if _aga != nil {
				return _aga
			}
			_gegc := uint32(_dcbgf)
			_edeb.RankAttr = &_gegc
			continue
		}
		if _abcc.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_aebd, _cbgd := _e.ParseInt(_abcc.Value, 10, 32)
			if _cbgd != nil {
				return _cbgd
			}
			_edeb.PriorityAttr = int32(_aebd)
			continue
		}
		if _abcc.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076" {
			_dcbgfd, _fddeg := _e.ParseInt(_abcc.Value, 10, 32)
			if _fddeg != nil {
				return _fddeg
			}
			_fbed := int32(_dcbgfd)
			_edeb.StdDevAttr = &_fbed
			continue
		}
		if _abcc.Name.Local == "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_eece, _dbcf := _e.ParseBool(_abcc.Value)
			if _dbcf != nil {
				return _dbcf
			}
			_edeb.AboveAverageAttr = &_eece
			continue
		}
		if _abcc.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_gfdba, _egcc := _e.ParseBool(_abcc.Value)
			if _egcc != nil {
				return _egcc
			}
			_edeb.BottomAttr = &_gfdba
			continue
		}
		if _abcc.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_edeb.OperatorAttr.UnmarshalXMLAttr(_abcc)
			continue
		}
		if _abcc.Name.Local == "\u0074\u0065\u0078\u0074" {
			_gfe, _bdeef := _abcc.Value, error(nil)
			if _bdeef != nil {
				return _bdeef
			}
			_edeb.TextAttr = &_gfe
			continue
		}
		if _abcc.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_afdg, _dagb := _e.ParseUint(_abcc.Value, 10, 32)
			if _dagb != nil {
				return _dagb
			}
			_ecbf := uint32(_afdg)
			_edeb.DxfIdAttr = &_ecbf
			continue
		}
		if _abcc.Name.Local == "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065" {
			_cccab, _bbbb := _e.ParseBool(_abcc.Value)
			if _bbbb != nil {
				return _bbbb
			}
			_edeb.StopIfTrueAttr = &_cccab
			continue
		}
		if _abcc.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_bfagd, _aace := _e.ParseBool(_abcc.Value)
			if _aace != nil {
				return _aace
			}
			_edeb.PercentAttr = &_bfagd
			continue
		}
		if _abcc.Name.Local == "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_cffa, _ebdc := _e.ParseBool(_abcc.Value)
			if _ebdc != nil {
				return _ebdc
			}
			_edeb.EqualAverageAttr = &_cffa
			continue
		}
	}
_bdcaa:
	for {
		_acgf, _agec := d.Token()
		if _agec != nil {
			return _agec
		}
		switch _fcdfg := _acgf.(type) {
		case _b.StartElement:
			switch _fcdfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				var _dcd string
				if _gfdc := d.DecodeElement(&_dcd, &_fcdfg); _gfdc != nil {
					return _gfdc
				}
				_edeb.Formula = append(_edeb.Formula, _dcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}:
				_edeb.ColorScale = NewCT_ColorScale()
				if _agddb := d.DecodeElement(_edeb.ColorScale, &_fcdfg); _agddb != nil {
					return _agddb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}:
				_edeb.DataBar = NewCT_DataBar()
				if _ecfb := d.DecodeElement(_edeb.DataBar, &_fcdfg); _ecfb != nil {
					return _ecfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}:
				_edeb.IconSet = NewCT_IconSet()
				if _gfaf := d.DecodeElement(_edeb.IconSet, &_fcdfg); _gfaf != nil {
					return _gfaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edeb.ExtLst = NewCT_ExtensionList()
				if _cdg := d.DecodeElement(_edeb.ExtLst, &_fcdfg); _cdg != nil {
					return _cdg
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0066\u0052u\u006c\u0065 \u0025\u0076", _fcdfg.Name)
				if _bcdbe := d.Skip(); _bcdbe != nil {
					return _bcdbe
				}
			}
		case _b.EndElement:
			break _bdcaa
		case _b.CharData:
		}
	}
	return nil
}
func (_aggfb *CT_TextField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aggfb.TypeAttr != ST_ExternalConnectionTypeUnset {
		_dgbfag, _efgec := _aggfb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _efgec != nil {
			return _efgec
		}
		start.Attr = append(start.Attr, _dgbfag)
	}
	if _aggfb.PositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_aggfb.PositionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abccf *CT_Parameters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abccf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_abccf.CountAttr)})
	}
	e.EncodeToken(start)
	_abbbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072"}}
	for _, _cfabfe := range _abccf.Parameter {
		e.EncodeElement(_cfabfe, _abbbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FutureMetadata and its children, prefixing error messages with path
func (_ddcg *CT_FutureMetadata) ValidateWithPath(path string) error {
	for _adgac, _decg := range _ddcg.Bk {
		if _ggbgcb := _decg.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _adgac)); _ggbgcb != nil {
			return _ggbgcb
		}
	}
	if _ddcg.ExtLst != nil {
		if _eacg := _ddcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eacg != nil {
			return _eacg
		}
	}
	return nil
}
func (_ddffb ST_RevisionAction) ValidateWithPath(path string) error {
	switch _ddffb {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddffb))
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetName and its children, prefixing error messages with path
func (_gbgcc *CT_ExternalSheetName) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CustomWorkbookViews and its children
func (_gadeg *CT_CustomWorkbookViews) Validate() error {
	return _gadeg.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073")
}

// Validate validates the CT_Comment and its children
func (_ebfe *CT_Comment) Validate() error {
	return _ebfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

// ValidateWithPath validates the Dialogsheet and its children, prefixing error messages with path
func (_aaffgd *Dialogsheet) ValidateWithPath(path string) error {
	if _dcccb := _aaffgd.CT_Dialogsheet.ValidateWithPath(path); _dcccb != nil {
		return _dcccb
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureGroups and its children, prefixing error messages with path
func (_cbggd *CT_MeasureGroups) ValidateWithPath(path string) error {
	for _fbabe, _bcdfb := range _cbggd.MeasureGroup {
		if _cbcff := _bcdfb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004dea\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _fbabe)); _cbcff != nil {
			return _cbcff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetViews and its children, prefixing error messages with path
func (_acagg *CT_SheetViews) ValidateWithPath(path string) error {
	for _agcgcb, _bbdfe := range _acagg.SheetView {
		if _babae := _bbdfe.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _agcgcb)); _babae != nil {
			return _babae
		}
	}
	if _acagg.ExtLst != nil {
		if _acebc := _acagg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acebc != nil {
			return _acebc
		}
	}
	return nil
}
func (_eedf *CT_ExternalBook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eagbd := range start.Attr {
		if _eagbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eagbd.Name.Local == "\u0069\u0064" || _eagbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eagbd.Name.Local == "\u0069\u0064" {
			_cebge, _eaccd := _eagbd.Value, error(nil)
			if _eaccd != nil {
				return _eaccd
			}
			_eedf.IdAttr = _cebge
			continue
		}
	}
_bbga:
	for {
		_dbed, _gaccg := d.Token()
		if _gaccg != nil {
			return _gaccg
		}
		switch _cegc := _dbed.(type) {
		case _b.StartElement:
			switch _cegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}:
				_eedf.SheetNames = NewCT_ExternalSheetNames()
				if _fgebd := d.DecodeElement(_eedf.SheetNames, &_cegc); _fgebd != nil {
					return _fgebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_eedf.DefinedNames = NewCT_ExternalDefinedNames()
				if _dgdcc := d.DecodeElement(_eedf.DefinedNames, &_cegc); _dgdcc != nil {
					return _dgdcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}:
				_eedf.SheetDataSet = NewCT_ExternalSheetDataSet()
				if _degg := d.DecodeElement(_eedf.SheetDataSet, &_cegc); _degg != nil {
					return _degg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b\u0020\u0025\u0076", _cegc.Name)
				if _ddgab := d.Skip(); _ddgab != nil {
					return _ddgab
				}
			}
		case _b.EndElement:
			break _bbga
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotHierarchy and its children
func (_dcagb *CT_PivotHierarchy) Validate() error {
	return _dcagb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

// Validate validates the CT_MetadataTypes and its children
func (_bdgege *CT_MetadataTypes) Validate() error {
	return _bdgege.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073")
}

// Validate validates the CT_LevelGroup and its children
func (_bgbfbe *CT_LevelGroup) Validate() error {
	return _bgbfbe.ValidateWithPath("\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070")
}

// ValidateWithPath validates the CT_ChartsheetViews and its children, prefixing error messages with path
func (_ddebb *CT_ChartsheetViews) ValidateWithPath(path string) error {
	for _bfde, _cege := range _ddebb.SheetView {
		if _eaeb := _cege.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _bfde)); _eaeb != nil {
			return _eaeb
		}
	}
	if _ddebb.ExtLst != nil {
		if _bced := _ddebb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bced != nil {
			return _bced
		}
	}
	return nil
}
func NewCT_Break() *CT_Break { _cfa := &CT_Break{}; return _cfa }

type ST_Comments byte

// ValidateWithPath validates the CT_QueryTable and its children, prefixing error messages with path
func (_bfcfe *CT_QueryTable) ValidateWithPath(path string) error {
	if _bddbf := _bfcfe.GrowShrinkTypeAttr.ValidateWithPath(path + "\u002f\u0047\u0072\u006fwS\u0068\u0072\u0069\u006e\u006b\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bddbf != nil {
		return _bddbf
	}
	if _bfcfe.QueryTableRefresh != nil {
		if _ggeba := _bfcfe.QueryTableRefresh.ValidateWithPath(path + "\u002fQ\u0075e\u0072\u0079\u0054\u0061\u0062l\u0065\u0052e\u0066\u0072\u0065\u0073\u0068"); _ggeba != nil {
			return _ggeba
		}
	}
	if _bfcfe.ExtLst != nil {
		if _baaab := _bfcfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _baaab != nil {
			return _baaab
		}
	}
	return nil
}
func (_fedcd *CT_PivotAreas) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fedcd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fedcd.CountAttr)})
	}
	e.EncodeToken(start)
	if _fedcd.PivotArea != nil {
		_abgebe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
		for _, _eebeea := range _fedcd.PivotArea {
			e.EncodeElement(_eebeea, _abgebe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbff *CT_DefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cbff.NameAttr)})
	if _cbff.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.CommentAttr)})
	}
	if _cbff.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.CustomMenuAttr)})
	}
	if _cbff.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.DescriptionAttr)})
	}
	if _cbff.HelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.HelpAttr)})
	}
	if _cbff.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.StatusBarAttr)})
	}
	if _cbff.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.LocalSheetIdAttr)})
	}
	if _cbff.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbff.HiddenAttr))})
	}
	if _cbff.FunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbff.FunctionAttr))})
	}
	if _cbff.VbProcedureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbff.VbProcedureAttr))})
	}
	if _cbff.XlmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u006d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbff.XlmAttr))})
	}
	if _cbff.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.FunctionGroupIdAttr)})
	}
	if _cbff.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _f.Sprintf("\u0025\u0076", *_cbff.ShortcutKeyAttr)})
	}
	if _cbff.PublishToServerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbff.PublishToServerAttr))})
	}
	if _cbff.WorkbookParameterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbff.WorkbookParameterAttr))})
	}
	e.EncodeElement(_cbff.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggbga *CT_DataRef) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggbga.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_ggbga.RefAttr)})
	}
	if _ggbga.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ggbga.NameAttr)})
	}
	if _ggbga.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ggbga.SheetAttr)})
	}
	if _ggbga.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ggbga.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bccfg ST_SortMethod) Validate() error { return _bccfg.ValidateWithPath("") }
func (_efcff *CT_SheetDimension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfda := range start.Attr {
		if _cfda.Name.Local == "\u0072\u0065\u0066" {
			_cddbec, _defac := _cfda.Value, error(nil)
			if _defac != nil {
				return _defac
			}
			_efcff.RefAttr = _cddbec
			continue
		}
	}
	for {
		_acedg, _cgafc := d.Token()
		if _cgafc != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _cgafc)
		}
		if _bbbef, _dbbbb := _acedg.(_b.EndElement); _dbbbb && _bbbef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfeef *CT_PageBreak) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecaeb := range start.Attr {
		if _ecaeb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdcgc, _gffdf := _e.ParseUint(_ecaeb.Value, 10, 32)
			if _gffdf != nil {
				return _gffdf
			}
			_edbd := uint32(_cdcgc)
			_bfeef.CountAttr = &_edbd
			continue
		}
		if _ecaeb.Name.Local == "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074" {
			_ceede, _efafc := _e.ParseUint(_ecaeb.Value, 10, 32)
			if _efafc != nil {
				return _efafc
			}
			_caacb := uint32(_ceede)
			_bfeef.ManualBreakCountAttr = &_caacb
			continue
		}
	}
_dacgf:
	for {
		_cdccdb, _adcgc := d.Token()
		if _adcgc != nil {
			return _adcgc
		}
		switch _abdbb := _cdccdb.(type) {
		case _b.StartElement:
			switch _abdbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}:
				_badad := NewCT_Break()
				if _dgadb := d.DecodeElement(_badad, &_abdbb); _dgadb != nil {
					return _dgadb
				}
				_bfeef.Brk = append(_bfeef.Brk, _badad)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0042\u0072\u0065\u0061\u006b\u0020\u0025\u0076", _abdbb.Name)
				if _ccacgf := d.Skip(); _ccacgf != nil {
					return _ccacgf
				}
			}
		case _b.EndElement:
			break _dacgf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_QueryTableFields() *CT_QueryTableFields { _gccgc := &CT_QueryTableFields{}; return _gccgc }
func (_gecege *ST_Objects) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gecege = 0
	case "\u0061\u006c\u006c":
		*_gecege = 1
	case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
		*_gecege = 2
	case "\u006e\u006f\u006e\u0065":
		*_gecege = 3
	}
	return nil
}

type CT_PageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// Print Scale
	ScaleAttr *uint32

	// First Page Number
	FirstPageNumberAttr *uint32

	// Fit To Width
	FitToWidthAttr *uint32

	// Fit To Height
	FitToHeightAttr *uint32

	// Page Order
	PageOrderAttr ST_PageOrder

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Print Cell Comments
	CellCommentsAttr ST_CellComments

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Print Error Handling
	ErrorsAttr ST_PrintError

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func (_dbcdb ST_TargetScreenSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbcdb.String(), start)
}

// ValidateWithPath validates the MapInfo and its children, prefixing error messages with path
func (_cccegc *MapInfo) ValidateWithPath(path string) error {
	if _bdac := _cccegc.CT_MapInfo.ValidateWithPath(path); _bdac != nil {
		return _bdac
	}
	return nil
}
func (_gggbbg ST_SortBy) Validate() error { return _gggbbg.ValidateWithPath("") }
func (_bdbcdg *MapInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u004d\u0061\u0070\u0049\u006e\u0066\u006f"
	return _bdbcdg.CT_MapInfo.MarshalXML(e, start)
}
func (_bccgea *CT_Font) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dedcd:
	for {
		_aagdf, _aabfe := d.Token()
		if _aabfe != nil {
			return _aabfe
		}
		switch _gggg := _aagdf.(type) {
		case _b.StartElement:
			switch _gggg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
				_begcc := NewCT_FontName()
				if _effe := d.DecodeElement(_begcc, &_gggg); _effe != nil {
					return _effe
				}
				_bccgea.Name = append(_bccgea.Name, _begcc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_gadgg := NewCT_IntProperty()
				if _ccgbd := d.DecodeElement(_gadgg, &_gggg); _ccgbd != nil {
					return _ccgbd
				}
				_bccgea.Charset = append(_bccgea.Charset, _gadgg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_adabb := NewCT_FontFamily()
				if _ceab := d.DecodeElement(_adabb, &_gggg); _ceab != nil {
					return _ceab
				}
				_bccgea.Family = append(_bccgea.Family, _adabb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_gfef := NewCT_BooleanProperty()
				if _cgcc := d.DecodeElement(_gfef, &_gggg); _cgcc != nil {
					return _cgcc
				}
				_bccgea.B = append(_bccgea.B, _gfef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cebabg := NewCT_BooleanProperty()
				if _gebae := d.DecodeElement(_cebabg, &_gggg); _gebae != nil {
					return _gebae
				}
				_bccgea.I = append(_bccgea.I, _cebabg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_fedbe := NewCT_BooleanProperty()
				if _aaeae := d.DecodeElement(_fedbe, &_gggg); _aaeae != nil {
					return _aaeae
				}
				_bccgea.Strike = append(_bccgea.Strike, _fedbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_gafbg := NewCT_BooleanProperty()
				if _geggcf := d.DecodeElement(_gafbg, &_gggg); _geggcf != nil {
					return _geggcf
				}
				_bccgea.Outline = append(_bccgea.Outline, _gafbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_eggc := NewCT_BooleanProperty()
				if _acabg := d.DecodeElement(_eggc, &_gggg); _acabg != nil {
					return _acabg
				}
				_bccgea.Shadow = append(_bccgea.Shadow, _eggc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_cedda := NewCT_BooleanProperty()
				if _ccedf := d.DecodeElement(_cedda, &_gggg); _ccedf != nil {
					return _ccedf
				}
				_bccgea.Condense = append(_bccgea.Condense, _cedda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_gfagb := NewCT_BooleanProperty()
				if _ggbdg := d.DecodeElement(_gfagb, &_gggg); _ggbdg != nil {
					return _ggbdg
				}
				_bccgea.Extend = append(_bccgea.Extend, _gfagb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_bgagf := NewCT_Color()
				if _ddfgg := d.DecodeElement(_bgagf, &_gggg); _ddfgg != nil {
					return _ddfgg
				}
				_bccgea.Color = append(_bccgea.Color, _bgagf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_edae := NewCT_FontSize()
				if _bfdbb := d.DecodeElement(_edae, &_gggg); _bfdbb != nil {
					return _bfdbb
				}
				_bccgea.Sz = append(_bccgea.Sz, _edae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_affd := NewCT_UnderlineProperty()
				if _ccgfb := d.DecodeElement(_affd, &_gggg); _ccgfb != nil {
					return _ccgfb
				}
				_bccgea.U = append(_bccgea.U, _affd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_ebcge := NewCT_VerticalAlignFontProperty()
				if _baabfe := d.DecodeElement(_ebcge, &_gggg); _baabfe != nil {
					return _baabfe
				}
				_bccgea.VertAlign = append(_bccgea.VertAlign, _ebcge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_ddbcb := NewCT_FontScheme()
				if _fedcg := d.DecodeElement(_ddbcb, &_gggg); _fedcg != nil {
					return _fedcg
				}
				_bccgea.Scheme = append(_bccgea.Scheme, _ddbcb)
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076", _gggg.Name)
				if _dagea := d.Skip(); _dagea != nil {
					return _dagea
				}
			}
		case _b.EndElement:
			break _dedcd
		case _b.CharData:
		}
	}
	return nil
}
func (_fefab *CT_X) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fefab.VAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", *_fefab.VAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gebb *CT_CustomChartsheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_geggc:
	for {
		_ebcfg, _bcbed := d.Token()
		if _bcbed != nil {
			return _bcbed
		}
		switch _abec := _ebcfg.(type) {
		case _b.StartElement:
			switch _abec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_cfff := NewCT_CustomChartsheetView()
				if _afgbe := d.DecodeElement(_cfff, &_abec); _afgbe != nil {
					return _afgbe
				}
				_gebb.CustomSheetView = append(_gebb.CustomSheetView, _cfff)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073\u0020%\u0076", _abec.Name)
				if _ddbbe := d.Skip(); _ddbbe != nil {
					return _ddbbe
				}
			}
		case _b.EndElement:
			break _geggc
		case _b.CharData:
		}
	}
	return nil
}
func (_dbcgb *CT_FontFamily) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbcgb.ValAttr = 0
	for _, _cagee := range start.Attr {
		if _cagee.Name.Local == "\u0076\u0061\u006c" {
			_gacfg, _fbcgc := _e.ParseInt(_cagee.Value, 10, 64)
			if _fbcgc != nil {
				return _fbcgc
			}
			_dbcgb.ValAttr = _gacfg
			continue
		}
	}
	for {
		_bbaaf, _daegcc := d.Token()
		if _daegcc != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0046a\u006d\u0069\u006c\u0079\u003a\u0020\u0025s", _daegcc)
		}
		if _cagcaa, _dfabg := _bbaaf.(_b.EndElement); _dfabg && _cagcaa.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_GroupItems() *CT_GroupItems { _aceff := &CT_GroupItems{}; return _aceff }

// ValidateWithPath validates the CT_DdeValues and its children, prefixing error messages with path
func (_bebc *CT_DdeValues) ValidateWithPath(path string) error {
	for _debgcb, _bcfbf := range _bebc.Value {
		if _afee := _bcfbf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _debgcb)); _afee != nil {
			return _afee
		}
	}
	return nil
}
func (_afdfg *CT_FilterColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006cI\u0064"}, Value: _f.Sprintf("\u0025\u0076", _afdfg.ColIdAttr)})
	if _afdfg.HiddenButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdfg.HiddenButtonAttr))})
	}
	if _afdfg.ShowButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afdfg.ShowButtonAttr))})
	}
	e.EncodeToken(start)
	if _afdfg.Filters != nil {
		_edfffg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_afdfg.Filters, _edfffg)
	}
	if _afdfg.Top10 != nil {
		_fffecf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070\u0031\u0030"}}
		e.EncodeElement(_afdfg.Top10, _fffecf)
	}
	if _afdfg.CustomFilters != nil {
		_egbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_afdfg.CustomFilters, _egbcc)
	}
	if _afdfg.DynamicFilter != nil {
		_bbege := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0064\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_afdfg.DynamicFilter, _bbege)
	}
	if _afdfg.ColorFilter != nil {
		_fafgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_afdfg.ColorFilter, _fafgf)
	}
	if _afdfg.IconFilter != nil {
		_faad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_afdfg.IconFilter, _faad)
	}
	if _afdfg.ExtLst != nil {
		_fcgadg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afdfg.ExtLst, _fcgadg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_feabcad *CT_SheetData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _feabcad.Row != nil {
		_bceace := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _edgbcc := range _feabcad.Row {
			e.EncodeElement(_edgbcc, _bceace)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IndexedColors and its children
func (_ccgcc *CT_IndexedColors) Validate() error {
	return _ccgcc.ValidateWithPath("\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073")
}
func (_ccceba *CT_rowItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aedbc := range start.Attr {
		if _aedbc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbggcc, _bgdee := _e.ParseUint(_aedbc.Value, 10, 32)
			if _bgdee != nil {
				return _bgdee
			}
			_ecbef := uint32(_bbggcc)
			_ccceba.CountAttr = &_ecbef
			continue
		}
	}
_cgeee:
	for {
		_cfcab, _bfbfd := d.Token()
		if _bfbfd != nil {
			return _bfbfd
		}
		switch _agdfe := _cfcab.(type) {
		case _b.StartElement:
			switch _agdfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_beccf := NewCT_I()
				if _ggcdg := d.DecodeElement(_beccf, &_agdfe); _ggcdg != nil {
					return _ggcdg
				}
				_ccceba.I = append(_ccceba.I, _beccf)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _agdfe.Name)
				if _bgfdgb := d.Skip(); _bgfdgb != nil {
					return _bgfdgb
				}
			}
		case _b.EndElement:
			break _cgeee
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotTableStyle and its children
func (_dacfc *CT_PivotTableStyle) Validate() error {
	return _dacfc.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065")
}

type ST_BorderStyle byte

func (_eedaf ST_DataValidationOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfefff := _b.Attr{}
	_cfefff.Name = name
	switch _eedaf {
	case ST_DataValidationOperatorUnset:
		_cfefff.Value = ""
	case ST_DataValidationOperatorBetween:
		_cfefff.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorNotBetween:
		_cfefff.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorEqual:
		_cfefff.Value = "\u0065\u0071\u0075a\u006c"
	case ST_DataValidationOperatorNotEqual:
		_cfefff.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorLessThan:
		_cfefff.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorLessThanOrEqual:
		_cfefff.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorGreaterThan:
		_cfefff.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorGreaterThanOrEqual:
		_cfefff.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return _cfefff, nil
}

// ValidateWithPath validates the CT_MeasureGroup and its children, prefixing error messages with path
func (_dcce *CT_MeasureGroup) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Filters and its children, prefixing error messages with path
func (_fgcda *CT_Filters) ValidateWithPath(path string) error {
	if _bdddf := _fgcda.CalendarTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0065\u006e\u0064\u0061\u0072\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _bdddf != nil {
		return _bdddf
	}
	for _cbeeb, _aeced := range _fgcda.Filter {
		if _gbfd := _aeced.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _cbeeb)); _gbfd != nil {
			return _gbfd
		}
	}
	for _ffbf, _gbdbda := range _fgcda.DateGroupItem {
		if _fecg := _gbdbda.ValidateWithPath(_f.Sprintf("%\u0073/\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d[%\u0064\u005d", path, _ffbf)); _fecg != nil {
			return _fecg
		}
	}
	return nil
}
func NewWorkbook() *Workbook {
	_gdcfbc := &Workbook{}
	_gdcfbc.CT_Workbook = *NewCT_Workbook()
	return _gdcfbc
}

// Validate validates the CT_XmlColumnPr and its children
func (_ebdfb *CT_XmlColumnPr) Validate() error {
	return _ebdfb.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072")
}
func (_eageb ST_RevisionAction) Validate() error { return _eageb.ValidateWithPath("") }

// Validate validates the CT_OleItem and its children
func (_dcbcee *CT_OleItem) Validate() error {
	return _dcbcee.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d")
}

// ValidateWithPath validates the CT_MetadataBlock and its children, prefixing error messages with path
func (_bbded *CT_MetadataBlock) ValidateWithPath(path string) error {
	for _agdcc, _agaee := range _bbded.Rc {
		if _eecce := _agaee.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0052\u0063\u005b\u0025\u0064]", path, _agdcc)); _eecce != nil {
			return _eecce
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ServerFormat and its children, prefixing error messages with path
func (_bbadf *CT_ServerFormat) ValidateWithPath(path string) error { return nil }
func (_ebccg ST_SortType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efggbg := _b.Attr{}
	_efggbg.Name = name
	switch _ebccg {
	case ST_SortTypeUnset:
		_efggbg.Value = ""
	case ST_SortTypeNone:
		_efggbg.Value = "\u006e\u006f\u006e\u0065"
	case ST_SortTypeAscending:
		_efggbg.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_SortTypeDescending:
		_efggbg.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case ST_SortTypeAscendingAlpha:
		_efggbg.Value = "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case ST_SortTypeDescendingAlpha:
		_efggbg.Value = "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case ST_SortTypeAscendingNatural:
		_efggbg.Value = "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case ST_SortTypeDescendingNatural:
		_efggbg.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return _efggbg, nil
}
func (_ccbce *CT_PCDKPI) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eebdba := range start.Attr {
		if _eebdba.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_eebccg, _fegcc := _eebdba.Value, error(nil)
			if _fegcc != nil {
				return _fegcc
			}
			_ccbce.UniqueNameAttr = _eebccg
			continue
		}
		if _eebdba.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_bcaee, _fdaeg := _eebdba.Value, error(nil)
			if _fdaeg != nil {
				return _fdaeg
			}
			_ccbce.CaptionAttr = &_bcaee
			continue
		}
		if _eebdba.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_effdc, _beece := _eebdba.Value, error(nil)
			if _beece != nil {
				return _beece
			}
			_ccbce.DisplayFolderAttr = &_effdc
			continue
		}
		if _eebdba.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_bgbb, _eedea := _eebdba.Value, error(nil)
			if _eedea != nil {
				return _eedea
			}
			_ccbce.MeasureGroupAttr = &_bgbb
			continue
		}
		if _eebdba.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_cebcc, _bebae := _eebdba.Value, error(nil)
			if _bebae != nil {
				return _bebae
			}
			_ccbce.ParentAttr = &_cebcc
			continue
		}
		if _eebdba.Name.Local == "\u0076\u0061\u006cu\u0065" {
			_accbe, _fbcbf := _eebdba.Value, error(nil)
			if _fbcbf != nil {
				return _fbcbf
			}
			_ccbce.ValueAttr = _accbe
			continue
		}
		if _eebdba.Name.Local == "\u0067\u006f\u0061\u006c" {
			_abcefe, _cddga := _eebdba.Value, error(nil)
			if _cddga != nil {
				return _cddga
			}
			_ccbce.GoalAttr = &_abcefe
			continue
		}
		if _eebdba.Name.Local == "\u0073\u0074\u0061\u0074\u0075\u0073" {
			_gaecd, _fbgc := _eebdba.Value, error(nil)
			if _fbgc != nil {
				return _fbgc
			}
			_ccbce.StatusAttr = &_gaecd
			continue
		}
		if _eebdba.Name.Local == "\u0074\u0072\u0065n\u0064" {
			_gcdef, _ccdbf := _eebdba.Value, error(nil)
			if _ccdbf != nil {
				return _ccdbf
			}
			_ccbce.TrendAttr = &_gcdef
			continue
		}
		if _eebdba.Name.Local == "\u0077\u0065\u0069\u0067\u0068\u0074" {
			_edffg, _adcae := _eebdba.Value, error(nil)
			if _adcae != nil {
				return _adcae
			}
			_ccbce.WeightAttr = &_edffg
			continue
		}
		if _eebdba.Name.Local == "\u0074\u0069\u006d\u0065" {
			_dffdb, _efeca := _eebdba.Value, error(nil)
			if _efeca != nil {
				return _efeca
			}
			_ccbce.TimeAttr = &_dffdb
			continue
		}
	}
	for {
		_gecaed, _gfaeg := d.Token()
		if _gfaeg != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0050\u0043\u0044K\u0050\u0049\u003a\u0020\u0025\u0073", _gfaeg)
		}
		if _ceddgb, _ebaed := _gecaed.(_b.EndElement); _ebaed && _ceddgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_acgcf ST_MdxFunctionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acgcf.String(), start)
}

type CT_DynamicFilter struct {

	// Dynamic filter type
	TypeAttr ST_DynamicFilterType

	// Value
	ValAttr *float64

	// ISO Value
	ValIsoAttr *_gb.Time

	// Max Value
	MaxValAttr *float64

	// Max ISO Value
	MaxValIsoAttr *_gb.Time
}

// Validate validates the CT_InputCells and its children
func (_bbbeg *CT_InputCells) Validate() error {
	return _bbbeg.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073")
}
func NewCT_ExternalReferences() *CT_ExternalReferences {
	_baffa := &CT_ExternalReferences{}
	return _baffa
}

type CT_SheetDimension struct {

	// Reference
	RefAttr string
}

func (_acfge *CT_MemberProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfaea := range start.Attr {
		if _bfaea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdbba, _fbea := _e.ParseUint(_bfaea.Value, 10, 32)
			if _fbea != nil {
				return _fbea
			}
			_cbgbb := uint32(_gdbba)
			_acfge.CountAttr = &_cbgbb
			continue
		}
	}
_feba:
	for {
		_fbcfb, _cdee := d.Token()
		if _cdee != nil {
			return _cdee
		}
		switch _gbecb := _fbcfb.(type) {
		case _b.StartElement:
			switch _gbecb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}:
				_baegb := NewCT_MemberProperty()
				if _gaffaf := d.DecodeElement(_baegb, &_gbecb); _gaffaf != nil {
					return _gaffaf
				}
				_acfge.Mp = append(_acfge.Mp, _baegb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gbecb.Name)
				if _ccfaa := d.Skip(); _ccfaa != nil {
					return _ccfaa
				}
			}
		case _b.EndElement:
			break _feba
		case _b.CharData:
		}
	}
	return nil
}
func (_fabddd *CT_RevisionConflict) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aabge := range start.Attr {
		if _aabge.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ddged, _afdcb := _e.ParseUint(_aabge.Value, 10, 32)
			if _afdcb != nil {
				return _afdcb
			}
			_ffeag := uint32(_ddged)
			_fabddd.SheetIdAttr = &_ffeag
			continue
		}
		if _aabge.Name.Local == "\u0072\u0049\u0064" {
			_ddgaeb, _ccfdc := _e.ParseUint(_aabge.Value, 10, 32)
			if _ccfdc != nil {
				return _ccfdc
			}
			_gbbgc := uint32(_ddgaeb)
			_fabddd.RIdAttr = &_gbbgc
			continue
		}
		if _aabge.Name.Local == "\u0075\u0061" {
			_gegfd, _bcdfc := _e.ParseBool(_aabge.Value)
			if _bcdfc != nil {
				return _bcdfc
			}
			_fabddd.UaAttr = &_gegfd
			continue
		}
		if _aabge.Name.Local == "\u0072\u0061" {
			_agdce, _fbfbac := _e.ParseBool(_aabge.Value)
			if _fbfbac != nil {
				return _fbfbac
			}
			_fabddd.RaAttr = &_agdce
			continue
		}
	}
	for {
		_decdda, _cddbeb := d.Token()
		if _cddbeb != nil {
			return _f.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0076\u0069\u0073i\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u003a\u0020\u0025\u0073", _cddbeb)
		}
		if _geaec, _badca := _decdda.(_b.EndElement); _badca && _geaec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dgagf ST_Visibility) String() string {
	switch _dgagf {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func (_edbf *CT_Fills) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edbf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_edbf.CountAttr)})
	}
	e.EncodeToken(start)
	if _edbf.Fill != nil {
		_ccbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		for _, _cbabf := range _edbf.Fill {
			e.EncodeElement(_cbabf, _ccbe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextField() *CT_TextField { _cagecd := &CT_TextField{}; return _cagecd }
func (_ccdae ST_PivotFilterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ccdae.String(), start)
}
func (_gfbb *CT_Cell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfbb.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_gfbb.RAttr)})
	}
	if _gfbb.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_gfbb.SAttr)})
	}
	if _gfbb.TAttr != ST_CellTypeUnset {
		_cabf, _cfcf := _gfbb.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _cfcf != nil {
			return _cfcf
		}
		start.Attr = append(start.Attr, _cabf)
	}
	if _gfbb.CmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_gfbb.CmAttr)})
	}
	if _gfbb.VmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_gfbb.VmAttr)})
	}
	if _gfbb.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gfbb.PhAttr))})
	}
	e.EncodeToken(start)
	if _gfbb.F != nil {
		_gbga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066"}}
		e.EncodeElement(_gfbb.F, _gbga)
	}
	if _gfbb.V != nil {
		_beee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_d.AddPreserveSpaceAttr(&_beee, *_gfbb.V)
		e.EncodeElement(_gfbb.V, _beee)
	}
	if _gfbb.Is != nil {
		_gebd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ai\u0073"}}
		e.EncodeElement(_gfbb.Is, _gebd)
	}
	if _gfbb.ExtLst != nil {
		_eaaca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfbb.ExtLst, _eaaca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_defea *CT_MetadataBlocks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _defea.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_defea.CountAttr)})
	}
	e.EncodeToken(start)
	_fddec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006b"}}
	for _, _fgabb := range _defea.Bk {
		e.EncodeElement(_fgabb, _fddec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggadb *CT_PageFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdee := range start.Attr {
		if _gdee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgea, _egcfgd := _e.ParseUint(_gdee.Value, 10, 32)
			if _egcfgd != nil {
				return _egcfgd
			}
			_agagf := uint32(_dgea)
			_ggadb.CountAttr = &_agagf
			continue
		}
	}
_aaaeb:
	for {
		_gabgc, _ffdcd := d.Token()
		if _ffdcd != nil {
			return _ffdcd
		}
		switch _eacfga := _gabgc.(type) {
		case _b.StartElement:
			switch _eacfga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}:
				_ggecc := NewCT_PageField()
				if _ebddca := d.DecodeElement(_ggecc, &_eacfga); _ebddca != nil {
					return _ebddca
				}
				_ggadb.PageField = append(_ggadb.PageField, _ggecc)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _eacfga.Name)
				if _bgea := d.Skip(); _bgea != nil {
					return _bgea
				}
			}
		case _b.EndElement:
			break _aaaeb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TableStyleElement() *CT_TableStyleElement {
	_cbdffa := &CT_TableStyleElement{}
	_cbdffa.TypeAttr = ST_TableStyleType(1)
	return _cbdffa
}

// ValidateWithPath validates the CT_OleLink and its children, prefixing error messages with path
func (_fgbff *CT_OleLink) ValidateWithPath(path string) error {
	if _fgbff.OleItems != nil {
		if _efgeg := _fgbff.OleItems.ValidateWithPath(path + "\u002fO\u006c\u0065\u0049\u0074\u0065\u006ds"); _efgeg != nil {
			return _efgeg
		}
	}
	return nil
}
func (_eeeceg ST_CellComments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eeeceg.String(), start)
}
func (_dfcbbb *CT_Sets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfcbbb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dfcbbb.CountAttr)})
	}
	e.EncodeToken(start)
	_faggg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0065\u0074"}}
	for _, _cdcec := range _dfcbbb.Set {
		e.EncodeElement(_cdcec, _faggg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_agfab *CT_DataFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adbbf := range start.Attr {
		if _adbbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfdb, _fcgf := _e.ParseUint(_adbbf.Value, 10, 32)
			if _fcgf != nil {
				return _fcgf
			}
			_gafee := uint32(_cfdb)
			_agfab.CountAttr = &_gafee
			continue
		}
	}
_bgcdc:
	for {
		_gbee, _dged := d.Token()
		if _dged != nil {
			return _dged
		}
		switch _eacce := _gbee.(type) {
		case _b.StartElement:
			switch _eacce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}:
				_adde := NewCT_DataField()
				if _deeg := d.DecodeElement(_adde, &_eacce); _deeg != nil {
					return _deeg
				}
				_agfab.DataField = append(_agfab.DataField, _adde)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044a\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _eacce.Name)
				if _aagg := d.Skip(); _aagg != nil {
					return _aagg
				}
			}
		case _b.EndElement:
			break _bgcdc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_DataValidations() *CT_DataValidations { _bagg := &CT_DataValidations{}; return _bagg }

type ST_UnderlineValues byte

func (_fbcadb *Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbcadb.CT_Comments = *NewCT_Comments()
_fgfeb:
	for {
		_dbbfd, _fbbgbe := d.Token()
		if _fbbgbe != nil {
			return _fbbgbe
		}
		switch _eabfcf := _dbbfd.(type) {
		case _b.StartElement:
			switch _eabfcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _eagcg := d.DecodeElement(_fbcadb.Authors, &_eabfcf); _eagcg != nil {
					return _eagcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _gbfdf := d.DecodeElement(_fbcadb.CommentList, &_eabfcf); _gbfdf != nil {
					return _gbfdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbcadb.ExtLst = NewCT_ExtensionList()
				if _agbgd := d.DecodeElement(_fbcadb.ExtLst, &_eabfcf); _agbgd != nil {
					return _agbgd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _eabfcf.Name)
				if _geedc := d.Skip(); _geedc != nil {
					return _geedc
				}
			}
		case _b.EndElement:
			break _fgfeb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the Revisions and its children
func (_dgffc *Revisions) Validate() error {
	return _dgffc.ValidateWithPath("\u0052e\u0076\u0069\u0073\u0069\u006f\u006es")
}
func (_dccgb ST_GroupBy) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgdfe := _b.Attr{}
	_cgdfe.Name = name
	switch _dccgb {
	case ST_GroupByUnset:
		_cgdfe.Value = ""
	case ST_GroupByRange:
		_cgdfe.Value = "\u0072\u0061\u006eg\u0065"
	case ST_GroupBySeconds:
		_cgdfe.Value = "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case ST_GroupByMinutes:
		_cgdfe.Value = "\u006di\u006e\u0075\u0074\u0065\u0073"
	case ST_GroupByHours:
		_cgdfe.Value = "\u0068\u006f\u0075r\u0073"
	case ST_GroupByDays:
		_cgdfe.Value = "\u0064\u0061\u0079\u0073"
	case ST_GroupByMonths:
		_cgdfe.Value = "\u006d\u006f\u006e\u0074\u0068\u0073"
	case ST_GroupByQuarters:
		_cgdfe.Value = "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case ST_GroupByYears:
		_cgdfe.Value = "\u0079\u0065\u0061r\u0073"
	}
	return _cgdfe, nil
}

type CT_XmlColumnPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// Denormalized
	DenormalizedAttr *bool

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_ColorFilter struct {

	// Differential Format Record Id
	DxfIdAttr *uint32

	// Filter By Cell Color
	CellColorAttr *bool
}

func (_fbbgda ST_GradientType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbbgda.String(), start)
}
func NewCT_Index() *CT_Index { _aabdg := &CT_Index{}; return _aabdg }
func (_ecgd *CT_CellSmartTag) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", _ecgd.TypeAttr)})
	if _ecgd.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ecgd.DeletedAttr))})
	}
	if _ecgd.XmlBasedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ecgd.XmlBasedAttr))})
	}
	e.EncodeToken(start)
	if _ecgd.CellSmartTagPr != nil {
		_afga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}}
		for _, _ffegc := range _ecgd.CellSmartTagPr {
			e.EncodeElement(_ffegc, _afga)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CustomWorkbookViews struct {

	// Custom Workbook View
	CustomWorkbookView []*CT_CustomWorkbookView
}

func (_abggg *CT_QueryTableRefresh) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abggg.PreserveSortFilterLayoutAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_abggg.PreserveSortFilterLayoutAttr))})
	}
	if _abggg.FieldIdWrappedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_abggg.FieldIdWrappedAttr))})
	}
	if _abggg.HeadersInLastRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_abggg.HeadersInLastRefreshAttr))})
	}
	if _abggg.MinimumVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_abggg.MinimumVersionAttr)})
	}
	if _abggg.NextIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0065\u0078\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_abggg.NextIdAttr)})
	}
	if _abggg.UnboundColumnsLeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_abggg.UnboundColumnsLeftAttr)})
	}
	if _abggg.UnboundColumnsRightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_abggg.UnboundColumnsRightAttr)})
	}
	e.EncodeToken(start)
	_gaefg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_abggg.QueryTableFields, _gaefg)
	if _abggg.QueryTableDeletedFields != nil {
		_gbbag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073"}}
		e.EncodeElement(_abggg.QueryTableDeletedFields, _gbbag)
	}
	if _abggg.SortState != nil {
		_dfadcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_abggg.SortState, _dfadcc)
	}
	if _abggg.ExtLst != nil {
		_agedf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abggg.ExtLst, _agedf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfcee *CT_MdxKPI) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _f.Sprintf("\u0025\u0076", _gfcee.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0070"}, Value: _f.Sprintf("\u0025\u0076", _gfcee.NpAttr)})
	_fddebd, _adfb := _gfcee.PAttr.MarshalXMLAttr(_b.Name{Local: "\u0070"})
	if _adfb != nil {
		return _adfb
	}
	start.Attr = append(start.Attr, _fddebd)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ProtectedRange and its children
func (_gedgg *CT_ProtectedRange) Validate() error {
	return _gedgg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065")
}
func (_gdafb ST_ShowDataAs) ValidateWithPath(path string) error {
	switch _gdafb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdafb))
	}
	return nil
}

type CT_RevisionRowColumn struct {

	// Sheet Id
	SIdAttr uint32

	// End Of List
	EolAttr *bool

	// Reference
	RefAttr string

	// User Action
	ActionAttr ST_rwColActionType

	// Edge Deleted
	EdgeAttr *bool

	// Undo
	Undo []*CT_UndoInfo

	// Revised Row Column
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// ValidateWithPath validates the CT_DateTime and its children, prefixing error messages with path
func (_baab *CT_DateTime) ValidateWithPath(path string) error {
	for _edfge, _gadce := range _baab.X {
		if _abda := _gadce.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _edfge)); _abda != nil {
			return _abda
		}
	}
	return nil
}

type CT_SortCondition struct {

	// Descending
	DescendingAttr *bool

	// Sort By
	SortByAttr ST_SortBy

	// Reference
	RefAttr string

	// Custom List
	CustomListAttr *string

	// Format Id
	DxfIdAttr *uint32

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

func NewCT_RevisionQueryTableField() *CT_RevisionQueryTableField {
	_bcafc := &CT_RevisionQueryTableField{}
	return _bcafc
}
func (_ebecf *CT_Connections) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gggbf:
	for {
		_baef, _gfda := d.Token()
		if _gfda != nil {
			return _gfda
		}
		switch _gaaaa := _baef.(type) {
		case _b.StartElement:
			switch _gaaaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fbcea := NewCT_Connection()
				if _bcac := d.DecodeElement(_fbcea, &_gaaaa); _bcac != nil {
					return _bcac
				}
				_ebecf.Connection = append(_ebecf.Connection, _fbcea)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074i\u006fn\u0073\u0020\u0025\u0076", _gaaaa.Name)
				if _fdcbg := d.Skip(); _fdcbg != nil {
					return _fdcbg
				}
			}
		case _b.EndElement:
			break _gggbf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_RevisionCellChange() *CT_RevisionCellChange {
	_ddfad := &CT_RevisionCellChange{}
	_ddfad.Nc = NewCT_Cell()
	return _ddfad
}

type AG_AutoFormat struct {
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_gaabc ST_UnderlineValues) String() string {
	switch _gaabc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u006e\u0067\u006c\u0065"
	case 2:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 3:
		return "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 4:
		return "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_ReviewedRevisions and its children, prefixing error messages with path
func (_gffbc *CT_ReviewedRevisions) ValidateWithPath(path string) error {
	for _fgaac, _dbebg := range _gffbc.Reviewed {
		if _ceecg := _dbebg.ValidateWithPath(_f.Sprintf("\u0025s\u002fR\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u005b\u0025\u0064\u005d", path, _fgaac)); _ceecg != nil {
			return _ceecg
		}
	}
	return nil
}

type CT_RevisionAutoFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Reference
	RefAttr                     string
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_fefdb *Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fefdb.CT_Table = *NewCT_Table()
	for _, _fgaaf := range start.Attr {
		if _fgaaf.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_eaecfe, _gbbfad := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _gbbfad != nil {
				return _gbbfad
			}
			_dcaaab := uint32(_eaecfe)
			_fefdb.DataDxfIdAttr = &_dcaaab
			continue
		}
		if _fgaaf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_eaced, _bcaebf := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _bcaebf != nil {
				return _bcaebf
			}
			_ggefc := uint32(_eaced)
			_fefdb.TotalsRowDxfIdAttr = &_ggefc
			continue
		}
		if _fgaaf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bbcad, _ceeade := _fgaaf.Value, error(nil)
			if _ceeade != nil {
				return _ceeade
			}
			_fefdb.NameAttr = &_bbcad
			continue
		}
		if _fgaaf.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_fgeagb, _bgbee := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _bgbee != nil {
				return _bgbee
			}
			_fedfa := uint32(_fgeagb)
			_fefdb.HeaderRowBorderDxfIdAttr = &_fedfa
			continue
		}
		if _fgaaf.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bgbca, _aebce := _fgaaf.Value, error(nil)
			if _aebce != nil {
				return _aebce
			}
			_fefdb.CommentAttr = &_bgbca
			continue
		}
		if _fgaaf.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_gdecf, _eefbe := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _eefbe != nil {
				return _eefbe
			}
			_ebbcca := uint32(_gdecf)
			_fefdb.TableBorderDxfIdAttr = &_ebbcca
			continue
		}
		if _fgaaf.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_fefdb.TableTypeAttr.UnmarshalXMLAttr(_fgaaf)
			continue
		}
		if _fgaaf.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_abgca, _cbgeff := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _cbgeff != nil {
				return _cbgeff
			}
			_dbbge := uint32(_abgca)
			_fefdb.TotalsRowBorderDxfIdAttr = &_dbbge
			continue
		}
		if _fgaaf.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_cecefe, _ceecd := _e.ParseBool(_fgaaf.Value)
			if _ceecd != nil {
				return _ceecd
			}
			_fefdb.InsertRowAttr = &_cecefe
			continue
		}
		if _fgaaf.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_ebcaf, _bddaf := _fgaaf.Value, error(nil)
			if _bddaf != nil {
				return _bddaf
			}
			_fefdb.HeaderRowCellStyleAttr = &_ebcaf
			continue
		}
		if _fgaaf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_gadab, _agcfb := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _agcfb != nil {
				return _agcfb
			}
			_adgee := uint32(_gadab)
			_fefdb.TotalsRowCountAttr = &_adgee
			continue
		}
		if _fgaaf.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_dbaggd, _gacdd := _fgaaf.Value, error(nil)
			if _gacdd != nil {
				return _gacdd
			}
			_fefdb.TotalsRowCellStyleAttr = &_dbaggd
			continue
		}
		if _fgaaf.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_eddfc, _gddeeb := _fgaaf.Value, error(nil)
			if _gddeeb != nil {
				return _gddeeb
			}
			_fefdb.DisplayNameAttr = _eddfc
			continue
		}
		if _fgaaf.Name.Local == "\u0069\u0064" {
			_ccbdcf, _dacfd := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _dacfd != nil {
				return _dacfd
			}
			_fefdb.IdAttr = uint32(_ccbdcf)
			continue
		}
		if _fgaaf.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_egafa, _badcdb := _fgaaf.Value, error(nil)
			if _badcdb != nil {
				return _badcdb
			}
			_fefdb.DataCellStyleAttr = &_egafa
			continue
		}
		if _fgaaf.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_cbddea, _bbfea := _e.ParseBool(_fgaaf.Value)
			if _bbfea != nil {
				return _bbfea
			}
			_fefdb.PublishedAttr = &_cbddea
			continue
		}
		if _fgaaf.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_bagbb, _efbeg := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _efbeg != nil {
				return _efbeg
			}
			_dfbbb := uint32(_bagbb)
			_fefdb.ConnectionIdAttr = &_dfbbb
			continue
		}
		if _fgaaf.Name.Local == "\u0072\u0065\u0066" {
			_efefc, _abdab := _fgaaf.Value, error(nil)
			if _abdab != nil {
				return _abdab
			}
			_fefdb.RefAttr = _efefc
			continue
		}
		if _fgaaf.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_bgfcb, _ccaedb := _e.ParseBool(_fgaaf.Value)
			if _ccaedb != nil {
				return _ccaedb
			}
			_fefdb.InsertRowShiftAttr = &_bgfcb
			continue
		}
		if _fgaaf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_fbcfc, _dedef := _e.ParseBool(_fgaaf.Value)
			if _dedef != nil {
				return _dedef
			}
			_fefdb.TotalsRowShownAttr = &_fbcfc
			continue
		}
		if _fgaaf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_efadef, _adaaf := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _adaaf != nil {
				return _adaaf
			}
			_aadaeg := uint32(_efadef)
			_fefdb.HeaderRowDxfIdAttr = &_aadaeg
			continue
		}
		if _fgaaf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_fegfba, _ccecgcg := _e.ParseUint(_fgaaf.Value, 10, 32)
			if _ccecgcg != nil {
				return _ccecgcg
			}
			_gdaec := uint32(_fegfba)
			_fefdb.HeaderRowCountAttr = &_gdaec
			continue
		}
	}
_aedaad:
	for {
		_fgebdc, _bdbed := d.Token()
		if _bdbed != nil {
			return _bdbed
		}
		switch _abgbbg := _fgebdc.(type) {
		case _b.StartElement:
			switch _abgbbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fefdb.AutoFilter = NewCT_AutoFilter()
				if _caaaecc := d.DecodeElement(_fefdb.AutoFilter, &_abgbbg); _caaaecc != nil {
					return _caaaecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_fefdb.SortState = NewCT_SortState()
				if _gggaa := d.DecodeElement(_fefdb.SortState, &_abgbbg); _gggaa != nil {
					return _gggaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _ffdgda := d.DecodeElement(_fefdb.TableColumns, &_abgbbg); _ffdgda != nil {
					return _ffdgda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_fefdb.TableStyleInfo = NewCT_TableStyleInfo()
				if _faeef := d.DecodeElement(_fefdb.TableStyleInfo, &_abgbbg); _faeef != nil {
					return _faeef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fefdb.ExtLst = NewCT_ExtensionList()
				if _agbccg := d.DecodeElement(_fefdb.ExtLst, &_abgbbg); _agbccg != nil {
					return _agbccg
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0061\u0062l\u0065 \u0025\u0076", _abgbbg.Name)
				if _bgcff := d.Skip(); _bgcff != nil {
					return _bgcff
				}
			}
		case _b.EndElement:
			break _aedaad
		case _b.CharData:
		}
	}
	return nil
}
func (_cdbfff ST_CfvoType) Validate() error { return _cdbfff.ValidateWithPath("") }

// Validate validates the CT_Query and its children
func (_deeed *CT_Query) Validate() error {
	return _deeed.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079")
}
func (_fadaadde *PivotCacheRecords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061:\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073"
	return _fadaadde.CT_PivotCacheRecords.MarshalXML(e, start)
}

// Validate validates the CT_RevisionQueryTableField and its children
func (_dadfea *CT_RevisionQueryTableField) Validate() error {
	return _dadfea.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064")
}
func NewCT_I() *CT_I { _fgebf := &CT_I{}; return _fgebf }
func (_bdaae ST_HtmlFmt) ValidateWithPath(path string) error {
	switch _bdaae {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdaae))
	}
	return nil
}
func (_adgfb *CT_CalculatedItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcea := range start.Attr {
		if _dcea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_egfe, _decd := _e.ParseUint(_dcea.Value, 10, 32)
			if _decd != nil {
				return _decd
			}
			_gefd := uint32(_egfe)
			_adgfb.CountAttr = &_gefd
			continue
		}
	}
_bcbb:
	for {
		_fefd, _bda := d.Token()
		if _bda != nil {
			return _bda
		}
		switch _bccc := _fefd.(type) {
		case _b.StartElement:
			switch _bccc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}:
				_cfg := NewCT_CalculatedItem()
				if _cae := d.DecodeElement(_cfg, &_bccc); _cae != nil {
					return _cae
				}
				_adgfb.CalculatedItem = append(_adgfb.CalculatedItem, _cfg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bccc.Name)
				if _faa := d.Skip(); _faa != nil {
					return _faa
				}
			}
		case _b.EndElement:
			break _bcbb
		case _b.CharData:
		}
	}
	return nil
}
func (_afcbff *CT_MapInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0076", _afcbff.SelectionNamespacesAttr)})
	e.EncodeToken(start)
	_agece := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0053\u0063\u0068\u0065\u006da"}}
	for _, _cdaea := range _afcbff.Schema {
		e.EncodeElement(_cdaea, _agece)
	}
	_gaedb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u004d\u0061\u0070"}}
	for _, _gbgg := range _afcbff.Map {
		e.EncodeElement(_gbgg, _gaedb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acafa ST_DataConsolidateFunction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acafa.String(), start)
}

// ValidateWithPath validates the CT_Members and its children, prefixing error messages with path
func (_fdegd *CT_Members) ValidateWithPath(path string) error {
	for _cacbc, _efccd := range _fdegd.Member {
		if _faeea := _efccd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _cacbc)); _faeea != nil {
			return _faeea
		}
	}
	return nil
}

// Validate validates the CT_CellSmartTags and its children
func (_afbe *CT_CellSmartTags) Validate() error {
	return _afbe.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}
func (_cbdcd *CT_RevisionHeader) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cbdcd.GuidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cbdcd.DateTimeAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cbdcd.MaxSheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cbdcd.UserNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cbdcd.IdAttr)})
	if _cbdcd.MinRIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0052\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbdcd.MinRIdAttr)})
	}
	if _cbdcd.MaxRIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0052\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbdcd.MaxRIdAttr)})
	}
	e.EncodeToken(start)
	_bcadc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}}
	e.EncodeElement(_cbdcd.SheetIdMap, _bcadc)
	if _cbdcd.ReviewedList != nil {
		_fefbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ar\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}}
		e.EncodeElement(_cbdcd.ReviewedList, _fefbg)
	}
	if _cbdcd.ExtLst != nil {
		_ceabg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbdcd.ExtLst, _ceabg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ConditionalFormatting and its children, prefixing error messages with path
func (_bcbgg *CT_ConditionalFormatting) ValidateWithPath(path string) error {
	for _beba, _cbeb := range _bcbgg.CfRule {
		if _fbgd := _cbeb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u0066\u0052\u0075\u006c\u0065\u005b\u0025\u0064\u005d", path, _beba)); _fbgd != nil {
			return _fbgd
		}
	}
	if _bcbgg.ExtLst != nil {
		if _aaee := _bcbgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aaee != nil {
			return _aaee
		}
	}
	return nil
}

type ST_VerticalAlignment byte

func (_cbfcc *ST_FormulaExpression) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbfcc = 0
	case "\u0072\u0065\u0066":
		*_cbfcc = 1
	case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
		*_cbfcc = 2
	case "\u0061\u0072\u0065\u0061":
		*_cbfcc = 3
	case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
		*_cbfcc = 4
	case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
		*_cbfcc = 5
	}
	return nil
}
func (_dbgee ST_PrintError) ValidateWithPath(path string) error {
	switch _dbgee {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbgee))
	}
	return nil
}
func (_egcaab ST_TimePeriod) ValidateWithPath(path string) error {
	switch _egcaab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egcaab))
	}
	return nil
}
func (_fgcgb ST_ParameterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgcgb.String(), start)
}
func (_ceccaa ST_DdeValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdgga := _b.Attr{}
	_bdgga.Name = name
	switch _ceccaa {
	case ST_DdeValueTypeUnset:
		_bdgga.Value = ""
	case ST_DdeValueTypeNil:
		_bdgga.Value = "\u006e\u0069\u006c"
	case ST_DdeValueTypeB:
		_bdgga.Value = "\u0062"
	case ST_DdeValueTypeN:
		_bdgga.Value = "\u006e"
	case ST_DdeValueTypeE:
		_bdgga.Value = "\u0065"
	case ST_DdeValueTypeStr:
		_bdgga.Value = "\u0073\u0074\u0072"
	}
	return _bdgga, nil
}

const (
	ST_SortTypeUnset             ST_SortType = 0
	ST_SortTypeNone              ST_SortType = 1
	ST_SortTypeAscending         ST_SortType = 2
	ST_SortTypeDescending        ST_SortType = 3
	ST_SortTypeAscendingAlpha    ST_SortType = 4
	ST_SortTypeDescendingAlpha   ST_SortType = 5
	ST_SortTypeAscendingNatural  ST_SortType = 6
	ST_SortTypeDescendingNatural ST_SortType = 7
)

// Validate validates the CT_ServerFormat and its children
func (_fffad *CT_ServerFormat) Validate() error {
	return _fffad.ValidateWithPath("\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074")
}

type CT_TupleCache struct {

	// Entries
	Entries *CT_PCDSDTCEntries

	// Sets
	Sets *CT_Sets

	// OLAP Query Cache
	QueryCache *CT_QueryCache

	// Server Formats
	ServerFormats *CT_ServerFormats

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ceecb *CT_FunctionGroups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gffee := range start.Attr {
		if _gffee.Name.Local == "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074" {
			_eebacf, _eccd := _e.ParseUint(_gffee.Value, 10, 32)
			if _eccd != nil {
				return _eccd
			}
			_dggg := uint32(_eebacf)
			_ceecb.BuiltInGroupCountAttr = &_dggg
			continue
		}
	}
_eeafg:
	for {
		_badg, _abga := d.Token()
		if _abga != nil {
			return _abga
		}
		switch _ccadd := _badg.(type) {
		case _b.StartElement:
			switch _ccadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}:
				_defc := NewCT_FunctionGroup()
				if _egfdc := d.DecodeElement(_defc, &_ccadd); _egfdc != nil {
					return _egfdc
				}
				_ceecb.FunctionGroup = append(_ceecb.FunctionGroup, _defc)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025\u0076", _ccadd.Name)
				if _gacag := d.Skip(); _gacag != nil {
					return _gacag
				}
			}
		case _b.EndElement:
			break _eeafg
		case _b.CharData:
		}
	}
	return nil
}
func (_gddfgf ST_FileType) Validate() error { return _gddfgf.ValidateWithPath("") }

// Validate validates the CT_PivotAreas and its children
func (_fbgeda *CT_PivotAreas) Validate() error {
	return _fbgeda.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073")
}

const (
	ST_TimePeriodUnset     ST_TimePeriod = 0
	ST_TimePeriodToday     ST_TimePeriod = 1
	ST_TimePeriodYesterday ST_TimePeriod = 2
	ST_TimePeriodTomorrow  ST_TimePeriod = 3
	ST_TimePeriodLast7Days ST_TimePeriod = 4
	ST_TimePeriodThisMonth ST_TimePeriod = 5
	ST_TimePeriodLastMonth ST_TimePeriod = 6
	ST_TimePeriodNextMonth ST_TimePeriod = 7
	ST_TimePeriodThisWeek  ST_TimePeriod = 8
	ST_TimePeriodLastWeek  ST_TimePeriod = 9
	ST_TimePeriodNextWeek  ST_TimePeriod = 10
)

func (_bacee ST_GradientType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgdaca := _b.Attr{}
	_fgdaca.Name = name
	switch _bacee {
	case ST_GradientTypeUnset:
		_fgdaca.Value = ""
	case ST_GradientTypeLinear:
		_fgdaca.Value = "\u006c\u0069\u006e\u0065\u0061\u0072"
	case ST_GradientTypePath:
		_fgdaca.Value = "\u0070\u0061\u0074\u0068"
	}
	return _fgdaca, nil
}

type CT_CalculatedItem struct {

	// Field Index
	FieldAttr *uint32

	// Calculated Item Formula
	FormulaAttr *string

	// Calculated Item Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_PivotAreaReferences and its children, prefixing error messages with path
func (_aced *CT_PivotAreaReferences) ValidateWithPath(path string) error {
	for _dfbf, _adebga := range _aced.Reference {
		if _afdaf := _adebga.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _dfbf)); _afdaf != nil {
			return _afdaf
		}
	}
	return nil
}
func (_aagfd *CT_SingleXmlCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdaab:
	for {
		_cgbac, _cadbg := d.Token()
		if _cadbg != nil {
			return _cadbg
		}
		switch _bbdea := _cgbac.(type) {
		case _b.StartElement:
			switch _bbdea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_gaabee := NewCT_SingleXmlCell()
				if _bbgfd := d.DecodeElement(_gaabee, &_bbdea); _bbgfd != nil {
					return _bbgfd
				}
				_aagfd.SingleXmlCell = append(_aagfd.SingleXmlCell, _gaabee)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0073\u0020\u0025\u0076", _bbdea.Name)
				if _adbbb := d.Skip(); _adbbb != nil {
					return _adbbb
				}
			}
		case _b.EndElement:
			break _fdaab
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetData and its children
func (_bcdfca *CT_SheetData) Validate() error {
	return _bcdfca.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061")
}

type CT_ColorScale struct {

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Color Gradiant Interpolation
	Color []*CT_Color
}

func NewCT_CfRule() *CT_CfRule { _aefbb := &CT_CfRule{}; return _aefbb }

const (
	ST_DdeValueTypeUnset ST_DdeValueType = 0
	ST_DdeValueTypeNil   ST_DdeValueType = 1
	ST_DdeValueTypeB     ST_DdeValueType = 2
	ST_DdeValueTypeN     ST_DdeValueType = 3
	ST_DdeValueTypeE     ST_DdeValueType = 4
	ST_DdeValueTypeStr   ST_DdeValueType = 5
)

func (_cbede *CT_IndexedColors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dggd:
	for {
		_gefed, _gffebf := d.Token()
		if _gffebf != nil {
			return _gffebf
		}
		switch _fggeb := _gefed.(type) {
		case _b.StartElement:
			switch _fggeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_ebbac := NewCT_RgbColor()
				if _afbgf := d.DecodeElement(_ebbac, &_fggeb); _afbgf != nil {
					return _afbgf
				}
				_cbede.RgbColor = append(_cbede.RgbColor, _ebbac)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073\u0020\u0025v", _fggeb.Name)
				if _egdfa := d.Skip(); _egdfa != nil {
					return _egdfa
				}
			}
		case _b.EndElement:
			break _dggd
		case _b.CharData:
		}
	}
	return nil
}
func (_aebebe ST_PivotAreaType) Validate() error { return _aebebe.ValidateWithPath("") }
func (_fdfbeab *ST_FontScheme) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fdfbeab = 0
	case "\u006e\u006f\u006e\u0065":
		*_fdfbeab = 1
	case "\u006d\u0061\u006ao\u0072":
		*_fdfbeab = 2
	case "\u006d\u0069\u006eo\u0072":
		*_fdfbeab = 3
	}
	return nil
}

// ValidateWithPath validates the CT_PatternFill and its children, prefixing error messages with path
func (_gfbac *CT_PatternFill) ValidateWithPath(path string) error {
	if _badc := _gfbac.PatternTypeAttr.ValidateWithPath(path + "\u002f\u0050a\u0074\u0074\u0065r\u006e\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _badc != nil {
		return _badc
	}
	if _gfbac.FgColor != nil {
		if _dccgff := _gfbac.FgColor.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006f\u006c\u006f\u0072"); _dccgff != nil {
			return _dccgff
		}
	}
	if _gfbac.BgColor != nil {
		if _aaddcf := _gfbac.BgColor.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006f\u006c\u006f\u0072"); _aaddcf != nil {
			return _aaddcf
		}
	}
	return nil
}

// Validate validates the CT_CalculatedItems and its children
func (_gae *CT_CalculatedItems) Validate() error {
	return _gae.ValidateWithPath("\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073")
}
func (_ccagg *CT_Drawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _ccagg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RevisionHeaders and its children
func (_fcfad *CT_RevisionHeaders) Validate() error {
	return _fcfad.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_Row and its children, prefixing error messages with path
func (_cede *CT_Row) ValidateWithPath(path string) error {
	for _dacec, _beggf := range _cede.C {
		if _badcb := _beggf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _dacec)); _badcb != nil {
			return _badcb
		}
	}
	if _cede.ExtLst != nil {
		if _bdbbb := _cede.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdbbb != nil {
			return _bdbbb
		}
	}
	return nil
}

// Validate validates the CT_SheetView and its children
func (_dfgad *CT_SheetView) Validate() error {
	return _dfgad.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_abefc *CT_Comment) ValidateWithPath(path string) error {
	if _abefc.GuidAttr != nil {
		if !_c.ST_GuidPatternRe.MatchString(*_abefc.GuidAttr) {
			return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, *_abefc.GuidAttr)
		}
	}
	if _dgad := _abefc.Text.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074"); _dgad != nil {
		return _dgad
	}
	if _abefc.CommentPr != nil {
		if _gage := _abefc.CommentPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"); _gage != nil {
			return _gage
		}
	}
	return nil
}

const (
	ST_SortByUnset     ST_SortBy = 0
	ST_SortByValue     ST_SortBy = 1
	ST_SortByCellColor ST_SortBy = 2
	ST_SortByFontColor ST_SortBy = 3
	ST_SortByIcon      ST_SortBy = 4
)

func NewCT_Row() *CT_Row { _bfbdef := &CT_Row{}; return _bfbdef }

type CT_XmlPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_adfag ST_SortMethod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddeea := _b.Attr{}
	_ddeea.Name = name
	switch _adfag {
	case ST_SortMethodUnset:
		_ddeea.Value = ""
	case ST_SortMethodStroke:
		_ddeea.Value = "\u0073\u0074\u0072\u006f\u006b\u0065"
	case ST_SortMethodPinYin:
		_ddeea.Value = "\u0070\u0069\u006e\u0059\u0069\u006e"
	case ST_SortMethodNone:
		_ddeea.Value = "\u006e\u006f\u006e\u0065"
	}
	return _ddeea, nil
}
func (_fafbc *ST_Scope) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fafbc = 0
	case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
		*_fafbc = 1
	case "\u0064\u0061\u0074\u0061":
		*_fafbc = 2
	case "\u0066\u0069\u0065l\u0064":
		*_fafbc = 3
	}
	return nil
}
func (_dagdea *CT_ObjectPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dagdea.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.LockedAttr))})
	}
	if _dagdea.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.DefaultSizeAttr))})
	}
	if _dagdea.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.PrintAttr))})
	}
	if _dagdea.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.DisabledAttr))})
	}
	if _dagdea.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.UiObjectAttr))})
	}
	if _dagdea.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.AutoFillAttr))})
	}
	if _dagdea.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.AutoLineAttr))})
	}
	if _dagdea.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.AutoPictAttr))})
	}
	if _dagdea.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_dagdea.MacroAttr)})
	}
	if _dagdea.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dagdea.AltTextAttr)})
	}
	if _dagdea.DdeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dagdea.DdeAttr))})
	}
	if _dagdea.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dagdea.IdAttr)})
	}
	e.EncodeToken(start)
	_bdcgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_dagdea.Anchor, _bdcgc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RPrElt() *CT_RPrElt { _dacd := &CT_RPrElt{}; return _dacd }
func (_bbece ST_VerticalAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbece.String(), start)
}

type CT_VolMain struct {

	// First String
	FirstAttr string

	// Topic
	Tp []*CT_VolTopic
}
type CT_AutoSortScope struct {

	// Auto Sort Scope
	PivotArea *CT_PivotArea
}

func (_decbb *ST_SheetState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_decbb = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_decbb = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_decbb = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_decbb = 3
	}
	return nil
}
func (_eebee *CT_ExternalSheetData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cffacb := range start.Attr {
		if _cffacb.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_badbf, _gbagb := _e.ParseUint(_cffacb.Value, 10, 32)
			if _gbagb != nil {
				return _gbagb
			}
			_eebee.SheetIdAttr = uint32(_badbf)
			continue
		}
		if _cffacb.Name.Local == "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072" {
			_feaag, _agbgb := _e.ParseBool(_cffacb.Value)
			if _agbgb != nil {
				return _agbgb
			}
			_eebee.RefreshErrorAttr = &_feaag
			continue
		}
	}
_cbcd:
	for {
		_dgddca, _aadcd := d.Token()
		if _aadcd != nil {
			return _aadcd
		}
		switch _cgdef := _dgddca.(type) {
		case _b.StartElement:
			switch _cgdef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_acefb := NewCT_ExternalRow()
				if _cebabf := d.DecodeElement(_acefb, &_cgdef); _cebabf != nil {
					return _cebabf
				}
				_eebee.Row = append(_eebee.Row, _acefb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _cgdef.Name)
				if _gbfb := d.Skip(); _gbfb != nil {
					return _gbfb
				}
			}
		case _b.EndElement:
			break _cbcd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjects and its children, prefixing error messages with path
func (_ceaead *CT_OleObjects) ValidateWithPath(path string) error {
	for _cggca, _aeafa := range _ceaead.OleObject {
		if _fgac := _aeafa.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _cggca)); _fgac != nil {
			return _fgac
		}
	}
	return nil
}
func (_bdegcc ST_TextVAlign) ValidateWithPath(path string) error {
	switch _bdegcc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdegcc))
	}
	return nil
}

type CT_Top10 struct {

	// Top
	TopAttr *bool

	// Filter by Percent
	PercentAttr *bool

	// Top or Bottom Value
	ValAttr float64

	// Filter Value
	FilterValAttr *float64
}

// Validate validates the CT_Mdx and its children
func (_aebbc *CT_Mdx) Validate() error {
	return _aebbc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078")
}

// ValidateWithPath validates the CT_Mdx and its children, prefixing error messages with path
func (_gbdfa *CT_Mdx) ValidateWithPath(path string) error {
	if _gbdfa.FAttr == ST_MdxFunctionTypeUnset {
		return _f.Errorf("\u0025\u0073/\u0046\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _afadf := _gbdfa.FAttr.ValidateWithPath(path + "\u002f\u0046\u0041\u0074\u0074\u0072"); _afadf != nil {
		return _afadf
	}
	if _gbdfa.T != nil {
		if _cfaef := _gbdfa.T.ValidateWithPath(path + "\u002f\u0054"); _cfaef != nil {
			return _cfaef
		}
	}
	if _gbdfa.Ms != nil {
		if _cecf := _gbdfa.Ms.ValidateWithPath(path + "\u002f\u004d\u0073"); _cecf != nil {
			return _cecf
		}
	}
	if _gbdfa.P != nil {
		if _gcffa := _gbdfa.P.ValidateWithPath(path + "\u002f\u0050"); _gcffa != nil {
			return _gcffa
		}
	}
	if _gbdfa.K != nil {
		if _dbecg := _gbdfa.K.ValidateWithPath(path + "\u002f\u004b"); _dbecg != nil {
			return _dbecg
		}
	}
	return nil
}

// Validate validates the CT_RevisionHeader and its children
func (_aeage *CT_RevisionHeader) Validate() error {
	return _aeage.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072")
}
func NewCT_MemberProperties() *CT_MemberProperties { _gdggg := &CT_MemberProperties{}; return _gdggg }
func (_bfbd *CT_CustomWorkbookView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _bfbd.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bfbd.GuidAttr)})
	if _bfbd.AutoUpdateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.AutoUpdateAttr))})
	}
	if _bfbd.MergeIntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_bfbd.MergeIntervalAttr)})
	}
	if _bfbd.ChangesSavedWinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.ChangesSavedWinAttr))})
	}
	if _bfbd.OnlySyncAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.OnlySyncAttr))})
	}
	if _bfbd.PersonalViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.PersonalViewAttr))})
	}
	if _bfbd.IncludePrintSettingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.IncludePrintSettingsAttr))})
	}
	if _bfbd.IncludeHiddenRowColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.IncludeHiddenRowColAttr))})
	}
	if _bfbd.MaximizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.MaximizedAttr))})
	}
	if _bfbd.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.MinimizedAttr))})
	}
	if _bfbd.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.ShowHorizontalScrollAttr))})
	}
	if _bfbd.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.ShowVerticalScrollAttr))})
	}
	if _bfbd.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.ShowSheetTabsAttr))})
	}
	if _bfbd.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_bfbd.XWindowAttr)})
	}
	if _bfbd.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_bfbd.YWindowAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", _bfbd.WindowWidthAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", _bfbd.WindowHeightAttr)})
	if _bfbd.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_bfbd.TabRatioAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bfbd.ActiveSheetIdAttr)})
	if _bfbd.ShowFormulaBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.ShowFormulaBarAttr))})
	}
	if _bfbd.ShowStatusbarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfbd.ShowStatusbarAttr))})
	}
	if _bfbd.ShowCommentsAttr != ST_CommentsUnset {
		_cgcfe, _gedg := _bfbd.ShowCommentsAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _gedg != nil {
			return _gedg
		}
		start.Attr = append(start.Attr, _cgcfe)
	}
	if _bfbd.ShowObjectsAttr != ST_ObjectsUnset {
		_aefaa, _fgceb := _bfbd.ShowObjectsAttr.MarshalXMLAttr(_b.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _fgceb != nil {
			return _fgceb
		}
		start.Attr = append(start.Attr, _aefaa)
	}
	e.EncodeToken(start)
	if _bfbd.ExtLst != nil {
		_ebgd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bfbd.ExtLst, _ebgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CellWatch struct {

	// Reference
	RAttr string
}

func (_edcfce *CT_SmartTagType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcgdg := range start.Attr {
		if _gcgdg.Name.Local == "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069" {
			_cceab, _aecaa := _gcgdg.Value, error(nil)
			if _aecaa != nil {
				return _aecaa
			}
			_edcfce.NamespaceUriAttr = &_cceab
			continue
		}
		if _gcgdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ecbbf, _ffgfg := _gcgdg.Value, error(nil)
			if _ffgfg != nil {
				return _ffgfg
			}
			_edcfce.NameAttr = &_ecbbf
			continue
		}
		if _gcgdg.Name.Local == "\u0075\u0072\u006c" {
			_gffaa, _dbacag := _gcgdg.Value, error(nil)
			if _dbacag != nil {
				return _dbacag
			}
			_edcfce.UrlAttr = &_gffaa
			continue
		}
	}
	for {
		_bedag, _cadac := d.Token()
		if _cadac != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054a\u0067\u0054\u0079p\u0065:\u0020\u0025\u0073", _cadac)
		}
		if _caade, _caadb := _bedag.(_b.EndElement); _caadb && _caade.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Macrosheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Macro Sheet Dimensions
	Dimension *CT_SheetDimension

	// Macro Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Protection Options
	SheetProtection *CT_SheetProtection

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidation
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks (Row)
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing Reference
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture *CT_SheetBackgroundPicture

	// Embedded Objects
	OleObjects *CT_OleObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_efbeea *CT_VolMain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcefae := range start.Attr {
		if _fcefae.Name.Local == "\u0066\u0069\u0072s\u0074" {
			_bgbbe, _afbgfd := _fcefae.Value, error(nil)
			if _afbgfd != nil {
				return _afbgfd
			}
			_efbeea.FirstAttr = _bgbbe
			continue
		}
	}
_aebega:
	for {
		_fagfee, _effde := d.Token()
		if _effde != nil {
			return _effde
		}
		switch _fgfaa := _fagfee.(type) {
		case _b.StartElement:
			switch _fgfaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}:
				_aafcd := NewCT_VolTopic()
				if _gdggec := d.DecodeElement(_aafcd, &_fgfaa); _gdggec != nil {
					return _gdggec
				}
				_efbeea.Tp = append(_efbeea.Tp, _aafcd)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u004d\u0061\u0069\u006e\u0020\u0025\u0076", _fgfaa.Name)
				if _aagbb := d.Skip(); _aagbb != nil {
					return _aagbb
				}
			}
		case _b.EndElement:
			break _aebega
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_VisibilityUnset      ST_Visibility = 0
	ST_VisibilityVisible    ST_Visibility = 1
	ST_VisibilityHidden     ST_Visibility = 2
	ST_VisibilityVeryHidden ST_Visibility = 3
)

func (_dgfgbga *ST_DataValidationType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgfgbga = 0
	case "\u006e\u006f\u006e\u0065":
		*_dgfgbga = 1
	case "\u0077\u0068\u006fl\u0065":
		*_dgfgbga = 2
	case "\u0064e\u0063\u0069\u006d\u0061\u006c":
		*_dgfgbga = 3
	case "\u006c\u0069\u0073\u0074":
		*_dgfgbga = 4
	case "\u0064\u0061\u0074\u0065":
		*_dgfgbga = 5
	case "\u0074\u0069\u006d\u0065":
		*_dgfgbga = 6
	case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
		*_dgfgbga = 7
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_dgfgbga = 8
	}
	return nil
}
func (_cfcbbc *ST_CellType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeade, _bfgdf := d.Token()
	if _bfgdf != nil {
		return _bfgdf
	}
	if _cccdb, _ddfea := _eeade.(_b.EndElement); _ddfea && _cccdb.Name == start.Name {
		*_cfcbbc = 1
		return nil
	}
	if _bcageb, _ffgce := _eeade.(_b.CharData); !_ffgce {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeade)
	} else {
		switch string(_bcageb) {
		case "":
			*_cfcbbc = 0
		case "\u0062":
			*_cfcbbc = 1
		case "\u006e":
			*_cfcbbc = 2
		case "\u0065":
			*_cfcbbc = 3
		case "\u0073":
			*_cfcbbc = 4
		case "\u0073\u0074\u0072":
			*_cfcbbc = 5
		case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
			*_cfcbbc = 6
		}
	}
	_eeade, _bfgdf = d.Token()
	if _bfgdf != nil {
		return _bfgdf
	}
	if _dcgffd, _debgg := _eeade.(_b.EndElement); _debgg && _dcgffd.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeade)
}
func NewCT_DataFields() *CT_DataFields { _edeg := &CT_DataFields{}; return _edeg }

const (
	ST_TextHAlignUnset       ST_TextHAlign = 0
	ST_TextHAlignLeft        ST_TextHAlign = 1
	ST_TextHAlignCenter      ST_TextHAlign = 2
	ST_TextHAlignRight       ST_TextHAlign = 3
	ST_TextHAlignJustify     ST_TextHAlign = 4
	ST_TextHAlignDistributed ST_TextHAlign = 5
)

func (_defefa ST_GrowShrinkType) Validate() error { return _defefa.ValidateWithPath("") }

// ValidateWithPath validates the CT_RowHierarchiesUsage and its children, prefixing error messages with path
func (_fddgb *CT_RowHierarchiesUsage) ValidateWithPath(path string) error {
	for _bcfcc, _dbceef := range _fddgb.RowHierarchyUsage {
		if _bbab := _dbceef.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0052\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _bcfcc)); _bbab != nil {
			return _bbab
		}
	}
	return nil
}
func (_efabag *CT_PivotAreaReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgcaf := range start.Attr {
		if _cgcaf.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cagef, _becda := _e.ParseBool(_cgcaf.Value)
			if _becda != nil {
				return _becda
			}
			_efabag.MaxSubtotalAttr = &_cagef
			continue
		}
		if _cgcaf.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fafb, _cgbcg := _e.ParseBool(_cgcaf.Value)
			if _cgbcg != nil {
				return _cgbcg
			}
			_efabag.MinSubtotalAttr = &_fafb
			continue
		}
		if _cgcaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfabd, _gfebf := _e.ParseUint(_cgcaf.Value, 10, 32)
			if _gfebf != nil {
				return _gfebf
			}
			_fgaea := uint32(_gfabd)
			_efabag.CountAttr = &_fgaea
			continue
		}
		if _cgcaf.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cbecb, _eababc := _e.ParseBool(_cgcaf.Value)
			if _eababc != nil {
				return _eababc
			}
			_efabag.ProductSubtotalAttr = &_cbecb
			continue
		}
		if _cgcaf.Name.Local == "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_dadeec, _agea := _e.ParseBool(_cgcaf.Value)
			if _agea != nil {
				return _agea
			}
			_efabag.ByPositionAttr = &_dadeec
			continue
		}
		if _cgcaf.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fdebc, _gfgge := _e.ParseBool(_cgcaf.Value)
			if _gfgge != nil {
				return _gfgge
			}
			_efabag.CountSubtotalAttr = &_fdebc
			continue
		}
		if _cgcaf.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_daaca, _ebecd := _e.ParseBool(_cgcaf.Value)
			if _ebecd != nil {
				return _ebecd
			}
			_efabag.DefaultSubtotalAttr = &_daaca
			continue
		}
		if _cgcaf.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_ecfdd, _dddfe := _e.ParseBool(_cgcaf.Value)
			if _dddfe != nil {
				return _dddfe
			}
			_efabag.CountASubtotalAttr = &_ecfdd
			continue
		}
		if _cgcaf.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_effbc, _acebd := _e.ParseBool(_cgcaf.Value)
			if _acebd != nil {
				return _acebd
			}
			_efabag.AvgSubtotalAttr = &_effbc
			continue
		}
		if _cgcaf.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_aeedb, _aefcd := _e.ParseUint(_cgcaf.Value, 10, 32)
			if _aefcd != nil {
				return _aefcd
			}
			_cbegg := uint32(_aeedb)
			_efabag.FieldAttr = &_cbegg
			continue
		}
		if _cgcaf.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_egedb, _ccaeg := _e.ParseBool(_cgcaf.Value)
			if _ccaeg != nil {
				return _ccaeg
			}
			_efabag.SelectedAttr = &_egedb
			continue
		}
		if _cgcaf.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065" {
			_cegbc, _dddfba := _e.ParseBool(_cgcaf.Value)
			if _dddfba != nil {
				return _dddfba
			}
			_efabag.RelativeAttr = &_cegbc
			continue
		}
		if _cgcaf.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_feebdd, _cgbe := _e.ParseBool(_cgcaf.Value)
			if _cgbe != nil {
				return _cgbe
			}
			_efabag.SumSubtotalAttr = &_feebdd
			continue
		}
		if _cgcaf.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_gfgff, _dfbbc := _e.ParseBool(_cgcaf.Value)
			if _dfbbc != nil {
				return _dfbbc
			}
			_efabag.StdDevSubtotalAttr = &_gfgff
			continue
		}
		if _cgcaf.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_egdd, _aggfff := _e.ParseBool(_cgcaf.Value)
			if _aggfff != nil {
				return _aggfff
			}
			_efabag.StdDevPSubtotalAttr = &_egdd
			continue
		}
		if _cgcaf.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gabcd, _decfb := _e.ParseBool(_cgcaf.Value)
			if _decfb != nil {
				return _decfb
			}
			_efabag.VarSubtotalAttr = &_gabcd
			continue
		}
		if _cgcaf.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_efcag, _cfbeb := _e.ParseBool(_cgcaf.Value)
			if _cfbeb != nil {
				return _cfbeb
			}
			_efabag.VarPSubtotalAttr = &_efcag
			continue
		}
	}
_cdeeg:
	for {
		_eaeaec, _ccbff := d.Token()
		if _ccbff != nil {
			return _ccbff
		}
		switch _gcggf := _eaeaec.(type) {
		case _b.StartElement:
			switch _gcggf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bfbcd := NewCT_Index()
				if _ffaca := d.DecodeElement(_bfbcd, &_gcggf); _ffaca != nil {
					return _ffaca
				}
				_efabag.X = append(_efabag.X, _bfbcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efabag.ExtLst = NewCT_ExtensionList()
				if _efgd := d.DecodeElement(_efabag.ExtLst, &_gcggf); _efgd != nil {
					return _efgd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _gcggf.Name)
				if _decga := d.Skip(); _decga != nil {
					return _decga
				}
			}
		case _b.EndElement:
			break _cdeeg
		case _b.CharData:
		}
	}
	return nil
}
func (_agadaa *CT_RevisionDefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgadc := range start.Attr {
		if _fcgadc.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_ecegb, _caddg := _fcgadc.Value, error(nil)
			if _caddg != nil {
				return _caddg
			}
			_agadaa.DescriptionAttr = &_ecegb
			continue
		}
		if _fcgadc.Name.Local == "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e" {
			_gfebg, _ffaef := _fcgadc.Value, error(nil)
			if _ffaef != nil {
				return _ffaef
			}
			_agadaa.OldDescriptionAttr = &_gfebg
			continue
		}
		if _fcgadc.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077" {
			_aefcda, _dfbfg := _e.ParseBool(_fcgadc.Value)
			if _dfbfg != nil {
				return _dfbfg
			}
			_agadaa.CustomViewAttr = &_aefcda
			continue
		}
		if _fcgadc.Name.Local == "\u0068\u0065\u006c\u0070" {
			_ccbba, _cfecf := _fcgadc.Value, error(nil)
			if _cfecf != nil {
				return _cfecf
			}
			_agadaa.HelpAttr = &_ccbba
			continue
		}
		if _fcgadc.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_fgaab, _fbgeb := _e.ParseBool(_fcgadc.Value)
			if _fbgeb != nil {
				return _fbgeb
			}
			_agadaa.FunctionAttr = &_fgaab
			continue
		}
		if _fcgadc.Name.Local == "\u006fl\u0064\u0048\u0065\u006c\u0070" {
			_fbgg, _fgcbe := _fcgadc.Value, error(nil)
			if _fgcbe != nil {
				return _fgcbe
			}
			_agadaa.OldHelpAttr = &_fbgg
			continue
		}
		if _fcgadc.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_aedef, _bfaef := _e.ParseUint(_fcgadc.Value, 10, 8)
			if _bfaef != nil {
				return _bfaef
			}
			_acecd := uint8(_aedef)
			_agadaa.FunctionGroupIdAttr = &_acecd
			continue
		}
		if _fcgadc.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_gcfcf, _cfdff := _fcgadc.Value, error(nil)
			if _cfdff != nil {
				return _cfdff
			}
			_agadaa.StatusBarAttr = &_gcfcf
			continue
		}
		if _fcgadc.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_ddbba, _ebggb := _e.ParseUint(_fcgadc.Value, 10, 8)
			if _ebggb != nil {
				return _ebggb
			}
			_dagdfg := uint8(_ddbba)
			_agadaa.ShortcutKeyAttr = &_dagdfg
			continue
		}
		if _fcgadc.Name.Local == "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072" {
			_gdgdb, _ddbefb := _fcgadc.Value, error(nil)
			if _ddbefb != nil {
				return _ddbefb
			}
			_agadaa.OldStatusBarAttr = &_gdgdb
			continue
		}
		if _fcgadc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dffad, _bgddc := _e.ParseBool(_fcgadc.Value)
			if _bgddc != nil {
				return _bgddc
			}
			_agadaa.HiddenAttr = &_dffad
			continue
		}
		if _fcgadc.Name.Local == "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074" {
			_bdfaf, _fefecc := _fcgadc.Value, error(nil)
			if _fefecc != nil {
				return _fefecc
			}
			_agadaa.OldCommentAttr = &_bdfaf
			continue
		}
		if _fcgadc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfdgd, _gbgbc := _fcgadc.Value, error(nil)
			if _gbgbc != nil {
				return _gbgbc
			}
			_agadaa.NameAttr = _cfdgd
			continue
		}
		if _fcgadc.Name.Local == "\u0072\u0061" {
			_afbcgc, _bdeca := _e.ParseBool(_fcgadc.Value)
			if _bdeca != nil {
				return _bdeca
			}
			_agadaa.RaAttr = &_afbcgc
			continue
		}
		if _fcgadc.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_aedca, _aeffe := _e.ParseUint(_fcgadc.Value, 10, 32)
			if _aeffe != nil {
				return _aeffe
			}
			_cdcgg := uint32(_aedca)
			_agadaa.LocalSheetIdAttr = &_cdcgg
			continue
		}
		if _fcgadc.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_dcffbg, _cacgff := _fcgadc.Value, error(nil)
			if _cacgff != nil {
				return _cacgff
			}
			_agadaa.CommentAttr = &_dcffbg
			continue
		}
		if _fcgadc.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_aagdd, _badeeg := _fcgadc.Value, error(nil)
			if _badeeg != nil {
				return _badeeg
			}
			_agadaa.CustomMenuAttr = &_aagdd
			continue
		}
		if _fcgadc.Name.Local == "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_dbcdd, _bcdbb := _e.ParseBool(_fcgadc.Value)
			if _bcdbb != nil {
				return _bcdbb
			}
			_agadaa.OldFunctionAttr = &_dbcdd
			continue
		}
		if _fcgadc.Name.Local == "\u0075\u0061" {
			_gadgb, _fddgd := _e.ParseBool(_fcgadc.Value)
			if _fddgd != nil {
				return _fddgd
			}
			_agadaa.UaAttr = &_gadgb
			continue
		}
		if _fcgadc.Name.Local == "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079" {
			_faece, _defab := _e.ParseUint(_fcgadc.Value, 10, 8)
			if _defab != nil {
				return _defab
			}
			_daadd := uint8(_faece)
			_agadaa.OldShortcutKeyAttr = &_daadd
			continue
		}
		if _fcgadc.Name.Local == "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n" {
			_aafegf, _dggcbd := _e.ParseBool(_fcgadc.Value)
			if _dggcbd != nil {
				return _dggcbd
			}
			_agadaa.OldHiddenAttr = &_aafegf
			continue
		}
		if _fcgadc.Name.Local == "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_bfcca, _daecg := _fcgadc.Value, error(nil)
			if _daecg != nil {
				return _daecg
			}
			_agadaa.OldCustomMenuAttr = &_bfcca
			continue
		}
		if _fcgadc.Name.Local == "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064" {
			_fbfbd, _cgebda := _e.ParseUint(_fcgadc.Value, 10, 8)
			if _cgebda != nil {
				return _cgebda
			}
			_ecdgee := uint8(_fbfbd)
			_agadaa.OldFunctionGroupIdAttr = &_ecdgee
			continue
		}
		if _fcgadc.Name.Local == "\u0072\u0049\u0064" {
			_ebfcf, _edaec := _e.ParseUint(_fcgadc.Value, 10, 32)
			if _edaec != nil {
				return _edaec
			}
			_aabac := uint32(_ebfcf)
			_agadaa.RIdAttr = &_aabac
			continue
		}
	}
_egfccg:
	for {
		_cdbec, _dbcdc := d.Token()
		if _dbcdc != nil {
			return _dbcdc
		}
		switch _ddegd := _cdbec.(type) {
		case _b.StartElement:
			switch _ddegd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				_agadaa.Formula = new(string)
				if _aegdb := d.DecodeElement(_agadaa.Formula, &_ddegd); _aegdb != nil {
					return _aegdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_agadaa.OldFormula = new(string)
				if _aadca := d.DecodeElement(_agadaa.OldFormula, &_ddegd); _aadca != nil {
					return _aadca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agadaa.ExtLst = NewCT_ExtensionList()
				if _bgaag := d.DecodeElement(_agadaa.ExtLst, &_ddegd); _bgaag != nil {
					return _bgaag
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0020\u0025\u0076", _ddegd.Name)
				if _dgdcce := d.Skip(); _dgdcce != nil {
					return _dgdcce
				}
			}
		case _b.EndElement:
			break _egfccg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Pane and its children, prefixing error messages with path
func (_affae *CT_Pane) ValidateWithPath(path string) error {
	if _gccba := _affae.ActivePaneAttr.ValidateWithPath(path + "\u002fA\u0063t\u0069\u0076\u0065\u0050\u0061\u006e\u0065\u0041\u0074\u0074\u0072"); _gccba != nil {
		return _gccba
	}
	if _ggfba := _affae.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _ggfba != nil {
		return _ggfba
	}
	return nil
}

// Validate validates the CT_Fills and its children
func (_eebac *CT_Fills) Validate() error {
	return _eebac.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073")
}
func (_bceedea ST_CredMethod) ValidateWithPath(path string) error {
	switch _bceedea {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bceedea))
	}
	return nil
}
func NewCT_FontSize() *CT_FontSize { _egec := &CT_FontSize{}; return _egec }

// Validate validates the CT_PCDSCPage and its children
func (_fefeb *CT_PCDSCPage) Validate() error {
	return _fefeb.ValidateWithPath("\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065")
}
func (_dbce *CT_CellSmartTagPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0079"}, Value: _f.Sprintf("\u0025\u0076", _dbce.KeyAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _dbce.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Dxfs and its children, prefixing error messages with path
func (_bbgbcf *CT_Dxfs) ValidateWithPath(path string) error {
	for _dabe, _fgge := range _bbgbcf.Dxf {
		if _bfccf := _fgge.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044\u0078\u0066\u005b\u0025\u0064\u005d", path, _dabe)); _bfccf != nil {
			return _bfccf
		}
	}
	return nil
}
func NewCT_CustomChartsheetViews() *CT_CustomChartsheetViews {
	_bfadc := &CT_CustomChartsheetViews{}
	return _bfadc
}
func NewCT_PageFields() *CT_PageFields { _dbbaa := &CT_PageFields{}; return _dbbaa }
func (_bfcaa *CT_RevisionInsertSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bfcaa.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _bfcaa.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _bfcaa.SheetPositionAttr)})
	if _bfcaa.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bfcaa.RIdAttr)})
	}
	if _bfcaa.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfcaa.UaAttr))})
	}
	if _bfcaa.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfcaa.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egabf ST_TextVAlign) Validate() error { return _egabf.ValidateWithPath("") }

// ValidateWithPath validates the CT_Connections and its children, prefixing error messages with path
func (_egggb *CT_Connections) ValidateWithPath(path string) error {
	for _bcag, _befa := range _egggb.Connection {
		if _deabdd := _befa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _bcag)); _deabdd != nil {
			return _deabdd
		}
	}
	return nil
}
func NewCT_ExternalCell() *CT_ExternalCell { _gceab := &CT_ExternalCell{}; return _gceab }
func NewCT_CustomChartsheetView() *CT_CustomChartsheetView {
	_fefe := &CT_CustomChartsheetView{}
	_fefe.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _fefe
}

const (
	ST_CfTypeUnset             ST_CfType = 0
	ST_CfTypeExpression        ST_CfType = 1
	ST_CfTypeCellIs            ST_CfType = 2
	ST_CfTypeColorScale        ST_CfType = 3
	ST_CfTypeDataBar           ST_CfType = 4
	ST_CfTypeIconSet           ST_CfType = 5
	ST_CfTypeTop10             ST_CfType = 6
	ST_CfTypeUniqueValues      ST_CfType = 7
	ST_CfTypeDuplicateValues   ST_CfType = 8
	ST_CfTypeContainsText      ST_CfType = 9
	ST_CfTypeNotContainsText   ST_CfType = 10
	ST_CfTypeBeginsWith        ST_CfType = 11
	ST_CfTypeEndsWith          ST_CfType = 12
	ST_CfTypeContainsBlanks    ST_CfType = 13
	ST_CfTypeNotContainsBlanks ST_CfType = 14
	ST_CfTypeContainsErrors    ST_CfType = 15
	ST_CfTypeNotContainsErrors ST_CfType = 16
	ST_CfTypeTimePeriod        ST_CfType = 17
	ST_CfTypeAboveAverage      ST_CfType = 18
)

func (_fafebf ST_TextHAlign) Validate() error { return _fafebf.ValidateWithPath("") }

// ValidateWithPath validates the CT_RangeSets and its children, prefixing error messages with path
func (_adeba *CT_RangeSets) ValidateWithPath(path string) error {
	for _gefae, _beegc := range _adeba.RangeSet {
		if _bfgafd := _beegc.ValidateWithPath(_f.Sprintf("\u0025s\u002fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _gefae)); _bfgafd != nil {
			return _bfgafd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Set and its children, prefixing error messages with path
func (_bccef *CT_Set) ValidateWithPath(path string) error {
	if _ffdag := _bccef.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ffdag != nil {
		return _ffdag
	}
	for _caaba, _adfcg := range _bccef.Tpls {
		if _eebabb := _adfcg.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _caaba)); _eebabb != nil {
			return _eebabb
		}
	}
	if _bccef.SortByTuple != nil {
		if _baebdd := _bccef.SortByTuple.ValidateWithPath(path + "\u002f\u0053\u006fr\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"); _baebdd != nil {
			return _baebdd
		}
	}
	return nil
}

type CT_WorksheetSource struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}
type CT_WebPublishItems struct {

	// Web Publishing Items Count
	CountAttr *uint32

	// Web Publishing Item
	WebPublishItem []*CT_WebPublishItem
}

// ValidateWithPath validates the CT_VolTypes and its children, prefixing error messages with path
func (_accage *CT_VolTypes) ValidateWithPath(path string) error {
	for _daaed, _aaedgc := range _accage.VolType {
		if _gbgea := _aaedgc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0056\u006f\u006c\u0054\u0079\u0070e\u005b\u0025\u0064\u005d", path, _daaed)); _gbgea != nil {
			return _gbgea
		}
	}
	if _accage.ExtLst != nil {
		if _eececc := _accage.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eececc != nil {
			return _eececc
		}
	}
	return nil
}
func (_dgdcd ST_CfvoType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbecbg := _b.Attr{}
	_cbecbg.Name = name
	switch _dgdcd {
	case ST_CfvoTypeUnset:
		_cbecbg.Value = ""
	case ST_CfvoTypeNum:
		_cbecbg.Value = "\u006e\u0075\u006d"
	case ST_CfvoTypePercent:
		_cbecbg.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_CfvoTypeMax:
		_cbecbg.Value = "\u006d\u0061\u0078"
	case ST_CfvoTypeMin:
		_cbecbg.Value = "\u006d\u0069\u006e"
	case ST_CfvoTypeFormula:
		_cbecbg.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case ST_CfvoTypePercentile:
		_cbecbg.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return _cbecbg, nil
}

// Validate validates the CT_DdeValue and its children
func (_affeg *CT_DdeValue) Validate() error {
	return _affeg.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065")
}
func (_cbfgd *CT_OleObjects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebdbg:
	for {
		_acgfd, _bccca := d.Token()
		if _bccca != nil {
			return _bccca
		}
		switch _baaef := _acgfd.(type) {
		case _b.StartElement:
			switch _baaef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}:
				_fdfbd := NewCT_OleObject()
				if _abede := d.DecodeElement(_fdfbd, &_baaef); _abede != nil {
					return _abede
				}
				_cbfgd.OleObject = append(_cbfgd.OleObject, _fdfbd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fl\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073 \u0025\u0076", _baaef.Name)
				if _aeabd := d.Skip(); _aeabd != nil {
					return _aeabd
				}
			}
		case _b.EndElement:
			break _ebdbg
		case _b.CharData:
		}
	}
	return nil
}
func (_fegcca ST_CellType) Validate() error { return _fegcca.ValidateWithPath("") }

type CT_CustomChartsheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Visible State
	StateAttr ST_SheetState

	// Zoom To Fit
	ZoomToFitAttr *bool
	PageMargins   *CT_PageMargins

	// Chart Sheet Page Setup
	PageSetup    *CT_CsPageSetup
	HeaderFooter *CT_HeaderFooter
}

// ValidateWithPath validates the CT_OlapPr and its children, prefixing error messages with path
func (_bdbgd *CT_OlapPr) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Comments and its children, prefixing error messages with path
func (_ffag *CT_Comments) ValidateWithPath(path string) error {
	if _gfgb := _ffag.Authors.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u0068\u006f\u0072\u0073"); _gfgb != nil {
		return _gfgb
	}
	if _dbcg := _ffag.CommentList.ValidateWithPath(path + "\u002f\u0043\u006fm\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"); _dbcg != nil {
		return _dbcg
	}
	if _ffag.ExtLst != nil {
		if _cagae := _ffag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cagae != nil {
			return _cagae
		}
	}
	return nil
}

const (
	ST_ScopeUnset     ST_Scope = 0
	ST_ScopeSelection ST_Scope = 1
	ST_ScopeData      ST_Scope = 2
	ST_ScopeField     ST_Scope = 3
)

func (_gfacdc ST_SortBy) ValidateWithPath(path string) error {
	switch _gfacdc {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfacdc))
	}
	return nil
}
func (_bccea *CT_ChartFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bccea.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bccea.CountAttr)})
	}
	e.EncodeToken(start)
	_fgeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074"}}
	for _, _deabe := range _bccea.ChartFormat {
		e.EncodeElement(_deabe, _fgeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eefabe ST_UpdateLinks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eefabe.String(), start)
}
func NewCT_ConditionalFormatting() *CT_ConditionalFormatting {
	_fdfc := &CT_ConditionalFormatting{}
	return _fdfc
}
func (_cbaa *CT_CacheField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _cbaa.NameAttr)})
	if _cbaa.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.CaptionAttr)})
	}
	if _cbaa.PropertyNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.PropertyNameAttr)})
	}
	if _cbaa.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbaa.ServerFieldAttr))})
	}
	if _cbaa.UniqueListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbaa.UniqueListAttr))})
	}
	if _cbaa.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.NumFmtIdAttr)})
	}
	if _cbaa.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.FormulaAttr)})
	}
	if _cbaa.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.SqlTypeAttr)})
	}
	if _cbaa.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.HierarchyAttr)})
	}
	if _cbaa.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.LevelAttr)})
	}
	if _cbaa.DatabaseFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbaa.DatabaseFieldAttr))})
	}
	if _cbaa.MappingCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cbaa.MappingCountAttr)})
	}
	if _cbaa.MemberPropertyFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbaa.MemberPropertyFieldAttr))})
	}
	e.EncodeToken(start)
	if _cbaa.SharedItems != nil {
		_feea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cbaa.SharedItems, _feea)
	}
	if _cbaa.FieldGroup != nil {
		_ecde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}}
		e.EncodeElement(_cbaa.FieldGroup, _ecde)
	}
	if _cbaa.MpMap != nil {
		_ffe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u004d\u0061\u0070"}}
		for _, _ebef := range _cbaa.MpMap {
			e.EncodeElement(_ebef, _ffe)
		}
	}
	if _cbaa.ExtLst != nil {
		_gee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbaa.ExtLst, _gee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcae *CT_DrawingHF) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggec := range start.Attr {
		if _ggec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggec.Name.Local == "\u0069\u0064" || _ggec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ggec.Name.Local == "\u0069\u0064" {
			_ffdc, _abad := _ggec.Value, error(nil)
			if _abad != nil {
				return _abad
			}
			_dcae.IdAttr = _ffdc
			continue
		}
		if _ggec.Name.Local == "\u0072\u0068\u0066" {
			_agddbg, _gebf := _e.ParseUint(_ggec.Value, 10, 32)
			if _gebf != nil {
				return _gebf
			}
			_deag := uint32(_agddbg)
			_dcae.RhfAttr = &_deag
			continue
		}
		if _ggec.Name.Local == "\u006c\u0066\u006f" {
			_bdbbg, _bfeca := _e.ParseUint(_ggec.Value, 10, 32)
			if _bfeca != nil {
				return _bfeca
			}
			_bfecaa := uint32(_bdbbg)
			_dcae.LfoAttr = &_bfecaa
			continue
		}
		if _ggec.Name.Local == "\u006c\u0066\u0065" {
			_bdfg, _aaedf := _e.ParseUint(_ggec.Value, 10, 32)
			if _aaedf != nil {
				return _aaedf
			}
			_dffg := uint32(_bdfg)
			_dcae.LfeAttr = &_dffg
			continue
		}
		if _ggec.Name.Local == "\u006c\u0068\u0066" {
			_ebddf, _ecfgb := _e.ParseUint(_ggec.Value, 10, 32)
			if _ecfgb != nil {
				return _ecfgb
			}
			_gddff := uint32(_ebddf)
			_dcae.LhfAttr = &_gddff
			continue
		}
		if _ggec.Name.Local == "\u006c\u0066\u0066" {
			_bebf, _fbfbc := _e.ParseUint(_ggec.Value, 10, 32)
			if _fbfbc != nil {
				return _fbfbc
			}
			_abbee := uint32(_bebf)
			_dcae.LffAttr = &_abbee
			continue
		}
		if _ggec.Name.Local == "\u0063\u0068\u0065" {
			_gffbb, _daad := _e.ParseUint(_ggec.Value, 10, 32)
			if _daad != nil {
				return _daad
			}
			_gbab := uint32(_gffbb)
			_dcae.CheAttr = &_gbab
			continue
		}
		if _ggec.Name.Local == "\u0072\u0068\u006f" {
			_badb, _cacca := _e.ParseUint(_ggec.Value, 10, 32)
			if _cacca != nil {
				return _cacca
			}
			_edfec := uint32(_badb)
			_dcae.RhoAttr = &_edfec
			continue
		}
		if _ggec.Name.Local == "\u0072\u0068\u0065" {
			_fdbad, _gbgb := _e.ParseUint(_ggec.Value, 10, 32)
			if _gbgb != nil {
				return _gbgb
			}
			_deegd := uint32(_fdbad)
			_dcae.RheAttr = &_deegd
			continue
		}
		if _ggec.Name.Local == "\u006c\u0068\u006f" {
			_cccb, _gadcf := _e.ParseUint(_ggec.Value, 10, 32)
			if _gadcf != nil {
				return _gadcf
			}
			_aggaf := uint32(_cccb)
			_dcae.LhoAttr = &_aggaf
			continue
		}
		if _ggec.Name.Local == "\u006c\u0068\u0065" {
			_cfddf, _bfccg := _e.ParseUint(_ggec.Value, 10, 32)
			if _bfccg != nil {
				return _bfccg
			}
			_bbebe := uint32(_cfddf)
			_dcae.LheAttr = &_bbebe
			continue
		}
		if _ggec.Name.Local == "\u0063\u0068\u006f" {
			_bdda, _daaga := _e.ParseUint(_ggec.Value, 10, 32)
			if _daaga != nil {
				return _daaga
			}
			_fdfgc := uint32(_bdda)
			_dcae.ChoAttr = &_fdfgc
			continue
		}
		if _ggec.Name.Local == "\u0063\u0068\u0066" {
			_gfffaf, _bfdag := _e.ParseUint(_ggec.Value, 10, 32)
			if _bfdag != nil {
				return _bfdag
			}
			_gdcda := uint32(_gfffaf)
			_dcae.ChfAttr = &_gdcda
			continue
		}
		if _ggec.Name.Local == "\u0063\u0066\u006f" {
			_afaag, _fbebabc := _e.ParseUint(_ggec.Value, 10, 32)
			if _fbebabc != nil {
				return _fbebabc
			}
			_dbbde := uint32(_afaag)
			_dcae.CfoAttr = &_dbbde
			continue
		}
		if _ggec.Name.Local == "\u0063\u0066\u0065" {
			_ggfg, _bagae := _e.ParseUint(_ggec.Value, 10, 32)
			if _bagae != nil {
				return _bagae
			}
			_gaffa := uint32(_ggfg)
			_dcae.CfeAttr = &_gaffa
			continue
		}
		if _ggec.Name.Local == "\u0063\u0066\u0066" {
			_fbebe, _baeea := _e.ParseUint(_ggec.Value, 10, 32)
			if _baeea != nil {
				return _baeea
			}
			_fbagb := uint32(_fbebe)
			_dcae.CffAttr = &_fbagb
			continue
		}
		if _ggec.Name.Local == "\u0072\u0066\u006f" {
			_gdbc, _gcfbe := _e.ParseUint(_ggec.Value, 10, 32)
			if _gcfbe != nil {
				return _gcfbe
			}
			_egccf := uint32(_gdbc)
			_dcae.RfoAttr = &_egccf
			continue
		}
		if _ggec.Name.Local == "\u0072\u0066\u0065" {
			_fead, _ccecc := _e.ParseUint(_ggec.Value, 10, 32)
			if _ccecc != nil {
				return _ccecc
			}
			_abbbg := uint32(_fead)
			_dcae.RfeAttr = &_abbbg
			continue
		}
		if _ggec.Name.Local == "\u0072\u0066\u0066" {
			_acca, _ebac := _e.ParseUint(_ggec.Value, 10, 32)
			if _ebac != nil {
				return _ebac
			}
			_baff := uint32(_acca)
			_dcae.RffAttr = &_baff
			continue
		}
	}
	for {
		_bdgd, _egag := d.Token()
		if _egag != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0072a\u0077\u0069\u006e\u0067\u0048\u0046\u003a\u0020\u0025\u0073", _egag)
		}
		if _cbda, _gfada := _bdgd.(_b.EndElement); _gfada && _cbda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleElement and its children, prefixing error messages with path
func (_fefbd *CT_TableStyleElement) ValidateWithPath(path string) error {
	if _fefbd.TypeAttr == ST_TableStyleTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cegec := _fefbd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cegec != nil {
		return _cegec
	}
	return nil
}
func (_egfabe ST_Axis) Validate() error { return _egfabe.ValidateWithPath("") }
func (_dccfa *CT_TableStyleInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgffd := range start.Attr {
		if _dgffd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgabe, _cbbbg := _dgffd.Value, error(nil)
			if _cbbbg != nil {
				return _cbbbg
			}
			_dccfa.NameAttr = &_ddgabe
			continue
		}
		if _dgffd.Name.Local == "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e" {
			_edeabc, _gdafaf := _e.ParseBool(_dgffd.Value)
			if _gdafaf != nil {
				return _gdafaf
			}
			_dccfa.ShowFirstColumnAttr = &_edeabc
			continue
		}
		if _dgffd.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_aabfb, _eagdf := _e.ParseBool(_dgffd.Value)
			if _eagdf != nil {
				return _eagdf
			}
			_dccfa.ShowLastColumnAttr = &_aabfb
			continue
		}
		if _dgffd.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_begca, _gbdff := _e.ParseBool(_dgffd.Value)
			if _gbdff != nil {
				return _gbdff
			}
			_dccfa.ShowRowStripesAttr = &_begca
			continue
		}
		if _dgffd.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_agecb, _eegfb := _e.ParseBool(_dgffd.Value)
			if _eegfb != nil {
				return _eegfb
			}
			_dccfa.ShowColumnStripesAttr = &_agecb
			continue
		}
	}
	for {
		_bbgcc, _aeeae := d.Token()
		if _aeeae != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f: \u0025\u0073", _aeeae)
		}
		if _gcbfg, _agcfe := _bbgcc.(_b.EndElement); _agcfe && _gcbfg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eegccd *ST_GroupBy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebcag, _begfd := d.Token()
	if _begfd != nil {
		return _begfd
	}
	if _eeebg, _feeaga := _ebcag.(_b.EndElement); _feeaga && _eeebg.Name == start.Name {
		*_eegccd = 1
		return nil
	}
	if _eebff, _edcfcc := _ebcag.(_b.CharData); !_edcfcc {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebcag)
	} else {
		switch string(_eebff) {
		case "":
			*_eegccd = 0
		case "\u0072\u0061\u006eg\u0065":
			*_eegccd = 1
		case "\u0073e\u0063\u006f\u006e\u0064\u0073":
			*_eegccd = 2
		case "\u006di\u006e\u0075\u0074\u0065\u0073":
			*_eegccd = 3
		case "\u0068\u006f\u0075r\u0073":
			*_eegccd = 4
		case "\u0064\u0061\u0079\u0073":
			*_eegccd = 5
		case "\u006d\u006f\u006e\u0074\u0068\u0073":
			*_eegccd = 6
		case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
			*_eegccd = 7
		case "\u0079\u0065\u0061r\u0073":
			*_eegccd = 8
		}
	}
	_ebcag, _begfd = d.Token()
	if _begfd != nil {
		return _begfd
	}
	if _ededf, _agdff := _ebcag.(_b.EndElement); _agdff && _ededf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebcag)
}
func NewCT_ExternalLinkChoice() *CT_ExternalLinkChoice {
	_dedff := &CT_ExternalLinkChoice{}
	return _dedff
}
func (_ceaad *CT_IconFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ceaad.IconSetAttr = ST_IconSetType(1)
	for _, _afcaf := range start.Attr {
		if _afcaf.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_ceaad.IconSetAttr.UnmarshalXMLAttr(_afcaf)
			continue
		}
		if _afcaf.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_bega, _fbdcd := _e.ParseUint(_afcaf.Value, 10, 32)
			if _fbdcd != nil {
				return _fbdcd
			}
			_cfgab := uint32(_bega)
			_ceaad.IconIdAttr = &_cfgab
			continue
		}
	}
	for {
		_cggf, _befga := d.Token()
		if _befga != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049c\u006fn\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s", _befga)
		}
		if _gfcae, _eddad := _cggf.(_b.EndElement); _eddad && _gfcae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gecde *CT_CustomProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ebcce := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}}
	for _, _bdff := range _gecde.CustomPr {
		e.EncodeElement(_bdff, _ebcce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dfagb ST_IconSetType) ValidateWithPath(path string) error {
	switch _dfagb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfagb))
	}
	return nil
}
func (_ffafg *CT_PCDKPIs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbeea := range start.Attr {
		if _cbeea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_beeb, _dbebf := _e.ParseUint(_cbeea.Value, 10, 32)
			if _dbebf != nil {
				return _dbebf
			}
			_aabeb := uint32(_beeb)
			_ffafg.CountAttr = &_aabeb
			continue
		}
	}
_fbff:
	for {
		_bgcb, _aadab := d.Token()
		if _aadab != nil {
			return _aadab
		}
		switch _bgcc := _bgcb.(type) {
		case _b.StartElement:
			switch _bgcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}:
				_ccfdgf := NewCT_PCDKPI()
				if _dbbfb := d.DecodeElement(_ccfdgf, &_bgcc); _dbbfb != nil {
					return _dbbfb
				}
				_ffafg.Kpi = append(_ffafg.Kpi, _ccfdgf)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0043\u0044\u004b\u0050\u0049\u0073\u0020\u0025\u0076", _bgcc.Name)
				if _cddbe := d.Skip(); _cddbe != nil {
					return _cddbe
				}
			}
		case _b.EndElement:
			break _fbff
		case _b.CharData:
		}
	}
	return nil
}

type CT_Record struct {

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime

	// Shared Items Index
	X []*CT_Index
}

func (_ebgadd ST_CredMethod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ebgadd.String(), start)
}

type ST_TotalsRowFunction byte
type CT_FieldUsage struct {

	// Field Index
	XAttr int32
}

func (_egcbdf *EG_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egcbdf.Ext != nil {
		_bfbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _baaec := range _egcbdf.Ext {
			e.EncodeElement(_baaec, _bfbcc)
		}
	}
	return nil
}
func NewCT_SortState() *CT_SortState { _dafcc := &CT_SortState{}; return _dafcc }
func (_ccbgc *CT_Cols) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_baga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c"}}
	for _, _cfec := range _ccbgc.Col {
		e.EncodeElement(_cfec, _baga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaagb *CT_TupleCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgdf:
	for {
		_feeagb, _bccaf := d.Token()
		if _bccaf != nil {
			return _bccaf
		}
		switch _fafcg := _feeagb.(type) {
		case _b.StartElement:
			switch _fafcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}:
				_gaagb.Entries = NewCT_PCDSDTCEntries()
				if _gagff := d.DecodeElement(_gaagb.Entries, &_fafcg); _gagff != nil {
					return _gagff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}:
				_gaagb.Sets = NewCT_Sets()
				if _gaadfb := d.DecodeElement(_gaagb.Sets, &_fafcg); _gaadfb != nil {
					return _gaadfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}:
				_gaagb.QueryCache = NewCT_QueryCache()
				if _ededa := d.DecodeElement(_gaagb.QueryCache, &_fafcg); _ededa != nil {
					return _ededa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_gaagb.ServerFormats = NewCT_ServerFormats()
				if _geadca := d.DecodeElement(_gaagb.ServerFormats, &_fafcg); _geadca != nil {
					return _geadca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaagb.ExtLst = NewCT_ExtensionList()
				if _ccbebg := d.DecodeElement(_gaagb.ExtLst, &_fafcg); _ccbebg != nil {
					return _ccbebg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054u\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _fafcg.Name)
				if _bgafg := d.Skip(); _bgafg != nil {
					return _bgafg
				}
			}
		case _b.EndElement:
			break _bgdf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Format() *CT_Format {
	_ececd := &CT_Format{}
	_ececd.PivotArea = NewCT_PivotArea()
	return _ececd
}

const (
	ST_BorderStyleUnset            ST_BorderStyle = 0
	ST_BorderStyleNone             ST_BorderStyle = 1
	ST_BorderStyleThin             ST_BorderStyle = 2
	ST_BorderStyleMedium           ST_BorderStyle = 3
	ST_BorderStyleDashed           ST_BorderStyle = 4
	ST_BorderStyleDotted           ST_BorderStyle = 5
	ST_BorderStyleThick            ST_BorderStyle = 6
	ST_BorderStyleDouble           ST_BorderStyle = 7
	ST_BorderStyleHair             ST_BorderStyle = 8
	ST_BorderStyleMediumDashed     ST_BorderStyle = 9
	ST_BorderStyleDashDot          ST_BorderStyle = 10
	ST_BorderStyleMediumDashDot    ST_BorderStyle = 11
	ST_BorderStyleDashDotDot       ST_BorderStyle = 12
	ST_BorderStyleMediumDashDotDot ST_BorderStyle = 13
	ST_BorderStyleSlantDashDot     ST_BorderStyle = 14
)

// ValidateWithPath validates the CT_MdxTuple and its children, prefixing error messages with path
func (_fdgd *CT_MdxTuple) ValidateWithPath(path string) error {
	for _bccec, _egdbc := range _fdgd.N {
		if _bbefca := _egdbc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _bccec)); _bbefca != nil {
			return _bbefca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDKPIs and its children, prefixing error messages with path
func (_abbacb *CT_PCDKPIs) ValidateWithPath(path string) error {
	for _aafeg, _fcda := range _abbacb.Kpi {
		if _cbdgf := _fcda.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004b\u0070\u0069\u005b\u0025\u0064\u005d", path, _aafeg)); _cbdgf != nil {
			return _cbdgf
		}
	}
	return nil
}
func (_ccbedb *ST_Axis) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ccbedb = 0
	case "\u0061x\u0069\u0073\u0052\u006f\u0077":
		*_ccbedb = 1
	case "\u0061x\u0069\u0073\u0043\u006f\u006c":
		*_ccbedb = 2
	case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
		*_ccbedb = 3
	case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
		*_ccbedb = 4
	}
	return nil
}
func (_dfeec *CT_Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dddd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u0068\u006f\u0072\u0073"}}
	e.EncodeElement(_dfeec.Authors, _dddd)
	_dbff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074"}}
	e.EncodeElement(_dfeec.CommentList, _dbff)
	if _dfeec.ExtLst != nil {
		_fedfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfeec.ExtLst, _fedfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewPivotCacheDefinition() *PivotCacheDefinition {
	_gaecf := &PivotCacheDefinition{}
	_gaecf.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	return _gaecf
}
func (_cfaaae *ST_DvAspect) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfaaae = 0
	case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
		*_cfaaae = 1
	case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
		*_cfaaae = 2
	}
	return nil
}
func (_efedf *ST_TargetScreenSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbbgce, _cgfde := d.Token()
	if _cgfde != nil {
		return _cgfde
	}
	if _fbfcb, _becgg := _fbbgce.(_b.EndElement); _becgg && _fbfcb.Name == start.Name {
		*_efedf = 1
		return nil
	}
	if _accgcfc, _bgbdb := _fbbgce.(_b.CharData); !_bgbdb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbbgce)
	} else {
		switch string(_accgcfc) {
		case "":
			*_efedf = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_efedf = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_efedf = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_efedf = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_efedf = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_efedf = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_efedf = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_efedf = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_efedf = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_efedf = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
			*_efedf = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_efedf = 11
		}
	}
	_fbbgce, _cgfde = d.Token()
	if _cgfde != nil {
		return _cgfde
	}
	if _ccacd, _eacgg := _fbbgce.(_b.EndElement); _eacgg && _ccacd.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbbgce)
}

// Validate validates the CT_DataBinding and its children
func (_bade *CT_DataBinding) Validate() error {
	return _bade.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067")
}

// Validate validates the CT_MetadataStringIndex and its children
func (_dffda *CT_MetadataStringIndex) Validate() error {
	return _dffda.ValidateWithPath("\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078")
}
func (_daecgc *ST_MdxKPIProperty) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_daecgc = 0
	case "\u0076":
		*_daecgc = 1
	case "\u0067":
		*_daecgc = 2
	case "\u0073":
		*_daecgc = 3
	case "\u0074":
		*_daecgc = 4
	case "\u0077":
		*_daecgc = 5
	case "\u006d":
		*_daecgc = 6
	}
	return nil
}
func (_fffgbg *CT_PCDSDTCEntries) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fffgbg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fffgbg.CountAttr)})
	}
	e.EncodeToken(start)
	if _fffgbg.M != nil {
		_gddde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _efcca := range _fffgbg.M {
			e.EncodeElement(_efcca, _gddde)
		}
	}
	if _fffgbg.N != nil {
		_gfeae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _cdcbb := range _fffgbg.N {
			e.EncodeElement(_cdcbb, _gfeae)
		}
	}
	if _fffgbg.E != nil {
		_ebfcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _dgagc := range _fffgbg.E {
			e.EncodeElement(_dgagc, _ebfcd)
		}
	}
	if _fffgbg.S != nil {
		_egaeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _bfffe := range _fffgbg.S {
			e.EncodeElement(_bfffe, _egaeg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adaggf *CT_Sheets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_acbcdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074"}}
	for _, _aefcaf := range _adaggf.Sheet {
		e.EncodeElement(_aefcaf, _acbcdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffeca *ST_MdxSetOrder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgabce, _ccfee := d.Token()
	if _ccfee != nil {
		return _ccfee
	}
	if _ffbad, _ebaceb := _dgabce.(_b.EndElement); _ebaceb && _ffbad.Name == start.Name {
		*_ffeca = 1
		return nil
	}
	if _edgcf, _babag := _dgabce.(_b.CharData); !_babag {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgabce)
	} else {
		switch string(_edgcf) {
		case "":
			*_ffeca = 0
		case "\u0075":
			*_ffeca = 1
		case "\u0061":
			*_ffeca = 2
		case "\u0064":
			*_ffeca = 3
		case "\u0061\u0061":
			*_ffeca = 4
		case "\u0061\u0064":
			*_ffeca = 5
		case "\u006e\u0061":
			*_ffeca = 6
		case "\u006e\u0064":
			*_ffeca = 7
		}
	}
	_dgabce, _ccfee = d.Token()
	if _ccfee != nil {
		return _ccfee
	}
	if _dcdga, _dccfdf := _dgabce.(_b.EndElement); _dccfdf && _dcdga.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgabce)
}
func NewCT_VolTopic() *CT_VolTopic { _eeagc := &CT_VolTopic{}; return _eeagc }

type CT_DataValidations struct {

	// Disable Prompts
	DisablePromptsAttr *bool

	// Top Left Corner (X Coodrinate)
	XWindowAttr *uint32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *uint32

	// Data Validation Item Count
	CountAttr *uint32

	// Data Validation
	DataValidation []*CT_DataValidation
}

func (_gedaf *CT_Metadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfebb:
	for {
		_eaaaa, _degfa := d.Token()
		if _degfa != nil {
			return _degfa
		}
		switch _bgafb := _eaaaa.(type) {
		case _b.StartElement:
			switch _bgafb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_gedaf.MetadataTypes = NewCT_MetadataTypes()
				if _fedeb := d.DecodeElement(_gedaf.MetadataTypes, &_bgafb); _fedeb != nil {
					return _fedeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_gedaf.MetadataStrings = NewCT_MetadataStrings()
				if _gdfg := d.DecodeElement(_gedaf.MetadataStrings, &_bgafb); _gdfg != nil {
					return _gdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_gedaf.MdxMetadata = NewCT_MdxMetadata()
				if _eddac := d.DecodeElement(_gedaf.MdxMetadata, &_bgafb); _eddac != nil {
					return _eddac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_ggcg := NewCT_FutureMetadata()
				if _bdfcbd := d.DecodeElement(_ggcg, &_bgafb); _bdfcbd != nil {
					return _bdfcbd
				}
				_gedaf.FutureMetadata = append(_gedaf.FutureMetadata, _ggcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_gedaf.CellMetadata = NewCT_MetadataBlocks()
				if _dgfb := d.DecodeElement(_gedaf.CellMetadata, &_bgafb); _dgfb != nil {
					return _dgfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_gedaf.ValueMetadata = NewCT_MetadataBlocks()
				if _gcec := d.DecodeElement(_gedaf.ValueMetadata, &_bgafb); _gcec != nil {
					return _gcec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gedaf.ExtLst = NewCT_ExtensionList()
				if _fdfgf := d.DecodeElement(_gedaf.ExtLst, &_bgafb); _fdfgf != nil {
					return _fdfgf
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _bgafb.Name)
				if _ecdeba := d.Skip(); _ecdeba != nil {
					return _ecdeba
				}
			}
		case _b.EndElement:
			break _bfebb
		case _b.CharData:
		}
	}
	return nil
}
func (_fdcggb *CT_Macrosheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Name.Local = "\u006d\u0061:\u0043\u0054\u005fM\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	if _fdcggb.SheetPr != nil {
		_bbcgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fdcggb.SheetPr, _bbcgc)
	}
	if _fdcggb.Dimension != nil {
		_egbfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_fdcggb.Dimension, _egbfe)
	}
	if _fdcggb.SheetViews != nil {
		_daba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fdcggb.SheetViews, _daba)
	}
	if _fdcggb.SheetFormatPr != nil {
		_aggaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_fdcggb.SheetFormatPr, _aggaa)
	}
	if _fdcggb.Cols != nil {
		_daacg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _fcbgaf := range _fdcggb.Cols {
			e.EncodeElement(_fcbgaf, _daacg)
		}
	}
	_fbcee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_fdcggb.SheetData, _fbcee)
	if _fdcggb.SheetProtection != nil {
		_ceeada := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fdcggb.SheetProtection, _ceeada)
	}
	if _fdcggb.AutoFilter != nil {
		_dcfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fdcggb.AutoFilter, _dcfg)
	}
	if _fdcggb.SortState != nil {
		_bfcfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_fdcggb.SortState, _bfcfb)
	}
	if _fdcggb.DataConsolidate != nil {
		_fcddce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_fdcggb.DataConsolidate, _fcddce)
	}
	if _fdcggb.CustomSheetViews != nil {
		_fceb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fdcggb.CustomSheetViews, _fceb)
	}
	if _fdcggb.PhoneticPr != nil {
		_aabe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_fdcggb.PhoneticPr, _aabe)
	}
	if _fdcggb.ConditionalFormatting != nil {
		_bbbee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _gagdc := range _fdcggb.ConditionalFormatting {
			e.EncodeElement(_gagdc, _bbbee)
		}
	}
	if _fdcggb.PrintOptions != nil {
		_fdaag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fdcggb.PrintOptions, _fdaag)
	}
	if _fdcggb.PageMargins != nil {
		_bddga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fdcggb.PageMargins, _bddga)
	}
	if _fdcggb.PageSetup != nil {
		_fbcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fdcggb.PageSetup, _fbcb)
	}
	if _fdcggb.HeaderFooter != nil {
		_ffgdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fdcggb.HeaderFooter, _ffgdf)
	}
	if _fdcggb.RowBreaks != nil {
		_dagae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fdcggb.RowBreaks, _dagae)
	}
	if _fdcggb.ColBreaks != nil {
		_cgabb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fdcggb.ColBreaks, _cgabb)
	}
	if _fdcggb.CustomProperties != nil {
		_eccdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_fdcggb.CustomProperties, _eccdc)
	}
	if _fdcggb.Drawing != nil {
		_bbcba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fdcggb.Drawing, _bbcba)
	}
	if _fdcggb.LegacyDrawing != nil {
		_ddgee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fdcggb.LegacyDrawing, _ddgee)
	}
	if _fdcggb.LegacyDrawingHF != nil {
		_cacfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fdcggb.LegacyDrawingHF, _cacfa)
	}
	if _fdcggb.DrawingHF != nil {
		_fefgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fdcggb.DrawingHF, _fefgc)
	}
	if _fdcggb.Picture != nil {
		_dfea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_fdcggb.Picture, _dfea)
	}
	if _fdcggb.OleObjects != nil {
		_acaacg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_fdcggb.OleObjects, _acaacg)
	}
	if _fdcggb.ExtLst != nil {
		_eaege := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fdcggb.ExtLst, _eaege)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DdeValues and its children
func (_dfgff *CT_DdeValues) Validate() error {
	return _dfgff.ValidateWithPath("\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073")
}

// ValidateWithPath validates the AG_RevData and its children, prefixing error messages with path
func (_ag *AG_RevData) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TextFields and its children
func (_gecaa *CT_TextFields) Validate() error {
	return _gecaa.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_geafd *CT_SheetPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geafd.SyncHorizontalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.SyncHorizontalAttr))})
	}
	if _geafd.SyncVerticalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.SyncVerticalAttr))})
	}
	if _geafd.SyncRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073y\u006e\u0063\u0052\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_geafd.SyncRefAttr)})
	}
	if _geafd.TransitionEvaluationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.TransitionEvaluationAttr))})
	}
	if _geafd.TransitionEntryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.TransitionEntryAttr))})
	}
	if _geafd.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.PublishedAttr))})
	}
	if _geafd.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_geafd.CodeNameAttr)})
	}
	if _geafd.FilterModeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.FilterModeAttr))})
	}
	if _geafd.EnableFormatConditionsCalculationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_geafd.EnableFormatConditionsCalculationAttr))})
	}
	e.EncodeToken(start)
	if _geafd.TabColor != nil {
		_aaaebg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_geafd.TabColor, _aaaebg)
	}
	if _geafd.OutlinePr != nil {
		_dgceeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"}}
		e.EncodeElement(_geafd.OutlinePr, _dgceeg)
	}
	if _geafd.PageSetUpPr != nil {
		_bcebea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072"}}
		e.EncodeElement(_geafd.PageSetUpPr, _bcebea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CellFormula struct {
	TAttr    ST_CellFormulaType
	AcaAttr  *bool
	RefAttr  *string
	Dt2DAttr *bool
	DtrAttr  *bool
	Del1Attr *bool
	Del2Attr *bool
	R1Attr   *string
	R2Attr   *string
	CaAttr   *bool
	SiAttr   *uint32
	BxAttr   *bool
	Content  string
}

// Validate validates the CT_WebPublishObjects and its children
func (_dfcbfe *CT_WebPublishObjects) Validate() error {
	return _dfcbfe.ValidateWithPath("C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073")
}

type CT_PageSetUpPr struct {

	// Show Auto Page Breaks
	AutoPageBreaksAttr *bool

	// Fit To Page
	FitToPageAttr *bool
}

const (
	ST_PivotFilterTypeUnset                     ST_PivotFilterType = 0
	ST_PivotFilterTypeUnknown                   ST_PivotFilterType = 1
	ST_PivotFilterTypeCount                     ST_PivotFilterType = 2
	ST_PivotFilterTypePercent                   ST_PivotFilterType = 3
	ST_PivotFilterTypeSum                       ST_PivotFilterType = 4
	ST_PivotFilterTypeCaptionEqual              ST_PivotFilterType = 5
	ST_PivotFilterTypeCaptionNotEqual           ST_PivotFilterType = 6
	ST_PivotFilterTypeCaptionBeginsWith         ST_PivotFilterType = 7
	ST_PivotFilterTypeCaptionNotBeginsWith      ST_PivotFilterType = 8
	ST_PivotFilterTypeCaptionEndsWith           ST_PivotFilterType = 9
	ST_PivotFilterTypeCaptionNotEndsWith        ST_PivotFilterType = 10
	ST_PivotFilterTypeCaptionContains           ST_PivotFilterType = 11
	ST_PivotFilterTypeCaptionNotContains        ST_PivotFilterType = 12
	ST_PivotFilterTypeCaptionGreaterThan        ST_PivotFilterType = 13
	ST_PivotFilterTypeCaptionGreaterThanOrEqual ST_PivotFilterType = 14
	ST_PivotFilterTypeCaptionLessThan           ST_PivotFilterType = 15
	ST_PivotFilterTypeCaptionLessThanOrEqual    ST_PivotFilterType = 16
	ST_PivotFilterTypeCaptionBetween            ST_PivotFilterType = 17
	ST_PivotFilterTypeCaptionNotBetween         ST_PivotFilterType = 18
	ST_PivotFilterTypeValueEqual                ST_PivotFilterType = 19
	ST_PivotFilterTypeValueNotEqual             ST_PivotFilterType = 20
	ST_PivotFilterTypeValueGreaterThan          ST_PivotFilterType = 21
	ST_PivotFilterTypeValueGreaterThanOrEqual   ST_PivotFilterType = 22
	ST_PivotFilterTypeValueLessThan             ST_PivotFilterType = 23
	ST_PivotFilterTypeValueLessThanOrEqual      ST_PivotFilterType = 24
	ST_PivotFilterTypeValueBetween              ST_PivotFilterType = 25
	ST_PivotFilterTypeValueNotBetween           ST_PivotFilterType = 26
	ST_PivotFilterTypeDateEqual                 ST_PivotFilterType = 27
	ST_PivotFilterTypeDateNotEqual              ST_PivotFilterType = 28
	ST_PivotFilterTypeDateOlderThan             ST_PivotFilterType = 29
	ST_PivotFilterTypeDateOlderThanOrEqual      ST_PivotFilterType = 30
	ST_PivotFilterTypeDateNewerThan             ST_PivotFilterType = 31
	ST_PivotFilterTypeDateNewerThanOrEqual      ST_PivotFilterType = 32
	ST_PivotFilterTypeDateBetween               ST_PivotFilterType = 33
	ST_PivotFilterTypeDateNotBetween            ST_PivotFilterType = 34
	ST_PivotFilterTypeTomorrow                  ST_PivotFilterType = 35
	ST_PivotFilterTypeToday                     ST_PivotFilterType = 36
	ST_PivotFilterTypeYesterday                 ST_PivotFilterType = 37
	ST_PivotFilterTypeNextWeek                  ST_PivotFilterType = 38
	ST_PivotFilterTypeThisWeek                  ST_PivotFilterType = 39
	ST_PivotFilterTypeLastWeek                  ST_PivotFilterType = 40
	ST_PivotFilterTypeNextMonth                 ST_PivotFilterType = 41
	ST_PivotFilterTypeThisMonth                 ST_PivotFilterType = 42
	ST_PivotFilterTypeLastMonth                 ST_PivotFilterType = 43
	ST_PivotFilterTypeNextQuarter               ST_PivotFilterType = 44
	ST_PivotFilterTypeThisQuarter               ST_PivotFilterType = 45
	ST_PivotFilterTypeLastQuarter               ST_PivotFilterType = 46
	ST_PivotFilterTypeNextYear                  ST_PivotFilterType = 47
	ST_PivotFilterTypeThisYear                  ST_PivotFilterType = 48
	ST_PivotFilterTypeLastYear                  ST_PivotFilterType = 49
	ST_PivotFilterTypeYearToDate                ST_PivotFilterType = 50
	ST_PivotFilterTypeQ1                        ST_PivotFilterType = 51
	ST_PivotFilterTypeQ2                        ST_PivotFilterType = 52
	ST_PivotFilterTypeQ3                        ST_PivotFilterType = 53
	ST_PivotFilterTypeQ4                        ST_PivotFilterType = 54
	ST_PivotFilterTypeM1                        ST_PivotFilterType = 55
	ST_PivotFilterTypeM2                        ST_PivotFilterType = 56
	ST_PivotFilterTypeM3                        ST_PivotFilterType = 57
	ST_PivotFilterTypeM4                        ST_PivotFilterType = 58
	ST_PivotFilterTypeM5                        ST_PivotFilterType = 59
	ST_PivotFilterTypeM6                        ST_PivotFilterType = 60
	ST_PivotFilterTypeM7                        ST_PivotFilterType = 61
	ST_PivotFilterTypeM8                        ST_PivotFilterType = 62
	ST_PivotFilterTypeM9                        ST_PivotFilterType = 63
	ST_PivotFilterTypeM10                       ST_PivotFilterType = 64
	ST_PivotFilterTypeM11                       ST_PivotFilterType = 65
	ST_PivotFilterTypeM12                       ST_PivotFilterType = 66
)

func (_cfbg *CT_Pages) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dagdb := range start.Attr {
		if _dagdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eeccg, _daeaff := _e.ParseUint(_dagdb.Value, 10, 32)
			if _daeaff != nil {
				return _daeaff
			}
			_ddagb := uint32(_eeccg)
			_cfbg.CountAttr = &_ddagb
			continue
		}
	}
_geedaa:
	for {
		_gggc, _cdggc := d.Token()
		if _cdggc != nil {
			return _cdggc
		}
		switch _ggacg := _gggc.(type) {
		case _b.StartElement:
			switch _ggacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}:
				_cebgcb := NewCT_PCDSCPage()
				if _eagf := d.DecodeElement(_cebgcb, &_ggacg); _eagf != nil {
					return _eagf
				}
				_cfbg.Page = append(_cfbg.Page, _cebgcb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073\u0020\u0025\u0076", _ggacg.Name)
				if _efbgb := d.Skip(); _efbgb != nil {
					return _efbgb
				}
			}
		case _b.EndElement:
			break _geedaa
		case _b.CharData:
		}
	}
	return nil
}
func (_edffb *CT_SheetFormatPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edgefc := range start.Attr {
		if _edgefc.Name.Local == "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_aaecgd, _gabda := _e.ParseUint(_edgefc.Value, 10, 32)
			if _gabda != nil {
				return _gabda
			}
			_affegf := uint32(_aaecgd)
			_edffb.BaseColWidthAttr = &_affegf
			continue
		}
		if _edgefc.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_aecf, _dcafec := _e.ParseFloat(_edgefc.Value, 64)
			if _dcafec != nil {
				return _dcafec
			}
			_edffb.DefaultColWidthAttr = &_aecf
			continue
		}
		if _edgefc.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_dceae, _cggag := _e.ParseFloat(_edgefc.Value, 64)
			if _cggag != nil {
				return _cggag
			}
			_edffb.DefaultRowHeightAttr = _dceae
			continue
		}
		if _edgefc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_bgafce, _cdadfd := _e.ParseBool(_edgefc.Value)
			if _cdadfd != nil {
				return _cdadfd
			}
			_edffb.CustomHeightAttr = &_bgafce
			continue
		}
		if _edgefc.Name.Local == "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_adccbe, _fgded := _e.ParseBool(_edgefc.Value)
			if _fgded != nil {
				return _fgded
			}
			_edffb.ZeroHeightAttr = &_adccbe
			continue
		}
		if _edgefc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_fegdae, _ebeaa := _e.ParseBool(_edgefc.Value)
			if _ebeaa != nil {
				return _ebeaa
			}
			_edffb.ThickTopAttr = &_fegdae
			continue
		}
		if _edgefc.Name.Local == "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d" {
			_gbabe, _eagad := _e.ParseBool(_edgefc.Value)
			if _eagad != nil {
				return _eagad
			}
			_edffb.ThickBottomAttr = &_gbabe
			continue
		}
		if _edgefc.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077" {
			_gbgba, _bfabg := _e.ParseUint(_edgefc.Value, 10, 8)
			if _bfabg != nil {
				return _bfabg
			}
			_ebaccg := uint8(_gbgba)
			_edffb.OutlineLevelRowAttr = &_ebaccg
			continue
		}
		if _edgefc.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c" {
			_ceeegd, _geacgc := _e.ParseUint(_edgefc.Value, 10, 8)
			if _geacgc != nil {
				return _geacgc
			}
			_bffff := uint8(_ceeegd)
			_edffb.OutlineLevelColAttr = &_bffff
			continue
		}
	}
	for {
		_gedgd, _aacba := d.Token()
		if _aacba != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065t\u0046o\u0072\u006d\u0061\u0074\u0050\u0072\u003a \u0025\u0073", _aacba)
		}
		if _effa, _cefea := _gedgd.(_b.EndElement); _cefea && _effa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GroupItems struct {

	// Items Created Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_gddca *CT_Drawing) ValidateWithPath(path string) error { return nil }
func NewCT_TableStyle() *CT_TableStyle                        { _dedba := &CT_TableStyle{}; return _dedba }

// ValidateWithPath validates the CT_colItems and its children, prefixing error messages with path
func (_egegf *CT_colItems) ValidateWithPath(path string) error {
	for _gbdade, _eeabb := range _egegf.I {
		if _edcaf := _eeabb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _gbdade)); _edcaf != nil {
			return _edcaf
		}
	}
	return nil
}

type CT_I struct {

	// Item Type
	TAttr ST_ItemType

	// Repeated Items Count
	RAttr *uint32

	// Data Field Index
	IAttr *uint32

	// Row / Column Item Index
	X []*CT_X
}

// ValidateWithPath validates the CT_PageItem and its children, prefixing error messages with path
func (_dceag *CT_PageItem) ValidateWithPath(path string) error { return nil }
func (_fgaff *ST_VerticalAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eebbdf, _dgeaf := d.Token()
	if _dgeaf != nil {
		return _dgeaf
	}
	if _bgaegf, _cdbced := _eebbdf.(_b.EndElement); _cdbced && _bgaegf.Name == start.Name {
		*_fgaff = 1
		return nil
	}
	if _bddggf, _cgcbg := _eebbdf.(_b.CharData); !_cgcbg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eebbdf)
	} else {
		switch string(_bddggf) {
		case "":
			*_fgaff = 0
		case "\u0074\u006f\u0070":
			*_fgaff = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_fgaff = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_fgaff = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_fgaff = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_fgaff = 5
		}
	}
	_eebbdf, _dgeaf = d.Token()
	if _dgeaf != nil {
		return _dgeaf
	}
	if _addca, _efdffa := _eebbdf.(_b.EndElement); _efdffa && _addca.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eebbdf)
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_dgff *CT_Extension) ValidateWithPath(path string) error { return nil }

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func NewCT_TableStyleInfo() *CT_TableStyleInfo { _gebfb := &CT_TableStyleInfo{}; return _gebfb }
func (_cbbgb *ST_ExternalConnectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbbcff, _egcfd := d.Token()
	if _egcfd != nil {
		return _egcfd
	}
	if _gbfeea, _cdeed := _cbbcff.(_b.EndElement); _cdeed && _gbfeea.Name == start.Name {
		*_cbbgb = 1
		return nil
	}
	if _gccbd, _fgdcbd := _cbbcff.(_b.CharData); !_fgdcbd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbbcff)
	} else {
		switch string(_gccbd) {
		case "":
			*_cbbgb = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_cbbgb = 1
		case "\u0074\u0065\u0078\u0074":
			*_cbbgb = 2
		case "\u004d\u0044\u0059":
			*_cbbgb = 3
		case "\u0044\u004d\u0059":
			*_cbbgb = 4
		case "\u0059\u004d\u0044":
			*_cbbgb = 5
		case "\u004d\u0059\u0044":
			*_cbbgb = 6
		case "\u0044\u0059\u004d":
			*_cbbgb = 7
		case "\u0059\u0044\u004d":
			*_cbbgb = 8
		case "\u0073\u006b\u0069\u0070":
			*_cbbgb = 9
		case "\u0045\u004d\u0044":
			*_cbbgb = 10
		}
	}
	_cbbcff, _egcfd = d.Token()
	if _egcfd != nil {
		return _egcfd
	}
	if _ecabg, _cfaaa := _cbbcff.(_b.EndElement); _cfaaa && _ecabg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbbcff)
}

type CT_SingleXmlCells struct {

	// Table Properties
	SingleXmlCell []*CT_SingleXmlCell
}

// ValidateWithPath validates the CT_VerticalAlignFontProperty and its children, prefixing error messages with path
func (_bccacb *CT_VerticalAlignFontProperty) ValidateWithPath(path string) error {
	if _bccacb.ValAttr == _c.ST_VerticalAlignRunUnset {
		return _f.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dgfea := _bccacb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dgfea != nil {
		return _dgfea
	}
	return nil
}
func NewStyleSheet() *StyleSheet {
	_bgcce := &StyleSheet{}
	_bgcce.CT_Stylesheet = *NewCT_Stylesheet()
	return _bgcce
}

// Validate validates the PivotCacheRecords and its children
func (_geafc *PivotCacheRecords) Validate() error {
	return _geafc.ValidateWithPath("\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073")
}
func (_gaggcg *CT_XmlCellPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gaggcg.XmlPr = NewCT_XmlPr()
	for _, _egffe := range start.Attr {
		if _egffe.Name.Local == "\u0069\u0064" {
			_addbb, _gdeffc := _e.ParseUint(_egffe.Value, 10, 32)
			if _gdeffc != nil {
				return _gdeffc
			}
			_gaggcg.IdAttr = uint32(_addbb)
			continue
		}
		if _egffe.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cfagdg, _babdf := _egffe.Value, error(nil)
			if _babdf != nil {
				return _babdf
			}
			_gaggcg.UniqueNameAttr = &_cfagdg
			continue
		}
	}
_gggdb:
	for {
		_cgcdg, _dabbe := d.Token()
		if _dabbe != nil {
			return _dabbe
		}
		switch _adcbf := _cgcdg.(type) {
		case _b.StartElement:
			switch _adcbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}:
				if _gcbaf := d.DecodeElement(_gaggcg.XmlPr, &_adcbf); _gcbaf != nil {
					return _gcbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaggcg.ExtLst = NewCT_ExtensionList()
				if _gebcec := d.DecodeElement(_gaggcg.ExtLst, &_adcbf); _gebcec != nil {
					return _gebcec
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_X\u006d\u006cC\u0065\u006c\u006c\u0050\u0072\u0020\u0025\u0076", _adcbf.Name)
				if _gedgf := d.Skip(); _gedgf != nil {
					return _gedgf
				}
			}
		case _b.EndElement:
			break _gggdb
		case _b.CharData:
		}
	}
	return nil
}
func (_edag *CT_DataValidation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfde := range start.Attr {
		if _cfde.Name.Local == "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_dcbc, _cgge := _e.ParseBool(_cfde.Value)
			if _cgge != nil {
				return _cgge
			}
			_edag.ShowErrorMessageAttr = &_dcbc
			continue
		}
		if _cfde.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065" {
			_baefg, _afgfd := _cfde.Value, error(nil)
			if _afgfd != nil {
				return _afgfd
			}
			_edag.ErrorTitleAttr = &_baefg
			continue
		}
		if _cfde.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065" {
			_edag.ErrorStyleAttr.UnmarshalXMLAttr(_cfde)
			continue
		}
		if _cfde.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_edag.OperatorAttr.UnmarshalXMLAttr(_cfde)
			continue
		}
		if _cfde.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b" {
			_gddg, _fggf := _e.ParseBool(_cfde.Value)
			if _fggf != nil {
				return _fggf
			}
			_edag.AllowBlankAttr = &_gddg
			continue
		}
		if _cfde.Name.Local == "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_ccff, _eecdd := _e.ParseBool(_cfde.Value)
			if _eecdd != nil {
				return _eecdd
			}
			_edag.ShowDropDownAttr = &_ccff
			continue
		}
		if _cfde.Name.Local == "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_fcdga, _cefb := _e.ParseBool(_cfde.Value)
			if _cefb != nil {
				return _cefb
			}
			_edag.ShowInputMessageAttr = &_fcdga
			continue
		}
		if _cfde.Name.Local == "\u0074\u0079\u0070\u0065" {
			_edag.TypeAttr.UnmarshalXMLAttr(_cfde)
			continue
		}
		if _cfde.Name.Local == "\u0069m\u0065\u004d\u006f\u0064\u0065" {
			_edag.ImeModeAttr.UnmarshalXMLAttr(_cfde)
			continue
		}
		if _cfde.Name.Local == "\u0065\u0072\u0072o\u0072" {
			_gbec, _aeed := _cfde.Value, error(nil)
			if _aeed != nil {
				return _aeed
			}
			_edag.ErrorAttr = &_gbec
			continue
		}
		if _cfde.Name.Local == "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065" {
			_egace, _bdfb := _cfde.Value, error(nil)
			if _bdfb != nil {
				return _bdfb
			}
			_edag.PromptTitleAttr = &_egace
			continue
		}
		if _cfde.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_cdaed, _faefg := _cfde.Value, error(nil)
			if _faefg != nil {
				return _faefg
			}
			_edag.PromptAttr = &_cdaed
			continue
		}
		if _cfde.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_ddgae, _gfcf := ParseSliceST_Sqref(_cfde.Value)
			if _gfcf != nil {
				return _gfcf
			}
			_edag.SqrefAttr = _ddgae
			continue
		}
	}
_bgab:
	for {
		_edecc, _ccgce := d.Token()
		if _ccgce != nil {
			return _ccgce
		}
		switch _gbfaf := _edecc.(type) {
		case _b.StartElement:
			switch _gbfaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}:
				_edag.Formula1 = new(string)
				if _gdcfd := d.DecodeElement(_edag.Formula1, &_gbfaf); _gdcfd != nil {
					return _gdcfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}:
				_edag.Formula2 = new(string)
				if _dcef := d.DecodeElement(_edag.Formula2, &_gbfaf); _dcef != nil {
					return _dcef
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gbfaf.Name)
				if _aaeed := d.Skip(); _aaeed != nil {
					return _aaeed
				}
			}
		case _b.EndElement:
			break _bgab
		case _b.CharData:
		}
	}
	return nil
}
func (_dffge ST_TotalsRowFunction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dffge.String(), start)
}
func NewCT_ControlPr() *CT_ControlPr {
	_abff := &CT_ControlPr{}
	_abff.Anchor = NewCT_ObjectAnchor()
	return _abff
}

const (
	ST_ExternalConnectionTypeUnset   ST_ExternalConnectionType = 0
	ST_ExternalConnectionTypeGeneral ST_ExternalConnectionType = 1
	ST_ExternalConnectionTypeText    ST_ExternalConnectionType = 2
	ST_ExternalConnectionTypeMDY     ST_ExternalConnectionType = 3
	ST_ExternalConnectionTypeDMY     ST_ExternalConnectionType = 4
	ST_ExternalConnectionTypeYMD     ST_ExternalConnectionType = 5
	ST_ExternalConnectionTypeMYD     ST_ExternalConnectionType = 6
	ST_ExternalConnectionTypeDYM     ST_ExternalConnectionType = 7
	ST_ExternalConnectionTypeYDM     ST_ExternalConnectionType = 8
	ST_ExternalConnectionTypeSkip    ST_ExternalConnectionType = 9
	ST_ExternalConnectionTypeEMD     ST_ExternalConnectionType = 10
)

// ValidateWithPath validates the CT_CellWatches and its children, prefixing error messages with path
func (_ddbbd *CT_CellWatches) ValidateWithPath(path string) error {
	for _bcfaa, _agbf := range _ddbbd.CellWatch {
		if _ddec := _agbf.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0057\u0061\u0074\u0063\u0068\u005b\u0025\u0064\u005d", path, _bcfaa)); _ddec != nil {
			return _ddec
		}
	}
	return nil
}
func (_fcfcef ST_ExternalConnectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcfcef.String(), start)
}
func (_acefcf *CT_ExternalLinkChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gggf:
	for {
		_febc, _acada := d.Token()
		if _acada != nil {
			return _acada
		}
		switch _fefa := _febc.(type) {
		case _b.StartElement:
			switch _fefa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_acefcf.ExternalBook = NewCT_ExternalBook()
				if _ageca := d.DecodeElement(_acefcf.ExternalBook, &_fefa); _ageca != nil {
					return _ageca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_acefcf.DdeLink = NewCT_DdeLink()
				if _bgaa := d.DecodeElement(_acefcf.DdeLink, &_fefa); _bgaa != nil {
					return _bgaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_acefcf.OleLink = NewCT_OleLink()
				if _ceeec := d.DecodeElement(_acefcf.OleLink, &_fefa); _ceeec != nil {
					return _ceeec
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fefa.Name)
				if _bccgef := d.Skip(); _bccgef != nil {
					return _bccgef
				}
			}
		case _b.EndElement:
			break _gggf
		case _b.CharData:
		}
	}
	return nil
}
func (_eeabe *ST_TimePeriod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgagb, _dcfbef := d.Token()
	if _dcfbef != nil {
		return _dcfbef
	}
	if _edfgfe, _efabf := _dgagb.(_b.EndElement); _efabf && _edfgfe.Name == start.Name {
		*_eeabe = 1
		return nil
	}
	if _abdag, _bafbge := _dgagb.(_b.CharData); !_bafbge {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgagb)
	} else {
		switch string(_abdag) {
		case "":
			*_eeabe = 0
		case "\u0074\u006f\u0064a\u0079":
			*_eeabe = 1
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_eeabe = 2
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_eeabe = 3
		case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
			*_eeabe = 4
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_eeabe = 5
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_eeabe = 6
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_eeabe = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_eeabe = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_eeabe = 9
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_eeabe = 10
		}
	}
	_dgagb, _dcfbef = d.Token()
	if _dcfbef != nil {
		return _dcfbef
	}
	if _fffdf, _ceecbb := _dgagb.(_b.EndElement); _ceecbb && _fffdf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgagb)
}
func NewCT_ReviewedRevisions() *CT_ReviewedRevisions {
	_aadcc := &CT_ReviewedRevisions{}
	return _aadcc
}

// Validate validates the CT_Filter and its children
func (_gfab *CT_Filter) Validate() error {
	return _gfab.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r")
}
func (_fgga *CT_CellStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgga.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fgga.CountAttr)})
	}
	e.EncodeToken(start)
	_fcgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}}
	for _, _daag := range _fgga.CellStyle {
		e.EncodeElement(_daag, _fcgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cdeeb ST_SmartTagShow) ValidateWithPath(path string) error {
	switch _cdeeb {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdeeb))
	}
	return nil
}
func (_fbbfg *CT_SheetBackgroundPicture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgcfc := range start.Attr {
		if _dgcfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgcfc.Name.Local == "\u0069\u0064" || _dgcfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgcfc.Name.Local == "\u0069\u0064" {
			_gggega, _efgfg := _dgcfc.Value, error(nil)
			if _efgfg != nil {
				return _efgfg
			}
			_fbbfg.IdAttr = _gggega
			continue
		}
	}
	for {
		_fagebc, _eeeag := d.Token()
		if _eeeag != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0042\u0061\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0069\u0063\u0074\u0075\u0072e\u003a\u0020\u0025\u0073", _eeeag)
		}
		if _ffdcg, _bdcdc := _fagebc.(_b.EndElement); _bdcdc && _ffdcg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TableColumn and its children
func (_adfgbc *CT_TableColumn) Validate() error {
	return _adfgbc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_Location and its children
func (_dagdd *CT_Location) Validate() error {
	return _dagdd.ValidateWithPath("C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e")
}
func (_dfadg *ST_UpdateLinks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aefedf, _gcgdce := d.Token()
	if _gcgdce != nil {
		return _gcgdce
	}
	if _dfcega, _bbafbc := _aefedf.(_b.EndElement); _bbafbc && _dfcega.Name == start.Name {
		*_dfadg = 1
		return nil
	}
	if _cecgf, _bfggf := _aefedf.(_b.CharData); !_bfggf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aefedf)
	} else {
		switch string(_cecgf) {
		case "":
			*_dfadg = 0
		case "\u0075s\u0065\u0072\u0053\u0065\u0074":
			*_dfadg = 1
		case "\u006e\u0065\u0076e\u0072":
			*_dfadg = 2
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_dfadg = 3
		}
	}
	_aefedf, _gcgdce = d.Token()
	if _gcgdce != nil {
		return _gcgdce
	}
	if _bgddg, _cfbedg := _aefedf.(_b.EndElement); _cfbedg && _bgddg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aefedf)
}
func (_ffebb *CT_MRUColors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aeege:
	for {
		_dgcga, _aebdc := d.Token()
		if _aebdc != nil {
			return _aebdc
		}
		switch _ggba := _dgcga.(type) {
		case _b.StartElement:
			switch _ggba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_dbdff := NewCT_Color()
				if _eccf := d.DecodeElement(_dbdff, &_ggba); _eccf != nil {
					return _eccf
				}
				_ffebb.Color = append(_ffebb.Color, _dbdff)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0052\u0055C\u006f\u006c\u006f\u0072\u0073\u0020\u0025\u0076", _ggba.Name)
				if _efcc := d.Skip(); _efcc != nil {
					return _efcc
				}
			}
		case _b.EndElement:
			break _aeege
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_FileTypeUnset ST_FileType = 0
	ST_FileTypeMac   ST_FileType = 1
	ST_FileTypeWin   ST_FileType = 2
	ST_FileTypeDos   ST_FileType = 3
	ST_FileTypeLin   ST_FileType = 4
	ST_FileTypeOther ST_FileType = 5
)

func (_ddgba ST_IconSetType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbedde := _b.Attr{}
	_fbedde.Name = name
	switch _ddgba {
	case ST_IconSetTypeUnset:
		_fbedde.Value = ""
	case ST_IconSetType3Arrows:
		_fbedde.Value = "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType3ArrowsGray:
		_fbedde.Value = "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType3Flags:
		_fbedde.Value = "\u0033\u0046\u006c\u0061\u0067\u0073"
	case ST_IconSetType3TrafficLights1:
		_fbedde.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case ST_IconSetType3TrafficLights2:
		_fbedde.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case ST_IconSetType3Signs:
		_fbedde.Value = "\u0033\u0053\u0069\u0067\u006e\u0073"
	case ST_IconSetType3Symbols:
		_fbedde.Value = "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case ST_IconSetType3Symbols2:
		_fbedde.Value = "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case ST_IconSetType4Arrows:
		_fbedde.Value = "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType4ArrowsGray:
		_fbedde.Value = "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType4RedToBlack:
		_fbedde.Value = "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case ST_IconSetType4Rating:
		_fbedde.Value = "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType4TrafficLights:
		_fbedde.Value = "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case ST_IconSetType5Arrows:
		_fbedde.Value = "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType5ArrowsGray:
		_fbedde.Value = "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType5Rating:
		_fbedde.Value = "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType5Quarters:
		_fbedde.Value = "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return _fbedde, nil
}

const (
	ST_PivotAreaTypeUnset    ST_PivotAreaType = 0
	ST_PivotAreaTypeNone     ST_PivotAreaType = 1
	ST_PivotAreaTypeNormal   ST_PivotAreaType = 2
	ST_PivotAreaTypeData     ST_PivotAreaType = 3
	ST_PivotAreaTypeAll      ST_PivotAreaType = 4
	ST_PivotAreaTypeOrigin   ST_PivotAreaType = 5
	ST_PivotAreaTypeButton   ST_PivotAreaType = 6
	ST_PivotAreaTypeTopEnd   ST_PivotAreaType = 7
	ST_PivotAreaTypeTopRight ST_PivotAreaType = 8
)

func (_gagegb *CT_Mdx) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gagegb.FAttr = ST_MdxFunctionType(1)
	for _, _fggcf := range start.Attr {
		if _fggcf.Name.Local == "\u006e" {
			_bdecb, _bcdgb := _e.ParseUint(_fggcf.Value, 10, 32)
			if _bcdgb != nil {
				return _bcdgb
			}
			_gagegb.NAttr = uint32(_bdecb)
			continue
		}
		if _fggcf.Name.Local == "\u0066" {
			_gagegb.FAttr.UnmarshalXMLAttr(_fggcf)
			continue
		}
	}
_ecebcf:
	for {
		_gggda, _acbc := d.Token()
		if _acbc != nil {
			return _acbc
		}
		switch _ddeee := _gggda.(type) {
		case _b.StartElement:
			switch _ddeee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_gagegb.T = NewCT_MdxTuple()
				if _ggaad := d.DecodeElement(_gagegb.T, &_ddeee); _ggaad != nil {
					return _ggaad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
				_gagegb.Ms = NewCT_MdxSet()
				if _cefc := d.DecodeElement(_gagegb.Ms, &_ddeee); _cefc != nil {
					return _cefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_gagegb.P = NewCT_MdxMemeberProp()
				if _gfaae := d.DecodeElement(_gagegb.P, &_ddeee); _gfaae != nil {
					return _gfaae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
				_gagegb.K = NewCT_MdxKPI()
				if _acded := d.DecodeElement(_gagegb.K, &_ddeee); _acded != nil {
					return _acded
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0020\u0025\u0076", _ddeee.Name)
				if _fddde := d.Skip(); _fddde != nil {
					return _fddde
				}
			}
		case _b.EndElement:
			break _ecebcf
		case _b.CharData:
		}
	}
	return nil
}
func (_gdded *CT_FieldUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _f.Sprintf("\u0025\u0076", _gdded.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aeegb *ST_DvAspect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgfad, _cgebe := d.Token()
	if _cgebe != nil {
		return _cgebe
	}
	if _dgccd, _dfcfg := _dgfad.(_b.EndElement); _dfcfg && _dgccd.Name == start.Name {
		*_aeegb = 1
		return nil
	}
	if _adfafc, _cccfff := _dgfad.(_b.CharData); !_cccfff {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgfad)
	} else {
		switch string(_adfafc) {
		case "":
			*_aeegb = 0
		case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
			*_aeegb = 1
		case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
			*_aeegb = 2
		}
	}
	_dgfad, _cgebe = d.Token()
	if _cgebe != nil {
		return _cgebe
	}
	if _dbdgddc, _fgbbb := _dgfad.(_b.EndElement); _fgbbb && _dbdgddc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgfad)
}

const (
	ST_PaneStateUnset       ST_PaneState = 0
	ST_PaneStateSplit       ST_PaneState = 1
	ST_PaneStateFrozen      ST_PaneState = 2
	ST_PaneStateFrozenSplit ST_PaneState = 3
)

func (_fbbbfb *ST_RevisionAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbbce, _ffbafb := d.Token()
	if _ffbafb != nil {
		return _ffbafb
	}
	if _gdagfd, _bcfcca := _gbbce.(_b.EndElement); _bcfcca && _gdagfd.Name == start.Name {
		*_fbbbfb = 1
		return nil
	}
	if _egccfd, _acebe := _gbbce.(_b.CharData); !_acebe {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbbce)
	} else {
		switch string(_egccfd) {
		case "":
			*_fbbbfb = 0
		case "\u0061\u0064\u0064":
			*_fbbbfb = 1
		case "\u0064\u0065\u006c\u0065\u0074\u0065":
			*_fbbbfb = 2
		}
	}
	_gbbce, _ffbafb = d.Token()
	if _ffbafb != nil {
		return _ffbafb
	}
	if _cbabec, _fefag := _gbbce.(_b.EndElement); _fefag && _cbabec.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbbce)
}

// Validate validates the CT_DataRefs and its children
func (_dbfcf *CT_DataRefs) Validate() error {
	return _dbfcf.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073")
}

type CT_OlapPr struct {

	// Local Cube
	LocalAttr *bool

	// Local Cube Connection
	LocalConnectionAttr *string

	// Local Refresh
	LocalRefreshAttr *bool

	// Send Locale to OLAP
	SendLocaleAttr *bool

	// Drill Through Count
	RowDrillCountAttr *uint32

	// OLAP Fill Formatting
	ServerFillAttr *bool

	// OLAP Number Format
	ServerNumberFormatAttr *bool

	// OLAP Server Font
	ServerFontAttr *bool

	// OLAP Font Formatting
	ServerFontColorAttr *bool
}

func (_bgbbb *CT_colItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgbbb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bgbbb.CountAttr)})
	}
	e.EncodeToken(start)
	_bdgaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _agbea := range _bgbbb.I {
		e.EncodeElement(_agbea, _bdgaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorFilter and its children, prefixing error messages with path
func (_dfbd *CT_ColorFilter) ValidateWithPath(path string) error { return nil }
func (_bcdbec ST_SourceType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcdbec.String(), start)
}

// Validate validates the CT_CalcCell and its children
func (_acfag *CT_CalcCell) Validate() error {
	return _acfag.ValidateWithPath("C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c")
}
func (_dfedb *CT_RevisionMove) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dfedb.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dfedb.SourceAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _dfedb.DestinationAttr)})
	if _dfedb.SourceSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dfedb.SourceSheetIdAttr)})
	}
	if _dfedb.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dfedb.RIdAttr)})
	}
	if _dfedb.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dfedb.UaAttr))})
	}
	if _dfedb.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dfedb.RaAttr))})
	}
	e.EncodeToken(start)
	if _dfedb.Undo != nil {
		_afcada := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _fcege := range _dfedb.Undo {
			e.EncodeElement(_fcege, _afcada)
		}
	}
	if _dfedb.Rcc != nil {
		_bgdca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _dbgc := range _dfedb.Rcc {
			e.EncodeElement(_dbgc, _bgdca)
		}
	}
	if _dfedb.Rfmt != nil {
		_cecbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _gaeda := range _dfedb.Rfmt {
			e.EncodeElement(_gaeda, _cecbd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Consolidation() *CT_Consolidation {
	_dcaab := &CT_Consolidation{}
	_dcaab.RangeSets = NewCT_RangeSets()
	return _dcaab
}
func (_egfdg *CT_CustomFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcdfd := range start.Attr {
		if _bcdfd.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_egfdg.OperatorAttr.UnmarshalXMLAttr(_bcdfd)
			continue
		}
		if _bcdfd.Name.Local == "\u0076\u0061\u006c" {
			_abee, _eeeed := _bcdfd.Value, error(nil)
			if _eeeed != nil {
				return _eeeed
			}
			_egfdg.ValAttr = &_abee
			continue
		}
	}
	for {
		_fafd, _cafd := d.Token()
		if _cafd != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dF\u0069\u006c\u0074e\u0072:\u0020\u0025\u0073", _cafd)
		}
		if _dbfge, _fbfdf := _fafd.(_b.EndElement); _fbfdf && _dbfge.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggcaf *ST_PivotAreaType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccaegf, _gedga := d.Token()
	if _gedga != nil {
		return _gedga
	}
	if _gdcbag, _cbbfcd := _ccaegf.(_b.EndElement); _cbbfcd && _gdcbag.Name == start.Name {
		*_ggcaf = 1
		return nil
	}
	if _faagc, _gefbba := _ccaegf.(_b.CharData); !_gefbba {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccaegf)
	} else {
		switch string(_faagc) {
		case "":
			*_ggcaf = 0
		case "\u006e\u006f\u006e\u0065":
			*_ggcaf = 1
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_ggcaf = 2
		case "\u0064\u0061\u0074\u0061":
			*_ggcaf = 3
		case "\u0061\u006c\u006c":
			*_ggcaf = 4
		case "\u006f\u0072\u0069\u0067\u0069\u006e":
			*_ggcaf = 5
		case "\u0062\u0075\u0074\u0074\u006f\u006e":
			*_ggcaf = 6
		case "\u0074\u006f\u0070\u0045\u006e\u0064":
			*_ggcaf = 7
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_ggcaf = 8
		}
	}
	_ccaegf, _gedga = d.Token()
	if _gedga != nil {
		return _gedga
	}
	if _geafga, _caedgc := _ccaegf.(_b.EndElement); _caedgc && _geafga.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccaegf)
}
func (_cgffbd ST_TableStyleType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcbaa := _b.Attr{}
	_bcbaa.Name = name
	switch _cgffbd {
	case ST_TableStyleTypeUnset:
		_bcbaa.Value = ""
	case ST_TableStyleTypeWholeTable:
		_bcbaa.Value = "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case ST_TableStyleTypeHeaderRow:
		_bcbaa.Value = "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case ST_TableStyleTypeTotalRow:
		_bcbaa.Value = "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumn:
		_bcbaa.Value = "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeLastColumn:
		_bcbaa.Value = "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstRowStripe:
		_bcbaa.Value = "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondRowStripe:
		_bcbaa.Value = "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstColumnStripe:
		_bcbaa.Value = "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondColumnStripe:
		_bcbaa.Value = "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstHeaderCell:
		_bcbaa.Value = "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastHeaderCell:
		_bcbaa.Value = "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstTotalCell:
		_bcbaa.Value = "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastTotalCell:
		_bcbaa.Value = "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstSubtotalColumn:
		_bcbaa.Value = "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeSecondSubtotalColumn:
		_bcbaa.Value = "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case ST_TableStyleTypeThirdSubtotalColumn:
		_bcbaa.Value = "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstSubtotalRow:
		_bcbaa.Value = "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeSecondSubtotalRow:
		_bcbaa.Value = "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeThirdSubtotalRow:
		_bcbaa.Value = "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeBlankRow:
		_bcbaa.Value = "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumnSubheading:
		_bcbaa.Value = "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondColumnSubheading:
		_bcbaa.Value = "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case ST_TableStyleTypeThirdColumnSubheading:
		_bcbaa.Value = "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeFirstRowSubheading:
		_bcbaa.Value = "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondRowSubheading:
		_bcbaa.Value = "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeThirdRowSubheading:
		_bcbaa.Value = "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypePageFieldLabels:
		_bcbaa.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case ST_TableStyleTypePageFieldValues:
		_bcbaa.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _bcbaa, nil
}

// ValidateWithPath validates the CT_DefinedNames and its children, prefixing error messages with path
func (_fccd *CT_DefinedNames) ValidateWithPath(path string) error {
	for _gdfd, _deac := range _fccd.DefinedName {
		if _gdccb := _deac.ValidateWithPath(_f.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _gdfd)); _gdccb != nil {
			return _gdccb
		}
	}
	return nil
}
func (_bfffd *CT_WebPublishObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcadg := range start.Attr {
		if _dcadg.Name.Local == "\u0069\u0064" {
			_gfefb, _fbafbb := _e.ParseUint(_dcadg.Value, 10, 32)
			if _fbafbb != nil {
				return _fbafbb
			}
			_bfffd.IdAttr = uint32(_gfefb)
			continue
		}
		if _dcadg.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_bafeg, _befgf := _dcadg.Value, error(nil)
			if _befgf != nil {
				return _befgf
			}
			_bfffd.DivIdAttr = _bafeg
			continue
		}
		if _dcadg.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_bcafb, _cfggd := _dcadg.Value, error(nil)
			if _cfggd != nil {
				return _cfggd
			}
			_bfffd.SourceObjectAttr = &_bcafb
			continue
		}
		if _dcadg.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_feaad, _gefgba := _dcadg.Value, error(nil)
			if _gefgba != nil {
				return _gefgba
			}
			_bfffd.DestinationFileAttr = _feaad
			continue
		}
		if _dcadg.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_eefag, _acfba := _dcadg.Value, error(nil)
			if _acfba != nil {
				return _acfba
			}
			_bfffd.TitleAttr = &_eefag
			continue
		}
		if _dcadg.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_fddfg, _deeef := _e.ParseBool(_dcadg.Value)
			if _deeef != nil {
				return _deeef
			}
			_bfffd.AutoRepublishAttr = &_fddfg
			continue
		}
	}
	for {
		_cdbff, _gedeg := d.Token()
		if _gedeg != nil {
			return _f.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0057\u0065\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gedeg)
		}
		if _ddcfe, _gaced := _cdbff.(_b.EndElement); _gaced && _ddcfe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gdgag *CT_Field) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _f.Sprintf("\u0025\u0076", _gdgag.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RangeSet() *CT_RangeSet { _ddfca := &CT_RangeSet{}; return _ddfca }
func (_ecbae ST_Qualifier) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aeafg := _b.Attr{}
	_aeafg.Name = name
	switch _ecbae {
	case ST_QualifierUnset:
		_aeafg.Value = ""
	case ST_QualifierDoubleQuote:
		_aeafg.Value = "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierSingleQuote:
		_aeafg.Value = "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierNone:
		_aeafg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _aeafg, nil
}

// ValidateWithPath validates the CT_ExternalCell and its children, prefixing error messages with path
func (_abed *CT_ExternalCell) ValidateWithPath(path string) error {
	if _gfbg := _abed.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gfbg != nil {
		return _gfbg
	}
	return nil
}
func (_dabfc *CT_Items) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dabfc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dabfc.CountAttr)})
	}
	e.EncodeToken(start)
	_dfcde := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0069\u0074\u0065\u006d"}}
	for _, _gfddd := range _dabfc.Item {
		e.EncodeElement(_gfddd, _dfcde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccbbae *CT_Selection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccbbae.PaneAttr != ST_PaneUnset {
		_begdcd, _begfg := _ccbbae.PaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _begfg != nil {
			return _begfg
		}
		start.Attr = append(start.Attr, _begdcd)
	}
	if _ccbbae.ActiveCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_ccbbae.ActiveCellAttr)})
	}
	if _ccbbae.ActiveCellIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ccbbae.ActiveCellIdAttr)})
	}
	if _ccbbae.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_ccbbae.SqrefAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fecd *CT_ChartsheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cccggd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _dfbgc := range _fecd.SheetView {
		e.EncodeElement(_dfbgc, _cccggd)
	}
	if _fecd.ExtLst != nil {
		_bgfd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fecd.ExtLst, _bgfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcff *CT_TableColumns) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aabef := range start.Attr {
		if _aabef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecagf, _ffbaa := _e.ParseUint(_aabef.Value, 10, 32)
			if _ffbaa != nil {
				return _ffbaa
			}
			_bbeeda := uint32(_ecagf)
			_bcff.CountAttr = &_bbeeda
			continue
		}
	}
_eaddf:
	for {
		_ggecb, _fabff := d.Token()
		if _fabff != nil {
			return _fabff
		}
		switch _cebecf := _ggecb.(type) {
		case _b.StartElement:
			switch _cebecf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_gfeab := NewCT_TableColumn()
				if _adfaff := d.DecodeElement(_gfeab, &_cebecf); _adfaff != nil {
					return _adfaff
				}
				_bcff.TableColumn = append(_bcff.TableColumn, _gfeab)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0020\u0025\u0076", _cebecf.Name)
				if _ddagc := d.Skip(); _ddagc != nil {
					return _ddagc
				}
			}
		case _b.EndElement:
			break _eaddf
		case _b.CharData:
		}
	}
	return nil
}
func (_bdbeaa ST_PageOrder) ValidateWithPath(path string) error {
	switch _bdbeaa {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdbeaa))
	}
	return nil
}
func (_fgdde *CT_LegacyDrawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fgdde.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type Worksheet struct{ CT_Worksheet }
type CT_IntProperty struct {

	// Value
	ValAttr int32
}

// ValidateWithPath validates the PivotTableDefinition and its children, prefixing error messages with path
func (_ffagc *PivotTableDefinition) ValidateWithPath(path string) error {
	if _fbcgfa := _ffagc.CT_pivotTableDefinition.ValidateWithPath(path); _fbcgfa != nil {
		return _fbcgfa
	}
	return nil
}
func NewCT_DdeValues() *CT_DdeValues { _bfbbg := &CT_DdeValues{}; return _bfbbg }

type Users struct{ CT_Users }

func (_fcgcc *CT_ChartFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0074"}, Value: _f.Sprintf("\u0025\u0076", _fcgcc.ChartAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0076", _fcgcc.FormatAttr)})
	if _fcgcc.SeriesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0069\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fcgcc.SeriesAttr))})
	}
	e.EncodeToken(start)
	_eaee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_fcgcc.PivotArea, _eaee)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the AG_RevData and its children
func (_cf *AG_RevData) Validate() error {
	return _cf.ValidateWithPath("\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061")
}

type ST_FilterOperator byte

func (_bfedff ST_PhoneticAlignment) String() string {
	switch _bfedff {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

const (
	ST_CredMethodUnset      ST_CredMethod = 0
	ST_CredMethodIntegrated ST_CredMethod = 1
	ST_CredMethodNone       ST_CredMethod = 2
	ST_CredMethodStored     ST_CredMethod = 3
	ST_CredMethodPrompt     ST_CredMethod = 4
)

type CT_SmartTagType struct {

	// SmartTag Namespace URI
	NamespaceUriAttr *string

	// Name
	NameAttr *string

	// Smart Tag URL
	UrlAttr *string
}
type CT_MetadataBlocks struct {

	// Metadata Block Count
	CountAttr *uint32

	// Metadata Block
	Bk []*CT_MetadataBlock
}

func (_eaaaad ST_PivotAreaType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eaaaad.String(), start)
}

type CT_Member struct {

	// Hidden Item Name
	NameAttr string
}

func (_gebgaa ST_SmartTagShow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gebgaa.String(), start)
}
func (_eccgg ST_DataValidationType) ValidateWithPath(path string) error {
	switch _eccgg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eccgg))
	}
	return nil
}
func (_baaecf ST_ParameterType) ValidateWithPath(path string) error {
	switch _baaecf {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baaecf))
	}
	return nil
}
func (_fdega *CT_Fonts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdega.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fdega.CountAttr)})
	}
	e.EncodeToken(start)
	if _fdega.Font != nil {
		_caagdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		for _, _ecaae := range _fdega.Font {
			e.EncodeElement(_ecaae, _caagdd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adaf *CT_ConditionalFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dedcb := range start.Attr {
		if _dedcb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecaag, _fdaa := _e.ParseUint(_dedcb.Value, 10, 32)
			if _fdaa != nil {
				return _fdaa
			}
			_cgfgf := uint32(_ecaag)
			_adaf.CountAttr = &_cgfgf
			continue
		}
	}
_dfgc:
	for {
		_gceg, _adag := d.Token()
		if _adag != nil {
			return _adag
		}
		switch _ecfd := _gceg.(type) {
		case _b.StartElement:
			switch _ecfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}:
				_bffb := NewCT_ConditionalFormat()
				if _fbbb := d.DecodeElement(_bffb, &_ecfd); _fbbb != nil {
					return _fbbb
				}
				_adaf.ConditionalFormat = append(_adaf.ConditionalFormat, _bffb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _ecfd.Name)
				if _befge := d.Skip(); _befge != nil {
					return _befge
				}
			}
		case _b.EndElement:
			break _dfgc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_HierarchyUsage and its children
func (_dadccd *CT_HierarchyUsage) Validate() error {
	return _dadccd.ValidateWithPath("\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065")
}
func (_gdgbf ST_Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdgbf.String(), start)
}
func (_gbafa ST_MdxSetOrder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbafa.String(), start)
}

// ValidateWithPath validates the CT_Cols and its children, prefixing error messages with path
func (_ecac *CT_Cols) ValidateWithPath(path string) error {
	for _ccbfg, _eccc := range _ecac.Col {
		if _caae := _eccc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006c\u005b\u0025\u0064\u005d", path, _ccbfg)); _caae != nil {
			return _caae
		}
	}
	return nil
}
func (_daaacd ST_PhoneticAlignment) ValidateWithPath(path string) error {
	switch _daaacd {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_daaacd))
	}
	return nil
}
func (_daebf *Dialogsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0064\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074"
	return _daebf.CT_Dialogsheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_WebPr and its children, prefixing error messages with path
func (_dfaaff *CT_WebPr) ValidateWithPath(path string) error {
	if _fcfce := _dfaaff.HtmlFormatAttr.ValidateWithPath(path + "\u002fH\u0074m\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0041\u0074\u0074\u0072"); _fcfce != nil {
		return _fcfce
	}
	if _dfaaff.Tables != nil {
		if _eaage := _dfaaff.Tables.ValidateWithPath(path + "\u002fT\u0061\u0062\u006c\u0065\u0073"); _eaage != nil {
			return _eaage
		}
	}
	return nil
}
func NewCT_Cfvo() *CT_Cfvo                   { _gcad := &CT_Cfvo{}; _gcad.TypeAttr = ST_CfvoType(1); return _gcad }
func NewCT_MeasureGroups() *CT_MeasureGroups { _cbdbda := &CT_MeasureGroups{}; return _cbdbda }

// ValidateWithPath validates the CT_PivotCaches and its children, prefixing error messages with path
func (_efaec *CT_PivotCaches) ValidateWithPath(path string) error {
	for _gabce, _cdaag := range _efaec.PivotCache {
		if _fcebd := _cdaag.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u005b\u0025\u0064\u005d", path, _gabce)); _fcebd != nil {
			return _fcebd
		}
	}
	return nil
}
func NewAG_AutoFormat() *AG_AutoFormat { _fd := &AG_AutoFormat{}; return _fd }

type CT_NumFmts struct {

	// Number Format Count
	CountAttr *uint32

	// Number Formats
	NumFmt []*CT_NumFmt
}

// ValidateWithPath validates the CT_MetadataRecord and its children, prefixing error messages with path
func (_cdeea *CT_MetadataRecord) ValidateWithPath(path string) error { return nil }
func (_fgdgdc *ST_GradientType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_degdcd, _daace := d.Token()
	if _daace != nil {
		return _daace
	}
	if _efecgb, _gedcde := _degdcd.(_b.EndElement); _gedcde && _efecgb.Name == start.Name {
		*_fgdgdc = 1
		return nil
	}
	if _bcagbe, _fecdcb := _degdcd.(_b.CharData); !_fecdcb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _degdcd)
	} else {
		switch string(_bcagbe) {
		case "":
			*_fgdgdc = 0
		case "\u006c\u0069\u006e\u0065\u0061\u0072":
			*_fgdgdc = 1
		case "\u0070\u0061\u0074\u0068":
			*_fgdgdc = 2
		}
	}
	_degdcd, _daace = d.Token()
	if _daace != nil {
		return _daace
	}
	if _agcfbe, _dedceg := _degdcd.(_b.EndElement); _dedceg && _agcfbe.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _degdcd)
}

type CT_DeletedField struct {

	// Deleted Fields Name
	NameAttr string
}

func NewCT_VerticalAlignFontProperty() *CT_VerticalAlignFontProperty {
	_dfdcgc := &CT_VerticalAlignFontProperty{}
	_dfdcgc.ValAttr = _c.ST_VerticalAlignRun(1)
	return _dfdcgc
}
func (_agbe *CT_Map) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0049\u0044"}, Value: _f.Sprintf("\u0025\u0076", _agbe.IDAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _agbe.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", _agbe.RootElementAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044"}, Value: _f.Sprintf("\u0025\u0076", _agbe.SchemaIDAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_agbe.ShowImportExportValidationErrorsAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0041u\u0074\u006f\u0046\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_agbe.AutoFitAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0041\u0070\u0070\u0065\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_agbe.AppendAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_agbe.PreserveSortAFLayoutAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_agbe.PreserveFormatAttr))})
	e.EncodeToken(start)
	if _agbe.DataBinding != nil {
		_ccebf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067"}}
		e.EncodeElement(_agbe.DataBinding, _ccebf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_CalcCell() *CT_CalcCell { _eeba := &CT_CalcCell{}; return _eeba }

// ValidateWithPath validates the CT_CellSmartTags and its children, prefixing error messages with path
func (_cffb *CT_CellSmartTags) ValidateWithPath(path string) error {
	for _dbcb, _eacc := range _cffb.CellSmartTag {
		if _dgbe := _eacc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043el\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _dbcb)); _dgbe != nil {
			return _dgbe
		}
	}
	return nil
}
func (_gefcb *CT_WebPublishObjects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bccce := range start.Attr {
		if _bccce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbgfg, _gcce := _e.ParseUint(_bccce.Value, 10, 32)
			if _gcce != nil {
				return _gcce
			}
			_aacbgb := uint32(_dbgfg)
			_gefcb.CountAttr = &_aacbgb
			continue
		}
	}
_ccggf:
	for {
		_fgfaab, _bffea := d.Token()
		if _bffea != nil {
			return _bffea
		}
		switch _gcbbbc := _fgfaab.(type) {
		case _b.StartElement:
			switch _gcbbbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}:
				_gdega := NewCT_WebPublishObject()
				if _fdbd := d.DecodeElement(_gdega, &_gcbbbc); _fdbd != nil {
					return _fdbd
				}
				_gefcb.WebPublishObject = append(_gefcb.WebPublishObject, _gdega)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _gcbbbc.Name)
				if _dafed := d.Skip(); _dafed != nil {
					return _dafed
				}
			}
		case _b.EndElement:
			break _ccggf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FutureMetadataBlock and its children
func (_ffead *CT_FutureMetadataBlock) Validate() error {
	return _ffead.ValidateWithPath("\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b")
}
func (_fdgdg *CT_WebPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdgdg.XmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.XmlAttr))})
	}
	if _fdgdg.SourceDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.SourceDataAttr))})
	}
	if _fdgdg.ParsePreAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.ParsePreAttr))})
	}
	if _fdgdg.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.ConsecutiveAttr))})
	}
	if _fdgdg.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.FirstRowAttr))})
	}
	if _fdgdg.Xl97Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u0039\u0037"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.Xl97Attr))})
	}
	if _fdgdg.TextDatesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.TextDatesAttr))})
	}
	if _fdgdg.Xl2000Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u0032\u0030\u0030\u0030"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.Xl2000Attr))})
	}
	if _fdgdg.UrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_fdgdg.UrlAttr)})
	}
	if _fdgdg.PostAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fdgdg.PostAttr)})
	}
	if _fdgdg.HtmlTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fdgdg.HtmlTablesAttr))})
	}
	if _fdgdg.HtmlFormatAttr != ST_HtmlFmtUnset {
		_cbbeef, _cdagf := _fdgdg.HtmlFormatAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074"})
		if _cdagf != nil {
			return _cdagf
		}
		start.Attr = append(start.Attr, _cbbeef)
	}
	if _fdgdg.EditPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_fdgdg.EditPageAttr)})
	}
	e.EncodeToken(start)
	if _fdgdg.Tables != nil {
		_bbfcee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0061\u0062\u006c\u0065s"}}
		e.EncodeElement(_fdgdg.Tables, _bbfcee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eggef *CT_ExternalDefinedNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgcada:
	for {
		_dfab, _ccba := d.Token()
		if _ccba != nil {
			return _ccba
		}
		switch _aadae := _dfab.(type) {
		case _b.StartElement:
			switch _aadae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_fgdaf := NewCT_ExternalDefinedName()
				if _gfea := d.DecodeElement(_fgdaf, &_aadae); _gfea != nil {
					return _gfea
				}
				_eggef.DefinedName = append(_eggef.DefinedName, _fgdaf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0044e\u0066\u0069\u006e\u0065\u0064\u004ea\u006d\u0065\u0073 \u0025\u0076", _aadae.Name)
				if _dffbc := d.Skip(); _dffbc != nil {
					return _dffbc
				}
			}
		case _b.EndElement:
			break _bgcada
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CellXfs() *CT_CellXfs { _acbe := &CT_CellXfs{}; return _acbe }

type CT_TableStyle struct {

	// Table Style Name
	NameAttr string

	// Pivot Style
	PivotAttr *bool

	// Table
	TableAttr *bool

	// Table Style Count
	CountAttr *uint32

	// Table Style
	TableStyleElement []*CT_TableStyleElement
}

func (_aaaaf *ST_FormulaExpression) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgcdf, _ceggf := d.Token()
	if _ceggf != nil {
		return _ceggf
	}
	if _cgefb, _accca := _dgcdf.(_b.EndElement); _accca && _cgefb.Name == start.Name {
		*_aaaaf = 1
		return nil
	}
	if _fcfef, _dafdgb := _dgcdf.(_b.CharData); !_dafdgb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgcdf)
	} else {
		switch string(_fcfef) {
		case "":
			*_aaaaf = 0
		case "\u0072\u0065\u0066":
			*_aaaaf = 1
		case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
			*_aaaaf = 2
		case "\u0061\u0072\u0065\u0061":
			*_aaaaf = 3
		case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
			*_aaaaf = 4
		case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
			*_aaaaf = 5
		}
	}
	_dgcdf, _ceggf = d.Token()
	if _ceggf != nil {
		return _ceggf
	}
	if _defacc, _gfdcfc := _dgcdf.(_b.EndElement); _gfdcfc && _defacc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgcdf)
}

type CT_Font struct {

	// Font Name
	Name []*CT_FontName

	// Character Set
	Charset []*CT_IntProperty

	// Font Family
	Family []*CT_FontFamily

	// Bold
	B []*CT_BooleanProperty

	// Italic
	I []*CT_BooleanProperty

	// Strike Through
	Strike []*CT_BooleanProperty

	// Outline
	Outline []*CT_BooleanProperty

	// Shadow
	Shadow []*CT_BooleanProperty

	// Condense
	Condense []*CT_BooleanProperty

	// Extend
	Extend []*CT_BooleanProperty

	// Text Color
	Color []*CT_Color

	// Font Size
	Sz []*CT_FontSize

	// Underline
	U []*CT_UnderlineProperty

	// Text Vertical Alignment
	VertAlign []*CT_VerticalAlignFontProperty

	// Scheme
	Scheme []*CT_FontScheme
}

func (_faceb ST_UpdateLinks) String() string {
	switch _faceb {
	case 0:
		return ""
	case 1:
		return "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case 2:
		return "\u006e\u0065\u0076e\u0072"
	case 3:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}
func (_decbe *CT_TextFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _baega := range start.Attr {
		if _baega.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbbfgc, _edddf := _e.ParseUint(_baega.Value, 10, 32)
			if _edddf != nil {
				return _edddf
			}
			_ebfea := uint32(_fbbfgc)
			_decbe.CountAttr = &_ebfea
			continue
		}
	}
_befadd:
	for {
		_cdfea, _eadcff := d.Token()
		if _eadcff != nil {
			return _eadcff
		}
		switch _afcgc := _cdfea.(type) {
		case _b.StartElement:
			switch _afcgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}:
				_fcbdd := NewCT_TextField()
				if _cffag := d.DecodeElement(_fcbdd, &_afcgc); _cffag != nil {
					return _cffag
				}
				_decbe.TextField = append(_decbe.TextField, _fcbdd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054e\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _afcgc.Name)
				if _bddgg := d.Skip(); _bddgg != nil {
					return _bddgg
				}
			}
		case _b.EndElement:
			break _befadd
		case _b.CharData:
		}
	}
	return nil
}
func (_fbcba ST_IconSetType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbcba.String(), start)
}

// ValidateWithPath validates the CT_CalculatedMember and its children, prefixing error messages with path
func (_fca *CT_CalculatedMember) ValidateWithPath(path string) error {
	if _fca.ExtLst != nil {
		if _afaf := _fca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afaf != nil {
			return _afaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolType and its children, prefixing error messages with path
func (_cecee *CT_VolType) ValidateWithPath(path string) error {
	if _cecee.TypeAttr == ST_VolDepTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ggagc := _cecee.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ggagc != nil {
		return _ggagc
	}
	for _edcba, _cffbf := range _cecee.Main {
		if _addbc := _cffbf.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u004d\u0061\u0069\u006e\u005b\u0025\u0064\u005d", path, _edcba)); _addbc != nil {
			return _addbc
		}
	}
	return nil
}
func (_dfcee *Connections) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073"
	return _dfcee.CT_Connections.MarshalXML(e, start)
}
func NewCT_SheetDimension() *CT_SheetDimension { _fdbg := &CT_SheetDimension{}; return _fdbg }
func (_debbed *ST_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbdae, _fecedc := d.Token()
	if _fecedc != nil {
		return _fecedc
	}
	if _adcfc, _acbgb := _cbdae.(_b.EndElement); _acbgb && _adcfc.Name == start.Name {
		*_debbed = 1
		return nil
	}
	if _cddff, _gafff := _cbdae.(_b.CharData); !_gafff {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbdae)
	} else {
		switch string(_cddff) {
		case "":
			*_debbed = 0
		case "\u006e\u006f\u006e\u0065":
			*_debbed = 1
		case "\u006d\u0061\u006ao\u0072":
			*_debbed = 2
		case "\u006d\u0069\u006eo\u0072":
			*_debbed = 3
		}
	}
	_cbdae, _fecedc = d.Token()
	if _fecedc != nil {
		return _fecedc
	}
	if _acegb, _facfec := _cbdae.(_b.EndElement); _facfec && _acegb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbdae)
}

// Validate validates the CT_SmartTags and its children
func (_fbaea *CT_SmartTags) Validate() error {
	return _fbaea.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

type CT_DefinedName struct {
	NameAttr              string
	CommentAttr           *string
	CustomMenuAttr        *string
	DescriptionAttr       *string
	HelpAttr              *string
	StatusBarAttr         *string
	LocalSheetIdAttr      *uint32
	HiddenAttr            *bool
	FunctionAttr          *bool
	VbProcedureAttr       *bool
	XlmAttr               *bool
	FunctionGroupIdAttr   *uint32
	ShortcutKeyAttr       *string
	PublishToServerAttr   *bool
	WorkbookParameterAttr *bool
	Content               string
}

func (_cgbcf *CT_Macrosheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgbcf.SheetData = NewCT_SheetData()
_gegde:
	for {
		_ebbdg, _debfa := d.Token()
		if _debfa != nil {
			return _debfa
		}
		switch _aaced := _ebbdg.(type) {
		case _b.StartElement:
			switch _aaced.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_cgbcf.SheetPr = NewCT_SheetPr()
				if _effea := d.DecodeElement(_cgbcf.SheetPr, &_aaced); _effea != nil {
					return _effea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_cgbcf.Dimension = NewCT_SheetDimension()
				if _babec := d.DecodeElement(_cgbcf.Dimension, &_aaced); _babec != nil {
					return _babec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cgbcf.SheetViews = NewCT_SheetViews()
				if _ebagd := d.DecodeElement(_cgbcf.SheetViews, &_aaced); _ebagd != nil {
					return _ebagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_cgbcf.SheetFormatPr = NewCT_SheetFormatPr()
				if _eccee := d.DecodeElement(_cgbcf.SheetFormatPr, &_aaced); _eccee != nil {
					return _eccee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_cfbdc := NewCT_Cols()
				if _fbefc := d.DecodeElement(_cfbdc, &_aaced); _fbefc != nil {
					return _fbefc
				}
				_cgbcf.Cols = append(_cgbcf.Cols, _cfbdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _cfcce := d.DecodeElement(_cgbcf.SheetData, &_aaced); _cfcce != nil {
					return _cfcce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cgbcf.SheetProtection = NewCT_SheetProtection()
				if _fecda := d.DecodeElement(_cgbcf.SheetProtection, &_aaced); _fecda != nil {
					return _fecda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cgbcf.AutoFilter = NewCT_AutoFilter()
				if _fbbbe := d.DecodeElement(_cgbcf.AutoFilter, &_aaced); _fbbbe != nil {
					return _fbbbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_cgbcf.SortState = NewCT_SortState()
				if _bggade := d.DecodeElement(_cgbcf.SortState, &_aaced); _bggade != nil {
					return _bggade
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_cgbcf.DataConsolidate = NewCT_DataConsolidate()
				if _dgdag := d.DecodeElement(_cgbcf.DataConsolidate, &_aaced); _dgdag != nil {
					return _dgdag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cgbcf.CustomSheetViews = NewCT_CustomSheetViews()
				if _ddfbb := d.DecodeElement(_cgbcf.CustomSheetViews, &_aaced); _ddfbb != nil {
					return _ddfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_cgbcf.PhoneticPr = NewCT_PhoneticPr()
				if _cgagd := d.DecodeElement(_cgbcf.PhoneticPr, &_aaced); _cgagd != nil {
					return _cgagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_gfdcd := NewCT_ConditionalFormatting()
				if _efggc := d.DecodeElement(_gfdcd, &_aaced); _efggc != nil {
					return _efggc
				}
				_cgbcf.ConditionalFormatting = append(_cgbcf.ConditionalFormatting, _gfdcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_cgbcf.PrintOptions = NewCT_PrintOptions()
				if _fcba := d.DecodeElement(_cgbcf.PrintOptions, &_aaced); _fcba != nil {
					return _fcba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_cgbcf.PageMargins = NewCT_PageMargins()
				if _eaebcc := d.DecodeElement(_cgbcf.PageMargins, &_aaced); _eaebcc != nil {
					return _eaebcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_cgbcf.PageSetup = NewCT_PageSetup()
				if _ggcfg := d.DecodeElement(_cgbcf.PageSetup, &_aaced); _ggcfg != nil {
					return _ggcfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_cgbcf.HeaderFooter = NewCT_HeaderFooter()
				if _fgaed := d.DecodeElement(_cgbcf.HeaderFooter, &_aaced); _fgaed != nil {
					return _fgaed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_cgbcf.RowBreaks = NewCT_PageBreak()
				if _ffcee := d.DecodeElement(_cgbcf.RowBreaks, &_aaced); _ffcee != nil {
					return _ffcee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_cgbcf.ColBreaks = NewCT_PageBreak()
				if _ebccc := d.DecodeElement(_cgbcf.ColBreaks, &_aaced); _ebccc != nil {
					return _ebccc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_cgbcf.CustomProperties = NewCT_CustomProperties()
				if _bfedc := d.DecodeElement(_cgbcf.CustomProperties, &_aaced); _bfedc != nil {
					return _bfedc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_cgbcf.Drawing = NewCT_Drawing()
				if _dagabf := d.DecodeElement(_cgbcf.Drawing, &_aaced); _dagabf != nil {
					return _dagabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_cgbcf.LegacyDrawing = NewCT_LegacyDrawing()
				if _eaeae := d.DecodeElement(_cgbcf.LegacyDrawing, &_aaced); _eaeae != nil {
					return _eaeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_cgbcf.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _cbggf := d.DecodeElement(_cgbcf.LegacyDrawingHF, &_aaced); _cbggf != nil {
					return _cbggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_cgbcf.DrawingHF = NewCT_DrawingHF()
				if _cdfeb := d.DecodeElement(_cgbcf.DrawingHF, &_aaced); _cdfeb != nil {
					return _cdfeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_cgbcf.Picture = NewCT_SheetBackgroundPicture()
				if _ffaff := d.DecodeElement(_cgbcf.Picture, &_aaced); _ffaff != nil {
					return _ffaff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_cgbcf.OleObjects = NewCT_OleObjects()
				if _dcfff := d.DecodeElement(_cgbcf.OleObjects, &_aaced); _dcfff != nil {
					return _dcfff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgbcf.ExtLst = NewCT_ExtensionList()
				if _afggb := d.DecodeElement(_cgbcf.ExtLst, &_aaced); _afggb != nil {
					return _afggb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004da\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _aaced.Name)
				if _bcfgf := d.Skip(); _bcfgf != nil {
					return _bcfgf
				}
			}
		case _b.EndElement:
			break _gegde
		case _b.CharData:
		}
	}
	return nil
}
func (_facge *CT_PCDSCPage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _facge.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_facge.CountAttr)})
	}
	e.EncodeToken(start)
	if _facge.PageItem != nil {
		_geafba := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}}
		for _, _fcafg := range _facge.PageItem {
			e.EncodeElement(_fcafg, _geafba)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalculatedMembers and its children
func (_gbaee *CT_CalculatedMembers) Validate() error {
	return _gbaee.ValidateWithPath("C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073")
}

type CT_LegacyDrawing struct{ IdAttr string }

// ValidateWithPath validates the CT_Scenario and its children, prefixing error messages with path
func (_facfff *CT_Scenario) ValidateWithPath(path string) error {
	for _adbag, _fedaf := range _facfff.InputCells {
		if _cfdebc := _fedaf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006cs\u005b\u0025\u0064\u005d", path, _adbag)); _cfdebc != nil {
			return _cfdebc
		}
	}
	return nil
}

type CT_ConditionalFormatting struct {

	// PivotTable Conditional Formatting
	PivotAttr *bool

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Conditional Formatting Rule
	CfRule []*CT_CfRule
	ExtLst *CT_ExtensionList
}

func NewCT_GradientStop() *CT_GradientStop {
	_gfgaf := &CT_GradientStop{}
	_gfgaf.Color = NewCT_Color()
	return _gfgaf
}
func NewCT_String() *CT_String { _ccbeb := &CT_String{}; return _ccbeb }
func (_adeedg ST_TextHAlign) String() string {
	switch _adeedg {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0072\u0069\u0067h\u0074"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_dbcabf *ST_Objects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gddega, _cecec := d.Token()
	if _cecec != nil {
		return _cecec
	}
	if _bcbgc, _bdfbab := _gddega.(_b.EndElement); _bdfbab && _bcbgc.Name == start.Name {
		*_dbcabf = 1
		return nil
	}
	if _cedga, _agfge := _gddega.(_b.CharData); !_agfge {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gddega)
	} else {
		switch string(_cedga) {
		case "":
			*_dbcabf = 0
		case "\u0061\u006c\u006c":
			*_dbcabf = 1
		case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
			*_dbcabf = 2
		case "\u006e\u006f\u006e\u0065":
			*_dbcabf = 3
		}
	}
	_gddega, _cecec = d.Token()
	if _cecec != nil {
		return _cecec
	}
	if _feffcc, _fegag := _gddega.(_b.EndElement); _fegag && _feffcc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gddega)
}
func (_dbge *CT_ChartsheetProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbge.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dbge.PasswordAttr)})
	}
	if _dbge.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dbge.AlgorithmNameAttr)})
	}
	if _dbge.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_dbge.HashValueAttr)})
	}
	if _dbge.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0076", *_dbge.SaltValueAttr)})
	}
	if _dbge.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _f.Sprintf("\u0025\u0076", *_dbge.SpinCountAttr)})
	}
	if _dbge.ContentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006e\u0074\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dbge.ContentAttr))})
	}
	if _dbge.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_dbge.ObjectsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MetadataType() *CT_MetadataType { _gfdg := &CT_MetadataType{}; return _gfdg }

// Validate validates the CT_TableMissing and its children
func (_fdbbd *CT_TableMissing) Validate() error {
	return _fdbbd.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func NewCT_Missing() *CT_Missing { _dgefd := &CT_Missing{}; return _dgefd }
func (_gaaggd *CT_PivotTableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febac := range start.Attr {
		if _febac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcefa, _affcc := _febac.Value, error(nil)
			if _affcc != nil {
				return _affcc
			}
			_gaaggd.NameAttr = &_bcefa
			continue
		}
		if _febac.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_agefg, _adeed := _e.ParseBool(_febac.Value)
			if _adeed != nil {
				return _adeed
			}
			_gaaggd.ShowRowHeadersAttr = &_agefg
			continue
		}
		if _febac.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_bcebaf, _agbbc := _e.ParseBool(_febac.Value)
			if _agbbc != nil {
				return _agbbc
			}
			_gaaggd.ShowColHeadersAttr = &_bcebaf
			continue
		}
		if _febac.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_cfbcgc, _gfdbc := _e.ParseBool(_febac.Value)
			if _gfdbc != nil {
				return _gfdbc
			}
			_gaaggd.ShowRowStripesAttr = &_cfbcgc
			continue
		}
		if _febac.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_fcdbd, _cdfeg := _e.ParseBool(_febac.Value)
			if _cdfeg != nil {
				return _cdfeg
			}
			_gaaggd.ShowColStripesAttr = &_fcdbd
			continue
		}
		if _febac.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_dbcag, _ecfbf := _e.ParseBool(_febac.Value)
			if _ecfbf != nil {
				return _ecfbf
			}
			_gaaggd.ShowLastColumnAttr = &_dbcag
			continue
		}
	}
	for {
		_bfbff, _cabbf := d.Token()
		if _cabbf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0050\u0069\u0076\u006f\u0074\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u003a\u0020\u0025\u0073", _cabbf)
		}
		if _dgefg, _dadfe := _bfbff.(_b.EndElement); _dadfe && _dgefg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gaafb ST_TargetScreenSize) Validate() error { return _gaafb.ValidateWithPath("") }
func (_fgegg *ST_FilterOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddabe, _egeef := d.Token()
	if _egeef != nil {
		return _egeef
	}
	if _fedce, _cbggcd := _ddabe.(_b.EndElement); _cbggcd && _fedce.Name == start.Name {
		*_fgegg = 1
		return nil
	}
	if _caeeg, _adeaa := _ddabe.(_b.CharData); !_adeaa {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddabe)
	} else {
		switch string(_caeeg) {
		case "":
			*_fgegg = 0
		case "\u0065\u0071\u0075a\u006c":
			*_fgegg = 1
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_fgegg = 2
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_fgegg = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_fgegg = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_fgegg = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_fgegg = 6
		}
	}
	_ddabe, _egeef = d.Token()
	if _egeef != nil {
		return _egeef
	}
	if _becbf, _ecegeb := _ddabe.(_b.EndElement); _ecegeb && _becbf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddabe)
}
func (_gcbdf ST_WebSourceType) ValidateWithPath(path string) error {
	switch _gcbdf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcbdf))
	}
	return nil
}

// ValidateWithPath validates the CT_OleSize and its children, prefixing error messages with path
func (_cgfge *CT_OleSize) ValidateWithPath(path string) error { return nil }

type CT_FontSize struct {

	// Value
	ValAttr float64
}

// Validate validates the CT_DbPr and its children
func (_baecd *CT_DbPr) Validate() error {
	return _baecd.ValidateWithPath("\u0043T\u005f\u0044\u0062\u0050\u0072")
}
func (_gfcbe ST_Type) Validate() error { return _gfcbe.ValidateWithPath("") }
func (_bbdee *ST_Axis) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgaca, _gdbbac := d.Token()
	if _gdbbac != nil {
		return _gdbbac
	}
	if _egeaaa, _ceafd := _bgaca.(_b.EndElement); _ceafd && _egeaaa.Name == start.Name {
		*_bbdee = 1
		return nil
	}
	if _ccbega, _efgbb := _bgaca.(_b.CharData); !_efgbb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgaca)
	} else {
		switch string(_ccbega) {
		case "":
			*_bbdee = 0
		case "\u0061x\u0069\u0073\u0052\u006f\u0077":
			*_bbdee = 1
		case "\u0061x\u0069\u0073\u0043\u006f\u006c":
			*_bbdee = 2
		case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
			*_bbdee = 3
		case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
			*_bbdee = 4
		}
	}
	_bgaca, _gdbbac = d.Token()
	if _gdbbac != nil {
		return _gdbbac
	}
	if _aadgaa, _fbbde := _bgaca.(_b.EndElement); _fbbde && _aadgaa.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgaca)
}

// ValidateWithPath validates the CT_CalculatedMembers and its children, prefixing error messages with path
func (_cgda *CT_CalculatedMembers) ValidateWithPath(path string) error {
	for _ffeg, _geeda := range _cgda.CalculatedMember {
		if _fgfa := _geeda.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fCa\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _ffeg)); _fgfa != nil {
			return _fgfa
		}
	}
	return nil
}
func (_gabfe *CT_RowFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feeacb := range start.Attr {
		if _feeacb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbfdfb, _cgadb := _e.ParseUint(_feeacb.Value, 10, 32)
			if _cgadb != nil {
				return _cgadb
			}
			_bbbfe := uint32(_fbfdfb)
			_gabfe.CountAttr = &_bbbfe
			continue
		}
	}
_dgbba:
	for {
		_ebegd, _acgcg := d.Token()
		if _acgcg != nil {
			return _acgcg
		}
		switch _adgfea := _ebegd.(type) {
		case _b.StartElement:
			switch _adgfea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_gebbdg := NewCT_Field()
				if _cfeacc := d.DecodeElement(_gebbdg, &_adgfea); _cfeacc != nil {
					return _cfeacc
				}
				_gabfe.Field = append(_gabfe.Field, _gebbdg)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u006f\u0077F\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _adgfea.Name)
				if _edafb := d.Skip(); _edafb != nil {
					return _edafb
				}
			}
		case _b.EndElement:
			break _dgbba
		case _b.CharData:
		}
	}
	return nil
}

type CT_Chartsheet struct {

	// Chart Sheet Properties
	SheetPr *CT_ChartsheetPr

	// Chart Sheet Views
	SheetViews *CT_ChartsheetViews

	// Chart Sheet Protection
	SheetProtection *CT_ChartsheetProtection

	// Custom Chart Sheet Views
	CustomSheetViews *CT_CustomChartsheetViews
	PageMargins      *CT_PageMargins
	PageSetup        *CT_CsPageSetup
	HeaderFooter     *CT_HeaderFooter

	// Drawing
	Drawing       *CT_Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Reference in Header Footer
	LegacyDrawingHF *CT_LegacyDrawing

	// Drawing Reference in Header Footer
	DrawingHF       *CT_DrawingHF
	Picture         *CT_SheetBackgroundPicture
	WebPublishItems *CT_WebPublishItems
	ExtLst          *CT_ExtensionList
}

// ValidateWithPath validates the CT_Number and its children, prefixing error messages with path
func (_ggdfg *CT_Number) ValidateWithPath(path string) error {
	for _cddef, _ffcgca := range _ggdfg.Tpls {
		if _gdegc := _ffcgca.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _cddef)); _gdegc != nil {
			return _gdegc
		}
	}
	for _gfeg, _aecag := range _ggdfg.X {
		if _bdfcbg := _aecag.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gfeg)); _bdfcbg != nil {
			return _bdfcbg
		}
	}
	return nil
}
func (_defdf *CT_Hyperlinks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fgag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ah\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b"}}
	for _, _gdgfa := range _defdf.Hyperlink {
		e.EncodeElement(_gdgfa, _fgag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cdecg *CT_MergeCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _cdecg.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eaaea *CT_CellSmartTag) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecbd := range start.Attr {
		if _ecbd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bea, _adce := _e.ParseUint(_ecbd.Value, 10, 32)
			if _adce != nil {
				return _adce
			}
			_eaaea.TypeAttr = uint32(_bea)
			continue
		}
		if _ecbd.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_aefe, _efff := _e.ParseBool(_ecbd.Value)
			if _efff != nil {
				return _efff
			}
			_eaaea.DeletedAttr = &_aefe
			continue
		}
		if _ecbd.Name.Local == "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064" {
			_dcbed, _gcae := _e.ParseBool(_ecbd.Value)
			if _gcae != nil {
				return _gcae
			}
			_eaaea.XmlBasedAttr = &_dcbed
			continue
		}
	}
_bgagd:
	for {
		_faea, _gcfe := d.Token()
		if _gcfe != nil {
			return _gcfe
		}
		switch _abfe := _faea.(type) {
		case _b.StartElement:
			switch _abfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}:
				_bbd := NewCT_CellSmartTagPr()
				if _acff := d.DecodeElement(_bbd, &_abfe); _acff != nil {
					return _acff
				}
				_eaaea.CellSmartTagPr = append(_eaaea.CellSmartTagPr, _bbd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0020\u0025\u0076", _abfe.Name)
				if _aegf := d.Skip(); _aegf != nil {
					return _aegf
				}
			}
		case _b.EndElement:
			break _bgagd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the QueryTable and its children
func (_acdacf *QueryTable) Validate() error {
	return _acdacf.ValidateWithPath("\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}
func (_efabgf *PivotCacheDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efabgf.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	for _, _gcggg := range start.Attr {
		if _gcggg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcggg.Name.Local == "\u0069\u0064" || _gcggg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gcggg.Name.Local == "\u0069\u0064" {
			_cadfe, _gecfb := _gcggg.Value, error(nil)
			if _gecfb != nil {
				return _gecfb
			}
			_efabgf.IdAttr = &_cadfe
			continue
		}
		if _gcggg.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_febee, _bgfgb := _e.ParseBool(_gcggg.Value)
			if _bgfgb != nil {
				return _bgfgb
			}
			_efabgf.UpgradeOnRefreshAttr = &_febee
			continue
		}
		if _gcggg.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_edcadg, _cafgf := _e.ParseBool(_gcggg.Value)
			if _cafgf != nil {
				return _cafgf
			}
			_efabgf.TupleCacheAttr = &_edcadg
			continue
		}
		if _gcggg.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_eeece, _fgebeg := _e.ParseBool(_gcggg.Value)
			if _fgebeg != nil {
				return _fgebeg
			}
			_efabgf.SaveDataAttr = &_eeece
			continue
		}
		if _gcggg.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_gecccf, _eeeea := _e.ParseBool(_gcggg.Value)
			if _eeeea != nil {
				return _eeeea
			}
			_efabgf.SupportSubqueryAttr = &_gecccf
			continue
		}
		if _gcggg.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_dcagba, _bcafgf := _e.ParseBool(_gcggg.Value)
			if _bcafgf != nil {
				return _bcafgf
			}
			_efabgf.OptimizeMemoryAttr = &_dcagba
			continue
		}
		if _gcggg.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_ddbde, _ebebcf := _e.ParseBool(_gcggg.Value)
			if _ebebcf != nil {
				return _ebebcf
			}
			_efabgf.SupportAdvancedDrillAttr = &_ddbde
			continue
		}
		if _gcggg.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_edbad, _dfdgd := _gcggg.Value, error(nil)
			if _dfdgd != nil {
				return _dfdgd
			}
			_efabgf.RefreshedByAttr = &_edbad
			continue
		}
		if _gcggg.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_gagdbb, _bcffe := ParseStdlibTime(_gcggg.Value)
			if _bcffe != nil {
				return _bcffe
			}
			_efabgf.RefreshedDateIsoAttr = &_gagdbb
			continue
		}
		if _gcggg.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_beacge, _cbcfd := _e.ParseBool(_gcggg.Value)
			if _cbcfd != nil {
				return _cbcfd
			}
			_efabgf.InvalidAttr = &_beacge
			continue
		}
		if _gcggg.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_eadfa, _gbdbe := _e.ParseBool(_gcggg.Value)
			if _gbdbe != nil {
				return _gbdbe
			}
			_efabgf.BackgroundQueryAttr = &_eadfa
			continue
		}
		if _gcggg.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_cdaac, _ebeefd := _e.ParseUint(_gcggg.Value, 10, 32)
			if _ebeefd != nil {
				return _ebeefd
			}
			_dcaaf := uint32(_cdaac)
			_efabgf.MissingItemsLimitAttr = &_dcaaf
			continue
		}
		if _gcggg.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gcgbbe, _cecba := _e.ParseUint(_gcggg.Value, 10, 8)
			if _cecba != nil {
				return _cecba
			}
			_geffa := uint8(_gcgbbe)
			_efabgf.RefreshedVersionAttr = &_geffa
			continue
		}
		if _gcggg.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_gfcdbd, _cbaff := _e.ParseBool(_gcggg.Value)
			if _cbaff != nil {
				return _cbaff
			}
			_efabgf.RefreshOnLoadAttr = &_gfcdbd
			continue
		}
		if _gcggg.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_gcedc, _eaedd := _e.ParseFloat(_gcggg.Value, 64)
			if _eaedd != nil {
				return _eaedd
			}
			_efabgf.RefreshedDateAttr = &_gcedc
			continue
		}
		if _gcggg.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_cfgad, _edcffb := _e.ParseUint(_gcggg.Value, 10, 32)
			if _edcffb != nil {
				return _edcffb
			}
			_baaebd := uint32(_cfgad)
			_efabgf.RecordCountAttr = &_baaebd
			continue
		}
		if _gcggg.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_cgcga, _aabab := _e.ParseUint(_gcggg.Value, 10, 8)
			if _aabab != nil {
				return _aabab
			}
			_gbcdgf := uint8(_cgcga)
			_efabgf.CreatedVersionAttr = &_gbcdgf
			continue
		}
		if _gcggg.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ecgff, _dggce := _e.ParseUint(_gcggg.Value, 10, 8)
			if _dggce != nil {
				return _dggce
			}
			_caadc := uint8(_ecgff)
			_efabgf.MinRefreshableVersionAttr = &_caadc
			continue
		}
		if _gcggg.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_ffabd, _ffaeb := _e.ParseBool(_gcggg.Value)
			if _ffaeb != nil {
				return _ffaeb
			}
			_efabgf.EnableRefreshAttr = &_ffabd
			continue
		}
	}
_cddaeg:
	for {
		_cgbgf, _fbfecd := d.Token()
		if _fbfecd != nil {
			return _fbfecd
		}
		switch _gffbcf := _cgbgf.(type) {
		case _b.StartElement:
			switch _gffbcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _cdbcd := d.DecodeElement(_efabgf.CacheSource, &_gffbcf); _cdbcd != nil {
					return _cdbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _cebag := d.DecodeElement(_efabgf.CacheFields, &_gffbcf); _cebag != nil {
					return _cebag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_efabgf.CacheHierarchies = NewCT_CacheHierarchies()
				if _gdfbd := d.DecodeElement(_efabgf.CacheHierarchies, &_gffbcf); _gdfbd != nil {
					return _gdfbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_efabgf.Kpis = NewCT_PCDKPIs()
				if _feedb := d.DecodeElement(_efabgf.Kpis, &_gffbcf); _feedb != nil {
					return _feedb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_efabgf.TupleCache = NewCT_TupleCache()
				if _egeaab := d.DecodeElement(_efabgf.TupleCache, &_gffbcf); _egeaab != nil {
					return _egeaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_efabgf.CalculatedItems = NewCT_CalculatedItems()
				if _eafdd := d.DecodeElement(_efabgf.CalculatedItems, &_gffbcf); _eafdd != nil {
					return _eafdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_efabgf.CalculatedMembers = NewCT_CalculatedMembers()
				if _aagbd := d.DecodeElement(_efabgf.CalculatedMembers, &_gffbcf); _aagbd != nil {
					return _aagbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_efabgf.Dimensions = NewCT_Dimensions()
				if _fcbdb := d.DecodeElement(_efabgf.Dimensions, &_gffbcf); _fcbdb != nil {
					return _fcbdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_efabgf.MeasureGroups = NewCT_MeasureGroups()
				if _dageafe := d.DecodeElement(_efabgf.MeasureGroups, &_gffbcf); _dageafe != nil {
					return _dageafe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_efabgf.Maps = NewCT_MeasureDimensionMaps()
				if _fgbeb := d.DecodeElement(_efabgf.Maps, &_gffbcf); _fgbeb != nil {
					return _fgbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efabgf.ExtLst = NewCT_ExtensionList()
				if _edbbe := d.DecodeElement(_efabgf.ExtLst, &_gffbcf); _edbbe != nil {
					return _edbbe
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gffbcf.Name)
				if _ffggf := d.Skip(); _ffggf != nil {
					return _ffggf
				}
			}
		case _b.EndElement:
			break _cddaeg
		case _b.CharData:
		}
	}
	return nil
}
func (_ccafbc *ST_PivotFilterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eagcd, _babaf := d.Token()
	if _babaf != nil {
		return _babaf
	}
	if _beecb, _dabgd := _eagcd.(_b.EndElement); _dabgd && _beecb.Name == start.Name {
		*_ccafbc = 1
		return nil
	}
	if _fdbca, _fafbcg := _eagcd.(_b.CharData); !_fafbcg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eagcd)
	} else {
		switch string(_fdbca) {
		case "":
			*_ccafbc = 0
		case "\u0075n\u006b\u006e\u006f\u0077\u006e":
			*_ccafbc = 1
		case "\u0063\u006f\u0075n\u0074":
			*_ccafbc = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_ccafbc = 3
		case "\u0073\u0075\u006d":
			*_ccafbc = 4
		case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
			*_ccafbc = 5
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ccafbc = 6
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
			*_ccafbc = 7
		case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
			*_ccafbc = 8
		case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_ccafbc = 9
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
			*_ccafbc = 10
		case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_ccafbc = 11
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
			*_ccafbc = 12
		case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
			*_ccafbc = 13
		case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
			*_ccafbc = 14
		case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ccafbc = 15
		case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
			*_ccafbc = 16
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_ccafbc = 17
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_ccafbc = 18
		case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
			*_ccafbc = 19
		case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ccafbc = 20
		case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ccafbc = 21
		case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_ccafbc = 22
		case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ccafbc = 23
		case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_ccafbc = 24
		case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ccafbc = 25
		case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ccafbc = 26
		case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
			*_ccafbc = 27
		case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ccafbc = 28
		case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ccafbc = 29
		case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_ccafbc = 30
		case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ccafbc = 31
		case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_ccafbc = 32
		case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ccafbc = 33
		case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_ccafbc = 34
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_ccafbc = 35
		case "\u0074\u006f\u0064a\u0079":
			*_ccafbc = 36
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_ccafbc = 37
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_ccafbc = 38
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_ccafbc = 39
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_ccafbc = 40
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_ccafbc = 41
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_ccafbc = 42
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_ccafbc = 43
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccafbc = 44
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccafbc = 45
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccafbc = 46
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_ccafbc = 47
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_ccafbc = 48
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_ccafbc = 49
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_ccafbc = 50
		case "\u0051\u0031":
			*_ccafbc = 51
		case "\u0051\u0032":
			*_ccafbc = 52
		case "\u0051\u0033":
			*_ccafbc = 53
		case "\u0051\u0034":
			*_ccafbc = 54
		case "\u004d\u0031":
			*_ccafbc = 55
		case "\u004d\u0032":
			*_ccafbc = 56
		case "\u004d\u0033":
			*_ccafbc = 57
		case "\u004d\u0034":
			*_ccafbc = 58
		case "\u004d\u0035":
			*_ccafbc = 59
		case "\u004d\u0036":
			*_ccafbc = 60
		case "\u004d\u0037":
			*_ccafbc = 61
		case "\u004d\u0038":
			*_ccafbc = 62
		case "\u004d\u0039":
			*_ccafbc = 63
		case "\u004d\u0031\u0030":
			*_ccafbc = 64
		case "\u004d\u0031\u0031":
			*_ccafbc = 65
		case "\u004d\u0031\u0032":
			*_ccafbc = 66
		}
	}
	_eagcd, _babaf = d.Token()
	if _babaf != nil {
		return _babaf
	}
	if _feaae, _dabdb := _eagcd.(_b.EndElement); _dabdb && _feaae.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eagcd)
}
func NewCT_PivotAreaReferences() *CT_PivotAreaReferences {
	_ffebbe := &CT_PivotAreaReferences{}
	return _ffebbe
}
func (_bgde *CT_DdeItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bgde.DdeItem != nil {
		_fdafg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d"}}
		for _, _efdge := range _bgde.DdeItem {
			e.EncodeElement(_efdge, _fdafg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgecff *ST_MdxSetOrder) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bgecff = 0
	case "\u0075":
		*_bgecff = 1
	case "\u0061":
		*_bgecff = 2
	case "\u0064":
		*_bgecff = 3
	case "\u0061\u0061":
		*_bgecff = 4
	case "\u0061\u0064":
		*_bgecff = 5
	case "\u006e\u0061":
		*_bgecff = 6
	case "\u006e\u0064":
		*_bgecff = 7
	}
	return nil
}
func (_acbcfb *ST_TableStyleType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acbcfb = 0
	case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
		*_acbcfb = 1
	case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
		*_acbcfb = 2
	case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_acbcfb = 3
	case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_acbcfb = 4
	case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_acbcfb = 5
	case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
		*_acbcfb = 6
	case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
		*_acbcfb = 7
	case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
		*_acbcfb = 8
	case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
		*_acbcfb = 9
	case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
		*_acbcfb = 10
	case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
		*_acbcfb = 11
	case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
		*_acbcfb = 12
	case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
		*_acbcfb = 13
	case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_acbcfb = 14
	case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
		*_acbcfb = 15
	case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_acbcfb = 16
	case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_acbcfb = 17
	case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
		*_acbcfb = 18
	case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_acbcfb = 19
	case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
		*_acbcfb = 20
	case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_acbcfb = 21
	case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
		*_acbcfb = 22
	case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_acbcfb = 23
	case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_acbcfb = 24
	case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
		*_acbcfb = 25
	case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_acbcfb = 26
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
		*_acbcfb = 27
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
		*_acbcfb = 28
	}
	return nil
}

// ValidateWithPath validates the CT_Fonts and its children, prefixing error messages with path
func (_fgca *CT_Fonts) ValidateWithPath(path string) error {
	for _cabgf, _fbbac := range _fgca.Font {
		if _fgbg := _fbbac.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _cabgf)); _fgbg != nil {
			return _fgbg
		}
	}
	return nil
}
func (_cfagaa ST_DvAspect) ValidateWithPath(path string) error {
	switch _cfagaa {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfagaa))
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyles and its children, prefixing error messages with path
func (_ggddag *CT_TableStyles) ValidateWithPath(path string) error {
	for _ffbfa, _bdfca := range _ggddag.TableStyle {
		if _dcebf := _bdfca.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u005b\u0025\u0064\u005d", path, _ffbfa)); _dcebf != nil {
			return _dcebf
		}
	}
	return nil
}
func (_cgfa *CT_ChartsheetPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _face := range start.Attr {
		if _face.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_cbgf, _befbe := _e.ParseBool(_face.Value)
			if _befbe != nil {
				return _befbe
			}
			_cgfa.PublishedAttr = &_cbgf
			continue
		}
		if _face.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_ggcec, _ggfb := _face.Value, error(nil)
			if _ggfb != nil {
				return _ggfb
			}
			_cgfa.CodeNameAttr = &_ggcec
			continue
		}
	}
_bbggg:
	for {
		_geae, _ddcb := d.Token()
		if _ddcb != nil {
			return _ddcb
		}
		switch _eedd := _geae.(type) {
		case _b.StartElement:
			switch _eedd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_cgfa.TabColor = NewCT_Color()
				if _egcdf := d.DecodeElement(_cgfa.TabColor, &_eedd); _egcdf != nil {
					return _egcdf
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _eedd.Name)
				if _ffaf := d.Skip(); _ffaf != nil {
					return _ffaf
				}
			}
		case _b.EndElement:
			break _bbggg
		case _b.CharData:
		}
	}
	return nil
}

type ST_MdxKPIProperty byte

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_dadc *CT_Border) ValidateWithPath(path string) error {
	if _dadc.Start != nil {
		if _fef := _dadc.Start.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0072\u0074"); _fef != nil {
			return _fef
		}
	}
	if _dadc.End != nil {
		if _ffg := _dadc.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _ffg != nil {
			return _ffg
		}
	}
	if _dadc.Left != nil {
		if _cbec := _dadc.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _cbec != nil {
			return _cbec
		}
	}
	if _dadc.Right != nil {
		if _eba := _dadc.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _eba != nil {
			return _eba
		}
	}
	if _dadc.Top != nil {
		if _dgbaf := _dadc.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _dgbaf != nil {
			return _dgbaf
		}
	}
	if _dadc.Bottom != nil {
		if _afbb := _dadc.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _afbb != nil {
			return _afbb
		}
	}
	if _dadc.Diagonal != nil {
		if _gde := _dadc.Diagonal.ValidateWithPath(path + "\u002fD\u0069\u0061\u0067\u006f\u006e\u0061l"); _gde != nil {
			return _gde
		}
	}
	if _dadc.Vertical != nil {
		if _gca := _dadc.Vertical.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0069\u0063\u0061l"); _gca != nil {
			return _gca
		}
	}
	if _dadc.Horizontal != nil {
		if _efb := _dadc.Horizontal.ValidateWithPath(path + "/\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"); _efb != nil {
			return _efb
		}
	}
	return nil
}

type CT_Borders struct {

	// Border Count
	CountAttr *uint32

	// Border
	Border []*CT_Border
}
type CT_GradientFill struct {

	// Gradient Fill Type
	TypeAttr ST_GradientType

	// Linear Gradient Degree
	DegreeAttr *float64

	// Left Convergence
	LeftAttr *float64

	// Right Convergence
	RightAttr *float64

	// Top Gradient Convergence
	TopAttr *float64

	// Bottom Convergence
	BottomAttr *float64

	// Gradient Stop
	Stop []*CT_GradientStop
}

func (_agaf *CT_CustomProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fabd := range start.Attr {
		if _fabd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fabd.Name.Local == "\u0069\u0064" || _fabd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fabd.Name.Local == "\u0069\u0064" {
			_efbce, _dbffe := _fabd.Value, error(nil)
			if _dbffe != nil {
				return _dbffe
			}
			_agaf.IdAttr = _efbce
			continue
		}
		if _fabd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgaa, _bcgc := _fabd.Value, error(nil)
			if _bcgc != nil {
				return _bcgc
			}
			_agaf.NameAttr = _fgaa
			continue
		}
	}
	for {
		_aafgc, _feaa := d.Token()
		if _feaa != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _feaa)
		}
		if _ffeec, _acad := _aafgc.(_b.EndElement); _acad && _ffeec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbdgdd *CT_RElt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dbdgdd.RPr != nil {
		_eacaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0072"}}
		e.EncodeElement(_dbdgdd.RPr, _eacaf)
	}
	_bdgbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_d.AddPreserveSpaceAttr(&_bdgbf, _dbdgdd.T)
	e.EncodeElement(_dbdgdd.T, _bdgbf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebcea *CT_PageSetUpPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebcea.AutoPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebcea.AutoPageBreaksAttr))})
	}
	if _ebcea.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ebcea.FitToPageAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Field struct {

	// Field Index
	XAttr int32
}

func NewCT_ExternalSheetData() *CT_ExternalSheetData {
	_dgaea := &CT_ExternalSheetData{}
	return _dgaea
}

type CT_Mdx struct {

	// Connection Name Index
	NAttr uint32

	// Cube Function Tag
	FAttr ST_MdxFunctionType

	// Tuple MDX Metadata
	T *CT_MdxTuple

	// Set MDX Metadata
	Ms *CT_MdxSet

	// Member Property MDX Metadata
	P *CT_MdxMemeberProp

	// KPI MDX Metadata
	K *CT_MdxKPI
}
type ST_FieldSortType byte

func (_caeab ST_MdxKPIProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_caeab.String(), start)
}
func (_aege ST_VolValueType) String() string {
	switch _aege {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	}
	return ""
}
func (_cgfcc ST_TotalsRowFunction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_babdfd := _b.Attr{}
	_babdfd.Name = name
	switch _cgfcc {
	case ST_TotalsRowFunctionUnset:
		_babdfd.Value = ""
	case ST_TotalsRowFunctionNone:
		_babdfd.Value = "\u006e\u006f\u006e\u0065"
	case ST_TotalsRowFunctionSum:
		_babdfd.Value = "\u0073\u0075\u006d"
	case ST_TotalsRowFunctionMin:
		_babdfd.Value = "\u006d\u0069\u006e"
	case ST_TotalsRowFunctionMax:
		_babdfd.Value = "\u006d\u0061\u0078"
	case ST_TotalsRowFunctionAverage:
		_babdfd.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_TotalsRowFunctionCount:
		_babdfd.Value = "\u0063\u006f\u0075n\u0074"
	case ST_TotalsRowFunctionCountNums:
		_babdfd.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_TotalsRowFunctionStdDev:
		_babdfd.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_TotalsRowFunctionVar:
		_babdfd.Value = "\u0076\u0061\u0072"
	case ST_TotalsRowFunctionCustom:
		_babdfd.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _babdfd, nil
}
func (_gfbdf *CT_QueryTable) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cedfg := range start.Attr {
		if _cedfg.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_fegab, _gfcdb := _e.ParseBool(_cedfg.Value)
			if _gfcdb != nil {
				return _gfcdb
			}
			_gfbdf.AdjustColumnWidthAttr = &_fegab
			continue
		}
		if _cedfg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ggcfe, _cefcfb := _cedfg.Value, error(nil)
			if _cefcfb != nil {
				return _cefcfb
			}
			_gfbdf.NameAttr = _ggcfe
			continue
		}
		if _cedfg.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_ddeecb, _daffdf := _e.ParseBool(_cedfg.Value)
			if _daffdf != nil {
				return _daffdf
			}
			_gfbdf.IntermediateAttr = &_ddeecb
			continue
		}
		if _cedfg.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_bgacc, _ebafc := _e.ParseBool(_cedfg.Value)
			if _ebafc != nil {
				return _ebafc
			}
			_gfbdf.RowNumbersAttr = &_bgacc
			continue
		}
		if _cedfg.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_eedacf, _aefcf := _e.ParseUint(_cedfg.Value, 10, 32)
			if _aefcf != nil {
				return _aefcf
			}
			_gfbdf.ConnectionIdAttr = uint32(_eedacf)
			continue
		}
		if _cedfg.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_ddbcd, _cfbed := _e.ParseBool(_cedfg.Value)
			if _cfbed != nil {
				return _cfbed
			}
			_gfbdf.BackgroundRefreshAttr = &_ddbcd
			continue
		}
		if _cedfg.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_bbbec, _fcccb := _e.ParseBool(_cedfg.Value)
			if _fcccb != nil {
				return _fcccb
			}
			_gfbdf.RefreshOnLoadAttr = &_bbbec
			continue
		}
		if _cedfg.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_aedbaf, _dbbdff := _e.ParseBool(_cedfg.Value)
			if _dbbdff != nil {
				return _dbbdff
			}
			_gfbdf.FillFormulasAttr = &_aedbaf
			continue
		}
		if _cedfg.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_eeaefd, _dbeac := _e.ParseBool(_cedfg.Value)
			if _dbeac != nil {
				return _dbeac
			}
			_gfbdf.ApplyNumberFormatsAttr = &_eeaefd
			continue
		}
		if _cedfg.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gecdc, _fffaa := _e.ParseBool(_cedfg.Value)
			if _fffaa != nil {
				return _fffaa
			}
			_gfbdf.ApplyFontFormatsAttr = &_gecdc
			continue
		}
		if _cedfg.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_abdba, _bafc := _e.ParseBool(_cedfg.Value)
			if _bafc != nil {
				return _bafc
			}
			_gfbdf.FirstBackgroundRefreshAttr = &_abdba
			continue
		}
		if _cedfg.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_bfggb, _gbccc := _e.ParseUint(_cedfg.Value, 10, 32)
			if _gbccc != nil {
				return _gbccc
			}
			_dbfbd := uint32(_bfggb)
			_gfbdf.AutoFormatIdAttr = &_dbfbd
			continue
		}
		if _cedfg.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ebbgc, _dddfaf := _e.ParseBool(_cedfg.Value)
			if _dddfaf != nil {
				return _dddfaf
			}
			_gfbdf.ApplyAlignmentFormatsAttr = &_ebbgc
			continue
		}
		if _cedfg.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_feddf, _eegg := _e.ParseBool(_cedfg.Value)
			if _eegg != nil {
				return _eegg
			}
			_gfbdf.DisableRefreshAttr = &_feddf
			continue
		}
		if _cedfg.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dfabeg, _eaabcc := _e.ParseBool(_cedfg.Value)
			if _eaabcc != nil {
				return _eaabcc
			}
			_gfbdf.ApplyBorderFormatsAttr = &_dfabeg
			continue
		}
		if _cedfg.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bbcgg, _befcg := _e.ParseBool(_cedfg.Value)
			if _befcg != nil {
				return _befcg
			}
			_gfbdf.PreserveFormattingAttr = &_bbcgg
			continue
		}
		if _cedfg.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cgacc, _cbcdf := _e.ParseBool(_cedfg.Value)
			if _cbcdf != nil {
				return _cbcdf
			}
			_gfbdf.ApplyPatternFormatsAttr = &_cgacc
			continue
		}
		if _cedfg.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_gfbdf.GrowShrinkTypeAttr.UnmarshalXMLAttr(_cedfg)
			continue
		}
		if _cedfg.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_ccbdb, _dafdb := _e.ParseBool(_cedfg.Value)
			if _dafdb != nil {
				return _dafdb
			}
			_gfbdf.DisableEditAttr = &_ccbdb
			continue
		}
		if _cedfg.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_egdfg, _bgggbf := _e.ParseBool(_cedfg.Value)
			if _bgggbf != nil {
				return _bgggbf
			}
			_gfbdf.HeadersAttr = &_egdfg
			continue
		}
		if _cedfg.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_fefbc, _bcbfd := _e.ParseBool(_cedfg.Value)
			if _bcbfd != nil {
				return _bcbfd
			}
			_gfbdf.RemoveDataOnSaveAttr = &_fefbc
			continue
		}
		if _cedfg.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bgdgbg, _fafef := _e.ParseBool(_cedfg.Value)
			if _fafef != nil {
				return _fafef
			}
			_gfbdf.ApplyWidthHeightFormatsAttr = &_bgdgbg
			continue
		}
	}
_fddgc:
	for {
		_bfagc, _gbgde := d.Token()
		if _gbgde != nil {
			return _gbgde
		}
		switch _abccb := _bfagc.(type) {
		case _b.StartElement:
			switch _abccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_gfbdf.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _ecfba := d.DecodeElement(_gfbdf.QueryTableRefresh, &_abccb); _ecfba != nil {
					return _ecfba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfbdf.ExtLst = NewCT_ExtensionList()
				if _dfadc := d.DecodeElement(_gfbdf.ExtLst, &_abccb); _dfadc != nil {
					return _dfadc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065 \u0025\u0076", _abccb.Name)
				if _agebc := d.Skip(); _agebc != nil {
					return _agebc
				}
			}
		case _b.EndElement:
			break _fddgc
		case _b.CharData:
		}
	}
	return nil
}
func (_gbddb *CT_ExternalCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fffgg := range start.Attr {
		if _fffgg.Name.Local == "\u0072" {
			_deacd, _eega := _fffgg.Value, error(nil)
			if _eega != nil {
				return _eega
			}
			_gbddb.RAttr = &_deacd
			continue
		}
		if _fffgg.Name.Local == "\u0074" {
			_gbddb.TAttr.UnmarshalXMLAttr(_fffgg)
			continue
		}
		if _fffgg.Name.Local == "\u0076\u006d" {
			_fcgbba, _dcggc := _e.ParseUint(_fffgg.Value, 10, 32)
			if _dcggc != nil {
				return _dcggc
			}
			_cgde := uint32(_fcgbba)
			_gbddb.VmAttr = &_cgde
			continue
		}
	}
_dcad:
	for {
		_fgdcb, _fcae := d.Token()
		if _fcae != nil {
			return _fcae
		}
		switch _cdbad := _fgdcb.(type) {
		case _b.StartElement:
			switch _cdbad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_gbddb.V = new(string)
				if _dcfdc := d.DecodeElement(_gbddb.V, &_cdbad); _dcfdc != nil {
					return _dcfdc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _cdbad.Name)
				if _dafe := d.Skip(); _dafe != nil {
					return _dafe
				}
			}
		case _b.EndElement:
			break _dcad
		case _b.CharData:
		}
	}
	return nil
}
func (_eabge *CT_WebPublishItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adad := range start.Attr {
		if _adad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fcdgag, _fgebe := _e.ParseUint(_adad.Value, 10, 32)
			if _fgebe != nil {
				return _fgebe
			}
			_aaaaac := uint32(_fcdgag)
			_eabge.CountAttr = &_aaaaac
			continue
		}
	}
_daeae:
	for {
		_fabgf, _acebg := d.Token()
		if _acebg != nil {
			return _acebg
		}
		switch _gacgge := _fabgf.(type) {
		case _b.StartElement:
			switch _gacgge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}:
				_abbegb := NewCT_WebPublishItem()
				if _fcgaf := d.DecodeElement(_abbegb, &_gacgge); _fcgaf != nil {
					return _fcgaf
				}
				_eabge.WebPublishItem = append(_eabge.WebPublishItem, _abbegb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _gacgge.Name)
				if _egbae := d.Skip(); _egbae != nil {
					return _egbae
				}
			}
		case _b.EndElement:
			break _daeae
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Formats and its children, prefixing error messages with path
func (_dbca *CT_Formats) ValidateWithPath(path string) error {
	for _cbdbb, _abcbc := range _dbca.Format {
		if _fbgb := _abcbc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _cbdbb)); _fbgb != nil {
			return _fbgb
		}
	}
	return nil
}
func NewCT_CustomProperties() *CT_CustomProperties { _cacgc := &CT_CustomProperties{}; return _cacgc }
func NewCT_Col() *CT_Col                           { _ddfb := &CT_Col{}; return _ddfb }
func (_cgfdda *ST_FilterOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cgfdda = 0
	case "\u0065\u0071\u0075a\u006c":
		*_cgfdda = 1
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_cgfdda = 2
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_cgfdda = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cgfdda = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_cgfdda = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cgfdda = 6
	}
	return nil
}

type CT_Parameter struct {

	// Parameter Name
	NameAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Parameter Type
	ParameterTypeAttr ST_ParameterType

	// Refresh on Change
	RefreshOnChangeAttr *bool

	// Parameter Prompt String
	PromptAttr *string

	// Boolean
	BooleanAttr *bool

	// Double
	DoubleAttr *float64

	// Integer
	IntegerAttr *int32

	// String
	StringAttr *string

	// Cell Reference
	CellAttr *string
}

// ValidateWithPath validates the CT_SheetProtection and its children, prefixing error messages with path
func (_dcebg *CT_SheetProtection) ValidateWithPath(path string) error { return nil }
func (_bbdeg *CT_Color) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bccf := range start.Attr {
		if _bccf.Name.Local == "\u0061\u0075\u0074\u006f" {
			_fbcd, _aeefc := _e.ParseBool(_bccf.Value)
			if _aeefc != nil {
				return _aeefc
			}
			_bbdeg.AutoAttr = &_fbcd
			continue
		}
		if _bccf.Name.Local == "\u0069n\u0064\u0065\u0078\u0065\u0064" {
			_faddb, _ffdb := _e.ParseUint(_bccf.Value, 10, 32)
			if _ffdb != nil {
				return _ffdb
			}
			_deadc := uint32(_faddb)
			_bbdeg.IndexedAttr = &_deadc
			continue
		}
		if _bccf.Name.Local == "\u0072\u0067\u0062" {
			_bacg, _efee := _bccf.Value, error(nil)
			if _efee != nil {
				return _efee
			}
			_bbdeg.RgbAttr = &_bacg
			continue
		}
		if _bccf.Name.Local == "\u0074\u0068\u0065m\u0065" {
			_caeed, _cfaed := _e.ParseUint(_bccf.Value, 10, 32)
			if _cfaed != nil {
				return _cfaed
			}
			_gcbd := uint32(_caeed)
			_bbdeg.ThemeAttr = &_gcbd
			continue
		}
		if _bccf.Name.Local == "\u0074\u0069\u006e\u0074" {
			_efbee, _abfdc := _e.ParseFloat(_bccf.Value, 64)
			if _abfdc != nil {
				return _abfdc
			}
			_bbdeg.TintAttr = &_efbee
			continue
		}
	}
	for {
		_geefb, _bece := d.Token()
		if _bece != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072: \u0025\u0073", _bece)
		}
		if _bfbad, _cfd := _geefb.(_b.EndElement); _cfd && _bfbad.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gdgef *ST_Qualifier) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeecb, _eaebb := d.Token()
	if _eaebb != nil {
		return _eaebb
	}
	if _gbccce, _gbdfdg := _eeecb.(_b.EndElement); _gbdfdg && _gbccce.Name == start.Name {
		*_gdgef = 1
		return nil
	}
	if _bacfbf, _cgggbb := _eeecb.(_b.CharData); !_cgggbb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeecb)
	} else {
		switch string(_bacfbf) {
		case "":
			*_gdgef = 0
		case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_gdgef = 1
		case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_gdgef = 2
		case "\u006e\u006f\u006e\u0065":
			*_gdgef = 3
		}
	}
	_eeecb, _eaebb = d.Token()
	if _eaebb != nil {
		return _eaebb
	}
	if _dfdfgd, _geaegb := _eeecb.(_b.EndElement); _geaegb && _dfdfgd.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeecb)
}

// Validate validates the CT_IconFilter and its children
func (_gdbfe *CT_IconFilter) Validate() error {
	return _gdbfe.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072")
}

const (
	ST_FilterOperatorUnset              ST_FilterOperator = 0
	ST_FilterOperatorEqual              ST_FilterOperator = 1
	ST_FilterOperatorLessThan           ST_FilterOperator = 2
	ST_FilterOperatorLessThanOrEqual    ST_FilterOperator = 3
	ST_FilterOperatorNotEqual           ST_FilterOperator = 4
	ST_FilterOperatorGreaterThanOrEqual ST_FilterOperator = 5
	ST_FilterOperatorGreaterThan        ST_FilterOperator = 6
)

func NewCT_Comments() *CT_Comments {
	_fdbef := &CT_Comments{}
	_fdbef.Authors = NewCT_Authors()
	_fdbef.CommentList = NewCT_CommentList()
	return _fdbef
}
func (_fcbca *CT_Number) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edcbe := range start.Attr {
		if _edcbe.Name.Local == "\u0066\u0063" {
			_cbaabd, _ebgff := _edcbe.Value, error(nil)
			if _ebgff != nil {
				return _ebgff
			}
			_fcbca.FcAttr = &_cbaabd
			continue
		}
		if _edcbe.Name.Local == "\u0076" {
			_afab, _adebg := _e.ParseFloat(_edcbe.Value, 64)
			if _adebg != nil {
				return _adebg
			}
			_fcbca.VAttr = _afab
			continue
		}
		if _edcbe.Name.Local == "\u0066" {
			_dbgea, _ceagc := _e.ParseBool(_edcbe.Value)
			if _ceagc != nil {
				return _ceagc
			}
			_fcbca.FAttr = &_dbgea
			continue
		}
		if _edcbe.Name.Local == "\u0063" {
			_faeba, _eagc := _edcbe.Value, error(nil)
			if _eagc != nil {
				return _eagc
			}
			_fcbca.CAttr = &_faeba
			continue
		}
		if _edcbe.Name.Local == "\u0063\u0070" {
			_gceff, _cdegc := _e.ParseUint(_edcbe.Value, 10, 32)
			if _cdegc != nil {
				return _cdegc
			}
			_acaba := uint32(_gceff)
			_fcbca.CpAttr = &_acaba
			continue
		}
		if _edcbe.Name.Local == "\u0069\u006e" {
			_gfbc, _aaffe := _e.ParseUint(_edcbe.Value, 10, 32)
			if _aaffe != nil {
				return _aaffe
			}
			_dgbee := uint32(_gfbc)
			_fcbca.InAttr = &_dgbee
			continue
		}
		if _edcbe.Name.Local == "\u0062\u0063" {
			_abedd, _gcdece := _edcbe.Value, error(nil)
			if _gcdece != nil {
				return _gcdece
			}
			_fcbca.BcAttr = &_abedd
			continue
		}
		if _edcbe.Name.Local == "\u0075" {
			_ggdda, _cgbae := _e.ParseBool(_edcbe.Value)
			if _cgbae != nil {
				return _cgbae
			}
			_fcbca.UAttr = &_ggdda
			continue
		}
		if _edcbe.Name.Local == "\u0069" {
			_gfgca, _bbeaa := _e.ParseBool(_edcbe.Value)
			if _bbeaa != nil {
				return _bbeaa
			}
			_fcbca.IAttr = &_gfgca
			continue
		}
		if _edcbe.Name.Local == "\u0075\u006e" {
			_daaec, _gfbe := _e.ParseBool(_edcbe.Value)
			if _gfbe != nil {
				return _gfbe
			}
			_fcbca.UnAttr = &_daaec
			continue
		}
		if _edcbe.Name.Local == "\u0073\u0074" {
			_fgeeb, _gcaedc := _e.ParseBool(_edcbe.Value)
			if _gcaedc != nil {
				return _gcaedc
			}
			_fcbca.StAttr = &_fgeeb
			continue
		}
		if _edcbe.Name.Local == "\u0062" {
			_fgaae, _cggfa := _e.ParseBool(_edcbe.Value)
			if _cggfa != nil {
				return _cggfa
			}
			_fcbca.BAttr = &_fgaae
			continue
		}
	}
_bbcbe:
	for {
		_gadgf, _gcebe := d.Token()
		if _gcebe != nil {
			return _gcebe
		}
		switch _eedfbd := _gadgf.(type) {
		case _b.StartElement:
			switch _eedfbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_feacc := NewCT_Tuples()
				if _bbeec := d.DecodeElement(_feacc, &_eedfbd); _bbeec != nil {
					return _bbeec
				}
				_fcbca.Tpls = append(_fcbca.Tpls, _feacc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fgebc := NewCT_X()
				if _gbfce := d.DecodeElement(_fgebc, &_eedfbd); _gbfce != nil {
					return _gbfce
				}
				_fcbca.X = append(_fcbca.X, _fgebc)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0075\u006db\u0065\u0072 \u0025\u0076", _eedfbd.Name)
				if _gdgbc := d.Skip(); _gdgbc != nil {
					return _gdgbc
				}
			}
		case _b.EndElement:
			break _bbcbe
		case _b.CharData:
		}
	}
	return nil
}
func (_bfbbbc *CT_SortState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggccdg := range start.Attr {
		if _ggccdg.Name.Local == "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074" {
			_daede, _affbd := _e.ParseBool(_ggccdg.Value)
			if _affbd != nil {
				return _affbd
			}
			_bfbbbc.ColumnSortAttr = &_daede
			continue
		}
		if _ggccdg.Name.Local == "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065" {
			_dgacd, _efadd := _e.ParseBool(_ggccdg.Value)
			if _efadd != nil {
				return _efadd
			}
			_bfbbbc.CaseSensitiveAttr = &_dgacd
			continue
		}
		if _ggccdg.Name.Local == "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064" {
			_bfbbbc.SortMethodAttr.UnmarshalXMLAttr(_ggccdg)
			continue
		}
		if _ggccdg.Name.Local == "\u0072\u0065\u0066" {
			_fddafe, _gffbcd := _ggccdg.Value, error(nil)
			if _gffbcd != nil {
				return _gffbcd
			}
			_bfbbbc.RefAttr = _fddafe
			continue
		}
	}
_edbga:
	for {
		_efefd, _gcaa := d.Token()
		if _gcaa != nil {
			return _gcaa
		}
		switch _degcbd := _efefd.(type) {
		case _b.StartElement:
			switch _degcbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}:
				_bdecc := NewCT_SortCondition()
				if _cdfgeg := d.DecodeElement(_bdecc, &_degcbd); _cdfgeg != nil {
					return _cdfgeg
				}
				_bfbbbc.SortCondition = append(_bfbbbc.SortCondition, _bdecc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfbbbc.ExtLst = NewCT_ExtensionList()
				if _dgggc := d.DecodeElement(_bfbbbc.ExtLst, &_degcbd); _dgggc != nil {
					return _dgggc
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006f\u0072t\u0053\u0074\u0061\u0074\u0065\u0020\u0025\u0076", _degcbd.Name)
				if _egggf := d.Skip(); _egggf != nil {
					return _egggf
				}
			}
		case _b.EndElement:
			break _edbga
		case _b.CharData:
		}
	}
	return nil
}
func (_agaadd *ST_Comments) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_agaadd = 0
	case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
		*_agaadd = 1
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_agaadd = 2
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
		*_agaadd = 3
	}
	return nil
}

type CT_Format struct {

	// Format Action
	ActionAttr ST_FormatAction

	// Format Id
	DxfIdAttr *uint32

	// Pivot Table Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_CfvoTypeUnset      ST_CfvoType = 0
	ST_CfvoTypeNum        ST_CfvoType = 1
	ST_CfvoTypePercent    ST_CfvoType = 2
	ST_CfvoTypeMax        ST_CfvoType = 3
	ST_CfvoTypeMin        ST_CfvoType = 4
	ST_CfvoTypeFormula    ST_CfvoType = 5
	ST_CfvoTypePercentile ST_CfvoType = 6
)

func (_efafg *CT_WebPublishing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efafg.CssAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0073\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efafg.CssAttr))})
	}
	if _efafg.ThicketAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u0069\u0063\u006b\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efafg.ThicketAttr))})
	}
	if _efafg.LongFileNamesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efafg.LongFileNamesAttr))})
	}
	if _efafg.VmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efafg.VmlAttr))})
	}
	if _efafg.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_efafg.AllowPngAttr))})
	}
	if _efafg.TargetScreenSizeAttr != ST_TargetScreenSizeUnset {
		_gacfc, _gceef := _efafg.TargetScreenSizeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065"})
		if _gceef != nil {
			return _gceef
		}
		start.Attr = append(start.Attr, _gacfc)
	}
	if _efafg.DpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0070\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_efafg.DpiAttr)})
	}
	if _efafg.CodePageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_efafg.CodePageAttr)})
	}
	if _efafg.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_efafg.CharacterSetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the StyleSheet and its children, prefixing error messages with path
func (_gfffcg *StyleSheet) ValidateWithPath(path string) error {
	if _bcdfe := _gfffcg.CT_Stylesheet.ValidateWithPath(path); _bcdfe != nil {
		return _bcdfe
	}
	return nil
}

// ValidateWithPath validates the CT_SharedItems and its children, prefixing error messages with path
func (_cdfdf *CT_SharedItems) ValidateWithPath(path string) error {
	for _bdedf, _edfdba := range _cdfdf.M {
		if _ccgegd := _edfdba.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _bdedf)); _ccgegd != nil {
			return _ccgegd
		}
	}
	for _cfcbfa, _badfe := range _cdfdf.N {
		if _gccbg := _badfe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cfcbfa)); _gccbg != nil {
			return _gccbg
		}
	}
	for _gfebdc, _gcebgd := range _cdfdf.B {
		if _cdeegf := _gcebgd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _gfebdc)); _cdeegf != nil {
			return _cdeegf
		}
	}
	for _bceagf, _fbffec := range _cdfdf.E {
		if _eeffa := _fbffec.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _bceagf)); _eeffa != nil {
			return _eeffa
		}
	}
	for _acfed, _gefce := range _cdfdf.S {
		if _fcfcd := _gefce.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _acfed)); _fcfcd != nil {
			return _fcfcd
		}
	}
	for _ccafeb, _gfdbg := range _cdfdf.D {
		if _gdfga := _gfdbg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _ccafeb)); _gdfga != nil {
			return _gdfga
		}
	}
	return nil
}
func (_fddga *CT_MdxTuple) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgedc := range start.Attr {
		if _bgedc.Name.Local == "\u0063" {
			_cfge, _bbbfb := _e.ParseUint(_bgedc.Value, 10, 32)
			if _bbbfb != nil {
				return _bbbfb
			}
			_dfcdd := uint32(_cfge)
			_fddga.CAttr = &_dfcdd
			continue
		}
		if _bgedc.Name.Local == "\u0063\u0074" {
			_bfbbb, _cabdca := _bgedc.Value, error(nil)
			if _cabdca != nil {
				return _cabdca
			}
			_fddga.CtAttr = &_bfbbb
			continue
		}
		if _bgedc.Name.Local == "\u0073\u0069" {
			_aedc, _gabe := _e.ParseUint(_bgedc.Value, 10, 32)
			if _gabe != nil {
				return _gabe
			}
			_eedfb := uint32(_aedc)
			_fddga.SiAttr = &_eedfb
			continue
		}
		if _bgedc.Name.Local == "\u0066\u0069" {
			_dbba, _baccg := _e.ParseUint(_bgedc.Value, 10, 32)
			if _baccg != nil {
				return _baccg
			}
			_cfgd := uint32(_dbba)
			_fddga.FiAttr = &_cfgd
			continue
		}
		if _bgedc.Name.Local == "\u0062\u0063" {
			_eafcc, _dedeb := _bgedc.Value, error(nil)
			if _dedeb != nil {
				return _dedeb
			}
			_fddga.BcAttr = &_eafcc
			continue
		}
		if _bgedc.Name.Local == "\u0066\u0063" {
			_bdaad, _dcbfg := _bgedc.Value, error(nil)
			if _dcbfg != nil {
				return _dcbfg
			}
			_fddga.FcAttr = &_bdaad
			continue
		}
		if _bgedc.Name.Local == "\u0069" {
			_gggab, _efgc := _e.ParseBool(_bgedc.Value)
			if _efgc != nil {
				return _efgc
			}
			_fddga.IAttr = &_gggab
			continue
		}
		if _bgedc.Name.Local == "\u0075" {
			_gecae, _adaba := _e.ParseBool(_bgedc.Value)
			if _adaba != nil {
				return _adaba
			}
			_fddga.UAttr = &_gecae
			continue
		}
		if _bgedc.Name.Local == "\u0073\u0074" {
			_gdgee, _eccba := _e.ParseBool(_bgedc.Value)
			if _eccba != nil {
				return _eccba
			}
			_fddga.StAttr = &_gdgee
			continue
		}
		if _bgedc.Name.Local == "\u0062" {
			_dcgff, _dbdfde := _e.ParseBool(_bgedc.Value)
			if _dbdfde != nil {
				return _dbdfde
			}
			_fddga.BAttr = &_dcgff
			continue
		}
	}
_gafcg:
	for {
		_ecaaa, _dfgfd := d.Token()
		if _dfgfd != nil {
			return _dfgfd
		}
		switch _dfageg := _ecaaa.(type) {
		case _b.StartElement:
			switch _dfageg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_bdffe := NewCT_MetadataStringIndex()
				if _dedde := d.DecodeElement(_bdffe, &_dfageg); _dedde != nil {
					return _dedde
				}
				_fddga.N = append(_fddga.N, _bdffe)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065\u0020\u0025\u0076", _dfageg.Name)
				if _fgage := d.Skip(); _fgage != nil {
					return _fgage
				}
			}
		case _b.EndElement:
			break _gafcg
		case _b.CharData:
		}
	}
	return nil
}
func (_cgcdba *CT_Sst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eedfg := range start.Attr {
		if _eedfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbffe, _ebfee := _e.ParseUint(_eedfg.Value, 10, 32)
			if _ebfee != nil {
				return _ebfee
			}
			_cfgfgg := uint32(_cbffe)
			_cgcdba.CountAttr = &_cfgfgg
			continue
		}
		if _eedfg.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_eecfc, _eggbba := _e.ParseUint(_eedfg.Value, 10, 32)
			if _eggbba != nil {
				return _eggbba
			}
			_cdbga := uint32(_eecfc)
			_cgcdba.UniqueCountAttr = &_cdbga
			continue
		}
	}
_ffdfed:
	for {
		_baaefb, _cdccde := d.Token()
		if _cdccde != nil {
			return _cdccde
		}
		switch _edgbf := _baaefb.(type) {
		case _b.StartElement:
			switch _edgbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_fedad := NewCT_Rst()
				if _gcgdc := d.DecodeElement(_fedad, &_edgbf); _gcgdc != nil {
					return _gcgdc
				}
				_cgcdba.Si = append(_cgcdba.Si, _fedad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgcdba.ExtLst = NewCT_ExtensionList()
				if _cgaead := d.DecodeElement(_cgcdba.ExtLst, &_edgbf); _cgaead != nil {
					return _cgaead
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0073\u0074\u0020\u0025\u0076", _edgbf.Name)
				if _ggdfe := d.Skip(); _ggdfe != nil {
					return _ggdfe
				}
			}
		case _b.EndElement:
			break _ffdfed
		case _b.CharData:
		}
	}
	return nil
}
func NewQueryTable() *QueryTable {
	_ecgee := &QueryTable{}
	_ecgee.CT_QueryTable = *NewCT_QueryTable()
	return _ecgee
}

// Validate validates the CT_Control and its children
func (_dfcd *CT_Control) Validate() error {
	return _dfcd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

type CT_Set struct {

	// Number of Tuples
	CountAttr *uint32

	// Maximum Rank Requested
	MaxRankAttr int32

	// MDX Set Definition
	SetDefinitionAttr string

	// Set Sort Order
	SortTypeAttr ST_SortType

	// Query Failed
	QueryFailedAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Sort By Tuple
	SortByTuple *CT_Tuples
}

func (_fgcde *ST_PatternType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgcde = 0
	case "\u006e\u006f\u006e\u0065":
		*_fgcde = 1
	case "\u0073\u006f\u006ci\u0064":
		*_fgcde = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
		*_fgcde = 3
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_fgcde = 4
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_fgcde = 5
	case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
		*_fgcde = 6
	case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_fgcde = 7
	case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
		*_fgcde = 8
	case "\u0064\u0061\u0072\u006b\u0055\u0070":
		*_fgcde = 9
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
		*_fgcde = 10
	case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_fgcde = 11
	case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
		*_fgcde = 12
	case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_fgcde = 13
	case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
		*_fgcde = 14
	case "\u006ci\u0067\u0068\u0074\u0055\u0070":
		*_fgcde = 15
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
		*_fgcde = 16
	case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_fgcde = 17
	case "\u0067r\u0061\u0079\u0031\u0032\u0035":
		*_fgcde = 18
	case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
		*_fgcde = 19
	}
	return nil
}

type CT_Filters struct {

	// Filter by Blank
	BlankAttr *bool

	// Calendar Type
	CalendarTypeAttr _c.ST_CalendarType

	// Filter
	Filter []*CT_Filter

	// Date Grouping
	DateGroupItem []*CT_DateGroupItem
}
type CT_Cols struct {

	// Column Width & Formatting
	Col []*CT_Col
}

// ValidateWithPath validates the CT_PageMargins and its children, prefixing error messages with path
func (_dcacg *CT_PageMargins) ValidateWithPath(path string) error { return nil }

const (
	ST_DataValidationErrorStyleUnset       ST_DataValidationErrorStyle = 0
	ST_DataValidationErrorStyleStop        ST_DataValidationErrorStyle = 1
	ST_DataValidationErrorStyleWarning     ST_DataValidationErrorStyle = 2
	ST_DataValidationErrorStyleInformation ST_DataValidationErrorStyle = 3
)

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_ceedbg *CT_TableStyle) ValidateWithPath(path string) error {
	for _cfgcf, _bfaed := range _ceedbg.TableStyleElement {
		if _ecegee := _bfaed.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074\u005b\u0025\u0064\u005d", path, _cfgcf)); _ecegee != nil {
			return _ecegee
		}
	}
	return nil
}

type CT_RangeSet struct {

	// Field Item Index Page 1
	I1Attr *uint32

	// Field Item Index Page 2
	I2Attr *uint32

	// Field Item index Page 3
	I3Attr *uint32

	// Field Item Index Page 4
	I4Attr *uint32

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func NewCT_Boolean() *CT_Boolean { _gcg := &CT_Boolean{}; return _gcg }

// Validate validates the CT_VolTopicRef and its children
func (_deed *CT_VolTopicRef) Validate() error {
	return _deed.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066")
}

// Validate validates the CT_CellWatch and its children
func (_aefed *CT_CellWatch) Validate() error {
	return _aefed.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068")
}

type CT_TablePart struct{ IdAttr string }

func (_bgce *CT_DdeLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065"}, Value: _f.Sprintf("\u0025\u0076", _bgce.DdeServiceAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063"}, Value: _f.Sprintf("\u0025\u0076", _bgce.DdeTopicAttr)})
	e.EncodeToken(start)
	if _bgce.DdeItems != nil {
		_gged := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_bgce.DdeItems, _gged)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SheetStateUnset      ST_SheetState = 0
	ST_SheetStateVisible    ST_SheetState = 1
	ST_SheetStateHidden     ST_SheetState = 2
	ST_SheetStateVeryHidden ST_SheetState = 3
)

func (_eegede *EG_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdgac:
	for {
		_adcfdd, _cfdga := d.Token()
		if _cfdga != nil {
			return _cfdga
		}
		switch _dgcggf := _adcfdd.(type) {
		case _b.StartElement:
			switch _dgcggf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_egeaf := NewCT_Extension()
				if _dbddgee := d.DecodeElement(_egeaf, &_dgcggf); _dbddgee != nil {
					return _dbddgee
				}
				_eegede.Ext = append(_eegede.Ext, _egeaf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _dgcggf.Name)
				if _daced := d.Skip(); _daced != nil {
					return _daced
				}
			}
		case _b.EndElement:
			break _gdgac
		case _b.CharData:
		}
	}
	return nil
}
func (_cgcfc *CT_Metadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cgcfc.MetadataTypes != nil {
		_dcdad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_cgcfc.MetadataTypes, _dcdad)
	}
	if _cgcfc.MetadataStrings != nil {
		_dcaae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073"}}
		e.EncodeElement(_cgcfc.MetadataStrings, _dcaae)
	}
	if _cgcfc.MdxMetadata != nil {
		_fefba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_cgcfc.MdxMetadata, _fefba)
	}
	if _cgcfc.FutureMetadata != nil {
		_daeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		for _, _gbbee := range _cgcfc.FutureMetadata {
			e.EncodeElement(_gbbee, _daeb)
		}
	}
	if _cgcfc.CellMetadata != nil {
		_cbddg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_cgcfc.CellMetadata, _cbddg)
	}
	if _cgcfc.ValueMetadata != nil {
		_abdda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0076\u0061\u006cu\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_cgcfc.ValueMetadata, _abdda)
	}
	if _cgcfc.ExtLst != nil {
		_bffgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgcfc.ExtLst, _bffgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Users struct {

	// Active User Count
	CountAttr *uint32

	// User Information
	UserInfo []*CT_SharedUser
}

const (
	ST_ObjectsUnset        ST_Objects = 0
	ST_ObjectsAll          ST_Objects = 1
	ST_ObjectsPlaceholders ST_Objects = 2
	ST_ObjectsNone         ST_Objects = 3
)

func NewCT_PageBreak() *CT_PageBreak { _dgaede := &CT_PageBreak{}; return _dgaede }
func (_ccbd *CT_FontFamily) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _ccbd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccacg *CT_Filters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfgfc := range start.Attr {
		if _gfgfc.Name.Local == "\u0062\u006c\u0061n\u006b" {
			_cgfgff, _bdgff := _e.ParseBool(_gfgfc.Value)
			if _bdgff != nil {
				return _bdgff
			}
			_ccacg.BlankAttr = &_cgfgff
			continue
		}
		if _gfgfc.Name.Local == "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065" {
			_ccacg.CalendarTypeAttr.UnmarshalXMLAttr(_gfgfc)
			continue
		}
	}
_dfga:
	for {
		_adbf, _abfc := d.Token()
		if _abfc != nil {
			return _abfc
		}
		switch _fbcab := _adbf.(type) {
		case _b.StartElement:
			switch _fbcab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_ggbgad := NewCT_Filter()
				if _bdeea := d.DecodeElement(_ggbgad, &_fbcab); _bdeea != nil {
					return _bdeea
				}
				_ccacg.Filter = append(_ccacg.Filter, _ggbgad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}:
				_ebeb := NewCT_DateGroupItem()
				if _dcdfe := d.DecodeElement(_ebeb, &_fbcab); _dcdfe != nil {
					return _dcdfe
				}
				_ccacg.DateGroupItem = append(_ccacg.DateGroupItem, _ebeb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _fbcab.Name)
				if _adfae := d.Skip(); _adfae != nil {
					return _adfae
				}
			}
		case _b.EndElement:
			break _dfga
		case _b.CharData:
		}
	}
	return nil
}
func (_fcbcg *CT_VolTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_acdag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065"}}
	for _, _cfgege := range _fcbcg.VolType {
		e.EncodeElement(_cfgege, _acdag)
	}
	if _fcbcg.ExtLst != nil {
		_fgbga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fcbcg.ExtLst, _fgbga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Number struct {

	// Value
	VAttr float64

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// OLAP Members
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func (_bbedg ST_CfType) Validate() error { return _bbedg.ValidateWithPath("") }

// ValidateWithPath validates the CT_DdeItem and its children, prefixing error messages with path
func (_bbfb *CT_DdeItem) ValidateWithPath(path string) error {
	if _bbfb.Values != nil {
		if _bcba := _bbfb.Values.ValidateWithPath(path + "\u002fV\u0061\u006c\u0075\u0065\u0073"); _bcba != nil {
			return _bcba
		}
	}
	return nil
}
func (_ffaaa *CT_MergeCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffaaa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ffaaa.CountAttr)})
	}
	e.EncodeToken(start)
	_eabad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c"}}
	for _, _caaaa := range _ffaaa.MergeCell {
		e.EncodeElement(_caaaa, _eabad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SheetFormatPr struct {

	// Base Column Width
	BaseColWidthAttr *uint32

	// Default Column Width
	DefaultColWidthAttr *float64

	// Default Row Height
	DefaultRowHeightAttr float64

	// Custom Height
	CustomHeightAttr *bool

	// Hidden By Default
	ZeroHeightAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom Border
	ThickBottomAttr *bool

	// Maximum Outline Row
	OutlineLevelRowAttr *uint8

	// Column Outline Level
	OutlineLevelColAttr *uint8
}

func (_bfca *CT_CustomWorkbookViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_caace := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _bafg := range _bfca.CustomWorkbookView {
		e.EncodeElement(_bafg, _caace)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_IconFilter and its children, prefixing error messages with path
func (_gabg *CT_IconFilter) ValidateWithPath(path string) error {
	if _gabg.IconSetAttr == ST_IconSetTypeUnset {
		return _f.Errorf("%\u0073\u002f\u0049\u0063\u006f\u006eS\u0065\u0074\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bdgeg := _gabg.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _bdgeg != nil {
		return _bdgeg
	}
	return nil
}

// ValidateWithPath validates the CT_PivotTableStyle and its children, prefixing error messages with path
func (_afdfe *CT_PivotTableStyle) ValidateWithPath(path string) error { return nil }

type ST_SheetState byte

func (_fecfd ST_FilterOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fecfd.String(), start)
}
func (_faca *CT_DataFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _faca.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_faca.CountAttr)})
	}
	e.EncodeToken(start)
	_gffef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064"}}
	for _, _fbedd := range _faca.DataField {
		e.EncodeElement(_fbedd, _gffef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SheetId struct {

	// Sheet Id
	ValAttr uint32
}

func (_aeeaa *CT_Error) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aabgf := range start.Attr {
		if _aabgf.Name.Local == "\u0066\u0063" {
			_agecf, _gbacg := _aabgf.Value, error(nil)
			if _gbacg != nil {
				return _gbacg
			}
			_aeeaa.FcAttr = &_agecf
			continue
		}
		if _aabgf.Name.Local == "\u0076" {
			_fbdcf, _ceebb := _aabgf.Value, error(nil)
			if _ceebb != nil {
				return _ceebb
			}
			_aeeaa.VAttr = _fbdcf
			continue
		}
		if _aabgf.Name.Local == "\u0066" {
			_dfcbbc, _gace := _e.ParseBool(_aabgf.Value)
			if _gace != nil {
				return _gace
			}
			_aeeaa.FAttr = &_dfcbbc
			continue
		}
		if _aabgf.Name.Local == "\u0063" {
			_ffgeg, _gcgff := _aabgf.Value, error(nil)
			if _gcgff != nil {
				return _gcgff
			}
			_aeeaa.CAttr = &_ffgeg
			continue
		}
		if _aabgf.Name.Local == "\u0063\u0070" {
			_feegf, _cbbcf := _e.ParseUint(_aabgf.Value, 10, 32)
			if _cbbcf != nil {
				return _cbbcf
			}
			_dbgg := uint32(_feegf)
			_aeeaa.CpAttr = &_dbgg
			continue
		}
		if _aabgf.Name.Local == "\u0069\u006e" {
			_gadag, _egebd := _e.ParseUint(_aabgf.Value, 10, 32)
			if _egebd != nil {
				return _egebd
			}
			_aacfgg := uint32(_gadag)
			_aeeaa.InAttr = &_aacfgg
			continue
		}
		if _aabgf.Name.Local == "\u0062\u0063" {
			_ddda, _cegde := _aabgf.Value, error(nil)
			if _cegde != nil {
				return _cegde
			}
			_aeeaa.BcAttr = &_ddda
			continue
		}
		if _aabgf.Name.Local == "\u0075" {
			_cfagg, _dbecf := _e.ParseBool(_aabgf.Value)
			if _dbecf != nil {
				return _dbecf
			}
			_aeeaa.UAttr = &_cfagg
			continue
		}
		if _aabgf.Name.Local == "\u0069" {
			_adgfe, _gdbged := _e.ParseBool(_aabgf.Value)
			if _gdbged != nil {
				return _gdbged
			}
			_aeeaa.IAttr = &_adgfe
			continue
		}
		if _aabgf.Name.Local == "\u0075\u006e" {
			_feacf, _ceaf := _e.ParseBool(_aabgf.Value)
			if _ceaf != nil {
				return _ceaf
			}
			_aeeaa.UnAttr = &_feacf
			continue
		}
		if _aabgf.Name.Local == "\u0073\u0074" {
			_fecbc, _edacb := _e.ParseBool(_aabgf.Value)
			if _edacb != nil {
				return _edacb
			}
			_aeeaa.StAttr = &_fecbc
			continue
		}
		if _aabgf.Name.Local == "\u0062" {
			_cgcdb, _bfgcb := _e.ParseBool(_aabgf.Value)
			if _bfgcb != nil {
				return _bfgcb
			}
			_aeeaa.BAttr = &_cgcdb
			continue
		}
	}
_agcd:
	for {
		_abcb, _eaad := d.Token()
		if _eaad != nil {
			return _eaad
		}
		switch _bdefc := _abcb.(type) {
		case _b.StartElement:
			switch _bdefc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_aeeaa.Tpls = NewCT_Tuples()
				if _gdcaf := d.DecodeElement(_aeeaa.Tpls, &_bdefc); _gdcaf != nil {
					return _gdcaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_dccad := NewCT_X()
				if _bdagg := d.DecodeElement(_dccad, &_bdefc); _bdagg != nil {
					return _bdagg
				}
				_aeeaa.X = append(_aeeaa.X, _dccad)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0076", _bdefc.Name)
				if _becdc := d.Skip(); _becdc != nil {
					return _becdc
				}
			}
		case _b.EndElement:
			break _agcd
		case _b.CharData:
		}
	}
	return nil
}
func (_ccccd *ST_VolDepType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gafaa, _fdcggbb := d.Token()
	if _fdcggbb != nil {
		return _fdcggbb
	}
	if _cgacdg, _eeccc := _gafaa.(_b.EndElement); _eeccc && _cgacdg.Name == start.Name {
		*_ccccd = 1
		return nil
	}
	if _acfbbe, _gcedfc := _gafaa.(_b.CharData); !_gcedfc {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gafaa)
	} else {
		switch string(_acfbbe) {
		case "":
			*_ccccd = 0
		case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
			*_ccccd = 1
		case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
			*_ccccd = 2
		}
	}
	_gafaa, _fdcggbb = d.Token()
	if _fdcggbb != nil {
		return _fdcggbb
	}
	if _eabee, _adgfbe := _gafaa.(_b.EndElement); _adgfbe && _eabee.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gafaa)
}
func (_fbfae ST_SortBy) String() string {
	switch _fbfae {
	case 0:
		return ""
	case 1:
		return "\u0076\u0061\u006cu\u0065"
	case 2:
		return "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case 3:
		return "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case 4:
		return "\u0069\u0063\u006f\u006e"
	}
	return ""
}

const (
	ST_TableStyleTypeUnset                  ST_TableStyleType = 0
	ST_TableStyleTypeWholeTable             ST_TableStyleType = 1
	ST_TableStyleTypeHeaderRow              ST_TableStyleType = 2
	ST_TableStyleTypeTotalRow               ST_TableStyleType = 3
	ST_TableStyleTypeFirstColumn            ST_TableStyleType = 4
	ST_TableStyleTypeLastColumn             ST_TableStyleType = 5
	ST_TableStyleTypeFirstRowStripe         ST_TableStyleType = 6
	ST_TableStyleTypeSecondRowStripe        ST_TableStyleType = 7
	ST_TableStyleTypeFirstColumnStripe      ST_TableStyleType = 8
	ST_TableStyleTypeSecondColumnStripe     ST_TableStyleType = 9
	ST_TableStyleTypeFirstHeaderCell        ST_TableStyleType = 10
	ST_TableStyleTypeLastHeaderCell         ST_TableStyleType = 11
	ST_TableStyleTypeFirstTotalCell         ST_TableStyleType = 12
	ST_TableStyleTypeLastTotalCell          ST_TableStyleType = 13
	ST_TableStyleTypeFirstSubtotalColumn    ST_TableStyleType = 14
	ST_TableStyleTypeSecondSubtotalColumn   ST_TableStyleType = 15
	ST_TableStyleTypeThirdSubtotalColumn    ST_TableStyleType = 16
	ST_TableStyleTypeFirstSubtotalRow       ST_TableStyleType = 17
	ST_TableStyleTypeSecondSubtotalRow      ST_TableStyleType = 18
	ST_TableStyleTypeThirdSubtotalRow       ST_TableStyleType = 19
	ST_TableStyleTypeBlankRow               ST_TableStyleType = 20
	ST_TableStyleTypeFirstColumnSubheading  ST_TableStyleType = 21
	ST_TableStyleTypeSecondColumnSubheading ST_TableStyleType = 22
	ST_TableStyleTypeThirdColumnSubheading  ST_TableStyleType = 23
	ST_TableStyleTypeFirstRowSubheading     ST_TableStyleType = 24
	ST_TableStyleTypeSecondRowSubheading    ST_TableStyleType = 25
	ST_TableStyleTypeThirdRowSubheading     ST_TableStyleType = 26
	ST_TableStyleTypePageFieldLabels        ST_TableStyleType = 27
	ST_TableStyleTypePageFieldValues        ST_TableStyleType = 28
)

// ValidateWithPath validates the CT_MetadataType and its children, prefixing error messages with path
func (_egaab *CT_MetadataType) ValidateWithPath(path string) error { return nil }
func NewCT_DdeLink() *CT_DdeLink                                   { _edegg := &CT_DdeLink{}; return _edegg }

// Validate validates the CT_MemberProperties and its children
func (_ffbd *CT_MemberProperties) Validate() error {
	return _ffbd.ValidateWithPath("\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_badggg *ST_FileType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_badggg = 0
	case "\u006d\u0061\u0063":
		*_badggg = 1
	case "\u0077\u0069\u006e":
		*_badggg = 2
	case "\u0064\u006f\u0073":
		*_badggg = 3
	case "\u006c\u0069\u006e":
		*_badggg = 4
	case "\u006f\u0074\u0068e\u0072":
		*_badggg = 5
	}
	return nil
}

// ValidateWithPath validates the CT_LevelGroup and its children, prefixing error messages with path
func (_adage *CT_LevelGroup) ValidateWithPath(path string) error {
	if _cffeg := _adage.GroupMembers.ValidateWithPath(path + "\u002f\u0047\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"); _cffeg != nil {
		return _cffeg
	}
	return nil
}
func NewCT_CellStyles() *CT_CellStyles { _dcag := &CT_CellStyles{}; return _dcag }
func NewChartsheet() *Chartsheet {
	_dggdc := &Chartsheet{}
	_dggdc.CT_Chartsheet = *NewCT_Chartsheet()
	return _dggdc
}

// Validate validates the CT_CellSmartTagPr and its children
func (_cbcc *CT_CellSmartTagPr) Validate() error {
	return _cbcc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072")
}

type CT_RevisionComment struct {

	// Sheet Id
	SheetIdAttr uint32

	// Cell
	CellAttr string

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction

	// Always Show Comment
	AlwaysShowAttr *bool

	// Old Comment
	OldAttr *bool

	// Comment In Hidden Row
	HiddenRowAttr *bool

	// Hidden Column
	HiddenColumnAttr *bool

	// Author
	AuthorAttr string

	// Original Comment Length
	OldLengthAttr *uint32

	// New Comment Length
	NewLengthAttr *uint32
}

func NewCT_OleItems() *CT_OleItems { _bbae := &CT_OleItems{}; return _bbae }

// Validate validates the PivotTableDefinition and its children
func (_babbce *PivotTableDefinition) Validate() error {
	return _babbce.ValidateWithPath("P\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}
func (_edbbc *CT_SortCondition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fabac := range start.Attr {
		if _fabac.Name.Local == "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067" {
			_fgcfe, _dgdba := _e.ParseBool(_fabac.Value)
			if _dgdba != nil {
				return _dgdba
			}
			_edbbc.DescendingAttr = &_fgcfe
			continue
		}
		if _fabac.Name.Local == "\u0073\u006f\u0072\u0074\u0042\u0079" {
			_edbbc.SortByAttr.UnmarshalXMLAttr(_fabac)
			continue
		}
		if _fabac.Name.Local == "\u0072\u0065\u0066" {
			_abeae, _agfbg := _fabac.Value, error(nil)
			if _agfbg != nil {
				return _agfbg
			}
			_edbbc.RefAttr = _abeae
			continue
		}
		if _fabac.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074" {
			_fegaa, _eaffee := _fabac.Value, error(nil)
			if _eaffee != nil {
				return _eaffee
			}
			_edbbc.CustomListAttr = &_fegaa
			continue
		}
		if _fabac.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_fbgedaf, _dbdbg := _e.ParseUint(_fabac.Value, 10, 32)
			if _dbdbg != nil {
				return _dbdbg
			}
			_cabdf := uint32(_fbgedaf)
			_edbbc.DxfIdAttr = &_cabdf
			continue
		}
		if _fabac.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_edbbc.IconSetAttr.UnmarshalXMLAttr(_fabac)
			continue
		}
		if _fabac.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_adccbeg, _fbgeeg := _e.ParseUint(_fabac.Value, 10, 32)
			if _fbgeeg != nil {
				return _fbgeeg
			}
			_cdaef := uint32(_adccbeg)
			_edbbc.IconIdAttr = &_cdaef
			continue
		}
	}
	for {
		_faaef, _cfface := d.Token()
		if _cfface != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006f\u0072\u0074C\u006fn\u0064\u0069\u0074\u0069\u006f\u006e\u003a \u0025\u0073", _cfface)
		}
		if _gfffg, _bgcbcb := _faaef.(_b.EndElement); _bgcbcb && _gfffg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_IgnoredError() *CT_IgnoredError { _acbd := &CT_IgnoredError{}; return _acbd }
func (_accgg *CT_XmlColumnPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _f.Sprintf("\u0025\u0076", _accgg.MapIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _f.Sprintf("\u0025\u0076", _accgg.XpathAttr)})
	if _accgg.DenormalizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accgg.DenormalizedAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", _accgg.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _accgg.ExtLst != nil {
		_deefc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_accgg.ExtLst, _deefc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Dialogsheet and its children
func (_agebed *Dialogsheet) Validate() error {
	return _agebed.ValidateWithPath("D\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074")
}
func (_daccb *CT_RevisionAutoFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gabdc := range start.Attr {
		if _gabdc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_afbgfb, _accdg := _e.ParseUint(_gabdc.Value, 10, 32)
			if _accdg != nil {
				return _accdg
			}
			_daccb.SheetIdAttr = uint32(_afbgfb)
			continue
		}
		if _gabdc.Name.Local == "\u0072\u0065\u0066" {
			_gedgbc, _accfa := _gabdc.Value, error(nil)
			if _accfa != nil {
				return _accfa
			}
			_daccb.RefAttr = _gedgbc
			continue
		}
		if _gabdc.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fbcac, _bdeba := _e.ParseUint(_gabdc.Value, 10, 32)
			if _bdeba != nil {
				return _bdeba
			}
			_dfdcd := uint32(_fbcac)
			_daccb.AutoFormatIdAttr = &_dfdcd
			continue
		}
		if _gabdc.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ebbdae, _ccceg := _e.ParseBool(_gabdc.Value)
			if _ccceg != nil {
				return _ccceg
			}
			_daccb.ApplyNumberFormatsAttr = &_ebbdae
			continue
		}
		if _gabdc.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dfaca, _aedfc := _e.ParseBool(_gabdc.Value)
			if _aedfc != nil {
				return _aedfc
			}
			_daccb.ApplyBorderFormatsAttr = &_dfaca
			continue
		}
		if _gabdc.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eebdf, _adagdd := _e.ParseBool(_gabdc.Value)
			if _adagdd != nil {
				return _adagdd
			}
			_daccb.ApplyFontFormatsAttr = &_eebdf
			continue
		}
		if _gabdc.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dfdabbb, _dcafd := _e.ParseBool(_gabdc.Value)
			if _dcafd != nil {
				return _dcafd
			}
			_daccb.ApplyPatternFormatsAttr = &_dfdabbb
			continue
		}
		if _gabdc.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dggcb, _fgbad := _e.ParseBool(_gabdc.Value)
			if _fgbad != nil {
				return _fgbad
			}
			_daccb.ApplyAlignmentFormatsAttr = &_dggcb
			continue
		}
		if _gabdc.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_feggge, _faebd := _e.ParseBool(_gabdc.Value)
			if _faebd != nil {
				return _faebd
			}
			_daccb.ApplyWidthHeightFormatsAttr = &_feggge
			continue
		}
	}
	for {
		_adgcf, _caacgd := d.Token()
		if _caacgd != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eA\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006eg\u003a\u0020\u0025\u0073", _caacgd)
		}
		if _bafee, _egddd := _adgcf.(_b.EndElement); _egddd && _bafee.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Map struct {

	// XML Mapping ID
	IDAttr uint32

	// XML Mapping Name
	NameAttr string

	// Root Element Name
	RootElementAttr string

	// Schema Name
	SchemaIDAttr string

	// Show Validation Errors
	ShowImportExportValidationErrorsAttr bool

	// AutoFit Table on Refresh
	AutoFitAttr bool

	// Append Data to Table
	AppendAttr bool

	// Preserve AutoFilter State
	PreserveSortAFLayoutAttr bool

	// Preserve Cell Formatting
	PreserveFormatAttr bool

	// XML Mapping
	DataBinding *CT_DataBinding
}

func (_gfaag *ST_SortBy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbgfd, _debfe := d.Token()
	if _debfe != nil {
		return _debfe
	}
	if _dcfec, _dbadde := _fbgfd.(_b.EndElement); _dbadde && _dcfec.Name == start.Name {
		*_gfaag = 1
		return nil
	}
	if _addba, _eacb := _fbgfd.(_b.CharData); !_eacb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbgfd)
	} else {
		switch string(_addba) {
		case "":
			*_gfaag = 0
		case "\u0076\u0061\u006cu\u0065":
			*_gfaag = 1
		case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
			*_gfaag = 2
		case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
			*_gfaag = 3
		case "\u0069\u0063\u006f\u006e":
			*_gfaag = 4
		}
	}
	_fbgfd, _debfe = d.Token()
	if _debfe != nil {
		return _debfe
	}
	if _aeega, _edbgfd := _fbgfd.(_b.EndElement); _edbgfd && _aeega.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbgfd)
}

type CT_MdxSet struct {

	// Set Definition Index
	NsAttr uint32

	// Sort By Member Index Count
	CAttr *uint32

	// Set Sort Order
	OAttr ST_MdxSetOrder

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}
type CT_CellSmartTag struct {

	// Smart Tag Type Index
	TypeAttr uint32

	// Deleted
	DeletedAttr *bool

	// XML Based
	XmlBasedAttr *bool

	// Smart Tag Properties
	CellSmartTagPr []*CT_CellSmartTagPr
}
type CT_RevisionConflict struct {

	// Sheet Id
	SheetIdAttr *uint32
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func NewCT_SheetCalcPr() *CT_SheetCalcPr { _bedac := &CT_SheetCalcPr{}; return _bedac }
func NewCT_Dialogsheet() *CT_Dialogsheet { _dcabf := &CT_Dialogsheet{}; return _dcabf }

// ValidateWithPath validates the CT_DataField and its children, prefixing error messages with path
func (_acec *CT_DataField) ValidateWithPath(path string) error {
	if _gfddb := _acec.SubtotalAttr.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _gfddb != nil {
		return _gfddb
	}
	if _bcdeb := _acec.ShowDataAsAttr.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0044\u0061\u0074\u0061\u0041\u0073\u0041\u0074\u0074\u0072"); _bcdeb != nil {
		return _bcdeb
	}
	if _acec.ExtLst != nil {
		if _gfgf := _acec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfgf != nil {
			return _gfgf
		}
	}
	return nil
}

type CT_ExternalLinkChoice struct {
	ExternalBook *CT_ExternalBook
	DdeLink      *CT_DdeLink
	OleLink      *CT_OleLink
}

func (_ecad ST_GroupBy) ValidateWithPath(path string) error {
	switch _ecad {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecad))
	}
	return nil
}

// ValidateWithPath validates the CT_MemberProperties and its children, prefixing error messages with path
func (_fbegf *CT_MemberProperties) ValidateWithPath(path string) error {
	for _dggf, _eadbg := range _fbegf.Mp {
		if _ddcac := _eadbg.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u004d\u0070\u005b\u0025\u0064]", path, _dggf)); _ddcac != nil {
			return _ddcac
		}
	}
	return nil
}
func (_dgfdg *ST_FormatAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abaad, _bcacc := d.Token()
	if _bcacc != nil {
		return _bcacc
	}
	if _dgbeec, _gfefge := _abaad.(_b.EndElement); _gfefge && _dgbeec.Name == start.Name {
		*_dgfdg = 1
		return nil
	}
	if _gfggae, _efaege := _abaad.(_b.CharData); !_efaege {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abaad)
	} else {
		switch string(_gfggae) {
		case "":
			*_dgfdg = 0
		case "\u0062\u006c\u0061n\u006b":
			*_dgfdg = 1
		case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
			*_dgfdg = 2
		case "\u0064\u0072\u0069l\u006c":
			*_dgfdg = 3
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_dgfdg = 4
		}
	}
	_abaad, _bcacc = d.Token()
	if _bcacc != nil {
		return _bcacc
	}
	if _aabaea, _gfgda := _abaad.(_b.EndElement); _gfgda && _aabaea.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abaad)
}

// ValidateWithPath validates the CT_PivotField and its children, prefixing error messages with path
func (_fbada *CT_PivotField) ValidateWithPath(path string) error {
	if _fabba := _fbada.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _fabba != nil {
		return _fabba
	}
	if _edbfc := _fbada.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _edbfc != nil {
		return _edbfc
	}
	if _fbada.Items != nil {
		if _bcaea := _fbada.Items.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u006d\u0073"); _bcaea != nil {
			return _bcaea
		}
	}
	if _fbada.AutoSortScope != nil {
		if _bcgegf := _fbada.AutoSortScope.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"); _bcgegf != nil {
			return _bcgegf
		}
	}
	if _fbada.ExtLst != nil {
		if _cdedb := _fbada.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdedb != nil {
			return _cdedb
		}
	}
	return nil
}
func (_ec *CT_AutoSortScope) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ec.PivotArea = NewCT_PivotArea()
_bcfe:
	for {
		_bfc, _efd := d.Token()
		if _efd != nil {
			return _efd
		}
		switch _gcd := _bfc.(type) {
		case _b.StartElement:
			switch _gcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _ffc := d.DecodeElement(_ec.PivotArea, &_gcd); _ffc != nil {
					return _ffc
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065\u0020\u0025v", _gcd.Name)
				if _eaa := d.Skip(); _eaa != nil {
					return _eaa
				}
			}
		case _b.EndElement:
			break _bcfe
		case _b.CharData:
		}
	}
	return nil
}

type CT_TableColumns struct {

	// Column Count
	CountAttr *uint32

	// Table Column
	TableColumn []*CT_TableColumn
}

func NewCT_MergeCell() *CT_MergeCell { _fefcgg := &CT_MergeCell{}; return _fefcgg }

type CT_TableParts struct {

	// Count
	CountAttr *uint32

	// Table Part
	TablePart []*CT_TablePart
}

func (_cbed *CT_CommentPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbed.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.LockedAttr))})
	}
	if _cbed.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.DefaultSizeAttr))})
	}
	if _cbed.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.PrintAttr))})
	}
	if _cbed.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.DisabledAttr))})
	}
	if _cbed.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.AutoFillAttr))})
	}
	if _cbed.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.AutoLineAttr))})
	}
	if _cbed.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cbed.AltTextAttr)})
	}
	if _cbed.TextHAlignAttr != ST_TextHAlignUnset {
		_feef, _dcbag := _cbed.TextHAlignAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e"})
		if _dcbag != nil {
			return _dcbag
		}
		start.Attr = append(start.Attr, _feef)
	}
	if _cbed.TextVAlignAttr != ST_TextVAlignUnset {
		_fccg, _cgabe := _cbed.TextVAlignAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e"})
		if _cgabe != nil {
			return _cgabe
		}
		start.Attr = append(start.Attr, _fccg)
	}
	if _cbed.LockTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.LockTextAttr))})
	}
	if _cbed.JustLastXAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.JustLastXAttr))})
	}
	if _cbed.AutoScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cbed.AutoScaleAttr))})
	}
	e.EncodeToken(start)
	_dfbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_cbed.Anchor, _dfbb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgdcd *ST_VolDepType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cgdcd = 0
	case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
		*_cgdcd = 1
	case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
		*_cgdcd = 2
	}
	return nil
}
func (_cbacab ST_GradientType) String() string {
	switch _cbacab {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065\u0061\u0072"
	case 2:
		return "\u0070\u0061\u0074\u0068"
	}
	return ""
}

// Validate validates the CT_ExtensionList and its children
func (_acaabd *CT_ExtensionList) Validate() error {
	return _acaabd.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_baeaea *CT_TableFormula) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aebfg := range start.Attr {
		if _aebfg.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_cgaae, _eaeea := _e.ParseBool(_aebfg.Value)
			if _eaeea != nil {
				return _eaeea
			}
			_baeaea.ArrayAttr = _cgaae
			continue
		}
	}
	for {
		_cdafg, _dbfga := d.Token()
		if _dbfga != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0046o\u0072\u006d\u0075l\u0061:\u0020\u0025\u0073", _dbfga)
		}
		if _ddabg, _bbabd := _cdafg.(_b.CharData); _bbabd {
			_baeaea.Content = string(_ddabg)
		}
		if _gdaeb, _cbbbf := _cdafg.(_b.EndElement); _cbbbf && _gdaeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfaegfc *ST_Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egbda, _cadcfc := d.Token()
	if _cadcfc != nil {
		return _cadcfc
	}
	if _fegffa, _dggbd := _egbda.(_b.EndElement); _dggbd && _fegffa.Name == start.Name {
		*_bfaegfc = 1
		return nil
	}
	if _dcgfdb, _gfdgeg := _egbda.(_b.CharData); !_gfdgeg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egbda)
	} else {
		switch string(_dcgfdb) {
		case "":
			*_bfaegfc = 0
		case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
			*_bfaegfc = 1
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_bfaegfc = 2
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
			*_bfaegfc = 3
		}
	}
	_egbda, _cadcfc = d.Token()
	if _cadcfc != nil {
		return _cadcfc
	}
	if _cdeef, _fdgggc := _egbda.(_b.EndElement); _fdgggc && _cdeef.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egbda)
}

// ValidateWithPath validates the CT_CalculatedItems and its children, prefixing error messages with path
func (_decb *CT_CalculatedItems) ValidateWithPath(path string) error {
	for _cdb, _ggbg := range _decb.CalculatedItem {
		if _efca := _ggbg.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0061lc\u0075l\u0061\u0074\u0065\u0064\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _cdb)); _efca != nil {
			return _efca
		}
	}
	return nil
}
func (_dgbad *CT_PatternFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgafa := range start.Attr {
		if _fgafa.Name.Local == "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065" {
			_dgbad.PatternTypeAttr.UnmarshalXMLAttr(_fgafa)
			continue
		}
	}
_babeca:
	for {
		_aeeee, _cacgf := d.Token()
		if _cacgf != nil {
			return _cacgf
		}
		switch _edea := _aeeee.(type) {
		case _b.StartElement:
			switch _edea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}:
				_dgbad.FgColor = NewCT_Color()
				if _defcc := d.DecodeElement(_dgbad.FgColor, &_edea); _defcc != nil {
					return _defcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}:
				_dgbad.BgColor = NewCT_Color()
				if _fdede := d.DecodeElement(_dgbad.BgColor, &_edea); _fdede != nil {
					return _fdede
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006eF\u0069l\u006c\u0020\u0025\u0076", _edea.Name)
				if _aacfd := d.Skip(); _aacfd != nil {
					return _aacfd
				}
			}
		case _b.EndElement:
			break _babeca
		case _b.CharData:
		}
	}
	return nil
}

type ST_MdxFunctionType byte

func (_ebfebg *ST_HorizontalAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebfebg = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_ebfebg = 1
	case "\u006c\u0065\u0066\u0074":
		*_ebfebg = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_ebfebg = 3
	case "\u0072\u0069\u0067h\u0074":
		*_ebfebg = 4
	case "\u0066\u0069\u006c\u006c":
		*_ebfebg = 5
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_ebfebg = 6
	case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
		*_ebfebg = 7
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_ebfebg = 8
	}
	return nil
}

type CT_CustomWorkbookView struct {

	// Custom View Name
	NameAttr string

	// Custom View GUID
	GuidAttr string

	// Auto Update
	AutoUpdateAttr *bool

	// Merge Interval
	MergeIntervalAttr *uint32

	// Changes Saved Win
	ChangesSavedWinAttr *bool

	// Only Synch
	OnlySyncAttr *bool

	// Personal View
	PersonalViewAttr *bool

	// Include Print Settings
	IncludePrintSettingsAttr *bool

	// Include Hidden Rows & Columns
	IncludeHiddenRowColAttr *bool

	// Maximized
	MaximizedAttr *bool

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Top Left Corner (X Coordinate)
	XWindowAttr *int32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr uint32

	// Window Height
	WindowHeightAttr uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// Active Sheet in Book View
	ActiveSheetIdAttr uint32

	// Show Formula Bar
	ShowFormulaBarAttr *bool

	// Show Status Bar
	ShowStatusbarAttr *bool

	// Show Comments
	ShowCommentsAttr ST_Comments

	// Show Objects
	ShowObjectsAttr ST_Objects
	ExtLst          *CT_ExtensionList
}

func NewMetadata() *Metadata {
	_bacagg := &Metadata{}
	_bacagg.CT_Metadata = *NewCT_Metadata()
	return _bacagg
}

type CT_DbPr struct {

	// Connection String
	ConnectionAttr string

	// Command Text
	CommandAttr *string

	// Command Text
	ServerCommandAttr *string

	// OLE DB Command Type
	CommandTypeAttr *uint32
}

func NewCT_Authors() *CT_Authors { _fcfg := &CT_Authors{}; return _fcfg }
func NewCT_Pane() *CT_Pane       { _cfegb := &CT_Pane{}; return _cfegb }

const (
	ST_TargetScreenSizeUnset     ST_TargetScreenSize = 0
	ST_TargetScreenSize544x376   ST_TargetScreenSize = 1
	ST_TargetScreenSize640x480   ST_TargetScreenSize = 2
	ST_TargetScreenSize720x512   ST_TargetScreenSize = 3
	ST_TargetScreenSize800x600   ST_TargetScreenSize = 4
	ST_TargetScreenSize1024x768  ST_TargetScreenSize = 5
	ST_TargetScreenSize1152x882  ST_TargetScreenSize = 6
	ST_TargetScreenSize1152x900  ST_TargetScreenSize = 7
	ST_TargetScreenSize1280x1024 ST_TargetScreenSize = 8
	ST_TargetScreenSize1600x1200 ST_TargetScreenSize = 9
	ST_TargetScreenSize1800x1440 ST_TargetScreenSize = 10
	ST_TargetScreenSize1920x1200 ST_TargetScreenSize = 11
)

type ExternalLink struct{ CT_ExternalLink }

func (_fadcf *CT_GroupMembers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feabc := range start.Attr {
		if _feabc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gebca, _bdae := _e.ParseUint(_feabc.Value, 10, 32)
			if _bdae != nil {
				return _bdae
			}
			_ddecc := uint32(_gebca)
			_fadcf.CountAttr = &_ddecc
			continue
		}
	}
_fcbga:
	for {
		_fcbdg, _dceac := d.Token()
		if _dceac != nil {
			return _dceac
		}
		switch _ccbbba := _fcbdg.(type) {
		case _b.StartElement:
			switch _ccbbba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_gfcda := NewCT_GroupMember()
				if _eaecf := d.DecodeElement(_gfcda, &_ccbbba); _eaecf != nil {
					return _eaecf
				}
				_fadcf.GroupMember = append(_fadcf.GroupMember, _gfcda)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _ccbbba.Name)
				if _ffbfc := d.Skip(); _ffbfc != nil {
					return _ffbfc
				}
			}
		case _b.EndElement:
			break _fcbga
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_HeaderFooter and its children
func (_aaaad *CT_HeaderFooter) Validate() error {
	return _aaaad.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_Users and its children, prefixing error messages with path
func (_bacef *CT_Users) ValidateWithPath(path string) error {
	for _agebbe, _caecc := range _bacef.UserInfo {
		if _eebdg := _caecc.ValidateWithPath(_f.Sprintf("\u0025s\u002fU\u0073\u0065\u0072\u0049\u006e\u0066\u006f\u005b\u0025\u0064\u005d", path, _agebbe)); _eebdg != nil {
			return _eebdg
		}
	}
	return nil
}
func (_cdgdf ST_SheetState) ValidateWithPath(path string) error {
	switch _cdgdf {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdgdf))
	}
	return nil
}
func NewCT_PhoneticRun() *CT_PhoneticRun { _bcdba := &CT_PhoneticRun{}; return _bcdba }

type CT_WebPublishing struct {

	// Use CSS
	CssAttr *bool

	// Thicket
	ThicketAttr *bool

	// Enable Long File Names
	LongFileNamesAttr *bool

	// VML in Browsers
	VmlAttr *bool

	// Allow PNG
	AllowPngAttr *bool

	// Target Screen Size
	TargetScreenSizeAttr ST_TargetScreenSize

	// DPI
	DpiAttr *uint32

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string
}

func (_afaeb *CT_WebPublishObjects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afaeb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_afaeb.CountAttr)})
	}
	e.EncodeToken(start)
	_abbge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _fafefg := range _afaeb.WebPublishObject {
		e.EncodeElement(_fafefg, _abbge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MetadataTypes and its children, prefixing error messages with path
func (_bbbbd *CT_MetadataTypes) ValidateWithPath(path string) error {
	for _bcdbf, _ebede := range _bbbbd.MetadataType {
		if _cbgef := _ebede.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004det\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _bcdbf)); _cbgef != nil {
			return _cbgef
		}
	}
	return nil
}
func (_daacea ST_VolValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_daacea.String(), start)
}
func (_fffceg *CT_Record) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fffceg.M != nil {
		_bbdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _aadag := range _fffceg.M {
			e.EncodeElement(_aadag, _bbdf)
		}
	}
	if _fffceg.N != nil {
		_gagdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _ecegc := range _fffceg.N {
			e.EncodeElement(_ecegc, _gagdb)
		}
	}
	if _fffceg.B != nil {
		_bbaff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _caggec := range _fffceg.B {
			e.EncodeElement(_caggec, _bbaff)
		}
	}
	if _fffceg.E != nil {
		_aaace := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _ffcbe := range _fffceg.E {
			e.EncodeElement(_ffcbe, _aaace)
		}
	}
	if _fffceg.S != nil {
		_dbcee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _begad := range _fffceg.S {
			e.EncodeElement(_begad, _dbcee)
		}
	}
	if _fffceg.D != nil {
		_gagegc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _egfaf := range _fffceg.D {
			e.EncodeElement(_egfaf, _gagegc)
		}
	}
	if _fffceg.X != nil {
		_fdee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _fgedc := range _fffceg.X {
			e.EncodeElement(_fgedc, _fdee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Controls and its children, prefixing error messages with path
func (_cdf *CT_Controls) ValidateWithPath(path string) error {
	for _cgaf, _egbdf := range _cdf.Control {
		if _ebad := _egbdf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _cgaf)); _ebad != nil {
			return _ebad
		}
	}
	return nil
}
func (_ebbdgea ST_SortType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ebbdgea.String(), start)
}

const (
	ST_PaneUnset       ST_Pane = 0
	ST_PaneBottomRight ST_Pane = 1
	ST_PaneTopRight    ST_Pane = 2
	ST_PaneBottomLeft  ST_Pane = 3
	ST_PaneTopLeft     ST_Pane = 4
)

func (_edfgec ST_VerticalAlignment) String() string {
	switch _edfgec {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

// Validate validates the CT_SingleXmlCells and its children
func (_dccff *CT_SingleXmlCells) Validate() error {
	return _dccff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// Validate validates the CT_Tables and its children
func (_gfgfd *CT_Tables) Validate() error {
	return _gfgfd.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s")
}
func NewCT_DeletedField() *CT_DeletedField { _fccga := &CT_DeletedField{}; return _fccga }
func (_eaaeaa ST_DateTimeGrouping) ValidateWithPath(path string) error {
	switch _eaaeaa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaaeaa))
	}
	return nil
}

// Validate validates the CT_FilterColumn and its children
func (_cbece *CT_FilterColumn) Validate() error {
	return _cbece.ValidateWithPath("\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_DynamicFilter and its children
func (_gfgdg *CT_DynamicFilter) Validate() error {
	return _gfgdg.ValidateWithPath("\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072")
}

// ValidateWithPath validates the CalcChain and its children, prefixing error messages with path
func (_fffcb *CalcChain) ValidateWithPath(path string) error {
	if _fbabg := _fffcb.CT_CalcChain.ValidateWithPath(path); _fbabg != nil {
		return _fbabg
	}
	return nil
}

type ST_rwColActionType byte

// Validate validates the CT_Sst and its children
func (_ebceg *CT_Sst) Validate() error {
	return _ebceg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0073\u0074")
}

// Validate validates the AG_AutoFormat and its children
func (_fa *AG_AutoFormat) Validate() error {
	return _fa.ValidateWithPath("\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074")
}

// ValidateWithPath validates the CT_Missing and its children, prefixing error messages with path
func (_gfffc *CT_Missing) ValidateWithPath(path string) error {
	for _bbad, _dabaa := range _gfffc.Tpls {
		if _ddaea := _dabaa.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _bbad)); _ddaea != nil {
			return _ddaea
		}
	}
	for _gbbeb, _gegaa := range _gfffc.X {
		if _acfdd := _gegaa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gbbeb)); _acfdd != nil {
			return _acfdd
		}
	}
	return nil
}
func (_eae *CT_CfRule) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eae.TypeAttr != ST_CfTypeUnset {
		_eecg, _efcd := _eae.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _efcd != nil {
			return _efcd
		}
		start.Attr = append(start.Attr, _eecg)
	}
	if _eae.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_eae.DxfIdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _f.Sprintf("\u0025\u0076", _eae.PriorityAttr)})
	if _eae.StopIfTrueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eae.StopIfTrueAttr))})
	}
	if _eae.AboveAverageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eae.AboveAverageAttr))})
	}
	if _eae.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eae.PercentAttr))})
	}
	if _eae.BottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eae.BottomAttr))})
	}
	if _eae.OperatorAttr != ST_ConditionalFormattingOperatorUnset {
		_ebcc, _egffc := _eae.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _egffc != nil {
			return _egffc
		}
		start.Attr = append(start.Attr, _ebcc)
	}
	if _eae.TextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eae.TextAttr)})
	}
	if _eae.TimePeriodAttr != ST_TimePeriodUnset {
		_ccae, _dcf := _eae.TimePeriodAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"})
		if _dcf != nil {
			return _dcf
		}
		start.Attr = append(start.Attr, _ccae)
	}
	if _eae.RankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u006e\u006b"}, Value: _f.Sprintf("\u0025\u0076", *_eae.RankAttr)})
	}
	if _eae.StdDevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076"}, Value: _f.Sprintf("\u0025\u0076", *_eae.StdDevAttr)})
	}
	if _eae.EqualAverageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eae.EqualAverageAttr))})
	}
	e.EncodeToken(start)
	if _eae.Formula != nil {
		_gebg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		for _, _bdaf := range _eae.Formula {
			e.EncodeElement(_bdaf, _gebg)
		}
	}
	if _eae.ColorScale != nil {
		_dfgec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_eae.ColorScale, _dfgec)
	}
	if _eae.DataBar != nil {
		_daefb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0042\u0061\u0072"}}
		e.EncodeElement(_eae.DataBar, _daefb)
	}
	if _eae.IconSet != nil {
		_dgdgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0053\u0065\u0074"}}
		e.EncodeElement(_eae.IconSet, _dgdgf)
	}
	if _eae.ExtLst != nil {
		_cdbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eae.ExtLst, _cdbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalDefinedName struct {

	// Defined Name
	NameAttr string

	// Refers To
	RefersToAttr *string

	// Sheet Id
	SheetIdAttr *uint32
}

// Validate validates the CT_Row and its children
func (_ccbffd *CT_Row) Validate() error {
	return _ccbffd.ValidateWithPath("\u0043\u0054\u005f\u0052\u006f\u0077")
}
func (_gcedf ST_HorizontalAlignment) Validate() error { return _gcedf.ValidateWithPath("") }
func (_gbedcfc ST_ItemType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbedcfc.String(), start)
}

// Validate validates the CT_VolType and its children
func (_dgfced *CT_VolType) Validate() error {
	return _dgfced.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065")
}

type ST_FormatAction byte

const (
	ST_WebSourceTypeUnset      ST_WebSourceType = 0
	ST_WebSourceTypeSheet      ST_WebSourceType = 1
	ST_WebSourceTypePrintArea  ST_WebSourceType = 2
	ST_WebSourceTypeAutoFilter ST_WebSourceType = 3
	ST_WebSourceTypeRange      ST_WebSourceType = 4
	ST_WebSourceTypeChart      ST_WebSourceType = 5
	ST_WebSourceTypePivotTable ST_WebSourceType = 6
	ST_WebSourceTypeQuery      ST_WebSourceType = 7
	ST_WebSourceTypeLabel      ST_WebSourceType = 8
)

func (_agfgba *CT_CellWatch) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adggb := range start.Attr {
		if _adggb.Name.Local == "\u0072" {
			_fdbb, _ceff := _adggb.Value, error(nil)
			if _ceff != nil {
				return _ceff
			}
			_agfgba.RAttr = _fdbb
			continue
		}
	}
	for {
		_agebd, _gggb := d.Token()
		if _gggb != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u003a\u0020\u0025\u0073", _gggb)
		}
		if _bfcbge, _fgcce := _agebd.(_b.EndElement); _fgcce && _bfcbge.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bcaefg *ST_GrowShrinkType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcaefg = 0
	case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
		*_bcaefg = 1
	case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
		*_bcaefg = 2
	case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
		*_bcaefg = 3
	}
	return nil
}

type CT_Missing struct {

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func NewCT_PivotHierarchy() *CT_PivotHierarchy { _ggdac := &CT_PivotHierarchy{}; return _ggdac }
func (_cdbaa *CT_SmartTagTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cdbaa.SmartTagType != nil {
		_fbffcd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}}
		for _, _bccggf := range _cdbaa.SmartTagType {
			e.EncodeElement(_bccggf, _fbffcd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eebga *ST_DataValidationOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eebga = 0
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_eebga = 1
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_eebga = 2
	case "\u0065\u0071\u0075a\u006c":
		*_eebga = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_eebga = 4
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_eebga = 5
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_eebga = 6
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_eebga = 7
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_eebga = 8
	}
	return nil
}
func (_dcdgb *CT_XmlColumnPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agce := range start.Attr {
		if _agce.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_ggbfb, _cfeaa := _e.ParseUint(_agce.Value, 10, 32)
			if _cfeaa != nil {
				return _cfeaa
			}
			_dcdgb.MapIdAttr = uint32(_ggbfb)
			continue
		}
		if _agce.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_fbfgg, _eegcc := _agce.Value, error(nil)
			if _eegcc != nil {
				return _eegcc
			}
			_dcdgb.XpathAttr = _fbfgg
			continue
		}
		if _agce.Name.Local == "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064" {
			_fggdfe, _ffaad := _e.ParseBool(_agce.Value)
			if _ffaad != nil {
				return _ffaad
			}
			_dcdgb.DenormalizedAttr = &_fggdfe
			continue
		}
		if _agce.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_ffged, _bdgdgd := _agce.Value, error(nil)
			if _bdgdgd != nil {
				return _bdgdgd
			}
			_dcdgb.XmlDataTypeAttr = _ffged
			continue
		}
	}
_afeada:
	for {
		_egcgada, _gdceg := d.Token()
		if _gdceg != nil {
			return _gdceg
		}
		switch _edadd := _egcgada.(type) {
		case _b.StartElement:
			switch _edadd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcdgb.ExtLst = NewCT_ExtensionList()
				if _deaad := d.DecodeElement(_dcdgb.ExtLst, &_edadd); _deaad != nil {
					return _deaad
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006c\u0075m\u006eP\u0072\u0020\u0025\u0076", _edadd.Name)
				if _gbbbb := d.Skip(); _gbbbb != nil {
					return _gbbbb
				}
			}
		case _b.EndElement:
			break _afeada
		case _b.CharData:
		}
	}
	return nil
}
func (_fcefa *CT_QueryTableFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcefa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fcefa.CountAttr)})
	}
	e.EncodeToken(start)
	if _fcefa.QueryTableField != nil {
		_fggfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aq\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064"}}
		for _, _feefaf := range _fcefa.QueryTableField {
			e.EncodeElement(_feefaf, _fggfe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupLevel() *CT_GroupLevel { _ebfegd := &CT_GroupLevel{}; return _ebfegd }

// Validate validates the CT_CellSmartTag and its children
func (_gadac *CT_CellSmartTag) Validate() error {
	return _gadac.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067")
}
func (_beebbg ST_FormatAction) String() string {
	switch _beebbg {
	case 0:
		return ""
	case 1:
		return "\u0062\u006c\u0061n\u006b"
	case 2:
		return "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case 3:
		return "\u0064\u0072\u0069l\u006c"
	case 4:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return ""
}
func (_edegb *CT_WorksheetSource) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfdbgc := range start.Attr {
		if _cfdbgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfdbgc.Name.Local == "\u0069\u0064" || _cfdbgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfdbgc.Name.Local == "\u0069\u0064" {
			_caedg, _fccbe := _cfdbgc.Value, error(nil)
			if _fccbe != nil {
				return _fccbe
			}
			_edegb.IdAttr = &_caedg
			continue
		}
		if _cfdbgc.Name.Local == "\u0072\u0065\u0066" {
			_cgecba, _cacfgc := _cfdbgc.Value, error(nil)
			if _cacfgc != nil {
				return _cacfgc
			}
			_edegb.RefAttr = &_cgecba
			continue
		}
		if _cfdbgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efaccc, _afabc := _cfdbgc.Value, error(nil)
			if _afabc != nil {
				return _afabc
			}
			_edegb.NameAttr = &_efaccc
			continue
		}
		if _cfdbgc.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_fagcc, _adgefd := _cfdbgc.Value, error(nil)
			if _adgefd != nil {
				return _adgefd
			}
			_edegb.SheetAttr = &_fagcc
			continue
		}
	}
	for {
		_ebdcg, _baffaf := d.Token()
		if _baffaf != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u006f\u0072\u006b\u0073\u0068\u0065e\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u003a\u0020\u0025\u0073", _baffaf)
		}
		if _bggccb, _gddcdb := _ebdcg.(_b.EndElement); _gddcdb && _bggccb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbfcea *CT_QueryTable) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _fbfcea.NameAttr)})
	if _fbfcea.HeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.HeadersAttr))})
	}
	if _fbfcea.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.RowNumbersAttr))})
	}
	if _fbfcea.DisableRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.DisableRefreshAttr))})
	}
	if _fbfcea.BackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.BackgroundRefreshAttr))})
	}
	if _fbfcea.FirstBackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.FirstBackgroundRefreshAttr))})
	}
	if _fbfcea.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.RefreshOnLoadAttr))})
	}
	if _fbfcea.GrowShrinkTypeAttr != ST_GrowShrinkTypeUnset {
		_gcdee, _faga := _fbfcea.GrowShrinkTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065"})
		if _faga != nil {
			return _faga
		}
		start.Attr = append(start.Attr, _gcdee)
	}
	if _fbfcea.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.FillFormulasAttr))})
	}
	if _fbfcea.RemoveDataOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.RemoveDataOnSaveAttr))})
	}
	if _fbfcea.DisableEditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.DisableEditAttr))})
	}
	if _fbfcea.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.PreserveFormattingAttr))})
	}
	if _fbfcea.AdjustColumnWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.AdjustColumnWidthAttr))})
	}
	if _fbfcea.IntermediateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.IntermediateAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fbfcea.ConnectionIdAttr)})
	if _fbfcea.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fbfcea.AutoFormatIdAttr)})
	}
	if _fbfcea.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.ApplyNumberFormatsAttr))})
	}
	if _fbfcea.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.ApplyBorderFormatsAttr))})
	}
	if _fbfcea.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.ApplyFontFormatsAttr))})
	}
	if _fbfcea.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.ApplyPatternFormatsAttr))})
	}
	if _fbfcea.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.ApplyAlignmentFormatsAttr))})
	}
	if _fbfcea.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fbfcea.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	if _fbfcea.QueryTableRefresh != nil {
		_agbcc := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068"}}
		e.EncodeElement(_fbfcea.QueryTableRefresh, _agbcc)
	}
	if _fbfcea.ExtLst != nil {
		_fdbccd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbfcea.ExtLst, _fdbccd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbafe *CT_Tuple) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agagc := range start.Attr {
		if _agagc.Name.Local == "\u0066\u006c\u0064" {
			_gddbf, _geadg := _e.ParseUint(_agagc.Value, 10, 32)
			if _geadg != nil {
				return _geadg
			}
			_fgaefg := uint32(_gddbf)
			_gbafe.FldAttr = &_fgaefg
			continue
		}
		if _agagc.Name.Local == "\u0068\u0069\u0065\u0072" {
			_gdbfa, _gfcaa := _e.ParseUint(_agagc.Value, 10, 32)
			if _gfcaa != nil {
				return _gfcaa
			}
			_ebcfa := uint32(_gdbfa)
			_gbafe.HierAttr = &_ebcfa
			continue
		}
		if _agagc.Name.Local == "\u0069\u0074\u0065\u006d" {
			_bcbcf, _gaede := _e.ParseUint(_agagc.Value, 10, 32)
			if _gaede != nil {
				return _gaede
			}
			_gbafe.ItemAttr = uint32(_bcbcf)
			continue
		}
	}
	for {
		_deegb, _bbcfa := d.Token()
		if _bbcfa != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0075\u0070\u006c\u0065: \u0025\u0073", _bbcfa)
		}
		if _fafeb, _dddag := _deegb.(_b.EndElement); _dddag && _fafeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bedcg *CT_UndoInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bedcg.ExpAttr = ST_FormulaExpression(1)
	for _, _gdabec := range start.Attr {
		if _gdabec.Name.Local == "\u0069\u006e\u0064e\u0078" {
			_gdeggc, _bdfcdd := _e.ParseUint(_gdabec.Value, 10, 32)
			if _bdfcdd != nil {
				return _bdfcdd
			}
			_bedcg.IndexAttr = uint32(_gdeggc)
			continue
		}
		if _gdabec.Name.Local == "\u0065\u0078\u0070" {
			_bedcg.ExpAttr.UnmarshalXMLAttr(_gdabec)
			continue
		}
		if _gdabec.Name.Local == "\u0072\u0065\u00663\u0044" {
			_ebadgb, _acdeb := _e.ParseBool(_gdabec.Value)
			if _acdeb != nil {
				return _acdeb
			}
			_bedcg.Ref3DAttr = &_ebadgb
			continue
		}
		if _gdabec.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_ebbfb, _acecf := _e.ParseBool(_gdabec.Value)
			if _acecf != nil {
				return _acecf
			}
			_bedcg.ArrayAttr = &_ebbfb
			continue
		}
		if _gdabec.Name.Local == "\u0076" {
			_dcdbda, _gdadf := _e.ParseBool(_gdabec.Value)
			if _gdadf != nil {
				return _gdadf
			}
			_bedcg.VAttr = &_dcdbda
			continue
		}
		if _gdabec.Name.Local == "\u006e\u0066" {
			_fbaae, _feacfb := _e.ParseBool(_gdabec.Value)
			if _feacfb != nil {
				return _feacfb
			}
			_bedcg.NfAttr = &_fbaae
			continue
		}
		if _gdabec.Name.Local == "\u0063\u0073" {
			_bdggd, _dcceef := _e.ParseBool(_gdabec.Value)
			if _dcceef != nil {
				return _dcceef
			}
			_bedcg.CsAttr = &_bdggd
			continue
		}
		if _gdabec.Name.Local == "\u0064\u0072" {
			_ddcff, _bbagf := _gdabec.Value, error(nil)
			if _bbagf != nil {
				return _bbagf
			}
			_bedcg.DrAttr = _ddcff
			continue
		}
		if _gdabec.Name.Local == "\u0064\u006e" {
			_ggfcae, _fdbec := _gdabec.Value, error(nil)
			if _fdbec != nil {
				return _fdbec
			}
			_bedcg.DnAttr = &_ggfcae
			continue
		}
		if _gdabec.Name.Local == "\u0072" {
			_gebdcd, _fbgdc := _gdabec.Value, error(nil)
			if _fbgdc != nil {
				return _fbgdc
			}
			_bedcg.RAttr = &_gebdcd
			continue
		}
		if _gdabec.Name.Local == "\u0073\u0049\u0064" {
			_dgddf, _bfeag := _e.ParseUint(_gdabec.Value, 10, 32)
			if _bfeag != nil {
				return _bfeag
			}
			_gcbbb := uint32(_dgddf)
			_bedcg.SIdAttr = &_gcbbb
			continue
		}
	}
	for {
		_fddad, _aeecbg := d.Token()
		if _aeecbg != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0073", _aeecbg)
		}
		if _cedee, _dbabd := _fddad.(_b.EndElement); _dbabd && _cedee.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Members() *CT_Members { _eabbc := &CT_Members{}; return _eabbc }

type CT_MdxTuple struct {

	// Member Index Count
	CAttr *uint32

	// Server Formatting Culture Currency
	CtAttr *string

	// Server Formatting String Index
	SiAttr *uint32

	// Server Formatting Built-In Number Format Index
	FiAttr *uint32

	// Server Formatting Background Color
	BcAttr *string

	// Server Formatting Foreground Color
	FcAttr *string

	// Server Formatting Italic Font
	IAttr *bool

	// Server Formatting Underline Font
	UAttr *bool

	// Server Formatting Strikethrough Font
	StAttr *bool

	// Server Formatting Bold Font
	BAttr *bool

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_fegee ST_TimePeriod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgafcd := _b.Attr{}
	_fgafcd.Name = name
	switch _fegee {
	case ST_TimePeriodUnset:
		_fgafcd.Value = ""
	case ST_TimePeriodToday:
		_fgafcd.Value = "\u0074\u006f\u0064a\u0079"
	case ST_TimePeriodYesterday:
		_fgafcd.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_TimePeriodTomorrow:
		_fgafcd.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_TimePeriodLast7Days:
		_fgafcd.Value = "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case ST_TimePeriodThisMonth:
		_fgafcd.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodLastMonth:
		_fgafcd.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodNextMonth:
		_fgafcd.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodThisWeek:
		_fgafcd.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_TimePeriodLastWeek:
		_fgafcd.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_TimePeriodNextWeek:
		_fgafcd.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return _fgafcd, nil
}

type CT_Dimensions struct {

	// OLAP Dimensions Count
	CountAttr *uint32

	// OLAP Dimension
	Dimension []*CT_PivotDimension
}

func (_eebbb ST_ItemType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bacfgc := _b.Attr{}
	_bacfgc.Name = name
	switch _eebbb {
	case ST_ItemTypeUnset:
		_bacfgc.Value = ""
	case ST_ItemTypeData:
		_bacfgc.Value = "\u0064\u0061\u0074\u0061"
	case ST_ItemTypeDefault:
		_bacfgc.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_ItemTypeSum:
		_bacfgc.Value = "\u0073\u0075\u006d"
	case ST_ItemTypeCountA:
		_bacfgc.Value = "\u0063\u006f\u0075\u006e\u0074\u0041"
	case ST_ItemTypeAvg:
		_bacfgc.Value = "\u0061\u0076\u0067"
	case ST_ItemTypeMax:
		_bacfgc.Value = "\u006d\u0061\u0078"
	case ST_ItemTypeMin:
		_bacfgc.Value = "\u006d\u0069\u006e"
	case ST_ItemTypeProduct:
		_bacfgc.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_ItemTypeCount:
		_bacfgc.Value = "\u0063\u006f\u0075n\u0074"
	case ST_ItemTypeStdDev:
		_bacfgc.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_ItemTypeStdDevP:
		_bacfgc.Value = "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case ST_ItemTypeVar:
		_bacfgc.Value = "\u0076\u0061\u0072"
	case ST_ItemTypeVarP:
		_bacfgc.Value = "\u0076\u0061\u0072\u0050"
	case ST_ItemTypeGrand:
		_bacfgc.Value = "\u0067\u0072\u0061n\u0064"
	case ST_ItemTypeBlank:
		_bacfgc.Value = "\u0062\u006c\u0061n\u006b"
	}
	return _bacfgc, nil
}
func (_gfcea *CT_Members) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfcea.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gfcea.CountAttr)})
	}
	if _gfcea.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_gfcea.LevelAttr)})
	}
	e.EncodeToken(start)
	_gfdbfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0065\u006d\u0062\u0065r"}}
	for _, _eagdg := range _gfcea.Member {
		e.EncodeElement(_eagdg, _gfdbfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfaff *CT_IconSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfcba := range start.Attr {
		if _cfcba.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_bfaff.IconSetAttr.UnmarshalXMLAttr(_cfcba)
			continue
		}
		if _cfcba.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_dcaeg, _bbbe := _e.ParseBool(_cfcba.Value)
			if _bbbe != nil {
				return _bbbe
			}
			_bfaff.ShowValueAttr = &_dcaeg
			continue
		}
		if _cfcba.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_dcafe, _aebb := _e.ParseBool(_cfcba.Value)
			if _aebb != nil {
				return _aebb
			}
			_bfaff.PercentAttr = &_dcafe
			continue
		}
		if _cfcba.Name.Local == "\u0072e\u0076\u0065\u0072\u0073\u0065" {
			_gaed, _cbag := _e.ParseBool(_cfcba.Value)
			if _cbag != nil {
				return _cbag
			}
			_bfaff.ReverseAttr = &_gaed
			continue
		}
	}
_acgbf:
	for {
		_fgcdb, _dcbfb := d.Token()
		if _dcbfb != nil {
			return _dcbfb
		}
		switch _dege := _fgcdb.(type) {
		case _b.StartElement:
			switch _dege.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_dgedb := NewCT_Cfvo()
				if _adfab := d.DecodeElement(_dgedb, &_dege); _adfab != nil {
					return _adfab
				}
				_bfaff.Cfvo = append(_bfaff.Cfvo, _dgedb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fI\u0063\u006f\u006e\u0053\u0065\u0074\u0020\u0025\u0076", _dege.Name)
				if _gaebac := d.Skip(); _gaebac != nil {
					return _gaebac
				}
			}
		case _b.EndElement:
			break _acgbf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Cell() *CT_Cell { _acdf := &CT_Cell{}; return _acdf }

type CT_VolTypes struct {

	// Volatile Dependency Type
	VolType []*CT_VolType
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_Cols and its children
func (_agccb *CT_Cols) Validate() error {
	return _agccb.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u0073")
}
func (_eaegga *Revisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaegga.CT_Revisions = *NewCT_Revisions()
_egfade:
	for {
		_ebfeb, _cdfeff := d.Token()
		if _cdfeff != nil {
			return _cdfeff
		}
		switch _cdfab := _ebfeb.(type) {
		case _b.StartElement:
			switch _cdfab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_eadgd := NewCT_RevisionRowColumn()
				if _cgcafe := d.DecodeElement(_eadgd, &_cdfab); _cgcafe != nil {
					return _cgcafe
				}
				_eaegga.Rrc = append(_eaegga.Rrc, _eadgd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_adgbe := NewCT_RevisionMove()
				if _afeeb := d.DecodeElement(_adgbe, &_cdfab); _afeeb != nil {
					return _afeeb
				}
				_eaegga.Rm = append(_eaegga.Rm, _adgbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_egdaab := NewCT_RevisionCustomView()
				if _cebfa := d.DecodeElement(_egdaab, &_cdfab); _cebfa != nil {
					return _cebfa
				}
				_eaegga.Rcv = append(_eaegga.Rcv, _egdaab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_decefb := NewCT_RevisionSheetRename()
				if _efagac := d.DecodeElement(_decefb, &_cdfab); _efagac != nil {
					return _efagac
				}
				_eaegga.Rsnm = append(_eaegga.Rsnm, _decefb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_dccaa := NewCT_RevisionInsertSheet()
				if _fabdgf := d.DecodeElement(_dccaa, &_cdfab); _fabdgf != nil {
					return _fabdgf
				}
				_eaegga.Ris = append(_eaegga.Ris, _dccaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_gedge := NewCT_RevisionCellChange()
				if _gcfgeb := d.DecodeElement(_gedge, &_cdfab); _gcfgeb != nil {
					return _gcfgeb
				}
				_eaegga.Rcc = append(_eaegga.Rcc, _gedge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_gadfa := NewCT_RevisionFormatting()
				if _dacfcd := d.DecodeElement(_gadfa, &_cdfab); _dacfcd != nil {
					return _dacfcd
				}
				_eaegga.Rfmt = append(_eaegga.Rfmt, _gadfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_dfgfe := NewCT_RevisionAutoFormatting()
				if _dcgca := d.DecodeElement(_dfgfe, &_cdfab); _dcgca != nil {
					return _dcgca
				}
				_eaegga.Raf = append(_eaegga.Raf, _dfgfe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_feffed := NewCT_RevisionDefinedName()
				if _caaee := d.DecodeElement(_feffed, &_cdfab); _caaee != nil {
					return _caaee
				}
				_eaegga.Rdn = append(_eaegga.Rdn, _feffed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_aedfba := NewCT_RevisionComment()
				if _gfdcgc := d.DecodeElement(_aedfba, &_cdfab); _gfdcgc != nil {
					return _gfdcgc
				}
				_eaegga.Rcmt = append(_eaegga.Rcmt, _aedfba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_aadegf := NewCT_RevisionQueryTableField()
				if _fbgdb := d.DecodeElement(_aadegf, &_cdfab); _fbgdb != nil {
					return _fbgdb
				}
				_eaegga.Rqt = append(_eaegga.Rqt, _aadegf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_addcd := NewCT_RevisionConflict()
				if _cacgea := d.DecodeElement(_addcd, &_cdfab); _cacgea != nil {
					return _cacgea
				}
				_eaegga.Rcft = append(_eaegga.Rcft, _addcd)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073 \u0025\u0076", _cdfab.Name)
				if _effgbg := d.Skip(); _effgbg != nil {
					return _effgbg
				}
			}
		case _b.EndElement:
			break _egfade
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Scenarios and its children, prefixing error messages with path
func (_abcec *CT_Scenarios) ValidateWithPath(path string) error {
	for _gdafe, _ebcggc := range _abcec.Scenario {
		if _dabcf := _ebcggc.ValidateWithPath(_f.Sprintf("\u0025s\u002fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u005b\u0025\u0064\u005d", path, _gdafe)); _dabcf != nil {
			return _dabcf
		}
	}
	return nil
}
func (_beggfg ST_DataValidationImeMode) Validate() error { return _beggfg.ValidateWithPath("") }
func (_gcaega ST_DateTimeGrouping) String() string {
	switch _gcaega {
	case 0:
		return ""
	case 1:
		return "\u0079\u0065\u0061\u0072"
	case 2:
		return "\u006d\u006f\u006et\u0068"
	case 3:
		return "\u0064\u0061\u0079"
	case 4:
		return "\u0068\u006f\u0075\u0072"
	case 5:
		return "\u006d\u0069\u006e\u0075\u0074\u0065"
	case 6:
		return "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return ""
}

type CT_Comment struct {

	// Cell Reference
	RefAttr string

	// Author Id
	AuthorIdAttr uint32

	// Unique Identifier for Comment
	GuidAttr *string

	// Shape ID
	ShapeIdAttr *uint32

	// Comment Text
	Text *CT_Rst

	// Comment Properties
	CommentPr *CT_CommentPr
}

func (_ecg *CT_Boolean) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gac := range start.Attr {
		if _gac.Name.Local == "\u0076" {
			_fgdc, _bfd := _e.ParseBool(_gac.Value)
			if _bfd != nil {
				return _bfd
			}
			_ecg.VAttr = _fgdc
			continue
		}
		if _gac.Name.Local == "\u0075" {
			_ccg, _bgdg := _e.ParseBool(_gac.Value)
			if _bgdg != nil {
				return _bgdg
			}
			_ecg.UAttr = &_ccg
			continue
		}
		if _gac.Name.Local == "\u0066" {
			_aec, _bag := _e.ParseBool(_gac.Value)
			if _bag != nil {
				return _bag
			}
			_ecg.FAttr = &_aec
			continue
		}
		if _gac.Name.Local == "\u0063" {
			_eab, _feeg := _gac.Value, error(nil)
			if _feeg != nil {
				return _feeg
			}
			_ecg.CAttr = &_eab
			continue
		}
		if _gac.Name.Local == "\u0063\u0070" {
			_fcd, _abge := _e.ParseUint(_gac.Value, 10, 32)
			if _abge != nil {
				return _abge
			}
			_ddb := uint32(_fcd)
			_ecg.CpAttr = &_ddb
			continue
		}
	}
_bgf:
	for {
		_dbdb, _bcfd := d.Token()
		if _bcfd != nil {
			return _bcfd
		}
		switch _bef := _dbdb.(type) {
		case _b.StartElement:
			switch _bef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_adf := NewCT_X()
				if _abgf := d.DecodeElement(_adf, &_bef); _abgf != nil {
					return _abgf
				}
				_ecg.X = append(_ecg.X, _adf)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0025\u0076", _bef.Name)
				if _ccca := d.Skip(); _ccca != nil {
					return _ccca
				}
			}
		case _b.EndElement:
			break _bgf
		case _b.CharData:
		}
	}
	return nil
}

type CT_ConditionalFormats struct {

	// Conditional Format Count
	CountAttr *uint32

	// Conditional Formatting
	ConditionalFormat []*CT_ConditionalFormat
}
type CT_CellProtection struct {

	// Cell Locked
	LockedAttr *bool

	// Hidden Cell
	HiddenAttr *bool
}

func (_ebfbdg ST_CellFormulaType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdccgc := _b.Attr{}
	_cdccgc.Name = name
	switch _ebfbdg {
	case ST_CellFormulaTypeUnset:
		_cdccgc.Value = ""
	case ST_CellFormulaTypeNormal:
		_cdccgc.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_CellFormulaTypeArray:
		_cdccgc.Value = "\u0061\u0072\u0072a\u0079"
	case ST_CellFormulaTypeDataTable:
		_cdccgc.Value = "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case ST_CellFormulaTypeShared:
		_cdccgc.Value = "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return _cdccgc, nil
}
func NewCT_PivotCache() *CT_PivotCache { _dbagg := &CT_PivotCache{}; return _dbagg }

type CT_Col struct {

	// Minimum Column
	MinAttr uint32

	// Maximum Column
	MaxAttr uint32

	// Column Width
	WidthAttr *float64

	// Style
	StyleAttr *uint32

	// Hidden Columns
	HiddenAttr *bool

	// Best Fit Column Width
	BestFitAttr *bool

	// Custom Width
	CustomWidthAttr *bool

	// Show Phonetic Information
	PhoneticAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool
}

// ValidateWithPath validates the CT_CellStyle and its children, prefixing error messages with path
func (_bgga *CT_CellStyle) ValidateWithPath(path string) error {
	if _bgga.ExtLst != nil {
		if _cccd := _bgga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cccd != nil {
			return _cccd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Xf and its children, prefixing error messages with path
func (_gbefe *CT_Xf) ValidateWithPath(path string) error {
	if _gbefe.Alignment != nil {
		if _bgggg := _gbefe.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _bgggg != nil {
			return _bgggg
		}
	}
	if _gbefe.Protection != nil {
		if _dgecg := _gbefe.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _dgecg != nil {
			return _dgecg
		}
	}
	if _gbefe.ExtLst != nil {
		if _gfdab := _gbefe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfdab != nil {
			return _gfdab
		}
	}
	return nil
}
func (_bafba ST_Qualifier) Validate() error { return _bafba.ValidateWithPath("") }

type ST_SheetViewType byte

func (_aagf *CT_DdeLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fegfac := range start.Attr {
		if _fegfac.Name.Local == "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065" {
			_fbbbf, _bdcad := _fegfac.Value, error(nil)
			if _bdcad != nil {
				return _bdcad
			}
			_aagf.DdeServiceAttr = _fbbbf
			continue
		}
		if _fegfac.Name.Local == "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063" {
			_bcfad, _begeb := _fegfac.Value, error(nil)
			if _begeb != nil {
				return _begeb
			}
			_aagf.DdeTopicAttr = _bcfad
			continue
		}
	}
_fbcdf:
	for {
		_caaed, _bggf := d.Token()
		if _bggf != nil {
			return _bggf
		}
		switch _afdef := _caaed.(type) {
		case _b.StartElement:
			switch _afdef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_aagf.DdeItems = NewCT_DdeItems()
				if _aecd := d.DecodeElement(_aagf.DdeItems, &_afdef); _aecd != nil {
					return _aecd
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _afdef.Name)
				if _bbgbc := d.Skip(); _bbgbc != nil {
					return _bbgbc
				}
			}
		case _b.EndElement:
			break _fbcdf
		case _b.CharData:
		}
	}
	return nil
}
func (_afgcaf *CT_MemberProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afgcaf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_afgcaf.NameAttr)})
	}
	if _afgcaf.ShowCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afgcaf.ShowCellAttr))})
	}
	if _afgcaf.ShowTipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0054\u0069\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afgcaf.ShowTipAttr))})
	}
	if _afgcaf.ShowAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_afgcaf.ShowAsCaptionAttr))})
	}
	if _afgcaf.NameLenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ea\u006d\u0065\u004c\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_afgcaf.NameLenAttr)})
	}
	if _afgcaf.PPosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0050\u006f\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_afgcaf.PPosAttr)})
	}
	if _afgcaf.PLenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u004c\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_afgcaf.PLenAttr)})
	}
	if _afgcaf.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_afgcaf.LevelAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _f.Sprintf("\u0025\u0076", _afgcaf.FieldAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaac *CT_CalculatedItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gaac.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gaac.FieldAttr)})
	}
	if _gaac.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _f.Sprintf("\u0025\u0076", *_gaac.FormulaAttr)})
	}
	e.EncodeToken(start)
	_ggfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_gaac.PivotArea, _ggfe)
	if _gaac.ExtLst != nil {
		_caf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gaac.ExtLst, _caf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotAreas() *CT_PivotAreas { _bfdad := &CT_PivotAreas{}; return _bfdad }
func (_gafb *CT_Dimensions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceagf := range start.Attr {
		if _ceagf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbaaa, _ebfef := _e.ParseUint(_ceagf.Value, 10, 32)
			if _ebfef != nil {
				return _ebfef
			}
			_fdbfe := uint32(_gbaaa)
			_gafb.CountAttr = &_fdbfe
			continue
		}
	}
_edfaf:
	for {
		_abgc, _afbc := d.Token()
		if _afbc != nil {
			return _afbc
		}
		switch _eeda := _abgc.(type) {
		case _b.StartElement:
			switch _eeda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_baeda := NewCT_PivotDimension()
				if _cdcb := d.DecodeElement(_baeda, &_eeda); _cdcb != nil {
					return _cdcb
				}
				_gafb.Dimension = append(_gafb.Dimension, _baeda)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073 \u0025\u0076", _eeda.Name)
				if _gagb := d.Skip(); _gagb != nil {
					return _gagb
				}
			}
		case _b.EndElement:
			break _edfaf
		case _b.CharData:
		}
	}
	return nil
}
func (_bfegd ST_CellFormulaType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bfegd.String(), start)
}

// Validate validates the CT_String and its children
func (_fdaee *CT_String) Validate() error {
	return _fdaee.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}
func NewCT_colItems() *CT_colItems { _deabdb := &CT_colItems{}; return _deabdb }
func (_afddfc *ST_DataValidationType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccccf, _afcgcb := d.Token()
	if _afcgcb != nil {
		return _afcgcb
	}
	if _gbaff, _aggef := _ccccf.(_b.EndElement); _aggef && _gbaff.Name == start.Name {
		*_afddfc = 1
		return nil
	}
	if _gbcee, _dfdbg := _ccccf.(_b.CharData); !_dfdbg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccccf)
	} else {
		switch string(_gbcee) {
		case "":
			*_afddfc = 0
		case "\u006e\u006f\u006e\u0065":
			*_afddfc = 1
		case "\u0077\u0068\u006fl\u0065":
			*_afddfc = 2
		case "\u0064e\u0063\u0069\u006d\u0061\u006c":
			*_afddfc = 3
		case "\u006c\u0069\u0073\u0074":
			*_afddfc = 4
		case "\u0064\u0061\u0074\u0065":
			*_afddfc = 5
		case "\u0074\u0069\u006d\u0065":
			*_afddfc = 6
		case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
			*_afddfc = 7
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_afddfc = 8
		}
	}
	_ccccf, _afcgcb = d.Token()
	if _afcgcb != nil {
		return _afcgcb
	}
	if _eeded, _gacbfd := _ccccf.(_b.EndElement); _gacbfd && _eeded.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccccf)
}
func NewCT_RevisionHeader() *CT_RevisionHeader {
	_gefbb := &CT_RevisionHeader{}
	_gefbb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_gefbb.SheetIdMap = NewCT_SheetIdMap()
	return _gefbb
}
func (_ddbaee ST_Objects) String() string {
	switch _ddbaee {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_ecddad *ST_FieldSortType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ecddad = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_ecddad = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_ecddad = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_ecddad = 3
	}
	return nil
}

type CT_CustomSheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Color Id
	ColorIdAttr *uint32

	// Show Page Breaks
	ShowPageBreaksAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColAttr *bool

	// Show Outline Symbols
	OutlineSymbolsAttr *bool

	// Show Zero Values
	ZeroValuesAttr *bool

	// Fit To Page
	FitToPageAttr *bool

	// Print Area Defined
	PrintAreaAttr *bool

	// Filtered List
	FilterAttr *bool

	// Show AutoFitler Drop Down Controls
	ShowAutoFilterAttr *bool

	// Hidden Rows
	HiddenRowsAttr *bool

	// Hidden Columns
	HiddenColumnsAttr *bool

	// Visible State
	StateAttr ST_SheetState

	// Filter
	FilterUniqueAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Show Ruler
	ShowRulerAttr *bool

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Pane Split Information
	Pane *CT_Pane

	// Selection
	Selection *CT_Selection

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Page Margins
	PageMargins *CT_PageMargins

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// AutoFilter Settings
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func (_gfagg *CT_Dxfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdeca := range start.Attr {
		if _cdeca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddgb, _aaaef := _e.ParseUint(_cdeca.Value, 10, 32)
			if _aaaef != nil {
				return _aaaef
			}
			_bdfgc := uint32(_ddgb)
			_gfagg.CountAttr = &_bdfgc
			continue
		}
	}
_bada:
	for {
		_dgaa, _eggde := d.Token()
		if _eggde != nil {
			return _eggde
		}
		switch _gfdcg := _dgaa.(type) {
		case _b.StartElement:
			switch _gfdcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_eacda := NewCT_Dxf()
				if _ecebc := d.DecodeElement(_eacda, &_gfdcg); _ecebc != nil {
					return _ecebc
				}
				_gfagg.Dxf = append(_gfagg.Dxf, _eacda)
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0044\u0078\u0066\u0073\u0020\u0025\u0076", _gfdcg.Name)
				if _dfddg := d.Skip(); _dfddg != nil {
					return _dfddg
				}
			}
		case _b.EndElement:
			break _bada
		case _b.CharData:
		}
	}
	return nil
}
func (_agbag ST_MdxFunctionType) Validate() error { return _agbag.ValidateWithPath("") }
func (_bcbbbc *ST_Visibility) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcbbbc = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_bcbbbc = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_bcbbbc = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_bcbbbc = 3
	}
	return nil
}
func (_eebcc *CT_GroupLevel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _eebcc.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _eebcc.CaptionAttr)})
	if _eebcc.UserAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eebcc.UserAttr))})
	}
	if _eebcc.CustomRollUpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eebcc.CustomRollUpAttr))})
	}
	e.EncodeToken(start)
	if _eebcc.Groups != nil {
		_gbcd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0067\u0072\u006f\u0075\u0070s"}}
		e.EncodeElement(_eebcc.Groups, _gbcd)
	}
	if _eebcc.ExtLst != nil {
		_gfgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eebcc.ExtLst, _gfgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ageegd ST_FormulaExpression) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ageegd.String(), start)
}
func (_cbgfea ST_Pane) Validate() error { return _cbgfea.ValidateWithPath("") }
func (_fdccc ST_MdxFunctionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gccda := _b.Attr{}
	_gccda.Name = name
	switch _fdccc {
	case ST_MdxFunctionTypeUnset:
		_gccda.Value = ""
	case ST_MdxFunctionTypeM:
		_gccda.Value = "\u006d"
	case ST_MdxFunctionTypeV:
		_gccda.Value = "\u0076"
	case ST_MdxFunctionTypeS:
		_gccda.Value = "\u0073"
	case ST_MdxFunctionTypeC:
		_gccda.Value = "\u0063"
	case ST_MdxFunctionTypeR:
		_gccda.Value = "\u0072"
	case ST_MdxFunctionTypeP:
		_gccda.Value = "\u0070"
	case ST_MdxFunctionTypeK:
		_gccda.Value = "\u006b"
	}
	return _gccda, nil
}
func (_fgaddb ST_PaneState) ValidateWithPath(path string) error {
	switch _fgaddb {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgaddb))
	}
	return nil
}

// Validate validates the CT_PrintOptions and its children
func (_bcadef *CT_PrintOptions) Validate() error {
	return _bcadef.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073")
}

// ValidateWithPath validates the CT_VolMain and its children, prefixing error messages with path
func (_cabcc *CT_VolMain) ValidateWithPath(path string) error {
	for _ebfdb, _facfd := range _cabcc.Tp {
		if _agcad := _facfd.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0054\u0070\u005b\u0025\u0064]", path, _ebfdb)); _agcad != nil {
			return _agcad
		}
	}
	return nil
}
func (_eadcc *CT_Members) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfadc := range start.Attr {
		if _gfadc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fcdb, _fcgee := _e.ParseUint(_gfadc.Value, 10, 32)
			if _fcgee != nil {
				return _fcgee
			}
			_fbfab := uint32(_fcdb)
			_eadcc.CountAttr = &_fbfab
			continue
		}
		if _gfadc.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_ecbff, _cgfaa := _e.ParseUint(_gfadc.Value, 10, 32)
			if _cgfaa != nil {
				return _cgfaa
			}
			_edfgef := uint32(_ecbff)
			_eadcc.LevelAttr = &_edfgef
			continue
		}
	}
_gfged:
	for {
		_cacd, _cbadd := d.Token()
		if _cbadd != nil {
			return _cbadd
		}
		switch _fcfd := _cacd.(type) {
		case _b.StartElement:
			switch _fcfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}:
				_gdedg := NewCT_Member()
				if _fffgd := d.DecodeElement(_gdedg, &_fcfd); _fffgd != nil {
					return _fffgd
				}
				_eadcc.Member = append(_eadcc.Member, _gdedg)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _fcfd.Name)
				if _cfca := d.Skip(); _cfca != nil {
					return _cfca
				}
			}
		case _b.EndElement:
			break _gfged
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Table and its children
func (_ebgbcb *CT_Table) Validate() error {
	return _ebgbcb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}
func (_efdae ST_Objects) Validate() error { return _efdae.ValidateWithPath("") }
func (_ccgbc ST_TargetScreenSize) String() string {
	switch _ccgbc {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}
func (_ddcfdg *CT_ExternalSheetDataSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_edebf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	for _, _geaca := range _ddcfdg.SheetData {
		e.EncodeElement(_geaca, _edebf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gagc *CT_ColFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gagc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gagc.CountAttr)})
	}
	e.EncodeToken(start)
	_cgdac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _beec := range _gagc.Field {
		e.EncodeElement(_beec, _cgdac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotAreaReference and its children, prefixing error messages with path
func (_cggdc *CT_PivotAreaReference) ValidateWithPath(path string) error {
	for _aafegd, _badadc := range _cggdc.X {
		if _bdagc := _badadc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _aafegd)); _bdagc != nil {
			return _bdagc
		}
	}
	if _cggdc.ExtLst != nil {
		if _cbagb := _cggdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbagb != nil {
			return _cbagb
		}
	}
	return nil
}
func (_fggaa *CT_Comment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _fggaa.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _fggaa.AuthorIdAttr)})
	if _fggaa.GuidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fggaa.GuidAttr)})
	}
	if _fggaa.ShapeIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fggaa.ShapeIdAttr)})
	}
	e.EncodeToken(start)
	_ebec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074"}}
	e.EncodeElement(_fggaa.Text, _ebec)
	if _fggaa.CommentPr != nil {
		_gcde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"}}
		e.EncodeElement(_fggaa.CommentPr, _gcde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Break struct {

	// Id
	IdAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Manual Page Break
	ManAttr *bool

	// Pivot-Created Page Break
	PtAttr *bool
}

func (_egcbe *CT_PivotCaches) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_daffd:
	for {
		_gfddc, _fecdg := d.Token()
		if _fecdg != nil {
			return _fecdg
		}
		switch _bfdfe := _gfddc.(type) {
		case _b.StartElement:
			switch _bfdfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}:
				_cbaec := NewCT_PivotCache()
				if _ebgab := d.DecodeElement(_cbaec, &_bfdfe); _ebgab != nil {
					return _ebgab
				}
				_egcbe.PivotCache = append(_egcbe.PivotCache, _cbaec)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061c\u0068e\u0073\u0020\u0025\u0076", _bfdfe.Name)
				if _dcdec := d.Skip(); _dcdec != nil {
					return _dcdec
				}
			}
		case _b.EndElement:
			break _daffd
		case _b.CharData:
		}
	}
	return nil
}
func (_agecfg ST_Qualifier) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_agecfg.String(), start)
}
func (_cefbb ST_CfType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdgbg := _b.Attr{}
	_cdgbg.Name = name
	switch _cefbb {
	case ST_CfTypeUnset:
		_cdgbg.Value = ""
	case ST_CfTypeExpression:
		_cdgbg.Value = "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case ST_CfTypeCellIs:
		_cdgbg.Value = "\u0063\u0065\u006c\u006c\u0049\u0073"
	case ST_CfTypeColorScale:
		_cdgbg.Value = "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case ST_CfTypeDataBar:
		_cdgbg.Value = "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case ST_CfTypeIconSet:
		_cdgbg.Value = "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case ST_CfTypeTop10:
		_cdgbg.Value = "\u0074\u006f\u00701\u0030"
	case ST_CfTypeUniqueValues:
		_cdgbg.Value = "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeDuplicateValues:
		_cdgbg.Value = "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeContainsText:
		_cdgbg.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeNotContainsText:
		_cdgbg.Value = "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeBeginsWith:
		_cdgbg.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeEndsWith:
		_cdgbg.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeContainsBlanks:
		_cdgbg.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeNotContainsBlanks:
		_cdgbg.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeContainsErrors:
		_cdgbg.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeNotContainsErrors:
		_cdgbg.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeTimePeriod:
		_cdgbg.Value = "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_CfTypeAboveAverage:
		_cdgbg.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return _cdgbg, nil
}
func (_fdcac ST_BorderStyle) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfffgf := _b.Attr{}
	_bfffgf.Name = name
	switch _fdcac {
	case ST_BorderStyleUnset:
		_bfffgf.Value = ""
	case ST_BorderStyleNone:
		_bfffgf.Value = "\u006e\u006f\u006e\u0065"
	case ST_BorderStyleThin:
		_bfffgf.Value = "\u0074\u0068\u0069\u006e"
	case ST_BorderStyleMedium:
		_bfffgf.Value = "\u006d\u0065\u0064\u0069\u0075\u006d"
	case ST_BorderStyleDashed:
		_bfffgf.Value = "\u0064\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDotted:
		_bfffgf.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_BorderStyleThick:
		_bfffgf.Value = "\u0074\u0068\u0069c\u006b"
	case ST_BorderStyleDouble:
		_bfffgf.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_BorderStyleHair:
		_bfffgf.Value = "\u0068\u0061\u0069\u0072"
	case ST_BorderStyleMediumDashed:
		_bfffgf.Value = "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDashDot:
		_bfffgf.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDot:
		_bfffgf.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleDashDotDot:
		_bfffgf.Value = "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDotDot:
		_bfffgf.Value = "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleSlantDashDot:
		_bfffgf.Value = "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return _bfffgf, nil
}
func (_egbdc *CT_CustomSheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edcbc:
	for {
		_dgafa, _edca := d.Token()
		if _edca != nil {
			return _edca
		}
		switch _aabg := _dgafa.(type) {
		case _b.StartElement:
			switch _aabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_cagg := NewCT_CustomSheetView()
				if _aabb := d.DecodeElement(_cagg, &_aabg); _aabb != nil {
					return _aabb
				}
				_egbdc.CustomSheetView = append(_egbdc.CustomSheetView, _cagg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053he\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _aabg.Name)
				if _gdedde := d.Skip(); _gdedde != nil {
					return _gdedde
				}
			}
		case _b.EndElement:
			break _edcbc
		case _b.CharData:
		}
	}
	return nil
}
func (_dabdc *CT_Cols) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfdcf:
	for {
		_fffg, _ddaf := d.Token()
		if _ddaf != nil {
			return _ddaf
		}
		switch _fadb := _fffg.(type) {
		case _b.StartElement:
			switch _fadb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}:
				_aabc := NewCT_Col()
				if _agecd := d.DecodeElement(_aabc, &_fadb); _agecd != nil {
					return _agecd
				}
				_dabdc.Col = append(_dabdc.Col, _aabc)
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0073\u0020\u0025\u0076", _fadb.Name)
				if _gecd := d.Skip(); _gecd != nil {
					return _gecd
				}
			}
		case _b.EndElement:
			break _gfdcf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_XStringElement() *CT_XStringElement { _agdfab := &CT_XStringElement{}; return _agdfab }
func (_cgedeg ST_TableStyleType) ValidateWithPath(path string) error {
	switch _cgedeg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgedeg))
	}
	return nil
}
func (_efdcf *CT_RangeSets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgabea := range start.Attr {
		if _bgabea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bedge, _cacea := _e.ParseUint(_bgabea.Value, 10, 32)
			if _cacea != nil {
				return _cacea
			}
			_gggea := uint32(_bedge)
			_efdcf.CountAttr = &_gggea
			continue
		}
	}
_gcaga:
	for {
		_gbcge, _gfedb := d.Token()
		if _gfedb != nil {
			return _gfedb
		}
		switch _agbac := _gbcge.(type) {
		case _b.StartElement:
			switch _agbac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}:
				_gcafed := NewCT_RangeSet()
				if _cgafff := d.DecodeElement(_gcafed, &_agbac); _cgafff != nil {
					return _cgafff
				}
				_efdcf.RangeSet = append(_efdcf.RangeSet, _gcafed)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0061\u006eg\u0065\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _agbac.Name)
				if _ebdda := d.Skip(); _ebdda != nil {
					return _ebdda
				}
			}
		case _b.EndElement:
			break _gcaga
		case _b.CharData:
		}
	}
	return nil
}

type ST_GroupBy byte

func (_facbge *CT_Scenario) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _facbge.NameAttr)})
	if _facbge.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_facbge.LockedAttr))})
	}
	if _facbge.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_facbge.HiddenAttr))})
	}
	if _facbge.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_facbge.CountAttr)})
	}
	if _facbge.UserAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_facbge.UserAttr)})
	}
	if _facbge.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_facbge.CommentAttr)})
	}
	e.EncodeToken(start)
	_fabcbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}}
	for _, _fbffe := range _facbge.InputCells {
		e.EncodeElement(_fbffe, _fabcbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetProtection and its children
func (_fcbcc *CT_SheetProtection) Validate() error {
	return _fcbcc.ValidateWithPath("\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e")
}

type CT_PivotHierarchy struct {

	// Outline New Levels
	OutlineAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// New Levels Subtotals At Top
	SubtotalTopAttr *bool

	// Show In Field List
	ShowInFieldListAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Drag to Page
	DragToPageAttr *bool

	// Drag To Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Hierarchy Caption
	CaptionAttr *string

	// OLAP Member Properties
	Mps *CT_MemberProperties

	// Members
	Members []*CT_Members

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_eff *CT_BookViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dgb:
	for {
		_dde, _debc := d.Token()
		if _debc != nil {
			return _debc
		}
		switch _dgg := _dde.(type) {
		case _b.StartElement:
			switch _dgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}:
				_abg := NewCT_BookView()
				if _adgb := d.DecodeElement(_abg, &_dgg); _adgb != nil {
					return _adgb
				}
				_eff.WorkbookView = append(_eff.WorkbookView, _abg)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u006fk\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _dgg.Name)
				if _fcg := d.Skip(); _fcg != nil {
					return _fcg
				}
			}
		case _b.EndElement:
			break _dgb
		case _b.CharData:
		}
	}
	return nil
}
func (_ccedg *CT_PageItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edfdb := range start.Attr {
		if _edfdb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_acdcf, _bcefc := _edfdb.Value, error(nil)
			if _bcefc != nil {
				return _bcefc
			}
			_ccedg.NameAttr = _acdcf
			continue
		}
	}
	for {
		_dgfc, _afbdc := d.Token()
		if _afbdc != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _afbdc)
		}
		if _afddd, _baabd := _dgfc.(_b.EndElement); _baabd && _afddd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcaba *CT_GroupMembers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcaba.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dcaba.CountAttr)})
	}
	e.EncodeToken(start)
	_cfbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072"}}
	for _, _fcedf := range _dcaba.GroupMember {
		e.EncodeElement(_fcedf, _cfbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acced *ST_Type) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acced = 0
	case "\u006e\u006f\u006e\u0065":
		*_acced = 1
	case "\u0061\u006c\u006c":
		*_acced = 2
	case "\u0072\u006f\u0077":
		*_acced = 3
	case "\u0063\u006f\u006c\u0075\u006d\u006e":
		*_acced = 4
	}
	return nil
}

type CT_ProtectedRanges struct {

	// Protected Range
	ProtectedRange []*CT_ProtectedRange
}

func (_eace *CT_MeasureGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdfdc := range start.Attr {
		if _cdfdc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fggcb, _gefdd := _cdfdc.Value, error(nil)
			if _gefdd != nil {
				return _gefdd
			}
			_eace.NameAttr = _fggcb
			continue
		}
		if _cdfdc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_gbddc, _eegfgb := _cdfdc.Value, error(nil)
			if _eegfgb != nil {
				return _eegfgb
			}
			_eace.CaptionAttr = _gbddc
			continue
		}
	}
	for {
		_edbee, _cadgf := d.Token()
		if _cadgf != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072e\u0047\u0072\u006fu\u0070:\u0020\u0025\u0073", _cadgf)
		}
		if _agbd, _cagcab := _edbee.(_b.EndElement); _cagcab && _agbd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DataFields and its children
func (_bbcbd *CT_DataFields) Validate() error {
	return _bbcbd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_ColHierarchiesUsage and its children
func (_bfbe *CT_ColHierarchiesUsage) Validate() error {
	return _bfbe.ValidateWithPath("\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

type CT_CfRule struct {

	// Type
	TypeAttr ST_CfType

	// Differential Formatting Id
	DxfIdAttr *uint32

	// Priority
	PriorityAttr int32

	// Stop If True
	StopIfTrueAttr *bool

	// Above Or Below Average
	AboveAverageAttr *bool

	// Top 10 Percent
	PercentAttr *bool

	// Bottom N
	BottomAttr *bool

	// Operator
	OperatorAttr ST_ConditionalFormattingOperator

	// Text
	TextAttr *string

	// Time Period
	TimePeriodAttr ST_TimePeriod

	// Rank
	RankAttr *uint32

	// StdDev
	StdDevAttr *int32

	// Equal Average
	EqualAverageAttr *bool

	// Formula
	Formula []string

	// Color Scale
	ColorScale *CT_ColorScale

	// Data Bar
	DataBar *CT_DataBar

	// Icon Set
	IconSet *CT_IconSet
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_I and its children
func (_cfeae *CT_I) Validate() error   { return _cfeae.ValidateWithPath("\u0043\u0054\u005f\u0049") }
func NewCT_NumFmts() *CT_NumFmts       { _cccce := &CT_NumFmts{}; return _cccce }
func NewCT_CacheField() *CT_CacheField { _gbe := &CT_CacheField{}; return _gbe }
func NewCT_Pages() *CT_Pages           { _fbdd := &CT_Pages{}; return _fbdd }

type ST_ConditionalFormattingOperator byte

// Validate validates the CT_FunctionGroup and its children
func (_baffef *CT_FunctionGroup) Validate() error {
	return _baffef.ValidateWithPath("\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070")
}

// Validate validates the CT_IconSet and its children
func (_bfcbba *CT_IconSet) Validate() error {
	return _bfcbba.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074")
}
func (_abdee *CT_Index) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abefcc := range start.Attr {
		if _abefcc.Name.Local == "\u0076" {
			_fedac, _bceed := _e.ParseUint(_abefcc.Value, 10, 32)
			if _bceed != nil {
				return _bceed
			}
			_abdee.VAttr = uint32(_fedac)
			continue
		}
	}
	for {
		_egdaa, _bdadb := d.Token()
		if _bdadb != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0064\u0065\u0078: \u0025\u0073", _bdadb)
		}
		if _ffbfg, _bfgfea := _egdaa.(_b.EndElement); _bfgfea && _ffbfg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CustomSheetView() *CT_CustomSheetView {
	_caec := &CT_CustomSheetView{}
	_caec.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _caec
}

type CT_MeasureDimensionMaps struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	Map []*CT_MeasureDimensionMap
}

// Validate validates the ExternalLink and its children
func (_gbbge *ExternalLink) Validate() error {
	return _gbbge.ValidateWithPath("\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}
func NewCT_SheetFormatPr() *CT_SheetFormatPr { _gaegf := &CT_SheetFormatPr{}; return _gaegf }

// Validate validates the CT_RevisionInsertSheet and its children
func (_bdbbcb *CT_RevisionInsertSheet) Validate() error {
	return _bdbbcb.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074")
}
func NewCT_ExtensionList() *CT_ExtensionList { _egfdf := &CT_ExtensionList{}; return _egfdf }
func NewCT_ObjectPr() *CT_ObjectPr {
	_bcagd := &CT_ObjectPr{}
	_bcagd.Anchor = NewCT_ObjectAnchor()
	return _bcagd
}
func (_bgcdd ST_HtmlFmt) String() string {
	switch _bgcdd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0072\u0074\u0066"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

type CT_PrintOptions struct {

	// Horizontal Centered
	HorizontalCenteredAttr *bool

	// Vertical Centered
	VerticalCenteredAttr *bool

	// Print Headings
	HeadingsAttr *bool

	// Print Grid Lines
	GridLinesAttr *bool

	// Grid Lines Set
	GridLinesSetAttr *bool
}

func (_abegf *CT_PageField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0076", _abegf.FldAttr)})
	if _abegf.ItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_abegf.ItemAttr)})
	}
	if _abegf.HierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_abegf.HierAttr)})
	}
	if _abegf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_abegf.NameAttr)})
	}
	if _abegf.CapAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_abegf.CapAttr)})
	}
	e.EncodeToken(start)
	if _abegf.ExtLst != nil {
		_fageb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abegf.ExtLst, _fageb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Cfvo struct {

	// Type
	TypeAttr ST_CfvoType

	// Value
	ValAttr *string

	// Greater Than Or Equal
	GteAttr *bool
	ExtLst  *CT_ExtensionList
}

func (_fegfa *CT_Col) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbdf := range start.Attr {
		if _cbdf.Name.Local == "\u006d\u0069\u006e" {
			_fbec, _bbfg := _e.ParseUint(_cbdf.Value, 10, 32)
			if _bbfg != nil {
				return _bbfg
			}
			_fegfa.MinAttr = uint32(_fbec)
			continue
		}
		if _cbdf.Name.Local == "\u006d\u0061\u0078" {
			_aeag, _caga := _e.ParseUint(_cbdf.Value, 10, 32)
			if _caga != nil {
				return _caga
			}
			_fegfa.MaxAttr = uint32(_aeag)
			continue
		}
		if _cbdf.Name.Local == "\u0077\u0069\u0064t\u0068" {
			_abag, _ddea := _e.ParseFloat(_cbdf.Value, 64)
			if _ddea != nil {
				return _ddea
			}
			_fegfa.WidthAttr = &_abag
			continue
		}
		if _cbdf.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_fdfb, _gcfc := _e.ParseUint(_cbdf.Value, 10, 32)
			if _gcfc != nil {
				return _gcfc
			}
			_fbba := uint32(_fdfb)
			_fegfa.StyleAttr = &_fbba
			continue
		}
		if _cbdf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gddb, _gcbe := _e.ParseBool(_cbdf.Value)
			if _gcbe != nil {
				return _gcbe
			}
			_fegfa.HiddenAttr = &_gddb
			continue
		}
		if _cbdf.Name.Local == "\u0062e\u0073\u0074\u0046\u0069\u0074" {
			_cgce, _fcfe := _e.ParseBool(_cbdf.Value)
			if _fcfe != nil {
				return _fcfe
			}
			_fegfa.BestFitAttr = &_cgce
			continue
		}
		if _cbdf.Name.Local == "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068" {
			_cecg, _ffcb := _e.ParseBool(_cbdf.Value)
			if _ffcb != nil {
				return _ffcb
			}
			_fegfa.CustomWidthAttr = &_cecg
			continue
		}
		if _cbdf.Name.Local == "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063" {
			_facf, _fcbe := _e.ParseBool(_cbdf.Value)
			if _fcbe != nil {
				return _fcbe
			}
			_fegfa.PhoneticAttr = &_facf
			continue
		}
		if _cbdf.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_dcec, _edcb := _e.ParseUint(_cbdf.Value, 10, 8)
			if _edcb != nil {
				return _edcb
			}
			_ggge := uint8(_dcec)
			_fegfa.OutlineLevelAttr = &_ggge
			continue
		}
		if _cbdf.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_feca, _gbbf := _e.ParseBool(_cbdf.Value)
			if _gbbf != nil {
				return _gbbf
			}
			_fegfa.CollapsedAttr = &_feca
			continue
		}
	}
	for {
		_cbegb, _dfcba := d.Token()
		if _dfcba != nil {
			return _f.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0043o\u006c\u003a\u0020\u0025\u0073", _dfcba)
		}
		if _ecafa, _dgdf := _cbegb.(_b.EndElement); _dgdf && _ecafa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dffgfa ST_ShowDataAs) String() string {
	switch _dffgfa {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case 5:
		return "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case 6:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case 7:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case 8:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case 9:
		return "\u0069\u006e\u0064e\u0078"
	}
	return ""
}
func (_bcdbbc *ST_VerticalAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcdbbc = 0
	case "\u0074\u006f\u0070":
		*_bcdbbc = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_bcdbbc = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_bcdbbc = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_bcdbbc = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_bcdbbc = 5
	}
	return nil
}

type CT_FilterColumn struct {

	// Filter Column Data
	ColIdAttr uint32

	// Hidden AutoFilter Button
	HiddenButtonAttr *bool

	// Show Filter Button
	ShowButtonAttr *bool

	// Filter Criteria
	Filters *CT_Filters

	// Top 10
	Top10 *CT_Top10

	// Custom Filters
	CustomFilters *CT_CustomFilters

	// Dynamic Filter
	DynamicFilter *CT_DynamicFilter

	// Color Filter Criteria
	ColorFilter *CT_ColorFilter

	// Icon Filter
	IconFilter *CT_IconFilter
	ExtLst     *CT_ExtensionList
}

func (_defb *CT_Chartsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _defb.SheetPr != nil {
		_ecdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_defb.SheetPr, _ecdb)
	}
	_gebag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
	e.EncodeElement(_defb.SheetViews, _gebag)
	if _defb.SheetProtection != nil {
		_dbec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_defb.SheetProtection, _dbec)
	}
	if _defb.CustomSheetViews != nil {
		_dfgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_defb.CustomSheetViews, _dfgg)
	}
	if _defb.PageMargins != nil {
		_fgbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_defb.PageMargins, _fgbe)
	}
	if _defb.PageSetup != nil {
		_dbaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_defb.PageSetup, _dbaa)
	}
	if _defb.HeaderFooter != nil {
		_fgeac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_defb.HeaderFooter, _fgeac)
	}
	_ddad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
	e.EncodeElement(_defb.Drawing, _ddad)
	if _defb.LegacyDrawing != nil {
		_bebe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_defb.LegacyDrawing, _bebe)
	}
	if _defb.LegacyDrawingHF != nil {
		_gdbgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_defb.LegacyDrawingHF, _gdbgc)
	}
	if _defb.DrawingHF != nil {
		_fgee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_defb.DrawingHF, _fgee)
	}
	if _defb.Picture != nil {
		_ddbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_defb.Picture, _ddbg)
	}
	if _defb.WebPublishItems != nil {
		_edfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_defb.WebPublishItems, _edfa)
	}
	if _defb.ExtLst != nil {
		_bedd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_defb.ExtLst, _bedd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eafffg ST_FieldSortType) Validate() error { return _eafffg.ValidateWithPath("") }

// Validate validates the CT_CustomSheetView and its children
func (_fedg *CT_CustomSheetView) Validate() error {
	return _fedg.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077")
}

type CT_ExternalReferences struct {

	// External Reference
	ExternalReference []*CT_ExternalReference
}
type CT_InputCells struct {

	// Reference
	RAttr string

	// Deleted
	DeletedAttr *bool

	// Undone
	UndoneAttr *bool

	// Value
	ValAttr string

	// Number Format Id
	NumFmtIdAttr *uint32
}

func (_efcbdf *ST_DataValidationImeMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cggfb, _agdge := d.Token()
	if _agdge != nil {
		return _agdge
	}
	if _gggbbd, _edbca := _cggfb.(_b.EndElement); _edbca && _gggbbd.Name == start.Name {
		*_efcbdf = 1
		return nil
	}
	if _dfece, _afbef := _cggfb.(_b.CharData); !_afbef {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cggfb)
	} else {
		switch string(_dfece) {
		case "":
			*_efcbdf = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_efcbdf = 1
		case "\u006f\u0066\u0066":
			*_efcbdf = 2
		case "\u006f\u006e":
			*_efcbdf = 3
		case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
			*_efcbdf = 4
		case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_efcbdf = 5
		case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_efcbdf = 6
		case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_efcbdf = 7
		case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
			*_efcbdf = 8
		case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
			*_efcbdf = 9
		case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
			*_efcbdf = 10
		case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
			*_efcbdf = 11
		}
	}
	_cggfb, _agdge = d.Token()
	if _agdge != nil {
		return _agdge
	}
	if _bbfgff, _eecddg := _cggfb.(_b.EndElement); _eecddg && _bbfgff.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cggfb)
}
func (_bafad ST_DynamicFilterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bbbff := _b.Attr{}
	_bbbff.Name = name
	switch _bafad {
	case ST_DynamicFilterTypeUnset:
		_bbbff.Value = ""
	case ST_DynamicFilterTypeNull:
		_bbbff.Value = "\u006e\u0075\u006c\u006c"
	case ST_DynamicFilterTypeAboveAverage:
		_bbbff.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeBelowAverage:
		_bbbff.Value = "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeTomorrow:
		_bbbff.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_DynamicFilterTypeToday:
		_bbbff.Value = "\u0074\u006f\u0064a\u0079"
	case ST_DynamicFilterTypeYesterday:
		_bbbff.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_DynamicFilterTypeNextWeek:
		_bbbff.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeThisWeek:
		_bbbff.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeLastWeek:
		_bbbff.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeNextMonth:
		_bbbff.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeThisMonth:
		_bbbff.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeLastMonth:
		_bbbff.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeNextQuarter:
		_bbbff.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeThisQuarter:
		_bbbff.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeLastQuarter:
		_bbbff.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeNextYear:
		_bbbff.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeThisYear:
		_bbbff.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeLastYear:
		_bbbff.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeYearToDate:
		_bbbff.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_DynamicFilterTypeQ1:
		_bbbff.Value = "\u0051\u0031"
	case ST_DynamicFilterTypeQ2:
		_bbbff.Value = "\u0051\u0032"
	case ST_DynamicFilterTypeQ3:
		_bbbff.Value = "\u0051\u0033"
	case ST_DynamicFilterTypeQ4:
		_bbbff.Value = "\u0051\u0034"
	case ST_DynamicFilterTypeM1:
		_bbbff.Value = "\u004d\u0031"
	case ST_DynamicFilterTypeM2:
		_bbbff.Value = "\u004d\u0032"
	case ST_DynamicFilterTypeM3:
		_bbbff.Value = "\u004d\u0033"
	case ST_DynamicFilterTypeM4:
		_bbbff.Value = "\u004d\u0034"
	case ST_DynamicFilterTypeM5:
		_bbbff.Value = "\u004d\u0035"
	case ST_DynamicFilterTypeM6:
		_bbbff.Value = "\u004d\u0036"
	case ST_DynamicFilterTypeM7:
		_bbbff.Value = "\u004d\u0037"
	case ST_DynamicFilterTypeM8:
		_bbbff.Value = "\u004d\u0038"
	case ST_DynamicFilterTypeM9:
		_bbbff.Value = "\u004d\u0039"
	case ST_DynamicFilterTypeM10:
		_bbbff.Value = "\u004d\u0031\u0030"
	case ST_DynamicFilterTypeM11:
		_bbbff.Value = "\u004d\u0031\u0031"
	case ST_DynamicFilterTypeM12:
		_bbbff.Value = "\u004d\u0031\u0032"
	}
	return _bbbff, nil
}
func NewCT_MdxMemeberProp() *CT_MdxMemeberProp { _efefb := &CT_MdxMemeberProp{}; return _efefb }

// ValidateWithPath validates the CT_Parameters and its children, prefixing error messages with path
func (_fgdfe *CT_Parameters) ValidateWithPath(path string) error {
	for _decdg, _gdcdc := range _fgdfe.Parameter {
		if _ggdbf := _gdcdc.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0050\u0061\u0072a\u006d\u0065\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _decdg)); _ggdbf != nil {
			return _ggdbf
		}
	}
	return nil
}

// Validate validates the CT_RevisionRowColumn and its children
func (_debeda *CT_RevisionRowColumn) Validate() error {
	return _debeda.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e")
}
func (_bdeeg *Worksheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003aw\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074"
	return _bdeeg.CT_Worksheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_ecgeg *CT_OleObject) ValidateWithPath(path string) error {
	if _cdagc := _ecgeg.DvAspectAttr.ValidateWithPath(path + "\u002f\u0044\u0076\u0041\u0073\u0070\u0065\u0063\u0074\u0041\u0074\u0074\u0072"); _cdagc != nil {
		return _cdagc
	}
	if _gbdddc := _ecgeg.OleUpdateAttr.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0055\u0070\u0064\u0061\u0074e\u0041\u0074\u0074\u0072"); _gbdddc != nil {
		return _gbdddc
	}
	if _ecgeg.ObjectPr != nil {
		if _geabg := _ecgeg.ObjectPr.ValidateWithPath(path + "\u002fO\u0062\u006a\u0065\u0063\u0074\u0050r"); _geabg != nil {
			return _geabg
		}
	}
	return nil
}
func (_agbbcg *ST_TimePeriod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_agbbcg = 0
	case "\u0074\u006f\u0064a\u0079":
		*_agbbcg = 1
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_agbbcg = 2
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_agbbcg = 3
	case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
		*_agbbcg = 4
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_agbbcg = 5
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_agbbcg = 6
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_agbbcg = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_agbbcg = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_agbbcg = 9
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_agbbcg = 10
	}
	return nil
}
func (_dcaabe ST_FormatAction) Validate() error { return _dcaabe.ValidateWithPath("") }
func NewCT_CellStyleXfs() *CT_CellStyleXfs      { _bcad := &CT_CellStyleXfs{}; return _bcad }
func (_dfdba ST_MdxFunctionType) String() string {
	switch _dfdba {
	case 0:
		return ""
	case 1:
		return "\u006d"
	case 2:
		return "\u0076"
	case 3:
		return "\u0073"
	case 4:
		return "\u0063"
	case 5:
		return "\u0072"
	case 6:
		return "\u0070"
	case 7:
		return "\u006b"
	}
	return ""
}
func (_cggfe *CT_MetadataType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgffa := range start.Attr {
		if _bgffa.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073" {
			_bdgdc, _gabgd := _e.ParseBool(_bgffa.Value)
			if _gabgd != nil {
				return _gabgd
			}
			_cggfe.PasteColWidthsAttr = &_bdgdc
			continue
		}
		if _bgffa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_acdfbg, _dcffb := _bgffa.Value, error(nil)
			if _dcffb != nil {
				return _dcffb
			}
			_cggfe.NameAttr = _acdfbg
			continue
		}
		if _bgffa.Name.Local == "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_abbaf, _aggaae := _e.ParseBool(_bgffa.Value)
			if _aggaae != nil {
				return _aggaae
			}
			_cggfe.PasteNumberFormatsAttr = &_abbaf
			continue
		}
		if _bgffa.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077" {
			_adbdd, _dddcb := _e.ParseBool(_bgffa.Value)
			if _dddcb != nil {
				return _dddcb
			}
			_cggfe.GhostRowAttr = &_adbdd
			continue
		}
		if _bgffa.Name.Local == "\u006d\u0065\u0072g\u0065" {
			_fgdgd, _aedf := _e.ParseBool(_bgffa.Value)
			if _aedf != nil {
				return _aedf
			}
			_cggfe.MergeAttr = &_fgdgd
			continue
		}
		if _bgffa.Name.Local == "\u0065\u0064\u0069\u0074" {
			_dagdef, _ecbee := _e.ParseBool(_bgffa.Value)
			if _ecbee != nil {
				return _ecbee
			}
			_cggfe.EditAttr = &_dagdef
			continue
		}
		if _bgffa.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074" {
			_befea, _egfab := _e.ParseBool(_bgffa.Value)
			if _egfab != nil {
				return _egfab
			}
			_cggfe.SplitFirstAttr = &_befea
			continue
		}
		if _bgffa.Name.Local == "\u0063\u006f\u0070\u0079" {
			_ggbgbf, _cgcba := _e.ParseBool(_bgffa.Value)
			if _cgcba != nil {
				return _cgcba
			}
			_cggfe.CopyAttr = &_ggbgbf
			continue
		}
		if _bgffa.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c" {
			_ebfbf, _dceab := _e.ParseBool(_bgffa.Value)
			if _dceab != nil {
				return _dceab
			}
			_cggfe.SplitAllAttr = &_ebfbf
			continue
		}
		if _bgffa.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_fdbfd, _bbfce := _e.ParseBool(_bgffa.Value)
			if _bbfce != nil {
				return _bbfce
			}
			_cggfe.PasteFormulasAttr = &_fdbfd
			continue
		}
		if _bgffa.Name.Local == "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061" {
			_bfeccf, _eefga := _e.ParseBool(_bgffa.Value)
			if _eefga != nil {
				return _eefga
			}
			_cggfe.CellMetaAttr = &_bfeccf
			continue
		}
		if _bgffa.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c" {
			_addg, _fccce := _e.ParseBool(_bgffa.Value)
			if _fccce != nil {
				return _fccce
			}
			_cggfe.ClearAllAttr = &_addg
			continue
		}
		if _bgffa.Name.Local == "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_degfae, _aaecg := _e.ParseUint(_bgffa.Value, 10, 32)
			if _aaecg != nil {
				return _aaecg
			}
			_cggfe.MinSupportedVersionAttr = uint32(_degfae)
			continue
		}
		if _bgffa.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074" {
			_dgbfc, _gdaac := _e.ParseBool(_bgffa.Value)
			if _gdaac != nil {
				return _gdaac
			}
			_cggfe.AdjustAttr = &_dgbfc
			continue
		}
		if _bgffa.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_ceeeb, _ecee := _e.ParseBool(_bgffa.Value)
			if _ecee != nil {
				return _ecee
			}
			_cggfe.ClearContentsAttr = &_ceeeb
			continue
		}
		if _bgffa.Name.Local == "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073" {
			_bdfba, _efbaa := _e.ParseBool(_bgffa.Value)
			if _efbaa != nil {
				return _efbaa
			}
			_cggfe.PasteValuesAttr = &_bdfba
			continue
		}
		if _bgffa.Name.Local == "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074" {
			_gdcab, _baafa := _e.ParseBool(_bgffa.Value)
			if _baafa != nil {
				return _baafa
			}
			_cggfe.RowColShiftAttr = &_gdcab
			continue
		}
		if _bgffa.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_dbga, _fafff := _e.ParseBool(_bgffa.Value)
			if _fafff != nil {
				return _fafff
			}
			_cggfe.PasteCommentsAttr = &_dbga
			continue
		}
		if _bgffa.Name.Local == "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_agcabb, _bdabgc := _e.ParseBool(_bgffa.Value)
			if _bdabgc != nil {
				return _bdabgc
			}
			_cggfe.ClearFormatsAttr = &_agcabb
			continue
		}
		if _bgffa.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c" {
			_fcgcg, _egebb := _e.ParseBool(_bgffa.Value)
			if _egebb != nil {
				return _egebb
			}
			_cggfe.GhostColAttr = &_fcgcg
			continue
		}
		if _bgffa.Name.Local == "\u0063\u006f\u0065\u0072\u0063\u0065" {
			_gccbb, _cabab := _e.ParseBool(_bgffa.Value)
			if _cabab != nil {
				return _cabab
			}
			_cggfe.CoerceAttr = &_gccbb
			continue
		}
		if _bgffa.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_bbbc, _aeacb := _e.ParseBool(_bgffa.Value)
			if _aeacb != nil {
				return _aeacb
			}
			_cggfe.ClearCommentsAttr = &_bbbc
			continue
		}
		if _bgffa.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c" {
			_ggafa, _gbcga := _e.ParseBool(_bgffa.Value)
			if _gbcga != nil {
				return _gbcga
			}
			_cggfe.PasteAllAttr = &_ggafa
			continue
		}
		if _bgffa.Name.Local == "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073" {
			_gfefd, _gdcaa := _e.ParseBool(_bgffa.Value)
			if _gdcaa != nil {
				return _gdcaa
			}
			_cggfe.PasteBordersAttr = &_gfefd
			continue
		}
		if _bgffa.Name.Local == "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_edcbb, _bbbed := _e.ParseBool(_bgffa.Value)
			if _bbbed != nil {
				return _bbbed
			}
			_cggfe.PasteFormatsAttr = &_edcbb
			continue
		}
		if _bgffa.Name.Local == "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e" {
			_fffeb, _fcdgd := _e.ParseBool(_bgffa.Value)
			if _fcdgd != nil {
				return _fcdgd
			}
			_cggfe.PasteDataValidationAttr = &_fffeb
			continue
		}
		if _bgffa.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065" {
			_fgged, _cgfe := _e.ParseBool(_bgffa.Value)
			if _cgfe != nil {
				return _cgfe
			}
			_cggfe.DeleteAttr = &_fgged
			continue
		}
		if _bgffa.Name.Local == "\u0061\u0073\u0073\u0069\u0067\u006e" {
			_ddcge, _dcede := _e.ParseBool(_bgffa.Value)
			if _dcede != nil {
				return _dcede
			}
			_cggfe.AssignAttr = &_ddcge
			continue
		}
	}
	for {
		_caebb, _bgggba := d.Token()
		if _bgggba != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0054\u0079p\u0065:\u0020\u0025\u0073", _bgggba)
		}
		if _bcabb, _bgdcd := _caebb.(_b.EndElement); _bgdcd && _bcabb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afgaa *CT_Controls) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgae:
	for {
		_ecgde, _cgffd := d.Token()
		if _cgffd != nil {
			return _cgffd
		}
		switch _bedg := _ecgde.(type) {
		case _b.StartElement:
			switch _bedg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_afdc := NewCT_Control()
				if _cffac := d.DecodeElement(_afdc, &_bedg); _cffac != nil {
					return _cffac
				}
				_afgaa.Control = append(_afgaa.Control, _afdc)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073\u0020\u0025\u0076", _bedg.Name)
				if _aedd := d.Skip(); _aedd != nil {
					return _aedd
				}
			}
		case _b.EndElement:
			break _fgae
		case _b.CharData:
		}
	}
	return nil
}
func (_cgfgc *CT_Consolidation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgfgc.RangeSets = NewCT_RangeSets()
	for _, _aggca := range start.Attr {
		if _aggca.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065" {
			_bbcg, _afaa := _e.ParseBool(_aggca.Value)
			if _afaa != nil {
				return _afaa
			}
			_cgfgc.AutoPageAttr = &_bbcg
			continue
		}
	}
_eaea:
	for {
		_ddecb, _dcde := d.Token()
		if _dcde != nil {
			return _dcde
		}
		switch _ggbgdg := _ddecb.(type) {
		case _b.StartElement:
			switch _ggbgdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}:
				_cgfgc.Pages = NewCT_Pages()
				if _eabgg := d.DecodeElement(_cgfgc.Pages, &_ggbgdg); _eabgg != nil {
					return _eabgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}:
				if _dgae := d.DecodeElement(_cgfgc.RangeSets, &_ggbgdg); _dgae != nil {
					return _dgae
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025v", _ggbgdg.Name)
				if _fdae := d.Skip(); _fdae != nil {
					return _fdae
				}
			}
		case _b.EndElement:
			break _eaea
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_RangeSets() *CT_RangeSets { _adfcf := &CT_RangeSets{}; return _adfcf }

type CT_PCDSDTCEntries struct {

	// Tuple Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String
}

// Validate validates the CT_XStringElement and its children
func (_dcfaf *CT_XStringElement) Validate() error {
	return _dcfaf.ValidateWithPath("\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_Parameters and its children
func (_bbbgf *CT_Parameters) Validate() error {
	return _bbbgf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073")
}

type CT_DrawingHF struct {
	IdAttr string

	// Left Header for Odd Pages
	LhoAttr *uint32

	// Left Header for Even Pages
	LheAttr *uint32

	// Left Header for First Page
	LhfAttr *uint32

	// Center Header for Odd Pages
	ChoAttr *uint32

	// Center Header for Even Pages
	CheAttr *uint32

	// Center Header for First Page
	ChfAttr *uint32

	// Right Header for Odd Pages
	RhoAttr *uint32

	// Right Header for Even Pages
	RheAttr *uint32

	// Right Header for First Page
	RhfAttr *uint32

	// Left Footer for Odd Pages
	LfoAttr *uint32

	// Left Footer for Even Pages
	LfeAttr *uint32

	// Left Footer for First Page
	LffAttr *uint32

	// Center Footer for Odd Pages
	CfoAttr *uint32

	// Center Footer for Even Pages
	CfeAttr *uint32

	// Center Footer for First Page
	CffAttr *uint32

	// Right Footer for Odd Pages
	RfoAttr *uint32

	// Right Footer for Even Pages
	RfeAttr *uint32

	// Right Footer for First Page
	RffAttr *uint32
}

func NewCT_UndoInfo() *CT_UndoInfo {
	_cbebgg := &CT_UndoInfo{}
	_cbebgg.ExpAttr = ST_FormulaExpression(1)
	return _cbebgg
}
func (_abead *CT_Reviewed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eagaea := range start.Attr {
		if _eagaea.Name.Local == "\u0072\u0049\u0064" {
			_egfdad, _efaega := _e.ParseUint(_eagaea.Value, 10, 32)
			if _efaega != nil {
				return _efaega
			}
			_abead.RIdAttr = uint32(_egfdad)
			continue
		}
	}
	for {
		_dgfbe, _feefdc := d.Token()
		if _feefdc != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u003a\u0020\u0025\u0073", _feefdc)
		}
		if _fbaef, _dfgba := _dgfbe.(_b.EndElement); _dfgba && _fbaef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbbf *CT_ExternalReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dbbf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aaaeda *ST_TotalsRowFunction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aaaeda = 0
	case "\u006e\u006f\u006e\u0065":
		*_aaaeda = 1
	case "\u0073\u0075\u006d":
		*_aaaeda = 2
	case "\u006d\u0069\u006e":
		*_aaaeda = 3
	case "\u006d\u0061\u0078":
		*_aaaeda = 4
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_aaaeda = 5
	case "\u0063\u006f\u0075n\u0074":
		*_aaaeda = 6
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_aaaeda = 7
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_aaaeda = 8
	case "\u0076\u0061\u0072":
		*_aaaeda = 9
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_aaaeda = 10
	}
	return nil
}

type CT_Border struct {

	// Diagonal Up
	DiagonalUpAttr *bool

	// Diagonal Down
	DiagonalDownAttr *bool

	// Outline
	OutlineAttr *bool

	// Leading Edge Border
	Start *CT_BorderPr

	// Trailing Edge Border
	End *CT_BorderPr

	// Leading Edge Border
	Left *CT_BorderPr

	// Trailing Edge Border
	Right *CT_BorderPr

	// Top Border
	Top *CT_BorderPr

	// Bottom Border
	Bottom *CT_BorderPr

	// Diagonal
	Diagonal *CT_BorderPr

	// Vertical Inner Border
	Vertical *CT_BorderPr

	// Horizontal Inner Borders
	Horizontal *CT_BorderPr
}

func (_fgfbca *ST_TableType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgfbca = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_fgfbca = 1
	case "\u0078\u006d\u006c":
		*_fgfbca = 2
	case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
		*_fgfbca = 3
	}
	return nil
}
func (_efebd ST_ConditionalFormattingOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efebd.String(), start)
}
func (_egeeda *CT_SheetProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccga := range start.Attr {
		if _ccga.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073" {
			_gfbgc, _dbabg := _e.ParseBool(_ccga.Value)
			if _dbabg != nil {
				return _dbabg
			}
			_egeeda.FormatRowsAttr = &_gfbgc
			continue
		}
		if _ccga.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_gdfgab, _ebddac := _e.ParseBool(_ccga.Value)
			if _ebddac != nil {
				return _ebddac
			}
			_egeeda.InsertColumnsAttr = &_gdfgab
			continue
		}
		if _ccga.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_cdfed, _bgdbg := _ccga.Value, error(nil)
			if _bgdbg != nil {
				return _bgdbg
			}
			_egeeda.AlgorithmNameAttr = &_cdfed
			continue
		}
		if _ccga.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073" {
			_acggd, _fgcgc := _e.ParseBool(_ccga.Value)
			if _fgcgc != nil {
				return _fgcgc
			}
			_egeeda.InsertRowsAttr = &_acggd
			continue
		}
		if _ccga.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_eebef, _affdb := _ccga.Value, error(nil)
			if _affdb != nil {
				return _affdb
			}
			_egeeda.SaltValueAttr = &_eebef
			continue
		}
		if _ccga.Name.Local == "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073" {
			_gefgd, _bfcbe := _e.ParseBool(_ccga.Value)
			if _bfcbe != nil {
				return _bfcbe
			}
			_egeeda.InsertHyperlinksAttr = &_gefgd
			continue
		}
		if _ccga.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_dcbca, _fadaab := _e.ParseBool(_ccga.Value)
			if _fadaab != nil {
				return _fadaab
			}
			_egeeda.SheetAttr = &_dcbca
			continue
		}
		if _ccga.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_ffbda, _afcc := _e.ParseBool(_ccga.Value)
			if _afcc != nil {
				return _afcc
			}
			_egeeda.DeleteColumnsAttr = &_ffbda
			continue
		}
		if _ccga.Name.Local == "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs" {
			_bfgce, _bafgcf := _e.ParseBool(_ccga.Value)
			if _bafgcf != nil {
				return _bafgcf
			}
			_egeeda.ScenariosAttr = &_bfgce
			continue
		}
		if _ccga.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_fdbge, _bdbdd := _e.ParseBool(_ccga.Value)
			if _bdbdd != nil {
				return _bdbdd
			}
			_egeeda.FormatColumnsAttr = &_fdbge
			continue
		}
		if _ccga.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_fgefg, _aecce := _ccga.Value, error(nil)
			if _aecce != nil {
				return _aecce
			}
			_egeeda.PasswordAttr = &_fgefg
			continue
		}
		if _ccga.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_efcge, _fgbfg := _ccga.Value, error(nil)
			if _fgbfg != nil {
				return _fgbfg
			}
			_egeeda.HashValueAttr = &_efcge
			continue
		}
		if _ccga.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_bfbcf, _cefcb := _e.ParseUint(_ccga.Value, 10, 32)
			if _cefcb != nil {
				return _cefcb
			}
			_abbbcf := uint32(_bfbcf)
			_egeeda.SpinCountAttr = &_abbbcf
			continue
		}
		if _ccga.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_gbgfd, _aecbfe := _e.ParseBool(_ccga.Value)
			if _aecbfe != nil {
				return _aecbfe
			}
			_egeeda.ObjectsAttr = &_gbgfd
			continue
		}
		if _ccga.Name.Local == "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073" {
			_dacca, _efabeb := _e.ParseBool(_ccga.Value)
			if _efabeb != nil {
				return _efabeb
			}
			_egeeda.FormatCellsAttr = &_dacca
			continue
		}
		if _ccga.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073" {
			_bdaac, _dccfdgf := _e.ParseBool(_ccga.Value)
			if _dccfdgf != nil {
				return _dccfdgf
			}
			_egeeda.DeleteRowsAttr = &_bdaac
			continue
		}
		if _ccga.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073" {
			_eecbae, _ffecfe := _e.ParseBool(_ccga.Value)
			if _ffecfe != nil {
				return _ffecfe
			}
			_egeeda.SelectLockedCellsAttr = &_eecbae
			continue
		}
		if _ccga.Name.Local == "\u0073\u006f\u0072\u0074" {
			_cdacc, _bcgaf := _e.ParseBool(_ccga.Value)
			if _bcgaf != nil {
				return _bcgaf
			}
			_egeeda.SortAttr = &_cdacc
			continue
		}
		if _ccga.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072" {
			_deacdd, _ggfbd := _e.ParseBool(_ccga.Value)
			if _ggfbd != nil {
				return _ggfbd
			}
			_egeeda.AutoFilterAttr = &_deacdd
			continue
		}
		if _ccga.Name.Local == "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073" {
			_dcfbe, _gdcec := _e.ParseBool(_ccga.Value)
			if _gdcec != nil {
				return _gdcec
			}
			_egeeda.PivotTablesAttr = &_dcfbe
			continue
		}
		if _ccga.Name.Local == "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073" {
			_gdegcde, _cfbfee := _e.ParseBool(_ccga.Value)
			if _cfbfee != nil {
				return _cfbfee
			}
			_egeeda.SelectUnlockedCellsAttr = &_gdegcde
			continue
		}
	}
	for {
		_ebeac, _eeadg := d.Token()
		if _eeadg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0050\u0072o\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _eeadg)
		}
		if _degcb, _daddce := _ebeac.(_b.EndElement); _daddce && _degcb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalLink and its children, prefixing error messages with path
func (_ceca *CT_ExternalLink) ValidateWithPath(path string) error {
	if _ceca.Choice != nil {
		if _bfabc := _ceca.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _bfabc != nil {
			return _bfabc
		}
	}
	if _ceca.ExtLst != nil {
		if _dgef := _ceca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgef != nil {
			return _dgef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PageField and its children, prefixing error messages with path
func (_dcbbd *CT_PageField) ValidateWithPath(path string) error {
	if _dcbbd.ExtLst != nil {
		if _deff := _dcbbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deff != nil {
			return _deff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Cell and its children, prefixing error messages with path
func (_cdab *CT_Cell) ValidateWithPath(path string) error {
	if _eded := _cdab.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _eded != nil {
		return _eded
	}
	if _cdab.F != nil {
		if _defd := _cdab.F.ValidateWithPath(path + "\u002f\u0046"); _defd != nil {
			return _defd
		}
	}
	if _cdab.Is != nil {
		if _acde := _cdab.Is.ValidateWithPath(path + "\u002f\u0049\u0073"); _acde != nil {
			return _acde
		}
	}
	if _cdab.ExtLst != nil {
		if _bff := _cdab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bff != nil {
			return _bff
		}
	}
	return nil
}
func NewCT_DataField() *CT_DataField { _gccd := &CT_DataField{}; return _gccd }
func (_ececc ST_DynamicFilterType) ValidateWithPath(path string) error {
	switch _ececc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ececc))
	}
	return nil
}
func (_accba *CT_OleItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _accba.NameAttr)})
	if _accba.IconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accba.IconAttr))})
	}
	if _accba.AdviseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accba.AdviseAttr))})
	}
	if _accba.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accba.PreferPicAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_eaab *CT_FontScheme) ValidateWithPath(path string) error {
	if _eaab.ValAttr == ST_FontSchemeUnset {
		return _f.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eeaef := _eaab.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eeaef != nil {
		return _eeaef
	}
	return nil
}

// Validate validates the CT_TableStyleInfo and its children
func (_bggeb *CT_TableStyleInfo) Validate() error {
	return _bggeb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f")
}

// Validate validates the CT_DdeItem and its children
func (_feda *CT_DdeItem) Validate() error {
	return _feda.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d")
}

// ValidateWithPath validates the CT_ChartsheetProtection and its children, prefixing error messages with path
func (_ccfd *CT_ChartsheetProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_MetadataStringIndex and its children, prefixing error messages with path
func (_ceagfa *CT_MetadataStringIndex) ValidateWithPath(path string) error { return nil }
func (_dadgb *ST_DataValidationImeMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dadgb = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_dadgb = 1
	case "\u006f\u0066\u0066":
		*_dadgb = 2
	case "\u006f\u006e":
		*_dadgb = 3
	case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
		*_dadgb = 4
	case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_dadgb = 5
	case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_dadgb = 6
	case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_dadgb = 7
	case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
		*_dadgb = 8
	case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
		*_dadgb = 9
	case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
		*_dadgb = 10
	case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
		*_dadgb = 11
	}
	return nil
}
func (_cfafa ST_Visibility) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbebb := _b.Attr{}
	_cbebb.Name = name
	switch _cfafa {
	case ST_VisibilityUnset:
		_cbebb.Value = ""
	case ST_VisibilityVisible:
		_cbebb.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_VisibilityHidden:
		_cbebb.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_VisibilityVeryHidden:
		_cbebb.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _cbebb, nil
}
func NewCT_CalculatedMembers() *CT_CalculatedMembers { _fdfg := &CT_CalculatedMembers{}; return _fdfg }

type ST_GrowShrinkType byte

func NewCT_PCDKPIs() *CT_PCDKPIs { _ffcac := &CT_PCDKPIs{}; return _ffcac }
func (_bfdgef *CT_SheetBackgroundPicture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bfdgef.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcbe *CT_CellAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feebd := range start.Attr {
		if _feebd.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c" {
			_dcbe.HorizontalAttr.UnmarshalXMLAttr(_feebd)
			continue
		}
		if _feebd.Name.Local == "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_dcbe.VerticalAttr.UnmarshalXMLAttr(_feebd)
			continue
		}
		if _feebd.Name.Local == "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e" {
			_ceeb, _dacg := _e.ParseUint(_feebd.Value, 10, 8)
			if _dacg != nil {
				return _dacg
			}
			_fdbe := uint8(_ceeb)
			_dcbe.TextRotationAttr = &_fdbe
			continue
		}
		if _feebd.Name.Local == "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074" {
			_ffdd, _aad := _e.ParseBool(_feebd.Value)
			if _aad != nil {
				return _aad
			}
			_dcbe.WrapTextAttr = &_ffdd
			continue
		}
		if _feebd.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_aed, _fafa := _e.ParseUint(_feebd.Value, 10, 32)
			if _fafa != nil {
				return _fafa
			}
			_aeef := uint32(_aed)
			_dcbe.IndentAttr = &_aeef
			continue
		}
		if _feebd.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074" {
			_bddgc, _gdad := _e.ParseInt(_feebd.Value, 10, 32)
			if _gdad != nil {
				return _gdad
			}
			_fec := int32(_bddgc)
			_dcbe.RelativeIndentAttr = &_fec
			continue
		}
		if _feebd.Name.Local == "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065" {
			_bdee, _cfab := _e.ParseBool(_feebd.Value)
			if _cfab != nil {
				return _cfab
			}
			_dcbe.JustifyLastLineAttr = &_bdee
			continue
		}
		if _feebd.Name.Local == "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074" {
			_aefc, _gcdb := _e.ParseBool(_feebd.Value)
			if _gcdb != nil {
				return _gcdb
			}
			_dcbe.ShrinkToFitAttr = &_aefc
			continue
		}
		if _feebd.Name.Local == "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072" {
			_cef, _agge := _e.ParseUint(_feebd.Value, 10, 32)
			if _agge != nil {
				return _agge
			}
			_ceef := uint32(_cef)
			_dcbe.ReadingOrderAttr = &_ceef
			continue
		}
	}
	for {
		_acfg, _bggea := d.Token()
		if _bggea != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006cA\u006ci\u0067\u006e\u006d\u0065\u006e\u0074\u003a \u0025\u0073", _bggea)
		}
		if _fdffg, _afgf := _acfg.(_b.EndElement); _afgf && _fdffg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebcgd ST_rwColActionType) Validate() error { return _ebcgd.ValidateWithPath("") }
func (_efabb *CT_SharedUser) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efabb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gcged := range start.Attr {
		if _gcged.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cfgbe, _ceedgg := _gcged.Value, error(nil)
			if _ceedgg != nil {
				return _ceedgg
			}
			_efabb.GuidAttr = _cfgbe
			continue
		}
		if _gcged.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfddd, _ddgfe := _gcged.Value, error(nil)
			if _ddgfe != nil {
				return _ddgfe
			}
			_efabb.NameAttr = _bfddd
			continue
		}
		if _gcged.Name.Local == "\u0069\u0064" {
			_fbgebc, _dgdb := _e.ParseInt(_gcged.Value, 10, 32)
			if _dgdb != nil {
				return _dgdb
			}
			_efabb.IdAttr = int32(_fbgebc)
			continue
		}
		if _gcged.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_fbda, _gbeeda := ParseStdlibTime(_gcged.Value)
			if _gbeeda != nil {
				return _gbeeda
			}
			_efabb.DateTimeAttr = _fbda
			continue
		}
	}
_accgc:
	for {
		_bbbce, _fgbca := d.Token()
		if _fgbca != nil {
			return _fgbca
		}
		switch _cbffg := _bbbce.(type) {
		case _b.StartElement:
			switch _cbffg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efabb.ExtLst = NewCT_ExtensionList()
				if _bfadfb := d.DecodeElement(_efabb.ExtLst, &_cbffg); _bfadfb != nil {
					return _bfadfb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072 \u0025\u0076", _cbffg.Name)
				if _acccg := d.Skip(); _acccg != nil {
					return _acccg
				}
			}
		case _b.EndElement:
			break _accgc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Index and its children, prefixing error messages with path
func (_cfdef *CT_Index) ValidateWithPath(path string) error { return nil }
func (_fffeac ST_GrowShrinkType) String() string {
	switch _fffeac {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case 2:
		return "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case 3:
		return "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return ""
}

type CT_CacheField struct {

	// PivotCache Field Name
	NameAttr string

	// PivotCache Field Caption
	CaptionAttr *string

	// Property Name
	PropertyNameAttr *string

	// Server-based Field
	ServerFieldAttr *bool

	// Unique List Retrieved
	UniqueListAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Calculated Field Formula
	FormulaAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Hierarchy
	HierarchyAttr *int32

	// Hierarchy Level
	LevelAttr *uint32

	// Database Field
	DatabaseFieldAttr *bool

	// Member Property Count
	MappingCountAttr *uint32

	// Member Property Field
	MemberPropertyFieldAttr *bool

	// Shared Items
	SharedItems *CT_SharedItems

	// Field Group Properties
	FieldGroup *CT_FieldGroup

	// Member Properties Map
	MpMap []*CT_X

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_Row struct {

	// Row Index
	RAttr *uint32

	// Spans
	SpansAttr *ST_CellSpans

	// Style Index
	SAttr *uint32

	// Custom Format
	CustomFormatAttr *bool

	// Row Height
	HtAttr *float64

	// Hidden
	HiddenAttr *bool

	// Custom Height
	CustomHeightAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom
	ThickBotAttr *bool

	// Show Phonetic
	PhAttr *bool

	// Cell
	C []*CT_Cell

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gefc *CT_Chartsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gefc.SheetViews = NewCT_ChartsheetViews()
	_gefc.Drawing = NewCT_Drawing()
_edec:
	for {
		_gcdc, _ccbf := d.Token()
		if _ccbf != nil {
			return _ccbf
		}
		switch _dedaa := _gcdc.(type) {
		case _b.StartElement:
			switch _dedaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_gefc.SheetPr = NewCT_ChartsheetPr()
				if _gade := d.DecodeElement(_gefc.SheetPr, &_dedaa); _gade != nil {
					return _gade
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _agdc := d.DecodeElement(_gefc.SheetViews, &_dedaa); _agdc != nil {
					return _agdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gefc.SheetProtection = NewCT_ChartsheetProtection()
				if _aebe := d.DecodeElement(_gefc.SheetProtection, &_dedaa); _aebe != nil {
					return _aebe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gefc.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _fceg := d.DecodeElement(_gefc.CustomSheetViews, &_dedaa); _fceg != nil {
					return _fceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gefc.PageMargins = NewCT_PageMargins()
				if _ddce := d.DecodeElement(_gefc.PageMargins, &_dedaa); _ddce != nil {
					return _ddce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gefc.PageSetup = NewCT_CsPageSetup()
				if _dadd := d.DecodeElement(_gefc.PageSetup, &_dedaa); _dadd != nil {
					return _dadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gefc.HeaderFooter = NewCT_HeaderFooter()
				if _aafge := d.DecodeElement(_gefc.HeaderFooter, &_dedaa); _aafge != nil {
					return _aafge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _acdg := d.DecodeElement(_gefc.Drawing, &_dedaa); _acdg != nil {
					return _acdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_gefc.LegacyDrawing = NewCT_LegacyDrawing()
				if _cdgg := d.DecodeElement(_gefc.LegacyDrawing, &_dedaa); _cdgg != nil {
					return _cdgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_gefc.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bfga := d.DecodeElement(_gefc.LegacyDrawingHF, &_dedaa); _bfga != nil {
					return _bfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_gefc.DrawingHF = NewCT_DrawingHF()
				if _gebga := d.DecodeElement(_gefc.DrawingHF, &_dedaa); _gebga != nil {
					return _gebga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_gefc.Picture = NewCT_SheetBackgroundPicture()
				if _gcba := d.DecodeElement(_gefc.Picture, &_dedaa); _gcba != nil {
					return _gcba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_gefc.WebPublishItems = NewCT_WebPublishItems()
				if _cdca := d.DecodeElement(_gefc.WebPublishItems, &_dedaa); _cdca != nil {
					return _cdca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gefc.ExtLst = NewCT_ExtensionList()
				if _bead := d.DecodeElement(_gefc.ExtLst, &_dedaa); _bead != nil {
					return _bead
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043h\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _dedaa.Name)
				if _bgff := d.Skip(); _bgff != nil {
					return _bgff
				}
			}
		case _b.EndElement:
			break _edec
		case _b.CharData:
		}
	}
	return nil
}
func (_gceag ST_CellComments) String() string {
	switch _gceag {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case 3:
		return "\u0061\u0074\u0045n\u0064"
	}
	return ""
}
func NewCT_Groups() *CT_Groups { _ebdbc := &CT_Groups{}; return _ebdbc }

// ValidateWithPath validates the CT_GroupMember and its children, prefixing error messages with path
func (_bfddc *CT_GroupMember) ValidateWithPath(path string) error { return nil }
func NewCT_Sheets() *CT_Sheets                                    { _bbdfa := &CT_Sheets{}; return _bbdfa }
func NewCT_CacheSource() *CT_CacheSource {
	_bcbe := &CT_CacheSource{}
	_bcbe.TypeAttr = ST_SourceType(1)
	return _bcbe
}
func (_faafga ST_TableType) String() string {
	switch _faafga {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0078\u006d\u006c"
	case 3:
		return "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

// Validate validates the CT_QueryTableField and its children
func (_gcacg *CT_QueryTableField) Validate() error {
	return _gcacg.ValidateWithPath("\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064")
}
func (_gdfe *CT_Index) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _gdfe.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellStyles and its children, prefixing error messages with path
func (_dgfab *CT_CellStyles) ValidateWithPath(path string) error {
	for _ggce, _gcb := range _dgfab.CellStyle {
		if _fcddb := _gcb.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _ggce)); _fcddb != nil {
			return _fcddb
		}
	}
	return nil
}

type CT_PivotAreas struct {

	// Pivot Area Count
	CountAttr *uint32

	// Pivot Area
	PivotArea []*CT_PivotArea
}
type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}
type CT_FileVersion struct {

	// Application Name
	AppNameAttr *string

	// Last Edited Version
	LastEditedAttr *string

	// Lowest Edited Version
	LowestEditedAttr *string

	// Build Version
	RupBuildAttr *string

	// Code Name
	CodeNameAttr *string
}

// ValidateWithPath validates the CT_Format and its children, prefixing error messages with path
func (_eebgc *CT_Format) ValidateWithPath(path string) error {
	if _gffdb := _eebgc.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gffdb != nil {
		return _gffdb
	}
	if _fggad := _eebgc.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _fggad != nil {
		return _fggad
	}
	if _eebgc.ExtLst != nil {
		if _fabb := _eebgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fabb != nil {
			return _fabb
		}
	}
	return nil
}
func NewCT_CellSmartTags() *CT_CellSmartTags { _cbbeb := &CT_CellSmartTags{}; return _cbbeb }

// Validate validates the CT_FontFamily and its children
func (_bdcf *CT_FontFamily) Validate() error {
	return _bdcf.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079")
}
func (_acged *ExternalLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b"
	return _acged.CT_ExternalLink.MarshalXML(e, start)
}
func (_dfdab *CT_MdxSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0073"}, Value: _f.Sprintf("\u0025\u0076", _dfdab.NsAttr)})
	if _dfdab.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_dfdab.CAttr)})
	}
	if _dfdab.OAttr != ST_MdxSetOrderUnset {
		_afcfd, _cdcdd := _dfdab.OAttr.MarshalXMLAttr(_b.Name{Local: "\u006f"})
		if _cdcdd != nil {
			return _cdcdd
		}
		start.Attr = append(start.Attr, _afcfd)
	}
	e.EncodeToken(start)
	if _dfdab.N != nil {
		_fcacb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _ebce := range _dfdab.N {
			e.EncodeElement(_ebce, _fcacb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_XmlColumnPr() *CT_XmlColumnPr { _aecddf := &CT_XmlColumnPr{}; return _aecddf }

type CT_rowItems struct {

	// Items in a Row Count
	CountAttr *uint32

	// Row Items
	I []*CT_I
}

// Validate validates the CT_SortState and its children
func (_aaebdc *CT_SortState) Validate() error {
	return _aaebdc.ValidateWithPath("\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065")
}
func NewCT_CellSmartTag() *CT_CellSmartTag { _dgfg := &CT_CellSmartTag{}; return _dgfg }
func (_cgabc *CT_MeasureGroups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgabc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cgabc.CountAttr)})
	}
	e.EncodeToken(start)
	if _cgabc.MeasureGroup != nil {
		_cefbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}}
		for _, _cfaeb := range _cgabc.MeasureGroup {
			e.EncodeElement(_cfaeb, _cefbe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RowFields and its children
func (_bfgbf *CT_RowFields) Validate() error {
	return _bfgbf.ValidateWithPath("\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_Record and its children
func (_ebafg *CT_Record) Validate() error {
	return _ebafg.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d")
}
func (_ddgbb ST_RefMode) ValidateWithPath(path string) error {
	switch _ddgbb {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddgbb))
	}
	return nil
}

const (
	ST_SortMethodUnset  ST_SortMethod = 0
	ST_SortMethodStroke ST_SortMethod = 1
	ST_SortMethodPinYin ST_SortMethod = 2
	ST_SortMethodNone   ST_SortMethod = 3
)

func (_gfeag ST_TableType) Validate() error { return _gfeag.ValidateWithPath("") }

type CT_ExternalSheetData struct {

	// Sheet Id
	SheetIdAttr uint32

	// Last Refresh Resulted in Error
	RefreshErrorAttr *bool

	// Row
	Row []*CT_ExternalRow
}

func (_daggf *CT_DefinedNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _daggf.DefinedName != nil {
		_abdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _edccc := range _daggf.DefinedName {
			e.EncodeElement(_edccc, _abdc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_SortType byte

func (_afcbde *CT_SheetIdMap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgfdb := range start.Attr {
		if _dgfdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccdee, _gbadg := _e.ParseUint(_dgfdb.Value, 10, 32)
			if _gbadg != nil {
				return _gbadg
			}
			_dbgdc := uint32(_ccdee)
			_afcbde.CountAttr = &_dbgdc
			continue
		}
	}
_dgbbd:
	for {
		_gcdfe, _bggec := d.Token()
		if _bggec != nil {
			return _bggec
		}
		switch _dadcfg := _gcdfe.(type) {
		case _b.StartElement:
			switch _dadcfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}:
				_ggcbe := NewCT_SheetId()
				if _ebcca := d.DecodeElement(_ggcbe, &_dadcfg); _ebcca != nil {
					return _ebcca
				}
				_afcbde.SheetId = append(_afcbde.SheetId, _ggcbe)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070 \u0025\u0076", _dadcfg.Name)
				if _efgdf := d.Skip(); _efgdf != nil {
					return _efgdf
				}
			}
		case _b.EndElement:
			break _dgbbd
		case _b.CharData:
		}
	}
	return nil
}
func (_cfgga *CT_FieldGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfgga.ParAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_cfgga.ParAttr)})
	}
	if _cfgga.BaseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_cfgga.BaseAttr)})
	}
	e.EncodeToken(start)
	if _cfgga.RangePr != nil {
		_baaba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0050\u0072"}}
		e.EncodeElement(_cfgga.RangePr, _baaba)
	}
	if _cfgga.DiscretePr != nil {
		_edabd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}}
		e.EncodeElement(_cfgga.DiscretePr, _edabd)
	}
	if _cfgga.GroupItems != nil {
		_aecdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cfgga.GroupItems, _aecdd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccbcb ST_WebSourceType) String() string {
	switch _ccbcb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0065e\u0074"
	case 2:
		return "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case 3:
		return "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0061\u006eg\u0065"
	case 5:
		return "\u0063\u0068\u0061r\u0074"
	case 6:
		return "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case 7:
		return "\u0071\u0075\u0065r\u0079"
	case 8:
		return "\u006c\u0061\u0062e\u006c"
	}
	return ""
}

type CT_Comments struct {

	// Authors
	Authors *CT_Authors

	// List of Comments
	CommentList *CT_CommentList
	ExtLst      *CT_ExtensionList
}
type ST_CellComments byte

// ValidateWithPath validates the CT_HierarchyUsage and its children, prefixing error messages with path
func (_gfffd *CT_HierarchyUsage) ValidateWithPath(path string) error { return nil }
func (_daggfe ST_CellType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_daggfe.String(), start)
}
func (_gagecc *ST_CredMethod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gagecc = 0
	case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
		*_gagecc = 1
	case "\u006e\u006f\u006e\u0065":
		*_gagecc = 2
	case "\u0073\u0074\u006f\u0072\u0065\u0064":
		*_gagecc = 3
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_gagecc = 4
	}
	return nil
}
func (_dbdfbc *ST_Qualifier) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbdfbc = 0
	case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_dbdfbc = 1
	case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_dbdfbc = 2
	case "\u006e\u006f\u006e\u0065":
		*_dbdfbc = 3
	}
	return nil
}

// ValidateWithPath validates the CT_PivotDimension and its children, prefixing error messages with path
func (_cagdg *CT_PivotDimension) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Dxf and its children, prefixing error messages with path
func (_cbfb *CT_Dxf) ValidateWithPath(path string) error {
	if _cbfb.Font != nil {
		if _fggdd := _cbfb.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _fggdd != nil {
			return _fggdd
		}
	}
	if _cbfb.NumFmt != nil {
		if _fcgae := _cbfb.NumFmt.ValidateWithPath(path + "\u002fN\u0075\u006d\u0046\u006d\u0074"); _fcgae != nil {
			return _fcgae
		}
	}
	if _cbfb.Fill != nil {
		if _feega := _cbfb.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _feega != nil {
			return _feega
		}
	}
	if _cbfb.Alignment != nil {
		if _dbag := _cbfb.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _dbag != nil {
			return _dbag
		}
	}
	if _cbfb.Border != nil {
		if _ebffg := _cbfb.Border.ValidateWithPath(path + "\u002fB\u006f\u0072\u0064\u0065\u0072"); _ebffg != nil {
			return _ebffg
		}
	}
	if _cbfb.Protection != nil {
		if _fbged := _cbfb.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _fbged != nil {
			return _fbged
		}
	}
	if _cbfb.ExtLst != nil {
		if _aacab := _cbfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aacab != nil {
			return _aacab
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataStrings and its children, prefixing error messages with path
func (_bbdaf *CT_MetadataStrings) ValidateWithPath(path string) error {
	for _gedfdg, _dgfgb := range _bbdaf.S {
		if _afcaa := _dgfgb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _gedfdg)); _afcaa != nil {
			return _afcaa
		}
	}
	return nil
}
func (_eeddd ST_VolDepType) Validate() error { return _eeddd.ValidateWithPath("") }

type ST_TableStyleType byte

func (_fdeea ST_MdxSetOrder) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gfgbgc := _b.Attr{}
	_gfgbgc.Name = name
	switch _fdeea {
	case ST_MdxSetOrderUnset:
		_gfgbgc.Value = ""
	case ST_MdxSetOrderU:
		_gfgbgc.Value = "\u0075"
	case ST_MdxSetOrderA:
		_gfgbgc.Value = "\u0061"
	case ST_MdxSetOrderD:
		_gfgbgc.Value = "\u0064"
	case ST_MdxSetOrderAa:
		_gfgbgc.Value = "\u0061\u0061"
	case ST_MdxSetOrderAd:
		_gfgbgc.Value = "\u0061\u0064"
	case ST_MdxSetOrderNa:
		_gfgbgc.Value = "\u006e\u0061"
	case ST_MdxSetOrderNd:
		_gfgbgc.Value = "\u006e\u0064"
	}
	return _gfgbgc, nil
}

// ValidateWithPath validates the CT_InputCells and its children, prefixing error messages with path
func (_dadcg *CT_InputCells) ValidateWithPath(path string) error { return nil }
func (_dccca *CT_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_effce:
	for {
		_egea, _bdgbb := d.Token()
		if _bdgbb != nil {
			return _bdgbb
		}
		switch _fagb := _egea.(type) {
		case _b.StartElement:
			switch _fagb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_abcd := NewCT_Extension()
				if _cgfgce := d.DecodeElement(_abcd, &_fagb); _cgfgce != nil {
					return _cgfgce
				}
				_dccca.Ext = append(_dccca.Ext, _abcd)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _fagb.Name)
				if _cafga := d.Skip(); _cafga != nil {
					return _cafga
				}
			}
		case _b.EndElement:
			break _effce
		case _b.CharData:
		}
	}
	return nil
}

type CT_Worksheet struct {

	// Worksheet Properties
	SheetPr *CT_SheetPr

	// Worksheet Dimensions
	Dimension *CT_SheetDimension

	// Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Calculation Properties
	SheetCalcPr *CT_SheetCalcPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Protected Ranges
	ProtectedRanges *CT_ProtectedRanges

	// Scenarios
	Scenarios *CT_Scenarios

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidate
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Merge Cells
	MergeCells *CT_MergeCells

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Data Validations
	DataValidations *CT_DataValidations

	// Hyperlinks
	Hyperlinks *CT_Hyperlinks

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header and Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Cell Watch Items
	CellWatches *CT_CellWatches

	// Ignored Errors
	IgnoredErrors *CT_IgnoredErrors

	// Smart Tags
	SmartTags *CT_SmartTags

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture    *CT_SheetBackgroundPicture
	OleObjects *CT_OleObjects

	// Embedded Controls
	Controls *CT_Controls

	// Web Publishing Items
	WebPublishItems *CT_WebPublishItems

	// Table Parts
	TableParts *CT_TableParts

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gdbag ST_CellComments) Validate() error { return _gdbag.ValidateWithPath("") }
func (_gbddbe *ST_VolValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbgeg, _daeea := d.Token()
	if _daeea != nil {
		return _daeea
	}
	if _dccba, _dabff := _bbgeg.(_b.EndElement); _dabff && _dccba.Name == start.Name {
		*_gbddbe = 1
		return nil
	}
	if _dabfa, _afdga := _bbgeg.(_b.CharData); !_afdga {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbgeg)
	} else {
		switch string(_dabfa) {
		case "":
			*_gbddbe = 0
		case "\u0062":
			*_gbddbe = 1
		case "\u006e":
			*_gbddbe = 2
		case "\u0065":
			*_gbddbe = 3
		case "\u0073":
			*_gbddbe = 4
		}
	}
	_bbgeg, _daeea = d.Token()
	if _daeea != nil {
		return _daeea
	}
	if _dfefgf, _fgagba := _bbgeg.(_b.EndElement); _fgagba && _dfefgf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbgeg)
}
func (_agcf *CT_DataBinding) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agcf.DataBindingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_agcf.DataBindingNameAttr)})
	}
	if _agcf.FileBindingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_agcf.FileBindingAttr))})
	}
	if _agcf.ConnectionIDAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044"}, Value: _f.Sprintf("\u0025\u0076", *_agcf.ConnectionIDAttr)})
	}
	if _agcf.FileBindingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_agcf.FileBindingNameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065"}, Value: _f.Sprintf("\u0025\u0076", _agcf.DataBindingLoadModeAttr)})
	e.EncodeToken(start)
	if _agcf.Any != nil {
		_agcf.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcdfg ST_WebSourceType) Validate() error { return _dcdfg.ValidateWithPath("") }

type CT_Boolean struct {

	// Value
	VAttr bool

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Indexes
	X []*CT_X
}

func (_gadgdf *CT_RangePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaafb := range start.Attr {
		if _eaafb.Name.Local == "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t" {
			_bbfcg, _dffdbf := _e.ParseBool(_eaafb.Value)
			if _dffdbf != nil {
				return _dffdbf
			}
			_gadgdf.AutoStartAttr = &_bbfcg
			continue
		}
		if _eaafb.Name.Local == "\u0061u\u0074\u006f\u0045\u006e\u0064" {
			_dffbg, _efebb := _e.ParseBool(_eaafb.Value)
			if _efebb != nil {
				return _efebb
			}
			_gadgdf.AutoEndAttr = &_dffbg
			continue
		}
		if _eaafb.Name.Local == "\u0067r\u006f\u0075\u0070\u0042\u0079" {
			_gadgdf.GroupByAttr.UnmarshalXMLAttr(_eaafb)
			continue
		}
		if _eaafb.Name.Local == "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d" {
			_egfda, _fbfba := _e.ParseFloat(_eaafb.Value, 64)
			if _fbfba != nil {
				return _fbfba
			}
			_gadgdf.StartNumAttr = &_egfda
			continue
		}
		if _eaafb.Name.Local == "\u0065\u006e\u0064\u004e\u0075\u006d" {
			_cfded, _fgaef := _e.ParseFloat(_eaafb.Value, 64)
			if _fgaef != nil {
				return _fgaef
			}
			_gadgdf.EndNumAttr = &_cfded
			continue
		}
		if _eaafb.Name.Local == "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e" {
			_bcfgfb, _ggdeg := ParseStdlibTime(_eaafb.Value)
			if _ggdeg != nil {
				return _ggdeg
			}
			_gadgdf.StartDateAttr = &_bcfgfb
			continue
		}
		if _eaafb.Name.Local == "\u0065n\u0064\u0044\u0061\u0074\u0065" {
			_decgef, _ggdeaad := ParseStdlibTime(_eaafb.Value)
			if _ggdeaad != nil {
				return _ggdeaad
			}
			_gadgdf.EndDateAttr = &_decgef
			continue
		}
		if _eaafb.Name.Local == "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_cfcbe, _cedgc := _e.ParseFloat(_eaafb.Value, 64)
			if _cedgc != nil {
				return _cedgc
			}
			_gadgdf.GroupIntervalAttr = &_cfcbe
			continue
		}
	}
	for {
		_dabad, _edeeea := d.Token()
		if _edeeea != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072\u003a\u0020%\u0073", _edeeea)
		}
		if _adafd, _gecdd := _dabad.(_b.EndElement); _gecdd && _adafd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbecbb *CT_RangeSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfede := range start.Attr {
		if _gfede.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gfede.Name.Local == "\u0069\u0064" || _gfede.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gfede.Name.Local == "\u0069\u0064" {
			_bddeg, _gfcec := _gfede.Value, error(nil)
			if _gfcec != nil {
				return _gfcec
			}
			_cbecbb.IdAttr = &_bddeg
			continue
		}
		if _gfede.Name.Local == "\u0069\u0031" {
			_eceda, _fedbf := _e.ParseUint(_gfede.Value, 10, 32)
			if _fedbf != nil {
				return _fedbf
			}
			_cbdfa := uint32(_eceda)
			_cbecbb.I1Attr = &_cbdfa
			continue
		}
		if _gfede.Name.Local == "\u0069\u0033" {
			_gecgf, _dfgbf := _e.ParseUint(_gfede.Value, 10, 32)
			if _dfgbf != nil {
				return _dfgbf
			}
			_dcdag := uint32(_gecgf)
			_cbecbb.I3Attr = &_dcdag
			continue
		}
		if _gfede.Name.Local == "\u0069\u0034" {
			_dfgda, _fccgcg := _e.ParseUint(_gfede.Value, 10, 32)
			if _fccgcg != nil {
				return _fccgcg
			}
			_aabgb := uint32(_dfgda)
			_cbecbb.I4Attr = &_aabgb
			continue
		}
		if _gfede.Name.Local == "\u0072\u0065\u0066" {
			_fgfag, _bfbce := _gfede.Value, error(nil)
			if _bfbce != nil {
				return _bfbce
			}
			_cbecbb.RefAttr = &_fgfag
			continue
		}
		if _gfede.Name.Local == "\u006e\u0061\u006d\u0065" {
			_acbfe, _aedgfc := _gfede.Value, error(nil)
			if _aedgfc != nil {
				return _aedgfc
			}
			_cbecbb.NameAttr = &_acbfe
			continue
		}
		if _gfede.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_agffe, _adagdf := _gfede.Value, error(nil)
			if _adagdf != nil {
				return _adagdf
			}
			_cbecbb.SheetAttr = &_agffe
			continue
		}
		if _gfede.Name.Local == "\u0069\u0032" {
			_gcedd, _dgceg := _e.ParseUint(_gfede.Value, 10, 32)
			if _dgceg != nil {
				return _dgceg
			}
			_efgee := uint32(_gcedd)
			_cbecbb.I2Attr = &_efgee
			continue
		}
	}
	for {
		_eeag, _cgad := d.Token()
		if _cgad != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _cgad)
		}
		if _bdgad, _fbdea := _eeag.(_b.EndElement); _fbdea && _bdgad.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FileVersion and its children, prefixing error messages with path
func (_abbd *CT_FileVersion) ValidateWithPath(path string) error {
	if _abbd.CodeNameAttr != nil {
		if !_c.ST_GuidPatternRe.MatchString(*_abbd.CodeNameAttr) {
			return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006fd\u0065\u004e\u0061m\u0065\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, *_abbd.CodeNameAttr)
		}
	}
	return nil
}

// Validate validates the CT_Items and its children
func (_begg *CT_Items) Validate() error {
	return _begg.ValidateWithPath("\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073")
}
func (_fgfgb ST_Type) ValidateWithPath(path string) error {
	switch _fgfgb {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgfgb))
	}
	return nil
}
func (_gcff *CT_CustomChartsheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcff.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _adgae := range start.Attr {
		if _adgae.Name.Local == "\u0067\u0075\u0069\u0064" {
			_bdgcc, _ecdae := _adgae.Value, error(nil)
			if _ecdae != nil {
				return _ecdae
			}
			_gcff.GuidAttr = _bdgcc
			continue
		}
		if _adgae.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_adgge, _caeb := _e.ParseUint(_adgae.Value, 10, 32)
			if _caeb != nil {
				return _caeb
			}
			_cdgc := uint32(_adgge)
			_gcff.ScaleAttr = &_cdgc
			continue
		}
		if _adgae.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_gcff.StateAttr.UnmarshalXMLAttr(_adgae)
			continue
		}
		if _adgae.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_bbdb, _aaac := _e.ParseBool(_adgae.Value)
			if _aaac != nil {
				return _aaac
			}
			_gcff.ZoomToFitAttr = &_bbdb
			continue
		}
	}
_gagcc:
	for {
		_dgdga, _fafag := d.Token()
		if _fafag != nil {
			return _fafag
		}
		switch _gfbd := _dgdga.(type) {
		case _b.StartElement:
			switch _gfbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gcff.PageMargins = NewCT_PageMargins()
				if _ceae := d.DecodeElement(_gcff.PageMargins, &_gfbd); _ceae != nil {
					return _ceae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gcff.PageSetup = NewCT_CsPageSetup()
				if _bfcg := d.DecodeElement(_gcff.PageSetup, &_gfbd); _bfcg != nil {
					return _bfcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gcff.HeaderFooter = NewCT_HeaderFooter()
				if _gcfd := d.DecodeElement(_gcff.HeaderFooter, &_gfbd); _gcfd != nil {
					return _gcfd
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077 \u0025\u0076", _gfbd.Name)
				if _cbgc := d.Skip(); _cbgc != nil {
					return _cbgc
				}
			}
		case _b.EndElement:
			break _gagcc
		case _b.CharData:
		}
	}
	return nil
}
func NewMapInfo() *MapInfo {
	_gabeec := &MapInfo{}
	_gabeec.CT_MapInfo = *NewCT_MapInfo()
	return _gabeec
}

// Validate validates the StyleSheet and its children
func (_cbdaf *StyleSheet) Validate() error {
	return _cbdaf.ValidateWithPath("\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_LegacyDrawing and its children
func (_cafaa *CT_LegacyDrawing) Validate() error {
	return _cafaa.ValidateWithPath("\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func (_cdaf *CT_GroupItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cdaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _cdaf.M != nil {
		_fbfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _ddgde := range _cdaf.M {
			e.EncodeElement(_ddgde, _fbfg)
		}
	}
	if _cdaf.N != nil {
		_gcdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _bbfec := range _cdaf.N {
			e.EncodeElement(_bbfec, _gcdg)
		}
	}
	if _cdaf.B != nil {
		_dgbbga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _cbbef := range _cdaf.B {
			e.EncodeElement(_cbbef, _dgbbga)
		}
	}
	if _cdaf.E != nil {
		_fbfee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _dbfdg := range _cdaf.E {
			e.EncodeElement(_dbfdg, _fbfee)
		}
	}
	if _cdaf.S != nil {
		_eefg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _dgcgg := range _cdaf.S {
			e.EncodeElement(_dgcgg, _eefg)
		}
	}
	if _cdaf.D != nil {
		_ddcbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _efcdg := range _cdaf.D {
			e.EncodeElement(_efcdg, _ddcbc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adafc *ST_GradientType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adafc = 0
	case "\u006c\u0069\u006e\u0065\u0061\u0072":
		*_adafc = 1
	case "\u0070\u0061\u0074\u0068":
		*_adafc = 2
	}
	return nil
}
func NewCT_FilterColumn() *CT_FilterColumn { _dedaeb := &CT_FilterColumn{}; return _dedaeb }

type CT_ChartsheetViews struct {

	// Chart Sheet View
	SheetView []*CT_ChartsheetView
	ExtLst    *CT_ExtensionList
}

func (_ggdfeg ST_PatternType) Validate() error { return _ggdfeg.ValidateWithPath("") }

// Validate validates the CT_Sheet and its children
func (_fffea *CT_Sheet) Validate() error {
	return _fffea.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074")
}
func (_feabd *Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065"
	return _feabd.CT_Table.MarshalXML(e, start)
}
func (_dgcgc *CT_DataConsolidate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccbfgb := range start.Attr {
		if _ccbfgb.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_dgcgc.FunctionAttr.UnmarshalXMLAttr(_ccbfgb)
			continue
		}
		if _ccbfgb.Name.Local == "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_effgb, _dfec := _e.ParseBool(_ccbfgb.Value)
			if _dfec != nil {
				return _dfec
			}
			_dgcgc.StartLabelsAttr = &_effgb
			continue
		}
		if _ccbfgb.Name.Local == "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_ffbc, _cebce := _e.ParseBool(_ccbfgb.Value)
			if _cebce != nil {
				return _cebce
			}
			_dgcgc.LeftLabelsAttr = &_ffbc
			continue
		}
		if _ccbfgb.Name.Local == "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs" {
			_aaae, _feaaf := _e.ParseBool(_ccbfgb.Value)
			if _feaaf != nil {
				return _feaaf
			}
			_dgcgc.TopLabelsAttr = &_aaae
			continue
		}
		if _ccbfgb.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dbfgg, _efbg := _e.ParseBool(_ccbfgb.Value)
			if _efbg != nil {
				return _efbg
			}
			_dgcgc.LinkAttr = &_dbfgg
			continue
		}
	}
_gaba:
	for {
		_ddca, _gbaab := d.Token()
		if _gbaab != nil {
			return _gbaab
		}
		switch _egfb := _ddca.(type) {
		case _b.StartElement:
			switch _egfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}:
				_dgcgc.DataRefs = NewCT_DataRefs()
				if _afbad := d.DecodeElement(_dgcgc.DataRefs, &_egfb); _afbad != nil {
					return _afbad
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0043\u006fn\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065\u0020\u0025\u0076", _egfb.Name)
				if _bcecd := d.Skip(); _bcecd != nil {
					return _bcecd
				}
			}
		case _b.EndElement:
			break _gaba
		case _b.CharData:
		}
	}
	return nil
}
func (_gdffa ST_Orientation) Validate() error { return _gdffa.ValidateWithPath("") }
func (_acdcgd *ST_Pane) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acdcgd = 0
	case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_acdcgd = 1
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_acdcgd = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_acdcgd = 3
	case "\u0074o\u0070\u004c\u0065\u0066\u0074":
		*_acdcgd = 4
	}
	return nil
}

type AG_RevData struct {
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_febfee *CT_SharedItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _febfee.ContainsSemiMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsSemiMixedTypesAttr))})
	}
	if _febfee.ContainsNonDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsNonDateAttr))})
	}
	if _febfee.ContainsDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsDateAttr))})
	}
	if _febfee.ContainsStringAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsStringAttr))})
	}
	if _febfee.ContainsBlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsBlankAttr))})
	}
	if _febfee.ContainsMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsMixedTypesAttr))})
	}
	if _febfee.ContainsNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsNumberAttr))})
	}
	if _febfee.ContainsIntegerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.ContainsIntegerAttr))})
	}
	if _febfee.MinValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_febfee.MinValueAttr)})
	}
	if _febfee.MaxValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_febfee.MaxValueAttr)})
	}
	if _febfee.MinDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0044\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_febfee.MinDateAttr)})
	}
	if _febfee.MaxDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0044\u0061\u0074\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_febfee.MaxDateAttr)})
	}
	if _febfee.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_febfee.CountAttr)})
	}
	if _febfee.LongTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_febfee.LongTextAttr))})
	}
	e.EncodeToken(start)
	if _febfee.M != nil {
		_cdccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _geaab := range _febfee.M {
			e.EncodeElement(_geaab, _cdccf)
		}
	}
	if _febfee.N != nil {
		_ffbbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _agcaa := range _febfee.N {
			e.EncodeElement(_agcaa, _ffbbb)
		}
	}
	if _febfee.B != nil {
		_gegb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _fggdfb := range _febfee.B {
			e.EncodeElement(_fggdfb, _gegb)
		}
	}
	if _febfee.E != nil {
		_ddbbdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _ggbgaf := range _febfee.E {
			e.EncodeElement(_ggbgaf, _ddbbdb)
		}
	}
	if _febfee.S != nil {
		_deaab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _cfgfg := range _febfee.S {
			e.EncodeElement(_cfgfg, _deaab)
		}
	}
	if _febfee.D != nil {
		_fbfga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _ebbagf := range _febfee.D {
			e.EncodeElement(_ebbagf, _fbfga)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfeee ST_GroupBy) String() string {
	switch _cfeee {
	case 0:
		return ""
	case 1:
		return "\u0072\u0061\u006eg\u0065"
	case 2:
		return "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case 3:
		return "\u006di\u006e\u0075\u0074\u0065\u0073"
	case 4:
		return "\u0068\u006f\u0075r\u0073"
	case 5:
		return "\u0064\u0061\u0079\u0073"
	case 6:
		return "\u006d\u006f\u006e\u0074\u0068\u0073"
	case 7:
		return "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case 8:
		return "\u0079\u0065\u0061r\u0073"
	}
	return ""
}

// Validate validates the CT_Sets and its children
func (_aggcab *CT_Sets) Validate() error {
	return _aggcab.ValidateWithPath("\u0043T\u005f\u0053\u0065\u0074\u0073")
}
func (_geggef ST_TotalsRowFunction) ValidateWithPath(path string) error {
	switch _geggef {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_geggef))
	}
	return nil
}
func (_cggdb *CT_Mdx) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _f.Sprintf("\u0025\u0076", _cggdb.NAttr)})
	_daaac, _cecad := _cggdb.FAttr.MarshalXMLAttr(_b.Name{Local: "\u0066"})
	if _cecad != nil {
		return _cecad
	}
	start.Attr = append(start.Attr, _daaac)
	e.EncodeToken(start)
	if _cggdb.T != nil {
		_fafe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
		e.EncodeElement(_cggdb.T, _fafe)
	}
	if _cggdb.Ms != nil {
		_dabbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0073"}}
		e.EncodeElement(_cggdb.Ms, _dabbf)
	}
	if _cggdb.P != nil {
		_fcccg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070"}}
		e.EncodeElement(_cggdb.P, _fcccg)
	}
	if _cggdb.K != nil {
		_adfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006b"}}
		e.EncodeElement(_cggdb.K, _adfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaaad *CT_SheetPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bceeb := range start.Attr {
		if _bceeb.Name.Local == "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c" {
			_abcbb, _gcaba := _e.ParseBool(_bceeb.Value)
			if _gcaba != nil {
				return _gcaba
			}
			_gaaad.SyncHorizontalAttr = &_abcbb
			continue
		}
		if _bceeb.Name.Local == "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_bfffag, _ceeef := _e.ParseBool(_bceeb.Value)
			if _ceeef != nil {
				return _ceeef
			}
			_gaaad.SyncVerticalAttr = &_bfffag
			continue
		}
		if _bceeb.Name.Local == "\u0073y\u006e\u0063\u0052\u0065\u0066" {
			_fccef, _dfcgd := _bceeb.Value, error(nil)
			if _dfcgd != nil {
				return _dfcgd
			}
			_gaaad.SyncRefAttr = &_fccef
			continue
		}
		if _bceeb.Name.Local == "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e" {
			_dccfbf, _fgcdc := _e.ParseBool(_bceeb.Value)
			if _fgcdc != nil {
				return _fgcdc
			}
			_gaaad.TransitionEvaluationAttr = &_dccfbf
			continue
		}
		if _bceeb.Name.Local == "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079" {
			_cgdc, _aggba := _e.ParseBool(_bceeb.Value)
			if _aggba != nil {
				return _aggba
			}
			_gaaad.TransitionEntryAttr = &_cgdc
			continue
		}
		if _bceeb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_eaadb, _gaadd := _e.ParseBool(_bceeb.Value)
			if _gaadd != nil {
				return _gaadd
			}
			_gaaad.PublishedAttr = &_eaadb
			continue
		}
		if _bceeb.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_edgac, _gdabc := _bceeb.Value, error(nil)
			if _gdabc != nil {
				return _gdabc
			}
			_gaaad.CodeNameAttr = &_edgac
			continue
		}
		if _bceeb.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065" {
			_fceef, _cecde := _e.ParseBool(_bceeb.Value)
			if _cecde != nil {
				return _cecde
			}
			_gaaad.FilterModeAttr = &_fceef
			continue
		}
		if _bceeb.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e" {
			_gafdb, _badeef := _e.ParseBool(_bceeb.Value)
			if _badeef != nil {
				return _badeef
			}
			_gaaad.EnableFormatConditionsCalculationAttr = &_gafdb
			continue
		}
	}
_bgcgb:
	for {
		_edadba, _adcbg := d.Token()
		if _adcbg != nil {
			return _adcbg
		}
		switch _gcadf := _edadba.(type) {
		case _b.StartElement:
			switch _gcadf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_gaaad.TabColor = NewCT_Color()
				if _ffbage := d.DecodeElement(_gaaad.TabColor, &_gcadf); _ffbage != nil {
					return _ffbage
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}:
				_gaaad.OutlinePr = NewCT_OutlinePr()
				if _abbfd := d.DecodeElement(_gaaad.OutlinePr, &_gcadf); _abbfd != nil {
					return _abbfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}:
				_gaaad.PageSetUpPr = NewCT_PageSetUpPr()
				if _eebdfg := d.DecodeElement(_gaaad.PageSetUpPr, &_gcadf); _eebdfg != nil {
					return _eebdfg
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _gcadf.Name)
				if _aeede := d.Skip(); _aeede != nil {
					return _aeede
				}
			}
		case _b.EndElement:
			break _bgcgb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_DdeItem() *CT_DdeItem         { _gddd := &CT_DdeItem{}; return _gddd }
func NewCT_CellFormula() *CT_CellFormula { _ffdf := &CT_CellFormula{}; return _ffdf }

// Validate validates the CT_XmlPr and its children
func (_abecbb *CT_XmlPr) Validate() error {
	return _abecbb.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072")
}
func (_cgade ST_HorizontalAlignment) String() string {
	switch _cgade {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0069\u0067h\u0074"
	case 5:
		return "\u0066\u0069\u006c\u006c"
	case 6:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 7:
		return "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case 8:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_dgcee *CT_ExternalDefinedNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dgcee.DefinedName != nil {
		_egcdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _abgea := range _dgcee.DefinedName {
			e.EncodeElement(_abgea, _egcdg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfdfa ST_SheetViewType) Validate() error { return _cfdfa.ValidateWithPath("") }

// Validate validates the CT_VerticalAlignFontProperty and its children
func (_dfacdb *CT_VerticalAlignFontProperty) Validate() error {
	return _dfacdb.ValidateWithPath("\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079")
}
func (_bgfgc ST_DataConsolidateFunction) Validate() error { return _bgfgc.ValidateWithPath("") }

type CT_BorderPr struct {

	// Line Style
	StyleAttr ST_BorderStyle

	// Color
	Color *CT_Color
}
type Metadata struct{ CT_Metadata }

func (_dfcbf *CT_DdeItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dedae:
	for {
		_cdgde, _acaf := d.Token()
		if _acaf != nil {
			return _acaf
		}
		switch _cbbfb := _cdgde.(type) {
		case _b.StartElement:
			switch _cbbfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}:
				_dcga := NewCT_DdeItem()
				if _defbd := d.DecodeElement(_dcga, &_cbbfb); _defbd != nil {
					return _defbd
				}
				_dfcbf.DdeItem = append(_dfcbf.DdeItem, _dcga)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _cbbfb.Name)
				if _bfcbd := d.Skip(); _bfcbd != nil {
					return _bfcbd
				}
			}
		case _b.EndElement:
			break _dedae
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ChartsheetViews and its children
func (_agfa *CT_ChartsheetViews) Validate() error {
	return _agfa.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073")
}
func (_fcabb *CT_MetadataTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdged := range start.Attr {
		if _bdged.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_geebb, _acffe := _e.ParseUint(_bdged.Value, 10, 32)
			if _acffe != nil {
				return _acffe
			}
			_fcceb := uint32(_geebb)
			_fcabb.CountAttr = &_fcceb
			continue
		}
	}
_abcbd:
	for {
		_febe, _faedc := d.Token()
		if _faedc != nil {
			return _faedc
		}
		switch _fbcgf := _febe.(type) {
		case _b.StartElement:
			switch _fbcgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}:
				_cbgfe := NewCT_MetadataType()
				if _eefa := d.DecodeElement(_cbgfe, &_fbcgf); _eefa != nil {
					return _eefa
				}
				_fcabb.MetadataType = append(_fcabb.MetadataType, _cbgfe)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _fbcgf.Name)
				if _gabbe := d.Skip(); _gabbe != nil {
					return _gabbe
				}
			}
		case _b.EndElement:
			break _abcbd
		case _b.CharData:
		}
	}
	return nil
}

type ST_DataValidationType byte

func (_feadg *CT_PageFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _feadg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_feadg.CountAttr)})
	}
	e.EncodeToken(start)
	_bagfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064"}}
	for _, _eeebe := range _feadg.PageField {
		e.EncodeElement(_eeebe, _bagfc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ReviewedRevisions and its children
func (_bcedf *CT_ReviewedRevisions) Validate() error {
	return _bcedf.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073")
}

const (
	ST_HorizontalAlignmentUnset            ST_HorizontalAlignment = 0
	ST_HorizontalAlignmentGeneral          ST_HorizontalAlignment = 1
	ST_HorizontalAlignmentLeft             ST_HorizontalAlignment = 2
	ST_HorizontalAlignmentCenter           ST_HorizontalAlignment = 3
	ST_HorizontalAlignmentRight            ST_HorizontalAlignment = 4
	ST_HorizontalAlignmentFill             ST_HorizontalAlignment = 5
	ST_HorizontalAlignmentJustify          ST_HorizontalAlignment = 6
	ST_HorizontalAlignmentCenterContinuous ST_HorizontalAlignment = 7
	ST_HorizontalAlignmentDistributed      ST_HorizontalAlignment = 8
)

type SingleXmlCells struct{ CT_SingleXmlCells }

func (_gabge *CT_PivotAreaReferences) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbfd := range start.Attr {
		if _cbfd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_baaefa, _bfaae := _e.ParseUint(_cbfd.Value, 10, 32)
			if _bfaae != nil {
				return _bfaae
			}
			_cfaga := uint32(_baaefa)
			_gabge.CountAttr = &_cfaga
			continue
		}
	}
_cgfef:
	for {
		_geecb, _ecca := d.Token()
		if _ecca != nil {
			return _ecca
		}
		switch _ebggd := _geecb.(type) {
		case _b.StartElement:
			switch _ebggd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}:
				_egedfe := NewCT_PivotAreaReference()
				if _bgedd := d.DecodeElement(_egedfe, &_ebggd); _bgedd != nil {
					return _bgedd
				}
				_gabge.Reference = append(_gabge.Reference, _egedfe)
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0069\u0076\u006ft\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _ebggd.Name)
				if _cagfa := d.Skip(); _cagfa != nil {
					return _cagfa
				}
			}
		case _b.EndElement:
			break _cgfef
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CellAlignment and its children
func (_fbfd *CT_CellAlignment) Validate() error {
	return _fbfd.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074")
}
func (_ecdbb *CT_colItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeaba := range start.Attr {
		if _aeaba.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfdge, _eadbd := _e.ParseUint(_aeaba.Value, 10, 32)
			if _eadbd != nil {
				return _eadbd
			}
			_gfgea := uint32(_cfdge)
			_ecdbb.CountAttr = &_gfgea
			continue
		}
	}
_gebbe:
	for {
		_bfbgaa, _ccbbd := d.Token()
		if _ccbbd != nil {
			return _ccbbd
		}
		switch _dbbdab := _bfbgaa.(type) {
		case _b.StartElement:
			switch _dbbdab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_affcfe := NewCT_I()
				if _abcbbf := d.DecodeElement(_affcfe, &_dbbdab); _abcbbf != nil {
					return _abcbbf
				}
				_ecdbb.I = append(_ecdbb.I, _affcfe)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _dbbdab.Name)
				if _decfdce := d.Skip(); _decfdce != nil {
					return _decfdce
				}
			}
		case _b.EndElement:
			break _gebbe
		case _b.CharData:
		}
	}
	return nil
}

type ST_ShowDataAs byte

// ValidateWithPath validates the CT_CustomSheetView and its children, prefixing error messages with path
func (_deef *CT_CustomSheetView) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_deef.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _deef.GuidAttr)
	}
	if _fcabe := _deef.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _fcabe != nil {
		return _fcabe
	}
	if _bfaba := _deef.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _bfaba != nil {
		return _bfaba
	}
	if _deef.Pane != nil {
		if _eadbc := _deef.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _eadbc != nil {
			return _eadbc
		}
	}
	if _deef.Selection != nil {
		if _gcegb := _deef.Selection.ValidateWithPath(path + "\u002f\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _gcegb != nil {
			return _gcegb
		}
	}
	if _deef.RowBreaks != nil {
		if _aceba := _deef.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _aceba != nil {
			return _aceba
		}
	}
	if _deef.ColBreaks != nil {
		if _efaeg := _deef.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _efaeg != nil {
			return _efaeg
		}
	}
	if _deef.PageMargins != nil {
		if _adbb := _deef.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _adbb != nil {
			return _adbb
		}
	}
	if _deef.PrintOptions != nil {
		if _cbdde := _deef.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _cbdde != nil {
			return _cbdde
		}
	}
	if _deef.PageSetup != nil {
		if _dbaf := _deef.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _dbaf != nil {
			return _dbaf
		}
	}
	if _deef.HeaderFooter != nil {
		if _dadcf := _deef.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _dadcf != nil {
			return _dadcf
		}
	}
	if _deef.AutoFilter != nil {
		if _aadfa := _deef.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _aadfa != nil {
			return _aadfa
		}
	}
	if _deef.ExtLst != nil {
		if _abaf := _deef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abaf != nil {
			return _abaf
		}
	}
	return nil
}
func (_eeefe ST_OleUpdate) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ecaedc := _b.Attr{}
	_ecaedc.Name = name
	switch _eeefe {
	case ST_OleUpdateUnset:
		_ecaedc.Value = ""
	case ST_OleUpdateOLEUPDATE_ALWAYS:
		_ecaedc.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case ST_OleUpdateOLEUPDATE_ONCALL:
		_ecaedc.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return _ecaedc, nil
}

// Validate validates the CT_CalcChain and its children
func (_dcgg *CT_CalcChain) Validate() error {
	return _dcgg.ValidateWithPath("\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e")
}
func (_dec *CT_CacheFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbbe := range start.Attr {
		if _cbbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aaff, _ebda := _e.ParseUint(_cbbe.Value, 10, 32)
			if _ebda != nil {
				return _ebda
			}
			_ggc := uint32(_aaff)
			_dec.CountAttr = &_ggc
			continue
		}
	}
_ebee:
	for {
		_ecge, _bcdf := d.Token()
		if _bcdf != nil {
			return _bcdf
		}
		switch _eec := _ecge.(type) {
		case _b.StartElement:
			switch _eec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_ggdb := NewCT_CacheField()
				if _fbce := d.DecodeElement(_ggdb, &_eec); _fbce != nil {
					return _fbce
				}
				_dec.CacheField = append(_dec.CacheField, _ggdb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _eec.Name)
				if _bddg := d.Skip(); _bddg != nil {
					return _bddg
				}
			}
		case _b.EndElement:
			break _ebee
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionHeaders and its children, prefixing error messages with path
func (_dadaa *CT_RevisionHeaders) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_dadaa.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _dadaa.GuidAttr)
	}
	if _dadaa.LastGuidAttr != nil {
		if !_c.ST_GuidPatternRe.MatchString(*_dadaa.LastGuidAttr) {
			return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u004c\u0061s\u0074\u0047\u0075i\u0064\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, *_dadaa.LastGuidAttr)
		}
	}
	for _eadae, _ddfcf := range _dadaa.Header {
		if _aaffg := _ddfcf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _eadae)); _aaffg != nil {
			return _aaffg
		}
	}
	return nil
}
func NewCT_Worksheet() *CT_Worksheet {
	_ddaed := &CT_Worksheet{}
	_ddaed.SheetData = NewCT_SheetData()
	return _ddaed
}
func (_cfdfg ST_FileType) ValidateWithPath(path string) error {
	switch _cfdfg {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfdfg))
	}
	return nil
}

// Validate validates the CT_CalculatedMember and its children
func (_aafg *CT_CalculatedMember) Validate() error {
	return _aafg.ValidateWithPath("\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072")
}
func NewCT_CalculatedItem() *CT_CalculatedItem {
	_caag := &CT_CalculatedItem{}
	_caag.PivotArea = NewCT_PivotArea()
	return _caag
}
func (_fadgf *CT_PCDKPIs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fadgf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fadgf.CountAttr)})
	}
	e.EncodeToken(start)
	if _fadgf.Kpi != nil {
		_afgcdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006b\u0070\u0069"}}
		for _, _fcbfb := range _fadgf.Kpi {
			e.EncodeElement(_fcbfb, _afgcdb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RgbColor() *CT_RgbColor { _dcdde := &CT_RgbColor{}; return _dcdde }

// ValidateWithPath validates the CT_NumFmt and its children, prefixing error messages with path
func (_aegaa *CT_NumFmt) ValidateWithPath(path string) error { return nil }
func (_aefba *CT_Top10) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbfae := range start.Attr {
		if _dbfae.Name.Local == "\u0074\u006f\u0070" {
			_abafe, _cfgcfe := _e.ParseBool(_dbfae.Value)
			if _cfgcfe != nil {
				return _cfgcfe
			}
			_aefba.TopAttr = &_abafe
			continue
		}
		if _dbfae.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_dabfbb, _ffabbf := _e.ParseBool(_dbfae.Value)
			if _ffabbf != nil {
				return _ffabbf
			}
			_aefba.PercentAttr = &_dabfbb
			continue
		}
		if _dbfae.Name.Local == "\u0076\u0061\u006c" {
			_dfgdac, _daedfd := _e.ParseFloat(_dbfae.Value, 64)
			if _daedfd != nil {
				return _daedfd
			}
			_aefba.ValAttr = _dfgdac
			continue
		}
		if _dbfae.Name.Local == "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l" {
			_bcagc, _ddgea := _e.ParseFloat(_dbfae.Value, 64)
			if _ddgea != nil {
				return _ddgea
			}
			_aefba.FilterValAttr = &_bcagc
			continue
		}
	}
	for {
		_aegcc, _fceffc := d.Token()
		if _fceffc != nil {
			return _f.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u006f\u0070\u0031\u0030: \u0025\u0073", _fceffc)
		}
		if _gabde, _ddagab := _aegcc.(_b.EndElement); _ddagab && _gabde.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_InputCells() *CT_InputCells { _dfefg := &CT_InputCells{}; return _dfefg }

type CT_VerticalAlignFontProperty struct {

	// Value
	ValAttr _c.ST_VerticalAlignRun
}

const (
	ST_OleUpdateUnset            ST_OleUpdate = 0
	ST_OleUpdateOLEUPDATE_ALWAYS ST_OleUpdate = 1
	ST_OleUpdateOLEUPDATE_ONCALL ST_OleUpdate = 2
)

type Dialogsheet struct{ CT_Dialogsheet }

func (_gefee *ST_ShowDataAs) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gefee = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_gefee = 1
	case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
		*_gefee = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_gefee = 3
	case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
		*_gefee = 4
	case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
		*_gefee = 5
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
		*_gefee = 6
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
		*_gefee = 7
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
		*_gefee = 8
	case "\u0069\u006e\u0064e\u0078":
		*_gefee = 9
	}
	return nil
}
func (_cebcfd *ST_CellComments) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cebcfd = 0
	case "\u006e\u006f\u006e\u0065":
		*_cebcfd = 1
	case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
		*_cebcfd = 2
	case "\u0061\u0074\u0045n\u0064":
		*_cebcfd = 3
	}
	return nil
}

// Validate validates the CT_ExternalLink and its children
func (_cafde *CT_ExternalLink) Validate() error {
	return _cafde.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}

// Validate validates the CT_Dialogsheet and its children
func (_fdbce *CT_Dialogsheet) Validate() error {
	return _fdbce.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074")
}

type CT_CalculatedItems struct {

	// Calculated Item Formula Count
	CountAttr *uint32

	// Calculated Item
	CalculatedItem []*CT_CalculatedItem
}

func NewCT_DefinedName() *CT_DefinedName { _gaada := &CT_DefinedName{}; return _gaada }
func (_agceb ST_DynamicFilterType) String() string {
	switch _agceb {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006c\u006c"
	case 2:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 3:
		return "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 4:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 5:
		return "\u0074\u006f\u0064a\u0079"
	case 6:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 7:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 11:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 12:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 13:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 14:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 15:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 16:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 17:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 18:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 19:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 20:
		return "\u0051\u0031"
	case 21:
		return "\u0051\u0032"
	case 22:
		return "\u0051\u0033"
	case 23:
		return "\u0051\u0034"
	case 24:
		return "\u004d\u0031"
	case 25:
		return "\u004d\u0032"
	case 26:
		return "\u004d\u0033"
	case 27:
		return "\u004d\u0034"
	case 28:
		return "\u004d\u0035"
	case 29:
		return "\u004d\u0036"
	case 30:
		return "\u004d\u0037"
	case 31:
		return "\u004d\u0038"
	case 32:
		return "\u004d\u0039"
	case 33:
		return "\u004d\u0031\u0030"
	case 34:
		return "\u004d\u0031\u0031"
	case 35:
		return "\u004d\u0031\u0032"
	}
	return ""
}
func (_fdffd ST_PhoneticType) Validate() error { return _fdffd.ValidateWithPath("") }

// Validate validates the CT_TableStyleElement and its children
func (_fbafbg *CT_TableStyleElement) Validate() error {
	return _fbafbg.ValidateWithPath("C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074")
}
func (_dada *CT_Dxfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dada.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dada.CountAttr)})
	}
	e.EncodeToken(start)
	if _dada.Dxf != nil {
		_deagd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		for _, _cfega := range _dada.Dxf {
			e.EncodeElement(_cfega, _deagd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Scenario and its children
func (_bfdbbf *CT_Scenario) Validate() error {
	return _bfdbbf.ValidateWithPath("C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f")
}
func (_bcfccd *CT_X) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edfecf := range start.Attr {
		if _edfecf.Name.Local == "\u0076" {
			_fdegcd, _effcf := _e.ParseInt(_edfecf.Value, 10, 32)
			if _effcf != nil {
				return _effcf
			}
			_dgefde := int32(_fdegcd)
			_bcfccd.VAttr = &_dgefde
			continue
		}
	}
	for {
		_bcgee, _gcgbe := d.Token()
		if _gcgbe != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0058\u003a\u0020\u0025\u0073", _gcgbe)
		}
		if _aafdg, _ggega := _bcgee.(_b.EndElement); _ggega && _aafdg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Worksheet and its children, prefixing error messages with path
func (_gfdbad *CT_Worksheet) ValidateWithPath(path string) error {
	if _gfdbad.SheetPr != nil {
		if _eafea := _gfdbad.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _eafea != nil {
			return _eafea
		}
	}
	if _gfdbad.Dimension != nil {
		if _aeeccb := _gfdbad.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _aeeccb != nil {
			return _aeeccb
		}
	}
	if _gfdbad.SheetViews != nil {
		if _fbaab := _gfdbad.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _fbaab != nil {
			return _fbaab
		}
	}
	if _gfdbad.SheetFormatPr != nil {
		if _eadcd := _gfdbad.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _eadcd != nil {
			return _eadcd
		}
	}
	for _afbfgg, _baaaa := range _gfdbad.Cols {
		if _gdgad := _baaaa.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _afbfgg)); _gdgad != nil {
			return _gdgad
		}
	}
	if _eaecgd := _gfdbad.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _eaecgd != nil {
		return _eaecgd
	}
	if _gfdbad.SheetCalcPr != nil {
		if _ebfdg := _gfdbad.SheetCalcPr.ValidateWithPath(path + "\u002f\u0053\u0068e\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"); _ebfdg != nil {
			return _ebfdg
		}
	}
	if _gfdbad.SheetProtection != nil {
		if _bdccf := _gfdbad.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _bdccf != nil {
			return _bdccf
		}
	}
	if _gfdbad.ProtectedRanges != nil {
		if _dafad := _gfdbad.ProtectedRanges.ValidateWithPath(path + "\u002f\u0050r\u006f\u0074\u0065c\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"); _dafad != nil {
			return _dafad
		}
	}
	if _gfdbad.Scenarios != nil {
		if _abgbb := _gfdbad.Scenarios.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"); _abgbb != nil {
			return _abgbb
		}
	}
	if _gfdbad.AutoFilter != nil {
		if _cfdfb := _gfdbad.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _cfdfb != nil {
			return _cfdfb
		}
	}
	if _gfdbad.SortState != nil {
		if _fecbb := _gfdbad.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _fecbb != nil {
			return _fecbb
		}
	}
	if _gfdbad.DataConsolidate != nil {
		if _aedfb := _gfdbad.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _aedfb != nil {
			return _aedfb
		}
	}
	if _gfdbad.CustomSheetViews != nil {
		if _fedbfg := _gfdbad.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _fedbfg != nil {
			return _fedbfg
		}
	}
	if _gfdbad.MergeCells != nil {
		if _debbgb := _gfdbad.MergeCells.ValidateWithPath(path + "/\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"); _debbgb != nil {
			return _debbgb
		}
	}
	if _gfdbad.PhoneticPr != nil {
		if _bfgbd := _gfdbad.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _bfgbd != nil {
			return _bfgbd
		}
	}
	for _eaaff, _bdcadb := range _gfdbad.ConditionalFormatting {
		if _cfaffdb := _bdcadb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _eaaff)); _cfaffdb != nil {
			return _cfaffdb
		}
	}
	if _gfdbad.DataValidations != nil {
		if _fgfdda := _gfdbad.DataValidations.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"); _fgfdda != nil {
			return _fgfdda
		}
	}
	if _gfdbad.Hyperlinks != nil {
		if _afebc := _gfdbad.Hyperlinks.ValidateWithPath(path + "/\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"); _afebc != nil {
			return _afebc
		}
	}
	if _gfdbad.PrintOptions != nil {
		if _fccbca := _gfdbad.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _fccbca != nil {
			return _fccbca
		}
	}
	if _gfdbad.PageMargins != nil {
		if _fggcac := _gfdbad.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _fggcac != nil {
			return _fggcac
		}
	}
	if _gfdbad.PageSetup != nil {
		if _fddbe := _gfdbad.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fddbe != nil {
			return _fddbe
		}
	}
	if _gfdbad.HeaderFooter != nil {
		if _cabca := _gfdbad.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _cabca != nil {
			return _cabca
		}
	}
	if _gfdbad.RowBreaks != nil {
		if _bdgegg := _gfdbad.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _bdgegg != nil {
			return _bdgegg
		}
	}
	if _gfdbad.ColBreaks != nil {
		if _eaddc := _gfdbad.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _eaddc != nil {
			return _eaddc
		}
	}
	if _gfdbad.CustomProperties != nil {
		if _cgffa := _gfdbad.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _cgffa != nil {
			return _cgffa
		}
	}
	if _gfdbad.CellWatches != nil {
		if _ecfdg := _gfdbad.CellWatches.ValidateWithPath(path + "\u002f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"); _ecfdg != nil {
			return _ecfdg
		}
	}
	if _gfdbad.IgnoredErrors != nil {
		if _gbdeg := _gfdbad.IgnoredErrors.ValidateWithPath(path + "\u002f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"); _gbdeg != nil {
			return _gbdeg
		}
	}
	if _gfdbad.SmartTags != nil {
		if _fccab := _gfdbad.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _fccab != nil {
			return _fccab
		}
	}
	if _gfdbad.Drawing != nil {
		if _caeeda := _gfdbad.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _caeeda != nil {
			return _caeeda
		}
	}
	if _gfdbad.LegacyDrawing != nil {
		if _fadaadd := _gfdbad.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _fadaadd != nil {
			return _fadaadd
		}
	}
	if _gfdbad.LegacyDrawingHF != nil {
		if _egfdb := _gfdbad.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _egfdb != nil {
			return _egfdb
		}
	}
	if _gfdbad.DrawingHF != nil {
		if _addfd := _gfdbad.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _addfd != nil {
			return _addfd
		}
	}
	if _gfdbad.Picture != nil {
		if _fggcagg := _gfdbad.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _fggcagg != nil {
			return _fggcagg
		}
	}
	if _gfdbad.OleObjects != nil {
		if _cccgf := _gfdbad.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _cccgf != nil {
			return _cccgf
		}
	}
	if _gfdbad.Controls != nil {
		if _ageced := _gfdbad.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _ageced != nil {
			return _ageced
		}
	}
	if _gfdbad.WebPublishItems != nil {
		if _abfbd := _gfdbad.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _abfbd != nil {
			return _abfbd
		}
	}
	if _gfdbad.TableParts != nil {
		if _bbadfe := _gfdbad.TableParts.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"); _bbadfe != nil {
			return _bbadfe
		}
	}
	if _gfdbad.ExtLst != nil {
		if _cfceb := _gfdbad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfceb != nil {
			return _cfceb
		}
	}
	return nil
}
func (_eegfa ST_Visibility) ValidateWithPath(path string) error {
	switch _eegfa {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eegfa))
	}
	return nil
}
func (_afbd *CT_ExternalLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _afbd.Choice != nil {
		_afbd.Choice.MarshalXML(e, _b.StartElement{})
	}
	if _afbd.ExtLst != nil {
		_gcbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afbd.ExtLst, _gcbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gege *CT_ExternalSheetName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gege.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_gege.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalLinkChoice and its children, prefixing error messages with path
func (_ebaf *CT_ExternalLinkChoice) ValidateWithPath(path string) error {
	if _ebaf.ExternalBook != nil {
		if _cedgg := _ebaf.ExternalBook.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"); _cedgg != nil {
			return _cedgg
		}
	}
	if _ebaf.DdeLink != nil {
		if _gaacb := _ebaf.DdeLink.ValidateWithPath(path + "\u002f\u0044\u0064\u0065\u004c\u0069\u006e\u006b"); _gaacb != nil {
			return _gaacb
		}
	}
	if _ebaf.OleLink != nil {
		if _dedgb := _ebaf.OleLink.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u004c\u0069\u006e\u006b"); _dedgb != nil {
			return _dedgb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColHierarchiesUsage and its children, prefixing error messages with path
func (_cfaf *CT_ColHierarchiesUsage) ValidateWithPath(path string) error {
	for _aceb, _aacg := range _cfaf.ColHierarchyUsage {
		if _ggbd := _aacg.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0043\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _aceb)); _ggbd != nil {
			return _ggbd
		}
	}
	return nil
}

// Validate validates the CT_ChartFormats and its children
func (_cebab *CT_ChartFormats) Validate() error {
	return _cebab.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}
func (_fedcc *CT_PivotCacheDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fedcc.CacheSource = NewCT_CacheSource()
	_fedcc.CacheFields = NewCT_CacheFields()
	for _, _ccgcd := range start.Attr {
		if _ccgcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccgcd.Name.Local == "\u0069\u0064" || _ccgcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ccgcd.Name.Local == "\u0069\u0064" {
			_dbdef, _gdacd := _ccgcd.Value, error(nil)
			if _gdacd != nil {
				return _gdacd
			}
			_fedcc.IdAttr = &_dbdef
			continue
		}
		if _ccgcd.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_afgbd, _ceccgd := _e.ParseBool(_ccgcd.Value)
			if _ceccgd != nil {
				return _ceccgd
			}
			_fedcc.UpgradeOnRefreshAttr = &_afgbd
			continue
		}
		if _ccgcd.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_gbdca, _baddb := _e.ParseBool(_ccgcd.Value)
			if _baddb != nil {
				return _baddb
			}
			_fedcc.TupleCacheAttr = &_gbdca
			continue
		}
		if _ccgcd.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_dfadeg, _agbb := _e.ParseBool(_ccgcd.Value)
			if _agbb != nil {
				return _agbb
			}
			_fedcc.SaveDataAttr = &_dfadeg
			continue
		}
		if _ccgcd.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_decgd, _edffgc := _e.ParseBool(_ccgcd.Value)
			if _edffgc != nil {
				return _edffgc
			}
			_fedcc.SupportSubqueryAttr = &_decgd
			continue
		}
		if _ccgcd.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_ebcb, _gdgbe := _e.ParseBool(_ccgcd.Value)
			if _gdgbe != nil {
				return _gdgbe
			}
			_fedcc.OptimizeMemoryAttr = &_ebcb
			continue
		}
		if _ccgcd.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_geff, _ebeebe := _e.ParseBool(_ccgcd.Value)
			if _ebeebe != nil {
				return _ebeebe
			}
			_fedcc.SupportAdvancedDrillAttr = &_geff
			continue
		}
		if _ccgcd.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_ffffa, _cbdad := _ccgcd.Value, error(nil)
			if _cbdad != nil {
				return _cbdad
			}
			_fedcc.RefreshedByAttr = &_ffffa
			continue
		}
		if _ccgcd.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_dabda, _fcced := ParseStdlibTime(_ccgcd.Value)
			if _fcced != nil {
				return _fcced
			}
			_fedcc.RefreshedDateIsoAttr = &_dabda
			continue
		}
		if _ccgcd.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_gebebg, _cfbdf := _e.ParseBool(_ccgcd.Value)
			if _cfbdf != nil {
				return _cfbdf
			}
			_fedcc.InvalidAttr = &_gebebg
			continue
		}
		if _ccgcd.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_gbdcf, _bccac := _e.ParseBool(_ccgcd.Value)
			if _bccac != nil {
				return _bccac
			}
			_fedcc.BackgroundQueryAttr = &_gbdcf
			continue
		}
		if _ccgcd.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_bfacdad, _effgc := _e.ParseUint(_ccgcd.Value, 10, 32)
			if _effgc != nil {
				return _effgc
			}
			_beege := uint32(_bfacdad)
			_fedcc.MissingItemsLimitAttr = &_beege
			continue
		}
		if _ccgcd.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_debbb, _bcfca := _e.ParseUint(_ccgcd.Value, 10, 8)
			if _bcfca != nil {
				return _bcfca
			}
			_adfafe := uint8(_debbb)
			_fedcc.RefreshedVersionAttr = &_adfafe
			continue
		}
		if _ccgcd.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_egfeg, _caead := _e.ParseBool(_ccgcd.Value)
			if _caead != nil {
				return _caead
			}
			_fedcc.RefreshOnLoadAttr = &_egfeg
			continue
		}
		if _ccgcd.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_eefdb, _gdfed := _e.ParseFloat(_ccgcd.Value, 64)
			if _gdfed != nil {
				return _gdfed
			}
			_fedcc.RefreshedDateAttr = &_eefdb
			continue
		}
		if _ccgcd.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_febb, _bgadfc := _e.ParseUint(_ccgcd.Value, 10, 32)
			if _bgadfc != nil {
				return _bgadfc
			}
			_fgaeb := uint32(_febb)
			_fedcc.RecordCountAttr = &_fgaeb
			continue
		}
		if _ccgcd.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_agbcb, _cgfad := _e.ParseUint(_ccgcd.Value, 10, 8)
			if _cgfad != nil {
				return _cgfad
			}
			_cbgda := uint8(_agbcb)
			_fedcc.CreatedVersionAttr = &_cbgda
			continue
		}
		if _ccgcd.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_bbcdf, _dcbae := _e.ParseUint(_ccgcd.Value, 10, 8)
			if _dcbae != nil {
				return _dcbae
			}
			_fgadd := uint8(_bbcdf)
			_fedcc.MinRefreshableVersionAttr = &_fgadd
			continue
		}
		if _ccgcd.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_addf, _babga := _e.ParseBool(_ccgcd.Value)
			if _babga != nil {
				return _babga
			}
			_fedcc.EnableRefreshAttr = &_addf
			continue
		}
	}
_facgf:
	for {
		_bdaeda, _feffd := d.Token()
		if _feffd != nil {
			return _feffd
		}
		switch _egbdd := _bdaeda.(type) {
		case _b.StartElement:
			switch _egbdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _ggfad := d.DecodeElement(_fedcc.CacheSource, &_egbdd); _ggfad != nil {
					return _ggfad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _ccgga := d.DecodeElement(_fedcc.CacheFields, &_egbdd); _ccgga != nil {
					return _ccgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_fedcc.CacheHierarchies = NewCT_CacheHierarchies()
				if _aedbde := d.DecodeElement(_fedcc.CacheHierarchies, &_egbdd); _aedbde != nil {
					return _aedbde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_fedcc.Kpis = NewCT_PCDKPIs()
				if _dfdbf := d.DecodeElement(_fedcc.Kpis, &_egbdd); _dfdbf != nil {
					return _dfdbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_fedcc.TupleCache = NewCT_TupleCache()
				if _acce := d.DecodeElement(_fedcc.TupleCache, &_egbdd); _acce != nil {
					return _acce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_fedcc.CalculatedItems = NewCT_CalculatedItems()
				if _cfagd := d.DecodeElement(_fedcc.CalculatedItems, &_egbdd); _cfagd != nil {
					return _cfagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_fedcc.CalculatedMembers = NewCT_CalculatedMembers()
				if _gbeca := d.DecodeElement(_fedcc.CalculatedMembers, &_egbdd); _gbeca != nil {
					return _gbeca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_fedcc.Dimensions = NewCT_Dimensions()
				if _fccba := d.DecodeElement(_fedcc.Dimensions, &_egbdd); _fccba != nil {
					return _fccba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_fedcc.MeasureGroups = NewCT_MeasureGroups()
				if _acbcf := d.DecodeElement(_fedcc.MeasureGroups, &_egbdd); _acbcf != nil {
					return _acbcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_fedcc.Maps = NewCT_MeasureDimensionMaps()
				if _gddcd := d.DecodeElement(_fedcc.Maps, &_egbdd); _gddcd != nil {
					return _gddcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fedcc.ExtLst = NewCT_ExtensionList()
				if _fgeg := d.DecodeElement(_fedcc.ExtLst, &_egbdd); _fgeg != nil {
					return _fgeg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _egbdd.Name)
				if _afgef := d.Skip(); _afgef != nil {
					return _afgef
				}
			}
		case _b.EndElement:
			break _facgf
		case _b.CharData:
		}
	}
	return nil
}
func (_bgdea *CT_Error) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _bgdea.VAttr)})
	if _bgdea.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdea.UAttr))})
	}
	if _bgdea.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdea.FAttr))})
	}
	if _bgdea.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_bgdea.CAttr)})
	}
	if _bgdea.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_bgdea.CpAttr)})
	}
	if _bgdea.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_bgdea.InAttr)})
	}
	if _bgdea.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_bgdea.BcAttr)})
	}
	if _bgdea.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_bgdea.FcAttr)})
	}
	if _bgdea.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdea.IAttr))})
	}
	if _bgdea.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdea.UnAttr))})
	}
	if _bgdea.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdea.StAttr))})
	}
	if _bgdea.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bgdea.BAttr))})
	}
	e.EncodeToken(start)
	if _bgdea.Tpls != nil {
		_fgba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_bgdea.Tpls, _fgba)
	}
	if _bgdea.X != nil {
		_gbbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _eeafa := range _bgdea.X {
			e.EncodeElement(_eeafa, _gbbe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbgab *CT_Missing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbfae := range start.Attr {
		if _bbfae.Name.Local == "\u0066\u0063" {
			_eedbd, _gedb := _bbfae.Value, error(nil)
			if _gedb != nil {
				return _gedb
			}
			_dbgab.FcAttr = &_eedbd
			continue
		}
		if _bbfae.Name.Local == "\u0066" {
			_abeg, _dfgbe := _e.ParseBool(_bbfae.Value)
			if _dfgbe != nil {
				return _dfgbe
			}
			_dbgab.FAttr = &_abeg
			continue
		}
		if _bbfae.Name.Local == "\u0063" {
			_cdcee, _gbaag := _bbfae.Value, error(nil)
			if _gbaag != nil {
				return _gbaag
			}
			_dbgab.CAttr = &_cdcee
			continue
		}
		if _bbfae.Name.Local == "\u0063\u0070" {
			_ecccb, _eeceg := _e.ParseUint(_bbfae.Value, 10, 32)
			if _eeceg != nil {
				return _eeceg
			}
			_gffcd := uint32(_ecccb)
			_dbgab.CpAttr = &_gffcd
			continue
		}
		if _bbfae.Name.Local == "\u0069\u006e" {
			_cfbcgd, _fcgdc := _e.ParseUint(_bbfae.Value, 10, 32)
			if _fcgdc != nil {
				return _fcgdc
			}
			_dgbcd := uint32(_cfbcgd)
			_dbgab.InAttr = &_dgbcd
			continue
		}
		if _bbfae.Name.Local == "\u0062\u0063" {
			_cddgd, _bagef := _bbfae.Value, error(nil)
			if _bagef != nil {
				return _bagef
			}
			_dbgab.BcAttr = &_cddgd
			continue
		}
		if _bbfae.Name.Local == "\u0075" {
			_afbfg, _adagd := _e.ParseBool(_bbfae.Value)
			if _adagd != nil {
				return _adagd
			}
			_dbgab.UAttr = &_afbfg
			continue
		}
		if _bbfae.Name.Local == "\u0069" {
			_bdabd, _cgfgd := _e.ParseBool(_bbfae.Value)
			if _cgfgd != nil {
				return _cgfgd
			}
			_dbgab.IAttr = &_bdabd
			continue
		}
		if _bbfae.Name.Local == "\u0075\u006e" {
			_eabaf, _ccadf := _e.ParseBool(_bbfae.Value)
			if _ccadf != nil {
				return _ccadf
			}
			_dbgab.UnAttr = &_eabaf
			continue
		}
		if _bbfae.Name.Local == "\u0073\u0074" {
			_cbbag, _abbac := _e.ParseBool(_bbfae.Value)
			if _abbac != nil {
				return _abbac
			}
			_dbgab.StAttr = &_cbbag
			continue
		}
		if _bbfae.Name.Local == "\u0062" {
			_gdfdcd, _eaed := _e.ParseBool(_bbfae.Value)
			if _eaed != nil {
				return _eaed
			}
			_dbgab.BAttr = &_gdfdcd
			continue
		}
	}
_eecbe:
	for {
		_gdfba, _bfacda := d.Token()
		if _bfacda != nil {
			return _bfacda
		}
		switch _gcegf := _gdfba.(type) {
		case _b.StartElement:
			switch _gcegf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_debde := NewCT_Tuples()
				if _dgcc := d.DecodeElement(_debde, &_gcegf); _dgcc != nil {
					return _dgcc
				}
				_dbgab.Tpls = append(_dbgab.Tpls, _debde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cacfb := NewCT_X()
				if _ddcbcd := d.DecodeElement(_cacfb, &_gcegf); _ddcbcd != nil {
					return _ddcbcd
				}
				_dbgab.X = append(_dbgab.X, _cacfb)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0025\u0076", _gcegf.Name)
				if _befeaf := d.Skip(); _befeaf != nil {
					return _befeaf
				}
			}
		case _b.EndElement:
			break _eecbe
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_MetadataBlock() *CT_MetadataBlock { _fedcb := &CT_MetadataBlock{}; return _fedcb }
func (_gfdagc *CT_Fill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebdga:
	for {
		_eafff, _cfeb := d.Token()
		if _cfeb != nil {
			return _cfeb
		}
		switch _eafac := _eafff.(type) {
		case _b.StartElement:
			switch _eafac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
				_gfdagc.PatternFill = NewCT_PatternFill()
				if _adefd := d.DecodeElement(_gfdagc.PatternFill, &_eafac); _adefd != nil {
					return _adefd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
				_gfdagc.GradientFill = NewCT_GradientFill()
				if _daaaa := d.DecodeElement(_gfdagc.GradientFill, &_eafac); _daaaa != nil {
					return _daaaa
				}
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _eafac.Name)
				if _cgedc := d.Skip(); _cgedc != nil {
					return _cgedc
				}
			}
		case _b.EndElement:
			break _ebdga
		case _b.CharData:
		}
	}
	return nil
}
func (_fegba *CT_DbPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggbde := range start.Attr {
		if _ggbde.Name.Local == "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bfdc, _bddc := _ggbde.Value, error(nil)
			if _bddc != nil {
				return _bddc
			}
			_fegba.ConnectionAttr = _bfdc
			continue
		}
		if _ggbde.Name.Local == "\u0063o\u006d\u006d\u0061\u006e\u0064" {
			_aegc, _cfagf := _ggbde.Value, error(nil)
			if _cfagf != nil {
				return _cfagf
			}
			_fegba.CommandAttr = &_aegc
			continue
		}
		if _ggbde.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064" {
			_cgdf, _baefd := _ggbde.Value, error(nil)
			if _baefd != nil {
				return _baefd
			}
			_fegba.ServerCommandAttr = &_cgdf
			continue
		}
		if _ggbde.Name.Local == "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065" {
			_abafd, _bfdb := _e.ParseUint(_ggbde.Value, 10, 32)
			if _bfdb != nil {
				return _bfdb
			}
			_debcd := uint32(_abafd)
			_fegba.CommandTypeAttr = &_debcd
			continue
		}
	}
	for {
		_ecefb, _ebfg := d.Token()
		if _ebfg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0062\u0050\u0072\u003a\u0020\u0025\u0073", _ebfg)
		}
		if _cbgfd, _cfacc := _ecefb.(_b.EndElement); _cfacc && _cbgfd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcbgfc *CT_Formats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfade := range start.Attr {
		if _dfade.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffeb, _bgdc := _e.ParseUint(_dfade.Value, 10, 32)
			if _bgdc != nil {
				return _bgdc
			}
			_bbag := uint32(_ffeb)
			_dcbgfc.CountAttr = &_bbag
			continue
		}
	}
_faee:
	for {
		_edbfd, _dfcbbca := d.Token()
		if _dfcbbca != nil {
			return _dfcbbca
		}
		switch _cedggf := _edbfd.(type) {
		case _b.StartElement:
			switch _cedggf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}:
				_fedab := NewCT_Format()
				if _cadbd := d.DecodeElement(_fedab, &_cedggf); _cadbd != nil {
					return _cadbd
				}
				_dcbgfc.Format = append(_dcbgfc.Format, _fedab)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _cedggf.Name)
				if _cedbd := d.Skip(); _cedbd != nil {
					return _cedbd
				}
			}
		case _b.EndElement:
			break _faee
		case _b.CharData:
		}
	}
	return nil
}
func (_dbbbf ST_ConditionalFormattingOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aabgc := _b.Attr{}
	_aabgc.Name = name
	switch _dbbbf {
	case ST_ConditionalFormattingOperatorUnset:
		_aabgc.Value = ""
	case ST_ConditionalFormattingOperatorLessThan:
		_aabgc.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorLessThanOrEqual:
		_aabgc.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorEqual:
		_aabgc.Value = "\u0065\u0071\u0075a\u006c"
	case ST_ConditionalFormattingOperatorNotEqual:
		_aabgc.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThanOrEqual:
		_aabgc.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThan:
		_aabgc.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorBetween:
		_aabgc.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorNotBetween:
		_aabgc.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorContainsText:
		_aabgc.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_ConditionalFormattingOperatorNotContains:
		_aabgc.Value = "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_ConditionalFormattingOperatorBeginsWith:
		_aabgc.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_ConditionalFormattingOperatorEndsWith:
		_aabgc.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return _aabgc, nil
}
func (_dadca ST_rwColActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dadca.String(), start)
}

type CT_LevelGroup struct {

	// Group Name
	NameAttr string

	// Unique Group Name
	UniqueNameAttr string

	// Group Caption
	CaptionAttr string

	// Parent Unique Name
	UniqueParentAttr *string

	// Group Id
	IdAttr *int32

	// OLAP Group Members
	GroupMembers *CT_GroupMembers
}

// ValidateWithPath validates the CT_CustomWorkbookViews and its children, prefixing error messages with path
func (_bgcad *CT_CustomWorkbookViews) ValidateWithPath(path string) error {
	for _edba, _dffa := range _bgcad.CustomWorkbookView {
		if _dgdc := _dffa.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0043\u0075\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062o\u006fk\u0056\u0069\u0065\u0077\u005b\u0025\u0064]", path, _edba)); _dgdc != nil {
			return _dgdc
		}
	}
	return nil
}
func NewCT_PageItem() *CT_PageItem { _fdagg := &CT_PageItem{}; return _fdagg }

type Revisions struct{ CT_Revisions }

func NewCT_ExternalSheetName() *CT_ExternalSheetName {
	_abfdge := &CT_ExternalSheetName{}
	return _abfdge
}

// ValidateWithPath validates the CT_PivotArea and its children, prefixing error messages with path
func (_agac *CT_PivotArea) ValidateWithPath(path string) error {
	if _gaacd := _agac.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gaacd != nil {
		return _gaacd
	}
	if _cdabg := _agac.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _cdabg != nil {
		return _cdabg
	}
	if _agac.References != nil {
		if _egcgad := _agac.References.ValidateWithPath(path + "/\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _egcgad != nil {
			return _egcgad
		}
	}
	if _agac.ExtLst != nil {
		if _ggfcd := _agac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggfcd != nil {
			return _ggfcd
		}
	}
	return nil
}
func (_ffb *CT_CellStyleXfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ffb.CountAttr)})
	}
	e.EncodeToken(start)
	_ccef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _gaca := range _ffb.Xf {
		e.EncodeElement(_gaca, _ccef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggegc *CT_Scenarios) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbeed := range start.Attr {
		if _bbeed.Name.Local == "\u0063u\u0072\u0072\u0065\u006e\u0074" {
			_eaaee, _fgeace := _e.ParseUint(_bbeed.Value, 10, 32)
			if _fgeace != nil {
				return _fgeace
			}
			_ebafca := uint32(_eaaee)
			_ggegc.CurrentAttr = &_ebafca
			continue
		}
		if _bbeed.Name.Local == "\u0073\u0068\u006f\u0077" {
			_bddgdb, _edbdb := _e.ParseUint(_bbeed.Value, 10, 32)
			if _edbdb != nil {
				return _edbdb
			}
			_fbbf := uint32(_bddgdb)
			_ggegc.ShowAttr = &_fbbf
			continue
		}
		if _bbeed.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_fdadg, _agdfcf := ParseSliceST_Sqref(_bbeed.Value)
			if _agdfcf != nil {
				return _agdfcf
			}
			_ggegc.SqrefAttr = &_fdadg
			continue
		}
	}
_faccg:
	for {
		_bdgdca, _gddga := d.Token()
		if _gddga != nil {
			return _gddga
		}
		switch _gbcca := _bdgdca.(type) {
		case _b.StartElement:
			switch _gbcca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}:
				_fdafa := NewCT_Scenario()
				if _cbdeg := d.DecodeElement(_fdafa, &_gbcca); _cbdeg != nil {
					return _cbdeg
				}
				_ggegc.Scenario = append(_ggegc.Scenario, _fdafa)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0063\u0065n\u0061\u0072\u0069\u006f\u0073\u0020\u0025\u0076", _gbcca.Name)
				if _cdeaa := d.Skip(); _cdeaa != nil {
					return _cdeaa
				}
			}
		case _b.EndElement:
			break _faccg
		case _b.CharData:
		}
	}
	return nil
}
func (_becbaa *CT_Row) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _becbaa.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_becbaa.RAttr)})
	}
	if _becbaa.SpansAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0061n\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_becbaa.SpansAttr)})
	}
	if _becbaa.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0076", *_becbaa.SAttr)})
	}
	if _becbaa.CustomFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.CustomFormatAttr))})
	}
	if _becbaa.HtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_becbaa.HtAttr)})
	}
	if _becbaa.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.HiddenAttr))})
	}
	if _becbaa.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.CustomHeightAttr))})
	}
	if _becbaa.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_becbaa.OutlineLevelAttr)})
	}
	if _becbaa.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.CollapsedAttr))})
	}
	if _becbaa.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.ThickTopAttr))})
	}
	if _becbaa.ThickBotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.ThickBotAttr))})
	}
	if _becbaa.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_becbaa.PhAttr))})
	}
	e.EncodeToken(start)
	if _becbaa.C != nil {
		_ffaec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063"}}
		for _, _fdbcd := range _becbaa.C {
			e.EncodeElement(_fdbcd, _ffaec)
		}
	}
	if _becbaa.ExtLst != nil {
		_aggbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_becbaa.ExtLst, _aggbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_AutoSortScope() *CT_AutoSortScope {
	_acf := &CT_AutoSortScope{}
	_acf.PivotArea = NewCT_PivotArea()
	return _acf
}

// Validate validates the CT_ObjectAnchor and its children
func (_cagce *CT_ObjectAnchor) Validate() error {
	return _cagce.ValidateWithPath("\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072")
}
func NewCT_MeasureGroup() *CT_MeasureGroup { _dbggd := &CT_MeasureGroup{}; return _dbggd }

// ValidateWithPath validates the CT_RevisionComment and its children, prefixing error messages with path
func (_cabdd *CT_RevisionComment) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_cabdd.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _cabdd.GuidAttr)
	}
	if _abgba := _cabdd.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _abgba != nil {
		return _abgba
	}
	return nil
}
func (_dfgaad *ST_FormatAction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dfgaad = 0
	case "\u0062\u006c\u0061n\u006b":
		*_dfgaad = 1
	case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
		*_dfgaad = 2
	case "\u0064\u0072\u0069l\u006c":
		*_dfgaad = 3
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_dfgaad = 4
	}
	return nil
}

const (
	ST_DataValidationImeModeUnset        ST_DataValidationImeMode = 0
	ST_DataValidationImeModeNoControl    ST_DataValidationImeMode = 1
	ST_DataValidationImeModeOff          ST_DataValidationImeMode = 2
	ST_DataValidationImeModeOn           ST_DataValidationImeMode = 3
	ST_DataValidationImeModeDisabled     ST_DataValidationImeMode = 4
	ST_DataValidationImeModeHiragana     ST_DataValidationImeMode = 5
	ST_DataValidationImeModeFullKatakana ST_DataValidationImeMode = 6
	ST_DataValidationImeModeHalfKatakana ST_DataValidationImeMode = 7
	ST_DataValidationImeModeFullAlpha    ST_DataValidationImeMode = 8
	ST_DataValidationImeModeHalfAlpha    ST_DataValidationImeMode = 9
	ST_DataValidationImeModeFullHangul   ST_DataValidationImeMode = 10
	ST_DataValidationImeModeHalfHangul   ST_DataValidationImeMode = 11
)

func (_gdefb ST_TargetScreenSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcagbec := _b.Attr{}
	_bcagbec.Name = name
	switch _gdefb {
	case ST_TargetScreenSizeUnset:
		_bcagbec.Value = ""
	case ST_TargetScreenSize544x376:
		_bcagbec.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_TargetScreenSize640x480:
		_bcagbec.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_TargetScreenSize720x512:
		_bcagbec.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_TargetScreenSize800x600:
		_bcagbec.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_TargetScreenSize1024x768:
		_bcagbec.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_TargetScreenSize1152x882:
		_bcagbec.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_TargetScreenSize1152x900:
		_bcagbec.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_TargetScreenSize1280x1024:
		_bcagbec.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_TargetScreenSize1600x1200:
		_bcagbec.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_TargetScreenSize1800x1440:
		_bcagbec.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case ST_TargetScreenSize1920x1200:
		_bcagbec.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _bcagbec, nil
}

// ValidateWithPath validates the CT_ColorScale and its children, prefixing error messages with path
func (_adcd *CT_ColorScale) ValidateWithPath(path string) error {
	for _bbda, _bdcag := range _adcd.Cfvo {
		if _ggbea := _bdcag.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _bbda)); _ggbea != nil {
			return _ggbea
		}
	}
	for _dddf, _eaebe := range _adcd.Color {
		if _ggfc := _eaebe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _dddf)); _ggfc != nil {
			return _ggfc
		}
	}
	return nil
}
func NewCT_CalculatedItems() *CT_CalculatedItems { _dgce := &CT_CalculatedItems{}; return _dgce }
func (_cefce *CT_OleObjects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dbbea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _bddcb := range _cefce.OleObject {
		e.EncodeElement(_bddcb, _dbbea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_HierarchyUsage() *CT_HierarchyUsage { _aebfd := &CT_HierarchyUsage{}; return _aebfd }

type ST_OleUpdate byte

func (_aagcc ST_GrowShrinkType) ValidateWithPath(path string) error {
	switch _aagcc {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagcc))
	}
	return nil
}
func (_aaaae ST_SheetState) String() string {
	switch _aaaae {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func (_cccf *CT_ObjectAnchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cccf.MoveWithCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cccf.MoveWithCellsAttr))})
	}
	if _cccf.SizeWithCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cccf.SizeWithCellsAttr))})
	}
	e.EncodeToken(start)
	_geacg := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_cccf.From, _geacg)
	_cacbef := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_cccf.To, _cacbef)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_QueryTableDeletedFields struct {

	// Deleted Fields Count
	CountAttr *uint32

	// Deleted Field
	DeletedField []*CT_DeletedField
}

func (_abaa *CT_DateGroupItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abaa.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	for _, _cedag := range start.Attr {
		if _cedag.Name.Local == "\u0079\u0065\u0061\u0072" {
			_gbfc, _gbcc := _e.ParseUint(_cedag.Value, 10, 16)
			if _gbcc != nil {
				return _gbcc
			}
			_abaa.YearAttr = uint16(_gbfc)
			continue
		}
		if _cedag.Name.Local == "\u006d\u006f\u006et\u0068" {
			_aegde, _geaad := _e.ParseUint(_cedag.Value, 10, 16)
			if _geaad != nil {
				return _geaad
			}
			_gdaa := uint16(_aegde)
			_abaa.MonthAttr = &_gdaa
			continue
		}
		if _cedag.Name.Local == "\u0064\u0061\u0079" {
			_cbfae, _bbacb := _e.ParseUint(_cedag.Value, 10, 16)
			if _bbacb != nil {
				return _bbacb
			}
			_efegg := uint16(_cbfae)
			_abaa.DayAttr = &_efegg
			continue
		}
		if _cedag.Name.Local == "\u0068\u006f\u0075\u0072" {
			_badd, _cfaa := _e.ParseUint(_cedag.Value, 10, 16)
			if _cfaa != nil {
				return _cfaa
			}
			_dfcbb := uint16(_badd)
			_abaa.HourAttr = &_dfcbb
			continue
		}
		if _cedag.Name.Local == "\u006d\u0069\u006e\u0075\u0074\u0065" {
			_gfgga, _badeec := _e.ParseUint(_cedag.Value, 10, 16)
			if _badeec != nil {
				return _badeec
			}
			_feac := uint16(_gfgga)
			_abaa.MinuteAttr = &_feac
			continue
		}
		if _cedag.Name.Local == "\u0073\u0065\u0063\u006f\u006e\u0064" {
			_dcaag, _aeaega := _e.ParseUint(_cedag.Value, 10, 16)
			if _aeaega != nil {
				return _aeaega
			}
			_bddfe := uint16(_dcaag)
			_abaa.SecondAttr = &_bddfe
			continue
		}
		if _cedag.Name.Local == "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067" {
			_abaa.DateTimeGroupingAttr.UnmarshalXMLAttr(_cedag)
			continue
		}
	}
	for {
		_feagc, _abfge := d.Token()
		if _abfge != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065G\u0072o\u0075\u0070\u0049\u0074\u0065\u006d\u003a \u0025\u0073", _abfge)
		}
		if _caeae, _bgbdg := _feagc.(_b.EndElement); _bgbdg && _caeae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egdaec *CT_Worksheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egdaec.SheetData = NewCT_SheetData()
_bggbb:
	for {
		_eaabed, _fdfad := d.Token()
		if _fdfad != nil {
			return _fdfad
		}
		switch _bbbea := _eaabed.(type) {
		case _b.StartElement:
			switch _bbbea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_egdaec.SheetPr = NewCT_SheetPr()
				if _ffdcf := d.DecodeElement(_egdaec.SheetPr, &_bbbea); _ffdcf != nil {
					return _ffdcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_egdaec.Dimension = NewCT_SheetDimension()
				if _agbge := d.DecodeElement(_egdaec.Dimension, &_bbbea); _agbge != nil {
					return _agbge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_egdaec.SheetViews = NewCT_SheetViews()
				if _gdgga := d.DecodeElement(_egdaec.SheetViews, &_bbbea); _gdgga != nil {
					return _gdgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_egdaec.SheetFormatPr = NewCT_SheetFormatPr()
				if _ebbede := d.DecodeElement(_egdaec.SheetFormatPr, &_bbbea); _ebbede != nil {
					return _ebbede
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_cceac := NewCT_Cols()
				if _defdb := d.DecodeElement(_cceac, &_bbbea); _defdb != nil {
					return _defdb
				}
				_egdaec.Cols = append(_egdaec.Cols, _cceac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _bbedeb := d.DecodeElement(_egdaec.SheetData, &_bbbea); _bbedeb != nil {
					return _bbedeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_egdaec.SheetCalcPr = NewCT_SheetCalcPr()
				if _ffdfde := d.DecodeElement(_egdaec.SheetCalcPr, &_bbbea); _ffdfde != nil {
					return _ffdfde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_egdaec.SheetProtection = NewCT_SheetProtection()
				if _acdbb := d.DecodeElement(_egdaec.SheetProtection, &_bbbea); _acdbb != nil {
					return _acdbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_egdaec.ProtectedRanges = NewCT_ProtectedRanges()
				if _fcbab := d.DecodeElement(_egdaec.ProtectedRanges, &_bbbea); _fcbab != nil {
					return _fcbab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_egdaec.Scenarios = NewCT_Scenarios()
				if _daadac := d.DecodeElement(_egdaec.Scenarios, &_bbbea); _daadac != nil {
					return _daadac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_egdaec.AutoFilter = NewCT_AutoFilter()
				if _gcdag := d.DecodeElement(_egdaec.AutoFilter, &_bbbea); _gcdag != nil {
					return _gcdag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_egdaec.SortState = NewCT_SortState()
				if _ebbcc := d.DecodeElement(_egdaec.SortState, &_bbbea); _ebbcc != nil {
					return _ebbcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_egdaec.DataConsolidate = NewCT_DataConsolidate()
				if _bdgdb := d.DecodeElement(_egdaec.DataConsolidate, &_bbbea); _bdgdb != nil {
					return _bdgdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_egdaec.CustomSheetViews = NewCT_CustomSheetViews()
				if _cfcge := d.DecodeElement(_egdaec.CustomSheetViews, &_bbbea); _cfcge != nil {
					return _cfcge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_egdaec.MergeCells = NewCT_MergeCells()
				if _ecfed := d.DecodeElement(_egdaec.MergeCells, &_bbbea); _ecfed != nil {
					return _ecfed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_egdaec.PhoneticPr = NewCT_PhoneticPr()
				if _cbdfb := d.DecodeElement(_egdaec.PhoneticPr, &_bbbea); _cbdfb != nil {
					return _cbdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_cgbga := NewCT_ConditionalFormatting()
				if _ggcgc := d.DecodeElement(_cgbga, &_bbbea); _ggcgc != nil {
					return _ggcgc
				}
				_egdaec.ConditionalFormatting = append(_egdaec.ConditionalFormatting, _cgbga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_egdaec.DataValidations = NewCT_DataValidations()
				if _bffdb := d.DecodeElement(_egdaec.DataValidations, &_bbbea); _bffdb != nil {
					return _bffdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_egdaec.Hyperlinks = NewCT_Hyperlinks()
				if _fagda := d.DecodeElement(_egdaec.Hyperlinks, &_bbbea); _fagda != nil {
					return _fagda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_egdaec.PrintOptions = NewCT_PrintOptions()
				if _aedbg := d.DecodeElement(_egdaec.PrintOptions, &_bbbea); _aedbg != nil {
					return _aedbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_egdaec.PageMargins = NewCT_PageMargins()
				if _daccbb := d.DecodeElement(_egdaec.PageMargins, &_bbbea); _daccbb != nil {
					return _daccbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_egdaec.PageSetup = NewCT_PageSetup()
				if _ffbeab := d.DecodeElement(_egdaec.PageSetup, &_bbbea); _ffbeab != nil {
					return _ffbeab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_egdaec.HeaderFooter = NewCT_HeaderFooter()
				if _edcdg := d.DecodeElement(_egdaec.HeaderFooter, &_bbbea); _edcdg != nil {
					return _edcdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_egdaec.RowBreaks = NewCT_PageBreak()
				if _fbacaa := d.DecodeElement(_egdaec.RowBreaks, &_bbbea); _fbacaa != nil {
					return _fbacaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_egdaec.ColBreaks = NewCT_PageBreak()
				if _efcac := d.DecodeElement(_egdaec.ColBreaks, &_bbbea); _efcac != nil {
					return _efcac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_egdaec.CustomProperties = NewCT_CustomProperties()
				if _cfffg := d.DecodeElement(_egdaec.CustomProperties, &_bbbea); _cfffg != nil {
					return _cfffg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_egdaec.CellWatches = NewCT_CellWatches()
				if _dfdagd := d.DecodeElement(_egdaec.CellWatches, &_bbbea); _dfdagd != nil {
					return _dfdagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_egdaec.IgnoredErrors = NewCT_IgnoredErrors()
				if _aafgce := d.DecodeElement(_egdaec.IgnoredErrors, &_bbbea); _aafgce != nil {
					return _aafgce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_egdaec.SmartTags = NewCT_SmartTags()
				if _ddefe := d.DecodeElement(_egdaec.SmartTags, &_bbbea); _ddefe != nil {
					return _ddefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_egdaec.Drawing = NewCT_Drawing()
				if _aaaac := d.DecodeElement(_egdaec.Drawing, &_bbbea); _aaaac != nil {
					return _aaaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_egdaec.LegacyDrawing = NewCT_LegacyDrawing()
				if _gdbfce := d.DecodeElement(_egdaec.LegacyDrawing, &_bbbea); _gdbfce != nil {
					return _gdbfce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_egdaec.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _efbdg := d.DecodeElement(_egdaec.LegacyDrawingHF, &_bbbea); _efbdg != nil {
					return _efbdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_egdaec.DrawingHF = NewCT_DrawingHF()
				if _aggbfa := d.DecodeElement(_egdaec.DrawingHF, &_bbbea); _aggbfa != nil {
					return _aggbfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_egdaec.Picture = NewCT_SheetBackgroundPicture()
				if _fcgbd := d.DecodeElement(_egdaec.Picture, &_bbbea); _fcgbd != nil {
					return _fcgbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_egdaec.OleObjects = NewCT_OleObjects()
				if _ccggc := d.DecodeElement(_egdaec.OleObjects, &_bbbea); _ccggc != nil {
					return _ccggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_egdaec.Controls = NewCT_Controls()
				if _bacff := d.DecodeElement(_egdaec.Controls, &_bbbea); _bacff != nil {
					return _bacff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_egdaec.WebPublishItems = NewCT_WebPublishItems()
				if _cbcbbc := d.DecodeElement(_egdaec.WebPublishItems, &_bbbea); _cbcbbc != nil {
					return _cbcbbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_egdaec.TableParts = NewCT_TableParts()
				if _deaed := d.DecodeElement(_egdaec.TableParts, &_bbbea); _deaed != nil {
					return _deaed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egdaec.ExtLst = NewCT_ExtensionList()
				if _egbce := d.DecodeElement(_egdaec.ExtLst, &_bbbea); _egbce != nil {
					return _egbce
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_W\u006f\u0072k\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _bbbea.Name)
				if _ebafdd := d.Skip(); _ebafdd != nil {
					return _ebafdd
				}
			}
		case _b.EndElement:
			break _bggbb
		case _b.CharData:
		}
	}
	return nil
}

type CT_RPrElt struct {

	// Font
	RFont *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_IntProperty

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Font Scheme
	Scheme *CT_FontScheme
}

// ValidateWithPath validates the CT_Borders and its children, prefixing error messages with path
func (_agga *CT_Borders) ValidateWithPath(path string) error {
	for _fge, _egbc := range _agga.Border {
		if _ageb := _egbc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _fge)); _ageb != nil {
			return _ageb
		}
	}
	return nil
}

type CT_PivotFilters struct {

	// Pivot Filter Count
	CountAttr *uint32

	// PivotTable Advanced Filter
	Filter []*CT_PivotFilter
}

func (_dcdg *CT_SharedUser) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dcdg.GuidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dcdg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dcdg.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dcdg.DateTimeAttr)})
	e.EncodeToken(start)
	if _dcdg.ExtLst != nil {
		_bcdafc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dcdg.ExtLst, _bcdafc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcabg *CT_XmlCellPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gcabg.IdAttr)})
	if _gcabg.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_gcabg.UniqueNameAttr)})
	}
	e.EncodeToken(start)
	_dbggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0050\u0072"}}
	e.EncodeElement(_gcabg.XmlPr, _dbggc)
	if _gcabg.ExtLst != nil {
		_bdfdcb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcabg.ExtLst, _bdfdcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DataValidationTypeUnset      ST_DataValidationType = 0
	ST_DataValidationTypeNone       ST_DataValidationType = 1
	ST_DataValidationTypeWhole      ST_DataValidationType = 2
	ST_DataValidationTypeDecimal    ST_DataValidationType = 3
	ST_DataValidationTypeList       ST_DataValidationType = 4
	ST_DataValidationTypeDate       ST_DataValidationType = 5
	ST_DataValidationTypeTime       ST_DataValidationType = 6
	ST_DataValidationTypeTextLength ST_DataValidationType = 7
	ST_DataValidationTypeCustom     ST_DataValidationType = 8
)

func (_ebgad *CT_FutureMetadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbdbd := range start.Attr {
		if _cbdbd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fadeee, _ceccg := _cbdbd.Value, error(nil)
			if _ceccg != nil {
				return _ceccg
			}
			_ebgad.NameAttr = _fadeee
			continue
		}
		if _cbdbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcdc, _bbcd := _e.ParseUint(_cbdbd.Value, 10, 32)
			if _bbcd != nil {
				return _bbcd
			}
			_cdfd := uint32(_dcdc)
			_ebgad.CountAttr = &_cdfd
			continue
		}
	}
_ebabad:
	for {
		_dbcd, _eabba := d.Token()
		if _eabba != nil {
			return _eabba
		}
		switch _eddab := _dbcd.(type) {
		case _b.StartElement:
			switch _eddab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_ffcca := NewCT_FutureMetadataBlock()
				if _fbfdfg := d.DecodeElement(_ffcca, &_eddab); _fbfdfg != nil {
					return _fbfdfg
				}
				_ebgad.Bk = append(_ebgad.Bk, _ffcca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebgad.ExtLst = NewCT_ExtensionList()
				if _aaaaa := d.DecodeElement(_ebgad.ExtLst, &_eddab); _aaaaa != nil {
					return _aaaaa
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _eddab.Name)
				if _cfgfbf := d.Skip(); _cfgfbf != nil {
					return _cfgfbf
				}
			}
		case _b.EndElement:
			break _ebabad
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_QueryTableRefresh() *CT_QueryTableRefresh {
	_gfbce := &CT_QueryTableRefresh{}
	_gfbce.QueryTableFields = NewCT_QueryTableFields()
	return _gfbce
}

const (
	ST_GroupByUnset    ST_GroupBy = 0
	ST_GroupByRange    ST_GroupBy = 1
	ST_GroupBySeconds  ST_GroupBy = 2
	ST_GroupByMinutes  ST_GroupBy = 3
	ST_GroupByHours    ST_GroupBy = 4
	ST_GroupByDays     ST_GroupBy = 5
	ST_GroupByMonths   ST_GroupBy = 6
	ST_GroupByQuarters ST_GroupBy = 7
	ST_GroupByYears    ST_GroupBy = 8
)

func (_gedca ST_TimePeriod) String() string {
	switch _gedca {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0064a\u0079"
	case 2:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 3:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 4:
		return "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case 5:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 6:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 7:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return ""
}

// Validate validates the CT_PivotFilter and its children
func (_fcgfa *CT_PivotFilter) Validate() error {
	return _fcgfa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072")
}
func (_bagefe ST_DataValidationType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bagefe.String(), start)
}

type ST_FileType byte

func (_cfdcf *ST_PaneState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddfaa, _ebgbe := d.Token()
	if _ebgbe != nil {
		return _ebgbe
	}
	if _edfdd, _dgdef := _ddfaa.(_b.EndElement); _dgdef && _edfdd.Name == start.Name {
		*_cfdcf = 1
		return nil
	}
	if _bcgae, _afbbf := _ddfaa.(_b.CharData); !_afbbf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddfaa)
	} else {
		switch string(_bcgae) {
		case "":
			*_cfdcf = 0
		case "\u0073\u0070\u006ci\u0074":
			*_cfdcf = 1
		case "\u0066\u0072\u006f\u007a\u0065\u006e":
			*_cfdcf = 2
		case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
			*_cfdcf = 3
		}
	}
	_ddfaa, _ebgbe = d.Token()
	if _ebgbe != nil {
		return _ebgbe
	}
	if _adbfe, _aadbc := _ddfaa.(_b.EndElement); _aadbc && _adbfe.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddfaa)
}
func (_cgeaad ST_ParameterType) String() string {
	switch _cgeaad {
	case 0:
		return ""
	case 1:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	case 2:
		return "\u0076\u0061\u006cu\u0065"
	case 3:
		return "\u0063\u0065\u006c\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_ExternalSheetDataSet and its children, prefixing error messages with path
func (_gebdf *CT_ExternalSheetDataSet) ValidateWithPath(path string) error {
	for _fgfd, _dfgeba := range _gebdf.SheetData {
		if _gbdaf := _dfgeba.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _fgfd)); _gbdaf != nil {
			return _gbdaf
		}
	}
	return nil
}
func (_cgca *CT_CellFormula) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acba := range start.Attr {
		if _acba.Name.Local == "\u0074" {
			_cgca.TAttr.UnmarshalXMLAttr(_acba)
			continue
		}
		if _acba.Name.Local == "\u0061\u0063\u0061" {
			_bfad, _gcag := _e.ParseBool(_acba.Value)
			if _gcag != nil {
				return _gcag
			}
			_cgca.AcaAttr = &_bfad
			continue
		}
		if _acba.Name.Local == "\u0072\u0065\u0066" {
			_fbbg, _afec := _acba.Value, error(nil)
			if _afec != nil {
				return _afec
			}
			_cgca.RefAttr = &_fbbg
			continue
		}
		if _acba.Name.Local == "\u0064\u0074\u0032\u0044" {
			_cfbd, _baec := _e.ParseBool(_acba.Value)
			if _baec != nil {
				return _baec
			}
			_cgca.Dt2DAttr = &_cfbd
			continue
		}
		if _acba.Name.Local == "\u0064\u0074\u0072" {
			_dgddb, _efagb := _e.ParseBool(_acba.Value)
			if _efagb != nil {
				return _efagb
			}
			_cgca.DtrAttr = &_dgddb
			continue
		}
		if _acba.Name.Local == "\u0064\u0065\u006c\u0031" {
			_eeac, _gfg := _e.ParseBool(_acba.Value)
			if _gfg != nil {
				return _gfg
			}
			_cgca.Del1Attr = &_eeac
			continue
		}
		if _acba.Name.Local == "\u0064\u0065\u006c\u0032" {
			_edga, _cga := _e.ParseBool(_acba.Value)
			if _cga != nil {
				return _cga
			}
			_cgca.Del2Attr = &_edga
			continue
		}
		if _acba.Name.Local == "\u0072\u0031" {
			_fabg, _ebgae := _acba.Value, error(nil)
			if _ebgae != nil {
				return _ebgae
			}
			_cgca.R1Attr = &_fabg
			continue
		}
		if _acba.Name.Local == "\u0072\u0032" {
			_ggfa, _bfdf := _acba.Value, error(nil)
			if _bfdf != nil {
				return _bfdf
			}
			_cgca.R2Attr = &_ggfa
			continue
		}
		if _acba.Name.Local == "\u0063\u0061" {
			_acaa, _ddgf := _e.ParseBool(_acba.Value)
			if _ddgf != nil {
				return _ddgf
			}
			_cgca.CaAttr = &_acaa
			continue
		}
		if _acba.Name.Local == "\u0073\u0069" {
			_deae, _daf := _e.ParseUint(_acba.Value, 10, 32)
			if _daf != nil {
				return _daf
			}
			_dffc := uint32(_deae)
			_cgca.SiAttr = &_dffc
			continue
		}
		if _acba.Name.Local == "\u0062\u0078" {
			_cced, _gbc := _e.ParseBool(_acba.Value)
			if _gbc != nil {
				return _gbc
			}
			_cgca.BxAttr = &_cced
			continue
		}
	}
	for {
		_cec, _eadc := d.Token()
		if _eadc != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0046\u006f\u0072\u006d\u0075\u006c\u0061:\u0020\u0025\u0073", _eadc)
		}
		if _fae, _afdd := _cec.(_b.CharData); _afdd {
			_cgca.Content = string(_fae)
		}
		if _fged, _dabd := _cec.(_b.EndElement); _dabd && _fged.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_CalcModeUnset       ST_CalcMode = 0
	ST_CalcModeManual      ST_CalcMode = 1
	ST_CalcModeAuto        ST_CalcMode = 2
	ST_CalcModeAutoNoTable ST_CalcMode = 3
)

func (_ccbab *CT_ExternalRow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afeae := range start.Attr {
		if _afeae.Name.Local == "\u0072" {
			_bggaa, _ggfd := _e.ParseUint(_afeae.Value, 10, 32)
			if _ggfd != nil {
				return _ggfd
			}
			_ccbab.RAttr = uint32(_bggaa)
			continue
		}
	}
_gcge:
	for {
		_bfgb, _acbad := d.Token()
		if _acbad != nil {
			return _acbad
		}
		switch _ffadf := _bfgb.(type) {
		case _b.StartElement:
			switch _ffadf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}:
				_cgece := NewCT_ExternalCell()
				if _afggc := d.DecodeElement(_cgece, &_ffadf); _afggc != nil {
					return _afggc
				}
				_ccbab.Cell = append(_ccbab.Cell, _cgece)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061l\u0052o\u0077\u0020\u0025\u0076", _ffadf.Name)
				if _aadde := d.Skip(); _aadde != nil {
					return _aadde
				}
			}
		case _b.EndElement:
			break _gcge
		case _b.CharData:
		}
	}
	return nil
}
func (_egffcg *CT_TableFormula) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_egffcg.ArrayAttr))})
	e.EncodeElement(_egffcg.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ChartFormats() *CT_ChartFormats { _adbg := &CT_ChartFormats{}; return _adbg }
func (_gcdebb *CT_PivotDimension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _deegdg := range start.Attr {
		if _deegdg.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_eddgc, _cffeb := _e.ParseBool(_deegdg.Value)
			if _cffeb != nil {
				return _cffeb
			}
			_gcdebb.MeasureAttr = &_eddgc
			continue
		}
		if _deegdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dbfed, _fdgfc := _deegdg.Value, error(nil)
			if _fdgfc != nil {
				return _fdgfc
			}
			_gcdebb.NameAttr = _dbfed
			continue
		}
		if _deegdg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bbcgb, _beacc := _deegdg.Value, error(nil)
			if _beacc != nil {
				return _beacc
			}
			_gcdebb.UniqueNameAttr = _bbcgb
			continue
		}
		if _deegdg.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ffdfe, _aeaff := _deegdg.Value, error(nil)
			if _aeaff != nil {
				return _aeaff
			}
			_gcdebb.CaptionAttr = _ffdfe
			continue
		}
	}
	for {
		_faecfa, _dedaf := d.Token()
		if _dedaf != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _dedaf)
		}
		if _faggf, _dgfbd := _faecfa.(_b.EndElement); _dgfbd && _faggf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edfbgb ST_RevisionAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edfbgb.String(), start)
}
func (_gfadf *ST_DataConsolidateFunction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfadf = 0
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_gfadf = 1
	case "\u0063\u006f\u0075n\u0074":
		*_gfadf = 2
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_gfadf = 3
	case "\u006d\u0061\u0078":
		*_gfadf = 4
	case "\u006d\u0069\u006e":
		*_gfadf = 5
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_gfadf = 6
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_gfadf = 7
	case "\u0073t\u0064\u0044\u0065\u0076\u0070":
		*_gfadf = 8
	case "\u0073\u0075\u006d":
		*_gfadf = 9
	case "\u0076\u0061\u0072":
		*_gfadf = 10
	case "\u0076\u0061\u0072\u0070":
		*_gfadf = 11
	}
	return nil
}

// ValidateWithPath validates the CT_ControlPr and its children, prefixing error messages with path
func (_gcea *CT_ControlPr) ValidateWithPath(path string) error {
	if _fbac := _gcea.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _fbac != nil {
		return _fbac
	}
	return nil
}
func (_cafcd *ST_Type) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdcfa, _fdgce := d.Token()
	if _fdgce != nil {
		return _fdgce
	}
	if _afbdf, _bgbg := _fdcfa.(_b.EndElement); _bgbg && _afbdf.Name == start.Name {
		*_cafcd = 1
		return nil
	}
	if _fgfee, _cbfdd := _fdcfa.(_b.CharData); !_cbfdd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdcfa)
	} else {
		switch string(_fgfee) {
		case "":
			*_cafcd = 0
		case "\u006e\u006f\u006e\u0065":
			*_cafcd = 1
		case "\u0061\u006c\u006c":
			*_cafcd = 2
		case "\u0072\u006f\u0077":
			*_cafcd = 3
		case "\u0063\u006f\u006c\u0075\u006d\u006e":
			*_cafcd = 4
		}
	}
	_fdcfa, _fdgce = d.Token()
	if _fdgce != nil {
		return _fdgce
	}
	if _gbgbab, _eeeaa := _fdcfa.(_b.EndElement); _eeeaa && _gbgbab.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdcfa)
}

type CT_Scenarios struct {

	// Current Scenario
	CurrentAttr *uint32

	// Last Shown Scenario
	ShowAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Scenario
	Scenario []*CT_Scenario
}
type CT_IgnoredError struct {

	// Sequence of References
	SqrefAttr ST_Sqref

	// Evaluation Error
	EvalErrorAttr *bool

	// Two Digit Text Year
	TwoDigitTextYearAttr *bool

	// Number Stored As Text
	NumberStoredAsTextAttr *bool

	// Formula
	FormulaAttr *bool

	// Formula Range
	FormulaRangeAttr *bool

	// Unlocked Formula
	UnlockedFormulaAttr *bool

	// Empty Cell Reference
	EmptyCellReferenceAttr *bool

	// List Data Validation
	ListDataValidationAttr *bool

	// Calculated Column
	CalculatedColumnAttr *bool
}

// ValidateWithPath validates the CT_Sheet and its children, prefixing error messages with path
func (_edfea *CT_Sheet) ValidateWithPath(path string) error {
	if _ecfega := _edfea.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _ecfega != nil {
		return _ecfega
	}
	return nil
}

type CT_CacheFields struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field
	CacheField []*CT_CacheField
}

func NewCT_RowHierarchiesUsage() *CT_RowHierarchiesUsage {
	_deefd := &CT_RowHierarchiesUsage{}
	return _deefd
}

// ValidateWithPath validates the CT_FilterColumn and its children, prefixing error messages with path
func (_bccgb *CT_FilterColumn) ValidateWithPath(path string) error {
	if _bccgb.Filters != nil {
		if _eeged := _bccgb.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _eeged != nil {
			return _eeged
		}
	}
	if _bccgb.Top10 != nil {
		if _fcdcd := _bccgb.Top10.ValidateWithPath(path + "\u002f\u0054\u006f\u0070\u0031\u0030"); _fcdcd != nil {
			return _fcdcd
		}
	}
	if _bccgb.CustomFilters != nil {
		if _ddfee := _bccgb.CustomFilters.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"); _ddfee != nil {
			return _ddfee
		}
	}
	if _bccgb.DynamicFilter != nil {
		if _ffaab := _bccgb.DynamicFilter.ValidateWithPath(path + "\u002f\u0044\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"); _ffaab != nil {
			return _ffaab
		}
	}
	if _bccgb.ColorFilter != nil {
		if _bfff := _bccgb.ColorFilter.ValidateWithPath(path + "\u002f\u0043\u006fl\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"); _bfff != nil {
			return _bfff
		}
	}
	if _bccgb.IconFilter != nil {
		if _ceebc := _bccgb.IconFilter.ValidateWithPath(path + "/\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"); _ceebc != nil {
			return _ceebc
		}
	}
	if _bccgb.ExtLst != nil {
		if _ccbbb := _bccgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccbbb != nil {
			return _ccbbb
		}
	}
	return nil
}
func (_bfedfg ST_ParameterType) Validate() error { return _bfedfg.ValidateWithPath("") }

// ValidateWithPath validates the CT_FileSharing and its children, prefixing error messages with path
func (_fbbce *CT_FileSharing) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_MRUColors and its children
func (_abgae *CT_MRUColors) Validate() error {
	return _abgae.ValidateWithPath("\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073")
}

// Validate validates the CT_Font and its children
func (_ddbdb *CT_Font) Validate() error {
	return _ddbdb.ValidateWithPath("\u0043T\u005f\u0046\u006f\u006e\u0074")
}
func (_ffdedd ST_DataConsolidateFunction) String() string {
	switch _ffdedd {
	case 0:
		return ""
	case 1:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u006d\u0069\u006e"
	case 6:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 7:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 8:
		return "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case 9:
		return "\u0073\u0075\u006d"
	case 10:
		return "\u0076\u0061\u0072"
	case 11:
		return "\u0076\u0061\u0072\u0070"
	}
	return ""
}

const (
	ST_MdxKPIPropertyUnset ST_MdxKPIProperty = 0
	ST_MdxKPIPropertyV     ST_MdxKPIProperty = 1
	ST_MdxKPIPropertyG     ST_MdxKPIProperty = 2
	ST_MdxKPIPropertyS     ST_MdxKPIProperty = 3
	ST_MdxKPIPropertyT     ST_MdxKPIProperty = 4
	ST_MdxKPIPropertyW     ST_MdxKPIProperty = 5
	ST_MdxKPIPropertyM     ST_MdxKPIProperty = 6
)

func (_cdbee ST_PatternType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_effcd := _b.Attr{}
	_effcd.Name = name
	switch _cdbee {
	case ST_PatternTypeUnset:
		_effcd.Value = ""
	case ST_PatternTypeNone:
		_effcd.Value = "\u006e\u006f\u006e\u0065"
	case ST_PatternTypeSolid:
		_effcd.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PatternTypeMediumGray:
		_effcd.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case ST_PatternTypeDarkGray:
		_effcd.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PatternTypeLightGray:
		_effcd.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PatternTypeDarkHorizontal:
		_effcd.Value = "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case ST_PatternTypeDarkVertical:
		_effcd.Value = "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeDarkDown:
		_effcd.Value = "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case ST_PatternTypeDarkUp:
		_effcd.Value = "\u0064\u0061\u0072\u006b\u0055\u0070"
	case ST_PatternTypeDarkGrid:
		_effcd.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case ST_PatternTypeDarkTrellis:
		_effcd.Value = "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeLightHorizontal:
		_effcd.Value = "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case ST_PatternTypeLightVertical:
		_effcd.Value = "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeLightDown:
		_effcd.Value = "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case ST_PatternTypeLightUp:
		_effcd.Value = "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case ST_PatternTypeLightGrid:
		_effcd.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case ST_PatternTypeLightTrellis:
		_effcd.Value = "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeGray125:
		_effcd.Value = "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case ST_PatternTypeGray0625:
		_effcd.Value = "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return _effcd, nil
}
func (_fabegc *Connections) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fabegc.CT_Connections = *NewCT_Connections()
_gacdg:
	for {
		_gdeea, _dfbcfd := d.Token()
		if _dfbcfd != nil {
			return _dfbcfd
		}
		switch _bbfed := _gdeea.(type) {
		case _b.StartElement:
			switch _bbfed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_feeegd := NewCT_Connection()
				if _afggbb := d.DecodeElement(_feeegd, &_bbfed); _afggbb != nil {
					return _afggbb
				}
				_fabegc.Connection = append(_fabegc.Connection, _feeegd)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _bbfed.Name)
				if _eaecd := d.Skip(); _eaecd != nil {
					return _eaecd
				}
			}
		case _b.EndElement:
			break _gacdg
		case _b.CharData:
		}
	}
	return nil
}
func (_cfebd *CT_OleObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfebd.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cfebd.ProgIdAttr)})
	}
	if _cfebd.DvAspectAttr != ST_DvAspectUnset {
		_gaagg, _cagccd := _cfebd.DvAspectAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074"})
		if _cagccd != nil {
			return _cagccd
		}
		start.Attr = append(start.Attr, _gaagg)
	}
	if _cfebd.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _f.Sprintf("\u0025\u0076", *_cfebd.LinkAttr)})
	}
	if _cfebd.OleUpdateAttr != ST_OleUpdateUnset {
		_babgb, _gcafe := _cfebd.OleUpdateAttr.MarshalXMLAttr(_b.Name{Local: "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e"})
		if _gcafe != nil {
			return _gcafe
		}
		start.Attr = append(start.Attr, _babgb)
	}
	if _cfebd.AutoLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfebd.AutoLoadAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cfebd.ShapeIdAttr)})
	if _cfebd.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cfebd.IdAttr)})
	}
	e.EncodeToken(start)
	if _cfebd.ObjectPr != nil {
		_ebadf := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}}
		e.EncodeElement(_cfebd.ObjectPr, _ebadf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Parameter() *CT_Parameter { _gddge := &CT_Parameter{}; return _gddge }
func (_dggaeb *ST_SortMethod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dggaeb = 0
	case "\u0073\u0074\u0072\u006f\u006b\u0065":
		*_dggaeb = 1
	case "\u0070\u0069\u006e\u0059\u0069\u006e":
		*_dggaeb = 2
	case "\u006e\u006f\u006e\u0065":
		*_dggaeb = 3
	}
	return nil
}

const (
	ST_CellFormulaTypeUnset     ST_CellFormulaType = 0
	ST_CellFormulaTypeNormal    ST_CellFormulaType = 1
	ST_CellFormulaTypeArray     ST_CellFormulaType = 2
	ST_CellFormulaTypeDataTable ST_CellFormulaType = 3
	ST_CellFormulaTypeShared    ST_CellFormulaType = 4
)

func (_cfedb *ST_PatternType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_debfeg, _fffagf := d.Token()
	if _fffagf != nil {
		return _fffagf
	}
	if _dgfdc, _fbdagc := _debfeg.(_b.EndElement); _fbdagc && _dgfdc.Name == start.Name {
		*_cfedb = 1
		return nil
	}
	if _cdfedf, _aedff := _debfeg.(_b.CharData); !_aedff {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _debfeg)
	} else {
		switch string(_cdfedf) {
		case "":
			*_cfedb = 0
		case "\u006e\u006f\u006e\u0065":
			*_cfedb = 1
		case "\u0073\u006f\u006ci\u0064":
			*_cfedb = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
			*_cfedb = 3
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_cfedb = 4
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_cfedb = 5
		case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
			*_cfedb = 6
		case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_cfedb = 7
		case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
			*_cfedb = 8
		case "\u0064\u0061\u0072\u006b\u0055\u0070":
			*_cfedb = 9
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
			*_cfedb = 10
		case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_cfedb = 11
		case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
			*_cfedb = 12
		case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_cfedb = 13
		case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
			*_cfedb = 14
		case "\u006ci\u0067\u0068\u0074\u0055\u0070":
			*_cfedb = 15
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
			*_cfedb = 16
		case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_cfedb = 17
		case "\u0067r\u0061\u0079\u0031\u0032\u0035":
			*_cfedb = 18
		case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
			*_cfedb = 19
		}
	}
	_debfeg, _fffagf = d.Token()
	if _fffagf != nil {
		return _fffagf
	}
	if _efgffe, _ceccgb := _debfeg.(_b.EndElement); _ceccgb && _efgffe.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _debfeg)
}
func (_dfdcg *CT_Users) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afcdg := range start.Attr {
		if _afcdg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdbead, _ecgdg := _e.ParseUint(_afcdg.Value, 10, 32)
			if _ecgdg != nil {
				return _ecgdg
			}
			_bbdd := uint32(_fdbead)
			_dfdcg.CountAttr = &_bbdd
			continue
		}
	}
_fbcec:
	for {
		_ecgcd, _caebd := d.Token()
		if _caebd != nil {
			return _caebd
		}
		switch _fabcg := _ecgcd.(type) {
		case _b.StartElement:
			switch _fabcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_dcbab := NewCT_SharedUser()
				if _dafda := d.DecodeElement(_dcbab, &_fabcg); _dafda != nil {
					return _dafda
				}
				_dfdcg.UserInfo = append(_dfdcg.UserInfo, _dcbab)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073\u0020\u0025\u0076", _fabcg.Name)
				if _ffbgcf := d.Skip(); _ffbgcf != nil {
					return _ffbgcf
				}
			}
		case _b.EndElement:
			break _fbcec
		case _b.CharData:
		}
	}
	return nil
}
func (_adfcgd ST_SmartTagShow) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fegdf := _b.Attr{}
	_fegdf.Name = name
	switch _adfcgd {
	case ST_SmartTagShowUnset:
		_fegdf.Value = ""
	case ST_SmartTagShowAll:
		_fegdf.Value = "\u0061\u006c\u006c"
	case ST_SmartTagShowNone:
		_fegdf.Value = "\u006e\u006f\u006e\u0065"
	case ST_SmartTagShowNoIndicator:
		_fegdf.Value = "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return _fegdf, nil
}

// ValidateWithPath validates the CT_ObjectAnchor and its children, prefixing error messages with path
func (_ceacg *CT_ObjectAnchor) ValidateWithPath(path string) error {
	if _fgcag := _ceacg.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _fgcag != nil {
		return _fgcag
	}
	if _dgcbb := _ceacg.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _dgcbb != nil {
		return _dgcbb
	}
	return nil
}
func NewCT_TableFormula() *CT_TableFormula { _edeed := &CT_TableFormula{}; return _edeed }
func (_acfac *CT_MemberProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acfac.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_acfac.CountAttr)})
	}
	e.EncodeToken(start)
	_egdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0070"}}
	for _, _ebdff := range _acfac.Mp {
		e.EncodeElement(_ebdff, _egdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Dimensions and its children
func (_adcg *CT_Dimensions) Validate() error {
	return _adcg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073")
}

// ValidateWithPath validates the CT_CustomChartsheetViews and its children, prefixing error messages with path
func (_babea *CT_CustomChartsheetViews) ValidateWithPath(path string) error {
	for _cade, _bcfdg := range _babea.CustomSheetView {
		if _ebdfd := _bcfdg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _cade)); _ebdfd != nil {
			return _ebdfd
		}
	}
	return nil
}
func NewCT_PivotSelection() *CT_PivotSelection {
	_dgadd := &CT_PivotSelection{}
	_dgadd.PivotArea = NewCT_PivotArea()
	return _dgadd
}
func (_gbecg *CT_InputCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", _gbecg.RAttr)})
	if _gbecg.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbecg.DeletedAttr))})
	}
	if _gbecg.UndoneAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0064\u006f\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbecg.UndoneAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _gbecg.ValAttr)})
	if _gbecg.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gbecg.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbcca ST_CalcMode) Validate() error { return _fbcca.ValidateWithPath("") }

// Validate validates the CT_Extension and its children
func (_eafa *CT_Extension) Validate() error {
	return _eafa.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_RevisionAutoFormatting and its children
func (_fgafc *CT_RevisionAutoFormatting) Validate() error {
	return _fgafc.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg")
}

type CT_CellXfs struct {

	// Format Count
	CountAttr *uint32

	// Format
	Xf []*CT_Xf
}
type CT_VolTopicRef struct {

	// Reference
	RAttr string

	// Sheet Id
	SAttr uint32
}

func (_bbcbec ST_MdxSetOrder) Validate() error { return _bbcbec.ValidateWithPath("") }

// ValidateWithPath validates the CT_ProtectedRange and its children, prefixing error messages with path
func (_bafe *CT_ProtectedRange) ValidateWithPath(path string) error { return nil }
func (_cgcebf *CT_VerticalAlignFontProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgcebf.ValAttr = _c.ST_VerticalAlignRun(1)
	for _, _abdcda := range start.Attr {
		if _abdcda.Name.Local == "\u0076\u0061\u006c" {
			_cgcebf.ValAttr.UnmarshalXMLAttr(_abdcda)
			continue
		}
	}
	for {
		_agbaf, _bdcea := d.Token()
		if _bdcea != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006cA\u006c\u0069\u0067\u006e\u0046\u006f\u006e\u0074\u0050\u0072op\u0065\u0072\u0074y\u003a \u0025\u0073", _bdcea)
		}
		if _efeee, _gadbc := _agbaf.(_b.EndElement); _gadbc && _efeee.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_DateTimeGrouping byte

func NewCT_PivotCacheDefinition() *CT_PivotCacheDefinition {
	_ggggc := &CT_PivotCacheDefinition{}
	_ggggc.CacheSource = NewCT_CacheSource()
	_ggggc.CacheFields = NewCT_CacheFields()
	return _ggggc
}
func (_cadfd *CT_Font) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cadfd.Name != nil {
		_efbeeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0061\u006d\u0065"}}
		for _, _baffe := range _cadfd.Name {
			e.EncodeElement(_baffe, _efbeeb)
		}
	}
	if _cadfd.Charset != nil {
		_aceg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		for _, _degdc := range _cadfd.Charset {
			e.EncodeElement(_degdc, _aceg)
		}
	}
	if _cadfd.Family != nil {
		_bdad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		for _, _fgeef := range _cadfd.Family {
			e.EncodeElement(_fgeef, _bdad)
		}
	}
	if _cadfd.B != nil {
		_fbcabc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _dcebd := range _cadfd.B {
			e.EncodeElement(_dcebd, _fbcabc)
		}
	}
	if _cadfd.I != nil {
		_gffdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
		for _, _fefce := range _cadfd.I {
			e.EncodeElement(_fefce, _gffdg)
		}
	}
	if _cadfd.Strike != nil {
		_fagfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		for _, _adaag := range _cadfd.Strike {
			e.EncodeElement(_adaag, _fagfc)
		}
	}
	if _cadfd.Outline != nil {
		_eegebf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		for _, _adaaa := range _cadfd.Outline {
			e.EncodeElement(_adaaa, _eegebf)
		}
	}
	if _cadfd.Shadow != nil {
		_adebd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		for _, _bcecg := range _cadfd.Shadow {
			e.EncodeElement(_bcecg, _adebd)
		}
	}
	if _cadfd.Condense != nil {
		_ddede := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		for _, _bcccf := range _cadfd.Condense {
			e.EncodeElement(_bcccf, _ddede)
		}
	}
	if _cadfd.Extend != nil {
		_egfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		for _, _gcdbd := range _cadfd.Extend {
			e.EncodeElement(_gcdbd, _egfa)
		}
	}
	if _cadfd.Color != nil {
		_aaga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		for _, _eaegg := range _cadfd.Color {
			e.EncodeElement(_eaegg, _aaga)
		}
	}
	if _cadfd.Sz != nil {
		_bgcfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u007a"}}
		for _, _ebcfc := range _cadfd.Sz {
			e.EncodeElement(_ebcfc, _bgcfd)
		}
	}
	if _cadfd.U != nil {
		_fegg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0075"}}
		for _, _dgegb := range _cadfd.U {
			e.EncodeElement(_dgegb, _fegg)
		}
	}
	if _cadfd.VertAlign != nil {
		_dgabg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		for _, _bacf := range _cadfd.VertAlign {
			e.EncodeElement(_bacf, _dgabg)
		}
	}
	if _cadfd.Scheme != nil {
		_fbcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		for _, _adegb := range _cadfd.Scheme {
			e.EncodeElement(_adegb, _fbcg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetPr and its children, prefixing error messages with path
func (_cgcfcg *CT_SheetPr) ValidateWithPath(path string) error {
	if _cgcfcg.TabColor != nil {
		if _dcgdc := _cgcfcg.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _dcgdc != nil {
			return _dcgdc
		}
	}
	if _cgcfcg.OutlinePr != nil {
		if _bfaga := _cgcfcg.OutlinePr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"); _bfaga != nil {
			return _bfaga
		}
	}
	if _cgcfcg.PageSetUpPr != nil {
		if _geffg := _cgcfcg.PageSetUpPr.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"); _geffg != nil {
			return _geffg
		}
	}
	return nil
}
func (_fabbbfd ST_PivotFilterType) String() string {
	switch _fabbbfd {
	case 0:
		return ""
	case 1:
		return "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "\u0073\u0075\u006d"
	case 5:
		return "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case 8:
		return "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case 9:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 10:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case 11:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 12:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case 13:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case 14:
		return "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case 15:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 16:
		return "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case 17:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 18:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 19:
		return "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case 20:
		return "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 21:
		return "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 22:
		return "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 23:
		return "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 24:
		return "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 25:
		return "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 26:
		return "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 27:
		return "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case 28:
		return "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 29:
		return "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case 30:
		return "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 31:
		return "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case 32:
		return "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 33:
		return "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 34:
		return "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 35:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 36:
		return "\u0074\u006f\u0064a\u0079"
	case 37:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 38:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 39:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 40:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 41:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 42:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 43:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 44:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 45:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 46:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 47:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 48:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 49:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 50:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 51:
		return "\u0051\u0031"
	case 52:
		return "\u0051\u0032"
	case 53:
		return "\u0051\u0033"
	case 54:
		return "\u0051\u0034"
	case 55:
		return "\u004d\u0031"
	case 56:
		return "\u004d\u0032"
	case 57:
		return "\u004d\u0033"
	case 58:
		return "\u004d\u0034"
	case 59:
		return "\u004d\u0035"
	case 60:
		return "\u004d\u0036"
	case 61:
		return "\u004d\u0037"
	case 62:
		return "\u004d\u0038"
	case 63:
		return "\u004d\u0039"
	case 64:
		return "\u004d\u0031\u0030"
	case 65:
		return "\u004d\u0031\u0031"
	case 66:
		return "\u004d\u0031\u0032"
	}
	return ""
}
func NewRevisions() *Revisions {
	_bfaecad := &Revisions{}
	_bfaecad.CT_Revisions = *NewCT_Revisions()
	return _bfaecad
}

// Validate validates the CT_TableStyles and its children
func (_fgagd *CT_TableStyles) Validate() error {
	return _fgagd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073")
}

type CT_MdxMetadata struct {

	// MDX Metadata Record Count
	CountAttr *uint32

	// MDX Metadata Record
	Mdx []*CT_Mdx
}

func (_deebf ST_DataValidationOperator) Validate() error { return _deebf.ValidateWithPath("") }
func (_fbffdd *ST_CredMethod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfbeg, _cefff := d.Token()
	if _cefff != nil {
		return _cefff
	}
	if _gabgf, _eebed := _bfbeg.(_b.EndElement); _eebed && _gabgf.Name == start.Name {
		*_fbffdd = 1
		return nil
	}
	if _fbfcgd, _dcdbb := _bfbeg.(_b.CharData); !_dcdbb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfbeg)
	} else {
		switch string(_fbfcgd) {
		case "":
			*_fbffdd = 0
		case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
			*_fbffdd = 1
		case "\u006e\u006f\u006e\u0065":
			*_fbffdd = 2
		case "\u0073\u0074\u006f\u0072\u0065\u0064":
			*_fbffdd = 3
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_fbffdd = 4
		}
	}
	_bfbeg, _cefff = d.Token()
	if _cefff != nil {
		return _cefff
	}
	if _gbgdg, _baadca := _bfbeg.(_b.EndElement); _baadca && _gbgdg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfbeg)
}
func (_cada *CT_CsPageSetup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _baae := range start.Attr {
		if _baae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _baae.Name.Local == "\u0069\u0064" || _baae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _baae.Name.Local == "\u0069\u0064" {
			_edfff, _cbgdc := _baae.Value, error(nil)
			if _cbgdc != nil {
				return _cbgdc
			}
			_cada.IdAttr = &_edfff
			continue
		}
		if _baae.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_acffg, _cece := _e.ParseUint(_baae.Value, 10, 32)
			if _cece != nil {
				return _cece
			}
			_aaab := uint32(_acffg)
			_cada.PaperSizeAttr = &_aaab
			continue
		}
		if _baae.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_fefb, _afgca := _baae.Value, error(nil)
			if _afgca != nil {
				return _afgca
			}
			_cada.PaperWidthAttr = &_fefb
			continue
		}
		if _baae.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_gdacb, _eaaac := _e.ParseUint(_baae.Value, 10, 32)
			if _eaaac != nil {
				return _eaaac
			}
			_ffac := uint32(_gdacb)
			_cada.FirstPageNumberAttr = &_ffac
			continue
		}
		if _baae.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_cada.OrientationAttr.UnmarshalXMLAttr(_baae)
			continue
		}
		if _baae.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_egdec, _debgc := _e.ParseBool(_baae.Value)
			if _debgc != nil {
				return _debgc
			}
			_cada.UsePrinterDefaultsAttr = &_egdec
			continue
		}
		if _baae.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_eeec, _bcge := _baae.Value, error(nil)
			if _bcge != nil {
				return _bcge
			}
			_cada.PaperHeightAttr = &_eeec
			continue
		}
		if _baae.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_eegf, _begc := _e.ParseBool(_baae.Value)
			if _begc != nil {
				return _begc
			}
			_cada.DraftAttr = &_eegf
			continue
		}
		if _baae.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_bdcb, _gbbae := _e.ParseBool(_baae.Value)
			if _gbbae != nil {
				return _gbbae
			}
			_cada.UseFirstPageNumberAttr = &_bdcb
			continue
		}
		if _baae.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_gfcg, _cfeg := _e.ParseUint(_baae.Value, 10, 32)
			if _cfeg != nil {
				return _cfeg
			}
			_deafg := uint32(_gfcg)
			_cada.HorizontalDpiAttr = &_deafg
			continue
		}
		if _baae.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_dacge, _gfdag := _e.ParseUint(_baae.Value, 10, 32)
			if _gfdag != nil {
				return _gfdag
			}
			_gbdc := uint32(_dacge)
			_cada.VerticalDpiAttr = &_gbdc
			continue
		}
		if _baae.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_eebbd, _acddc := _e.ParseUint(_baae.Value, 10, 32)
			if _acddc != nil {
				return _acddc
			}
			_dgga := uint32(_eebbd)
			_cada.CopiesAttr = &_dgga
			continue
		}
		if _baae.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_fcddf, _adab := _e.ParseBool(_baae.Value)
			if _adab != nil {
				return _adab
			}
			_cada.BlackAndWhiteAttr = &_fcddf
			continue
		}
	}
	for {
		_bcabd, _ecbdg := d.Token()
		if _ecbdg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0073\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070:\u0020\u0025\u0073", _ecbdg)
		}
		if _fcge, _fdeb := _bcabd.(_b.EndElement); _fdeb && _fcge.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccadg *CT_MetadataBlock) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddbbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0063"}}
	for _, _adffc := range _ccadg.Rc {
		e.EncodeElement(_adffc, _ddbbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the SingleXmlCells and its children, prefixing error messages with path
func (_feaea *SingleXmlCells) ValidateWithPath(path string) error {
	if _bcdac := _feaea.CT_SingleXmlCells.ValidateWithPath(path); _bcdac != nil {
		return _bcdac
	}
	return nil
}

type CT_Fonts struct {

	// Font Count
	CountAttr *uint32

	// Font
	Font []*CT_Font
}

func (_fdfbfd *Users) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdfbfd.CT_Users = *NewCT_Users()
	for _, _fdfgb := range start.Attr {
		if _fdfgb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbgbeb, _afggcb := _e.ParseUint(_fdfgb.Value, 10, 32)
			if _afggcb != nil {
				return _afggcb
			}
			_baeafa := uint32(_bbgbeb)
			_fdfbfd.CountAttr = &_baeafa
			continue
		}
	}
_edfgcc:
	for {
		_fdddgc, _aafad := d.Token()
		if _aafad != nil {
			return _aafad
		}
		switch _befdae := _fdddgc.(type) {
		case _b.StartElement:
			switch _befdae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_dcdea := NewCT_SharedUser()
				if _aagcab := d.DecodeElement(_dcdea, &_befdae); _aagcab != nil {
					return _aagcab
				}
				_fdfbfd.UserInfo = append(_fdfbfd.UserInfo, _dcdea)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0055\u0073\u0065r\u0073 \u0025\u0076", _befdae.Name)
				if _bgadce := d.Skip(); _bgadce != nil {
					return _bgadce
				}
			}
		case _b.EndElement:
			break _edfgcc
		case _b.CharData:
		}
	}
	return nil
}
func (_gcagg ST_VolDepType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gcagg.String(), start)
}

type CT_Table struct {

	// Table Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Table Name
	DisplayNameAttr string

	// Table Comment
	CommentAttr *string

	// Reference
	RefAttr string

	// Table Type
	TableTypeAttr ST_TableType

	// Header Row Count
	HeaderRowCountAttr *uint32

	// Insert Row Showing
	InsertRowAttr *bool

	// Insert Row Shift
	InsertRowShiftAttr *bool

	// Totals Row Count
	TotalsRowCountAttr *uint32

	// Totals Row Shown
	TotalsRowShownAttr *bool

	// Published
	PublishedAttr *bool

	// Header Row Format Id
	HeaderRowDxfIdAttr *uint32

	// Data Area Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Border Format Id
	HeaderRowBorderDxfIdAttr *uint32

	// Table Border Format Id
	TableBorderDxfIdAttr *uint32

	// Totals Row Border Format Id
	TotalsRowBorderDxfIdAttr *uint32

	// Header Row Style
	HeaderRowCellStyleAttr *string

	// Data Style Name
	DataCellStyleAttr *string

	// Totals Row Style
	TotalsRowCellStyleAttr *string

	// Connection ID
	ConnectionIdAttr *uint32

	// Table AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Table Columns
	TableColumns *CT_TableColumns

	// Table Style
	TableStyleInfo *CT_TableStyleInfo

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_TextField struct {

	// Field Type
	TypeAttr ST_ExternalConnectionType

	// Position
	PositionAttr *uint32
}
type CT_ChartFormats struct {

	// Format Count
	CountAttr *uint32

	// PivotChart Format
	ChartFormat []*CT_ChartFormat
}

func (_fdbae *CT_PhoneticRun) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0062"}, Value: _f.Sprintf("\u0025\u0076", _fdbae.SbAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0062"}, Value: _f.Sprintf("\u0025\u0076", _fdbae.EbAttr)})
	e.EncodeToken(start)
	_agdfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_d.AddPreserveSpaceAttr(&_agdfd, _fdbae.T)
	e.EncodeElement(_fdbae.T, _agdfd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_beecd *ST_rwColActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_beecd = 0
	case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
		*_beecd = 1
	case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
		*_beecd = 2
	case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
		*_beecd = 3
	case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
		*_beecd = 4
	}
	return nil
}
func (_ceg *CT_AutoSortScope) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_ceg.PivotArea, _dce)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Workbook struct {

	// Document Conformance Class
	ConformanceAttr _c.ST_ConformanceClass

	// File Version
	FileVersion *CT_FileVersion

	// File Sharing
	FileSharing *CT_FileSharing

	// Workbook Properties
	WorkbookPr *CT_WorkbookPr

	// Workbook Protection
	WorkbookProtection *CT_WorkbookProtection

	// Workbook Views
	BookViews *CT_BookViews

	// Sheets
	Sheets *CT_Sheets

	// Function Groups
	FunctionGroups *CT_FunctionGroups

	// External References
	ExternalReferences *CT_ExternalReferences

	// Defined Names
	DefinedNames *CT_DefinedNames

	// Calculation Properties
	CalcPr *CT_CalcPr

	// Embedded Object Size
	OleSize *CT_OleSize

	// Custom Workbook Views
	CustomWorkbookViews *CT_CustomWorkbookViews

	// PivotCaches
	PivotCaches *CT_PivotCaches

	// Smart Tag Properties
	SmartTagPr *CT_SmartTagPr

	// Smart Tag Types
	SmartTagTypes *CT_SmartTagTypes

	// Web Publishing Properties
	WebPublishing *CT_WebPublishing

	// File Recovery Properties
	FileRecoveryPr []*CT_FileRecoveryPr

	// Web Publish Objects
	WebPublishObjects *CT_WebPublishObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_daacgb ST_rwColActionType) ValidateWithPath(path string) error {
	switch _daacgb {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_daacgb))
	}
	return nil
}
func (_efbaf *CT_NumFmts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efbaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_efbaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _efbaf.NumFmt != nil {
		_cbfee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		for _, _aabec := range _efbaf.NumFmt {
			e.EncodeElement(_aabec, _cbfee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WebPublishItem and its children
func (_gdbcb *CT_WebPublishItem) Validate() error {
	return _gdbcb.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d")
}
func NewCT_SmartTags() *CT_SmartTags { _gagfd := &CT_SmartTags{}; return _gagfd }

type CT_FutureMetadata struct {

	// Metadata Type Name
	NameAttr string

	// Future Metadata Block Count
	CountAttr *uint32

	// Future Metadata Block
	Bk []*CT_FutureMetadataBlock

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fcebbab ST_FilterOperator) String() string {
	switch _fcebbab {
	case 0:
		return ""
	case 1:
		return "\u0065\u0071\u0075a\u006c"
	case 2:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 3:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return ""
}
func (_fefdf *ST_ConditionalFormattingOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fefdf = 0
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_fefdf = 1
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_fefdf = 2
	case "\u0065\u0071\u0075a\u006c":
		*_fefdf = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fefdf = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_fefdf = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_fefdf = 6
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_fefdf = 7
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_fefdf = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_fefdf = 9
	case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_fefdf = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_fefdf = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_fefdf = 12
	}
	return nil
}
func (_aeaee *CT_DefinedNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bddb:
	for {
		_afgad, _ggcb := d.Token()
		if _ggcb != nil {
			return _ggcb
		}
		switch _abce := _afgad.(type) {
		case _b.StartElement:
			switch _abce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_fcac := NewCT_DefinedName()
				if _ageeg := d.DecodeElement(_fcac, &_abce); _ageeg != nil {
					return _ageeg
				}
				_aeaee.DefinedName = append(_aeaee.DefinedName, _fcac)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _abce.Name)
				if _egfed := d.Skip(); _egfed != nil {
					return _egfed
				}
			}
		case _b.EndElement:
			break _bddb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TablePart and its children
func (_edcag *CT_TablePart) Validate() error {
	return _edcag.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074")
}

// Validate validates the CT_FileVersion and its children
func (_fcbc *CT_FileVersion) Validate() error {
	return _fcbc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e")
}
func NewCT_Dxfs() *CT_Dxfs { _ffccc := &CT_Dxfs{}; return _ffccc }
func (_ebeef *CT_CellStyleXfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdbce := range start.Attr {
		if _cdbce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_adced, _effg := _e.ParseUint(_cdbce.Value, 10, 32)
			if _effg != nil {
				return _effg
			}
			_abef := uint32(_adced)
			_ebeef.CountAttr = &_abef
			continue
		}
	}
_gbbd:
	for {
		_agdb, _dafb := d.Token()
		if _dafb != nil {
			return _dafb
		}
		switch _dede := _agdb.(type) {
		case _b.StartElement:
			switch _dede.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_dead := NewCT_Xf()
				if _edbg := d.DecodeElement(_dead, &_dede); _edbg != nil {
					return _edbg
				}
				_ebeef.Xf = append(_ebeef.Xf, _dead)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073\u0020\u0025\u0076", _dede.Name)
				if _beac := d.Skip(); _beac != nil {
					return _beac
				}
			}
		case _b.EndElement:
			break _gbbd
		case _b.CharData:
		}
	}
	return nil
}
func (_ffacc ST_FontScheme) ValidateWithPath(path string) error {
	switch _ffacc {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffacc))
	}
	return nil
}
func (_dfdaa ST_BorderStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfdaa.String(), start)
}
func (_cdccdbe *CT_Sst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdccdbe.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cdccdbe.CountAttr)})
	}
	if _cdccdbe.UniqueCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cdccdbe.UniqueCountAttr)})
	}
	e.EncodeToken(start)
	if _cdccdbe.Si != nil {
		_ccdafg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0069"}}
		for _, _gbfbef := range _cdccdbe.Si {
			e.EncodeElement(_gbfbef, _ccdafg)
		}
	}
	if _cdccdbe.ExtLst != nil {
		_ccfgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cdccdbe.ExtLst, _ccfgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WorkbookPr and its children
func (_aaefee *CT_WorkbookPr) Validate() error {
	return _aaefee.ValidateWithPath("\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072")
}
func (_ce *AG_AutoFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ce.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ce.AutoFormatIdAttr)})
	}
	if _ce.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ce.ApplyNumberFormatsAttr))})
	}
	if _ce.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ce.ApplyBorderFormatsAttr))})
	}
	if _ce.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ce.ApplyFontFormatsAttr))})
	}
	if _ce.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ce.ApplyPatternFormatsAttr))})
	}
	if _ce.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ce.ApplyAlignmentFormatsAttr))})
	}
	if _ce.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ce.ApplyWidthHeightFormatsAttr))})
	}
	return nil
}
func NewCT_CellSmartTagPr() *CT_CellSmartTagPr { _acefg := &CT_CellSmartTagPr{}; return _acefg }

// ValidateWithPath validates the CT_Authors and its children, prefixing error messages with path
func (_bcb *CT_Authors) ValidateWithPath(path string) error { return nil }
func (_fgddb *CT_ColHierarchiesUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgddb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fgddb.CountAttr)})
	}
	e.EncodeToken(start)
	_cdbb := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _bdde := range _fgddb.ColHierarchyUsage {
		e.EncodeElement(_bdde, _cdbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fafc *CT_ColFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caea := range start.Attr {
		if _caea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcabg, _cacc := _e.ParseUint(_caea.Value, 10, 32)
			if _cacc != nil {
				return _cacc
			}
			_dabb := uint32(_dcabg)
			_fafc.CountAttr = &_dabb
			continue
		}
	}
_dafdf:
	for {
		_caaf, _ffca := d.Token()
		if _ffca != nil {
			return _ffca
		}
		switch _caee := _caaf.(type) {
		case _b.StartElement:
			switch _caee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_bddfb := NewCT_Field()
				if _effga := d.DecodeElement(_bddfb, &_caee); _effga != nil {
					return _effga
				}
				_fafc.Field = append(_fafc.Field, _bddfb)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006cF\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _caee.Name)
				if _cdba := d.Skip(); _cdba != nil {
					return _cdba
				}
			}
		case _b.EndElement:
			break _dafdf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_IntProperty and its children
func (_gdbgf *CT_IntProperty) Validate() error {
	return _gdbgf.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func NewCT_PatternFill() *CT_PatternFill       { _dfefbb := &CT_PatternFill{}; return _dfefbb }
func NewCT_ProtectedRange() *CT_ProtectedRange { _ccfga := &CT_ProtectedRange{}; return _ccfga }

type CT_Members struct {

	// Item Count
	CountAttr *uint32

	// Hierarchy Level
	LevelAttr *uint32

	// Member
	Member []*CT_Member
}

func (_fgaad ST_HorizontalAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cedeb := _b.Attr{}
	_cedeb.Name = name
	switch _fgaad {
	case ST_HorizontalAlignmentUnset:
		_cedeb.Value = ""
	case ST_HorizontalAlignmentGeneral:
		_cedeb.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_HorizontalAlignmentLeft:
		_cedeb.Value = "\u006c\u0065\u0066\u0074"
	case ST_HorizontalAlignmentCenter:
		_cedeb.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_HorizontalAlignmentRight:
		_cedeb.Value = "\u0072\u0069\u0067h\u0074"
	case ST_HorizontalAlignmentFill:
		_cedeb.Value = "\u0066\u0069\u006c\u006c"
	case ST_HorizontalAlignmentJustify:
		_cedeb.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_HorizontalAlignmentCenterContinuous:
		_cedeb.Value = "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case ST_HorizontalAlignmentDistributed:
		_cedeb.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _cedeb, nil
}
func (_dgbebc ST_Pane) ValidateWithPath(path string) error {
	switch _dgbebc {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgbebc))
	}
	return nil
}

type CT_IgnoredErrors struct {

	// Ignored Error
	IgnoredError []*CT_IgnoredError
	ExtLst       *CT_ExtensionList
}

// Validate validates the CT_ExternalDefinedNames and its children
func (_eabe *CT_ExternalDefinedNames) Validate() error {
	return _eabe.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func NewWorksheet() *Worksheet {
	_dgfec := &Worksheet{}
	_dgfec.CT_Worksheet = *NewCT_Worksheet()
	return _dgfec
}
func (_cddaf ST_DdeValueType) ValidateWithPath(path string) error {
	switch _cddaf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cddaf))
	}
	return nil
}
func (_dgfag *CT_Dimensions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgfag.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_dgfag.CountAttr)})
	}
	e.EncodeToken(start)
	if _dgfag.Dimension != nil {
		_aadcf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		for _, _bded := range _dgfag.Dimension {
			e.EncodeElement(_bded, _aadcf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AutoSortScope and its children
func (_fed *CT_AutoSortScope) Validate() error {
	return _fed.ValidateWithPath("\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065")
}
func (_ccbbdg ST_OleUpdate) ValidateWithPath(path string) error {
	switch _ccbbdg {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccbbdg))
	}
	return nil
}
func (_cfbgf *CT_RevisionCellChange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _cfbgf.SIdAttr)})
	if _cfbgf.OdxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0064\u0078\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.OdxfAttr))})
	}
	if _cfbgf.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.XfDxfAttr))})
	}
	if _cfbgf.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.SAttr))})
	}
	if _cfbgf.DxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.DxfAttr))})
	}
	if _cfbgf.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cfbgf.NumFmtIdAttr)})
	}
	if _cfbgf.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.QuotePrefixAttr))})
	}
	if _cfbgf.OldQuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.OldQuotePrefixAttr))})
	}
	if _cfbgf.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.PhAttr))})
	}
	if _cfbgf.OldPhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064P\u0068"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.OldPhAttr))})
	}
	if _cfbgf.EndOfListFormulaUpdateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.EndOfListFormulaUpdateAttr))})
	}
	if _cfbgf.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cfbgf.RIdAttr)})
	}
	if _cfbgf.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.UaAttr))})
	}
	if _cfbgf.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cfbgf.RaAttr))})
	}
	e.EncodeToken(start)
	if _cfbgf.Oc != nil {
		_gfbdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0063"}}
		e.EncodeElement(_cfbgf.Oc, _gfbdg)
	}
	_egbcab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003an\u0063"}}
	e.EncodeElement(_cfbgf.Nc, _egbcab)
	if _cfbgf.Odxf != nil {
		_dfgae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006f\u0064\u0078\u0066"}}
		e.EncodeElement(_cfbgf.Odxf, _dfgae)
	}
	if _cfbgf.Ndxf != nil {
		_addag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0064\u0078\u0066"}}
		e.EncodeElement(_cfbgf.Ndxf, _addag)
	}
	if _cfbgf.ExtLst != nil {
		_cbeebb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfbgf.ExtLst, _cbeebb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomWorkbookView and its children
func (_cbgdf *CT_CustomWorkbookView) Validate() error {
	return _cbgdf.ValidateWithPath("C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077")
}
func (_ebae *CT_Fill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ebae.PatternFill != nil {
		_ddaee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebae.PatternFill, _ddaee)
	}
	if _ebae.GradientFill != nil {
		_dfadb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ag\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebae.GradientFill, _dfadb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbfgf *CT_PivotAreaReferences) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbfgf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fbfgf.CountAttr)})
	}
	e.EncodeToken(start)
	_fcddg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _eegdd := range _fbfgf.Reference {
		e.EncodeElement(_eegdd, _fcddg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_MapInfo struct {

	// Prefix Mappings for XPath Expressions
	SelectionNamespacesAttr string

	// XML Schema
	Schema []*CT_Schema

	// XML Mapping Properties
	Map []*CT_Map
}

func (_ddaagf ST_VolValueType) Validate() error { return _ddaagf.ValidateWithPath("") }

// Validate validates the CT_WorkbookProtection and its children
func (_ecccbd *CT_WorkbookProtection) Validate() error {
	return _ecccbd.ValidateWithPath("C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e")
}
func NewDialogsheet() *Dialogsheet {
	_abccfa := &Dialogsheet{}
	_abccfa.CT_Dialogsheet = *NewCT_Dialogsheet()
	return _abccfa
}

// ValidateWithPath validates the CT_Metadata and its children, prefixing error messages with path
func (_aaeg *CT_Metadata) ValidateWithPath(path string) error {
	if _aaeg.MetadataTypes != nil {
		if _cfgfa := _aaeg.MetadataTypes.ValidateWithPath(path + "\u002f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"); _cfgfa != nil {
			return _cfgfa
		}
	}
	if _aaeg.MetadataStrings != nil {
		if _dfgebe := _aaeg.MetadataStrings.ValidateWithPath(path + "\u002f\u004de\u0074\u0061\u0064a\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"); _dfgebe != nil {
			return _dfgebe
		}
	}
	if _aaeg.MdxMetadata != nil {
		if _adfgb := _aaeg.MdxMetadata.ValidateWithPath(path + "\u002f\u004d\u0064x\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _adfgb != nil {
			return _adfgb
		}
	}
	for _eaffb, _gagcf := range _aaeg.FutureMetadata {
		if _egacg := _gagcf.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0046\u0075tu\u0072e\u004d\u0065\u0074\u0061\u0064a\u0074\u0061\u005b\u0025\u0064\u005d", path, _eaffb)); _egacg != nil {
			return _egacg
		}
	}
	if _aaeg.CellMetadata != nil {
		if _gcgfce := _aaeg.CellMetadata.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _gcgfce != nil {
			return _gcgfce
		}
	}
	if _aaeg.ValueMetadata != nil {
		if _babfd := _aaeg.ValueMetadata.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"); _babfd != nil {
			return _babfd
		}
	}
	if _aaeg.ExtLst != nil {
		if _cgafe := _aaeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgafe != nil {
			return _cgafe
		}
	}
	return nil
}
func (_ebbd *CT_Colors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ggae:
	for {
		_ggaed, _affb := d.Token()
		if _affb != nil {
			return _affb
		}
		switch _gecg := _ggaed.(type) {
		case _b.StartElement:
			switch _gecg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}:
				_ebbd.IndexedColors = NewCT_IndexedColors()
				if _dcbfd := d.DecodeElement(_ebbd.IndexedColors, &_gecg); _dcbfd != nil {
					return _dcbfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}:
				_ebbd.MruColors = NewCT_MRUColors()
				if _ffff := d.DecodeElement(_ebbd.MruColors, &_gecg); _ffff != nil {
					return _ffff
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u006f\u006co\u0072\u0073 \u0025\u0076", _gecg.Name)
				if _gdde := d.Skip(); _gdde != nil {
					return _gdde
				}
			}
		case _b.EndElement:
			break _ggae
		case _b.CharData:
		}
	}
	return nil
}

type CT_IconFilter struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

const (
	ST_SheetViewTypeUnset            ST_SheetViewType = 0
	ST_SheetViewTypeNormal           ST_SheetViewType = 1
	ST_SheetViewTypePageBreakPreview ST_SheetViewType = 2
	ST_SheetViewTypePageLayout       ST_SheetViewType = 3
)

func (_gafcc *CT_PhoneticPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebdef := range start.Attr {
		if _ebdef.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_acdae, _feeaf := _e.ParseUint(_ebdef.Value, 10, 32)
			if _feeaf != nil {
				return _feeaf
			}
			_gafcc.FontIdAttr = uint32(_acdae)
			continue
		}
		if _ebdef.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gafcc.TypeAttr.UnmarshalXMLAttr(_ebdef)
			continue
		}
		if _ebdef.Name.Local == "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et" {
			_gafcc.AlignmentAttr.UnmarshalXMLAttr(_ebdef)
			continue
		}
	}
	for {
		_caefc, _bedda := d.Token()
		if _bedda != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050h\u006fn\u0065t\u0069\u0063\u0050\u0072\u003a\u0020\u0025s", _bedda)
		}
		if _bcacg, _ffeea := _caefc.(_b.EndElement); _ffeea && _bcacg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Sheets struct {

	// Sheet Information
	Sheet []*CT_Sheet
}

// ValidateWithPath validates the CT_CacheHierarchy and its children, prefixing error messages with path
func (_egbcd *CT_CacheHierarchy) ValidateWithPath(path string) error {
	if _egbcd.FieldsUsage != nil {
		if _fbb := _egbcd.FieldsUsage.ValidateWithPath(path + "\u002f\u0046\u0069e\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"); _fbb != nil {
			return _fbb
		}
	}
	if _egbcd.GroupLevels != nil {
		if _fagd := _egbcd.GroupLevels.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"); _fagd != nil {
			return _fagd
		}
	}
	if _egbcd.ExtLst != nil {
		if _gge := _egbcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gge != nil {
			return _gge
		}
	}
	return nil
}
func (_cddbf ST_UnderlineValues) Validate() error { return _cddbf.ValidateWithPath("") }

// ValidateWithPath validates the CT_SheetView and its children, prefixing error messages with path
func (_afggge *CT_SheetView) ValidateWithPath(path string) error {
	if _egbbb := _afggge.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _egbbb != nil {
		return _egbbb
	}
	if _afggge.Pane != nil {
		if _dgecfe := _afggge.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _dgecfe != nil {
			return _dgecfe
		}
	}
	for _fbbec, _geegdf := range _afggge.Selection {
		if _ebfaga := _geegdf.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0053\u0065\u006ce\u0063\u0074\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _fbbec)); _ebfaga != nil {
			return _ebfaga
		}
	}
	for _acefbe, _cbgaeb := range _afggge.PivotSelection {
		if _ecbdf := _cbgaeb.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074S\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _acefbe)); _ecbdf != nil {
			return _ecbdf
		}
	}
	if _afggge.ExtLst != nil {
		if _dfcab := _afggge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfcab != nil {
			return _dfcab
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookView and its children, prefixing error messages with path
func (_fefc *CT_CustomWorkbookView) ValidateWithPath(path string) error {
	if !_c.ST_GuidPatternRe.MatchString(_fefc.GuidAttr) {
		return _f.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _c.ST_GuidPatternRe, _fefc.GuidAttr)
	}
	if _cbacg := _fefc.ShowCommentsAttr.ValidateWithPath(path + "\u002f\u0053\u0068\u006f\u0077\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _cbacg != nil {
		return _cbacg
	}
	if _bafa := _fefc.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _bafa != nil {
		return _bafa
	}
	if _fefc.ExtLst != nil {
		if _acdfg := _fefc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdfg != nil {
			return _acdfg
		}
	}
	return nil
}
func (_gfagdf *CT_VolTopic) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbggda := range start.Attr {
		if _dbggda.Name.Local == "\u0074" {
			_gfagdf.TAttr.UnmarshalXMLAttr(_dbggda)
			continue
		}
	}
_bdcadf:
	for {
		_cccdc, _cdcgd := d.Token()
		if _cdcgd != nil {
			return _cdcgd
		}
		switch _gccbff := _cccdc.(type) {
		case _b.StartElement:
			switch _gccbff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				if _begdf := d.DecodeElement(&_gfagdf.V, &_gccbff); _begdf != nil {
					return _begdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}:
				var _ecdbcg string
				if _gefdgf := d.DecodeElement(&_ecdbcg, &_gccbff); _gefdgf != nil {
					return _gefdgf
				}
				_gfagdf.Stp = append(_gfagdf.Stp, _ecdbcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_agbdag := NewCT_VolTopicRef()
				if _ggdcgd := d.DecodeElement(_agbdag, &_gccbff); _ggdcgd != nil {
					return _ggdcgd
				}
				_gfagdf.Tr = append(_gfagdf.Tr, _agbdag)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0020\u0025\u0076", _gccbff.Name)
				if _beead := d.Skip(); _beead != nil {
					return _beead
				}
			}
		case _b.EndElement:
			break _bdcadf
		case _b.CharData:
		}
	}
	return nil
}
func (_adge *CT_GradientFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adge.TypeAttr != ST_GradientTypeUnset {
		_fagg, _ggad := _adge.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ggad != nil {
			return _ggad
		}
		start.Attr = append(start.Attr, _fagg)
	}
	if _adge.DegreeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0067\u0072\u0065\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_adge.DegreeAttr)})
	}
	if _adge.LeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_adge.LeftAttr)})
	}
	if _adge.RightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_adge.RightAttr)})
	}
	if _adge.TopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_adge.TopAttr)})
	}
	if _adge.BottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _f.Sprintf("\u0025\u0076", *_adge.BottomAttr)})
	}
	e.EncodeToken(start)
	if _adge.Stop != nil {
		_egecc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u006f\u0070"}}
		for _, _gfdce := range _adge.Stop {
			e.EncodeElement(_gfdce, _egecc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Reviewed() *CT_Reviewed { _babdg := &CT_Reviewed{}; return _babdg }
func NewCT_WorkbookProtection() *CT_WorkbookProtection {
	_dbbac := &CT_WorkbookProtection{}
	return _dbbac
}
func (_gegfa *ST_TotalsRowFunction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agdgc, _bdbaf := d.Token()
	if _bdbaf != nil {
		return _bdbaf
	}
	if _fadgg, _ggdag := _agdgc.(_b.EndElement); _ggdag && _fadgg.Name == start.Name {
		*_gegfa = 1
		return nil
	}
	if _cgacd, _fedccd := _agdgc.(_b.CharData); !_fedccd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdgc)
	} else {
		switch string(_cgacd) {
		case "":
			*_gegfa = 0
		case "\u006e\u006f\u006e\u0065":
			*_gegfa = 1
		case "\u0073\u0075\u006d":
			*_gegfa = 2
		case "\u006d\u0069\u006e":
			*_gegfa = 3
		case "\u006d\u0061\u0078":
			*_gegfa = 4
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_gegfa = 5
		case "\u0063\u006f\u0075n\u0074":
			*_gegfa = 6
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_gegfa = 7
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_gegfa = 8
		case "\u0076\u0061\u0072":
			*_gegfa = 9
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_gegfa = 10
		}
	}
	_agdgc, _bdbaf = d.Token()
	if _bdbaf != nil {
		return _bdbaf
	}
	if _dgefa, _egcbdd := _agdgc.(_b.EndElement); _egcbdd && _dgefa.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdgc)
}
func NewCT_Filters() *CT_Filters               { _caabf := &CT_Filters{}; return _caabf }
func NewCT_MetadataBlocks() *CT_MetadataBlocks { _ddaga := &CT_MetadataBlocks{}; return _ddaga }
func NewCT_rowItems() *CT_rowItems             { _fcbff := &CT_rowItems{}; return _fcbff }

// ValidateWithPath validates the CT_CellSmartTagPr and its children, prefixing error messages with path
func (_becf *CT_CellSmartTagPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Stylesheet and its children
func (_efggd *CT_Stylesheet) Validate() error {
	return _efggd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074")
}
func (_gddbcd ST_DateTimeGrouping) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ccbcdf := _b.Attr{}
	_ccbcdf.Name = name
	switch _gddbcd {
	case ST_DateTimeGroupingUnset:
		_ccbcdf.Value = ""
	case ST_DateTimeGroupingYear:
		_ccbcdf.Value = "\u0079\u0065\u0061\u0072"
	case ST_DateTimeGroupingMonth:
		_ccbcdf.Value = "\u006d\u006f\u006et\u0068"
	case ST_DateTimeGroupingDay:
		_ccbcdf.Value = "\u0064\u0061\u0079"
	case ST_DateTimeGroupingHour:
		_ccbcdf.Value = "\u0068\u006f\u0075\u0072"
	case ST_DateTimeGroupingMinute:
		_ccbcdf.Value = "\u006d\u0069\u006e\u0075\u0074\u0065"
	case ST_DateTimeGroupingSecond:
		_ccbcdf.Value = "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return _ccbcdf, nil
}
func (_adacg ST_PatternType) ValidateWithPath(path string) error {
	switch _adacg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adacg))
	}
	return nil
}

// ValidateWithPath validates the CT_CacheHierarchies and its children, prefixing error messages with path
func (_edab *CT_CacheHierarchies) ValidateWithPath(path string) error {
	for _cbcf, _bfcb := range _edab.CacheHierarchy {
		if _eebg := _bfcb.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0061ch\u0065H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _cbcf)); _eebg != nil {
			return _eebg
		}
	}
	return nil
}
func NewCT_ExternalSheetDataSet() *CT_ExternalSheetDataSet {
	_dbdfd := &CT_ExternalSheetDataSet{}
	return _dbdfd
}
func (_fagddf *ST_Pane) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cegdaa, _becec := d.Token()
	if _becec != nil {
		return _becec
	}
	if _gfdgf, _gbgge := _cegdaa.(_b.EndElement); _gbgge && _gfdgf.Name == start.Name {
		*_fagddf = 1
		return nil
	}
	if _fdgcbb, _ddcad := _cegdaa.(_b.CharData); !_ddcad {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cegdaa)
	} else {
		switch string(_fdgcbb) {
		case "":
			*_fagddf = 0
		case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_fagddf = 1
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_fagddf = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_fagddf = 3
		case "\u0074o\u0070\u004c\u0065\u0066\u0074":
			*_fagddf = 4
		}
	}
	_cegdaa, _becec = d.Token()
	if _becec != nil {
		return _becec
	}
	if _edcffc, _bdgbd := _cegdaa.(_b.EndElement); _bdgbd && _edcffc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cegdaa)
}

// Validate validates the CT_DateGroupItem and its children
func (_cceeg *CT_DateGroupItem) Validate() error {
	return _cceeg.ValidateWithPath("\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d")
}
func (_cacbfd *ST_HtmlFmt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgbef, _dfcacf := d.Token()
	if _dfcacf != nil {
		return _dfcacf
	}
	if _bdedc, _afded := _bgbef.(_b.EndElement); _afded && _bdedc.Name == start.Name {
		*_cacbfd = 1
		return nil
	}
	if _cbcab, _egdbd := _bgbef.(_b.CharData); !_egdbd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgbef)
	} else {
		switch string(_cbcab) {
		case "":
			*_cacbfd = 0
		case "\u006e\u006f\u006e\u0065":
			*_cacbfd = 1
		case "\u0072\u0074\u0066":
			*_cacbfd = 2
		case "\u0061\u006c\u006c":
			*_cacbfd = 3
		}
	}
	_bgbef, _dfcacf = d.Token()
	if _dfcacf != nil {
		return _dfcacf
	}
	if _bfccbg, _deafaa := _bgbef.(_b.EndElement); _deafaa && _bfccbg.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgbef)
}
func (_ccbb *CT_ColHierarchiesUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecea := range start.Attr {
		if _ecea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_afaff, _degc := _e.ParseUint(_ecea.Value, 10, 32)
			if _degc != nil {
				return _degc
			}
			_dbbbc := uint32(_afaff)
			_ccbb.CountAttr = &_dbbbc
			continue
		}
	}
_cdde:
	for {
		_eabd, _gfac := d.Token()
		if _gfac != nil {
			return _gfac
		}
		switch _ffga := _eabd.(type) {
		case _b.StartElement:
			switch _ffga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_cfee := NewCT_HierarchyUsage()
				if _bdefe := d.DecodeElement(_cfee, &_ffga); _bdefe != nil {
					return _bdefe
				}
				_ccbb.ColHierarchyUsage = append(_ccbb.ColHierarchyUsage, _cfee)
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _ffga.Name)
				if _faefc := d.Skip(); _faefc != nil {
					return _faefc
				}
			}
		case _b.EndElement:
			break _cdde
		case _b.CharData:
		}
	}
	return nil
}
func (_fegaad ST_DataValidationErrorStyle) ValidateWithPath(path string) error {
	switch _fegaad {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fegaad))
	}
	return nil
}
func (_abaaf *CT_FutureMetadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _abaaf.NameAttr)})
	if _abaaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_abaaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _abaaf.Bk != nil {
		_ecdge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006b"}}
		for _, _fagca := range _abaaf.Bk {
			e.EncodeElement(_fagca, _ecdge)
		}
	}
	if _abaaf.ExtLst != nil {
		_gafdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abaaf.ExtLst, _gafdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aabee *CT_WorkbookPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aebgad := range start.Attr {
		if _aebgad.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_abcaf, _ecbed := _aebgad.Value, error(nil)
			if _ecbed != nil {
				return _ecbed
			}
			_aabee.CodeNameAttr = &_abcaf
			continue
		}
		if _aebgad.Name.Local == "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034" {
			_cecbb, _cdeec := _e.ParseBool(_aebgad.Value)
			if _cdeec != nil {
				return _cdeec
			}
			_aabee.Date1904Attr = &_cecbb
			continue
		}
		if _aebgad.Name.Local == "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074" {
			_cagdb, _dgbbegc := _e.ParseBool(_aebgad.Value)
			if _dgbbegc != nil {
				return _dgbbegc
			}
			_aabee.HidePivotFieldListAttr = &_cagdb
			continue
		}
		if _aebgad.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073" {
			_agfcca, _bcagb := _e.ParseBool(_aebgad.Value)
			if _bcagb != nil {
				return _bcagb
			}
			_aabee.ShowBorderUnselectedTablesAttr = &_agfcca
			continue
		}
		if _aebgad.Name.Local == "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072" {
			_efebf, _gbdba := _e.ParseBool(_aebgad.Value)
			if _gbdba != nil {
				return _gbdba
			}
			_aabee.ShowPivotChartFilterAttr = &_efebf
			continue
		}
		if _aebgad.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073" {
			_dfdcdbg, _bedcd := _e.ParseBool(_aebgad.Value)
			if _bedcd != nil {
				return _bedcd
			}
			_aabee.PromptedSolutionsAttr = &_dfdcdbg
			continue
		}
		if _aebgad.Name.Local == "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065" {
			_abgfcc, _cecbc := _e.ParseBool(_aebgad.Value)
			if _cecbc != nil {
				return _cecbc
			}
			_aabee.BackupFileAttr = &_abgfcc
			continue
		}
		if _aebgad.Name.Local == "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073" {
			_bcgeb, _agdedc := _e.ParseBool(_aebgad.Value)
			if _agdedc != nil {
				return _agdedc
			}
			_aabee.SaveExternalLinkValuesAttr = &_bcgeb
			continue
		}
		if _aebgad.Name.Local == "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073" {
			_aabee.UpdateLinksAttr.UnmarshalXMLAttr(_aebgad)
			continue
		}
		if _aebgad.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_aabee.ShowObjectsAttr.UnmarshalXMLAttr(_aebgad)
			continue
		}
		if _aebgad.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079" {
			_ggfadg, _afefg := _e.ParseBool(_aebgad.Value)
			if _afefg != nil {
				return _afefg
			}
			_aabee.FilterPrivacyAttr = &_ggfadg
			continue
		}
		if _aebgad.Name.Local == "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e" {
			_ggcca, _cbgdbe := _e.ParseBool(_aebgad.Value)
			if _cbgdbe != nil {
				return _cbgdbe
			}
			_aabee.ShowInkAnnotationAttr = &_ggcca
			continue
		}
		if _aebgad.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079" {
			_fdbee, _fcaeb := _e.ParseBool(_aebgad.Value)
			if _fcaeb != nil {
				return _fcaeb
			}
			_aabee.AllowRefreshQueryAttr = &_fdbee
			continue
		}
		if _aebgad.Name.Local == "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073" {
			_abfcb, _acedf := _e.ParseBool(_aebgad.Value)
			if _acedf != nil {
				return _acedf
			}
			_aabee.PublishItemsAttr = &_abfcb
			continue
		}
		if _aebgad.Name.Local == "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079" {
			_cbbbd, _afdeaa := _e.ParseBool(_aebgad.Value)
			if _afdeaa != nil {
				return _afdeaa
			}
			_aabee.CheckCompatibilityAttr = &_cbbbd
			continue
		}
		if _aebgad.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_ccdag, _ecbfcc := _e.ParseBool(_aebgad.Value)
			if _ecbfcc != nil {
				return _ecbfcc
			}
			_aabee.AutoCompressPicturesAttr = &_ccdag
			continue
		}
		if _aebgad.Name.Local == "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073" {
			_dabadf, _cbacbc := _e.ParseBool(_aebgad.Value)
			if _cbacbc != nil {
				return _cbacbc
			}
			_aabee.RefreshAllConnectionsAttr = &_dabadf
			continue
		}
		if _aebgad.Name.Local == "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fecgbf, _dadcd := _e.ParseUint(_aebgad.Value, 10, 32)
			if _dadcd != nil {
				return _dadcd
			}
			_abagb := uint32(_fecgbf)
			_aabee.DefaultThemeVersionAttr = &_abagb
			continue
		}
	}
	for {
		_fddfae, _edgca := d.Token()
		if _edgca != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057o\u0072k\u0062o\u006f\u006b\u0050\u0072\u003a\u0020\u0025s", _edgca)
		}
		if _bffcg, _faegd := _fddfae.(_b.EndElement); _faegd && _bffcg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffagfa ST_VolValueType) ValidateWithPath(path string) error {
	switch _ffagfa {
	case 0, 1, 2, 3, 4:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffagfa))
	}
	return nil
}

type CT_OleItems struct {

	// Object Link Item
	OleItem []*CT_OleItem
}

// Validate validates the CT_SharedUser and its children
func (_fbbab *CT_SharedUser) Validate() error {
	return _fbbab.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072")
}
func (_caabgg ST_TotalsRowFunction) String() string {
	switch _caabgg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u006d\u0069\u006e"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 6:
		return "\u0063\u006f\u0075n\u0074"
	case 7:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 8:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 9:
		return "\u0076\u0061\u0072"
	case 10:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}
func NewCT_Tuple() *CT_Tuple { _efeec := &CT_Tuple{}; return _efeec }

type CT_BookView struct {

	// Visibility
	VisibilityAttr ST_Visibility

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Upper Left Corner (X Coordinate)
	XWindowAttr *int32

	// Upper Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr *uint32

	// Window Height
	WindowHeightAttr *uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// First Sheet
	FirstSheetAttr *uint32

	// Active Sheet Index
	ActiveTabAttr *uint32

	// AutoFilter Date Grouping
	AutoFilterDateGroupingAttr *bool
	ExtLst                     *CT_ExtensionList
}

func (_fbeg *CT_FieldsUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fbeg.CountAttr)})
	}
	e.EncodeToken(start)
	if _fbeg.FieldUsage != nil {
		_gbed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}}
		for _, _bcafa := range _fbeg.FieldUsage {
			e.EncodeElement(_bcafa, _gbed)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eebaee ST_MdxKPIProperty) Validate() error { return _eebaee.ValidateWithPath("") }

const (
	ST_VolValueTypeUnset ST_VolValueType = 0
	ST_VolValueTypeB     ST_VolValueType = 1
	ST_VolValueTypeN     ST_VolValueType = 2
	ST_VolValueTypeE     ST_VolValueType = 3
	ST_VolValueTypeS     ST_VolValueType = 4
)

func (_fdgac ST_PivotFilterType) Validate() error { return _fdgac.ValidateWithPath("") }
func (_accafg *CT_PivotArea) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _accafg.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_accafg.FieldAttr)})
	}
	if _accafg.TypeAttr != ST_PivotAreaTypeUnset {
		_eggf, _efdfd := _accafg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _efdfd != nil {
			return _efdfd
		}
		start.Attr = append(start.Attr, _eggf)
	}
	if _accafg.DataOnlyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.DataOnlyAttr))})
	}
	if _accafg.LabelOnlyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.LabelOnlyAttr))})
	}
	if _accafg.GrandRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.GrandRowAttr))})
	}
	if _accafg.GrandColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.GrandColAttr))})
	}
	if _accafg.CacheIndexAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.CacheIndexAttr))})
	}
	if _accafg.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.OutlineAttr))})
	}
	if _accafg.OffsetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0066\u0066\u0073\u0065\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_accafg.OffsetAttr)})
	}
	if _accafg.CollapsedLevelsAreSubtotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accafg.CollapsedLevelsAreSubtotalsAttr))})
	}
	if _accafg.AxisAttr != ST_AxisUnset {
		_dcadf, _gdbea := _accafg.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _gdbea != nil {
			return _gdbea
		}
		start.Attr = append(start.Attr, _dcadf)
	}
	if _accafg.FieldPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_accafg.FieldPositionAttr)})
	}
	e.EncodeToken(start)
	if _accafg.References != nil {
		_gfbdea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_accafg.References, _gfbdea)
	}
	if _accafg.ExtLst != nil {
		_dcabd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_accafg.ExtLst, _dcabd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellXfs and its children, prefixing error messages with path
func (_ffbg *CT_CellXfs) ValidateWithPath(path string) error {
	for _ebgg, _dfeb := range _ffbg.Xf {
		if _fcddc := _dfeb.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _ebgg)); _fcddc != nil {
			return _fcddc
		}
	}
	return nil
}

type ST_CredMethod byte

// ValidateWithPath validates the CT_MapInfo and its children, prefixing error messages with path
func (_bfaaaa *CT_MapInfo) ValidateWithPath(path string) error {
	for _afcbg, _degdf := range _bfaaaa.Schema {
		if _bfffa := _degdf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d", path, _afcbg)); _bfffa != nil {
			return _bfffa
		}
	}
	for _aabfg, _agfac := range _bfaaaa.Map {
		if _ddgbc := _agfac.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _aabfg)); _ddgbc != nil {
			return _ddgbc
		}
	}
	return nil
}
func (_dffgga ST_FormatAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dffgga.String(), start)
}

type CT_Controls struct {

	// Embedded Control
	Control []*CT_Control
}

// Validate validates the CT_ExternalDefinedName and its children
func (_bbcacb *CT_ExternalDefinedName) Validate() error {
	return _bbcacb.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

type CT_ExternalSheetName struct {

	// Sheet Name Value
	ValAttr *string
}
type CT_ChartFormat struct {

	// Chart Index
	ChartAttr uint32

	// Pivot Format Id
	FormatAttr uint32

	// Series Format
	SeriesAttr *bool

	// Pivot Table Location Rule
	PivotArea *CT_PivotArea
}

// Validate validates the CT_MeasureDimensionMaps and its children
func (_fadcd *CT_MeasureDimensionMaps) Validate() error {
	return _fadcd.ValidateWithPath("\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073")
}
func (_ffbef *CT_UndoInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064e\u0078"}, Value: _f.Sprintf("\u0025\u0076", _ffbef.IndexAttr)})
	_agddd, _cgdgb := _ffbef.ExpAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0078\u0070"})
	if _cgdgb != nil {
		return _cgdgb
	}
	start.Attr = append(start.Attr, _agddd)
	if _ffbef.Ref3DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u00663\u0044"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ffbef.Ref3DAttr))})
	}
	if _ffbef.ArrayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ffbef.ArrayAttr))})
	}
	if _ffbef.VAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ffbef.VAttr))})
	}
	if _ffbef.NfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ffbef.NfAttr))})
	}
	if _ffbef.CsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ffbef.CsAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072"}, Value: _f.Sprintf("\u0025\u0076", _ffbef.DrAttr)})
	if _ffbef.DnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_ffbef.DnAttr)})
	}
	if _ffbef.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_ffbef.RAttr)})
	}
	if _ffbef.SIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ffbef.SIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggdcb ST_CalcMode) ValidateWithPath(path string) error {
	switch _ggdcb {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggdcb))
	}
	return nil
}

// ValidateWithPath validates the CT_PivotAreas and its children, prefixing error messages with path
func (_dcgc *CT_PivotAreas) ValidateWithPath(path string) error {
	for _afbcgg, _ccbbg := range _dcgc.PivotArea {
		if _edefd := _ccbbg.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0050\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u005b\u0025\u0064\u005d", path, _afbcgg)); _edefd != nil {
			return _edefd
		}
	}
	return nil
}

// Validate validates the CT_pivotTableDefinition and its children
func (_babff *CT_pivotTableDefinition) Validate() error {
	return _babff.ValidateWithPath("\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_DataBar and its children
func (_eagec *CT_DataBar) Validate() error {
	return _eagec.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072")
}
func (_cebg *CT_Dialogsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cebg.SheetPr != nil {
		_fffce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_cebg.SheetPr, _fffce)
	}
	if _cebg.SheetViews != nil {
		_egeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cebg.SheetViews, _egeg)
	}
	if _cebg.SheetFormatPr != nil {
		_dage := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_cebg.SheetFormatPr, _dage)
	}
	if _cebg.SheetProtection != nil {
		_adda := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cebg.SheetProtection, _adda)
	}
	if _cebg.CustomSheetViews != nil {
		_bceba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cebg.CustomSheetViews, _bceba)
	}
	if _cebg.PrintOptions != nil {
		_fbbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cebg.PrintOptions, _fbbe)
	}
	if _cebg.PageMargins != nil {
		_caacc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_cebg.PageMargins, _caacc)
	}
	if _cebg.PageSetup != nil {
		_ebfbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_cebg.PageSetup, _ebfbe)
	}
	if _cebg.HeaderFooter != nil {
		_feed := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_cebg.HeaderFooter, _feed)
	}
	if _cebg.Drawing != nil {
		_ffad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cebg.Drawing, _ffad)
	}
	if _cebg.LegacyDrawing != nil {
		_geace := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cebg.LegacyDrawing, _geace)
	}
	if _cebg.LegacyDrawingHF != nil {
		_fbbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cebg.LegacyDrawingHF, _fbbc)
	}
	if _cebg.DrawingHF != nil {
		_aada := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cebg.DrawingHF, _aada)
	}
	if _cebg.OleObjects != nil {
		_bdfac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_cebg.OleObjects, _bdfac)
	}
	if _cebg.Controls != nil {
		_ecddb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_cebg.Controls, _ecddb)
	}
	if _cebg.ExtLst != nil {
		_dgbbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cebg.ExtLst, _dgbbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DrawingHF and its children, prefixing error messages with path
func (_acae *CT_DrawingHF) ValidateWithPath(path string) error { return nil }
func (_eaggg *CT_MemberProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acgbb := range start.Attr {
		if _acgbb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cbdg, _fcgdac := _acgbb.Value, error(nil)
			if _fcgdac != nil {
				return _fcgdac
			}
			_eaggg.NameAttr = &_cbdg
			continue
		}
		if _acgbb.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c" {
			_ddgc, _bfdae := _e.ParseBool(_acgbb.Value)
			if _bfdae != nil {
				return _bfdae
			}
			_eaggg.ShowCellAttr = &_ddgc
			continue
		}
		if _acgbb.Name.Local == "\u0073h\u006f\u0077\u0054\u0069\u0070" {
			_ecfe, _bgedg := _e.ParseBool(_acgbb.Value)
			if _bgedg != nil {
				return _bgedg
			}
			_eaggg.ShowTipAttr = &_ecfe
			continue
		}
		if _acgbb.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_eadd, _bgcfg := _e.ParseBool(_acgbb.Value)
			if _bgcfg != nil {
				return _bgcfg
			}
			_eaggg.ShowAsCaptionAttr = &_eadd
			continue
		}
		if _acgbb.Name.Local == "\u006ea\u006d\u0065\u004c\u0065\u006e" {
			_degbc, _bdceb := _e.ParseUint(_acgbb.Value, 10, 32)
			if _bdceb != nil {
				return _bdceb
			}
			_afdbb := uint32(_degbc)
			_eaggg.NameLenAttr = &_afdbb
			continue
		}
		if _acgbb.Name.Local == "\u0070\u0050\u006f\u0073" {
			_feecf, _fgcgf := _e.ParseUint(_acgbb.Value, 10, 32)
			if _fgcgf != nil {
				return _fgcgf
			}
			_geddac := uint32(_feecf)
			_eaggg.PPosAttr = &_geddac
			continue
		}
		if _acgbb.Name.Local == "\u0070\u004c\u0065\u006e" {
			_bbfgc, _gebec := _e.ParseUint(_acgbb.Value, 10, 32)
			if _gebec != nil {
				return _gebec
			}
			_ddddf := uint32(_bbfgc)
			_eaggg.PLenAttr = &_ddddf
			continue
		}
		if _acgbb.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_edge, _ddfa := _e.ParseUint(_acgbb.Value, 10, 32)
			if _ddfa != nil {
				return _ddfa
			}
			_dbfde := uint32(_edge)
			_eaggg.LevelAttr = &_dbfde
			continue
		}
		if _acgbb.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_ebbbg, _ebfag := _e.ParseUint(_acgbb.Value, 10, 32)
			if _ebfag != nil {
				return _ebfag
			}
			_eaggg.FieldAttr = uint32(_ebbbg)
			continue
		}
	}
	for {
		_afffac, _bdaed := d.Token()
		if _bdaed != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _bdaed)
		}
		if _bgedgc, _dacb := _afffac.(_b.EndElement); _dacb && _bgedgc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_RevisionHeaders struct {

	// Last Revision GUID
	GuidAttr string

	// Last GUID
	LastGuidAttr *string

	// Shared Workbook
	SharedAttr *bool

	// Disk Revisions
	DiskRevisionsAttr *bool

	// History
	HistoryAttr *bool

	// Track Revisions
	TrackRevisionsAttr *bool

	// Exclusive Mode
	ExclusiveAttr *bool

	// Revision Id
	RevisionIdAttr *uint32

	// Version
	VersionAttr *int32

	// Keep Change History
	KeepChangeHistoryAttr *bool

	// Protected
	ProtectedAttr *bool

	// Preserve History
	PreserveHistoryAttr *uint32

	// Header
	Header []*CT_RevisionHeader
}

func (_abdde ST_HtmlFmt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abdde.String(), start)
}

// ValidateWithPath validates the Connections and its children, prefixing error messages with path
func (_cbbaa *Connections) ValidateWithPath(path string) error {
	if _bbeeg := _cbbaa.CT_Connections.ValidateWithPath(path); _bbeeg != nil {
		return _bbeeg
	}
	return nil
}
func (_accaff *CT_WorksheetSource) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _accaff.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_accaff.RefAttr)})
	}
	if _accaff.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_accaff.NameAttr)})
	}
	if _accaff.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_accaff.SheetAttr)})
	}
	if _accaff.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_accaff.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecedf *CT_IconSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecedf.IconSetAttr != ST_IconSetTypeUnset {
		_egeag, _abaea := _ecedf.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _abaea != nil {
			return _abaea
		}
		start.Attr = append(start.Attr, _egeag)
	}
	if _ecedf.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ecedf.ShowValueAttr))})
	}
	if _ecedf.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ecedf.PercentAttr))})
	}
	if _ecedf.ReverseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076\u0065\u0072\u0073\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ecedf.ReverseAttr))})
	}
	e.EncodeToken(start)
	_gead := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _fcbfe := range _ecedf.Cfvo {
		e.EncodeElement(_fcbfe, _gead)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcbcg ST_FieldSortType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcbcg.String(), start)
}

// ValidateWithPath validates the CT_DeletedField and its children, prefixing error messages with path
func (_aacdc *CT_DeletedField) ValidateWithPath(path string) error { return nil }
func (_edfag *CT_Colors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _edfag.IndexedColors != nil {
		_eaebc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0069\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_edfag.IndexedColors, _eaebc)
	}
	if _edfag.MruColors != nil {
		_ddcba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_edfag.MruColors, _ddcba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_ecgbd *CT_Connection) ValidateWithPath(path string) error {
	if _ebeda := _ecgbd.CredentialsAttr.ValidateWithPath(path + "\u002f\u0043r\u0065\u0064\u0065n\u0074\u0069\u0061\u006c\u0073\u0041\u0074\u0074\u0072"); _ebeda != nil {
		return _ebeda
	}
	if _ecgbd.DbPr != nil {
		if _afac := _ecgbd.DbPr.ValidateWithPath(path + "\u002f\u0044\u0062P\u0072"); _afac != nil {
			return _afac
		}
	}
	if _ecgbd.OlapPr != nil {
		if _aafb := _ecgbd.OlapPr.ValidateWithPath(path + "\u002fO\u006c\u0061\u0070\u0050\u0072"); _aafb != nil {
			return _aafb
		}
	}
	if _ecgbd.WebPr != nil {
		if _ccce := _ecgbd.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _ccce != nil {
			return _ccce
		}
	}
	if _ecgbd.TextPr != nil {
		if _ddfec := _ecgbd.TextPr.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0050\u0072"); _ddfec != nil {
			return _ddfec
		}
	}
	if _ecgbd.Parameters != nil {
		if _dfdfg := _ecgbd.Parameters.ValidateWithPath(path + "/\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"); _dfdfg != nil {
			return _dfdfg
		}
	}
	if _ecgbd.ExtLst != nil {
		if _gaafg := _ecgbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gaafg != nil {
			return _gaafg
		}
	}
	return nil
}

// Validate validates the CT_CellProtection and its children
func (_cgfbc *CT_CellProtection) Validate() error {
	return _cgfbc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e")
}
func (_abada ST_VolDepType) ValidateWithPath(path string) error {
	switch _abada {
	case 0, 1, 2:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abada))
	}
	return nil
}

// Validate validates the CT_MetadataBlocks and its children
func (_dagde *CT_MetadataBlocks) Validate() error {
	return _dagde.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073")
}

// Validate validates the CT_FileRecoveryPr and its children
func (_ccbcd *CT_FileRecoveryPr) Validate() error {
	return _ccbcd.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072")
}
func (_ddabb ST_GroupBy) Validate() error { return _ddabb.ValidateWithPath("") }

// Validate validates the CT_CalculatedItem and its children
func (_gbdf *CT_CalculatedItem) Validate() error {
	return _gbdf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d")
}
func (_bbff *CT_Dialogsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aaacb:
	for {
		_daege, _daed := d.Token()
		if _daed != nil {
			return _daed
		}
		switch _faeda := _daege.(type) {
		case _b.StartElement:
			switch _faeda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bbff.SheetPr = NewCT_SheetPr()
				if _gdge := d.DecodeElement(_bbff.SheetPr, &_faeda); _gdge != nil {
					return _gdge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bbff.SheetViews = NewCT_SheetViews()
				if _aecc := d.DecodeElement(_bbff.SheetViews, &_faeda); _aecc != nil {
					return _aecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_bbff.SheetFormatPr = NewCT_SheetFormatPr()
				if _effc := d.DecodeElement(_bbff.SheetFormatPr, &_faeda); _effc != nil {
					return _effc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bbff.SheetProtection = NewCT_SheetProtection()
				if _cbfad := d.DecodeElement(_bbff.SheetProtection, &_faeda); _cbfad != nil {
					return _cbfad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bbff.CustomSheetViews = NewCT_CustomSheetViews()
				if _ebgf := d.DecodeElement(_bbff.CustomSheetViews, &_faeda); _ebgf != nil {
					return _ebgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_bbff.PrintOptions = NewCT_PrintOptions()
				if _edeeg := d.DecodeElement(_bbff.PrintOptions, &_faeda); _edeeg != nil {
					return _edeeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bbff.PageMargins = NewCT_PageMargins()
				if _fdffgf := d.DecodeElement(_bbff.PageMargins, &_faeda); _fdffgf != nil {
					return _fdffgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bbff.PageSetup = NewCT_PageSetup()
				if _cbee := d.DecodeElement(_bbff.PageSetup, &_faeda); _cbee != nil {
					return _cbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bbff.HeaderFooter = NewCT_HeaderFooter()
				if _ageef := d.DecodeElement(_bbff.HeaderFooter, &_faeda); _ageef != nil {
					return _ageef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_bbff.Drawing = NewCT_Drawing()
				if _fgab := d.DecodeElement(_bbff.Drawing, &_faeda); _fgab != nil {
					return _fgab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bbff.LegacyDrawing = NewCT_LegacyDrawing()
				if _aadd := d.DecodeElement(_bbff.LegacyDrawing, &_faeda); _aadd != nil {
					return _aadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bbff.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _caecb := d.DecodeElement(_bbff.LegacyDrawingHF, &_faeda); _caecb != nil {
					return _caecb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bbff.DrawingHF = NewCT_DrawingHF()
				if _aecdf := d.DecodeElement(_bbff.DrawingHF, &_faeda); _aecdf != nil {
					return _aecdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_bbff.OleObjects = NewCT_OleObjects()
				if _cedb := d.DecodeElement(_bbff.OleObjects, &_faeda); _cedb != nil {
					return _cedb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_bbff.Controls = NewCT_Controls()
				if _efaa := d.DecodeElement(_bbff.Controls, &_faeda); _efaa != nil {
					return _efaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbff.ExtLst = NewCT_ExtensionList()
				if _ffceg := d.DecodeElement(_bbff.ExtLst, &_faeda); _ffceg != nil {
					return _ffceg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067\u0073h\u0065e\u0074\u0020\u0025\u0076", _faeda.Name)
				if _beed := d.Skip(); _beed != nil {
					return _beed
				}
			}
		case _b.EndElement:
			break _aaacb
		case _b.CharData:
		}
	}
	return nil
}
func (_abddgb *ST_DdeValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abddgb = 0
	case "\u006e\u0069\u006c":
		*_abddgb = 1
	case "\u0062":
		*_abddgb = 2
	case "\u006e":
		*_abddgb = 3
	case "\u0065":
		*_abddgb = 4
	case "\u0073\u0074\u0072":
		*_abddgb = 5
	}
	return nil
}

type ST_TargetScreenSize byte

// Validate validates the CT_RElt and its children
func (_aggdd *CT_RElt) Validate() error {
	return _aggdd.ValidateWithPath("\u0043T\u005f\u0052\u0045\u006c\u0074")
}
func (_ddeec *CT_DbPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", _ddeec.ConnectionAttr)})
	if _ddeec.CommandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0061\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ddeec.CommandAttr)})
	}
	if _ddeec.ServerCommandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ddeec.ServerCommandAttr)})
	}
	if _ddeec.CommandTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_ddeec.CommandTypeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PageSetup and its children, prefixing error messages with path
func (_gcdba *CT_PageSetup) ValidateWithPath(path string) error {
	if _gcdba.PaperHeightAttr != nil {
		if !_c.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gcdba.PaperHeightAttr) {
			return _f.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_PositiveUniversalMeasurePatternRe, *_gcdba.PaperHeightAttr)
		}
	}
	if _gcdba.PaperHeightAttr != nil {
		if !_c.ST_UniversalMeasurePatternRe.MatchString(*_gcdba.PaperHeightAttr) {
			return _f.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_UniversalMeasurePatternRe, *_gcdba.PaperHeightAttr)
		}
	}
	if _gcdba.PaperWidthAttr != nil {
		if !_c.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gcdba.PaperWidthAttr) {
			return _f.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_PositiveUniversalMeasurePatternRe, *_gcdba.PaperWidthAttr)
		}
	}
	if _gcdba.PaperWidthAttr != nil {
		if !_c.ST_UniversalMeasurePatternRe.MatchString(*_gcdba.PaperWidthAttr) {
			return _f.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _c.ST_UniversalMeasurePatternRe, *_gcdba.PaperWidthAttr)
		}
	}
	if _gdgda := _gcdba.PageOrderAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u004f\u0072\u0064\u0065r\u0041\u0074\u0074\u0072"); _gdgda != nil {
		return _gdgda
	}
	if _gcbaca := _gcdba.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gcbaca != nil {
		return _gcbaca
	}
	if _gaabe := _gcdba.CellCommentsAttr.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _gaabe != nil {
		return _gaabe
	}
	if _dcbde := _gcdba.ErrorsAttr.ValidateWithPath(path + "/\u0045\u0072\u0072\u006f\u0072\u0073\u0041\u0074\u0074\u0072"); _dcbde != nil {
		return _dcbde
	}
	return nil
}
func (_fabad ST_DdeValueType) String() string {
	switch _fabad {
	case 0:
		return ""
	case 1:
		return "\u006e\u0069\u006c"
	case 2:
		return "\u0062"
	case 3:
		return "\u006e"
	case 4:
		return "\u0065"
	case 5:
		return "\u0073\u0074\u0072"
	}
	return ""
}

type CT_Scenario struct {

	// Scenario Name
	NameAttr string

	// Scenario Locked
	LockedAttr *bool

	// Hidden Scenario
	HiddenAttr *bool

	// Changing Cell Count
	CountAttr *uint32

	// User Name
	UserAttr *string

	// Scenario Comment
	CommentAttr *string

	// Input Cells
	InputCells []*CT_InputCells
}

func NewCT_BookView() *CT_BookView { _bga := &CT_BookView{}; return _bga }

type CT_WebPublishItem struct {

	// Id
	IdAttr uint32

	// Destination Bookmark
	DivIdAttr string

	// Web Source Type
	SourceTypeAttr ST_WebSourceType

	// Source Id
	SourceRefAttr *string

	// Source Object Name
	SourceObjectAttr *string

	// Destination File Name
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Automatically Publish
	AutoRepublishAttr *bool
}

// ValidateWithPath validates the CT_OleItems and its children, prefixing error messages with path
func (_dgecf *CT_OleItems) ValidateWithPath(path string) error {
	for _fabbb, _fbbd := range _dgecf.OleItem {
		if _gacca := _fbbd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004f\u006c\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _fabbb)); _gacca != nil {
			return _gacca
		}
	}
	return nil
}
func (_cceabc ST_PivotFilterType) ValidateWithPath(path string) error {
	switch _cceabc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cceabc))
	}
	return nil
}

// ValidateWithPath validates the CT_PivotFilter and its children, prefixing error messages with path
func (_abbeg *CT_PivotFilter) ValidateWithPath(path string) error {
	if _abbeg.TypeAttr == ST_PivotFilterTypeUnset {
		return _f.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gfaef := _abbeg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gfaef != nil {
		return _gfaef
	}
	if _ebdba := _abbeg.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _ebdba != nil {
		return _ebdba
	}
	if _abbeg.ExtLst != nil {
		if _dbdgdb := _abbeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbdgdb != nil {
			return _dbdgdb
		}
	}
	return nil
}

type ST_Orientation byte

func (_aebda ST_TextHAlign) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aebda.String(), start)
}

type ST_TimePeriod byte

// ValidateWithPath validates the CT_WebPublishItems and its children, prefixing error messages with path
func (_gcdda *CT_WebPublishItems) ValidateWithPath(path string) error {
	for _feagbf, _ddbdg := range _gcdda.WebPublishItem {
		if _ddaab := _ddbdg.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0057\u0065bP\u0075b\u006c\u0069\u0073\u0068\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _feagbf)); _ddaab != nil {
			return _ddaab
		}
	}
	return nil
}

type CT_CellStyleXfs struct {

	// Style Count
	CountAttr *uint32

	// Formatting Elements
	Xf []*CT_Xf
}

func NewCT_CommentPr() *CT_CommentPr {
	_feab := &CT_CommentPr{}
	_feab.Anchor = NewCT_ObjectAnchor()
	return _feab
}
func (_fafgc *CT_Extension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdgfe := range start.Attr {
		if _fdgfe.Name.Local == "\u0075\u0072\u0069" {
			_cfcc, _gacaf := _fdgfe.Value, error(nil)
			if _gacaf != nil {
				return _gacaf
			}
			_fafgc.UriAttr = &_cfcc
			continue
		}
	}
_dabeb:
	for {
		_eaeec, _ccddc := d.Token()
		if _ccddc != nil {
			return _ccddc
		}
		switch _dccbg := _eaeec.(type) {
		case _b.StartElement:
			switch _dccbg.Name {
			default:
				if _gggeg, _gbeed := _d.CreateElement(_dccbg); _gbeed != nil {
					return _gbeed
				} else {
					if _bgdgf := d.DecodeElement(_gggeg, &_dccbg); _bgdgf != nil {
						return _bgdgf
					}
					_fafgc.Any = _gggeg
				}
			}
		case _b.EndElement:
			break _dabeb
		case _b.CharData:
		}
	}
	return nil
}

type CT_Dxfs struct {

	// Format Count
	CountAttr *uint32

	// Formatting
	Dxf []*CT_Dxf
}
type ST_PhoneticAlignment byte

func (_ecaa *CT_CellProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgfd := range start.Attr {
		if _dgfd.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_gaad, _gadd := _e.ParseBool(_dgfd.Value)
			if _gadd != nil {
				return _gadd
			}
			_ecaa.LockedAttr = &_gaad
			continue
		}
		if _dgfd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dfee, _gafe := _e.ParseBool(_dgfd.Value)
			if _gafe != nil {
				return _gafe
			}
			_ecaa.HiddenAttr = &_dfee
			continue
		}
	}
	for {
		_ggg, _dcac := d.Token()
		if _dcac != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e: \u0025\u0073", _dcac)
		}
		if _gaec, _dagg := _ggg.(_b.EndElement); _dagg && _gaec.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_IndexedColors() *CT_IndexedColors { _fgaf := &CT_IndexedColors{}; return _fgaf }
func NewCT_OleItem() *CT_OleItem             { _eedac := &CT_OleItem{}; return _eedac }
func (_dbcea *CT_Scenario) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adgab := range start.Attr {
		if _adgab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efga, _egcdd := _adgab.Value, error(nil)
			if _egcdd != nil {
				return _egcdd
			}
			_dbcea.NameAttr = _efga
			continue
		}
		if _adgab.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_aceef, _fbceg := _e.ParseBool(_adgab.Value)
			if _fbceg != nil {
				return _fbceg
			}
			_dbcea.LockedAttr = &_aceef
			continue
		}
		if _adgab.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_aaaba, _afbgc := _e.ParseBool(_adgab.Value)
			if _afbgc != nil {
				return _afbgc
			}
			_dbcea.HiddenAttr = &_aaaba
			continue
		}
		if _adgab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aeefae, _bdgba := _e.ParseUint(_adgab.Value, 10, 32)
			if _bdgba != nil {
				return _bdgba
			}
			_gfced := uint32(_aeefae)
			_dbcea.CountAttr = &_gfced
			continue
		}
		if _adgab.Name.Local == "\u0075\u0073\u0065\u0072" {
			_eadfb, _ggedb := _adgab.Value, error(nil)
			if _ggedb != nil {
				return _ggedb
			}
			_dbcea.UserAttr = &_eadfb
			continue
		}
		if _adgab.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_aadcda, _fgcae := _adgab.Value, error(nil)
			if _fgcae != nil {
				return _fgcae
			}
			_dbcea.CommentAttr = &_aadcda
			continue
		}
	}
_gbega:
	for {
		_babdcc, _adgdg := d.Token()
		if _adgdg != nil {
			return _adgdg
		}
		switch _ddfac := _babdcc.(type) {
		case _b.StartElement:
			switch _ddfac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}:
				_gdfgg := NewCT_InputCells()
				if _egbdff := d.DecodeElement(_gdfgg, &_ddfac); _egbdff != nil {
					return _egbdff
				}
				_dbcea.InputCells = append(_dbcea.InputCells, _gdfgg)
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0020\u0025\u0076", _ddfac.Name)
				if _ffbec := d.Skip(); _ffbec != nil {
					return _ffbec
				}
			}
		case _b.EndElement:
			break _gbega
		case _b.CharData:
		}
	}
	return nil
}
func (_bdgeggd ST_SourceType) String() string {
	switch _bdgeggd {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case 3:
		return "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return ""
}
func (_feaba *CT_ConditionalFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_feaba.PivotAreas = NewCT_PivotAreas()
	for _, _gafcf := range start.Attr {
		if _gafcf.Name.Local == "\u0073\u0063\u006fp\u0065" {
			_feaba.ScopeAttr.UnmarshalXMLAttr(_gafcf)
			continue
		}
		if _gafcf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_feaba.TypeAttr.UnmarshalXMLAttr(_gafcf)
			continue
		}
		if _gafcf.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_dffeg, _dadcc := _e.ParseUint(_gafcf.Value, 10, 32)
			if _dadcc != nil {
				return _dadcc
			}
			_feaba.PriorityAttr = uint32(_dffeg)
			continue
		}
	}
_bgae:
	for {
		_bedf, _dedge := d.Token()
		if _dedge != nil {
			return _dedge
		}
		switch _agfe := _bedf.(type) {
		case _b.StartElement:
			switch _agfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}:
				if _gdac := d.DecodeElement(_feaba.PivotAreas, &_agfe); _gdac != nil {
					return _gdac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_feaba.ExtLst = NewCT_ExtensionList()
				if _fdad := d.DecodeElement(_feaba.ExtLst, &_agfe); _fdad != nil {
					return _fdad
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0020\u0025\u0076", _agfe.Name)
				if _bdbe := d.Skip(); _bdbe != nil {
					return _bdbe
				}
			}
		case _b.EndElement:
			break _bgae
		case _b.CharData:
		}
	}
	return nil
}
func (_gabfc ST_OleUpdate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gabfc.String(), start)
}

const (
	ST_rwColActionTypeUnset     ST_rwColActionType = 0
	ST_rwColActionTypeInsertRow ST_rwColActionType = 1
	ST_rwColActionTypeDeleteRow ST_rwColActionType = 2
	ST_rwColActionTypeInsertCol ST_rwColActionType = 3
	ST_rwColActionTypeDeleteCol ST_rwColActionType = 4
)

func (_gbcabe ST_DataValidationErrorStyle) Validate() error { return _gbcabe.ValidateWithPath("") }

type CT_WorkbookPr struct {

	// Date 1904
	Date1904Attr *bool

	// Show Objects
	ShowObjectsAttr ST_Objects

	// Show Border Unselected Table
	ShowBorderUnselectedTablesAttr *bool

	// Filter Privacy
	FilterPrivacyAttr *bool

	// Prompted Solutions
	PromptedSolutionsAttr *bool

	// Show Ink Annotations
	ShowInkAnnotationAttr *bool

	// Create Backup File
	BackupFileAttr *bool

	// Save External Link Values
	SaveExternalLinkValuesAttr *bool

	// Update Links Behavior
	UpdateLinksAttr ST_UpdateLinks

	// Code Name
	CodeNameAttr *string

	// Hide Pivot Field List
	HidePivotFieldListAttr *bool

	// Show Pivot Chart Filter
	ShowPivotChartFilterAttr *bool

	// Allow Refresh Query
	AllowRefreshQueryAttr *bool

	// Publish Items
	PublishItemsAttr *bool

	// Check Compatibility On Save
	CheckCompatibilityAttr *bool

	// Auto Compress Pictures
	AutoCompressPicturesAttr *bool

	// Refresh all Connections on Open
	RefreshAllConnectionsAttr *bool

	// Default Theme Version
	DefaultThemeVersionAttr *uint32
}

func (_bdgc *CT_Connection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eabac := range start.Attr {
		if _eabac.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_bgfda, _egac := _e.ParseBool(_eabac.Value)
			if _egac != nil {
				return _egac
			}
			_bdgc.DeletedAttr = &_bgfda
			continue
		}
		if _eabac.Name.Local == "\u0069\u0064" {
			_gefag, _fdbcc := _e.ParseUint(_eabac.Value, 10, 32)
			if _fdbcc != nil {
				return _fdbcc
			}
			_bdgc.IdAttr = uint32(_gefag)
			continue
		}
		if _eabac.Name.Local == "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065" {
			_aadg, _ddfbe := _e.ParseBool(_eabac.Value)
			if _ddfbe != nil {
				return _ddfbe
			}
			_bdgc.OnlyUseConnectionFileAttr = &_aadg
			continue
		}
		if _eabac.Name.Local == "\u006fd\u0063\u0046\u0069\u006c\u0065" {
			_cgacb, _gcgbd := _eabac.Value, error(nil)
			if _gcgbd != nil {
				return _gcgbd
			}
			_bdgc.OdcFileAttr = &_cgacb
			continue
		}
		if _eabac.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064" {
			_ebaa, _adae := _e.ParseBool(_eabac.Value)
			if _adae != nil {
				return _adae
			}
			_bdgc.BackgroundAttr = &_ebaa
			continue
		}
		if _eabac.Name.Local == "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_cffe, _egedf := _e.ParseUint(_eabac.Value, 10, 32)
			if _egedf != nil {
				return _egedf
			}
			_cddbg := uint32(_cffe)
			_bdgc.IntervalAttr = &_cddbg
			continue
		}
		if _eabac.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_dbdba, _dcbd := _e.ParseBool(_eabac.Value)
			if _dcbd != nil {
				return _dcbd
			}
			_bdgc.RefreshOnLoadAttr = &_dbdba
			continue
		}
		if _eabac.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_fbbgb, _dfgf := _eabac.Value, error(nil)
			if _dfgf != nil {
				return _dfgf
			}
			_bdgc.DescriptionAttr = &_fbbgb
			continue
		}
		if _eabac.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_dbef, _ccge := _e.ParseBool(_eabac.Value)
			if _ccge != nil {
				return _ccge
			}
			_bdgc.SaveDataAttr = &_dbef
			continue
		}
		if _eabac.Name.Local == "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064" {
			_gffed, _eeffg := _e.ParseUint(_eabac.Value, 10, 32)
			if _eeffg != nil {
				return _eeffg
			}
			_egedfg := uint32(_gffed)
			_bdgc.ReconnectionMethodAttr = &_egedfg
			continue
		}
		if _eabac.Name.Local == "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073" {
			_bdgc.CredentialsAttr.UnmarshalXMLAttr(_eabac)
			continue
		}
		if _eabac.Name.Local == "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e" {
			_dcaf, _eedb := _e.ParseBool(_eabac.Value)
			if _eedb != nil {
				return _eedb
			}
			_bdgc.KeepAliveAttr = &_dcaf
			continue
		}
		if _eabac.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_aedab, _bgbfb := _eabac.Value, error(nil)
			if _bgbfb != nil {
				return _bgbfb
			}
			_bdgc.SourceFileAttr = &_aedab
			continue
		}
		if _eabac.Name.Local == "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064" {
			_fcbd, _gfeb := _eabac.Value, error(nil)
			if _gfeb != nil {
				return _gfeb
			}
			_bdgc.SingleSignOnIdAttr = &_fcbd
			continue
		}
		if _eabac.Name.Local == "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_bcebf, _bfee := _e.ParseBool(_eabac.Value)
			if _bfee != nil {
				return _bfee
			}
			_bdgc.SavePasswordAttr = &_bcebf
			continue
		}
		if _eabac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbbg, _fcag := _eabac.Value, error(nil)
			if _fcag != nil {
				return _fcag
			}
			_bdgc.NameAttr = &_gbbg
			continue
		}
		if _eabac.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cedg, _agdfc := _e.ParseUint(_eabac.Value, 10, 8)
			if _agdfc != nil {
				return _agdfc
			}
			_bdgc.RefreshedVersionAttr = uint8(_cedg)
			continue
		}
		if _eabac.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ebbf, _cgbd := _e.ParseUint(_eabac.Value, 10, 8)
			if _cgbd != nil {
				return _cgbd
			}
			_ffdfd := uint8(_ebbf)
			_bdgc.MinRefreshableVersionAttr = &_ffdfd
			continue
		}
		if _eabac.Name.Local == "\u006e\u0065\u0077" {
			_dfccb, _ggbb := _e.ParseBool(_eabac.Value)
			if _ggbb != nil {
				return _ggbb
			}
			_bdgc.NewAttr = &_dfccb
			continue
		}
		if _eabac.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ebggf, _egfg := _e.ParseUint(_eabac.Value, 10, 32)
			if _egfg != nil {
				return _egfg
			}
			_fbab := uint32(_ebggf)
			_bdgc.TypeAttr = &_fbab
			continue
		}
	}
_dfgeb:
	for {
		_ebdb, _ffcf := d.Token()
		if _ffcf != nil {
			return _ffcf
		}
		switch _cagcf := _ebdb.(type) {
		case _b.StartElement:
			switch _cagcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}:
				_bdgc.DbPr = NewCT_DbPr()
				if _afed := d.DecodeElement(_bdgc.DbPr, &_cagcf); _afed != nil {
					return _afed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}:
				_bdgc.OlapPr = NewCT_OlapPr()
				if _fdgb := d.DecodeElement(_bdgc.OlapPr, &_cagcf); _fdgb != nil {
					return _fdgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_bdgc.WebPr = NewCT_WebPr()
				if _fcfa := d.DecodeElement(_bdgc.WebPr, &_cagcf); _fcfa != nil {
					return _fcfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}:
				_bdgc.TextPr = NewCT_TextPr()
				if _cecgc := d.DecodeElement(_bdgc.TextPr, &_cagcf); _cecgc != nil {
					return _cecgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}:
				_bdgc.Parameters = NewCT_Parameters()
				if _cgcd := d.DecodeElement(_bdgc.Parameters, &_cagcf); _cgcd != nil {
					return _cgcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdgc.ExtLst = NewCT_ExtensionList()
				if _bbcac := d.DecodeElement(_bdgc.ExtLst, &_cagcf); _bbcac != nil {
					return _bbcac
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e \u0025\u0076", _cagcf.Name)
				if _fbdc := d.Skip(); _fbdc != nil {
					return _fbdc
				}
			}
		case _b.EndElement:
			break _dfgeb
		case _b.CharData:
		}
	}
	return nil
}
func (_bfb *CT_CellStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bfb.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bfb.XfIdAttr)})
	if _bfb.BuiltinIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d"}, Value: _f.Sprintf("\u0025\u0076", *_bfb.BuiltinIdAttr)})
	}
	if _bfb.ILevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u004c\u0065\u0076\u0065\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_bfb.ILevelAttr)})
	}
	if _bfb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfb.HiddenAttr))})
	}
	if _bfb.CustomBuiltinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfb.CustomBuiltinAttr))})
	}
	e.EncodeToken(start)
	if _bfb.ExtLst != nil {
		_agff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bfb.ExtLst, _agff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SmartTagTypes and its children, prefixing error messages with path
func (_bgaff *CT_SmartTagTypes) ValidateWithPath(path string) error {
	for _ccged, _bdeaf := range _bgaff.SmartTagType {
		if _fefcc := _bdeaf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053ma\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _ccged)); _fefcc != nil {
			return _fefcc
		}
	}
	return nil
}

// Validate validates the CT_PivotAreaReferences and its children
func (_dfebba *CT_PivotAreaReferences) Validate() error {
	return _dfebba.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073")
}

const (
	ST_DvAspectUnset            ST_DvAspect = 0
	ST_DvAspectDVASPECT_CONTENT ST_DvAspect = 1
	ST_DvAspectDVASPECT_ICON    ST_DvAspect = 2
)

func (_cbegf *CT_MetadataRecord) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _babed := range start.Attr {
		if _babed.Name.Local == "\u0074" {
			_fdcfd, _cdfbc := _e.ParseUint(_babed.Value, 10, 32)
			if _cdfbc != nil {
				return _cdfbc
			}
			_cbegf.TAttr = uint32(_fdcfd)
			continue
		}
		if _babed.Name.Local == "\u0076" {
			_aeddf, _fdfga := _e.ParseUint(_babed.Value, 10, 32)
			if _fdfga != nil {
				return _fdfga
			}
			_cbegf.VAttr = uint32(_aeddf)
			continue
		}
	}
	for {
		_cadcf, _ggeab := d.Token()
		if _ggeab != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052\u0065\u0063\u006f\u0072\u0064: \u0025\u0073", _ggeab)
		}
		if _dfbbf, _bacbb := _cadcf.(_b.EndElement); _bacbb && _dfbbf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bagfb ST_SmartTagShow) String() string {
	switch _bagfb {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return ""
}
func (_dgade *CT_Row) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cddfgc := range start.Attr {
		if _cddfgc.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_efacc, _cabbc := _e.ParseUint(_cddfgc.Value, 10, 8)
			if _cabbc != nil {
				return _cabbc
			}
			_bggcc := uint8(_efacc)
			_dgade.OutlineLevelAttr = &_bggcc
			continue
		}
		if _cddfgc.Name.Local == "\u0072" {
			_fgacb, _afafg := _e.ParseUint(_cddfgc.Value, 10, 32)
			if _afafg != nil {
				return _afafg
			}
			_eceee := uint32(_fgacb)
			_dgade.RAttr = &_eceee
			continue
		}
		if _cddfgc.Name.Local == "\u0073" {
			_aeeca, _dceagd := _e.ParseUint(_cddfgc.Value, 10, 32)
			if _dceagd != nil {
				return _dceagd
			}
			_bgegd := uint32(_aeeca)
			_dgade.SAttr = &_bgegd
			continue
		}
		if _cddfgc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074" {
			_defega, _fagfd := _e.ParseBool(_cddfgc.Value)
			if _fagfd != nil {
				return _fagfd
			}
			_dgade.CustomFormatAttr = &_defega
			continue
		}
		if _cddfgc.Name.Local == "\u0068\u0074" {
			_fgabc, _gefca := _e.ParseFloat(_cddfgc.Value, 64)
			if _gefca != nil {
				return _gefca
			}
			_dgade.HtAttr = &_fgabc
			continue
		}
		if _cddfgc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_acfbed, _gebbbf := _e.ParseBool(_cddfgc.Value)
			if _gebbbf != nil {
				return _gebbbf
			}
			_dgade.HiddenAttr = &_acfbed
			continue
		}
		if _cddfgc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_egcce, _bebceb := _e.ParseBool(_cddfgc.Value)
			if _bebceb != nil {
				return _bebceb
			}
			_dgade.CustomHeightAttr = &_egcce
			continue
		}
		if _cddfgc.Name.Local == "\u0073\u0070\u0061n\u0073" {
			_fcdff, _bgafe := ParseSliceST_CellSpans(_cddfgc.Value)
			if _bgafe != nil {
				return _bgafe
			}
			_dgade.SpansAttr = &_fcdff
			continue
		}
		if _cddfgc.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_dgfac, _efeddb := _e.ParseBool(_cddfgc.Value)
			if _efeddb != nil {
				return _efeddb
			}
			_dgade.CollapsedAttr = &_dgfac
			continue
		}
		if _cddfgc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_dddfab, _bbfba := _e.ParseBool(_cddfgc.Value)
			if _bbfba != nil {
				return _bbfba
			}
			_dgade.ThickTopAttr = &_dddfab
			continue
		}
		if _cddfgc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074" {
			_gbaea, _acaafd := _e.ParseBool(_cddfgc.Value)
			if _acaafd != nil {
				return _acaafd
			}
			_dgade.ThickBotAttr = &_gbaea
			continue
		}
		if _cddfgc.Name.Local == "\u0070\u0068" {
			_ccecgc, _gffea := _e.ParseBool(_cddfgc.Value)
			if _gffea != nil {
				return _gffea
			}
			_dgade.PhAttr = &_ccecgc
			continue
		}
	}
_fdadfe:
	for {
		_adfffb, _bfbgba := d.Token()
		if _bfbgba != nil {
			return _bfbgba
		}
		switch _faeac := _adfffb.(type) {
		case _b.StartElement:
			switch _faeac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_caagg := NewCT_Cell()
				if _ecbag := d.DecodeElement(_caagg, &_faeac); _ecbag != nil {
					return _ecbag
				}
				_dgade.C = append(_dgade.C, _caagg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgade.ExtLst = NewCT_ExtensionList()
				if _cfgba := d.DecodeElement(_dgade.ExtLst, &_faeac); _cfgba != nil {
					return _cfgba
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u006f\u0077\u0020\u0025\u0076", _faeac.Name)
				if _fabag := d.Skip(); _fabag != nil {
					return _fabag
				}
			}
		case _b.EndElement:
			break _fdadfe
		case _b.CharData:
		}
	}
	return nil
}
func (_eade *CT_CalcChain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbfe:
	for {
		_geeg, _cbdd := d.Token()
		if _cbdd != nil {
			return _cbdd
		}
		switch _bgc := _geeg.(type) {
		case _b.StartElement:
			switch _bgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_abab := NewCT_CalcCell()
				if _dbgb := d.DecodeElement(_abab, &_bgc); _dbgb != nil {
					return _dbgb
				}
				_eade.C = append(_eade.C, _abab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eade.ExtLst = NewCT_ExtensionList()
				if _fdce := d.DecodeElement(_eade.ExtLst, &_bgc); _fdce != nil {
					return _fdce
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0061\u006cc\u0043\u0068\u0061\u0069\u006e\u0020\u0025\u0076", _bgc.Name)
				if _eefb := d.Skip(); _eefb != nil {
					return _eefb
				}
			}
		case _b.EndElement:
			break _cbfe
		case _b.CharData:
		}
	}
	return nil
}

type ST_FontScheme byte
type CT_PageMargins struct {

	// Left Page Margin
	LeftAttr float64

	// Right Page Margin
	RightAttr float64

	// Top Page Margin
	TopAttr float64

	// Bottom Page Margin
	BottomAttr float64

	// Header Page Margin
	HeaderAttr float64

	// Footer Page Margin
	FooterAttr float64
}

func (_gafea *ST_TableType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebadb, _egccbg := d.Token()
	if _egccbg != nil {
		return _egccbg
	}
	if _acccb, _gfeed := _ebadb.(_b.EndElement); _gfeed && _acccb.Name == start.Name {
		*_gafea = 1
		return nil
	}
	if _fedafe, _eegdab := _ebadb.(_b.CharData); !_eegdab {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebadb)
	} else {
		switch string(_fedafe) {
		case "":
			*_gafea = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_gafea = 1
		case "\u0078\u006d\u006c":
			*_gafea = 2
		case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
			*_gafea = 3
		}
	}
	_ebadb, _egccbg = d.Token()
	if _egccbg != nil {
		return _egccbg
	}
	if _gggce, _ffadb := _ebadb.(_b.EndElement); _ffadb && _gggce.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebadb)
}
func (_dbbd *CT_CellSmartTagPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daaa := range start.Attr {
		if _daaa.Name.Local == "\u006b\u0065\u0079" {
			_gefdg, _dbdd := _daaa.Value, error(nil)
			if _dbdd != nil {
				return _dbdd
			}
			_dbbd.KeyAttr = _gefdg
			continue
		}
		if _daaa.Name.Local == "\u0076\u0061\u006c" {
			_cbae, _fgeae := _daaa.Value, error(nil)
			if _fgeae != nil {
				return _fgeae
			}
			_dbbd.ValAttr = _cbae
			continue
		}
	}
	for {
		_daaf, _cfac := d.Token()
		if _cfac != nil {
			return _f.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072: \u0025\u0073", _cfac)
		}
		if _cabg, _cbcg := _daaf.(_b.EndElement); _cbcg && _cabg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SheetId() *CT_SheetId { _ddadc := &CT_SheetId{}; return _ddadc }

type CT_DataRefs struct {

	// Data Consolidation Reference Count
	CountAttr *uint32

	// Data Consolidation Reference
	DataRef []*CT_DataRef
}

// Validate validates the CT_VolTypes and its children
func (_dfffc *CT_VolTypes) Validate() error {
	return _dfffc.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}
func NewCT_DataConsolidate() *CT_DataConsolidate { _befae := &CT_DataConsolidate{}; return _befae }
func (_bfead ST_PhoneticAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_deeec := _b.Attr{}
	_deeec.Name = name
	switch _bfead {
	case ST_PhoneticAlignmentUnset:
		_deeec.Value = ""
	case ST_PhoneticAlignmentNoControl:
		_deeec.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_PhoneticAlignmentLeft:
		_deeec.Value = "\u006c\u0065\u0066\u0074"
	case ST_PhoneticAlignmentCenter:
		_deeec.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_PhoneticAlignmentDistributed:
		_deeec.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _deeec, nil
}

type CT_DateTime struct {

	// Value
	VAttr _gb.Time

	// Unused Item
	UAttr *bool

	// Calculated Item Value
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Index
	X []*CT_X
}

// Validate validates the CT_BookView and its children
func (_gbd *CT_BookView) Validate() error {
	return _gbd.ValidateWithPath("C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077")
}

// Validate validates the CT_Missing and its children
func (_eddabc *CT_Missing) Validate() error {
	return _eddabc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func (_gceca ST_FormulaExpression) Validate() error { return _gceca.ValidateWithPath("") }

// ValidateWithPath validates the CT_FutureMetadataBlock and its children, prefixing error messages with path
func (_bagc *CT_FutureMetadataBlock) ValidateWithPath(path string) error {
	if _bagc.ExtLst != nil {
		if _dadbf := _bagc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dadbf != nil {
			return _dadbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XmlCellPr and its children, prefixing error messages with path
func (_ggbed *CT_XmlCellPr) ValidateWithPath(path string) error {
	if _agcdce := _ggbed.XmlPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0050\u0072"); _agcdce != nil {
		return _agcdce
	}
	if _ggbed.ExtLst != nil {
		if _edeff := _ggbed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edeff != nil {
			return _edeff
		}
	}
	return nil
}
func (_cggae *CT_ServerFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cggae.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cggae.CountAttr)})
	}
	e.EncodeToken(start)
	if _cggae.ServerFormat != nil {
		_ebgac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}}
		for _, _cbbff := range _cggae.ServerFormat {
			e.EncodeElement(_cbbff, _ebgac)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ColorScale and its children
func (_cefed *CT_ColorScale) Validate() error {
	return _cefed.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065")
}
func (_gcbgb ST_PageOrder) String() string {
	switch _gcbgb {
	case 0:
		return ""
	case 1:
		return "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case 2:
		return "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return ""
}
func (_dcgbd ST_BorderStyle) String() string {
	switch _dcgbd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0068\u0069\u006e"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d"
	case 4:
		return "\u0064\u0061\u0073\u0068\u0065\u0064"
	case 5:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 6:
		return "\u0074\u0068\u0069c\u006b"
	case 7:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 8:
		return "\u0068\u0061\u0069\u0072"
	case 9:
		return "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case 10:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 12:
		return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 13:
		return "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 14:
		return "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return ""
}
func (_ffacab ST_ExternalConnectionType) Validate() error { return _ffacab.ValidateWithPath("") }
func (_ccefe *ST_TextVAlign) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_feafd, _degdbd := d.Token()
	if _degdbd != nil {
		return _degdbd
	}
	if _eafda, _edcadd := _feafd.(_b.EndElement); _edcadd && _eafda.Name == start.Name {
		*_ccefe = 1
		return nil
	}
	if _ecdcdd, _bcgdb := _feafd.(_b.CharData); !_bcgdb {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feafd)
	} else {
		switch string(_ecdcdd) {
		case "":
			*_ccefe = 0
		case "\u0074\u006f\u0070":
			*_ccefe = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ccefe = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_ccefe = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_ccefe = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_ccefe = 5
		}
	}
	_feafd, _degdbd = d.Token()
	if _degdbd != nil {
		return _degdbd
	}
	if _beegf, _gcgbca := _feafd.(_b.EndElement); _gcgbca && _beegf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feafd)
}
func NewCT_SheetIdMap() *CT_SheetIdMap { _eggfg := &CT_SheetIdMap{}; return _eggfg }

// Validate validates the CT_MdxKPI and its children
func (_abeafd *CT_MdxKPI) Validate() error {
	return _abeafd.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I")
}

// Validate validates the CT_PivotCache and its children
func (_gbagd *CT_PivotCache) Validate() error {
	return _gbagd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065")
}

// ValidateWithPath validates the CT_CellStyleXfs and its children, prefixing error messages with path
func (_acfe *CT_CellStyleXfs) ValidateWithPath(path string) error {
	for _dcba, _afcfa := range _acfe.Xf {
		if _gfad := _afcfa.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _dcba)); _gfad != nil {
			return _gfad
		}
	}
	return nil
}
func (_daab *CT_FutureMetadataBlock) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _daab.ExtLst != nil {
		_bgaad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_daab.ExtLst, _bgaad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfabb ST_VolDepType) String() string {
	switch _cfabb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case 2:
		return "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return ""
}
func (_cbefde ST_HorizontalAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbefde.String(), start)
}

type Chartsheet struct{ CT_Chartsheet }
type ST_CellType byte

func NewCT_SheetProtection() *CT_SheetProtection { _ceadg := &CT_SheetProtection{}; return _ceadg }
func NewCT_OleSize() *CT_OleSize                 { _gcegac := &CT_OleSize{}; return _gcegac }
func (_edaeb ST_SheetViewType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edaeb.String(), start)
}
func NewCT_PivotAreaReference() *CT_PivotAreaReference {
	_ffdbd := &CT_PivotAreaReference{}
	return _ffdbd
}

// ValidateWithPath validates the CT_Field and its children, prefixing error messages with path
func (_geebc *CT_Field) ValidateWithPath(path string) error { return nil }
func (_eaafc *ST_ItemType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eaafc = 0
	case "\u0064\u0061\u0074\u0061":
		*_eaafc = 1
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_eaafc = 2
	case "\u0073\u0075\u006d":
		*_eaafc = 3
	case "\u0063\u006f\u0075\u006e\u0074\u0041":
		*_eaafc = 4
	case "\u0061\u0076\u0067":
		*_eaafc = 5
	case "\u006d\u0061\u0078":
		*_eaafc = 6
	case "\u006d\u0069\u006e":
		*_eaafc = 7
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_eaafc = 8
	case "\u0063\u006f\u0075n\u0074":
		*_eaafc = 9
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_eaafc = 10
	case "\u0073t\u0064\u0044\u0065\u0076\u0050":
		*_eaafc = 11
	case "\u0076\u0061\u0072":
		*_eaafc = 12
	case "\u0076\u0061\u0072\u0050":
		*_eaafc = 13
	case "\u0067\u0072\u0061n\u0064":
		*_eaafc = 14
	case "\u0062\u006c\u0061n\u006b":
		*_eaafc = 15
	}
	return nil
}

type CT_Groups struct {

	// Level Group Count
	CountAttr *uint32

	// OLAP Group
	Group []*CT_LevelGroup
}

func NewCT_DdeItems() *CT_DdeItems { _egdb := &CT_DdeItems{}; return _egdb }

// ValidateWithPath validates the CT_MRUColors and its children, prefixing error messages with path
func (_fgdcc *CT_MRUColors) ValidateWithPath(path string) error {
	for _ffafe, _eefgd := range _fgdcc.Color {
		if _efdeg := _eefgd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _ffafe)); _efdeg != nil {
			return _efdeg
		}
	}
	return nil
}

type ST_TextHAlign byte

const (
	ST_PrintErrorUnset     ST_PrintError = 0
	ST_PrintErrorDisplayed ST_PrintError = 1
	ST_PrintErrorBlank     ST_PrintError = 2
	ST_PrintErrorDash      ST_PrintError = 3
	ST_PrintErrorNA        ST_PrintError = 4
)

func (_fabcb *CT_Format) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fabcb.ActionAttr != ST_FormatActionUnset {
		_afegd, _gebed := _fabcb.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _gebed != nil {
			return _gebed
		}
		start.Attr = append(start.Attr, _afegd)
	}
	if _fabcb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_fabcb.DxfIdAttr)})
	}
	e.EncodeToken(start)
	_accag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_fabcb.PivotArea, _accag)
	if _fabcb.ExtLst != nil {
		_dcbdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fabcb.ExtLst, _dcbdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_daecc ST_ParameterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abacfe := _b.Attr{}
	_abacfe.Name = name
	switch _daecc {
	case ST_ParameterTypeUnset:
		_abacfe.Value = ""
	case ST_ParameterTypePrompt:
		_abacfe.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	case ST_ParameterTypeValue:
		_abacfe.Value = "\u0076\u0061\u006cu\u0065"
	case ST_ParameterTypeCell:
		_abacfe.Value = "\u0063\u0065\u006c\u006c"
	}
	return _abacfe, nil
}
func NewCT_PageSetUpPr() *CT_PageSetUpPr { _cddcd := &CT_PageSetUpPr{}; return _cddcd }

// ValidateWithPath validates the CT_QueryTableFields and its children, prefixing error messages with path
func (_dabc *CT_QueryTableFields) ValidateWithPath(path string) error {
	for _deege, _gbgdaf := range _dabc.QueryTableField {
		if _dcfcf := _gbgdaf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u005b\u0025d\u005d", path, _deege)); _dcfcf != nil {
			return _dcfcf
		}
	}
	return nil
}

type CT_QueryTable struct {

	// QueryTable Name
	NameAttr string

	// First Row Column Titles
	HeadersAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Disable Refresh
	DisableRefreshAttr *bool

	// Background Refresh
	BackgroundRefreshAttr *bool

	// First Background Refresh
	FirstBackgroundRefreshAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Grow Shrink Type
	GrowShrinkTypeAttr ST_GrowShrinkType

	// Fill Adjacent Formulas
	FillFormulasAttr *bool

	// Remove Data On Save
	RemoveDataOnSaveAttr *bool

	// Disable Edit
	DisableEditAttr *bool

	// Preserve Formatting On Refresh
	PreserveFormattingAttr *bool

	// Adjust Column Width On Refresh
	AdjustColumnWidthAttr *bool

	// Intermediate
	IntermediateAttr *bool

	// Connection Id
	ConnectionIdAttr uint32

	// QueryTable Refresh Information
	QueryTableRefresh *CT_QueryTableRefresh

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_cafgd ST_Scope) Validate() error { return _cafgd.ValidateWithPath("") }

// ValidateWithPath validates the CT_rowItems and its children, prefixing error messages with path
func (_ddcfc *CT_rowItems) ValidateWithPath(path string) error {
	for _aadfaa, _cbfaa := range _ddcfc.I {
		if _cebfe := _cbfaa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _aadfaa)); _cebfe != nil {
			return _cebfe
		}
	}
	return nil
}
func (_bfgae *CT_Color) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfgae.AutoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bfgae.AutoAttr))})
	}
	if _bfgae.IndexedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0064\u0065\u0078\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bfgae.IndexedAttr)})
	}
	if _bfgae.RgbAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0067\u0062"}, Value: _f.Sprintf("\u0025\u0076", *_bfgae.RgbAttr)})
	}
	if _bfgae.ThemeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0065m\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bfgae.ThemeAttr)})
	}
	if _bfgae.TintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bfgae.TintAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Item struct {

	// Item User Caption
	NAttr *string

	// Item Type
	TAttr ST_ItemType

	// Hidden
	HAttr *bool

	// Character
	SAttr *bool

	// Hide Details
	SdAttr *bool

	// Calculated Member
	FAttr *bool

	// Missing
	MAttr *bool

	// Child Items
	CAttr *bool

	// Item Index
	XAttr *uint32

	// Expanded
	DAttr *bool

	// Drill Across Attributes
	EAttr *bool
}

func (_cccaf ST_DataValidationType) Validate() error { return _cccaf.ValidateWithPath("") }
func (_eebab *CT_FontName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _eebab.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbdga *CT_NumFmts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgdcd := range start.Attr {
		if _fgdcd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eddbc, _facbg := _e.ParseUint(_fgdcd.Value, 10, 32)
			if _facbg != nil {
				return _facbg
			}
			_cffg := uint32(_eddbc)
			_bbdga.CountAttr = &_cffg
			continue
		}
	}
_bbbg:
	for {
		_ggca, _gaedc := d.Token()
		if _gaedc != nil {
			return _gaedc
		}
		switch _eeegcg := _ggca.(type) {
		case _b.StartElement:
			switch _eeegcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_cdcff := NewCT_NumFmt()
				if _dbdbac := d.DecodeElement(_cdcff, &_eeegcg); _dbdbac != nil {
					return _dbdbac
				}
				_bbdga.NumFmt = append(_bbdga.NumFmt, _cdcff)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fN\u0075\u006d\u0046\u006d\u0074\u0073\u0020\u0025\u0076", _eeegcg.Name)
				if _fbad := d.Skip(); _fbad != nil {
					return _fbad
				}
			}
		case _b.EndElement:
			break _bbbg
		case _b.CharData:
		}
	}
	return nil
}

type CT_PivotCache struct {

	// PivotCache Id
	CacheIdAttr uint32
	IdAttr      string
}

// Validate validates the CT_Hyperlinks and its children
func (_fabdc *CT_Hyperlinks) Validate() error {
	return _fabdc.ValidateWithPath("\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073")
}

type CT_TableStyleInfo struct {

	// Style Name
	NameAttr *string

	// Show First Column
	ShowFirstColumnAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColumnStripesAttr *bool
}

func (_fgadge *CT_TextPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdgfa := range start.Attr {
		if _cdgfa.Name.Local == "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s" {
			_abfba, _agccda := _cdgfa.Value, error(nil)
			if _agccda != nil {
				return _agccda
			}
			_fgadge.ThousandsAttr = &_abfba
			continue
		}
		if _cdgfa.Name.Local == "\u0074\u0061\u0062" {
			_edddb, _ddcbb := _e.ParseBool(_cdgfa.Value)
			if _ddcbb != nil {
				return _ddcbb
			}
			_fgadge.TabAttr = &_edddb
			continue
		}
		if _cdgfa.Name.Local == "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065" {
			_fgadge.FileTypeAttr.UnmarshalXMLAttr(_cdgfa)
			continue
		}
		if _cdgfa.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_bbdce, _daecae := _e.ParseBool(_cdgfa.Value)
			if _daecae != nil {
				return _daecae
			}
			_fgadge.SpaceAttr = &_bbdce
			continue
		}
		if _cdgfa.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_accdge, _edbbd := _cdgfa.Value, error(nil)
			if _edbbd != nil {
				return _edbbd
			}
			_fgadge.CharacterSetAttr = &_accdge
			continue
		}
		if _cdgfa.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_afdgc, _edfcg := _cdgfa.Value, error(nil)
			if _edfcg != nil {
				return _edfcg
			}
			_fgadge.SourceFileAttr = &_afdgc
			continue
		}
		if _cdgfa.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d" {
			_ffcdcb, _cfeec := _e.ParseBool(_cdgfa.Value)
			if _cfeec != nil {
				return _cfeec
			}
			_fgadge.DelimitedAttr = &_ffcdcb
			continue
		}
		if _cdgfa.Name.Local == "\u0064e\u0063\u0069\u006d\u0061\u006c" {
			_aabbb, _aaffgc := _cdgfa.Value, error(nil)
			if _aaffgc != nil {
				return _aaffgc
			}
			_fgadge.DecimalAttr = &_aabbb
			continue
		}
		if _cdgfa.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_bfbgf, _dbagf := _e.ParseBool(_cdgfa.Value)
			if _dbagf != nil {
				return _dbagf
			}
			_fgadge.PromptAttr = &_bfbgf
			continue
		}
		if _cdgfa.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_bbadc, _egdgf := _e.ParseUint(_cdgfa.Value, 10, 32)
			if _egdgf != nil {
				return _egdgf
			}
			_gebcf := uint32(_bbadc)
			_fgadge.CodePageAttr = &_gebcf
			continue
		}
		if _cdgfa.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_cefde, _agdbg := _e.ParseUint(_cdgfa.Value, 10, 32)
			if _agdbg != nil {
				return _agdbg
			}
			_fcgfb := uint32(_cefde)
			_fgadge.FirstRowAttr = &_fcgfb
			continue
		}
		if _cdgfa.Name.Local == "\u0063\u006f\u006dm\u0061" {
			_bgdcag, _gbfgb := _e.ParseBool(_cdgfa.Value)
			if _gbfgb != nil {
				return _gbfgb
			}
			_fgadge.CommaAttr = &_bgdcag
			continue
		}
		if _cdgfa.Name.Local == "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn" {
			_bceff, _gbgaf := _e.ParseBool(_cdgfa.Value)
			if _gbgaf != nil {
				return _gbgaf
			}
			_fgadge.SemicolonAttr = &_bceff
			continue
		}
		if _cdgfa.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_dggdd, _bbbfd := _e.ParseBool(_cdgfa.Value)
			if _bbbfd != nil {
				return _bbbfd
			}
			_fgadge.ConsecutiveAttr = &_dggdd
			continue
		}
		if _cdgfa.Name.Local == "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r" {
			_fgadge.QualifierAttr.UnmarshalXMLAttr(_cdgfa)
			continue
		}
		if _cdgfa.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r" {
			_gabdae, _fbcfg := _cdgfa.Value, error(nil)
			if _fbcfg != nil {
				return _fbcfg
			}
			_fgadge.DelimiterAttr = &_gabdae
			continue
		}
	}
_fgaacc:
	for {
		_eggdd, _ebafcd := d.Token()
		if _ebafcd != nil {
			return _ebafcd
		}
		switch _gefdc := _eggdd.(type) {
		case _b.StartElement:
			switch _gefdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_fgadge.TextFields = NewCT_TextFields()
				if _ebgdd := d.DecodeElement(_fgadge.TextFields, &_gefdc); _ebgdd != nil {
					return _ebgdd
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0065\u0078t\u0050\u0072 \u0025\u0076", _gefdc.Name)
				if _beaff := d.Skip(); _beaff != nil {
					return _beaff
				}
			}
		case _b.EndElement:
			break _fgaacc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ColFields() *CT_ColFields { _aafe := &CT_ColFields{}; return _aafe }

// Validate validates the CT_Connection and its children
func (_aeca *CT_Connection) Validate() error {
	return _aeca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_MdxKPI and its children, prefixing error messages with path
func (_ffebg *CT_MdxKPI) ValidateWithPath(path string) error {
	if _ffebg.PAttr == ST_MdxKPIPropertyUnset {
		return _f.Errorf("\u0025\u0073/\u0050\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _dbebe := _ffebg.PAttr.ValidateWithPath(path + "\u002f\u0050\u0041\u0074\u0074\u0072"); _dbebe != nil {
		return _dbebe
	}
	return nil
}

// Validate validates the CT_Metadata and its children
func (_agae *CT_Metadata) Validate() error {
	return _agae.ValidateWithPath("C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

// ValidateWithPath validates the CT_DateGroupItem and its children, prefixing error messages with path
func (_gdaba *CT_DateGroupItem) ValidateWithPath(path string) error {
	if _gdaba.DateTimeGroupingAttr == ST_DateTimeGroupingUnset {
		return _f.Errorf("\u0025s\u002f\u0044a\u0074\u0065\u0054\u0069m\u0065\u0047\u0072o\u0075\u0070\u0069\u006e\u0067\u0041\u0074\u0074\u0072 i\u0073\u0020\u0061 \u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079 \u0066\u0069e\u006c\u0064", path)
	}
	if _aafbd := _gdaba.DateTimeGroupingAttr.ValidateWithPath(path + "/\u0044\u0061\u0074\u0065Ti\u006de\u0047\u0072\u006f\u0075\u0070i\u006e\u0067\u0041\u0074\u0074\u0072"); _aafbd != nil {
		return _aafbd
	}
	return nil
}
func (_bdaff ST_Objects) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abgfcg := _b.Attr{}
	_abgfcg.Name = name
	switch _bdaff {
	case ST_ObjectsUnset:
		_abgfcg.Value = ""
	case ST_ObjectsAll:
		_abgfcg.Value = "\u0061\u006c\u006c"
	case ST_ObjectsPlaceholders:
		_abgfcg.Value = "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case ST_ObjectsNone:
		_abgfcg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _abgfcg, nil
}

// ValidateWithPath validates the CT_Dialogsheet and its children, prefixing error messages with path
func (_edccgd *CT_Dialogsheet) ValidateWithPath(path string) error {
	if _edccgd.SheetPr != nil {
		if _caff := _edccgd.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _caff != nil {
			return _caff
		}
	}
	if _edccgd.SheetViews != nil {
		if _bcbedb := _edccgd.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _bcbedb != nil {
			return _bcbedb
		}
	}
	if _edccgd.SheetFormatPr != nil {
		if _fabf := _edccgd.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _fabf != nil {
			return _fabf
		}
	}
	if _edccgd.SheetProtection != nil {
		if _edgfg := _edccgd.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _edgfg != nil {
			return _edgfg
		}
	}
	if _edccgd.CustomSheetViews != nil {
		if _aabcg := _edccgd.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _aabcg != nil {
			return _aabcg
		}
	}
	if _edccgd.PrintOptions != nil {
		if _bfcaf := _edccgd.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _bfcaf != nil {
			return _bfcaf
		}
	}
	if _edccgd.PageMargins != nil {
		if _cgddg := _edccgd.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _cgddg != nil {
			return _cgddg
		}
	}
	if _edccgd.PageSetup != nil {
		if _geca := _edccgd.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _geca != nil {
			return _geca
		}
	}
	if _edccgd.HeaderFooter != nil {
		if _cdgdc := _edccgd.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _cdgdc != nil {
			return _cdgdc
		}
	}
	if _edccgd.Drawing != nil {
		if _ggde := _edccgd.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _ggde != nil {
			return _ggde
		}
	}
	if _edccgd.LegacyDrawing != nil {
		if _bgbcg := _edccgd.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _bgbcg != nil {
			return _bgbcg
		}
	}
	if _edccgd.LegacyDrawingHF != nil {
		if _cdbda := _edccgd.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _cdbda != nil {
			return _cdbda
		}
	}
	if _edccgd.DrawingHF != nil {
		if _gabc := _edccgd.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gabc != nil {
			return _gabc
		}
	}
	if _edccgd.OleObjects != nil {
		if _fece := _edccgd.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _fece != nil {
			return _fece
		}
	}
	if _edccgd.Controls != nil {
		if _dgfaf := _edccgd.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _dgfaf != nil {
			return _dgfaf
		}
	}
	if _edccgd.ExtLst != nil {
		if _gedfd := _edccgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gedfd != nil {
			return _gedfd
		}
	}
	return nil
}
func (_cdgee *ST_SourceType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgec, _eacdb := d.Token()
	if _eacdb != nil {
		return _eacdb
	}
	if _eefba, _fdbgb := _bdgec.(_b.EndElement); _fdbgb && _eefba.Name == start.Name {
		*_cdgee = 1
		return nil
	}
	if _eebde, _dbacae := _bdgec.(_b.CharData); !_dbacae {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgec)
	} else {
		switch string(_eebde) {
		case "":
			*_cdgee = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_cdgee = 1
		case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
			*_cdgee = 2
		case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
			*_cdgee = 3
		case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
			*_cdgee = 4
		}
	}
	_bdgec, _eacdb = d.Token()
	if _eacdb != nil {
		return _eacdb
	}
	if _dfaff, _faaga := _bdgec.(_b.EndElement); _faaga && _dfaff.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgec)
}
func (_eaecg *CT_Location) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _eaecg.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", _eaecg.FirstHeaderRowAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", _eaecg.FirstDataRowAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0076", _eaecg.FirstDataColAttr)})
	if _eaecg.RowPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eaecg.RowPageCountAttr)})
	}
	if _eaecg.ColPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eaecg.ColPageCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_WebPr struct {

	// XML Source
	XmlAttr *bool

	// Import XML Source Data
	SourceDataAttr *bool

	// Parse PRE
	ParsePreAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Use First Row
	FirstRowAttr *bool

	// Created in Excel 97
	Xl97Attr *bool

	// Dates as Text
	TextDatesAttr *bool

	// Refreshed in Excel 2000
	Xl2000Attr *bool

	// URL
	UrlAttr *string

	// Web Post
	PostAttr *string

	// HTML Tables Only
	HtmlTablesAttr *bool

	// HTML Formatting Handling
	HtmlFormatAttr ST_HtmlFmt

	// Edit Query URL
	EditPageAttr *string

	// Tables
	Tables *CT_Tables
}

// Validate validates the CT_GroupItems and its children
func (_decff *CT_GroupItems) Validate() error {
	return _decff.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073")
}
func (_dagbg *CT_CommentList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dagbg.Comment != nil {
		_deddg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074"}}
		for _, _fabc := range _dagbg.Comment {
			e.EncodeElement(_fabc, _deddg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gacce *CT_Control) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbbf := range start.Attr {
		if _cbbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cbbf.Name.Local == "\u0069\u0064" || _cbbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cbbf.Name.Local == "\u0069\u0064" {
			_gaddc, _fcab := _cbbf.Value, error(nil)
			if _fcab != nil {
				return _fcab
			}
			_gacce.IdAttr = _gaddc
			continue
		}
		if _cbbf.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_ddfd, _gdabf := _e.ParseUint(_cbbf.Value, 10, 32)
			if _gdabf != nil {
				return _gdabf
			}
			_gacce.ShapeIdAttr = uint32(_ddfd)
			continue
		}
		if _cbbf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gddc, _eccef := _cbbf.Value, error(nil)
			if _eccef != nil {
				return _eccef
			}
			_gacce.NameAttr = &_gddc
			continue
		}
	}
_dbfg:
	for {
		_fbfb, _gecgb := d.Token()
		if _gecgb != nil {
			return _gecgb
		}
		switch _cdbfb := _fbfb.(type) {
		case _b.StartElement:
			switch _cdbfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}:
				_gacce.ControlPr = NewCT_ControlPr()
				if _eecd := d.DecodeElement(_gacce.ControlPr, &_cdbfb); _eecd != nil {
					return _eecd
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _cdbfb.Name)
				if _edfg := d.Skip(); _edfg != nil {
					return _edfg
				}
			}
		case _b.EndElement:
			break _dbfg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_NumFmt() *CT_NumFmt { _daegg := &CT_NumFmt{}; return _daegg }
func (_abdcab *ST_SheetState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbdgb, _cebdd := d.Token()
	if _cebdd != nil {
		return _cebdd
	}
	if _bcbdd, _bggbd := _fbdgb.(_b.EndElement); _bggbd && _bcbdd.Name == start.Name {
		*_abdcab = 1
		return nil
	}
	if _bdcdbb, _fgacef := _fbdgb.(_b.CharData); !_fgacef {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbdgb)
	} else {
		switch string(_bdcdbb) {
		case "":
			*_abdcab = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_abdcab = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_abdcab = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_abdcab = 3
		}
	}
	_fbdgb, _cebdd = d.Token()
	if _cebdd != nil {
		return _cebdd
	}
	if _bgegaf, _cacbcf := _fbdgb.(_b.EndElement); _cacbcf && _bgegaf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbdgb)
}

const (
	ST_SmartTagShowUnset       ST_SmartTagShow = 0
	ST_SmartTagShowAll         ST_SmartTagShow = 1
	ST_SmartTagShowNone        ST_SmartTagShow = 2
	ST_SmartTagShowNoIndicator ST_SmartTagShow = 3
)

type CT_DataValidation struct {

	// Data Validation Type
	TypeAttr ST_DataValidationType

	// Data Validation Error Style
	ErrorStyleAttr ST_DataValidationErrorStyle

	// IME Mode Enforced
	ImeModeAttr ST_DataValidationImeMode

	// Operator
	OperatorAttr ST_DataValidationOperator

	// Allow Blank
	AllowBlankAttr *bool

	// Show Drop Down
	ShowDropDownAttr *bool

	// Show Input Message
	ShowInputMessageAttr *bool

	// Show Error Message
	ShowErrorMessageAttr *bool

	// Error Alert Text
	ErrorTitleAttr *string

	// Error Message
	ErrorAttr *string

	// Prompt Title
	PromptTitleAttr *string

	// Input Prompt
	PromptAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Formula 1
	Formula1 *string

	// Formula 2
	Formula2 *string
}

// Validate validates the CT_MdxSet and its children
func (_dbacaf *CT_MdxSet) Validate() error {
	return _dbacaf.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t")
}
func (_agfeb ST_CellComments) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfefgc := _b.Attr{}
	_dfefgc.Name = name
	switch _agfeb {
	case ST_CellCommentsUnset:
		_dfefgc.Value = ""
	case ST_CellCommentsNone:
		_dfefgc.Value = "\u006e\u006f\u006e\u0065"
	case ST_CellCommentsAsDisplayed:
		_dfefgc.Value = "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case ST_CellCommentsAtEnd:
		_dfefgc.Value = "\u0061\u0074\u0045n\u0064"
	}
	return _dfefgc, nil
}

// Validate validates the CT_Tuple and its children
func (_bgegfe *CT_Tuple) Validate() error {
	return _bgegfe.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065")
}
func (_fegfabe *ST_MdxFunctionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afcdf, _ddaafa := d.Token()
	if _ddaafa != nil {
		return _ddaafa
	}
	if _agedfe, _eecga := _afcdf.(_b.EndElement); _eecga && _agedfe.Name == start.Name {
		*_fegfabe = 1
		return nil
	}
	if _beefg, _gfeda := _afcdf.(_b.CharData); !_gfeda {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afcdf)
	} else {
		switch string(_beefg) {
		case "":
			*_fegfabe = 0
		case "\u006d":
			*_fegfabe = 1
		case "\u0076":
			*_fegfabe = 2
		case "\u0073":
			*_fegfabe = 3
		case "\u0063":
			*_fegfabe = 4
		case "\u0072":
			*_fegfabe = 5
		case "\u0070":
			*_fegfabe = 6
		case "\u006b":
			*_fegfabe = 7
		}
	}
	_afcdf, _ddaafa = d.Token()
	if _ddaafa != nil {
		return _ddaafa
	}
	if _ffacdc, _aadge := _afcdf.(_b.EndElement); _aadge && _ffacdc.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afcdf)
}
func NewPivotCacheRecords() *PivotCacheRecords {
	_beaba := &PivotCacheRecords{}
	_beaba.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	return _beaba
}
func NewCT_ChartsheetProtection() *CT_ChartsheetProtection {
	_ggcd := &CT_ChartsheetProtection{}
	return _ggcd
}
func (_bdagd *CT_PivotFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdagd.TypeAttr = ST_PivotFilterType(1)
	_bdagd.AutoFilter = NewCT_AutoFilter()
	for _, _aaccf := range start.Attr {
		if _aaccf.Name.Local == "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064" {
			_eeeee, _fbfcc := _e.ParseUint(_aaccf.Value, 10, 32)
			if _fbfcc != nil {
				return _fbfcc
			}
			_fcgcaf := uint32(_eeeee)
			_bdagd.IMeasureFldAttr = &_fcgcaf
			continue
		}
		if _aaccf.Name.Local == "\u006d\u0070\u0046l\u0064" {
			_gacee, _eacfgb := _e.ParseUint(_aaccf.Value, 10, 32)
			if _eacfgb != nil {
				return _eacfgb
			}
			_geaade := uint32(_gacee)
			_bdagd.MpFldAttr = &_geaade
			continue
		}
		if _aaccf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bdagd.TypeAttr.UnmarshalXMLAttr(_aaccf)
			continue
		}
		if _aaccf.Name.Local == "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r" {
			_abedec, _dgfgg := _e.ParseInt(_aaccf.Value, 10, 32)
			if _dgfgg != nil {
				return _dgfgg
			}
			_eeef := int32(_abedec)
			_bdagd.EvalOrderAttr = &_eeef
			continue
		}
		if _aaccf.Name.Local == "\u0069\u0064" {
			_gdce, _dfeea := _e.ParseUint(_aaccf.Value, 10, 32)
			if _dfeea != nil {
				return _dfeea
			}
			_bdagd.IdAttr = uint32(_gdce)
			continue
		}
		if _aaccf.Name.Local == "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072" {
			_bdedb, _bfdda := _e.ParseUint(_aaccf.Value, 10, 32)
			if _bfdda != nil {
				return _bfdda
			}
			_edcdb := uint32(_bdedb)
			_bdagd.IMeasureHierAttr = &_edcdb
			continue
		}
		if _aaccf.Name.Local == "\u0066\u006c\u0064" {
			_cfccc, _ceeabd := _e.ParseUint(_aaccf.Value, 10, 32)
			if _ceeabd != nil {
				return _ceeabd
			}
			_bdagd.FldAttr = uint32(_cfccc)
			continue
		}
		if _aaccf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdaeed, _abgg := _aaccf.Value, error(nil)
			if _abgg != nil {
				return _abgg
			}
			_bdagd.NameAttr = &_gdaeed
			continue
		}
		if _aaccf.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_bffec, _ccafe := _aaccf.Value, error(nil)
			if _ccafe != nil {
				return _ccafe
			}
			_bdagd.DescriptionAttr = &_bffec
			continue
		}
		if _aaccf.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031" {
			_fgaee, _cbfdc := _aaccf.Value, error(nil)
			if _cbfdc != nil {
				return _cbfdc
			}
			_bdagd.StringValue1Attr = &_fgaee
			continue
		}
		if _aaccf.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032" {
			_gdgge, _bbfeg := _aaccf.Value, error(nil)
			if _bbfeg != nil {
				return _bbfeg
			}
			_bdagd.StringValue2Attr = &_gdgge
			continue
		}
	}
_ecdcd:
	for {
		_bebdf, _caggb := d.Token()
		if _caggb != nil {
			return _caggb
		}
		switch _acga := _bebdf.(type) {
		case _b.StartElement:
			switch _acga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				if _gacfga := d.DecodeElement(_bdagd.AutoFilter, &_acga); _gacfga != nil {
					return _gacfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdagd.ExtLst = NewCT_ExtensionList()
				if _cebgab := d.DecodeElement(_bdagd.ExtLst, &_acga); _cebgab != nil {
					return _cebgab
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069l\u0074e\u0072\u0020\u0025\u0076", _acga.Name)
				if _eccac := d.Skip(); _eccac != nil {
					return _eccac
				}
			}
		case _b.EndElement:
			break _ecdcd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CommentList() *CT_CommentList { _cbaab := &CT_CommentList{}; return _cbaab }
func (_fdcgd ST_DdeValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdcgd.String(), start)
}

const (
	ST_GrowShrinkTypeUnset          ST_GrowShrinkType = 0
	ST_GrowShrinkTypeInsertDelete   ST_GrowShrinkType = 1
	ST_GrowShrinkTypeInsertClear    ST_GrowShrinkType = 2
	ST_GrowShrinkTypeOverwriteClear ST_GrowShrinkType = 3
)

// ValidateWithPath validates the CT_CustomProperty and its children, prefixing error messages with path
func (_fafg *CT_CustomProperty) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RevisionFormatting and its children, prefixing error messages with path
func (_afddf *CT_RevisionFormatting) ValidateWithPath(path string) error {
	if _afddf.Dxf != nil {
		if _cfdcb := _afddf.Dxf.ValidateWithPath(path + "\u002f\u0044\u0078\u0066"); _cfdcb != nil {
			return _cfdcb
		}
	}
	if _afddf.ExtLst != nil {
		if _cddfg := _afddf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cddfg != nil {
			return _cddfg
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_bcaab *EG_ExtensionList) ValidateWithPath(path string) error {
	for _fgecf, _deegg := range _bcaab.Ext {
		if _abgfd := _deegg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _fgecf)); _abgfd != nil {
			return _abgfd
		}
	}
	return nil
}

// Validate validates the CT_TextPr and its children
func (_bcbcde *CT_TextPr) Validate() error {
	return _bcbcde.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r")
}

// Validate validates the CT_WebPr and its children
func (_dgdec *CT_WebPr) Validate() error {
	return _dgdec.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072")
}

// ValidateWithPath validates the CT_Pages and its children, prefixing error messages with path
func (_befee *CT_Pages) ValidateWithPath(path string) error {
	for _abafdf, _bceec := range _befee.Page {
		if _aabed := _bceec.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0050\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _abafdf)); _aabed != nil {
			return _aabed
		}
	}
	return nil
}

// Validate validates the CT_PageSetup and its children
func (_bbgf *CT_PageSetup) Validate() error {
	return _bbgf.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070")
}

// ValidateWithPath validates the CT_TupleCache and its children, prefixing error messages with path
func (_bfged *CT_TupleCache) ValidateWithPath(path string) error {
	if _bfged.Entries != nil {
		if _bfagf := _bfged.Entries.ValidateWithPath(path + "\u002f\u0045\u006e\u0074\u0072\u0069\u0065\u0073"); _bfagf != nil {
			return _bfagf
		}
	}
	if _bfged.Sets != nil {
		if _bebed := _bfged.Sets.ValidateWithPath(path + "\u002f\u0053\u0065t\u0073"); _bebed != nil {
			return _bebed
		}
	}
	if _bfged.QueryCache != nil {
		if _gdgde := _bfged.QueryCache.ValidateWithPath(path + "/\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"); _gdgde != nil {
			return _gdgde
		}
	}
	if _bfged.ServerFormats != nil {
		if _ebdbf := _bfged.ServerFormats.ValidateWithPath(path + "\u002f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"); _ebdbf != nil {
			return _ebdbf
		}
	}
	if _bfged.ExtLst != nil {
		if _ggdfa := _bfged.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggdfa != nil {
			return _ggdfa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConditionalFormat and its children, prefixing error messages with path
func (_bdbge *CT_ConditionalFormat) ValidateWithPath(path string) error {
	if _gedf := _bdbge.ScopeAttr.ValidateWithPath(path + "\u002f\u0053\u0063\u006f\u0070\u0065\u0041\u0074\u0074\u0072"); _gedf != nil {
		return _gedf
	}
	if _geee := _bdbge.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _geee != nil {
		return _geee
	}
	if _fadg := _bdbge.PivotAreas.ValidateWithPath(path + "/\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"); _fadg != nil {
		return _fadg
	}
	if _bdbge.ExtLst != nil {
		if _ggaf := _bdbge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggaf != nil {
			return _ggaf
		}
	}
	return nil
}
func NewCT_IntProperty() *CT_IntProperty { _aaabg := &CT_IntProperty{}; return _aaabg }

// Validate validates the CT_ChartsheetProtection and its children
func (_eagb *CT_ChartsheetProtection) Validate() error {
	return _eagb.ValidateWithPath("\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e")
}
func (_gec *CT_CellFormula) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gec.TAttr != ST_CellFormulaTypeUnset {
		_efcb, _beb := _gec.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _beb != nil {
			return _beb
		}
		start.Attr = append(start.Attr, _efcb)
	}
	if _gec.AcaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.AcaAttr))})
	}
	if _gec.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", *_gec.RefAttr)})
	}
	if _gec.Dt2DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074\u0032\u0044"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.Dt2DAttr))})
	}
	if _gec.DtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.DtrAttr))})
	}
	if _gec.Del1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0031"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.Del1Attr))})
	}
	if _gec.Del2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0032"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.Del2Attr))})
	}
	if _gec.R1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0031"}, Value: _f.Sprintf("\u0025\u0076", *_gec.R1Attr)})
	}
	if _gec.R2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0032"}, Value: _f.Sprintf("\u0025\u0076", *_gec.R2Attr)})
	}
	if _gec.CaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.CaAttr))})
	}
	if _gec.SiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_gec.SiAttr)})
	}
	if _gec.BxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0078"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gec.BxAttr))})
	}
	e.EncodeElement(_gec.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deddgcf *CT_RgbColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bagea := range start.Attr {
		if _bagea.Name.Local == "\u0072\u0067\u0062" {
			_eadeb, _cfeged := _bagea.Value, error(nil)
			if _cfeged != nil {
				return _cfeged
			}
			_deddgcf.RgbAttr = &_eadeb
			continue
		}
	}
	for {
		_aaecgc, _dcfde := d.Token()
		if _dcfde != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u003a\u0020\u0025\u0073", _dcfde)
		}
		if _gbggd, _feabg := _aaecgc.(_b.EndElement); _feabg && _gbggd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RowFields and its children, prefixing error messages with path
func (_abbca *CT_RowFields) ValidateWithPath(path string) error {
	for _eecfe, _fgfefb := range _abbca.Field {
		if _cebcf := _fgfefb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _eecfe)); _cebcf != nil {
			return _cebcf
		}
	}
	return nil
}
func (_gcfcd ST_PaneState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdefgc := _b.Attr{}
	_bdefgc.Name = name
	switch _gcfcd {
	case ST_PaneStateUnset:
		_bdefgc.Value = ""
	case ST_PaneStateSplit:
		_bdefgc.Value = "\u0073\u0070\u006ci\u0074"
	case ST_PaneStateFrozen:
		_bdefgc.Value = "\u0066\u0072\u006f\u007a\u0065\u006e"
	case ST_PaneStateFrozenSplit:
		_bdefgc.Value = "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return _bdefgc, nil
}

// ValidateWithPath validates the CT_CalcChain and its children, prefixing error messages with path
func (_dedd *CT_CalcChain) ValidateWithPath(path string) error {
	for _cdea, _cdcc := range _dedd.C {
		if _dfge := _cdcc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _cdea)); _dfge != nil {
			return _dfge
		}
	}
	if _dedd.ExtLst != nil {
		if _agdf := _dedd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdf != nil {
			return _agdf
		}
	}
	return nil
}
func (_dbbfe *CT_SheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adabdb := range start.Attr {
		if _adabdb.Name.Local == "\u0076\u0069\u0065\u0077" {
			_dbbfe.ViewAttr.UnmarshalXMLAttr(_adabdb)
			continue
		}
		if _adabdb.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_dfdcdb, _dbafe := _adabdb.Value, error(nil)
			if _dbafe != nil {
				return _dbafe
			}
			_dbbfe.TopLeftCellAttr = &_dfdcdb
			continue
		}
		if _adabdb.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_edfc, _fabbbf := _e.ParseBool(_adabdb.Value)
			if _fabbbf != nil {
				return _fabbbf
			}
			_dbbfe.ShowFormulasAttr = &_edfc
			continue
		}
		if _adabdb.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_faecc, _fbbgc := _e.ParseUint(_adabdb.Value, 10, 32)
			if _fbbgc != nil {
				return _fbbgc
			}
			_cgeaga := uint32(_faecc)
			_dbbfe.ColorIdAttr = &_cgeaga
			continue
		}
		if _adabdb.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_dafbd, _ggeec := _e.ParseBool(_adabdb.Value)
			if _ggeec != nil {
				return _ggeec
			}
			_dbbfe.ShowRowColHeadersAttr = &_dafbd
			continue
		}
		if _adabdb.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_gaacc, _fgggc := _e.ParseUint(_adabdb.Value, 10, 32)
			if _fgggc != nil {
				return _fgggc
			}
			_cegac := uint32(_gaacc)
			_dbbfe.ZoomScaleAttr = &_cegac
			continue
		}
		if _adabdb.Name.Local == "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074" {
			_aggge, _acgfgb := _e.ParseBool(_adabdb.Value)
			if _acgfgb != nil {
				return _acgfgb
			}
			_dbbfe.RightToLeftAttr = &_aggge
			continue
		}
		if _adabdb.Name.Local == "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c" {
			_aabca, _gabee := _e.ParseUint(_adabdb.Value, 10, 32)
			if _gabee != nil {
				return _gabee
			}
			_fcdcc := uint32(_aabca)
			_dbbfe.ZoomScaleNormalAttr = &_fcdcc
			continue
		}
		if _adabdb.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_caada, _ffcaaa := _e.ParseBool(_adabdb.Value)
			if _ffcaaa != nil {
				return _ffcaaa
			}
			_dbbfe.ShowRulerAttr = &_caada
			continue
		}
		if _adabdb.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_agbcd, _gdabg := _e.ParseUint(_adabdb.Value, 10, 32)
			if _gdabg != nil {
				return _gdabg
			}
			_dgfga := uint32(_agbcd)
			_dbbfe.ZoomScaleSheetLayoutViewAttr = &_dgfga
			continue
		}
		if _adabdb.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_egfbb, _dbged := _e.ParseUint(_adabdb.Value, 10, 32)
			if _dbged != nil {
				return _dbged
			}
			_dbbfe.WorkbookViewIdAttr = uint32(_egfbb)
			continue
		}
		if _adabdb.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_aacgae, _caabfd := _e.ParseBool(_adabdb.Value)
			if _caabfd != nil {
				return _caabfd
			}
			_dbbfe.TabSelectedAttr = &_aacgae
			continue
		}
		if _adabdb.Name.Local == "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_efeedc, _egddc := _e.ParseUint(_adabdb.Value, 10, 32)
			if _egddc != nil {
				return _egddc
			}
			_ededg := uint32(_efeedc)
			_dbbfe.ZoomScalePageLayoutViewAttr = &_ededg
			continue
		}
		if _adabdb.Name.Local == "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs" {
			_fefaf, _aegfb := _e.ParseBool(_adabdb.Value)
			if _aegfb != nil {
				return _aegfb
			}
			_dbbfe.ShowZerosAttr = &_fefaf
			continue
		}
		if _adabdb.Name.Local == "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_cgcebd, _ddbbb := _e.ParseBool(_adabdb.Value)
			if _ddbbb != nil {
				return _ddbbb
			}
			_dbbfe.WindowProtectionAttr = &_cgcebd
			continue
		}
		if _adabdb.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_dfebfd, _fdeee := _e.ParseBool(_adabdb.Value)
			if _fdeee != nil {
				return _fdeee
			}
			_dbbfe.ShowOutlineSymbolsAttr = &_dfebfd
			continue
		}
		if _adabdb.Name.Local == "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065" {
			_acdcc, _bfaac := _e.ParseBool(_adabdb.Value)
			if _bfaac != nil {
				return _bfaac
			}
			_dbbfe.ShowWhiteSpaceAttr = &_acdcc
			continue
		}
		if _adabdb.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_gbedd, _bgfc := _e.ParseBool(_adabdb.Value)
			if _bgfc != nil {
				return _bgfc
			}
			_dbbfe.ShowGridLinesAttr = &_gbedd
			continue
		}
		if _adabdb.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072" {
			_bddfbf, _bggefe := _e.ParseBool(_adabdb.Value)
			if _bggefe != nil {
				return _bggefe
			}
			_dbbfe.DefaultGridColorAttr = &_bddfbf
			continue
		}
	}
_ccfdf:
	for {
		_aggcea, _ggfgf := d.Token()
		if _ggfgf != nil {
			return _ggfgf
		}
		switch _bfgac := _aggcea.(type) {
		case _b.StartElement:
			switch _bfgac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_dbbfe.Pane = NewCT_Pane()
				if _fgdad := d.DecodeElement(_dbbfe.Pane, &_bfgac); _fgdad != nil {
					return _fgdad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_gcefd := NewCT_Selection()
				if _caafa := d.DecodeElement(_gcefd, &_bfgac); _caafa != nil {
					return _caafa
				}
				_dbbfe.Selection = append(_dbbfe.Selection, _gcefd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}:
				_aeeecc := NewCT_PivotSelection()
				if _bfbdf := d.DecodeElement(_aeeecc, &_bfgac); _bfbdf != nil {
					return _bfbdf
				}
				_dbbfe.PivotSelection = append(_dbbfe.PivotSelection, _aeeecc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbbfe.ExtLst = NewCT_ExtensionList()
				if _efeedg := d.DecodeElement(_dbbfe.ExtLst, &_bfgac); _efeedg != nil {
					return _efeedg
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _bfgac.Name)
				if _bgafcc := d.Skip(); _bgafcc != nil {
					return _bgafcc
				}
			}
		case _b.EndElement:
			break _ccfdf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDKPI and its children, prefixing error messages with path
func (_agcgc *CT_PCDKPI) ValidateWithPath(path string) error { return nil }
func (_accgcf *CT_SheetFormatPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _accgcf.BaseColWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_accgcf.BaseColWidthAttr)})
	}
	if _accgcf.DefaultColWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _f.Sprintf("\u0025\u0076", *_accgcf.DefaultColWidthAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0076", _accgcf.DefaultRowHeightAttr)})
	if _accgcf.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accgcf.CustomHeightAttr))})
	}
	if _accgcf.ZeroHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accgcf.ZeroHeightAttr))})
	}
	if _accgcf.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accgcf.ThickTopAttr))})
	}
	if _accgcf.ThickBottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_accgcf.ThickBottomAttr))})
	}
	if _accgcf.OutlineLevelRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077"}, Value: _f.Sprintf("\u0025\u0076", *_accgcf.OutlineLevelRowAttr)})
	}
	if _accgcf.OutlineLevelColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_accgcf.OutlineLevelColAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewUsers() *Users { _ceadf := &Users{}; _ceadf.CT_Users = *NewCT_Users(); return _ceadf }

// ValidateWithPath validates the CT_TextPr and its children, prefixing error messages with path
func (_caafe *CT_TextPr) ValidateWithPath(path string) error {
	if _cbgaac := _caafe.FileTypeAttr.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _cbgaac != nil {
		return _cbgaac
	}
	if _dcfdd := _caafe.QualifierAttr.ValidateWithPath(path + "\u002f\u0051\u0075\u0061\u006c\u0069\u0066\u0069\u0065r\u0041\u0074\u0074\u0072"); _dcfdd != nil {
		return _dcfdd
	}
	if _caafe.TextFields != nil {
		if _gbgbb := _caafe.TextFields.ValidateWithPath(path + "/\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _gbgbb != nil {
			return _gbgbb
		}
	}
	return nil
}
func (_gaebc *CT_PivotCacheRecords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gaebc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_gaebc.CountAttr)})
	}
	e.EncodeToken(start)
	if _gaebc.R != nil {
		_gcfge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _efacg := range _gaebc.R {
			e.EncodeElement(_efacg, _gcfge)
		}
	}
	if _gaebc.ExtLst != nil {
		_dcgea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gaebc.ExtLst, _dcgea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abgb *CT_Cell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbdg := range start.Attr {
		if _dbdg.Name.Local == "\u0072" {
			_fbef, _agca := _dbdg.Value, error(nil)
			if _agca != nil {
				return _agca
			}
			_abgb.RAttr = &_fbef
			continue
		}
		if _dbdg.Name.Local == "\u0073" {
			_gfdb, _bgca := _e.ParseUint(_dbdg.Value, 10, 32)
			if _bgca != nil {
				return _bgca
			}
			_cadg := uint32(_gfdb)
			_abgb.SAttr = &_cadg
			continue
		}
		if _dbdg.Name.Local == "\u0074" {
			_abgb.TAttr.UnmarshalXMLAttr(_dbdg)
			continue
		}
		if _dbdg.Name.Local == "\u0063\u006d" {
			_dfae, _fab := _e.ParseUint(_dbdg.Value, 10, 32)
			if _fab != nil {
				return _fab
			}
			_gcda := uint32(_dfae)
			_abgb.CmAttr = &_gcda
			continue
		}
		if _dbdg.Name.Local == "\u0076\u006d" {
			_beeed, _fcgg := _e.ParseUint(_dbdg.Value, 10, 32)
			if _fcgg != nil {
				return _fcgg
			}
			_faf := uint32(_beeed)
			_abgb.VmAttr = &_faf
			continue
		}
		if _dbdg.Name.Local == "\u0070\u0068" {
			_fege, _ecgc := _e.ParseBool(_dbdg.Value)
			if _ecgc != nil {
				return _ecgc
			}
			_abgb.PhAttr = &_fege
			continue
		}
	}
_gddf:
	for {
		_ggbgd, _ggff := d.Token()
		if _ggff != nil {
			return _ggff
		}
		switch _ceaa := _ggbgd.(type) {
		case _b.StartElement:
			switch _ceaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}:
				_abgb.F = NewCT_CellFormula()
				if _bbbf := d.DecodeElement(_abgb.F, &_ceaa); _bbbf != nil {
					return _bbbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_abgb.V = new(string)
				if _egbca := d.DecodeElement(_abgb.V, &_ceaa); _egbca != nil {
					return _egbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}:
				_abgb.Is = NewCT_Rst()
				if _dgbgf := d.DecodeElement(_abgb.Is, &_ceaa); _dgbgf != nil {
					return _dgbgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abgb.ExtLst = NewCT_ExtensionList()
				if _dbfe := d.DecodeElement(_abgb.ExtLst, &_ceaa); _dbfe != nil {
					return _dbfe
				}
			default:
				_d.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _ceaa.Name)
				if _fade := d.Skip(); _fade != nil {
					return _fade
				}
			}
		case _b.EndElement:
			break _gddf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CalcChain and its children
func (_afgcg *CalcChain) Validate() error {
	return _afgcg.ValidateWithPath("\u0043a\u006c\u0063\u0043\u0068\u0061\u0069n")
}
func NewCT_PivotFilters() *CT_PivotFilters { _cacff := &CT_PivotFilters{}; return _cacff }
func (_ccfa *CT_Location) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbgef := range start.Attr {
		if _gbgef.Name.Local == "\u0072\u0065\u0066" {
			_efde, _ccdce := _gbgef.Value, error(nil)
			if _ccdce != nil {
				return _ccdce
			}
			_ccfa.RefAttr = _efde
			continue
		}
		if _gbgef.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077" {
			_ggebc, _bfefg := _e.ParseUint(_gbgef.Value, 10, 32)
			if _bfefg != nil {
				return _bfefg
			}
			_ccfa.FirstHeaderRowAttr = uint32(_ggebc)
			continue
		}
		if _gbgef.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077" {
			_cgfda, _ffdgf := _e.ParseUint(_gbgef.Value, 10, 32)
			if _ffdgf != nil {
				return _ffdgf
			}
			_ccfa.FirstDataRowAttr = uint32(_cgfda)
			continue
		}
		if _gbgef.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c" {
			_ccdaa, _addbd := _e.ParseUint(_gbgef.Value, 10, 32)
			if _addbd != nil {
				return _addbd
			}
			_ccfa.FirstDataColAttr = uint32(_ccdaa)
			continue
		}
		if _gbgef.Name.Local == "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_bcdga, _dcfae := _e.ParseUint(_gbgef.Value, 10, 32)
			if _dcfae != nil {
				return _dcfae
			}
			_afdad := uint32(_bcdga)
			_ccfa.RowPageCountAttr = &_afdad
			continue
		}
		if _gbgef.Name.Local == "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_facbe, _agged := _e.ParseUint(_gbgef.Value, 10, 32)
			if _agged != nil {
				return _agged
			}
			_acaag := uint32(_facbe)
			_ccfa.ColPageCountAttr = &_acaag
			continue
		}
	}
	for {
		_ebfae, _aecedd := d.Token()
		if _aecedd != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _aecedd)
		}
		if _cddfe, _bacfa := _ebfae.(_b.EndElement); _bacfa && _cddfe.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_UpdateLinksUnset   ST_UpdateLinks = 0
	ST_UpdateLinksUserSet ST_UpdateLinks = 1
	ST_UpdateLinksNever   ST_UpdateLinks = 2
	ST_UpdateLinksAlways  ST_UpdateLinks = 3
)

func (_ddfeg *CT_RowFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddfeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_ddfeg.CountAttr)})
	}
	e.EncodeToken(start)
	_bccgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _cfaffd := range _ddfeg.Field {
		e.EncodeElement(_cfaffd, _bccgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Colors and its children, prefixing error messages with path
func (_ebbdf *CT_Colors) ValidateWithPath(path string) error {
	if _ebbdf.IndexedColors != nil {
		if _gbbfa := _ebbdf.IndexedColors.ValidateWithPath(path + "\u002f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"); _gbbfa != nil {
			return _gbbfa
		}
	}
	if _ebbdf.MruColors != nil {
		if _fdbc := _ebbdf.MruColors.ValidateWithPath(path + "\u002f\u004d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"); _fdbc != nil {
			return _fdbc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MemberProperty and its children, prefixing error messages with path
func (_edbc *CT_MemberProperty) ValidateWithPath(path string) error { return nil }
func NewCT_PivotDimension() *CT_PivotDimension                      { _eccdg := &CT_PivotDimension{}; return _eccdg }

type CT_Pages struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Items
	Page []*CT_PCDSCPage
}

func (_cffgc *CT_Number) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _cffgc.VAttr)})
	if _cffgc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cffgc.UAttr))})
	}
	if _cffgc.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cffgc.FAttr))})
	}
	if _cffgc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_cffgc.CAttr)})
	}
	if _cffgc.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_cffgc.CpAttr)})
	}
	if _cffgc.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_cffgc.InAttr)})
	}
	if _cffgc.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_cffgc.BcAttr)})
	}
	if _cffgc.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_cffgc.FcAttr)})
	}
	if _cffgc.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cffgc.IAttr))})
	}
	if _cffgc.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cffgc.UnAttr))})
	}
	if _cffgc.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cffgc.StAttr))})
	}
	if _cffgc.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cffgc.BAttr))})
	}
	e.EncodeToken(start)
	if _cffgc.Tpls != nil {
		_fefaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _bbgcg := range _cffgc.Tpls {
			e.EncodeElement(_bbgcg, _fefaa)
		}
	}
	if _cffgc.X != nil {
		_ccbcdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _ecfeg := range _cffgc.X {
			e.EncodeElement(_ecfeg, _ccbcdc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TupleCache and its children
func (_aafcb *CT_TupleCache) Validate() error {
	return _aafcb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065")
}
func (_bdbea *CT_DiscretePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdga := range start.Attr {
		if _cdga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aafae, _dcda := _e.ParseUint(_cdga.Value, 10, 32)
			if _dcda != nil {
				return _dcda
			}
			_aeefgf := uint32(_aafae)
			_bdbea.CountAttr = &_aeefgf
			continue
		}
	}
_fgced:
	for {
		_gbdab, _gdadeg := d.Token()
		if _gdadeg != nil {
			return _gdadeg
		}
		switch _bdbfe := _gbdab.(type) {
		case _b.StartElement:
			switch _bdbfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fbaec := NewCT_Index()
				if _dcdf := d.DecodeElement(_fbaec, &_bdbfe); _dcdf != nil {
					return _dcdf
				}
				_bdbea.X = append(_bdbea.X, _fbaec)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072 \u0025\u0076", _bdbfe.Name)
				if _dbcc := d.Skip(); _dbcc != nil {
					return _dbcc
				}
			}
		case _b.EndElement:
			break _fgced
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MdxMemeberProp and its children
func (_becde *CT_MdxMemeberProp) Validate() error {
	return _becde.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070")
}

// ValidateWithPath validates the CT_ColFields and its children, prefixing error messages with path
func (_gbfe *CT_ColFields) ValidateWithPath(path string) error {
	for _aadf, _aafa := range _gbfe.Field {
		if _gegge := _aafa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _aadf)); _gegge != nil {
			return _gegge
		}
	}
	return nil
}

const (
	ST_DataConsolidateFunctionUnset     ST_DataConsolidateFunction = 0
	ST_DataConsolidateFunctionAverage   ST_DataConsolidateFunction = 1
	ST_DataConsolidateFunctionCount     ST_DataConsolidateFunction = 2
	ST_DataConsolidateFunctionCountNums ST_DataConsolidateFunction = 3
	ST_DataConsolidateFunctionMax       ST_DataConsolidateFunction = 4
	ST_DataConsolidateFunctionMin       ST_DataConsolidateFunction = 5
	ST_DataConsolidateFunctionProduct   ST_DataConsolidateFunction = 6
	ST_DataConsolidateFunctionStdDev    ST_DataConsolidateFunction = 7
	ST_DataConsolidateFunctionStdDevp   ST_DataConsolidateFunction = 8
	ST_DataConsolidateFunctionSum       ST_DataConsolidateFunction = 9
	ST_DataConsolidateFunctionVar       ST_DataConsolidateFunction = 10
	ST_DataConsolidateFunctionVarp      ST_DataConsolidateFunction = 11
)

func (_fcded *CT_GroupItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfce := range start.Attr {
		if _gfce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dagc, _agbff := _e.ParseUint(_gfce.Value, 10, 32)
			if _agbff != nil {
				return _agbff
			}
			_gggd := uint32(_dagc)
			_fcded.CountAttr = &_gggd
			continue
		}
	}
_fccgc:
	for {
		_ceaef, _aeefa := d.Token()
		if _aeefa != nil {
			return _aeefa
		}
		switch _eadge := _ceaef.(type) {
		case _b.StartElement:
			switch _eadge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_bfbde := NewCT_Missing()
				if _aecb := d.DecodeElement(_bfbde, &_eadge); _aecb != nil {
					return _aecb
				}
				_fcded.M = append(_fcded.M, _bfbde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_bdgcbc := NewCT_Number()
				if _dbbec := d.DecodeElement(_bdgcbc, &_eadge); _dbbec != nil {
					return _dbbec
				}
				_fcded.N = append(_fcded.N, _bdgcbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_ffbgc := NewCT_Boolean()
				if _fffb := d.DecodeElement(_ffbgc, &_eadge); _fffb != nil {
					return _fffb
				}
				_fcded.B = append(_fcded.B, _ffbgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_gedda := NewCT_Error()
				if _adccaa := d.DecodeElement(_gedda, &_eadge); _adccaa != nil {
					return _adccaa
				}
				_fcded.E = append(_fcded.E, _gedda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_aecca := NewCT_String()
				if _bdebe := d.DecodeElement(_aecca, &_eadge); _bdebe != nil {
					return _bdebe
				}
				_fcded.S = append(_fcded.S, _aecca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_cecb := NewCT_DateTime()
				if _bgfdb := d.DecodeElement(_cecb, &_eadge); _bgfdb != nil {
					return _bgfdb
				}
				_fcded.D = append(_fcded.D, _cecb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073 \u0025\u0076", _eadge.Name)
				if _facea := d.Skip(); _facea != nil {
					return _facea
				}
			}
		case _b.EndElement:
			break _fccgc
		case _b.CharData:
		}
	}
	return nil
}
func (_fdcgg *CT_CellXfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdcgg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_fdcgg.CountAttr)})
	}
	e.EncodeToken(start)
	_beca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _aegd := range _fdcgg.Xf {
		e.EncodeElement(_aegd, _beca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CacheSource struct {

	// Cache Type
	TypeAttr ST_SourceType

	// Connection Index
	ConnectionIdAttr *uint32

	// Worksheet PivotCache Source
	WorksheetSource *CT_WorksheetSource

	// Consolidation Source
	Consolidation *CT_Consolidation

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_OleItem and its children, prefixing error messages with path
func (_cfdgg *CT_OleItem) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CellFormula and its children
func (_fgcc *CT_CellFormula) Validate() error {
	return _fgcc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061")
}

// ValidateWithPath validates the CT_ChartFormats and its children, prefixing error messages with path
func (_gdedd *CT_ChartFormats) ValidateWithPath(path string) error {
	for _abea, _ecbdb := range _gdedd.ChartFormat {
		if _babg := _ecbdb.ValidateWithPath(_f.Sprintf("\u0025s\u002fC\u0068\u0061\u0072\u0074\u0046o\u0072\u006da\u0074\u005b\u0025\u0064\u005d", path, _abea)); _babg != nil {
			return _babg
		}
	}
	return nil
}
func NewCT_RangePr() *CT_RangePr { _dcdabd := &CT_RangePr{}; return _dcdabd }
func NewCT_IconSet() *CT_IconSet { _faaab := &CT_IconSet{}; return _faaab }

type CT_CalculatedMember struct {

	// Calculated Member Name
	NameAttr string

	// Calculated Member MDX Formula
	MdxAttr string

	// OLAP Calculated Member Name
	MemberNameAttr *string

	// Hierarchy Name
	HierarchyAttr *string

	// Parent Name
	ParentAttr *string

	// Calculated Members Solve Order
	SolveOrderAttr *int32

	// Set
	SetAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fbbcb *CT_IgnoredErrors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_geagf:
	for {
		_accb, _fgece := d.Token()
		if _fgece != nil {
			return _fgece
		}
		switch _beaa := _accb.(type) {
		case _b.StartElement:
			switch _beaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}:
				_eaeeg := NewCT_IgnoredError()
				if _cdbdg := d.DecodeElement(_eaeeg, &_beaa); _cdbdg != nil {
					return _cdbdg
				}
				_fbbcb.IgnoredError = append(_fbbcb.IgnoredError, _eaeeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbbcb.ExtLst = NewCT_ExtensionList()
				if _aaeef := d.DecodeElement(_fbbcb.ExtLst, &_beaa); _aaeef != nil {
					return _aaeef
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073\u0020\u0025v", _beaa.Name)
				if _fdfac := d.Skip(); _fdfac != nil {
					return _fdfac
				}
			}
		case _b.EndElement:
			break _geagf
		case _b.CharData:
		}
	}
	return nil
}

type CT_RevisionInsertSheet struct {

	// Sheet Id
	SheetIdAttr uint32

	// Sheet Name
	NameAttr string

	// Sheet Position
	SheetPositionAttr uint32
	RIdAttr           *uint32
	UaAttr            *bool
	RaAttr            *bool
}

func NewCT_Fill() *CT_Fill { _adagg := &CT_Fill{}; return _adagg }

// Validate validates the CT_ProtectedRanges and its children
func (_gdbceb *CT_ProtectedRanges) Validate() error {
	return _gdbceb.ValidateWithPath("\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073")
}

type CT_DefinedNames struct {

	// Defined Name
	DefinedName []*CT_DefinedName
}

func (_gggae *CT_SheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ggcdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _cbggb := range _gggae.SheetView {
		e.EncodeElement(_cbggb, _ggcdb)
	}
	if _gggae.ExtLst != nil {
		_gagfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gggae.ExtLst, _gagfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gagbb *CT_PivotFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gagbb.FldAttr)})
	if _gagbb.MpFldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0070\u0046l\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.MpFldAttr)})
	}
	_dcdcd, _fdbfg := _gagbb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _fdbfg != nil {
		return _fdbfg
	}
	start.Attr = append(start.Attr, _dcdcd)
	if _gagbb.EvalOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.EvalOrderAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _gagbb.IdAttr)})
	if _gagbb.IMeasureHierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.IMeasureHierAttr)})
	}
	if _gagbb.IMeasureFldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.IMeasureFldAttr)})
	}
	if _gagbb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.NameAttr)})
	}
	if _gagbb.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.DescriptionAttr)})
	}
	if _gagbb.StringValue1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.StringValue1Attr)})
	}
	if _gagbb.StringValue2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032"}, Value: _f.Sprintf("\u0025\u0076", *_gagbb.StringValue2Attr)})
	}
	e.EncodeToken(start)
	_baeeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
	e.EncodeElement(_gagbb.AutoFilter, _baeeb)
	if _gagbb.ExtLst != nil {
		_fbdgeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gagbb.ExtLst, _fbdgeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cddec *CT_Extension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cddec.UriAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _f.Sprintf("\u0025\u0076", *_cddec.UriAttr)})
	}
	e.EncodeToken(start)
	if _cddec.Any != nil {
		_cddec.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecdcf *CT_ExternalDefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _ecdcf.NameAttr)})
	if _ecdcf.RefersToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f"}, Value: _f.Sprintf("\u0025\u0076", *_ecdcf.RefersToAttr)})
	}
	if _ecdcf.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_ecdcf.SheetIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DataValidationOperator byte
type CT_RevisionMove struct {

	// Sheet Id
	SheetIdAttr uint32

	// Source
	SourceAttr string

	// Destination
	DestinationAttr string

	// Source Sheet Id
	SourceSheetIdAttr *uint32

	// Undo
	Undo []*CT_UndoInfo

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_becff ST_DynamicFilterType) Validate() error { return _becff.ValidateWithPath("") }

// ValidateWithPath validates the CT_IconSet and its children, prefixing error messages with path
func (_gdgab *CT_IconSet) ValidateWithPath(path string) error {
	if _febf := _gdgab.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _febf != nil {
		return _febf
	}
	for _cgcbf, _cbedc := range _gdgab.Cfvo {
		if _cadfb := _cbedc.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _cgcbf)); _cadfb != nil {
			return _cadfb
		}
	}
	return nil
}
func NewCT_FontScheme() *CT_FontScheme {
	_eaec := &CT_FontScheme{}
	_eaec.ValAttr = ST_FontScheme(1)
	return _eaec
}
func (_feaccd *CT_OleObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbacf := range start.Attr {
		if _fbacf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbacf.Name.Local == "\u0069\u0064" || _fbacf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbacf.Name.Local == "\u0069\u0064" {
			_efage, _ggaec := _fbacf.Value, error(nil)
			if _ggaec != nil {
				return _ggaec
			}
			_feaccd.IdAttr = &_efage
			continue
		}
		if _fbacf.Name.Local == "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074" {
			_feaccd.DvAspectAttr.UnmarshalXMLAttr(_fbacf)
			continue
		}
		if _fbacf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_abecb, _fdfbc := _fbacf.Value, error(nil)
			if _fdfbc != nil {
				return _fdfbc
			}
			_feaccd.LinkAttr = &_abecb
			continue
		}
		if _fbacf.Name.Local == "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e" {
			_feaccd.OleUpdateAttr.UnmarshalXMLAttr(_fbacf)
			continue
		}
		if _fbacf.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064" {
			_cbaed, _faadf := _e.ParseBool(_fbacf.Value)
			if _faadf != nil {
				return _faadf
			}
			_feaccd.AutoLoadAttr = &_cbaed
			continue
		}
		if _fbacf.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_dgddcc, _dbbda := _e.ParseUint(_fbacf.Value, 10, 32)
			if _dbbda != nil {
				return _dbbda
			}
			_feaccd.ShapeIdAttr = uint32(_dgddcc)
			continue
		}
		if _fbacf.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_bcfc, _dgag := _fbacf.Value, error(nil)
			if _dgag != nil {
				return _dgag
			}
			_feaccd.ProgIdAttr = &_bcfc
			continue
		}
	}
_faace:
	for {
		_caeedg, _fefgd := d.Token()
		if _fefgd != nil {
			return _fefgd
		}
		switch _gadegb := _caeedg.(type) {
		case _b.StartElement:
			switch _gadegb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}:
				_feaccd.ObjectPr = NewCT_ObjectPr()
				if _ecgbe := d.DecodeElement(_feaccd.ObjectPr, &_gadegb); _ecgbe != nil {
					return _ecgbe
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _gadegb.Name)
				if _gbgcg := d.Skip(); _gbgcg != nil {
					return _gbgcg
				}
			}
		case _b.EndElement:
			break _faace
		case _b.CharData:
		}
	}
	return nil
}
func (_ccgff *CT_IgnoredError) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _f.Sprintf("\u0025\u0076", _ccgff.SqrefAttr)})
	if _ccgff.EvalErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.EvalErrorAttr))})
	}
	if _ccgff.TwoDigitTextYearAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.TwoDigitTextYearAttr))})
	}
	if _ccgff.NumberStoredAsTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.NumberStoredAsTextAttr))})
	}
	if _ccgff.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.FormulaAttr))})
	}
	if _ccgff.FormulaRangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.FormulaRangeAttr))})
	}
	if _ccgff.UnlockedFormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.UnlockedFormulaAttr))})
	}
	if _ccgff.EmptyCellReferenceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.EmptyCellReferenceAttr))})
	}
	if _ccgff.ListDataValidationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.ListDataValidationAttr))})
	}
	if _ccgff.CalculatedColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ccgff.CalculatedColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ChartsheetProtection struct {

	// Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Contents
	ContentAttr *bool

	// Objects Locked
	ObjectsAttr *bool
}

func (_fdab *CT_CellSmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abgeg := range start.Attr {
		if _abgeg.Name.Local == "\u0072" {
			_gacc, _bgcae := _abgeg.Value, error(nil)
			if _bgcae != nil {
				return _bgcae
			}
			_fdab.RAttr = _gacc
			continue
		}
	}
_fcdd:
	for {
		_afdfb, _fbdb := d.Token()
		if _fbdb != nil {
			return _fbdb
		}
		switch _egcd := _afdfb.(type) {
		case _b.StartElement:
			switch _egcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}:
				_fbge := NewCT_CellSmartTag()
				if _fbae := d.DecodeElement(_fbge, &_egcd); _fbae != nil {
					return _fbae
				}
				_fdab.CellSmartTag = append(_fdab.CellSmartTag, _fbge)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073\u0020\u0025v", _egcd.Name)
				if _acffb := d.Skip(); _acffb != nil {
					return _acffb
				}
			}
		case _b.EndElement:
			break _fcdd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the Chartsheet and its children
func (_fccee *Chartsheet) Validate() error {
	return _fccee.ValidateWithPath("\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}
func (_bafgab *ST_VolValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bafgab = 0
	case "\u0062":
		*_bafgab = 1
	case "\u006e":
		*_bafgab = 2
	case "\u0065":
		*_bafgab = 3
	case "\u0073":
		*_bafgab = 4
	}
	return nil
}
func (_bcdcd *ST_RevisionAction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcdcd = 0
	case "\u0061\u0064\u0064":
		*_bcdcd = 1
	case "\u0064\u0065\u006c\u0065\u0074\u0065":
		*_bcdcd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_TableColumn and its children, prefixing error messages with path
func (_aacdd *CT_TableColumn) ValidateWithPath(path string) error {
	if _ecedaf := _aacdd.TotalsRowFunctionAttr.ValidateWithPath(path + "\u002f\u0054\u006f\u0074al\u0073\u0052\u006f\u0077\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074t\u0072"); _ecedaf != nil {
		return _ecedaf
	}
	if _aacdd.CalculatedColumnFormula != nil {
		if _dacfeb := _aacdd.CalculatedColumnFormula.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006fl\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"); _dacfeb != nil {
			return _dacfeb
		}
	}
	if _aacdd.TotalsRowFormula != nil {
		if _debff := _aacdd.TotalsRowFormula.ValidateWithPath(path + "\u002f\u0054\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006fr\u006d\u0075\u006c\u0061"); _debff != nil {
			return _debff
		}
	}
	if _aacdd.XmlColumnPr != nil {
		if _bbfaga := _aacdd.XmlColumnPr.ValidateWithPath(path + "\u002f\u0058\u006dl\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"); _bbfaga != nil {
			return _bbfaga
		}
	}
	if _aacdd.ExtLst != nil {
		if _bgbaa := _aacdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgbaa != nil {
			return _bgbaa
		}
	}
	return nil
}

const (
	ST_PageOrderUnset        ST_PageOrder = 0
	ST_PageOrderDownThenOver ST_PageOrder = 1
	ST_PageOrderOverThenDown ST_PageOrder = 2
)

// ValidateWithPath validates the CT_SheetDimension and its children, prefixing error messages with path
func (_edacc *CT_SheetDimension) ValidateWithPath(path string) error { return nil }
func (_agbeg *ST_DdeValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cebgad, _fgdbc := d.Token()
	if _fgdbc != nil {
		return _fgdbc
	}
	if _fafba, _fcacbe := _cebgad.(_b.EndElement); _fcacbe && _fafba.Name == start.Name {
		*_agbeg = 1
		return nil
	}
	if _bccga, _aafec := _cebgad.(_b.CharData); !_aafec {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cebgad)
	} else {
		switch string(_bccga) {
		case "":
			*_agbeg = 0
		case "\u006e\u0069\u006c":
			*_agbeg = 1
		case "\u0062":
			*_agbeg = 2
		case "\u006e":
			*_agbeg = 3
		case "\u0065":
			*_agbeg = 4
		case "\u0073\u0074\u0072":
			*_agbeg = 5
		}
	}
	_cebgad, _fgdbc = d.Token()
	if _fgdbc != nil {
		return _fgdbc
	}
	if _eegea, _ffgcfe := _cebgad.(_b.EndElement); _ffgcfe && _eegea.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cebgad)
}

// Validate validates the CT_PageFields and its children
func (_ceaeg *CT_PageFields) Validate() error {
	return _ceaeg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_fcaec *ST_DynamicFilterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcaec = 0
	case "\u006e\u0075\u006c\u006c":
		*_fcaec = 1
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_fcaec = 2
	case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_fcaec = 3
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_fcaec = 4
	case "\u0074\u006f\u0064a\u0079":
		*_fcaec = 5
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_fcaec = 6
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_fcaec = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_fcaec = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_fcaec = 9
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_fcaec = 10
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_fcaec = 11
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_fcaec = 12
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_fcaec = 13
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_fcaec = 14
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_fcaec = 15
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_fcaec = 16
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_fcaec = 17
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_fcaec = 18
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_fcaec = 19
	case "\u0051\u0031":
		*_fcaec = 20
	case "\u0051\u0032":
		*_fcaec = 21
	case "\u0051\u0033":
		*_fcaec = 22
	case "\u0051\u0034":
		*_fcaec = 23
	case "\u004d\u0031":
		*_fcaec = 24
	case "\u004d\u0032":
		*_fcaec = 25
	case "\u004d\u0033":
		*_fcaec = 26
	case "\u004d\u0034":
		*_fcaec = 27
	case "\u004d\u0035":
		*_fcaec = 28
	case "\u004d\u0036":
		*_fcaec = 29
	case "\u004d\u0037":
		*_fcaec = 30
	case "\u004d\u0038":
		*_fcaec = 31
	case "\u004d\u0039":
		*_fcaec = 32
	case "\u004d\u0031\u0030":
		*_fcaec = 33
	case "\u004d\u0031\u0031":
		*_fcaec = 34
	case "\u004d\u0031\u0032":
		*_fcaec = 35
	}
	return nil
}
func (_bgdbgb ST_FieldSortType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abafdg := _b.Attr{}
	_abafdg.Name = name
	switch _bgdbgb {
	case ST_FieldSortTypeUnset:
		_abafdg.Value = ""
	case ST_FieldSortTypeManual:
		_abafdg.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_FieldSortTypeAscending:
		_abafdg.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_FieldSortTypeDescending:
		_abafdg.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return _abafdg, nil
}

// Validate validates the CT_colItems and its children
func (_afadc *CT_colItems) Validate() error {
	return _afadc.ValidateWithPath("C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073")
}
func NewCT_GroupMember() *CT_GroupMember { _ggdeaa := &CT_GroupMember{}; return _ggdeaa }
func NewCT_VolMain() *CT_VolMain         { _faccb := &CT_VolMain{}; return _faccb }

type ST_Scope byte

// Validate validates the CT_Chartsheet and its children
func (_dgbbe *CT_Chartsheet) Validate() error {
	return _dgbbe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}
func NewCT_MeasureDimensionMaps() *CT_MeasureDimensionMaps {
	_fcffe := &CT_MeasureDimensionMaps{}
	return _fcffe
}
func NewCT_MdxTuple() *CT_MdxTuple { _dbccb := &CT_MdxTuple{}; return _dbccb }

type CT_CommentList struct {

	// Comment
	Comment []*CT_Comment
}

func (_cbdfg *Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073"
	return _cbdfg.CT_Comments.MarshalXML(e, start)
}

type ST_GradientType byte
type CT_DataField struct {

	// Data Field Name
	NameAttr *string

	// Field
	FldAttr uint32

	// Subtotal
	SubtotalAttr ST_DataConsolidateFunction

	// Show Data As Display Format
	ShowDataAsAttr ST_ShowDataAs

	// 'Show Data As' Base Field
	BaseFieldAttr *int32

	// 'Show Data As' Base Setting
	BaseItemAttr *uint32

	// Number Format Id
	NumFmtIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Scenarios and its children
func (_acfcg *CT_Scenarios) Validate() error {
	return _acfcg.ValidateWithPath("\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073")
}
func (_gbddba *ST_CfType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gbddba = 0
	case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
		*_gbddba = 1
	case "\u0063\u0065\u006c\u006c\u0049\u0073":
		*_gbddba = 2
	case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
		*_gbddba = 3
	case "\u0064a\u0074\u0061\u0042\u0061\u0072":
		*_gbddba = 4
	case "\u0069c\u006f\u006e\u0053\u0065\u0074":
		*_gbddba = 5
	case "\u0074\u006f\u00701\u0030":
		*_gbddba = 6
	case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gbddba = 7
	case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gbddba = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gbddba = 9
	case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gbddba = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_gbddba = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_gbddba = 12
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_gbddba = 13
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_gbddba = 14
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_gbddba = 15
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_gbddba = 16
	case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gbddba = 17
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gbddba = 18
	}
	return nil
}
func (_afdea *CT_Hyperlink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgee := range start.Attr {
		if _dgee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgee.Name.Local == "\u0069\u0064" || _dgee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgee.Name.Local == "\u0069\u0064" {
			_agdbb, _dfcf := _dgee.Value, error(nil)
			if _dfcf != nil {
				return _dfcf
			}
			_afdea.IdAttr = &_agdbb
			continue
		}
		if _dgee.Name.Local == "\u0072\u0065\u0066" {
			_bacab, _fdga := _dgee.Value, error(nil)
			if _fdga != nil {
				return _fdga
			}
			_afdea.RefAttr = _bacab
			continue
		}
		if _dgee.Name.Local == "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" {
			_cdaaf, _gbdbc := _dgee.Value, error(nil)
			if _gbdbc != nil {
				return _gbdbc
			}
			_afdea.LocationAttr = &_cdaaf
			continue
		}
		if _dgee.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_faafa, _dcdcf := _dgee.Value, error(nil)
			if _dcdcf != nil {
				return _dcdcf
			}
			_afdea.TooltipAttr = &_faafa
			continue
		}
		if _dgee.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_dfde, _eebaf := _dgee.Value, error(nil)
			if _eebaf != nil {
				return _eebaf
			}
			_afdea.DisplayAttr = &_dfde
			continue
		}
	}
	for {
		_faabb, _bdaaf := d.Token()
		if _bdaaf != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0079p\u0065\u0072\u006c\u0069\u006e\u006b\u003a\u0020\u0025\u0073", _bdaaf)
		}
		if _abaeg, _bfabf := _faabb.(_b.EndElement); _bfabf && _abaeg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SheetDimension and its children
func (_cecbf *CT_SheetDimension) Validate() error {
	return _cecbf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

// Validate validates the Metadata and its children
func (_fggeeb *Metadata) Validate() error {
	return _fggeeb.ValidateWithPath("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

// ValidateWithPath validates the Chartsheet and its children, prefixing error messages with path
func (_gfbdc *Chartsheet) ValidateWithPath(path string) error {
	if _fegbe := _gfbdc.CT_Chartsheet.ValidateWithPath(path); _fegbe != nil {
		return _fegbe
	}
	return nil
}

// ValidateWithPath validates the CT_Macrosheet and its children, prefixing error messages with path
func (_deefb *CT_Macrosheet) ValidateWithPath(path string) error {
	if _deefb.SheetPr != nil {
		if _daegcf := _deefb.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _daegcf != nil {
			return _daegcf
		}
	}
	if _deefb.Dimension != nil {
		if _dgabc := _deefb.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _dgabc != nil {
			return _dgabc
		}
	}
	if _deefb.SheetViews != nil {
		if _aage := _deefb.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _aage != nil {
			return _aage
		}
	}
	if _deefb.SheetFormatPr != nil {
		if _gbabg := _deefb.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _gbabg != nil {
			return _gbabg
		}
	}
	for _fceaa, _ecgfb := range _deefb.Cols {
		if _dcffc := _ecgfb.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _fceaa)); _dcffc != nil {
			return _dcffc
		}
	}
	if _gbgbg := _deefb.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _gbgbg != nil {
		return _gbgbg
	}
	if _deefb.SheetProtection != nil {
		if _fddd := _deefb.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _fddd != nil {
			return _fddd
		}
	}
	if _deefb.AutoFilter != nil {
		if _dedead := _deefb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _dedead != nil {
			return _dedead
		}
	}
	if _deefb.SortState != nil {
		if _edef := _deefb.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _edef != nil {
			return _edef
		}
	}
	if _deefb.DataConsolidate != nil {
		if _dbfee := _deefb.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _dbfee != nil {
			return _dbfee
		}
	}
	if _deefb.CustomSheetViews != nil {
		if _eggbf := _deefb.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _eggbf != nil {
			return _eggbf
		}
	}
	if _deefb.PhoneticPr != nil {
		if _feacff := _deefb.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _feacff != nil {
			return _feacff
		}
	}
	for _gbcgd, _cadbfg := range _deefb.ConditionalFormatting {
		if _bgee := _cadbfg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _gbcgd)); _bgee != nil {
			return _bgee
		}
	}
	if _deefb.PrintOptions != nil {
		if _fdbfa := _deefb.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _fdbfa != nil {
			return _fdbfa
		}
	}
	if _deefb.PageMargins != nil {
		if _eeeebf := _deefb.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _eeeebf != nil {
			return _eeeebf
		}
	}
	if _deefb.PageSetup != nil {
		if _dgegd := _deefb.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _dgegd != nil {
			return _dgegd
		}
	}
	if _deefb.HeaderFooter != nil {
		if _bfcgg := _deefb.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _bfcgg != nil {
			return _bfcgg
		}
	}
	if _deefb.RowBreaks != nil {
		if _gbff := _deefb.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _gbff != nil {
			return _gbff
		}
	}
	if _deefb.ColBreaks != nil {
		if _cgaba := _deefb.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _cgaba != nil {
			return _cgaba
		}
	}
	if _deefb.CustomProperties != nil {
		if _ebebb := _deefb.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _ebebb != nil {
			return _ebebb
		}
	}
	if _deefb.Drawing != nil {
		if _cagec := _deefb.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _cagec != nil {
			return _cagec
		}
	}
	if _deefb.LegacyDrawing != nil {
		if _cgfbf := _deefb.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _cgfbf != nil {
			return _cgfbf
		}
	}
	if _deefb.LegacyDrawingHF != nil {
		if _dadad := _deefb.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _dadad != nil {
			return _dadad
		}
	}
	if _deefb.DrawingHF != nil {
		if _faafe := _deefb.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _faafe != nil {
			return _faafe
		}
	}
	if _deefb.Picture != nil {
		if _baacf := _deefb.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _baacf != nil {
			return _baacf
		}
	}
	if _deefb.OleObjects != nil {
		if _ddcef := _deefb.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _ddcef != nil {
			return _ddcef
		}
	}
	if _deefb.ExtLst != nil {
		if _egce := _deefb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egce != nil {
			return _egce
		}
	}
	return nil
}
func NewCT_DynamicFilter() *CT_DynamicFilter {
	_effbg := &CT_DynamicFilter{}
	_effbg.TypeAttr = ST_DynamicFilterType(1)
	return _effbg
}
func (_debgcf *CT_CustomFilters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _debgcf.AndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_debgcf.AndAttr))})
	}
	e.EncodeToken(start)
	_degd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}}
	for _, _cfefd := range _debgcf.CustomFilter {
		e.EncodeElement(_cfefd, _degd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DiscretePr and its children
func (_efea *CT_DiscretePr) Validate() error {
	return _efea.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072")
}
func (_acdaf ST_CellType) String() string {
	switch _acdaf {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	case 5:
		return "\u0073\u0074\u0072"
	case 6:
		return "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return ""
}

// Validate validates the CT_Number and its children
func (_eafag *CT_Number) Validate() error {
	return _eafag.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r")
}
func (_dedaaa ST_RevisionAction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgfac := _b.Attr{}
	_fgfac.Name = name
	switch _dedaaa {
	case ST_RevisionActionUnset:
		_fgfac.Value = ""
	case ST_RevisionActionAdd:
		_fgfac.Value = "\u0061\u0064\u0064"
	case ST_RevisionActionDelete:
		_fgfac.Value = "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return _fgfac, nil
}

// Validate validates the CT_Fonts and its children
func (_gfee *CT_Fonts) Validate() error {
	return _gfee.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073")
}
func (_daafb *CT_DataRefs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daafb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_daafb.CountAttr)})
	}
	e.EncodeToken(start)
	if _daafb.DataRef != nil {
		_baee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066"}}
		for _, _defg := range _daafb.DataRef {
			e.EncodeElement(_defg, _baee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the ExternalLink and its children, prefixing error messages with path
func (_bfcbf *ExternalLink) ValidateWithPath(path string) error {
	if _dbdfdd := _bfcbf.CT_ExternalLink.ValidateWithPath(path); _dbdfdd != nil {
		return _dbdfdd
	}
	return nil
}
func (_bgcffg ST_ExternalConnectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ccbfge := _b.Attr{}
	_ccbfge.Name = name
	switch _bgcffg {
	case ST_ExternalConnectionTypeUnset:
		_ccbfge.Value = ""
	case ST_ExternalConnectionTypeGeneral:
		_ccbfge.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_ExternalConnectionTypeText:
		_ccbfge.Value = "\u0074\u0065\u0078\u0074"
	case ST_ExternalConnectionTypeMDY:
		_ccbfge.Value = "\u004d\u0044\u0059"
	case ST_ExternalConnectionTypeDMY:
		_ccbfge.Value = "\u0044\u004d\u0059"
	case ST_ExternalConnectionTypeYMD:
		_ccbfge.Value = "\u0059\u004d\u0044"
	case ST_ExternalConnectionTypeMYD:
		_ccbfge.Value = "\u004d\u0059\u0044"
	case ST_ExternalConnectionTypeDYM:
		_ccbfge.Value = "\u0044\u0059\u004d"
	case ST_ExternalConnectionTypeYDM:
		_ccbfge.Value = "\u0059\u0044\u004d"
	case ST_ExternalConnectionTypeSkip:
		_ccbfge.Value = "\u0073\u006b\u0069\u0070"
	case ST_ExternalConnectionTypeEMD:
		_ccbfge.Value = "\u0045\u004d\u0044"
	}
	return _ccbfge, nil
}

// Validate validates the CT_PivotCacheRecords and its children
func (_gece *CT_PivotCacheRecords) Validate() error {
	return _gece.ValidateWithPath("C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073")
}
func (_agede ST_FontScheme) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ccdefb := _b.Attr{}
	_ccdefb.Name = name
	switch _agede {
	case ST_FontSchemeUnset:
		_ccdefb.Value = ""
	case ST_FontSchemeNone:
		_ccdefb.Value = "\u006e\u006f\u006e\u0065"
	case ST_FontSchemeMajor:
		_ccdefb.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontSchemeMinor:
		_ccdefb.Value = "\u006d\u0069\u006eo\u0072"
	}
	return _ccdefb, nil
}
func (_bbfee *ST_ShowDataAs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbebaf, _dfacad := d.Token()
	if _dfacad != nil {
		return _dfacad
	}
	if _edfbg, _cbdgcg := _fbebaf.(_b.EndElement); _cbdgcg && _edfbg.Name == start.Name {
		*_bbfee = 1
		return nil
	}
	if _dabcd, _dgaaf := _fbebaf.(_b.CharData); !_dgaaf {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbebaf)
	} else {
		switch string(_dabcd) {
		case "":
			*_bbfee = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_bbfee = 1
		case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
			*_bbfee = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_bbfee = 3
		case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
			*_bbfee = 4
		case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
			*_bbfee = 5
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
			*_bbfee = 6
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
			*_bbfee = 7
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
			*_bbfee = 8
		case "\u0069\u006e\u0064e\u0078":
			*_bbfee = 9
		}
	}
	_fbebaf, _dfacad = d.Token()
	if _dfacad != nil {
		return _dfacad
	}
	if _cbgbf, _ddbdca := _fbebaf.(_b.EndElement); _ddbdca && _cbgbf.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbebaf)
}

type CT_PageFields struct {

	// Page Item Count
	CountAttr *uint32

	// Page Field
	PageField []*CT_PageField
}

func (_fbace ST_FileType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbace.String(), start)
}

// Validate validates the CT_MetadataRecord and its children
func (_faaad *CT_MetadataRecord) Validate() error {
	return _faaad.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064")
}
func (_abfgc ST_CalcMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dcdcfd := _b.Attr{}
	_dcdcfd.Name = name
	switch _abfgc {
	case ST_CalcModeUnset:
		_dcdcfd.Value = ""
	case ST_CalcModeManual:
		_dcdcfd.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_CalcModeAuto:
		_dcdcfd.Value = "\u0061\u0075\u0074\u006f"
	case ST_CalcModeAutoNoTable:
		_dcdcfd.Value = "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return _dcdcfd, nil
}
func (_eedgc *CT_SharedItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfcff := range start.Attr {
		if _cfcff.Name.Local == "\u006di\u006e\u0044\u0061\u0074\u0065" {
			_bcacdf, _bdcbd := ParseStdlibTime(_cfcff.Value)
			if _bdcbd != nil {
				return _bdcbd
			}
			_eedgc.MinDateAttr = &_bcacdf
			continue
		}
		if _cfcff.Name.Local == "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073" {
			_bdebcf, _fdffgb := _e.ParseBool(_cfcff.Value)
			if _fdffgb != nil {
				return _fdffgb
			}
			_eedgc.ContainsSemiMixedTypesAttr = &_bdebcf
			continue
		}
		if _cfcff.Name.Local == "\u006da\u0078\u0044\u0061\u0074\u0065" {
			_daedb, _abdcd := ParseStdlibTime(_cfcff.Value)
			if _abdcd != nil {
				return _abdcd
			}
			_eedgc.MaxDateAttr = &_daedb
			continue
		}
		if _cfcff.Name.Local == "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065" {
			_cecce, _ebgfbc := _e.ParseBool(_cfcff.Value)
			if _ebgfbc != nil {
				return _ebgfbc
			}
			_eedgc.ContainsDateAttr = &_cecce
			continue
		}
		if _cfcff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_caceb, _aebeb := _e.ParseUint(_cfcff.Value, 10, 32)
			if _aebeb != nil {
				return _aebeb
			}
			_bccaa := uint32(_caceb)
			_eedgc.CountAttr = &_bccaa
			continue
		}
		if _cfcff.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b" {
			_eedbf, _ddafb := _e.ParseBool(_cfcff.Value)
			if _ddafb != nil {
				return _ddafb
			}
			_eedgc.ContainsBlankAttr = &_eedbf
			continue
		}
		if _cfcff.Name.Local == "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074" {
			_bggaf, _ccdg := _e.ParseBool(_cfcff.Value)
			if _ccdg != nil {
				return _ccdg
			}
			_eedgc.LongTextAttr = &_bggaf
			continue
		}
		if _cfcff.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072" {
			_facde, _dgbbaf := _e.ParseBool(_cfcff.Value)
			if _dgbbaf != nil {
				return _dgbbaf
			}
			_eedgc.ContainsNumberAttr = &_facde
			continue
		}
		if _cfcff.Name.Local == "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065" {
			_debbg, _eceefc := _e.ParseFloat(_cfcff.Value, 64)
			if _eceefc != nil {
				return _eceefc
			}
			_eedgc.MinValueAttr = &_debbg
			continue
		}
		if _cfcff.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065" {
			_bgfga, _fgfcf := _e.ParseFloat(_cfcff.Value, 64)
			if _fgfcf != nil {
				return _fgfcf
			}
			_eedgc.MaxValueAttr = &_bgfga
			continue
		}
		if _cfcff.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065" {
			_egeba, _bcgfc := _e.ParseBool(_cfcff.Value)
			if _bcgfc != nil {
				return _bcgfc
			}
			_eedgc.ContainsNonDateAttr = &_egeba
			continue
		}
		if _cfcff.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067" {
			_ageag, _cfefed := _e.ParseBool(_cfcff.Value)
			if _cfefed != nil {
				return _cfefed
			}
			_eedgc.ContainsStringAttr = &_ageag
			continue
		}
		if _cfcff.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073" {
			_efcgf, _eedbgd := _e.ParseBool(_cfcff.Value)
			if _eedbgd != nil {
				return _eedbgd
			}
			_eedgc.ContainsMixedTypesAttr = &_efcgf
			continue
		}
		if _cfcff.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072" {
			_gabab, _bdgbfb := _e.ParseBool(_cfcff.Value)
			if _bdgbfb != nil {
				return _bdgbfb
			}
			_eedgc.ContainsIntegerAttr = &_gabab
			continue
		}
	}
_ggaeb:
	for {
		_agbdb, _bbcca := d.Token()
		if _bbcca != nil {
			return _bbcca
		}
		switch _abeeb := _agbdb.(type) {
		case _b.StartElement:
			switch _abeeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_dcffgf := NewCT_Missing()
				if _dbfa := d.DecodeElement(_dcffgf, &_abeeb); _dbfa != nil {
					return _dbfa
				}
				_eedgc.M = append(_eedgc.M, _dcffgf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_edeea := NewCT_Number()
				if _dfgdc := d.DecodeElement(_edeea, &_abeeb); _dfgdc != nil {
					return _dfgdc
				}
				_eedgc.N = append(_eedgc.N, _edeea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_aagfb := NewCT_Boolean()
				if _beaca := d.DecodeElement(_aagfb, &_abeeb); _beaca != nil {
					return _beaca
				}
				_eedgc.B = append(_eedgc.B, _aagfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_afcbd := NewCT_Error()
				if _fcabbe := d.DecodeElement(_afcbd, &_abeeb); _fcabbe != nil {
					return _fcabbe
				}
				_eedgc.E = append(_eedgc.E, _afcbd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_eecbd := NewCT_String()
				if _bddab := d.DecodeElement(_eecbd, &_abeeb); _bddab != nil {
					return _bddab
				}
				_eedgc.S = append(_eedgc.S, _eecbd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_bggfc := NewCT_DateTime()
				if _afecf := d.DecodeElement(_bggfc, &_abeeb); _afecf != nil {
					return _afecf
				}
				_eedgc.D = append(_eedgc.D, _bggfc)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049t\u0065m\u0073\u0020\u0025\u0076", _abeeb.Name)
				if _bgega := d.Skip(); _bgega != nil {
					return _bgega
				}
			}
		case _b.EndElement:
			break _ggaeb
		case _b.CharData:
		}
	}
	return nil
}
func (_daeaf *CT_Member) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _daeaf.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AutoFilter and its children
func (_afb *CT_AutoFilter) Validate() error {
	return _afb.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072")
}

// Validate validates the CT_Item and its children
func (_bcgeg *CT_Item) Validate() error {
	return _bcgeg.ValidateWithPath("\u0043T\u005f\u0049\u0074\u0065\u006d")
}

type CT_MeasureGroup struct {

	// Measure Group Name
	NameAttr string

	// Measure Group Display Name
	CaptionAttr string
}

// ValidateWithPath validates the CT_Tuple and its children, prefixing error messages with path
func (_deegc *CT_Tuple) ValidateWithPath(path string) error { return nil }
func NewCT_CustomProperty() *CT_CustomProperty              { _fadee := &CT_CustomProperty{}; return _fadee }

// ValidateWithPath validates the CT_ExternalSheetNames and its children, prefixing error messages with path
func (_gdaea *CT_ExternalSheetNames) ValidateWithPath(path string) error {
	for _cabb, _bgabe := range _gdaea.SheetName {
		if _cbded := _bgabe.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _cabb)); _cbded != nil {
			return _cbded
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BorderPr and its children, prefixing error messages with path
func (_bae *CT_BorderPr) ValidateWithPath(path string) error {
	if _fcgc := _bae.StyleAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _fcgc != nil {
		return _fcgc
	}
	if _bae.Color != nil {
		if _agee := _bae.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _agee != nil {
			return _agee
		}
	}
	return nil
}
func (_def *CT_CacheSource) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_def.TypeAttr = ST_SourceType(1)
	for _, _ggbe := range start.Attr {
		if _ggbe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_def.TypeAttr.UnmarshalXMLAttr(_ggbe)
			continue
		}
		if _ggbe.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_fgea, _gdbg := _e.ParseUint(_ggbe.Value, 10, 32)
			if _gdbg != nil {
				return _gdbg
			}
			_agdd := uint32(_fgea)
			_def.ConnectionIdAttr = &_agdd
			continue
		}
	}
_aafff:
	for {
		_egee, _gafc := d.Token()
		if _gafc != nil {
			return _gafc
		}
		switch _cdae := _egee.(type) {
		case _b.StartElement:
			switch _cdae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
				_def.WorksheetSource = NewCT_WorksheetSource()
				if _bba := d.DecodeElement(_def.WorksheetSource, &_cdae); _bba != nil {
					return _bba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
				_def.Consolidation = NewCT_Consolidation()
				if _ecgb := d.DecodeElement(_def.Consolidation, &_cdae); _ecgb != nil {
					return _ecgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_def.ExtLst = NewCT_ExtensionList()
				if _aag := d.DecodeElement(_def.ExtLst, &_cdae); _aag != nil {
					return _aag
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006fu\u0072c\u0065\u0020\u0025\u0076", _cdae.Name)
				if _bce := d.Skip(); _bce != nil {
					return _bce
				}
			}
		case _b.EndElement:
			break _aafff
		case _b.CharData:
		}
	}
	return nil
}
func (_ffcef *CT_Consolidation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffcef.AutoPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_ffcef.AutoPageAttr))})
	}
	e.EncodeToken(start)
	if _ffcef.Pages != nil {
		_ebedb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0073"}}
		e.EncodeElement(_ffcef.Pages, _ebedb)
	}
	_cdda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"}}
	e.EncodeElement(_ffcef.RangeSets, _cdda)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffbea *CT_FileVersion) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcadd := range start.Attr {
		if _gcadd.Name.Local == "\u0061p\u0070\u004e\u0061\u006d\u0065" {
			_dfdc, _egda := _gcadd.Value, error(nil)
			if _egda != nil {
				return _egda
			}
			_ffbea.AppNameAttr = &_dfdc
			continue
		}
		if _gcadd.Name.Local == "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_acea, _egaba := _gcadd.Value, error(nil)
			if _egaba != nil {
				return _egaba
			}
			_ffbea.LastEditedAttr = &_acea
			continue
		}
		if _gcadd.Name.Local == "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_bdcdf, _abbg := _gcadd.Value, error(nil)
			if _abbg != nil {
				return _abbg
			}
			_ffbea.LowestEditedAttr = &_bdcdf
			continue
		}
		if _gcadd.Name.Local == "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064" {
			_ffgf, _aagde := _gcadd.Value, error(nil)
			if _aagde != nil {
				return _aagde
			}
			_ffbea.RupBuildAttr = &_ffgf
			continue
		}
		if _gcadd.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_dcbgb, _bbcf := _gcadd.Value, error(nil)
			if _bbcf != nil {
				return _bbcf
			}
			_ffbea.CodeNameAttr = &_dcbgb
			continue
		}
	}
	for {
		_caefe, _egcg := d.Token()
		if _egcg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e:\u0020\u0025\u0073", _egcg)
		}
		if _fffec, _eddbf := _caefe.(_b.EndElement); _eddbf && _fffec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbffb ST_FormulaExpression) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bagfdf := _b.Attr{}
	_bagfdf.Name = name
	switch _dbffb {
	case ST_FormulaExpressionUnset:
		_bagfdf.Value = ""
	case ST_FormulaExpressionRef:
		_bagfdf.Value = "\u0072\u0065\u0066"
	case ST_FormulaExpressionRefError:
		_bagfdf.Value = "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case ST_FormulaExpressionArea:
		_bagfdf.Value = "\u0061\u0072\u0065\u0061"
	case ST_FormulaExpressionAreaError:
		_bagfdf.Value = "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case ST_FormulaExpressionComputedArea:
		_bagfdf.Value = "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return _bagfdf, nil
}

type ST_ItemType byte

// ValidateWithPath validates the CT_AutoSortScope and its children, prefixing error messages with path
func (_dbd *CT_AutoSortScope) ValidateWithPath(path string) error {
	if _ded := _dbd.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _ded != nil {
		return _ded
	}
	return nil
}

// Validate validates the CT_FieldGroup and its children
func (_fcacf *CT_FieldGroup) Validate() error {
	return _fcacf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070")
}
func (_bca *CT_BorderPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bca.StyleAttr != ST_BorderStyleUnset {
		_gcgf, _bad := _bca.StyleAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0079l\u0065"})
		if _bad != nil {
			return _bad
		}
		start.Attr = append(start.Attr, _gcgf)
	}
	e.EncodeToken(start)
	if _bca.Color != nil {
		_age := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bca.Color, _age)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Metadata struct {

	// Metadata Types Collection
	MetadataTypes *CT_MetadataTypes

	// Metadata String Store
	MetadataStrings *CT_MetadataStrings

	// MDX Metadata Information
	MdxMetadata *CT_MdxMetadata

	// Future Metadata
	FutureMetadata []*CT_FutureMetadata

	// Cell Metadata
	CellMetadata *CT_MetadataBlocks

	// Value Metadata
	ValueMetadata *CT_MetadataBlocks

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_OutlinePr and its children, prefixing error messages with path
func (_fggb *CT_OutlinePr) ValidateWithPath(path string) error { return nil }
func (_gfegd *ST_ItemType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bebdg, _ecbdc := d.Token()
	if _ecbdc != nil {
		return _ecbdc
	}
	if _bdfafc, _gcgbdaf := _bebdg.(_b.EndElement); _gcgbdaf && _bdfafc.Name == start.Name {
		*_gfegd = 1
		return nil
	}
	if _gbdgfe, _dgcbg := _bebdg.(_b.CharData); !_dgcbg {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bebdg)
	} else {
		switch string(_gbdgfe) {
		case "":
			*_gfegd = 0
		case "\u0064\u0061\u0074\u0061":
			*_gfegd = 1
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_gfegd = 2
		case "\u0073\u0075\u006d":
			*_gfegd = 3
		case "\u0063\u006f\u0075\u006e\u0074\u0041":
			*_gfegd = 4
		case "\u0061\u0076\u0067":
			*_gfegd = 5
		case "\u006d\u0061\u0078":
			*_gfegd = 6
		case "\u006d\u0069\u006e":
			*_gfegd = 7
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_gfegd = 8
		case "\u0063\u006f\u0075n\u0074":
			*_gfegd = 9
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_gfegd = 10
		case "\u0073t\u0064\u0044\u0065\u0076\u0050":
			*_gfegd = 11
		case "\u0076\u0061\u0072":
			*_gfegd = 12
		case "\u0076\u0061\u0072\u0050":
			*_gfegd = 13
		case "\u0067\u0072\u0061n\u0064":
			*_gfegd = 14
		case "\u0062\u006c\u0061n\u006b":
			*_gfegd = 15
		}
	}
	_bebdg, _ecbdc = d.Token()
	if _ecbdc != nil {
		return _ecbdc
	}
	if _agafef, _bcfabf := _bebdg.(_b.EndElement); _bcfabf && _agafef.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bebdg)
}

type CT_ReviewedRevisions struct {

	// Reviewed Revisions Count
	CountAttr *uint32

	// Reviewed
	Reviewed []*CT_Reviewed
}

func (_cbbaf *CT_MetadataTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbbaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_cbbaf.CountAttr)})
	}
	e.EncodeToken(start)
	_dfcdcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}}
	for _, _edfd := range _cbbaf.MetadataType {
		e.EncodeElement(_edfd, _dfcdcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdea *CT_QueryTableDeletedFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febgb := range start.Attr {
		if _febgb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gadgd, _ecgcc := _e.ParseUint(_febgb.Value, 10, 32)
			if _ecgcc != nil {
				return _ecgcc
			}
			_bcbgfc := uint32(_gadgd)
			_fdea.CountAttr = &_bcbgfc
			continue
		}
	}
_edbbg:
	for {
		_abbf, _bfgaa := d.Token()
		if _bfgaa != nil {
			return _bfgaa
		}
		switch _gcgbb := _abbf.(type) {
		case _b.StartElement:
			switch _gcgbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}:
				_dccab := NewCT_DeletedField()
				if _ebfaac := d.DecodeElement(_dccab, &_gcgbb); _ebfaac != nil {
					return _ebfaac
				}
				_fdea.DeletedField = append(_fdea.DeletedField, _dccab)
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0051\u0075e\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _gcgbb.Name)
				if _fabdg := d.Skip(); _fabdg != nil {
					return _fabdg
				}
			}
		case _b.EndElement:
			break _edbbg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ColorFilter() *CT_ColorFilter { _bbfgg := &CT_ColorFilter{}; return _bbfgg }

type CT_SortState struct {

	// Sort by Columns
	ColumnSortAttr *bool

	// Case Sensitive
	CaseSensitiveAttr *bool

	// Sort Method
	SortMethodAttr ST_SortMethod

	// Sort Range
	RefAttr string

	// Sort Condition
	SortCondition []*CT_SortCondition
	ExtLst        *CT_ExtensionList
}

// Validate validates the CT_Field and its children
func (_ececg *CT_Field) Validate() error {
	return _ececg.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064")
}

// Validate validates the CT_QueryTableDeletedFields and its children
func (_dfcbfb *CT_QueryTableDeletedFields) Validate() error {
	return _dfcbfb.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073")
}

type CT_MeasureGroups struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	MeasureGroup []*CT_MeasureGroup
}

// ValidateWithPath validates the CT_Stylesheet and its children, prefixing error messages with path
func (_aaedg *CT_Stylesheet) ValidateWithPath(path string) error {
	if _aaedg.NumFmts != nil {
		if _bcdbab := _aaedg.NumFmts.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u0073"); _bcdbab != nil {
			return _bcdbab
		}
	}
	if _aaedg.Fonts != nil {
		if _fabgc := _aaedg.Fonts.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0073"); _fabgc != nil {
			return _fabgc
		}
	}
	if _aaedg.Fills != nil {
		if _efbgbe := _aaedg.Fills.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0073"); _efbgbe != nil {
			return _efbgbe
		}
	}
	if _aaedg.Borders != nil {
		if _daacdf := _aaedg.Borders.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0073"); _daacdf != nil {
			return _daacdf
		}
	}
	if _aaedg.CellStyleXfs != nil {
		if _ddbga := _aaedg.CellStyleXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"); _ddbga != nil {
			return _ddbga
		}
	}
	if _aaedg.CellXfs != nil {
		if _ggcbg := _aaedg.CellXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0058\u0066\u0073"); _ggcbg != nil {
			return _ggcbg
		}
	}
	if _aaedg.CellStyles != nil {
		if _cegbcf := _aaedg.CellStyles.ValidateWithPath(path + "/\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"); _cegbcf != nil {
			return _cegbcf
		}
	}
	if _aaedg.Dxfs != nil {
		if _aebbb := _aaedg.Dxfs.ValidateWithPath(path + "\u002f\u0044\u0078f\u0073"); _aebbb != nil {
			return _aebbb
		}
	}
	if _aaedg.TableStyles != nil {
		if _dccbd := _aaedg.TableStyles.ValidateWithPath(path + "\u002f\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"); _dccbd != nil {
			return _dccbd
		}
	}
	if _aaedg.Colors != nil {
		if _fbfbab := _aaedg.Colors.ValidateWithPath(path + "\u002fC\u006f\u006c\u006f\u0072\u0073"); _fbfbab != nil {
			return _fbfbab
		}
	}
	if _aaedg.ExtLst != nil {
		if _gbcaa := _aaedg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbcaa != nil {
			return _gbcaa
		}
	}
	return nil
}
func NewCT_Scenario() *CT_Scenario { _fdbbe := &CT_Scenario{}; return _fdbbe }

// Validate validates the CT_PageMargins and its children
func (_ffcda *CT_PageMargins) Validate() error {
	return _ffcda.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073")
}
func (_afbgd ST_TextVAlign) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbeac := _b.Attr{}
	_fbeac.Name = name
	switch _afbgd {
	case ST_TextVAlignUnset:
		_fbeac.Value = ""
	case ST_TextVAlignTop:
		_fbeac.Value = "\u0074\u006f\u0070"
	case ST_TextVAlignCenter:
		_fbeac.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextVAlignBottom:
		_fbeac.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_TextVAlignJustify:
		_fbeac.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextVAlignDistributed:
		_fbeac.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _fbeac, nil
}

// Validate validates the CT_FieldUsage and its children
func (_bdbaa *CT_FieldUsage) Validate() error {
	return _bdbaa.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065")
}
func (_cgdbb *CT_Top10) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgdbb.TopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgdbb.TopAttr))})
	}
	if _cgdbb.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_cgdbb.PercentAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _f.Sprintf("\u0025\u0076", _cgdbb.ValAttr)})
	if _cgdbb.FilterValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l"}, Value: _f.Sprintf("\u0025\u0076", *_cgdbb.FilterValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OleSize struct {

	// Reference
	RefAttr string
}

// Validate validates the CT_PivotSelection and its children
func (_bcdbg *CT_PivotSelection) Validate() error {
	return _bcdbg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e")
}
func (_ddage *CT_OleItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ddage.OleItem != nil {
		_gfae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d"}}
		for _, _cegdf := range _ddage.OleItem {
			e.EncodeElement(_cegdf, _gfae)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bccde *ST_CfvoType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bccde = 0
	case "\u006e\u0075\u006d":
		*_bccde = 1
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_bccde = 2
	case "\u006d\u0061\u0078":
		*_bccde = 3
	case "\u006d\u0069\u006e":
		*_bccde = 4
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_bccde = 5
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
		*_bccde = 6
	}
	return nil
}

// ValidateWithPath validates the CT_RangeSet and its children, prefixing error messages with path
func (_gdbde *CT_RangeSet) ValidateWithPath(path string) error { return nil }

type CT_RowFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Row Items
	Field []*CT_Field
}

func NewCT_Item() *CT_Item { _agada := &CT_Item{}; return _agada }
func (_cface *VolTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073"
	return _cface.CT_VolTypes.MarshalXML(e, start)
}
func (_fddba ST_FileType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbaccf := _b.Attr{}
	_cbaccf.Name = name
	switch _fddba {
	case ST_FileTypeUnset:
		_cbaccf.Value = ""
	case ST_FileTypeMac:
		_cbaccf.Value = "\u006d\u0061\u0063"
	case ST_FileTypeWin:
		_cbaccf.Value = "\u0077\u0069\u006e"
	case ST_FileTypeDos:
		_cbaccf.Value = "\u0064\u006f\u0073"
	case ST_FileTypeLin:
		_cbaccf.Value = "\u006c\u0069\u006e"
	case ST_FileTypeOther:
		_cbaccf.Value = "\u006f\u0074\u0068e\u0072"
	}
	return _cbaccf, nil
}
func NewCT_WebPublishItem() *CT_WebPublishItem {
	_babde := &CT_WebPublishItem{}
	_babde.SourceTypeAttr = ST_WebSourceType(1)
	return _babde
}
func (_bbbca *CT_QueryTableField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _bbbca.IdAttr)})
	if _bbbca.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbbca.NameAttr)})
	}
	if _bbbca.DataBoundAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bbbca.DataBoundAttr))})
	}
	if _bbbca.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bbbca.RowNumbersAttr))})
	}
	if _bbbca.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bbbca.FillFormulasAttr))})
	}
	if _bbbca.ClippedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063l\u0069\u0070\u0070\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_bbbca.ClippedAttr))})
	}
	if _bbbca.TableColumnIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bbbca.TableColumnIdAttr)})
	}
	e.EncodeToken(start)
	if _bbbca.ExtLst != nil {
		_gcgdb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bbbca.ExtLst, _gcgdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_feebf *CT_GradientFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdage := range start.Attr {
		if _fdage.Name.Local == "\u0074\u0079\u0070\u0065" {
			_feebf.TypeAttr.UnmarshalXMLAttr(_fdage)
			continue
		}
		if _fdage.Name.Local == "\u0064\u0065\u0067\u0072\u0065\u0065" {
			_gafg, _fcbbc := _e.ParseFloat(_fdage.Value, 64)
			if _fcbbc != nil {
				return _fcbbc
			}
			_feebf.DegreeAttr = &_gafg
			continue
		}
		if _fdage.Name.Local == "\u006c\u0065\u0066\u0074" {
			_gacdc, _afad := _e.ParseFloat(_fdage.Value, 64)
			if _afad != nil {
				return _afad
			}
			_feebf.LeftAttr = &_gacdc
			continue
		}
		if _fdage.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_ffbfd, _aaaed := _e.ParseFloat(_fdage.Value, 64)
			if _aaaed != nil {
				return _aaaed
			}
			_feebf.RightAttr = &_ffbfd
			continue
		}
		if _fdage.Name.Local == "\u0074\u006f\u0070" {
			_dgggf, _gbde := _e.ParseFloat(_fdage.Value, 64)
			if _gbde != nil {
				return _gbde
			}
			_feebf.TopAttr = &_dgggf
			continue
		}
		if _fdage.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_bdcdb, _edcbf := _e.ParseFloat(_fdage.Value, 64)
			if _edcbf != nil {
				return _edcbf
			}
			_feebf.BottomAttr = &_bdcdb
			continue
		}
	}
_baaa:
	for {
		_eggb, _cebgb := d.Token()
		if _cebgb != nil {
			return _cebgb
		}
		switch _gafgb := _eggb.(type) {
		case _b.StartElement:
			switch _gafgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}:
				_ggebb := NewCT_GradientStop()
				if _cacfd := d.DecodeElement(_ggebb, &_gafgb); _cacfd != nil {
					return _cacfd
				}
				_feebf.Stop = append(_feebf.Stop, _ggebb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _gafgb.Name)
				if _ebgeec := d.Skip(); _ebgeec != nil {
					return _ebgeec
				}
			}
		case _b.EndElement:
			break _baaa
		case _b.CharData:
		}
	}
	return nil
}

type ST_Sqref []string
type CT_Hyperlinks struct {

	// Hyperlink
	Hyperlink []*CT_Hyperlink
}

func (_cdbeg *ST_CfvoType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cacebg, _cbecd := d.Token()
	if _cbecd != nil {
		return _cbecd
	}
	if _gefcbd, _dcgeef := _cacebg.(_b.EndElement); _dcgeef && _gefcbd.Name == start.Name {
		*_cdbeg = 1
		return nil
	}
	if _fadfe, _agface := _cacebg.(_b.CharData); !_agface {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cacebg)
	} else {
		switch string(_fadfe) {
		case "":
			*_cdbeg = 0
		case "\u006e\u0075\u006d":
			*_cdbeg = 1
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_cdbeg = 2
		case "\u006d\u0061\u0078":
			*_cdbeg = 3
		case "\u006d\u0069\u006e":
			*_cdbeg = 4
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_cdbeg = 5
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
			*_cdbeg = 6
		}
	}
	_cacebg, _cbecd = d.Token()
	if _cbecd != nil {
		return _cbecd
	}
	if _dbgcb, _ffdcgf := _cacebg.(_b.EndElement); _ffdcgf && _dbgcb.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cacebg)
}
func NewCT_ExternalDefinedNames() *CT_ExternalDefinedNames {
	_gcac := &CT_ExternalDefinedNames{}
	return _gcac
}

type CT_DiscretePr struct {

	// Mapping Index Count
	CountAttr *uint32

	// Element Group
	X []*CT_Index
}

// Validate validates the CT_SortCondition and its children
func (_cecfe *CT_SortCondition) Validate() error {
	return _cecfe.ValidateWithPath("\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_RElt and its children, prefixing error messages with path
func (_egegg *CT_RElt) ValidateWithPath(path string) error {
	if _egegg.RPr != nil {
		if _gaecg := _egegg.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _gaecg != nil {
			return _gaecg
		}
	}
	return nil
}

type CT_ExternalRow struct {

	// Row
	RAttr uint32

	// External Cell Data
	Cell []*CT_ExternalCell
}

// ValidateWithPath validates the CT_IntProperty and its children, prefixing error messages with path
func (_cbbg *CT_IntProperty) ValidateWithPath(path string) error { return nil }
func (_ccaaed *ST_IconSetType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ccaaed = 0
	case "\u0033A\u0072\u0072\u006f\u0077\u0073":
		*_ccaaed = 1
	case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_ccaaed = 2
	case "\u0033\u0046\u006c\u0061\u0067\u0073":
		*_ccaaed = 3
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
		*_ccaaed = 4
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
		*_ccaaed = 5
	case "\u0033\u0053\u0069\u0067\u006e\u0073":
		*_ccaaed = 6
	case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
		*_ccaaed = 7
	case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
		*_ccaaed = 8
	case "\u0034A\u0072\u0072\u006f\u0077\u0073":
		*_ccaaed = 9
	case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_ccaaed = 10
	case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
		*_ccaaed = 11
	case "\u0034R\u0061\u0074\u0069\u006e\u0067":
		*_ccaaed = 12
	case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
		*_ccaaed = 13
	case "\u0035A\u0072\u0072\u006f\u0077\u0073":
		*_ccaaed = 14
	case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_ccaaed = 15
	case "\u0035R\u0061\u0074\u0069\u006e\u0067":
		*_ccaaed = 16
	case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
		*_ccaaed = 17
	}
	return nil
}
func (_fgdfd ST_DateTimeGrouping) Validate() error { return _fgdfd.ValidateWithPath("") }
func (_aagab ST_FormulaExpression) ValidateWithPath(path string) error {
	switch _aagab {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagab))
	}
	return nil
}

// Validate validates the CT_ObjectPr and its children
func (_ggegg *CT_ObjectPr) Validate() error {
	return _ggegg.ValidateWithPath("C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072")
}

type ST_PhoneticType byte

func (_eceeg *CT_TableStyleInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eceeg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_eceeg.NameAttr)})
	}
	if _eceeg.ShowFirstColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eceeg.ShowFirstColumnAttr))})
	}
	if _eceeg.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eceeg.ShowLastColumnAttr))})
	}
	if _eceeg.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eceeg.ShowRowStripesAttr))})
	}
	if _eceeg.ShowColumnStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_eceeg.ShowColumnStripesAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_UndoInfo and its children, prefixing error messages with path
func (_dcdfcg *CT_UndoInfo) ValidateWithPath(path string) error {
	if _dcdfcg.ExpAttr == ST_FormulaExpressionUnset {
		return _f.Errorf("\u0025\u0073\u002fE\u0078\u0070\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dbdbe := _dcdfcg.ExpAttr.ValidateWithPath(path + "\u002f\u0045\u0078\u0070\u0041\u0074\u0074\u0072"); _dbdbe != nil {
		return _dbdbe
	}
	return nil
}
func NewCT_SheetData() *CT_SheetData { _cefef := &CT_SheetData{}; return _cefef }

type CT_TableFormula struct {
	ArrayAttr bool
	Content   string
}

// ValidateWithPath validates the CT_BookView and its children, prefixing error messages with path
func (_ee *CT_BookView) ValidateWithPath(path string) error {
	if _fgd := _ee.VisibilityAttr.ValidateWithPath(path + "\u002fV\u0069s\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0041\u0074\u0074\u0072"); _fgd != nil {
		return _fgd
	}
	if _ee.ExtLst != nil {
		if _ccf := _ee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccf != nil {
			return _ccf
		}
	}
	return nil
}
func (_eabfb *CT_RevisionCustomView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _eabfb.GuidAttr)})
	_adefe, _cfgc := _eabfb.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _cfgc != nil {
		return _cfgc
	}
	start.Attr = append(start.Attr, _adefe)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellAlignment and its children, prefixing error messages with path
func (_aefa *CT_CellAlignment) ValidateWithPath(path string) error {
	if _edb := _aefa.HorizontalAttr.ValidateWithPath(path + "\u002fH\u006fr\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _edb != nil {
		return _edb
	}
	if _cffd := _aefa.VerticalAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u0074\u0074\u0072"); _cffd != nil {
		return _cffd
	}
	return nil
}

// ValidateWithPath validates the CT_X and its children, prefixing error messages with path
func (_cgafg *CT_X) ValidateWithPath(path string) error { return nil }
func NewHeaders() *Headers {
	_bbgcd := &Headers{}
	_bbgcd.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	return _bbgcd
}
func NewCT_Query() *CT_Query { _fcgdf := &CT_Query{}; return _fcgdf }
func (_aefbf *CT_HeaderFooter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bage := range start.Attr {
		if _bage.Name.Local == "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e" {
			_feec, _edafc := _e.ParseBool(_bage.Value)
			if _edafc != nil {
				return _edafc
			}
			_aefbf.DifferentOddEvenAttr = &_feec
			continue
		}
		if _bage.Name.Local == "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074" {
			_fgbea, _aegb := _e.ParseBool(_bage.Value)
			if _aegb != nil {
				return _aegb
			}
			_aefbf.DifferentFirstAttr = &_fgbea
			continue
		}
		if _bage.Name.Local == "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063" {
			_geedd, _cccee := _e.ParseBool(_bage.Value)
			if _cccee != nil {
				return _cccee
			}
			_aefbf.ScaleWithDocAttr = &_geedd
			continue
		}
		if _bage.Name.Local == "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073" {
			_gefdb, _aeaf := _e.ParseBool(_bage.Value)
			if _aeaf != nil {
				return _aeaf
			}
			_aefbf.AlignWithMarginsAttr = &_gefdb
			continue
		}
	}
_eagg:
	for {
		_fedag, _afedc := d.Token()
		if _afedc != nil {
			return _afedc
		}
		switch _bcfbcf := _fedag.(type) {
		case _b.StartElement:
			switch _bcfbcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}:
				_aefbf.OddHeader = new(string)
				if _dcfb := d.DecodeElement(_aefbf.OddHeader, &_bcfbcf); _dcfb != nil {
					return _dcfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}:
				_aefbf.OddFooter = new(string)
				if _eead := d.DecodeElement(_aefbf.OddFooter, &_bcfbcf); _eead != nil {
					return _eead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_aefbf.EvenHeader = new(string)
				if _dcdeb := d.DecodeElement(_aefbf.EvenHeader, &_bcfbcf); _dcdeb != nil {
					return _dcdeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aefbf.EvenFooter = new(string)
				if _daedf := d.DecodeElement(_aefbf.EvenFooter, &_bcfbcf); _daedf != nil {
					return _daedf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_aefbf.FirstHeader = new(string)
				if _fcad := d.DecodeElement(_aefbf.FirstHeader, &_bcfbcf); _fcad != nil {
					return _fcad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aefbf.FirstFooter = new(string)
				if _dagab := d.DecodeElement(_aefbf.FirstFooter, &_bcfbcf); _dagab != nil {
					return _dagab
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _bcfbcf.Name)
				if _abgcc := d.Skip(); _abgcc != nil {
					return _abgcc
				}
			}
		case _b.EndElement:
			break _eagg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Items and its children, prefixing error messages with path
func (_efdb *CT_Items) ValidateWithPath(path string) error {
	for _dgcag, _fbedb := range _efdb.Item {
		if _cbca := _fbedb.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _dgcag)); _cbca != nil {
			return _cbca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_bfeb *CT_Color) ValidateWithPath(path string) error { return nil }
func (_gddede ST_CfvoType) String() string {
	switch _gddede {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006d"
	case 2:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 3:
		return "\u006d\u0061\u0078"
	case 4:
		return "\u006d\u0069\u006e"
	case 5:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case 6:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return ""
}
func (_bcbadb *CT_FileVersion) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcbadb.AppNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bcbadb.AppNameAttr)})
	}
	if _bcbadb.LastEditedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bcbadb.LastEditedAttr)})
	}
	if _bcbadb.LowestEditedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bcbadb.LowestEditedAttr)})
	}
	if _bcbadb.RupBuildAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_bcbadb.RupBuildAttr)})
	}
	if _bcbadb.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bcbadb.CodeNameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableStyles() *CT_TableStyles { _fcbgf := &CT_TableStyles{}; return _fcbgf }
func (_bffe *CT_MdxSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acaaee := range start.Attr {
		if _acaaee.Name.Local == "\u006e\u0073" {
			_fbbaf, _eeeae := _e.ParseUint(_acaaee.Value, 10, 32)
			if _eeeae != nil {
				return _eeeae
			}
			_bffe.NsAttr = uint32(_fbbaf)
			continue
		}
		if _acaaee.Name.Local == "\u0063" {
			_ffggg, _caccc := _e.ParseUint(_acaaee.Value, 10, 32)
			if _caccc != nil {
				return _caccc
			}
			_eebdb := uint32(_ffggg)
			_bffe.CAttr = &_eebdb
			continue
		}
		if _acaaee.Name.Local == "\u006f" {
			_bffe.OAttr.UnmarshalXMLAttr(_acaaee)
			continue
		}
	}
_fddcc:
	for {
		_bdeg, _dfbdab := d.Token()
		if _dfbdab != nil {
			return _dfbdab
		}
		switch _gffff := _bdeg.(type) {
		case _b.StartElement:
			switch _gffff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_aeffg := NewCT_MetadataStringIndex()
				if _aefg := d.DecodeElement(_aeffg, &_gffff); _aefg != nil {
					return _aefg
				}
				_bffe.N = append(_bffe.N, _aeffg)
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0064\u0078S\u0065\u0074 \u0025\u0076", _gffff.Name)
				if _beaeg := d.Skip(); _beaeg != nil {
					return _beaeg
				}
			}
		case _b.EndElement:
			break _fddcc
		case _b.CharData:
		}
	}
	return nil
}
func (_agfcf ST_CellFormulaType) String() string {
	switch _agfcf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0061\u0072\u0072a\u0079"
	case 3:
		return "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case 4:
		return "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return ""
}
func (_efcaga ST_FontScheme) String() string {
	switch _efcaga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006d\u0061\u006ao\u0072"
	case 3:
		return "\u006d\u0069\u006eo\u0072"
	}
	return ""
}

type CT_Consolidation struct {

	// Auto Page
	AutoPageAttr *bool

	// Page Item Values
	Pages *CT_Pages

	// Range Sets
	RangeSets *CT_RangeSets
}

func (_cba *CT_BorderPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgc := range start.Attr {
		if _cgc.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_cba.StyleAttr.UnmarshalXMLAttr(_cgc)
			continue
		}
	}
_deda:
	for {
		_fadc, _fac := d.Token()
		if _fac != nil {
			return _fac
		}
		switch _afc := _fadc.(type) {
		case _b.StartElement:
			switch _afc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cba.Color = NewCT_Color()
				if _bbb := d.DecodeElement(_cba.Color, &_afc); _bbb != nil {
					return _bbb
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072\u0020\u0025\u0076", _afc.Name)
				if _ebf := d.Skip(); _ebf != nil {
					return _ebf
				}
			}
		case _b.EndElement:
			break _deda
		case _b.CharData:
		}
	}
	return nil
}
func (_egc *CT_Boolean) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(_egc.VAttr))})
	if _egc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egc.UAttr))})
	}
	if _egc.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_egc.FAttr))})
	}
	if _egc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_egc.CAttr)})
	}
	if _egc.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_egc.CpAttr)})
	}
	e.EncodeToken(start)
	if _egc.X != nil {
		_dgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _afda := range _egc.X {
			e.EncodeElement(_afda, _dgd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcfce ST_PivotAreaType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dcbbb := _b.Attr{}
	_dcbbb.Name = name
	switch _bcfce {
	case ST_PivotAreaTypeUnset:
		_dcbbb.Value = ""
	case ST_PivotAreaTypeNone:
		_dcbbb.Value = "\u006e\u006f\u006e\u0065"
	case ST_PivotAreaTypeNormal:
		_dcbbb.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_PivotAreaTypeData:
		_dcbbb.Value = "\u0064\u0061\u0074\u0061"
	case ST_PivotAreaTypeAll:
		_dcbbb.Value = "\u0061\u006c\u006c"
	case ST_PivotAreaTypeOrigin:
		_dcbbb.Value = "\u006f\u0072\u0069\u0067\u0069\u006e"
	case ST_PivotAreaTypeButton:
		_dcbbb.Value = "\u0062\u0075\u0074\u0074\u006f\u006e"
	case ST_PivotAreaTypeTopEnd:
		_dcbbb.Value = "\u0074\u006f\u0070\u0045\u006e\u0064"
	case ST_PivotAreaTypeTopRight:
		_dcbbb.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return _dcbbb, nil
}
func (_cdcgac ST_UnderlineValues) ValidateWithPath(path string) error {
	switch _cdcgac {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdcgac))
	}
	return nil
}
func (_fafagc *CT_PivotField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agcgb := range start.Attr {
		if _agcgb.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072" {
			_caffc, _cdaebg := _e.ParseBool(_agcgb.Value)
			if _cdaebg != nil {
				return _cdaebg
			}
			_fafagc.MeasureFilterAttr = &_caffc
			continue
		}
		if _agcgb.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dfbbcd, _ebdgab := _e.ParseBool(_agcgb.Value)
			if _ebdgab != nil {
				return _ebdgab
			}
			_fafagc.IncludeNewItemsInFilterAttr = &_dfbbcd
			continue
		}
		if _agcgb.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_gdcbb, _gbagdc := _e.ParseBool(_agcgb.Value)
			if _gbagdc != nil {
				return _gbagdc
			}
			_fafagc.CompactAttr = &_gdcbb
			continue
		}
		if _agcgb.Name.Local == "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_edade, _bbdbe := _e.ParseUint(_agcgb.Value, 10, 32)
			if _bbdbe != nil {
				return _bbdbe
			}
			_gabfg := uint32(_edade)
			_fafagc.ItemPageCountAttr = &_gabfg
			continue
		}
		if _agcgb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_ffgb, _eafcb := _e.ParseUint(_agcgb.Value, 10, 32)
			if _eafcb != nil {
				return _eafcb
			}
			_bggfa := uint32(_ffgb)
			_fafagc.NumFmtIdAttr = &_bggfa
			continue
		}
		if _agcgb.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_fafagc.SortTypeAttr.UnmarshalXMLAttr(_agcgb)
			continue
		}
		if _agcgb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_cabcd, _gdcbbc := _e.ParseBool(_agcgb.Value)
			if _gdcbbc != nil {
				return _gdcbbc
			}
			_fafagc.OutlineAttr = &_cabcd
			continue
		}
		if _agcgb.Name.Local == "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074" {
			_ccacc, _agbec := _e.ParseBool(_agcgb.Value)
			if _agbec != nil {
				return _agbec
			}
			_fafagc.DataSourceSortAttr = &_ccacc
			continue
		}
		if _agcgb.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_fcddfe, _aeeda := _e.ParseBool(_agcgb.Value)
			if _aeeda != nil {
				return _aeeda
			}
			_fafagc.DragToRowAttr = &_fcddfe
			continue
		}
		if _agcgb.Name.Local == "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074" {
			_ebfega, _fbbafa := _e.ParseBool(_agcgb.Value)
			if _fbbafa != nil {
				return _fbbafa
			}
			_fafagc.NonAutoSortDefaultAttr = &_ebfega
			continue
		}
		if _agcgb.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_bffca, _ccfec := _e.ParseBool(_agcgb.Value)
			if _ccfec != nil {
				return _ccfec
			}
			_fafagc.MultipleItemSelectionAllowedAttr = &_bffca
			continue
		}
		if _agcgb.Name.Local == "\u0072\u0061\u006e\u006b\u0042\u0079" {
			_cbbee, _ffafgg := _e.ParseUint(_agcgb.Value, 10, 32)
			if _ffafgg != nil {
				return _ffafgg
			}
			_eacdf := uint32(_cbbee)
			_fafagc.RankByAttr = &_eacdf
			continue
		}
		if _agcgb.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_bfgaf, _ccaf := _e.ParseBool(_agcgb.Value)
			if _ccaf != nil {
				return _ccaf
			}
			_fafagc.StdDevSubtotalAttr = &_bfgaf
			continue
		}
		if _agcgb.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_cefcf, _ebfec := _e.ParseBool(_agcgb.Value)
			if _ebfec != nil {
				return _ebfec
			}
			_fafagc.CountASubtotalAttr = &_cefcf
			continue
		}
		if _agcgb.Name.Local == "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_gbbc, _afege := _e.ParseBool(_agcgb.Value)
			if _afege != nil {
				return _afege
			}
			_fafagc.AutoShowAttr = &_gbbc
			continue
		}
		if _agcgb.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_gfcga, _dbecd := _e.ParseBool(_agcgb.Value)
			if _dbecd != nil {
				return _dbecd
			}
			_fafagc.ShowPropAsCaptionAttr = &_gfcga
			continue
		}
		if _agcgb.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cdfdce, _efbgc := _e.ParseBool(_agcgb.Value)
			if _efbgc != nil {
				return _efbgc
			}
			_fafagc.ProductSubtotalAttr = &_cdfdce
			continue
		}
		if _agcgb.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_bdcaf, _cebbd := _e.ParseBool(_agcgb.Value)
			if _cebbd != nil {
				return _cebbd
			}
			_fafagc.DragToPageAttr = &_bdcaf
			continue
		}
		if _agcgb.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_efdgf, _adbed := _e.ParseBool(_agcgb.Value)
			if _adbed != nil {
				return _adbed
			}
			_fafagc.DefaultSubtotalAttr = &_efdgf
			continue
		}
		if _agcgb.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_ddecd, _cfdfd := _e.ParseBool(_agcgb.Value)
			if _cfdfd != nil {
				return _cfdfd
			}
			_fafagc.DragToDataAttr = &_ddecd
			continue
		}
		if _agcgb.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fgbbf, _bbdgaa := _e.ParseBool(_agcgb.Value)
			if _bbdgaa != nil {
				return _bbdgaa
			}
			_fafagc.MaxSubtotalAttr = &_fgbbf
			continue
		}
		if _agcgb.Name.Local == "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073" {
			_eddf, _adedg := _e.ParseBool(_agcgb.Value)
			if _adedg != nil {
				return _adedg
			}
			_fafagc.HideNewItemsAttr = &_eddf
			continue
		}
		if _agcgb.Name.Local == "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c" {
			_agcda, _bbbeee := _e.ParseBool(_agcgb.Value)
			if _bbbeee != nil {
				return _bbbeee
			}
			_fafagc.ShowPropCellAttr = &_agcda
			continue
		}
		if _agcgb.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_fgafd, _debgf := _e.ParseBool(_agcgb.Value)
			if _debgf != nil {
				return _debgf
			}
			_fafagc.SubtotalTopAttr = &_fgafd
			continue
		}
		if _agcgb.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_ggcge, _faceac := _e.ParseBool(_agcgb.Value)
			if _faceac != nil {
				return _faceac
			}
			_fafagc.ServerFieldAttr = &_ggcge
			continue
		}
		if _agcgb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bebb, _bdfge := _agcgb.Value, error(nil)
			if _bdfge != nil {
				return _bdfge
			}
			_fafagc.NameAttr = &_bebb
			continue
		}
		if _agcgb.Name.Local == "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b" {
			_eaeag, _addgd := _e.ParseBool(_agcgb.Value)
			if _addgd != nil {
				return _addgd
			}
			_fafagc.InsertPageBreakAttr = &_eaeag
			continue
		}
		if _agcgb.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_edgef, _gbffg := _e.ParseBool(_agcgb.Value)
			if _gbffg != nil {
				return _gbffg
			}
			_fafagc.SumSubtotalAttr = &_edgef
			continue
		}
		if _agcgb.Name.Local == "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd" {
			_acgde, _afaee := _e.ParseBool(_agcgb.Value)
			if _afaee != nil {
				return _afaee
			}
			_fafagc.DataFieldAttr = &_acgde
			continue
		}
		if _agcgb.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ebgbc, _afdfc := _e.ParseBool(_agcgb.Value)
			if _afdfc != nil {
				return _afdfc
			}
			_fafagc.AvgSubtotalAttr = &_ebgbc
			continue
		}
		if _agcgb.Name.Local == "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_eccdd, _acbf := _e.ParseBool(_agcgb.Value)
			if _acbf != nil {
				return _acbf
			}
			_fafagc.TopAutoShowAttr = &_eccdd
			continue
		}
		if _agcgb.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abged, _ccggb := _e.ParseBool(_agcgb.Value)
			if _ccggb != nil {
				return _ccggb
			}
			_fafagc.MinSubtotalAttr = &_abged
			continue
		}
		if _agcgb.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_ecfdf, _dffbd := _e.ParseBool(_agcgb.Value)
			if _dffbd != nil {
				return _dffbd
			}
			_fafagc.DragOffAttr = &_ecfdf
			continue
		}
		if _agcgb.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_debfb, _cbfada := _e.ParseBool(_agcgb.Value)
			if _cbfada != nil {
				return _cbfada
			}
			_fafagc.CountSubtotalAttr = &_debfb
			continue
		}
		if _agcgb.Name.Local == "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079" {
			_edbcf, _eabbae := _agcgb.Value, error(nil)
			if _eabbae != nil {
				return _eabbae
			}
			_fafagc.UniqueMemberPropertyAttr = &_edbcf
			continue
		}
		if _agcgb.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ebdcd, _baeac := _e.ParseBool(_agcgb.Value)
			if _baeac != nil {
				return _baeac
			}
			_fafagc.VarPSubtotalAttr = &_ebdcd
			continue
		}
		if _agcgb.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ggcfd, _gbccg := _e.ParseBool(_agcgb.Value)
			if _gbccg != nil {
				return _gbccg
			}
			_fafagc.StdDevPSubtotalAttr = &_ggcfd
			continue
		}
		if _agcgb.Name.Local == "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bbeae, _bgfb := _agcgb.Value, error(nil)
			if _bgfb != nil {
				return _bgfb
			}
			_fafagc.SubtotalCaptionAttr = &_bbeae
			continue
		}
		if _agcgb.Name.Local == "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070" {
			_cgaag, _daabb := _e.ParseBool(_agcgb.Value)
			if _daabb != nil {
				return _daabb
			}
			_fafagc.ShowPropTipAttr = &_cgaag
			continue
		}
		if _agcgb.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077" {
			_aedga, _bfade := _e.ParseBool(_agcgb.Value)
			if _bfade != nil {
				return _bfade
			}
			_fafagc.InsertBlankRowAttr = &_aedga
			continue
		}
		if _agcgb.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065" {
			_geaga, _ebcead := _e.ParseBool(_agcgb.Value)
			if _ebcead != nil {
				return _ebcead
			}
			_fafagc.DefaultAttributeDrillStateAttr = &_geaga
			continue
		}
		if _agcgb.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_fbffga, _ageega := _e.ParseBool(_agcgb.Value)
			if _ageega != nil {
				return _ageega
			}
			_fafagc.DragToColAttr = &_fbffga
			continue
		}
		if _agcgb.Name.Local == "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c" {
			_acceg, _cfgee := _e.ParseBool(_agcgb.Value)
			if _cfgee != nil {
				return _cfgee
			}
			_fafagc.HiddenLevelAttr = &_acceg
			continue
		}
		if _agcgb.Name.Local == "\u0061\u0078\u0069\u0073" {
			_fafagc.AxisAttr.UnmarshalXMLAttr(_agcgb)
			continue
		}
		if _agcgb.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073" {
			_afdaa, _cfeaca := _e.ParseBool(_agcgb.Value)
			if _cfeaca != nil {
				return _cfeaca
			}
			_fafagc.ShowDropDownsAttr = &_afdaa
			continue
		}
		if _agcgb.Name.Local == "\u0073h\u006f\u0077\u0041\u006c\u006c" {
			_cabef, _bdegc := _e.ParseBool(_agcgb.Value)
			if _bdegc != nil {
				return _bdegc
			}
			_fafagc.ShowAllAttr = &_cabef
			continue
		}
		if _agcgb.Name.Local == "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064" {
			_fdaea, _deaef := _e.ParseBool(_agcgb.Value)
			if _deaef != nil {
				return _deaef
			}
			_fafagc.AllDrilledAttr = &_fdaea
			continue
		}
		if _agcgb.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bfefc, _fegfd := _e.ParseBool(_agcgb.Value)
			if _fegfd != nil {
				return _fegfd
			}
			_fafagc.VarSubtotalAttr = &_bfefc
			continue
		}
	}
_fedcf:
	for {
		_cacbf, _beaceg := d.Token()
		if _beaceg != nil {
			return _beaceg
		}
		switch _ecdbg := _cacbf.(type) {
		case _b.StartElement:
			switch _ecdbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}:
				_fafagc.Items = NewCT_Items()
				if _ffgae := d.DecodeElement(_fafagc.Items, &_ecdbg); _ffgae != nil {
					return _ffgae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}:
				_fafagc.AutoSortScope = NewCT_AutoSortScope()
				if _cbfc := d.DecodeElement(_fafagc.AutoSortScope, &_ecdbg); _cbfc != nil {
					return _cbfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fafagc.ExtLst = NewCT_ExtensionList()
				if _aegag := d.DecodeElement(_fafagc.ExtLst, &_ecdbg); _aegag != nil {
					return _aegag
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _ecdbg.Name)
				if _fccca := d.Skip(); _fccca != nil {
					return _fccca
				}
			}
		case _b.EndElement:
			break _fedcf
		case _b.CharData:
		}
	}
	return nil
}
func (_gdcdbg *ST_TargetScreenSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gdcdbg = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_gdcdbg = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_gdcdbg = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_gdcdbg = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_gdcdbg = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_gdcdbg = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_gdcdbg = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_gdcdbg = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_gdcdbg = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_gdcdbg = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
		*_gdcdbg = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_gdcdbg = 11
	}
	return nil
}
func (_ggfegf ST_Qualifier) ValidateWithPath(path string) error {
	switch _ggfegf {
	case 0, 1, 2, 3:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggfegf))
	}
	return nil
}

type CT_Sst struct {

	// String Count
	CountAttr *uint32

	// Unique String Count
	UniqueCountAttr *uint32

	// String Item
	Si     []*CT_Rst
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_FontFamily and its children, prefixing error messages with path
func (_dcbgc *CT_FontFamily) ValidateWithPath(path string) error {
	if _dcbgc.ValAttr < 0 {
		return _f.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dcbgc.ValAttr)
	}
	if _dcbgc.ValAttr > 14 {
		return _f.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003c\u003d\u0020\u00314 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dcbgc.ValAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_gaga *CT_Font) ValidateWithPath(path string) error {
	for _aafgca, _cfefa := range _gaga.Name {
		if _egfca := _cfefa.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _aafgca)); _egfca != nil {
			return _egfca
		}
	}
	for _cgba, _bagf := range _gaga.Charset {
		if _dcggg := _bagf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043\u0068\u0061\u0072\u0073\u0065t\u005b\u0025\u0064\u005d", path, _cgba)); _dcggg != nil {
			return _dcggg
		}
	}
	for _ebgb, _fdfcc := range _gaga.Family {
		if _dcabe := _fdfcc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0046\u0061\u006d\u0069\u006c\u0079\u005b\u0025\u0064\u005d", path, _ebgb)); _dcabe != nil {
			return _dcabe
		}
	}
	for _fdcbga, _fefcg := range _gaga.B {
		if _afeaf := _fefcg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _fdcbga)); _afeaf != nil {
			return _afeaf
		}
	}
	for _fcbgb, _bbgda := range _gaga.I {
		if _agdfa := _bbgda.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _fcbgb)); _agdfa != nil {
			return _agdfa
		}
	}
	for _cgecb, _fgfe := range _gaga.Strike {
		if _cdfa := _fgfe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u005b\u0025\u0064\u005d", path, _cgecb)); _cdfa != nil {
			return _cdfa
		}
	}
	for _gfeac, _ggcc := range _gaga.Outline {
		if _adeaf := _ggcc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004f\u0075\u0074\u006c\u0069\u006ee\u005b\u0025\u0064\u005d", path, _gfeac)); _adeaf != nil {
			return _adeaf
		}
	}
	for _daegcg, _bccd := range _gaga.Shadow {
		if _degf := _bccd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0061\u0064\u006f\u0077\u005b\u0025\u0064\u005d", path, _daegcg)); _degf != nil {
			return _degf
		}
	}
	for _aacde, _acaac := range _gaga.Condense {
		if _afcbf := _acaac.ValidateWithPath(_f.Sprintf("\u0025s\u002fC\u006f\u006e\u0064\u0065\u006e\u0073\u0065\u005b\u0025\u0064\u005d", path, _aacde)); _afcbf != nil {
			return _afcbf
		}
	}
	for _cfgfc, _gcgg := range _gaga.Extend {
		if _ebaba := _gcgg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u0065\u006e\u0064\u005b\u0025\u0064\u005d", path, _cfgfc)); _ebaba != nil {
			return _ebaba
		}
	}
	for _bagdg, _acgd := range _gaga.Color {
		if _dccgf := _acgd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _bagdg)); _dccgf != nil {
			return _dccgf
		}
	}
	for _aeccf, _dbee := range _gaga.Sz {
		if _gageg := _dbee.ValidateWithPath(_f.Sprintf("\u0025s\u002f\u0053\u007a\u005b\u0025\u0064]", path, _aeccf)); _gageg != nil {
			return _gageg
		}
	}
	for _fdceb, _gagbd := range _gaga.U {
		if _dagfcd := _gagbd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0055\u005b\u0025\u0064\u005d", path, _fdceb)); _dagfcd != nil {
			return _dagfcd
		}
	}
	for _dbaca, _ffegca := range _gaga.VertAlign {
		if _fbee := _ffegca.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u0056\u0065\u0072t\u0041\u006c\u0069\u0067\u006e\u005b\u0025\u0064\u005d", path, _dbaca)); _fbee != nil {
			return _fbee
		}
	}
	for _debf, _bfdcg := range _gaga.Scheme {
		if _ebbdc := _bfdcg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u005b\u0025\u0064\u005d", path, _debf)); _ebbdc != nil {
			return _ebbdc
		}
	}
	return nil
}
func (_faada ST_HtmlFmt) Validate() error { return _faada.ValidateWithPath("") }
func (_dcgce ST_DataValidationImeMode) ValidateWithPath(path string) error {
	switch _dcgce {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _f.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcgce))
	}
	return nil
}
func NewCT_RevisionInsertSheet() *CT_RevisionInsertSheet {
	_efedg := &CT_RevisionInsertSheet{}
	return _efedg
}

const (
	ST_UnderlineValuesUnset            ST_UnderlineValues = 0
	ST_UnderlineValuesSingle           ST_UnderlineValues = 1
	ST_UnderlineValuesDouble           ST_UnderlineValues = 2
	ST_UnderlineValuesSingleAccounting ST_UnderlineValues = 3
	ST_UnderlineValuesDoubleAccounting ST_UnderlineValues = 4
	ST_UnderlineValuesNone             ST_UnderlineValues = 5
)

func (_cddfd *CT_CalcPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bggb := range start.Attr {
		if _bggb.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061" {
			_gbg, _dcab := _e.ParseFloat(_bggb.Value, 64)
			if _dcab != nil {
				return _dcab
			}
			_cddfd.IterateDeltaAttr = &_gbg
			continue
		}
		if _bggb.Name.Local == "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065" {
			_cddfd.CalcModeAttr.UnmarshalXMLAttr(_bggb)
			continue
		}
		if _bggb.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_bdf, _geef := _e.ParseBool(_bggb.Value)
			if _geef != nil {
				return _geef
			}
			_cddfd.FullCalcOnLoadAttr = &_bdf
			continue
		}
		if _bggb.Name.Local == "\u0072e\u0066\u004d\u006f\u0064\u0065" {
			_cddfd.RefModeAttr.UnmarshalXMLAttr(_bggb)
			continue
		}
		if _bggb.Name.Local == "\u0069t\u0065\u0072\u0061\u0074\u0065" {
			_dcc, _eag := _e.ParseBool(_bggb.Value)
			if _eag != nil {
				return _eag
			}
			_cddfd.IterateAttr = &_dcc
			continue
		}
		if _bggb.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074" {
			_abgd, _cddd := _e.ParseUint(_bggb.Value, 10, 32)
			if _cddd != nil {
				return _cddd
			}
			_bdef := uint32(_abgd)
			_cddfd.IterateCountAttr = &_bdef
			continue
		}
		if _bggb.Name.Local == "\u0063\u0061\u006c\u0063\u0049\u0064" {
			_dcgf, _cgcf := _e.ParseUint(_bggb.Value, 10, 32)
			if _cgcf != nil {
				return _cgcf
			}
			_cdec := uint32(_dcgf)
			_cddfd.CalcIdAttr = &_cdec
			continue
		}
		if _bggb.Name.Local == "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e" {
			_ecce, _acdb := _e.ParseBool(_bggb.Value)
			if _acdb != nil {
				return _acdb
			}
			_cddfd.FullPrecisionAttr = &_ecce
			continue
		}
		if _bggb.Name.Local == "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064" {
			_deab, _afeb := _e.ParseBool(_bggb.Value)
			if _afeb != nil {
				return _afeb
			}
			_cddfd.CalcCompletedAttr = &_deab
			continue
		}
		if _bggb.Name.Local == "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065" {
			_gbda, _acg := _e.ParseBool(_bggb.Value)
			if _acg != nil {
				return _acg
			}
			_cddfd.CalcOnSaveAttr = &_gbda
			continue
		}
		if _bggb.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063" {
			_gada, _ebcd := _e.ParseBool(_bggb.Value)
			if _ebcd != nil {
				return _ebcd
			}
			_cddfd.ConcurrentCalcAttr = &_gada
			continue
		}
		if _bggb.Name.Local == "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074" {
			_gdf, _dfdf := _e.ParseUint(_bggb.Value, 10, 32)
			if _dfdf != nil {
				return _dfdf
			}
			_bbcc := uint32(_gdf)
			_cddfd.ConcurrentManualCountAttr = &_bbcc
			continue
		}
		if _bggb.Name.Local == "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063" {
			_eadea, _dced := _e.ParseBool(_bggb.Value)
			if _dced != nil {
				return _dced
			}
			_cddfd.ForceFullCalcAttr = &_eadea
			continue
		}
	}
	for {
		_bgaf, _aacf := d.Token()
		if _aacf != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006cc\u0050\u0072\u003a\u0020\u0025\u0073", _aacf)
		}
		if _acgg, _fbfa := _bgaf.(_b.EndElement); _fbfa && _acgg.Name == start.Name {
			break
		}
	}
	return nil
}

type PivotTableDefinition struct{ CT_pivotTableDefinition }

// ValidateWithPath validates the CT_Tables and its children, prefixing error messages with path
func (_cgdbf *CT_Tables) ValidateWithPath(path string) error {
	for _eadgb, _cefaa := range _cgdbf.M {
		if _dabef := _cefaa.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _eadgb)); _dabef != nil {
			return _dabef
		}
	}
	for _cddgb, _bbdcb := range _cgdbf.S {
		if _gbbab := _bbdcb.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _cddgb)); _gbbab != nil {
			return _gbbab
		}
	}
	for _dfaf, _ebdab := range _cgdbf.X {
		if _gcaae := _ebdab.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _dfaf)); _gcaae != nil {
			return _gcaae
		}
	}
	return nil
}
func (_dfebe ST_TimePeriod) Validate() error { return _dfebe.ValidateWithPath("") }
func (_ccead *CT_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ccead.Ext != nil {
		_bgadf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _fabed := range _ccead.Ext {
			e.EncodeElement(_fabed, _bgadf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbfef *CT_TableStyleElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbfef.TypeAttr = ST_TableStyleType(1)
	for _, _gcbdc := range start.Attr {
		if _gcbdc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bbfef.TypeAttr.UnmarshalXMLAttr(_gcbdc)
			continue
		}
		if _gcbdc.Name.Local == "\u0073\u0069\u007a\u0065" {
			_gaabd, _ccbdc := _e.ParseUint(_gcbdc.Value, 10, 32)
			if _ccbdc != nil {
				return _ccbdc
			}
			_fdfbg := uint32(_gaabd)
			_bbfef.SizeAttr = &_fdfbg
			continue
		}
		if _gcbdc.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_gefef, _acabd := _e.ParseUint(_gcbdc.Value, 10, 32)
			if _acabd != nil {
				return _acabd
			}
			_gcfab := uint32(_gefef)
			_bbfef.DxfIdAttr = &_gcfab
			continue
		}
	}
	for {
		_bfbbd, _ffdabg := d.Token()
		if _ffdabg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006ce\u0053t\u0079\u006c\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _ffdabg)
		}
		if _fggcag, _dbabc := _bfbbd.(_b.EndElement); _dbabc && _fggcag.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_VolTopic struct {

	// Type
	TAttr ST_VolValueType

	// Topic Value
	V string

	// Strings in Subtopic
	Stp []string

	// References
	Tr []*CT_VolTopicRef
}

// ValidateWithPath validates the CT_PCDSDTCEntries and its children, prefixing error messages with path
func (_cccfd *CT_PCDSDTCEntries) ValidateWithPath(path string) error {
	for _cbade, _gdbbaf := range _cccfd.M {
		if _ddbfg := _gdbbaf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _cbade)); _ddbfg != nil {
			return _ddbfg
		}
	}
	for _eadad, _gfadcc := range _cccfd.N {
		if _egcaa := _gfadcc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _eadad)); _egcaa != nil {
			return _egcaa
		}
	}
	for _dafgb, _cfdbf := range _cccfd.E {
		if _geea := _cfdbf.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _dafgb)); _geea != nil {
			return _geea
		}
	}
	for _dfbge, _ggbfc := range _cccfd.S {
		if _cdcbc := _ggbfc.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _dfbge)); _cdcbc != nil {
			return _cdcbc
		}
	}
	return nil
}

type CT_Extension struct {

	// URI
	UriAttr *string
	Any     _d.Any
}

func NewCT_Items() *CT_Items { _gecf := &CT_Items{}; return _gecf }
func (_gbacd *CT_PivotAreas) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cebee := range start.Attr {
		if _cebee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggddd, _aafgef := _e.ParseUint(_cebee.Value, 10, 32)
			if _aafgef != nil {
				return _aafgef
			}
			_cgaa := uint32(_ggddd)
			_gbacd.CountAttr = &_cgaa
			continue
		}
	}
_ccfebe:
	for {
		_badcd, _ageeb := d.Token()
		if _ageeb != nil {
			return _ageeb
		}
		switch _bcbeg := _badcd.(type) {
		case _b.StartElement:
			switch _bcbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				_bcfab := NewCT_PivotArea()
				if _gbcbf := d.DecodeElement(_bcfab, &_bcbeg); _gbcbf != nil {
					return _gbcbf
				}
				_gbacd.PivotArea = append(_gbacd.PivotArea, _bcfab)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073 \u0025\u0076", _bcbeg.Name)
				if _bffc := d.Skip(); _bffc != nil {
					return _bffc
				}
			}
		case _b.EndElement:
			break _ccfebe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SortCondition and its children, prefixing error messages with path
func (_adbcf *CT_SortCondition) ValidateWithPath(path string) error {
	if _fgegc := _adbcf.SortByAttr.ValidateWithPath(path + "/\u0053\u006f\u0072\u0074\u0042\u0079\u0041\u0074\u0074\u0072"); _fgegc != nil {
		return _fgegc
	}
	if _gafga := _adbcf.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _gafga != nil {
		return _gafga
	}
	return nil
}

type CT_PivotDimension struct {

	// Measure
	MeasureAttr *bool

	// Dimension Name
	NameAttr string

	// Dimension Unique Name
	UniqueNameAttr string

	// Dimension Display Name
	CaptionAttr string
}
type CT_MetadataRecord struct {

	// Metadata Record Type Index
	TAttr uint32

	// Metadata Record Value Index
	VAttr uint32
}
type ST_Objects byte

// Validate validates the CT_PivotAreaReference and its children
func (_gceabg *CT_PivotAreaReference) Validate() error {
	return _gceabg.ValidateWithPath("C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065")
}
func NewCT_UnderlineProperty() *CT_UnderlineProperty {
	_dagge := &CT_UnderlineProperty{}
	return _dagge
}
func (_dfdd *CT_DefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _befac := range start.Attr {
		if _befac.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cafg, _dfca := _e.ParseBool(_befac.Value)
			if _dfca != nil {
				return _dfca
			}
			_dfdd.HiddenAttr = &_cafg
			continue
		}
		if _befac.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_gbgc, _addb := _e.ParseBool(_befac.Value)
			if _addb != nil {
				return _addb
			}
			_dfdd.FunctionAttr = &_gbgc
			continue
		}
		if _befac.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bgdb, _fggca := _befac.Value, error(nil)
			if _fggca != nil {
				return _fggca
			}
			_dfdd.CommentAttr = &_bgdb
			continue
		}
		if _befac.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_bbafc, _fggdf := _befac.Value, error(nil)
			if _fggdf != nil {
				return _fggdf
			}
			_dfdd.DescriptionAttr = &_bbafc
			continue
		}
		if _befac.Name.Local == "\u0068\u0065\u006c\u0070" {
			_gccf, _afbed := _befac.Value, error(nil)
			if _afbed != nil {
				return _afbed
			}
			_dfdd.HelpAttr = &_gccf
			continue
		}
		if _befac.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_dfaad, _cagcac := _befac.Value, error(nil)
			if _cagcac != nil {
				return _cagcac
			}
			_dfdd.StatusBarAttr = &_dfaad
			continue
		}
		if _befac.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_aacga, _cdcga := _e.ParseUint(_befac.Value, 10, 32)
			if _cdcga != nil {
				return _cdcga
			}
			_dceg := uint32(_aacga)
			_dfdd.LocalSheetIdAttr = &_dceg
			continue
		}
		if _befac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edfgf, _caaa := _befac.Value, error(nil)
			if _caaa != nil {
				return _caaa
			}
			_dfdd.NameAttr = _edfgf
			continue
		}
		if _befac.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_gegdd, _dbfd := _befac.Value, error(nil)
			if _dbfd != nil {
				return _dbfd
			}
			_dfdd.CustomMenuAttr = &_gegdd
			continue
		}
		if _befac.Name.Local == "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065" {
			_gcee, _cddg := _e.ParseBool(_befac.Value)
			if _cddg != nil {
				return _cddg
			}
			_dfdd.VbProcedureAttr = &_gcee
			continue
		}
		if _befac.Name.Local == "\u0078\u006c\u006d" {
			_aaag, _gecgg := _e.ParseBool(_befac.Value)
			if _gecgg != nil {
				return _gecgg
			}
			_dfdd.XlmAttr = &_aaag
			continue
		}
		if _befac.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_ccdad, _bcbgf := _e.ParseUint(_befac.Value, 10, 32)
			if _bcbgf != nil {
				return _bcbgf
			}
			_gaaaf := uint32(_ccdad)
			_dfdd.FunctionGroupIdAttr = &_gaaaf
			continue
		}
		if _befac.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_begd, _fffcc := _befac.Value, error(nil)
			if _fffcc != nil {
				return _fffcc
			}
			_dfdd.ShortcutKeyAttr = &_begd
			continue
		}
		if _befac.Name.Local == "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072" {
			_edbe, _abfdg := _e.ParseBool(_befac.Value)
			if _abfdg != nil {
				return _abfdg
			}
			_dfdd.PublishToServerAttr = &_edbe
			continue
		}
		if _befac.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072" {
			_cdaa, _ageffa := _e.ParseBool(_befac.Value)
			if _ageffa != nil {
				return _ageffa
			}
			_dfdd.WorkbookParameterAttr = &_cdaa
			continue
		}
	}
	for {
		_adgdb, _bdeb := d.Token()
		if _bdeb != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065:\u0020\u0025\u0073", _bdeb)
		}
		if _eecc, _aegce := _adgdb.(_b.CharData); _aegce {
			_dfdd.Content = string(_eecc)
		}
		if _eddc, _feabag := _adgdb.(_b.EndElement); _feabag && _eddc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gddgcg *CT_ServerFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbdaa := range start.Attr {
		if _gbdaa.Name.Local == "\u0063u\u006c\u0074\u0075\u0072\u0065" {
			_cdebg, _cdfge := _gbdaa.Value, error(nil)
			if _cdfge != nil {
				return _cdfge
			}
			_gddgcg.CultureAttr = &_cdebg
			continue
		}
		if _gbdaa.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_egcgg, _bgcgc := _gbdaa.Value, error(nil)
			if _bgcgc != nil {
				return _bgcgc
			}
			_gddgcg.FormatAttr = &_egcgg
			continue
		}
	}
	for {
		_dgbef, _dbfcb := d.Token()
		if _dbfcb != nil {
			return _f.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072F\u006f\u0072\u006da\u0074:\u0020\u0025\u0073", _dbfcb)
		}
		if _bfaca, _abfeg := _dgbef.(_b.EndElement); _abfeg && _bfaca.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CustomWorkbookView() *CT_CustomWorkbookView {
	_cfcg := &CT_CustomWorkbookView{}
	_cfcg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _cfcg
}
func (_bffg *CT_CellStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adceb := range start.Attr {
		if _adceb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aeda, _gag := _adceb.Value, error(nil)
			if _gag != nil {
				return _gag
			}
			_bffg.NameAttr = &_aeda
			continue
		}
		if _adceb.Name.Local == "\u0078\u0066\u0049\u0064" {
			_efeg, _bdc := _e.ParseUint(_adceb.Value, 10, 32)
			if _bdc != nil {
				return _bdc
			}
			_bffg.XfIdAttr = uint32(_efeg)
			continue
		}
		if _adceb.Name.Local == "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d" {
			_debcg, _agb := _e.ParseUint(_adceb.Value, 10, 32)
			if _agb != nil {
				return _agb
			}
			_babf := uint32(_debcg)
			_bffg.BuiltinIdAttr = &_babf
			continue
		}
		if _adceb.Name.Local == "\u0069\u004c\u0065\u0076\u0065\u006c" {
			_cdbc, _edf := _e.ParseUint(_adceb.Value, 10, 32)
			if _edf != nil {
				return _edf
			}
			_gcgb := uint32(_cdbc)
			_bffg.ILevelAttr = &_gcgb
			continue
		}
		if _adceb.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cgff, _egfcc := _e.ParseBool(_adceb.Value)
			if _egfcc != nil {
				return _egfcc
			}
			_bffg.HiddenAttr = &_cgff
			continue
		}
		if _adceb.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e" {
			_fede, _bcfa := _e.ParseBool(_adceb.Value)
			if _bcfa != nil {
				return _bcfa
			}
			_bffg.CustomBuiltinAttr = &_fede
			continue
		}
	}
_aefaf:
	for {
		_babd, _gbdbd := d.Token()
		if _gbdbd != nil {
			return _gbdbd
		}
		switch _bbfc := _babd.(type) {
		case _b.StartElement:
			switch _bbfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bffg.ExtLst = NewCT_ExtensionList()
				if _ada := d.DecodeElement(_bffg.ExtLst, &_bbfc); _ada != nil {
					return _ada
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _bbfc.Name)
				if _gceb := d.Skip(); _gceb != nil {
					return _gceb
				}
			}
		case _b.EndElement:
			break _aefaf
		case _b.CharData:
		}
	}
	return nil
}
func (_bcedc *CT_PivotSelection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcedc.PivotArea = NewCT_PivotArea()
	for _, _fabee := range start.Attr {
		if _fabee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fabee.Name.Local == "\u0069\u0064" || _fabee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fabee.Name.Local == "\u0069\u0064" {
			_bdgfg, _accfe := _fabee.Value, error(nil)
			if _accfe != nil {
				return _accfe
			}
			_bcedc.IdAttr = &_bdgfg
			continue
		}
		if _fabee.Name.Local == "\u006d\u0069\u006e" {
			_ggag, _eggbb := _e.ParseUint(_fabee.Value, 10, 32)
			if _eggbb != nil {
				return _eggbb
			}
			_dadec := uint32(_ggag)
			_bcedc.MinAttr = &_dadec
			continue
		}
		if _fabee.Name.Local == "\u006d\u0061\u0078" {
			_eeacc, _bgeaf := _e.ParseUint(_fabee.Value, 10, 32)
			if _bgeaf != nil {
				return _bgeaf
			}
			_bdddd := uint32(_eeacc)
			_bcedc.MaxAttr = &_bdddd
			continue
		}
		if _fabee.Name.Local == "\u006c\u0061\u0062e\u006c" {
			_afecg, _geeea := _e.ParseBool(_fabee.Value)
			if _geeea != nil {
				return _geeea
			}
			_bcedc.LabelAttr = &_afecg
			continue
		}
		if _fabee.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw" {
			_gcbgd, _dfbcd := _e.ParseUint(_fabee.Value, 10, 32)
			if _dfbcd != nil {
				return _dfbcd
			}
			_dgcfg := uint32(_gcbgd)
			_bcedc.ActiveRowAttr = &_dgcfg
			continue
		}
		if _fabee.Name.Local == "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065" {
			_abgga, _dgbcde := _e.ParseBool(_fabee.Value)
			if _dgbcde != nil {
				return _dgbcde
			}
			_bcedc.ExtendableAttr = &_abgga
			continue
		}
		if _fabee.Name.Local == "\u0061\u0078\u0069\u0073" {
			_bcedc.AxisAttr.UnmarshalXMLAttr(_fabee)
			continue
		}
		if _fabee.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_aaadg, _adbgec := _e.ParseUint(_fabee.Value, 10, 32)
			if _adbgec != nil {
				return _adbgec
			}
			_abdgg := uint32(_aaadg)
			_bcedc.DimensionAttr = &_abdgg
			continue
		}
		if _fabee.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_beeae, _fedca := _e.ParseUint(_fabee.Value, 10, 32)
			if _fedca != nil {
				return _fedca
			}
			_dgfcg := uint32(_beeae)
			_bcedc.StartAttr = &_dgfcg
			continue
		}
		if _fabee.Name.Local == "\u0070\u0061\u006e\u0065" {
			_bcedc.PaneAttr.UnmarshalXMLAttr(_fabee)
			continue
		}
		if _fabee.Name.Local == "\u0064\u0061\u0074\u0061" {
			_ceedg, _afafd := _e.ParseBool(_fabee.Value)
			if _afafd != nil {
				return _afafd
			}
			_bcedc.DataAttr = &_ceedg
			continue
		}
		if _fabee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgcbfg, _abbae := _e.ParseUint(_fabee.Value, 10, 32)
			if _abbae != nil {
				return _abbae
			}
			_cacfg := uint32(_fgcbfg)
			_bcedc.CountAttr = &_cacfg
			continue
		}
		if _fabee.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl" {
			_debdeb, _gbedea := _e.ParseUint(_fabee.Value, 10, 32)
			if _gbedea != nil {
				return _gbedea
			}
			_aadcb := uint32(_debdeb)
			_bcedc.ActiveColAttr = &_aadcb
			continue
		}
		if _fabee.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077" {
			_dceeg, _cfdfdd := _e.ParseUint(_fabee.Value, 10, 32)
			if _cfdfdd != nil {
				return _cfdfdd
			}
			_dbbef := uint32(_dceeg)
			_bcedc.PreviousRowAttr = &_dbbef
			continue
		}
		if _fabee.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c" {
			_fgcec, _ebgfeb := _e.ParseUint(_fabee.Value, 10, 32)
			if _ebgfeb != nil {
				return _ebgfeb
			}
			_bceacc := uint32(_fgcec)
			_bcedc.PreviousColAttr = &_bceacc
			continue
		}
		if _fabee.Name.Local == "\u0063\u006c\u0069c\u006b" {
			_bgbae, _fefdcg := _e.ParseUint(_fabee.Value, 10, 32)
			if _fefdcg != nil {
				return _fefdcg
			}
			_ddfece := uint32(_bgbae)
			_bcedc.ClickAttr = &_ddfece
			continue
		}
		if _fabee.Name.Local == "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072" {
			_aagad, _deecg := _e.ParseBool(_fabee.Value)
			if _deecg != nil {
				return _deecg
			}
			_bcedc.ShowHeaderAttr = &_aagad
			continue
		}
	}
_eeegcb:
	for {
		_gagccc, _acfbc := d.Token()
		if _acfbc != nil {
			return _acfbc
		}
		switch _eedgg := _gagccc.(type) {
		case _b.StartElement:
			switch _eedgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _aaeff := d.DecodeElement(_bcedc.PivotArea, &_eedgg); _aaeff != nil {
					return _aaeff
				}
			default:
				_d.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _eedgg.Name)
				if _baccc := d.Skip(); _baccc != nil {
					return _baccc
				}
			}
		case _b.EndElement:
			break _eeegcb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Cols() *CT_Cols { _bafb := &CT_Cols{}; return _bafb }

// ValidateWithPath validates the CT_WorkbookProtection and its children, prefixing error messages with path
func (_ebefa *CT_WorkbookProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_NumFmts and its children, prefixing error messages with path
func (_bdded *CT_NumFmts) ValidateWithPath(path string) error {
	for _adcb, _dgdfe := range _bdded.NumFmt {
		if _eaggd := _dgdfe.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u005b\u0025\u0064\u005d", path, _adcb)); _eaggd != nil {
			return _eaggd
		}
	}
	return nil
}
func (_bccafe ST_UpdateLinks) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fedeg := _b.Attr{}
	_fedeg.Name = name
	switch _bccafe {
	case ST_UpdateLinksUnset:
		_fedeg.Value = ""
	case ST_UpdateLinksUserSet:
		_fedeg.Value = "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case ST_UpdateLinksNever:
		_fedeg.Value = "\u006e\u0065\u0076e\u0072"
	case ST_UpdateLinksAlways:
		_fedeg.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _fedeg, nil
}

// ValidateWithPath validates the CT_DataValidation and its children, prefixing error messages with path
func (_acab *CT_DataValidation) ValidateWithPath(path string) error {
	if _aaebd := _acab.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _aaebd != nil {
		return _aaebd
	}
	if _fdbeb := _acab.ErrorStyleAttr.ValidateWithPath(path + "\u002fE\u0072r\u006f\u0072\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _fdbeb != nil {
		return _fdbeb
	}
	if _addc := _acab.ImeModeAttr.ValidateWithPath(path + "\u002f\u0049\u006de\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _addc != nil {
		return _addc
	}
	if _cfege := _acab.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _cfege != nil {
		return _cfege
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilters and its children, prefixing error messages with path
func (_cdfb *CT_CustomFilters) ValidateWithPath(path string) error {
	for _aeefg, _ageg := range _cdfb.CustomFilter {
		if _egeed := _ageg.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _aeefg)); _egeed != nil {
			return _egeed
		}
	}
	return nil
}
func NewCT_MdxMetadata() *CT_MdxMetadata { _cdggb := &CT_MdxMetadata{}; return _cdggb }

type CT_PCDKPI struct {

	// KPI Unique Name
	UniqueNameAttr string

	// KPI Display Name
	CaptionAttr *string

	// KPI Display Folder
	DisplayFolderAttr *string

	// KPI Measure Group Name
	MeasureGroupAttr *string

	// Parent KPI
	ParentAttr *string

	// KPI Value Unique Name
	ValueAttr string

	// KPI Goal Unique Name
	GoalAttr *string

	// KPI Status Unique Name
	StatusAttr *string

	// KPI Trend Unique Name
	TrendAttr *string

	// KPI Weight Unique Name
	WeightAttr *string

	// Time Member KPI Unique Name
	TimeAttr *string
}

// Validate validates the CT_PageField and its children
func (_geaeg *CT_PageField) Validate() error {
	return _geaeg.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064")
}

// Validate validates the CT_Sheets and its children
func (_dbdac *CT_Sheets) Validate() error {
	return _dbdac.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s")
}

type CT_DataFields struct {

	// Data Items Count
	CountAttr *uint32

	// Data Field Item
	DataField []*CT_DataField
}

func (_eacae *Metadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"
	return _eacae.CT_Metadata.MarshalXML(e, start)
}
func (_cfbff *Chartsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfbff.CT_Chartsheet = *NewCT_Chartsheet()
_egcge:
	for {
		_agdga, _acbdc := d.Token()
		if _acbdc != nil {
			return _acbdc
		}
		switch _dffaa := _agdga.(type) {
		case _b.StartElement:
			switch _dffaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_cfbff.SheetPr = NewCT_ChartsheetPr()
				if _gaefb := d.DecodeElement(_cfbff.SheetPr, &_dffaa); _gaefb != nil {
					return _gaefb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _eagaeg := d.DecodeElement(_cfbff.SheetViews, &_dffaa); _eagaeg != nil {
					return _eagaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cfbff.SheetProtection = NewCT_ChartsheetProtection()
				if _eecae := d.DecodeElement(_cfbff.SheetProtection, &_dffaa); _eecae != nil {
					return _eecae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cfbff.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _bbfcb := d.DecodeElement(_cfbff.CustomSheetViews, &_dffaa); _bbfcb != nil {
					return _bbfcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_cfbff.PageMargins = NewCT_PageMargins()
				if _gbabgf := d.DecodeElement(_cfbff.PageMargins, &_dffaa); _gbabgf != nil {
					return _gbabgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_cfbff.PageSetup = NewCT_CsPageSetup()
				if _gagee := d.DecodeElement(_cfbff.PageSetup, &_dffaa); _gagee != nil {
					return _gagee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_cfbff.HeaderFooter = NewCT_HeaderFooter()
				if _dbefc := d.DecodeElement(_cfbff.HeaderFooter, &_dffaa); _dbefc != nil {
					return _dbefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _gffgg := d.DecodeElement(_cfbff.Drawing, &_dffaa); _gffgg != nil {
					return _gffgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_cfbff.LegacyDrawing = NewCT_LegacyDrawing()
				if _ffada := d.DecodeElement(_cfbff.LegacyDrawing, &_dffaa); _ffada != nil {
					return _ffada
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_cfbff.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _dfafd := d.DecodeElement(_cfbff.LegacyDrawingHF, &_dffaa); _dfafd != nil {
					return _dfafd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_cfbff.DrawingHF = NewCT_DrawingHF()
				if _gaabg := d.DecodeElement(_cfbff.DrawingHF, &_dffaa); _gaabg != nil {
					return _gaabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_cfbff.Picture = NewCT_SheetBackgroundPicture()
				if _fcffa := d.DecodeElement(_cfbff.Picture, &_dffaa); _fcffa != nil {
					return _fcffa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_cfbff.WebPublishItems = NewCT_WebPublishItems()
				if _ggede := d.DecodeElement(_cfbff.WebPublishItems, &_dffaa); _ggede != nil {
					return _ggede
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfbff.ExtLst = NewCT_ExtensionList()
				if _bbcga := d.DecodeElement(_cfbff.ExtLst, &_dffaa); _bbcga != nil {
					return _bbcga
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _dffaa.Name)
				if _dgbcgg := d.Skip(); _dgbcgg != nil {
					return _dgbcgg
				}
			}
		case _b.EndElement:
			break _egcge
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SmartTagTypes() *CT_SmartTagTypes { _dfbee := &CT_SmartTagTypes{}; return _dfbee }
func (_cbfbe *CT_ExternalSheetNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_badfb:
	for {
		_cega, _fcbg := d.Token()
		if _fcbg != nil {
			return _fcbg
		}
		switch _bbgge := _cega.(type) {
		case _b.StartElement:
			switch _bbgge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}:
				_dbfdb := NewCT_ExternalSheetName()
				if _fgbf := d.DecodeElement(_dbfdb, &_bbgge); _fgbf != nil {
					return _fgbf
				}
				_cbfbe.SheetName = append(_cbfbe.SheetName, _dbfdb)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _bbgge.Name)
				if _ededc := d.Skip(); _ededc != nil {
					return _ededc
				}
			}
		case _b.EndElement:
			break _badfb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SheetBackgroundPicture() *CT_SheetBackgroundPicture {
	_fdadfc := &CT_SheetBackgroundPicture{}
	return _fdadfc
}

// Validate validates the VolTypes and its children
func (_bfefe *VolTypes) Validate() error {
	return _bfefe.ValidateWithPath("\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}
func (_deccc ST_SourceType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddbbab := _b.Attr{}
	_ddbbab.Name = name
	switch _deccc {
	case ST_SourceTypeUnset:
		_ddbbab.Value = ""
	case ST_SourceTypeWorksheet:
		_ddbbab.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_SourceTypeExternal:
		_ddbbab.Value = "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case ST_SourceTypeConsolidation:
		_ddbbab.Value = "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case ST_SourceTypeScenario:
		_ddbbab.Value = "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return _ddbbab, nil
}
func NewCT_FunctionGroups() *CT_FunctionGroups { _caccd := &CT_FunctionGroups{}; return _caccd }

const (
	ST_TotalsRowFunctionUnset     ST_TotalsRowFunction = 0
	ST_TotalsRowFunctionNone      ST_TotalsRowFunction = 1
	ST_TotalsRowFunctionSum       ST_TotalsRowFunction = 2
	ST_TotalsRowFunctionMin       ST_TotalsRowFunction = 3
	ST_TotalsRowFunctionMax       ST_TotalsRowFunction = 4
	ST_TotalsRowFunctionAverage   ST_TotalsRowFunction = 5
	ST_TotalsRowFunctionCount     ST_TotalsRowFunction = 6
	ST_TotalsRowFunctionCountNums ST_TotalsRowFunction = 7
	ST_TotalsRowFunctionStdDev    ST_TotalsRowFunction = 8
	ST_TotalsRowFunctionVar       ST_TotalsRowFunction = 9
	ST_TotalsRowFunctionCustom    ST_TotalsRowFunction = 10
)

// ValidateWithPath validates the CT_ExternalDefinedNames and its children, prefixing error messages with path
func (_ddae *CT_ExternalDefinedNames) ValidateWithPath(path string) error {
	for _gaag, _ddaad := range _ddae.DefinedName {
		if _bagde := _ddaad.ValidateWithPath(_f.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _gaag)); _bagde != nil {
			return _bagde
		}
	}
	return nil
}
func (_cecd *CT_MdxMetadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abcef := range start.Attr {
		if _abcef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbcgg, _fffcd := _e.ParseUint(_abcef.Value, 10, 32)
			if _fffcd != nil {
				return _fffcd
			}
			_bcfae := uint32(_fbcgg)
			_cecd.CountAttr = &_bcfae
			continue
		}
	}
_dbcba:
	for {
		_gdbfc, _ceaea := d.Token()
		if _ceaea != nil {
			return _ceaea
		}
		switch _gdaee := _gdbfc.(type) {
		case _b.StartElement:
			switch _gdaee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}:
				_eedag := NewCT_Mdx()
				if _agffb := d.DecodeElement(_eedag, &_gdaee); _agffb != nil {
					return _agffb
				}
				_cecd.Mdx = append(_cecd.Mdx, _eedag)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074\u0061d\u0061t\u0061\u0020\u0025\u0076", _gdaee.Name)
				if _dbcfc := d.Skip(); _dbcfc != nil {
					return _dbcfc
				}
			}
		case _b.EndElement:
			break _dbcba
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Tuples and its children
func (_fffccc *CT_Tuples) Validate() error {
	return _fffccc.ValidateWithPath("\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s")
}
func (_ceaga *CT_MRUColors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cabde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _cebec := range _ceaga.Color {
		e.EncodeElement(_cebec, _cabde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebagda *ST_WebSourceType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eggbbaf, _cfdac := d.Token()
	if _cfdac != nil {
		return _cfdac
	}
	if _aacfb, _ecdfd := _eggbbaf.(_b.EndElement); _ecdfd && _aacfb.Name == start.Name {
		*_ebagda = 1
		return nil
	}
	if _efaaa, _ccecd := _eggbbaf.(_b.CharData); !_ccecd {
		return _f.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggbbaf)
	} else {
		switch string(_efaaa) {
		case "":
			*_ebagda = 0
		case "\u0073\u0068\u0065e\u0074":
			*_ebagda = 1
		case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
			*_ebagda = 2
		case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
			*_ebagda = 3
		case "\u0072\u0061\u006eg\u0065":
			*_ebagda = 4
		case "\u0063\u0068\u0061r\u0074":
			*_ebagda = 5
		case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
			*_ebagda = 6
		case "\u0071\u0075\u0065r\u0079":
			*_ebagda = 7
		case "\u006c\u0061\u0062e\u006c":
			*_ebagda = 8
		}
	}
	_eggbbaf, _cfdac = d.Token()
	if _cfdac != nil {
		return _cfdac
	}
	if _ggdfd, _geefg := _eggbbaf.(_b.EndElement); _geefg && _ggdfd.Name == start.Name {
		return nil
	}
	return _f.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggbbaf)
}

type CT_Selection struct {

	// Pane
	PaneAttr ST_Pane

	// Active Cell Location
	ActiveCellAttr *string

	// Active Cell Index
	ActiveCellIdAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref
}

// ValidateWithPath validates the CT_RevisionSheetRename and its children, prefixing error messages with path
func (_aabced *CT_RevisionSheetRename) ValidateWithPath(path string) error {
	if _aabced.ExtLst != nil {
		if _dbaed := _aabced.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbaed != nil {
			return _dbaed
		}
	}
	return nil
}
func (_eadcffb *Workbook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eadcffb.CT_Workbook = *NewCT_Workbook()
	for _, _ggcfeg := range start.Attr {
		if _ggcfeg.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_eadcffb.ConformanceAttr.UnmarshalXMLAttr(_ggcfeg)
			continue
		}
	}
_deeac:
	for {
		_agdgbe, _bbcab := d.Token()
		if _bbcab != nil {
			return _bbcab
		}
		switch _bgeda := _agdgbe.(type) {
		case _b.StartElement:
			switch _bgeda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_eadcffb.FileVersion = NewCT_FileVersion()
				if _ggcbb := d.DecodeElement(_eadcffb.FileVersion, &_bgeda); _ggcbb != nil {
					return _ggcbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_eadcffb.FileSharing = NewCT_FileSharing()
				if _faddga := d.DecodeElement(_eadcffb.FileSharing, &_bgeda); _faddga != nil {
					return _faddga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_eadcffb.WorkbookPr = NewCT_WorkbookPr()
				if _dcgab := d.DecodeElement(_eadcffb.WorkbookPr, &_bgeda); _dcgab != nil {
					return _dcgab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_eadcffb.WorkbookProtection = NewCT_WorkbookProtection()
				if _eeagca := d.DecodeElement(_eadcffb.WorkbookProtection, &_bgeda); _eeagca != nil {
					return _eeagca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_eadcffb.BookViews = NewCT_BookViews()
				if _fdbcf := d.DecodeElement(_eadcffb.BookViews, &_bgeda); _fdbcf != nil {
					return _fdbcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _adgfd := d.DecodeElement(_eadcffb.Sheets, &_bgeda); _adgfd != nil {
					return _adgfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_eadcffb.FunctionGroups = NewCT_FunctionGroups()
				if _ebbdge := d.DecodeElement(_eadcffb.FunctionGroups, &_bgeda); _ebbdge != nil {
					return _ebbdge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_eadcffb.ExternalReferences = NewCT_ExternalReferences()
				if _egffdg := d.DecodeElement(_eadcffb.ExternalReferences, &_bgeda); _egffdg != nil {
					return _egffdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_eadcffb.DefinedNames = NewCT_DefinedNames()
				if _bgfcd := d.DecodeElement(_eadcffb.DefinedNames, &_bgeda); _bgfcd != nil {
					return _bgfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_eadcffb.CalcPr = NewCT_CalcPr()
				if _cgeeg := d.DecodeElement(_eadcffb.CalcPr, &_bgeda); _cgeeg != nil {
					return _cgeeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_eadcffb.OleSize = NewCT_OleSize()
				if _faede := d.DecodeElement(_eadcffb.OleSize, &_bgeda); _faede != nil {
					return _faede
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_eadcffb.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _geegcg := d.DecodeElement(_eadcffb.CustomWorkbookViews, &_bgeda); _geegcg != nil {
					return _geegcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_eadcffb.PivotCaches = NewCT_PivotCaches()
				if _cefaff := d.DecodeElement(_eadcffb.PivotCaches, &_bgeda); _cefaff != nil {
					return _cefaff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_eadcffb.SmartTagPr = NewCT_SmartTagPr()
				if _edcbdf := d.DecodeElement(_eadcffb.SmartTagPr, &_bgeda); _edcbdf != nil {
					return _edcbdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_eadcffb.SmartTagTypes = NewCT_SmartTagTypes()
				if _fdaegb := d.DecodeElement(_eadcffb.SmartTagTypes, &_bgeda); _fdaegb != nil {
					return _fdaegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_eadcffb.WebPublishing = NewCT_WebPublishing()
				if _ffdabb := d.DecodeElement(_eadcffb.WebPublishing, &_bgeda); _ffdabb != nil {
					return _ffdabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_cddefg := NewCT_FileRecoveryPr()
				if _dagbb := d.DecodeElement(_cddefg, &_bgeda); _dagbb != nil {
					return _dagbb
				}
				_eadcffb.FileRecoveryPr = append(_eadcffb.FileRecoveryPr, _cddefg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_eadcffb.WebPublishObjects = NewCT_WebPublishObjects()
				if _edfbc := d.DecodeElement(_eadcffb.WebPublishObjects, &_bgeda); _edfbc != nil {
					return _edfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eadcffb.ExtLst = NewCT_ExtensionList()
				if _efgfgg := d.DecodeElement(_eadcffb.ExtLst, &_bgeda); _efgfgg != nil {
					return _efgfgg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _bgeda.Name)
				if _aaggg := d.Skip(); _aaggg != nil {
					return _aaggg
				}
			}
		case _b.EndElement:
			break _deeac
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_SourceTypeUnset         ST_SourceType = 0
	ST_SourceTypeWorksheet     ST_SourceType = 1
	ST_SourceTypeExternal      ST_SourceType = 2
	ST_SourceTypeConsolidation ST_SourceType = 3
	ST_SourceTypeScenario      ST_SourceType = 4
)

// Validate validates the CT_CacheFields and its children
func (_geaf *CT_CacheFields) Validate() error {
	return _geaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073")
}
func (_gdecc *CT_Parameters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddcdf := range start.Attr {
		if _ddcdf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efbb, _gadbb := _e.ParseUint(_ddcdf.Value, 10, 32)
			if _gadbb != nil {
				return _gadbb
			}
			_gbebf := uint32(_efbb)
			_gdecc.CountAttr = &_gbebf
			continue
		}
	}
_beffcc:
	for {
		_gdegcd, _acfde := d.Token()
		if _acfde != nil {
			return _acfde
		}
		switch _ddddeg := _gdegcd.(type) {
		case _b.StartElement:
			switch _ddddeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}:
				_bebeca := NewCT_Parameter()
				if _aedbe := d.DecodeElement(_bebeca, &_ddddeg); _aedbe != nil {
					return _aedbe
				}
				_gdecc.Parameter = append(_gdecc.Parameter, _bebeca)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 \u0025\u0076", _ddddeg.Name)
				if _cbaaf := d.Skip(); _cbaaf != nil {
					return _cbaaf
				}
			}
		case _b.EndElement:
			break _beffcc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MergeCell and its children, prefixing error messages with path
func (_gbcdf *CT_MergeCell) ValidateWithPath(path string) error { return nil }
func (_febgc ST_CellSpans) String() string                      { return _gf.Join(_febgc, "\u0020") }

// Validate validates the CT_ChartFormat and its children
func (_bddd *CT_ChartFormat) Validate() error {
	return _bddd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074")
}
func (_afgab *CT_RevisionRowColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afgab.ActionAttr = ST_rwColActionType(1)
	for _, _faaccb := range start.Attr {
		if _faaccb.Name.Local == "\u0073\u0049\u0064" {
			_fdfcd, _bfedb := _e.ParseUint(_faaccb.Value, 10, 32)
			if _bfedb != nil {
				return _bfedb
			}
			_afgab.SIdAttr = uint32(_fdfcd)
			continue
		}
		if _faaccb.Name.Local == "\u0065\u006f\u006c" {
			_dbdbb, _cdbdc := _e.ParseBool(_faaccb.Value)
			if _cdbdc != nil {
				return _cdbdc
			}
			_afgab.EolAttr = &_dbdbb
			continue
		}
		if _faaccb.Name.Local == "\u0072\u0065\u0066" {
			_fecfe, _ggacc := _faaccb.Value, error(nil)
			if _ggacc != nil {
				return _ggacc
			}
			_afgab.RefAttr = _fecfe
			continue
		}
		if _faaccb.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_afgab.ActionAttr.UnmarshalXMLAttr(_faaccb)
			continue
		}
		if _faaccb.Name.Local == "\u0065\u0064\u0067\u0065" {
			_ebbdga, _eedgf := _e.ParseBool(_faaccb.Value)
			if _eedgf != nil {
				return _eedgf
			}
			_afgab.EdgeAttr = &_ebbdga
			continue
		}
		if _faaccb.Name.Local == "\u0072\u0049\u0064" {
			_gaedf, _ebgda := _e.ParseUint(_faaccb.Value, 10, 32)
			if _ebgda != nil {
				return _ebgda
			}
			_cgbfg := uint32(_gaedf)
			_afgab.RIdAttr = &_cgbfg
			continue
		}
		if _faaccb.Name.Local == "\u0075\u0061" {
			_eafbd, _dbced := _e.ParseBool(_faaccb.Value)
			if _dbced != nil {
				return _dbced
			}
			_afgab.UaAttr = &_eafbd
			continue
		}
		if _faaccb.Name.Local == "\u0072\u0061" {
			_gfead, _dcggf := _e.ParseBool(_faaccb.Value)
			if _dcggf != nil {
				return _dcggf
			}
			_afgab.RaAttr = &_gfead
			continue
		}
	}
_cbgddd:
	for {
		_eadef, _gbdfd := d.Token()
		if _gbdfd != nil {
			return _gbdfd
		}
		switch _ddccb := _eadef.(type) {
		case _b.StartElement:
			switch _ddccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_eafd := NewCT_UndoInfo()
				if _deace := d.DecodeElement(_eafd, &_ddccb); _deace != nil {
					return _deace
				}
				_afgab.Undo = append(_afgab.Undo, _eafd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_cgfefg := NewCT_RevisionCellChange()
				if _fggee := d.DecodeElement(_cgfefg, &_ddccb); _fggee != nil {
					return _fggee
				}
				_afgab.Rcc = append(_afgab.Rcc, _cgfefg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_cffce := NewCT_RevisionFormatting()
				if _eecbg := d.DecodeElement(_cffce, &_ddccb); _eecbg != nil {
					return _eecbg
				}
				_afgab.Rfmt = append(_afgab.Rfmt, _cffce)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _ddccb.Name)
				if _dedece := d.Skip(); _dedece != nil {
					return _dedece
				}
			}
		case _b.EndElement:
			break _cbgddd
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_ShowDataAsUnset          ST_ShowDataAs = 0
	ST_ShowDataAsNormal         ST_ShowDataAs = 1
	ST_ShowDataAsDifference     ST_ShowDataAs = 2
	ST_ShowDataAsPercent        ST_ShowDataAs = 3
	ST_ShowDataAsPercentDiff    ST_ShowDataAs = 4
	ST_ShowDataAsRunTotal       ST_ShowDataAs = 5
	ST_ShowDataAsPercentOfRow   ST_ShowDataAs = 6
	ST_ShowDataAsPercentOfCol   ST_ShowDataAs = 7
	ST_ShowDataAsPercentOfTotal ST_ShowDataAs = 8
	ST_ShowDataAsIndex          ST_ShowDataAs = 9
)

func (_adeae *SingleXmlCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073"
	return _adeae.CT_SingleXmlCells.MarshalXML(e, start)
}

type CT_TextFields struct {

	// Count of Fields
	CountAttr *uint32

	// Text Import Field Settings
	TextField []*CT_TextField
}

func NewCT_MRUColors() *CT_MRUColors { _cbba := &CT_MRUColors{}; return _cbba }
func (_fabae *SingleXmlCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fabae.CT_SingleXmlCells = *NewCT_SingleXmlCells()
_ceagfd:
	for {
		_eafde, _bdedg := d.Token()
		if _bdedg != nil {
			return _bdedg
		}
		switch _beafa := _eafde.(type) {
		case _b.StartElement:
			switch _beafa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_abaeab := NewCT_SingleXmlCell()
				if _edbgcb := d.DecodeElement(_abaeab, &_beafa); _edbgcb != nil {
					return _edbgcb
				}
				_fabae.SingleXmlCell = append(_fabae.SingleXmlCell, _abaeab)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043e\u006cl\u0073\u0020\u0025\u0076", _beafa.Name)
				if _acdcg := d.Skip(); _acdcg != nil {
					return _acdcg
				}
			}
		case _b.EndElement:
			break _ceagfd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Tuples() *CT_Tuples { _bgffg := &CT_Tuples{}; return _bgffg }

// ValidateWithPath validates the CT_PivotHierarchy and its children, prefixing error messages with path
func (_acdac *CT_PivotHierarchy) ValidateWithPath(path string) error {
	if _acdac.Mps != nil {
		if _eceef := _acdac.Mps.ValidateWithPath(path + "\u002f\u004d\u0070\u0073"); _eceef != nil {
			return _eceef
		}
	}
	for _dfbff, _gfdced := range _acdac.Members {
		if _baeebd := _gfdced.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072s\u005b\u0025\u0064\u005d", path, _dfbff)); _baeebd != nil {
			return _baeebd
		}
	}
	if _acdac.ExtLst != nil {
		if _deecb := _acdac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deecb != nil {
			return _deecb
		}
	}
	return nil
}
func (_gdebb ST_RefMode) Validate() error { return _gdebb.ValidateWithPath("") }

type ST_SourceType byte
type CT_FunctionGroup struct {

	// Name
	NameAttr *string
}

const (
	ST_IconSetTypeUnset           ST_IconSetType = 0
	ST_IconSetType3Arrows         ST_IconSetType = 1
	ST_IconSetType3ArrowsGray     ST_IconSetType = 2
	ST_IconSetType3Flags          ST_IconSetType = 3
	ST_IconSetType3TrafficLights1 ST_IconSetType = 4
	ST_IconSetType3TrafficLights2 ST_IconSetType = 5
	ST_IconSetType3Signs          ST_IconSetType = 6
	ST_IconSetType3Symbols        ST_IconSetType = 7
	ST_IconSetType3Symbols2       ST_IconSetType = 8
	ST_IconSetType4Arrows         ST_IconSetType = 9
	ST_IconSetType4ArrowsGray     ST_IconSetType = 10
	ST_IconSetType4RedToBlack     ST_IconSetType = 11
	ST_IconSetType4Rating         ST_IconSetType = 12
	ST_IconSetType4TrafficLights  ST_IconSetType = 13
	ST_IconSetType5Arrows         ST_IconSetType = 14
	ST_IconSetType5ArrowsGray     ST_IconSetType = 15
	ST_IconSetType5Rating         ST_IconSetType = 16
	ST_IconSetType5Quarters       ST_IconSetType = 17
)

func NewCT_TextFields() *CT_TextFields { _daedeg := &CT_TextFields{}; return _daedeg }
func NewCT_FieldUsage() *CT_FieldUsage { _gacf := &CT_FieldUsage{}; return _gacf }
func NewCT_Stylesheet() *CT_Stylesheet { _bebfgf := &CT_Stylesheet{}; return _bebfgf }

// ValidateWithPath validates the CT_ObjectPr and its children, prefixing error messages with path
func (_deee *CT_ObjectPr) ValidateWithPath(path string) error {
	if _acefbc := _deee.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _acefbc != nil {
		return _acefbc
	}
	return nil
}
func NewCT_DdeValue() *CT_DdeValue { _bacac := &CT_DdeValue{}; return _bacac }
func (_ebabdc ST_Orientation) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_afffg := _b.Attr{}
	_afffg.Name = name
	switch _ebabdc {
	case ST_OrientationUnset:
		_afffg.Value = ""
	case ST_OrientationDefault:
		_afffg.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_OrientationPortrait:
		_afffg.Value = "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case ST_OrientationLandscape:
		_afffg.Value = "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return _afffg, nil
}

type ST_VolDepType byte

const (
	ST_VerticalAlignmentUnset       ST_VerticalAlignment = 0
	ST_VerticalAlignmentTop         ST_VerticalAlignment = 1
	ST_VerticalAlignmentCenter      ST_VerticalAlignment = 2
	ST_VerticalAlignmentBottom      ST_VerticalAlignment = 3
	ST_VerticalAlignmentJustify     ST_VerticalAlignment = 4
	ST_VerticalAlignmentDistributed ST_VerticalAlignment = 5
)

func NewCT_MetadataRecord() *CT_MetadataRecord { _accc := &CT_MetadataRecord{}; return _accc }

type CT_DdeItem struct {

	// DDE Name
	NameAttr *string

	// Object Linking TechnologyE
	OleAttr *bool

	// Advise
	AdviseAttr *bool

	// Data is an Image
	PreferPicAttr *bool

	// DDE Name Values
	Values *CT_DdeValues
}
type ST_Visibility byte
type ST_Axis byte

// Validate validates the CT_X and its children
func (_fabgdb *CT_X) Validate() error { return _fabgdb.ValidateWithPath("\u0043\u0054\u005f\u0058") }
func (_eeaab *CT_RevisionCustomView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeaab.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_eeaab.ActionAttr = ST_RevisionAction(1)
	for _, _bdcge := range start.Attr {
		if _bdcge.Name.Local == "\u0067\u0075\u0069\u0064" {
			_dcade, _ggacb := _bdcge.Value, error(nil)
			if _ggacb != nil {
				return _ggacb
			}
			_eeaab.GuidAttr = _dcade
			continue
		}
		if _bdcge.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_eeaab.ActionAttr.UnmarshalXMLAttr(_bdcge)
			continue
		}
	}
	for {
		_ecdbf, _dcgge := d.Token()
		if _dcgge != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043u\u0073\u0074\u006f\u006d\u0056\u0069\u0065w\u003a\u0020\u0025\u0073", _dcgge)
		}
		if _aecaf, _bddge := _ecdbf.(_b.EndElement); _bddge && _aecaf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_QueryTable and its children
func (_eagbe *CT_QueryTable) Validate() error {
	return _eagbe.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

// Validate validates the CT_QueryTableFields and its children
func (_daagde *CT_QueryTableFields) Validate() error {
	return _daagde.ValidateWithPath("\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_GradientStop struct {

	// Gradient Stop Position
	PositionAttr float64

	// Color
	Color *CT_Color
}

func (_bggbc *CT_MeasureDimensionMap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cadgc := range start.Attr {
		if _cadgc.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_aegge, _bddad := _e.ParseUint(_cadgc.Value, 10, 32)
			if _bddad != nil {
				return _bddad
			}
			_cafac := uint32(_aegge)
			_bggbc.MeasureGroupAttr = &_cafac
			continue
		}
		if _cadgc.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_cbaeaa, _fcefd := _e.ParseUint(_cadgc.Value, 10, 32)
			if _fcefd != nil {
				return _fcefd
			}
			_dfdag := uint32(_cbaeaa)
			_bggbc.DimensionAttr = &_dfdag
			continue
		}
	}
	for {
		_caagf, _cdccg := d.Token()
		if _cdccg != nil {
			return _f.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0061s\u0075r\u0065D\u0069m\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u003a\u0020\u0025\u0073", _cdccg)
		}
		if _abefd, _fdgee := _caagf.(_b.EndElement); _fdgee && _abefd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbedb *CT_ServerFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbedb.CultureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063u\u006c\u0074\u0075\u0072\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_bbedb.CultureAttr)})
	}
	if _bbedb.FormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_bbedb.FormatAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionCustomView struct {

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction
}

// ValidateWithPath validates the CT_PhoneticRun and its children, prefixing error messages with path
func (_ddbef *CT_PhoneticRun) ValidateWithPath(path string) error { return nil }
func (_faadac ST_DvAspect) String() string {
	switch _faadac {
	case 0:
		return ""
	case 1:
		return "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case 2:
		return "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return ""
}
func (_baebc *CT_PageField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdbce := range start.Attr {
		if _gdbce.Name.Local == "\u0066\u006c\u0064" {
			_dfcef, _ccgge := _e.ParseInt(_gdbce.Value, 10, 32)
			if _ccgge != nil {
				return _ccgge
			}
			_baebc.FldAttr = int32(_dfcef)
			continue
		}
		if _gdbce.Name.Local == "\u0069\u0074\u0065\u006d" {
			_abafa, _cdece := _e.ParseUint(_gdbce.Value, 10, 32)
			if _cdece != nil {
				return _cdece
			}
			_fgdgf := uint32(_abafa)
			_baebc.ItemAttr = &_fgdgf
			continue
		}
		if _gdbce.Name.Local == "\u0068\u0069\u0065\u0072" {
			_gbedc, _caccaa := _e.ParseInt(_gdbce.Value, 10, 32)
			if _caccaa != nil {
				return _caccaa
			}
			_effcb := int32(_gbedc)
			_baebc.HierAttr = &_effcb
			continue
		}
		if _gdbce.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddddd, _cdffe := _gdbce.Value, error(nil)
			if _cdffe != nil {
				return _cdffe
			}
			_baebc.NameAttr = &_ddddd
			continue
		}
		if _gdbce.Name.Local == "\u0063\u0061\u0070" {
			_bcbgb, _cbbdd := _gdbce.Value, error(nil)
			if _cbbdd != nil {
				return _cbbdd
			}
			_baebc.CapAttr = &_bcbgb
			continue
		}
	}
_dfgac:
	for {
		_addbe, _faccc := d.Token()
		if _faccc != nil {
			return _faccc
		}
		switch _debee := _addbe.(type) {
		case _b.StartElement:
			switch _debee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_baebc.ExtLst = NewCT_ExtensionList()
				if _dfbdc := d.DecodeElement(_baebc.ExtLst, &_debee); _dfbdc != nil {
					return _dfbdc
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _debee.Name)
				if _egaac := d.Skip(); _egaac != nil {
					return _egaac
				}
			}
		case _b.EndElement:
			break _dfgac
		case _b.CharData:
		}
	}
	return nil
}

type ST_UpdateLinks byte

func NewCT_WorkbookPr() *CT_WorkbookPr { _fcbgd := &CT_WorkbookPr{}; return _fcbgd }

// ValidateWithPath validates the CT_GroupLevel and its children, prefixing error messages with path
func (_aaada *CT_GroupLevel) ValidateWithPath(path string) error {
	if _aaada.Groups != nil {
		if _bgba := _aaada.Groups.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0073"); _bgba != nil {
			return _bgba
		}
	}
	if _aaada.ExtLst != nil {
		if _bfaf := _aaada.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfaf != nil {
			return _bfaf
		}
	}
	return nil
}

// Validate validates the CT_CellStyleXfs and its children
func (_gded *CT_CellStyleXfs) Validate() error {
	return _gded.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073")
}

const (
	ST_HtmlFmtUnset ST_HtmlFmt = 0
	ST_HtmlFmtNone  ST_HtmlFmt = 1
	ST_HtmlFmtRtf   ST_HtmlFmt = 2
	ST_HtmlFmtAll   ST_HtmlFmt = 3
)

func (_bccb *CT_FileSharing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcegc := range start.Attr {
		if _dcegc.Name.Local == "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064" {
			_efdag, _aade := _e.ParseBool(_dcegc.Value)
			if _aade != nil {
				return _aade
			}
			_bccb.ReadOnlyRecommendedAttr = &_efdag
			continue
		}
		if _dcegc.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_gdbeb, _fgabd := _dcegc.Value, error(nil)
			if _fgabd != nil {
				return _fgabd
			}
			_bccb.UserNameAttr = &_gdbeb
			continue
		}
		if _dcegc.Name.Local == "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_fgbee, _aaeee := _dcegc.Value, error(nil)
			if _aaeee != nil {
				return _aaeee
			}
			_bccb.ReservationPasswordAttr = &_fgbee
			continue
		}
		if _dcegc.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_egaa, _bgcf := _dcegc.Value, error(nil)
			if _bgcf != nil {
				return _bgcf
			}
			_bccb.AlgorithmNameAttr = &_egaa
			continue
		}
		if _dcegc.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_gegga, _cdbe := _dcegc.Value, error(nil)
			if _cdbe != nil {
				return _cdbe
			}
			_bccb.HashValueAttr = &_gegga
			continue
		}
		if _dcegc.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_bedfa, _gcebg := _dcegc.Value, error(nil)
			if _gcebg != nil {
				return _gcebg
			}
			_bccb.SaltValueAttr = &_bedfa
			continue
		}
		if _dcegc.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_efada, _aaacc := _e.ParseUint(_dcegc.Value, 10, 32)
			if _aaacc != nil {
				return _aaacc
			}
			_ceddg := uint32(_efada)
			_bccb.SpinCountAttr = &_ceddg
			continue
		}
	}
	for {
		_cgfag, _fddcb := d.Token()
		if _fddcb != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067:\u0020\u0025\u0073", _fddcb)
		}
		if _gede, _babbg := _cgfag.(_b.EndElement); _babbg && _gede.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Workbook() *CT_Workbook {
	_cgeeb := &CT_Workbook{}
	_cgeeb.Sheets = NewCT_Sheets()
	return _cgeeb
}
func (_bgbc *CT_CalcChain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gdbgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063"}}
	for _, _agc := range _bgbc.C {
		e.EncodeElement(_agc, _gdbgb)
	}
	if _bgbc.ExtLst != nil {
		_egff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bgbc.ExtLst, _egff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ConditionalFormat struct {

	// Conditional Formatting Scope
	ScopeAttr ST_Scope

	// Conditional Formatting Rule Type
	TypeAttr ST_Type

	// Priority
	PriorityAttr uint32

	// Pivot Areas
	PivotAreas *CT_PivotAreas
	ExtLst     *CT_ExtensionList
}

// Validate validates the CT_OleItems and its children
func (_gcbaa *CT_OleItems) Validate() error {
	return _gcbaa.ValidateWithPath("C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073")
}

// Validate validates the CT_SheetPr and its children
func (_gdgba *CT_SheetPr) Validate() error {
	return _gdgba.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072")
}
func (_bcgba *CalcChain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcgba.CT_CalcChain = *NewCT_CalcChain()
_ccdeea:
	for {
		_daccab, _egaef := d.Token()
		if _egaef != nil {
			return _egaef
		}
		switch _fdgae := _daccab.(type) {
		case _b.StartElement:
			switch _fdgae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_fgggf := NewCT_CalcCell()
				if _dgdcg := d.DecodeElement(_fgggf, &_fdgae); _dgdcg != nil {
					return _dgdcg
				}
				_bcgba.C = append(_bcgba.C, _fgggf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcgba.ExtLst = NewCT_ExtensionList()
				if _bacgab := d.DecodeElement(_bcgba.ExtLst, &_fdgae); _bacgab != nil {
					return _bacgab
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0061\u006c\u0063\u0043\u0068a\u0069\u006e \u0025\u0076", _fdgae.Name)
				if _fabda := d.Skip(); _fabda != nil {
					return _fabda
				}
			}
		case _b.EndElement:
			break _ccdeea
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalCell struct {

	// Reference
	RAttr *string

	// Type
	TAttr ST_CellType

	// Value Metadata
	VmAttr *uint32

	// Value
	V *string
}

func (_cbce *CT_MetadataRecord) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _f.Sprintf("\u0025\u0076", _cbce.TAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _cbce.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Comment() *CT_Comment               { _aaca := &CT_Comment{}; _aaca.Text = NewCT_Rst(); return _aaca }
func NewCT_FutureMetadata() *CT_FutureMetadata { _agba := &CT_FutureMetadata{}; return _agba }

// ValidateWithPath validates the CT_Filter and its children, prefixing error messages with path
func (_eadfg *CT_Filter) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_SmartTagTypes and its children
func (_gbeagg *CT_SmartTagTypes) Validate() error {
	return _gbeagg.ValidateWithPath("\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073")
}

type CT_DataRef struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_dafeg ST_FontScheme) Validate() error { return _dafeg.ValidateWithPath("") }
func (_fedbb *CT_String) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _f.Sprintf("\u0025\u0076", _fedbb.VAttr)})
	if _fedbb.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fedbb.UAttr))})
	}
	if _fedbb.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fedbb.FAttr))})
	}
	if _fedbb.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_fedbb.CAttr)})
	}
	if _fedbb.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _f.Sprintf("\u0025\u0076", *_fedbb.CpAttr)})
	}
	if _fedbb.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _f.Sprintf("\u0025\u0076", *_fedbb.InAttr)})
	}
	if _fedbb.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_fedbb.BcAttr)})
	}
	if _fedbb.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _f.Sprintf("\u0025\u0076", *_fedbb.FcAttr)})
	}
	if _fedbb.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fedbb.IAttr))})
	}
	if _fedbb.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fedbb.UnAttr))})
	}
	if _fedbb.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fedbb.StAttr))})
	}
	if _fedbb.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_fedbb.BAttr))})
	}
	e.EncodeToken(start)
	if _fedbb.Tpls != nil {
		_ccdfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _dgfbdg := range _fedbb.Tpls {
			e.EncodeElement(_dgfbdg, _ccdfe)
		}
	}
	if _fedbb.X != nil {
		_gdbbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _affgaf := range _fedbb.X {
			e.EncodeElement(_affgaf, _gdbbg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Sets struct {

	// Tuple Set Count
	CountAttr *uint32

	// OLAP Set
	Set []*CT_Set
}

// Validate validates the CT_RangeSet and its children
func (_eedfa *CT_RangeSet) Validate() error {
	return _eedfa.ValidateWithPath("C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074")
}

// ValidateWithPath validates the CT_Sheets and its children, prefixing error messages with path
func (_dfebae *CT_Sheets) ValidateWithPath(path string) error {
	for _ffcea, _edede := range _dfebae.Sheet {
		if _cabcdd := _edede.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002fS\u0068\u0065\u0065\u0074\u005b\u0025\u0064\u005d", path, _ffcea)); _cabcdd != nil {
			return _cabcdd
		}
	}
	return nil
}
func (_befag *CT_DeletedField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _befag.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ServerFormat() *CT_ServerFormat { _bedcc := &CT_ServerFormat{}; return _bedcc }
func (_fbggfg ST_PrintError) String() string {
	switch _fbggfg {
	case 0:
		return ""
	case 1:
		return "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case 2:
		return "\u0062\u006c\u0061n\u006b"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u004e\u0041"
	}
	return ""
}

// Validate validates the CT_Workbook and its children
func (_cdfee *CT_Workbook) Validate() error {
	return _cdfee.ValidateWithPath("C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

// ValidateWithPath validates the CT_PivotFields and its children, prefixing error messages with path
func (_ecaga *CT_PivotFields) ValidateWithPath(path string) error {
	for _aaddg, _gcbcd := range _ecaga.PivotField {
		if _bbgdf := _gcbcd.ValidateWithPath(_f.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _aaddg)); _bbgdf != nil {
			return _bbgdf
		}
	}
	return nil
}
func (_ead *CT_BooleanProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egf := range start.Attr {
		if _egf.Name.Local == "\u0076\u0061\u006c" {
			_fdc, _fdcg := _e.ParseBool(_egf.Value)
			if _fdcg != nil {
				return _fdcg
			}
			_ead.ValAttr = &_fdc
			continue
		}
	}
	for {
		_dgf, _geag := d.Token()
		if _geag != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0042\u006f\u006f\u006c\u0065\u0061\u006eP\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _geag)
		}
		if _gba, _bbgb := _dgf.(_b.EndElement); _bbgb && _gba.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the Worksheet and its children, prefixing error messages with path
func (_fbbeg *Worksheet) ValidateWithPath(path string) error {
	if _deccd := _fbbeg.CT_Worksheet.ValidateWithPath(path); _deccd != nil {
		return _deccd
	}
	return nil
}
func (_dfcfc *CT_TableColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _f.Sprintf("\u0025\u0076", _dfcfc.IdAttr)})
	if _dfcfc.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.UniqueNameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _f.Sprintf("\u0025\u0076", _dfcfc.NameAttr)})
	if _dfcfc.TotalsRowFunctionAttr != ST_TotalsRowFunctionUnset {
		_cbgec, _ecbbc := _dfcfc.TotalsRowFunctionAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e"})
		if _ecbbc != nil {
			return _ecbbc
		}
		start.Attr = append(start.Attr, _cbgec)
	}
	if _dfcfc.TotalsRowLabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.TotalsRowLabelAttr)})
	}
	if _dfcfc.QueryTableFieldIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.QueryTableFieldIdAttr)})
	}
	if _dfcfc.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.HeaderRowDxfIdAttr)})
	}
	if _dfcfc.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.DataDxfIdAttr)})
	}
	if _dfcfc.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.TotalsRowDxfIdAttr)})
	}
	if _dfcfc.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.HeaderRowCellStyleAttr)})
	}
	if _dfcfc.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.DataCellStyleAttr)})
	}
	if _dfcfc.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _f.Sprintf("\u0025\u0076", *_dfcfc.TotalsRowCellStyleAttr)})
	}
	e.EncodeToken(start)
	if _dfcfc.CalculatedColumnFormula != nil {
		_dfdef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072m\u0075\u006c\u0061"}}
		e.EncodeElement(_dfcfc.CalculatedColumnFormula, _dfdef)
	}
	if _dfcfc.TotalsRowFormula != nil {
		_cfbccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074ot\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		e.EncodeElement(_dfcfc.TotalsRowFormula, _cfbccf)
	}
	if _dfcfc.XmlColumnPr != nil {
		_fgddd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072"}}
		e.EncodeElement(_dfcfc.XmlColumnPr, _fgddd)
	}
	if _dfcfc.ExtLst != nil {
		_ebaff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfcfc.ExtLst, _ebaff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_QueryTableFields struct {

	// Column Count
	CountAttr *uint32

	// QueryTable Field
	QueryTableField []*CT_QueryTableField
}

func (_ccfgc *CT_RowHierarchiesUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbdbff := range start.Attr {
		if _cbdbff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdacg, _egbccd := _e.ParseUint(_cbdbff.Value, 10, 32)
			if _egbccd != nil {
				return _egbccd
			}
			_fbgca := uint32(_fdacg)
			_ccfgc.CountAttr = &_fbgca
			continue
		}
	}
_feadc:
	for {
		_fecdc, _dgagd := d.Token()
		if _dgagd != nil {
			return _dgagd
		}
		switch _dfgea := _fecdc.(type) {
		case _b.StartElement:
			switch _dfgea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_gdefg := NewCT_HierarchyUsage()
				if _gegdbe := d.DecodeElement(_gdefg, &_dfgea); _gegdbe != nil {
					return _gegdbe
				}
				_ccfgc.RowHierarchyUsage = append(_ccfgc.RowHierarchyUsage, _gdefg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u006f\u0077\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _dfgea.Name)
				if _fdgef := d.Skip(); _fdgef != nil {
					return _fdgef
				}
			}
		case _b.EndElement:
			break _feadc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Macrosheet() *CT_Macrosheet {
	_fbde := &CT_Macrosheet{}
	_fbde.SheetData = NewCT_SheetData()
	return _fbde
}

type CT_MeasureDimensionMap struct {

	// Measure Group Id
	MeasureGroupAttr *uint32

	// Dimension Id
	DimensionAttr *uint32
}

// Validate validates the CT_Set and its children
func (_ceaee *CT_Set) Validate() error {
	return _ceaee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0065\u0074")
}
func (_eegeb *CT_ExternalRow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _f.Sprintf("\u0025\u0076", _eegeb.RAttr)})
	e.EncodeToken(start)
	if _eegeb.Cell != nil {
		_fbbbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0065\u006c\u006c"}}
		for _, _fdfae := range _eegeb.Cell {
			e.EncodeElement(_fdfae, _fbbbc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Users and its children
func (_aedabg *CT_Users) Validate() error {
	return _aedabg.ValidateWithPath("\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_RevisionConflict and its children, prefixing error messages with path
func (_bebbc *CT_RevisionConflict) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_DataValidations and its children, prefixing error messages with path
func (_cdbg *CT_DataValidations) ValidateWithPath(path string) error {
	for _beea, _ccgd := range _cdbg.DataValidation {
		if _ebdgb := _ccgd.ValidateWithPath(_f.Sprintf("%\u0073\u002f\u0044\u0061ta\u0056a\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _beea)); _ebdgb != nil {
			return _ebdgb
		}
	}
	return nil
}
func NewCT_LegacyDrawing() *CT_LegacyDrawing { _cafdb := &CT_LegacyDrawing{}; return _cafdb }
func (_gbbaf *CT_Comment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbbaf.Text = NewCT_Rst()
	for _, _aacc := range start.Attr {
		if _aacc.Name.Local == "\u0072\u0065\u0066" {
			_afba, _ccab := _aacc.Value, error(nil)
			if _ccab != nil {
				return _ccab
			}
			_gbbaf.RefAttr = _afba
			continue
		}
		if _aacc.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_acaae, _gbad := _e.ParseUint(_aacc.Value, 10, 32)
			if _gbad != nil {
				return _gbad
			}
			_gbbaf.AuthorIdAttr = uint32(_acaae)
			continue
		}
		if _aacc.Name.Local == "\u0067\u0075\u0069\u0064" {
			_bacb, _eggg := _aacc.Value, error(nil)
			if _eggg != nil {
				return _eggg
			}
			_gbbaf.GuidAttr = &_bacb
			continue
		}
		if _aacc.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_bfab, _ccda := _e.ParseUint(_aacc.Value, 10, 32)
			if _ccda != nil {
				return _ccda
			}
			_aagc := uint32(_bfab)
			_gbbaf.ShapeIdAttr = &_aagc
			continue
		}
	}
_afff:
	for {
		_caef, _aedg := d.Token()
		if _aedg != nil {
			return _aedg
		}
		switch _acdda := _caef.(type) {
		case _b.StartElement:
			switch _acdda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _fggg := d.DecodeElement(_gbbaf.Text, &_acdda); _fggg != nil {
					return _fggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}:
				_gbbaf.CommentPr = NewCT_CommentPr()
				if _efffe := d.DecodeElement(_gbbaf.CommentPr, &_acdda); _efffe != nil {
					return _efffe
				}
			default:
				_d.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _acdda.Name)
				if _efgg := d.Skip(); _efgg != nil {
					return _efgg
				}
			}
		case _b.EndElement:
			break _afff
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_CellCommentsUnset       ST_CellComments = 0
	ST_CellCommentsNone        ST_CellComments = 1
	ST_CellCommentsAsDisplayed ST_CellComments = 2
	ST_CellCommentsAtEnd       ST_CellComments = 3
)

// Validate validates the CT_ConditionalFormatting and its children
func (_fccbd *CT_ConditionalFormatting) Validate() error {
	return _fccbd.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_cgaeb ST_UpdateLinks) Validate() error { return _cgaeb.ValidateWithPath("") }
func (_ecbgc *CT_DynamicFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecbgc.TypeAttr = ST_DynamicFilterType(1)
	for _, _aafba := range start.Attr {
		if _aafba.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecbgc.TypeAttr.UnmarshalXMLAttr(_aafba)
			continue
		}
		if _aafba.Name.Local == "\u0076\u0061\u006c" {
			_gfcff, _cacgg := _e.ParseFloat(_aafba.Value, 64)
			if _cacgg != nil {
				return _cacgg
			}
			_ecbgc.ValAttr = &_gfcff
			continue
		}
		if _aafba.Name.Local == "\u0076\u0061\u006c\u0049\u0073\u006f" {
			_ebace, _adcfd := ParseStdlibTime(_aafba.Value)
			if _adcfd != nil {
				return _adcfd
			}
			_ecbgc.ValIsoAttr = &_ebace
			continue
		}
		if _aafba.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c" {
			_dbfb, _aagd := _e.ParseFloat(_aafba.Value, 64)
			if _aagd != nil {
				return _aagd
			}
			_ecbgc.MaxValAttr = &_dbfb
			continue
		}
		if _aafba.Name.Local == "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o" {
			_ccgfg, _dcafb := ParseStdlibTime(_aafba.Value)
			if _dcafb != nil {
				return _dcafb
			}
			_ecbgc.MaxValIsoAttr = &_ccgfg
			continue
		}
	}
	for {
		_gdafa, _agbfg := d.Token()
		if _agbfg != nil {
			return _f.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0079\u006e\u0061m\u0069c\u0046\u0069\u006c\u0074\u0065\u0072\u003a \u0025\u0073", _agbfg)
		}
		if _ggeag, _adfa := _gdafa.(_b.EndElement); _adfa && _ggeag.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CellWatches() *CT_CellWatches       { _afgb := &CT_CellWatches{}; return _afgb }
func NewCT_SingleXmlCells() *CT_SingleXmlCells { _aagb := &CT_SingleXmlCells{}; return _aagb }
func (_ddcbcf *CT_PageSetup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaabe := range start.Attr {
		if _eaabe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eaabe.Name.Local == "\u0069\u0064" || _eaabe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eaabe.Name.Local == "\u0069\u0064" {
			_eabea, _becdec := _eaabe.Value, error(nil)
			if _becdec != nil {
				return _becdec
			}
			_ddcbcf.IdAttr = &_eabea
			continue
		}
		if _eaabe.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_gddad, _afcbe := _e.ParseUint(_eaabe.Value, 10, 32)
			if _afcbe != nil {
				return _afcbe
			}
			_caaad := uint32(_gddad)
			_ddcbcf.PaperSizeAttr = &_caaad
			continue
		}
		if _eaabe.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_affeb, _ecaba := _e.ParseBool(_eaabe.Value)
			if _ecaba != nil {
				return _ecaba
			}
			_ddcbcf.BlackAndWhiteAttr = &_affeb
			continue
		}
		if _eaabe.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_baad, _bdbfa := _e.ParseBool(_eaabe.Value)
			if _bdbfa != nil {
				return _bdbfa
			}
			_ddcbcf.DraftAttr = &_baad
			continue
		}
		if _eaabe.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_dfbdf, _ceebe := _e.ParseUint(_eaabe.Value, 10, 32)
			if _ceebe != nil {
				return _ceebe
			}
			_afbeb := uint32(_dfbdf)
			_ddcbcf.ScaleAttr = &_afbeb
			continue
		}
		if _eaabe.Name.Local == "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_ddcbcf.CellCommentsAttr.UnmarshalXMLAttr(_eaabe)
			continue
		}
		if _eaabe.Name.Local == "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068" {
			_bebfc, _bdfaa := _e.ParseUint(_eaabe.Value, 10, 32)
			if _bdfaa != nil {
				return _bdfaa
			}
			_acead := uint32(_bebfc)
			_ddcbcf.FitToWidthAttr = &_acead
			continue
		}
		if _eaabe.Name.Local == "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r" {
			_ddcbcf.PageOrderAttr.UnmarshalXMLAttr(_eaabe)
			continue
		}
		if _eaabe.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_ddcbcf.OrientationAttr.UnmarshalXMLAttr(_eaabe)
			continue
		}
		if _eaabe.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gfbaec, _bdcfa := _eaabe.Value, error(nil)
			if _bdcfa != nil {
				return _bdcfa
			}
			_ddcbcf.PaperHeightAttr = &_gfbaec
			continue
		}
		if _eaabe.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_bdeeb, _aadbd := _eaabe.Value, error(nil)
			if _aadbd != nil {
				return _aadbd
			}
			_ddcbcf.PaperWidthAttr = &_bdeeb
			continue
		}
		if _eaabe.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_abffb, _bdcde := _e.ParseUint(_eaabe.Value, 10, 32)
			if _bdcde != nil {
				return _bdcde
			}
			_dagcc := uint32(_abffb)
			_ddcbcf.FirstPageNumberAttr = &_dagcc
			continue
		}
		if _eaabe.Name.Local == "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_bgda, _gefagb := _e.ParseUint(_eaabe.Value, 10, 32)
			if _gefagb != nil {
				return _gefagb
			}
			_gadf := uint32(_bgda)
			_ddcbcf.FitToHeightAttr = &_gadf
			continue
		}
		if _eaabe.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_abece, _deagdc := _e.ParseBool(_eaabe.Value)
			if _deagdc != nil {
				return _deagdc
			}
			_ddcbcf.UseFirstPageNumberAttr = &_abece
			continue
		}
		if _eaabe.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0073" {
			_ddcbcf.ErrorsAttr.UnmarshalXMLAttr(_eaabe)
			continue
		}
		if _eaabe.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_bgacg, _dcfed := _e.ParseUint(_eaabe.Value, 10, 32)
			if _dcfed != nil {
				return _dcfed
			}
			_abbbf := uint32(_bgacg)
			_ddcbcf.HorizontalDpiAttr = &_abbbf
			continue
		}
		if _eaabe.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_cbaaa, _eadcf := _e.ParseUint(_eaabe.Value, 10, 32)
			if _eadcf != nil {
				return _eadcf
			}
			_dfdce := uint32(_cbaaa)
			_ddcbcf.VerticalDpiAttr = &_dfdce
			continue
		}
		if _eaabe.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_ggcdc, _gdddf := _e.ParseUint(_eaabe.Value, 10, 32)
			if _gdddf != nil {
				return _gdddf
			}
			_eedff := uint32(_ggcdc)
			_ddcbcf.CopiesAttr = &_eedff
			continue
		}
		if _eaabe.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_eddbga, _gcfdf := _e.ParseBool(_eaabe.Value)
			if _gcfdf != nil {
				return _gcfdf
			}
			_ddcbcf.UsePrinterDefaultsAttr = &_eddbga
			continue
		}
	}
	for {
		_gadfg, _dbegd := d.Token()
		if _dbegd != nil {
			return _f.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061g\u0065\u0053\u0065\u0074\u0075\u0070\u003a\u0020\u0025\u0073", _dbegd)
		}
		if _fcfca, _cbcfe := _gadfg.(_b.EndElement); _cbcfe && _fcfca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_decdd *CT_ReviewedRevisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _begec := range start.Attr {
		if _begec.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbcea, _acfbbc := _e.ParseUint(_begec.Value, 10, 32)
			if _acfbbc != nil {
				return _acfbbc
			}
			_gdaab := uint32(_gbcea)
			_decdd.CountAttr = &_gdaab
			continue
		}
	}
_dacdg:
	for {
		_bcfda, _acafc := d.Token()
		if _acafc != nil {
			return _acafc
		}
		switch _efbda := _bcfda.(type) {
		case _b.StartElement:
			switch _efbda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}:
				_cgbg := NewCT_Reviewed()
				if _gbfbge := d.DecodeElement(_cgbg, &_efbda); _gbfbge != nil {
					return _gbfbge
				}
				_decdd.Reviewed = append(_decdd.Reviewed, _cgbg)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _efbda.Name)
				if _debcbd := d.Skip(); _debcbd != nil {
					return _debcbd
				}
			}
		case _b.EndElement:
			break _dacdg
		case _b.CharData:
		}
	}
	return nil
}
func (_daedd ST_SheetState) Validate() error { return _daedd.ValidateWithPath("") }

type CT_OutlinePr struct {

	// Apply Styles in Outline
	ApplyStylesAttr *bool

	// Summary Below
	SummaryBelowAttr *bool

	// Summary Right
	SummaryRightAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool
}

func (_edgee *CT_OleSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _f.Sprintf("\u0025\u0076", _edgee.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewTable() *Table { _aaeffb := &Table{}; _aaeffb.CT_Table = *NewCT_Table(); return _aaeffb }

type CT_ColHierarchiesUsage struct {

	// Items Count
	CountAttr *uint32

	// Column OLAP Hierarchies
	ColHierarchyUsage []*CT_HierarchyUsage
}

// ValidateWithPath validates the CT_MergeCells and its children, prefixing error messages with path
func (_ggceaf *CT_MergeCells) ValidateWithPath(path string) error {
	for _fgdg, _dfceb := range _ggceaf.MergeCell {
		if _acbde := _dfceb.ValidateWithPath(_f.Sprintf("\u0025\u0073/\u004d\u0065\u0072g\u0065\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _fgdg)); _acbde != nil {
			return _acbde
		}
	}
	return nil
}

// Validate validates the CT_ControlPr and its children
func (_cebb *CT_ControlPr) Validate() error {
	return _cebb.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072")
}
func (_afcbc *ST_HtmlFmt) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afcbc = 0
	case "\u006e\u006f\u006e\u0065":
		*_afcbc = 1
	case "\u0072\u0074\u0066":
		*_afcbc = 2
	case "\u0061\u006c\u006c":
		*_afcbc = 3
	}
	return nil
}

type CT_Connection struct {

	// Connection Id
	IdAttr uint32

	// Source Database File
	SourceFileAttr *string

	// Connection File
	OdcFileAttr *string

	// Keep Connection Open
	KeepAliveAttr *bool

	// Automatic Refresh Interval
	IntervalAttr *uint32

	// Connection Name
	NameAttr *string

	// Connection Description
	DescriptionAttr *string

	// Database Source Type
	TypeAttr *uint32

	// Reconnection Method
	ReconnectionMethodAttr *uint32

	// Last Refresh Version
	RefreshedVersionAttr uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// Save Password
	SavePasswordAttr *bool

	// New Connection
	NewAttr *bool

	// Deleted Connection
	DeletedAttr *bool

	// Only Use Connection File
	OnlyUseConnectionFileAttr *bool

	// Background Refresh
	BackgroundAttr *bool

	// Refresh on Open
	RefreshOnLoadAttr *bool

	// Save Data
	SaveDataAttr *bool

	// Reconnection Method
	CredentialsAttr ST_CredMethod

	// SSO Id
	SingleSignOnIdAttr *string

	// Database Properties
	DbPr *CT_DbPr

	// OLAP Properties
	OlapPr *CT_OlapPr

	// Web Query Properties
	WebPr *CT_WebPr

	// Text Import Settings
	TextPr *CT_TextPr

	// Query Parameters
	Parameters *CT_Parameters

	// Future Feature Data Storage
	ExtLst *CT_ExtensionList
}

func (_baeae *CT_Fonts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _deacg := range start.Attr {
		if _deacg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecab, _abgee := _e.ParseUint(_deacg.Value, 10, 32)
			if _abgee != nil {
				return _abgee
			}
			_ggdg := uint32(_ecab)
			_baeae.CountAttr = &_ggdg
			continue
		}
	}
_afbf:
	for {
		_bebg, _fcgec := d.Token()
		if _fcgec != nil {
			return _fcgec
		}
		switch _fgdb := _bebg.(type) {
		case _b.StartElement:
			switch _fgdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_cgga := NewCT_Font()
				if _dgabdf := d.DecodeElement(_cgga, &_fgdb); _dgabdf != nil {
					return _dgabdf
				}
				_baeae.Font = append(_baeae.Font, _cgga)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073\u0020\u0025\u0076", _fgdb.Name)
				if _baac := d.Skip(); _baac != nil {
					return _baac
				}
			}
		case _b.EndElement:
			break _afbf
		case _b.CharData:
		}
	}
	return nil
}
func (_acdebg ST_Scope) String() string {
	switch _acdebg {
	case 0:
		return ""
	case 1:
		return "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case 2:
		return "\u0064\u0061\u0074\u0061"
	case 3:
		return "\u0066\u0069\u0065l\u0064"
	}
	return ""
}
func (_cgfcdf *CT_pivotTableDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgfcdf.Location = NewCT_Location()
	for _, _bedec := range start.Attr {
		if _bedec.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gedcd, _efdd := _e.ParseUint(_bedec.Value, 10, 8)
			if _efdd != nil {
				return _efdd
			}
			_dfedge := uint8(_gedcd)
			_cgfcdf.CreatedVersionAttr = &_dfedge
			continue
		}
		if _bedec.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_bcggg, _cdgge := _e.ParseUint(_bedec.Value, 10, 32)
			if _cdgge != nil {
				return _cdgge
			}
			_cdadfb := uint32(_bcggg)
			_cgfcdf.IndentAttr = &_cdadfb
			continue
		}
		if _bedec.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_begfe, _dgfbc := _bedec.Value, error(nil)
			if _dgfbc != nil {
				return _dgfbc
			}
			_cgfcdf.PivotTableStyleAttr = &_begfe
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_dgbgdbe, _afaeef := _e.ParseBool(_bedec.Value)
			if _afaeef != nil {
				return _afaeef
			}
			_cgfcdf.ShowEmptyRowAttr = &_dgbgdbe
			continue
		}
		if _bedec.Name.Local == "\u0074\u0061\u0067" {
			_egbcae, _debedc := _bedec.Value, error(nil)
			if _debedc != nil {
				return _debedc
			}
			_cgfcdf.TagAttr = &_egbcae
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_ggced, _fgedfc := _e.ParseBool(_bedec.Value)
			if _fgedfc != nil {
				return _fgedfc
			}
			_cgfcdf.ShowEmptyColAttr = &_ggced
			continue
		}
		if _bedec.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_aafbe, _cfed := _e.ParseUint(_bedec.Value, 10, 8)
			if _cfed != nil {
				return _cfed
			}
			_aafab := uint8(_aafbe)
			_cgfcdf.MinRefreshableVersionAttr = &_aafab
			continue
		}
		if _bedec.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_agdg, _fdeeg := _e.ParseBool(_bedec.Value)
			if _fdeeg != nil {
				return _fdeeg
			}
			_cgfcdf.ShowHeadersAttr = &_agdg
			continue
		}
		if _bedec.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_cccabe, _eddcb := _e.ParseBool(_bedec.Value)
			if _eddcb != nil {
				return _eddcb
			}
			_cgfcdf.AsteriskTotalsAttr = &_cccabe
			continue
		}
		if _bedec.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_ddgda, _degbcg := _e.ParseBool(_bedec.Value)
			if _degbcg != nil {
				return _degbcg
			}
			_cgfcdf.CompactAttr = &_ddgda
			continue
		}
		if _bedec.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_bcaad, _caafce := _e.ParseBool(_bedec.Value)
			if _caafce != nil {
				return _caafce
			}
			_cgfcdf.EditDataAttr = &_bcaad
			continue
		}
		if _bedec.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_bfaaf, _eecgc := _e.ParseBool(_bedec.Value)
			if _eecgc != nil {
				return _eecgc
			}
			_cgfcdf.OutlineAttr = &_bfaaf
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_ggadbg, _acgbg := _e.ParseBool(_bedec.Value)
			if _acgbg != nil {
				return _acgbg
			}
			_cgfcdf.ShowCalcMbrsAttr = &_ggadbg
			continue
		}
		if _bedec.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_feeeg, _gfaaf := _e.ParseBool(_bedec.Value)
			if _gfaaf != nil {
				return _gfaaf
			}
			_cgfcdf.OutlineDataAttr = &_feeeg
			continue
		}
		if _bedec.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_adcea, _cecdef := _e.ParseBool(_bedec.Value)
			if _cecdef != nil {
				return _cecdef
			}
			_cgfcdf.GridDropZonesAttr = &_adcea
			continue
		}
		if _bedec.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_effeeg, _cdcbac := _e.ParseBool(_bedec.Value)
			if _cdcbac != nil {
				return _cdcbac
			}
			_cgfcdf.CustomListSortAttr = &_effeeg
			continue
		}
		if _bedec.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_eabca, _afccg := _e.ParseBool(_bedec.Value)
			if _afccg != nil {
				return _afccg
			}
			_cgfcdf.RowGrandTotalsAttr = &_eabca
			continue
		}
		if _bedec.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dfagf, _ecaabg := _e.ParseBool(_bedec.Value)
			if _ecaabg != nil {
				return _ecaabg
			}
			_cgfcdf.ApplyWidthHeightFormatsAttr = &_dfagf
			continue
		}
		if _bedec.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_dfgdd, _fedaa := _e.ParseBool(_bedec.Value)
			if _fedaa != nil {
				return _fedaa
			}
			_cgfcdf.UseAutoFormattingAttr = &_dfgdd
			continue
		}
		if _bedec.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cedgd, _fcbed := _bedec.Value, error(nil)
			if _fcbed != nil {
				return _fcbed
			}
			_cgfcdf.RowHeaderCaptionAttr = &_cedgd
			continue
		}
		if _bedec.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_dcbceee, _bgadc := _e.ParseBool(_bedec.Value)
			if _bgadc != nil {
				return _bgadc
			}
			_cgfcdf.ShowDrillAttr = &_dcbceee
			continue
		}
		if _bedec.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_cabffd, _gfdbb := _e.ParseBool(_bedec.Value)
			if _gfdbb != nil {
				return _gfdbb
			}
			_cgfcdf.MergeItemAttr = &_cabffd
			continue
		}
		if _bedec.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_faefb, _gfdcdb := _e.ParseBool(_bedec.Value)
			if _gfdcdb != nil {
				return _gfdcdb
			}
			_cgfcdf.ApplyBorderFormatsAttr = &_faefb
			continue
		}
		if _bedec.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_fgcfeb, _acbafg := _e.ParseBool(_bedec.Value)
			if _acbafg != nil {
				return _acbafg
			}
			_cgfcdf.VisualTotalsAttr = &_fgcfeb
			continue
		}
		if _bedec.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_fdfab, _ggbfcg := _e.ParseBool(_bedec.Value)
			if _ggbfcg != nil {
				return _ggbfcg
			}
			_cgfcdf.CompactDataAttr = &_fdfab
			continue
		}
		if _bedec.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cgcdf, _afacb := _e.ParseUint(_bedec.Value, 10, 32)
			if _afacb != nil {
				return _afacb
			}
			_beaee := uint32(_cgcdf)
			_cgfcdf.DataPositionAttr = &_beaee
			continue
		}
		if _bedec.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_dgfcb, _bcfed := _e.ParseBool(_bedec.Value)
			if _bcfed != nil {
				return _bcfed
			}
			_cgfcdf.MultipleFieldFiltersAttr = &_dgfcb
			continue
		}
		if _bedec.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_dbcgd, _cgaga := _e.ParseBool(_bedec.Value)
			if _cgaga != nil {
				return _cgaga
			}
			_cgfcdf.PageOverThenDownAttr = &_dbcgd
			continue
		}
		if _bedec.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_agcddc, _agbed := _e.ParseBool(_bedec.Value)
			if _agbed != nil {
				return _agbed
			}
			_cgfcdf.FieldListSortAscendingAttr = &_agcddc
			continue
		}
		if _bedec.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_cfacf, _cbedf := _e.ParseBool(_bedec.Value)
			if _cbedf != nil {
				return _cbedf
			}
			_cgfcdf.ShowMissingAttr = &_cfacf
			continue
		}
		if _bedec.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_gbdgb, _fffef := _e.ParseBool(_bedec.Value)
			if _fffef != nil {
				return _fffef
			}
			_cgfcdf.FieldPrintTitlesAttr = &_gbdgb
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_gdbdca, _bbcbf := _e.ParseBool(_bedec.Value)
			if _bbcbf != nil {
				return _bbcbf
			}
			_cgfcdf.ShowMemberPropertyTipsAttr = &_gdbdca
			continue
		}
		if _bedec.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_aaffdb, _cbcfa := _bedec.Value, error(nil)
			if _cbcfa != nil {
				return _cbcfa
			}
			_cgfcdf.PageStyleAttr = &_aaffdb
			continue
		}
		if _bedec.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_cdgca, _efacce := _e.ParseUint(_bedec.Value, 10, 32)
			if _efacce != nil {
				return _efacce
			}
			_bgacb := uint32(_cdgca)
			_cgfcdf.AutoFormatIdAttr = &_bgacb
			continue
		}
		if _bedec.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_edbece, _dgbac := _e.ParseBool(_bedec.Value)
			if _dgbac != nil {
				return _dgbac
			}
			_cgfcdf.ShowItemsAttr = &_edbece
			continue
		}
		if _bedec.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dcggdf, _edcffa := _e.ParseBool(_bedec.Value)
			if _edcffa != nil {
				return _edcffa
			}
			_cgfcdf.ApplyPatternFormatsAttr = &_dcggdf
			continue
		}
		if _bedec.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_bbcgga, _babcg := _e.ParseBool(_bedec.Value)
			if _babcg != nil {
				return _babcg
			}
			_cgfcdf.EnableFieldPropertiesAttr = &_bbcgga
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_efacgf, _cgcgda := _e.ParseBool(_bedec.Value)
			if _cgcgda != nil {
				return _cgcgda
			}
			_cgfcdf.ShowMultipleLabelAttr = &_efacgf
			continue
		}
		if _bedec.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_baadc, _bdbgf := _e.ParseBool(_bedec.Value)
			if _bdbgf != nil {
				return _bdbgf
			}
			_cgfcdf.PreserveFormattingAttr = &_baadc
			continue
		}
		if _bedec.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_begccb, _aafbed := _e.ParseBool(_bedec.Value)
			if _aafbed != nil {
				return _aafbed
			}
			_cgfcdf.PublishedAttr = &_begccb
			continue
		}
		if _bedec.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_cdfac, _edcfd := _bedec.Value, error(nil)
			if _edcfd != nil {
				return _edcfd
			}
			_cgfcdf.MissingCaptionAttr = &_cdfac
			continue
		}
		if _bedec.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_aabfba, _edabb := _e.ParseBool(_bedec.Value)
			if _edabb != nil {
				return _edabb
			}
			_cgfcdf.ImmersiveAttr = &_aabfba
			continue
		}
		if _bedec.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_cgdgc, _ddfgc := _e.ParseUint(_bedec.Value, 10, 32)
			if _ddfgc != nil {
				return _ddfgc
			}
			_eabfe := uint32(_cgdgc)
			_cgfcdf.PageWrapAttr = &_eabfe
			continue
		}
		if _bedec.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_aebba, _cebgf := _e.ParseUint(_bedec.Value, 10, 32)
			if _cebgf != nil {
				return _cebgf
			}
			_caffb := uint32(_aebba)
			_cgfcdf.ChartFormatAttr = &_caffb
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_ddgdd, _afecd := _e.ParseBool(_bedec.Value)
			if _afecd != nil {
				return _afecd
			}
			_cgfcdf.ShowDataDropDownAttr = &_ddgdd
			continue
		}
		if _bedec.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ecfbd, _beacd := _bedec.Value, error(nil)
			if _beacd != nil {
				return _beacd
			}
			_cgfcdf.ColHeaderCaptionAttr = &_ecfbd
			continue
		}
		if _bedec.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_faafaa, _bbaca := _e.ParseBool(_bedec.Value)
			if _bbaca != nil {
				return _bbaca
			}
			_cgfcdf.SubtotalHiddenItemsAttr = &_faafaa
			continue
		}
		if _bedec.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_fgbcg, _bdccc := _e.ParseBool(_bedec.Value)
			if _bdccc != nil {
				return _bdccc
			}
			_cgfcdf.MdxSubqueriesAttr = &_fgbcg
			continue
		}
		if _bedec.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cdacf, _ffega := _bedec.Value, error(nil)
			if _ffega != nil {
				return _ffega
			}
			_cgfcdf.ErrorCaptionAttr = &_cdacf
			continue
		}
		if _bedec.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_eedfc, _dfcbg := _e.ParseBool(_bedec.Value)
			if _dfcbg != nil {
				return _dfcbg
			}
			_cgfcdf.ColGrandTotalsAttr = &_eedfc
			continue
		}
		if _bedec.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_adbfc, _affdd := _e.ParseBool(_bedec.Value)
			if _affdd != nil {
				return _affdd
			}
			_cgfcdf.PrintDrillAttr = &_adbfc
			continue
		}
		if _bedec.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_afece, _gcebd := _e.ParseBool(_bedec.Value)
			if _gcebd != nil {
				return _gcebd
			}
			_cgfcdf.ItemPrintTitlesAttr = &_afece
			continue
		}
		if _bedec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gccfea, _gbedcf := _bedec.Value, error(nil)
			if _gbedcf != nil {
				return _gbedcf
			}
			_cgfcdf.NameAttr = _gccfea
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_gffg, _ddgddc := _e.ParseBool(_bedec.Value)
			if _ddgddc != nil {
				return _ddgddc
			}
			_cgfcdf.ShowDropZonesAttr = &_gffg
			continue
		}
		if _bedec.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_ffbcc, _gcegd := _e.ParseBool(_bedec.Value)
			if _gcegd != nil {
				return _gcegd
			}
			_cgfcdf.ShowDataTipsAttr = &_ffbcc
			continue
		}
		if _bedec.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_beaeb, _bgfaf := _bedec.Value, error(nil)
			if _bgfaf != nil {
				return _bgfaf
			}
			_cgfcdf.VacatedStyleAttr = &_beaeb
			continue
		}
		if _bedec.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_effgd, _gegfg := _bedec.Value, error(nil)
			if _gegfg != nil {
				return _gegfg
			}
			_cgfcdf.GrandTotalCaptionAttr = &_effgd
			continue
		}
		if _bedec.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_geeeg, _deacc := _e.ParseBool(_bedec.Value)
			if _deacc != nil {
				return _deacc
			}
			_cgfcdf.ApplyNumberFormatsAttr = &_geeeg
			continue
		}
		if _bedec.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_daaeb, _ccceb := _e.ParseBool(_bedec.Value)
			if _ccceb != nil {
				return _ccceb
			}
			_cgfcdf.EnableDrillAttr = &_daaeb
			continue
		}
		if _bedec.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ecebe, _egfgdc := _e.ParseBool(_bedec.Value)
			if _egfgdc != nil {
				return _egfgdc
			}
			_cgfcdf.ApplyFontFormatsAttr = &_ecebe
			continue
		}
		if _bedec.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_ccbae, _gdebe := _e.ParseBool(_bedec.Value)
			if _gdebe != nil {
				return _gdebe
			}
			_cgfcdf.DisableFieldListAttr = &_ccbae
			continue
		}
		if _bedec.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eaaga, _dbagd := _e.ParseBool(_bedec.Value)
			if _dbagd != nil {
				return _dbagd
			}
			_cgfcdf.ApplyAlignmentFormatsAttr = &_eaaga
			continue
		}
		if _bedec.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_baccd, _eggdfb := _e.ParseBool(_bedec.Value)
			if _eggdfb != nil {
				return _eggdfb
			}
			_cgfcdf.DataOnRowsAttr = &_baccd
			continue
		}
		if _bedec.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bfbbbb, _ageae := _bedec.Value, error(nil)
			if _ageae != nil {
				return _ageae
			}
			_cgfcdf.DataCaptionAttr = _bfbbbb
			continue
		}
		if _bedec.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_gebfeg, _gecce := _e.ParseBool(_bedec.Value)
			if _gecce != nil {
				return _gecce
			}
			_cgfcdf.ShowErrorAttr = &_gebfeg
			continue
		}
		if _bedec.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_feedd, _dedbcc := _e.ParseUint(_bedec.Value, 10, 32)
			if _dedbcc != nil {
				return _dedbcc
			}
			_cgfcdf.CacheIdAttr = uint32(_feedd)
			continue
		}
		if _bedec.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_bggba, _fbfeca := _e.ParseBool(_bedec.Value)
			if _fbfeca != nil {
				return _fbfeca
			}
			_cgfcdf.EnableWizardAttr = &_bggba
			continue
		}
		if _bedec.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gfbbg, _ffbac := _e.ParseUint(_bedec.Value, 10, 8)
			if _ffbac != nil {
				return _ffbac
			}
			_ddbacdf := uint8(_gfbbg)
			_cgfcdf.UpdatedVersionAttr = &_ddbacdf
			continue
		}
	}
_ddfcbc:
	for {
		_dabee, _dcfba := d.Token()
		if _dcfba != nil {
			return _dcfba
		}
		switch _ecfdb := _dabee.(type) {
		case _b.StartElement:
			switch _ecfdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _adeegd := d.DecodeElement(_cgfcdf.Location, &_ecfdb); _adeegd != nil {
					return _adeegd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cgfcdf.PivotFields = NewCT_PivotFields()
				if _eabeba := d.DecodeElement(_cgfcdf.PivotFields, &_ecfdb); _eabeba != nil {
					return _eabeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_cgfcdf.RowFields = NewCT_RowFields()
				if _ffdaa := d.DecodeElement(_cgfcdf.RowFields, &_ecfdb); _ffdaa != nil {
					return _ffdaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_cgfcdf.RowItems = NewCT_rowItems()
				if _afgeg := d.DecodeElement(_cgfcdf.RowItems, &_ecfdb); _afgeg != nil {
					return _afgeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_cgfcdf.ColFields = NewCT_ColFields()
				if _fffebe := d.DecodeElement(_cgfcdf.ColFields, &_ecfdb); _fffebe != nil {
					return _fffebe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_cgfcdf.ColItems = NewCT_colItems()
				if _gbdfae := d.DecodeElement(_cgfcdf.ColItems, &_ecfdb); _gbdfae != nil {
					return _gbdfae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cgfcdf.PageFields = NewCT_PageFields()
				if _efffb := d.DecodeElement(_cgfcdf.PageFields, &_ecfdb); _efffb != nil {
					return _efffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cgfcdf.DataFields = NewCT_DataFields()
				if _bcacdb := d.DecodeElement(_cgfcdf.DataFields, &_ecfdb); _bcacdb != nil {
					return _bcacdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_cgfcdf.Formats = NewCT_Formats()
				if _eddbfg := d.DecodeElement(_cgfcdf.Formats, &_ecfdb); _eddbfg != nil {
					return _eddbfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_cgfcdf.ConditionalFormats = NewCT_ConditionalFormats()
				if _effaf := d.DecodeElement(_cgfcdf.ConditionalFormats, &_ecfdb); _effaf != nil {
					return _effaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_cgfcdf.ChartFormats = NewCT_ChartFormats()
				if _cadcg := d.DecodeElement(_cgfcdf.ChartFormats, &_ecfdb); _cadcg != nil {
					return _cadcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_cgfcdf.PivotHierarchies = NewCT_PivotHierarchies()
				if _dbefgc := d.DecodeElement(_cgfcdf.PivotHierarchies, &_ecfdb); _dbefgc != nil {
					return _dbefgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_cgfcdf.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _bcddf := d.DecodeElement(_cgfcdf.PivotTableStyleInfo, &_ecfdb); _bcddf != nil {
					return _bcddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_cgfcdf.Filters = NewCT_PivotFilters()
				if _aacfc := d.DecodeElement(_cgfcdf.Filters, &_ecfdb); _aacfc != nil {
					return _aacfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_cgfcdf.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _aagbee := d.DecodeElement(_cgfcdf.RowHierarchiesUsage, &_ecfdb); _aagbee != nil {
					return _aagbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_cgfcdf.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _aaddf := d.DecodeElement(_cgfcdf.ColHierarchiesUsage, &_ecfdb); _aaddf != nil {
					return _aaddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgfcdf.ExtLst = NewCT_ExtensionList()
				if _bbebgcg := d.DecodeElement(_cgfcdf.ExtLst, &_ecfdb); _bbebgcg != nil {
					return _bbebgcg
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _ecfdb.Name)
				if _gbgafg := d.Skip(); _gbgafg != nil {
					return _gbgafg
				}
			}
		case _b.EndElement:
			break _ddfcbc
		case _b.CharData:
		}
	}
	return nil
}

type CT_UndoInfo struct {

	// Index
	IndexAttr uint32

	// Expression
	ExpAttr ST_FormulaExpression

	// Reference 3D
	Ref3DAttr *bool

	// Array Formula
	ArrayAttr *bool

	// Value Needed
	VAttr *bool

	// Defined Name Formula
	NfAttr *bool

	// Cross Sheet Move
	CsAttr *bool

	// Range
	DrAttr string

	// Defined Name
	DnAttr *string

	// Cell Reference
	RAttr *string

	// Sheet Id
	SIdAttr *uint32
}
type CT_Control struct {

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      string

	// Control Name
	NameAttr *string

	// Embedded Control Properties
	ControlPr *CT_ControlPr
}

func (_eaefaf ST_TableStyleType) String() string {
	switch _eaefaf {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case 2:
		return "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case 3:
		return "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 4:
		return "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 5:
		return "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 6:
		return "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case 7:
		return "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case 8:
		return "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case 9:
		return "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case 10:
		return "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case 11:
		return "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case 12:
		return "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case 13:
		return "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case 14:
		return "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 15:
		return "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case 16:
		return "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 17:
		return "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 18:
		return "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case 19:
		return "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 20:
		return "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case 21:
		return "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 22:
		return "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case 23:
		return "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 24:
		return "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 25:
		return "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case 26:
		return "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 27:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case 28:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

type Workbook struct{ CT_Workbook }

func (_cgfg *CT_CacheSource) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_deaf, _dfd := _cgfg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _dfd != nil {
		return _dfd
	}
	start.Attr = append(start.Attr, _deaf)
	if _cgfg.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _f.Sprintf("\u0025\u0076", *_cgfg.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _cgfg.WorksheetSource != nil {
		_dggb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065"}}
		e.EncodeElement(_cgfg.WorksheetSource, _dggb)
	}
	if _cgfg.Consolidation != nil {
		_fccb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cgfg.Consolidation, _fccb)
	}
	if _cgfg.ExtLst != nil {
		_eaba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgfg.ExtLst, _eaba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_rowItems and its children
func (_beebg *CT_rowItems) Validate() error {
	return _beebg.ValidateWithPath("C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073")
}
func NewCT_CellStyle() *CT_CellStyle { _bbee := &CT_CellStyle{}; return _bbee }

// Validate validates the CT_PCDKPI and its children
func (_aaef *CT_PCDKPI) Validate() error {
	return _aaef.ValidateWithPath("\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I")
}
func NewCT_ExternalBook() *CT_ExternalBook { _cfdbg := &CT_ExternalBook{}; return _cfdbg }

type CT_Error struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls *CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

// ValidateWithPath validates the CT_XStringElement and its children, prefixing error messages with path
func (_eabdf *CT_XStringElement) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CustomChartsheetView and its children
func (_ffba *CT_CustomChartsheetView) Validate() error {
	return _ffba.ValidateWithPath("\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

type CT_CalcPr struct {

	// Calculation Id
	CalcIdAttr *uint32

	// Calculation Mode
	CalcModeAttr ST_CalcMode

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool

	// Reference Mode
	RefModeAttr ST_RefMode

	// Calculation Iteration
	IterateAttr *bool

	// Iteration Count
	IterateCountAttr *uint32

	// Iterative Calculation Delta
	IterateDeltaAttr *float64

	// Full Precision Calculation
	FullPrecisionAttr *bool

	// Calc Completed
	CalcCompletedAttr *bool

	// Calculate On Save
	CalcOnSaveAttr *bool

	// Concurrent Calculations
	ConcurrentCalcAttr *bool

	// Concurrent Thread Manual Count
	ConcurrentManualCountAttr *uint32

	// Force Full Calculation
	ForceFullCalcAttr *bool
}
type ST_DdeValueType byte

func (_gcadde *CT_RevisionMove) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eccefc := range start.Attr {
		if _eccefc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ecacc, _aaefe := _e.ParseUint(_eccefc.Value, 10, 32)
			if _aaefe != nil {
				return _aaefe
			}
			_gcadde.SheetIdAttr = uint32(_ecacc)
			continue
		}
		if _eccefc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065" {
			_cecef, _adagbg := _eccefc.Value, error(nil)
			if _adagbg != nil {
				return _adagbg
			}
			_gcadde.SourceAttr = _cecef
			continue
		}
		if _eccefc.Name.Local == "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e" {
			_bdeag, _fcfcb := _eccefc.Value, error(nil)
			if _fcfcb != nil {
				return _fcfcb
			}
			_gcadde.DestinationAttr = _bdeag
			continue
		}
		if _eccefc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_bafgd, _cdgbe := _e.ParseUint(_eccefc.Value, 10, 32)
			if _cdgbe != nil {
				return _cdgbe
			}
			_gcfff := uint32(_bafgd)
			_gcadde.SourceSheetIdAttr = &_gcfff
			continue
		}
		if _eccefc.Name.Local == "\u0072\u0049\u0064" {
			_cagga, _gaade := _e.ParseUint(_eccefc.Value, 10, 32)
			if _gaade != nil {
				return _gaade
			}
			_edebe := uint32(_cagga)
			_gcadde.RIdAttr = &_edebe
			continue
		}
		if _eccefc.Name.Local == "\u0075\u0061" {
			_gfgdgb, _efded := _e.ParseBool(_eccefc.Value)
			if _efded != nil {
				return _efded
			}
			_gcadde.UaAttr = &_gfgdgb
			continue
		}
		if _eccefc.Name.Local == "\u0072\u0061" {
			_ffdbe, _fbeeb := _e.ParseBool(_eccefc.Value)
			if _fbeeb != nil {
				return _fbeeb
			}
			_gcadde.RaAttr = &_ffdbe
			continue
		}
	}
_cadbc:
	for {
		_cdddb, _cbbebg := d.Token()
		if _cbbebg != nil {
			return _cbbebg
		}
		switch _fccgac := _cdddb.(type) {
		case _b.StartElement:
			switch _fccgac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_bbggd := NewCT_UndoInfo()
				if _cgffb := d.DecodeElement(_bbggd, &_fccgac); _cgffb != nil {
					return _cgffb
				}
				_gcadde.Undo = append(_gcadde.Undo, _bbggd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_ebbae := NewCT_RevisionCellChange()
				if _adecb := d.DecodeElement(_ebbae, &_fccgac); _adecb != nil {
					return _adecb
				}
				_gcadde.Rcc = append(_gcadde.Rcc, _ebbae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_cbffc := NewCT_RevisionFormatting()
				if _ebfaag := d.DecodeElement(_cbffc, &_fccgac); _ebfaag != nil {
					return _ebfaag
				}
				_gcadde.Rfmt = append(_gcadde.Rfmt, _cbffc)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0020\u0025\u0076", _fccgac.Name)
				if _fgbgde := d.Skip(); _fgbgde != nil {
					return _fgbgde
				}
			}
		case _b.EndElement:
			break _cadbc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WorksheetSource and its children, prefixing error messages with path
func (_ffddd *CT_WorksheetSource) ValidateWithPath(path string) error { return nil }
func (_gbcb *CT_CellProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbcb.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbcb.LockedAttr))})
	}
	if _gbcb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _f.Sprintf("\u0025\u0064", _dfebbb(*_gbcb.HiddenAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gedebe ST_FilterOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_afcfg := _b.Attr{}
	_afcfg.Name = name
	switch _gedebe {
	case ST_FilterOperatorUnset:
		_afcfg.Value = ""
	case ST_FilterOperatorEqual:
		_afcfg.Value = "\u0065\u0071\u0075a\u006c"
	case ST_FilterOperatorLessThan:
		_afcfg.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_FilterOperatorLessThanOrEqual:
		_afcfg.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorNotEqual:
		_afcfg.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThanOrEqual:
		_afcfg.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThan:
		_afcfg.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return _afcfg, nil
}

type CT_PivotHierarchies struct {

	// OLAP Hierarchy Count
	CountAttr *uint32

	// OLAP Hierarchy
	PivotHierarchy []*CT_PivotHierarchy
}

func (_dfdgf ST_PhoneticAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfdgf.String(), start)
}
func (_cecca *CT_Dxf) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdaeg:
	for {
		_dgbbb, _bgdeb := d.Token()
		if _bgdeb != nil {
			return _bgdeb
		}
		switch _bgcef := _dgbbb.(type) {
		case _b.StartElement:
			switch _bgcef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_cecca.Font = NewCT_Font()
				if _ebbfa := d.DecodeElement(_cecca.Font, &_bgcef); _ebbfa != nil {
					return _ebbfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_cecca.NumFmt = NewCT_NumFmt()
				if _fbbae := d.DecodeElement(_cecca.NumFmt, &_bgcef); _fbbae != nil {
					return _fbbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_cecca.Fill = NewCT_Fill()
				if _dgcf := d.DecodeElement(_cecca.Fill, &_bgcef); _dgcf != nil {
					return _dgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_cecca.Alignment = NewCT_CellAlignment()
				if _dggef := d.DecodeElement(_cecca.Alignment, &_bgcef); _dggef != nil {
					return _dggef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_cecca.Border = NewCT_Border()
				if _ddfgd := d.DecodeElement(_cecca.Border, &_bgcef); _ddfgd != nil {
					return _ddfgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cecca.Protection = NewCT_CellProtection()
				if _gccdc := d.DecodeElement(_cecca.Protection, &_bgcef); _gccdc != nil {
					return _gccdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cecca.ExtLst = NewCT_ExtensionList()
				if _aedb := d.DecodeElement(_cecca.ExtLst, &_bgcef); _aedb != nil {
					return _aedb
				}
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0078\u0066\u0020\u0025\u0076", _bgcef.Name)
				if _egaee := d.Skip(); _egaee != nil {
					return _egaee
				}
			}
		case _b.EndElement:
			break _gdaeg
		case _b.CharData:
		}
	}
	return nil
}

type CT_Tables struct {

	// Count of Tables
	CountAttr *uint32

	// No Value
	M []*CT_TableMissing

	// Character Value
	S []*CT_XStringElement

	// Index
	X []*CT_Index
}

// ValidateWithPath validates the CT_ChartFormat and its children, prefixing error messages with path
func (_aff *CT_ChartFormat) ValidateWithPath(path string) error {
	if _ecdc := _aff.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _ecdc != nil {
		return _ecdc
	}
	return nil
}
func (_gdbf *CT_CommentPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdbf.Anchor = NewCT_ObjectAnchor()
	for _, _gdcd := range start.Attr {
		if _gdcd.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_ddge, _facc := _gdcd.Value, error(nil)
			if _facc != nil {
				return _facc
			}
			_gdbf.AltTextAttr = &_ddge
			continue
		}
		if _gdcd.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_gdcc, _ged := _e.ParseBool(_gdcd.Value)
			if _ged != nil {
				return _ged
			}
			_gdbf.DefaultSizeAttr = &_gdcc
			continue
		}
		if _gdcd.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_cdaeb, _gffe := _e.ParseBool(_gdcd.Value)
			if _gffe != nil {
				return _gffe
			}
			_gdbf.PrintAttr = &_cdaeb
			continue
		}
		if _gdcd.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_bbaa, _gadg := _e.ParseBool(_gdcd.Value)
			if _gadg != nil {
				return _gadg
			}
			_gdbf.DisabledAttr = &_bbaa
			continue
		}
		if _gdcd.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_cdcg, _acge := _e.ParseBool(_gdcd.Value)
			if _acge != nil {
				return _acge
			}
			_gdbf.AutoFillAttr = &_cdcg
			continue
		}
		if _gdcd.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_cbgg, _facd := _e.ParseBool(_gdcd.Value)
			if _facd != nil {
				return _facd
			}
			_gdbf.AutoLineAttr = &_cbgg
			continue
		}
		if _gdcd.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_dfbc, _gfff := _e.ParseBool(_gdcd.Value)
			if _gfff != nil {
				return _gfff
			}
			_gdbf.LockedAttr = &_dfbc
			continue
		}
		if _gdcd.Name.Local == "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e" {
			_gdbf.TextHAlignAttr.UnmarshalXMLAttr(_gdcd)
			continue
		}
		if _gdcd.Name.Local == "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e" {
			_gdbf.TextVAlignAttr.UnmarshalXMLAttr(_gdcd)
			continue
		}
		if _gdcd.Name.Local == "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074" {
			_faff, _cagca := _e.ParseBool(_gdcd.Value)
			if _cagca != nil {
				return _cagca
			}
			_gdbf.LockTextAttr = &_faff
			continue
		}
		if _gdcd.Name.Local == "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X" {
			_gegf, _bfgf := _e.ParseBool(_gdcd.Value)
			if _bfgf != nil {
				return _bfgf
			}
			_gdbf.JustLastXAttr = &_gegf
			continue
		}
		if _gdcd.Name.Local == "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce" {
			_fcfedd, _afcd := _e.ParseBool(_gdcd.Value)
			if _afcd != nil {
				return _afcd
			}
			_gdbf.AutoScaleAttr = &_fcfedd
			continue
		}
	}
_fdag:
	for {
		_bafd, _aged := d.Token()
		if _aged != nil {
			return _aged
		}
		switch _acggf := _bafd.(type) {
		case _b.StartElement:
			switch _acggf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _eeaa := d.DecodeElement(_gdbf.Anchor, &_acggf); _eeaa != nil {
					return _eeaa
				}
			default:
				_d.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006dm\u0065\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _acggf.Name)
				if _gbag := d.Skip(); _gbag != nil {
					return _gbag
				}
			}
		case _b.EndElement:
			break _fdag
		case _b.CharData:
		}
	}
	return nil
}
func (_ffacdg *CT_VolTopic) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffacdg.TAttr != ST_VolValueTypeUnset {
		_dbgbf, _fdgfbe := _ffacdg.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _fdgfbe != nil {
			return _fdgfbe
		}
		start.Attr = append(start.Attr, _dbgbf)
	}
	e.EncodeToken(start)
	_eebgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
	_d.AddPreserveSpaceAttr(&_eebgf, _ffacdg.V)
	e.EncodeElement(_ffacdg.V, _eebgf)
	if _ffacdg.Stp != nil {
		_adacf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0070"}}
		for _, _gfdfb := range _ffacdg.Stp {
			e.EncodeElement(_gfdfb, _adacf)
		}
	}
	_abbbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0072"}}
	for _, _gbcbb := range _ffacdg.Tr {
		e.EncodeElement(_gbcbb, _abbbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eeega *CT_DiscretePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eeega.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _f.Sprintf("\u0025\u0076", *_eeega.CountAttr)})
	}
	e.EncodeToken(start)
	_beeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
	for _, _fcgda := range _eeega.X {
		e.EncodeElement(_fcgda, _beeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ceac *CT_CellStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggfff := range start.Attr {
		if _ggfff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfg, _gbba := _e.ParseUint(_ggfff.Value, 10, 32)
			if _gbba != nil {
				return _gbba
			}
			_gbaa := uint32(_bfg)
			_ceac.CountAttr = &_gbaa
			continue
		}
	}
_gccg:
	for {
		_ecgf, _ddga := d.Token()
		if _ddga != nil {
			return _ddga
		}
		switch _dagd := _ecgf.(type) {
		case _b.StartElement:
			switch _dagd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}:
				_faaf := NewCT_CellStyle()
				if _abdd := d.DecodeElement(_faaf, &_dagd); _abdd != nil {
					return _abdd
				}
				_ceac.CellStyle = append(_ceac.CellStyle, _faaf)
			default:
				_d.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043e\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _dagd.Name)
				if _bceb := d.Skip(); _bceb != nil {
					return _bceb
				}
			}
		case _b.EndElement:
			break _gccg
		case _b.CharData:
		}
	}
	return nil
}
func init() {
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_AutoFilter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e", NewCT_FilterColumn)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_Filters)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r", NewCT_Filter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_CustomFilters)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_CustomFilter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030", NewCT_Top10)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072", NewCT_ColorFilter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_IconFilter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_DynamicFilter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065", NewCT_SortState)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e", NewCT_SortCondition)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d", NewCT_DateGroupItem)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074", NewCT_XStringElement)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_ObjectAnchor)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e", NewCT_CalcChain)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c", NewCT_CalcCell)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewCT_Comments)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073", NewCT_Authors)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072", NewCT_CommentPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f", NewCT_MapInfo)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0063\u0068\u0065\u006da", NewCT_Schema)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070", NewCT_Map)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067", NewCT_DataBinding)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073", NewCT_Connections)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0062\u0050\u0072", NewCT_DbPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r", NewCT_OlapPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072", NewCT_WebPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073", NewCT_Parameters)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072", NewCT_Parameter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s", NewCT_Tables)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_TableMissing)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r", NewCT_TextPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_TextFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_PivotCacheDefinition)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073", NewCT_CacheFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_CacheField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065", NewCT_CacheSource)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065", NewCT_WorksheetSource)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e", NewCT_Consolidation)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073", NewCT_Pages)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065", NewCT_PCDSCPage)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d", NewCT_PageItem)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073", NewCT_RangeSets)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074", NewCT_RangeSet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073", NewCT_SharedItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_Missing)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r", NewCT_Number)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072", NewCT_Error)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065", NewCT_DateTime)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070", NewCT_FieldGroup)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072", NewCT_RangePr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072", NewCT_DiscretePr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073", NewCT_GroupItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073", NewCT_PivotCacheRecords)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d", NewCT_Record)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073", NewCT_PCDKPIs)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I", NewCT_PCDKPI)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_CacheHierarchies)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_CacheHierarchy)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065", NewCT_FieldsUsage)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065", NewCT_FieldUsage)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073", NewCT_GroupLevels)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c", NewCT_GroupLevel)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s", NewCT_Groups)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070", NewCT_LevelGroup)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_GroupMembers)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072", NewCT_GroupMember)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065", NewCT_TupleCache)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074", NewCT_ServerFormat)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ServerFormats)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073", NewCT_PCDSDTCEntries)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s", NewCT_Tuples)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065", NewCT_Tuple)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0065\u0074\u0073", NewCT_Sets)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0065\u0074", NewCT_Set)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065", NewCT_QueryCache)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079", NewCT_Query)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073", NewCT_CalculatedItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d", NewCT_CalculatedItem)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073", NewCT_CalculatedMembers)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072", NewCT_CalculatedMember)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_pivotTableDefinition)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e", NewCT_Location)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073", NewCT_PivotFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_PivotField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065", NewCT_AutoSortScope)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073", NewCT_Items)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u0074\u0065\u006d", NewCT_Item)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_PageFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_PageField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_DataFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064", NewCT_DataField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073", NewCT_rowItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073", NewCT_colItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049", NewCT_I)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058", NewCT_X)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_RowFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_ColFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064", NewCT_Field)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_Formats)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t", NewCT_Format)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ConditionalFormats)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074", NewCT_ConditionalFormat)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073", NewCT_PivotAreas)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ChartFormats)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074", NewCT_ChartFormat)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_PivotHierarchies)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_PivotHierarchy)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_RowHierarchiesUsage)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_ColHierarchiesUsage)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065", NewCT_HierarchyUsage)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_MemberProperties)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_MemberProperty)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_Members)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r", NewCT_Member)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073", NewCT_Dimensions)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_PivotDimension)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073", NewCT_MeasureGroups)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073", NewCT_MeasureDimensionMaps)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070", NewCT_MeasureGroup)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070", NewCT_MeasureDimensionMap)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065", NewCT_PivotTableStyle)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_PivotFilters)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072", NewCT_PivotFilter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061", NewCT_PivotArea)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073", NewCT_PivotAreaReferences)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_PivotAreaReference)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078", NewCT_Index)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewCT_QueryTable)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068", NewCT_QueryTableRefresh)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073", NewCT_QueryTableDeletedFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064", NewCT_DeletedField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_QueryTableFields)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064", NewCT_QueryTableField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0073\u0074", NewCT_Sst)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e", NewCT_PhoneticRun)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0045\u006c\u0074", NewCT_RElt)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct", NewCT_RPrElt)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0073\u0074", NewCT_Rst)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072", NewCT_PhoneticPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073", NewCT_RevisionHeaders)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073", NewCT_Revisions)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072", NewCT_RevisionHeader)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070", NewCT_SheetIdMap)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064", NewCT_SheetId)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073", NewCT_ReviewedRevisions)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064", NewCT_Reviewed)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f", NewCT_UndoInfo)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e", NewCT_RevisionRowColumn)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065", NewCT_RevisionMove)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077", NewCT_RevisionCustomView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065", NewCT_RevisionSheetRename)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074", NewCT_RevisionInsertSheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065", NewCT_RevisionCellChange)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_RevisionFormatting)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg", NewCT_RevisionAutoFormatting)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074", NewCT_RevisionComment)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_RevisionDefinedName)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074", NewCT_RevisionConflict)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064", NewCT_RevisionQueryTableField)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073", NewCT_Users)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072", NewCT_SharedUser)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074", NewCT_Macrosheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074", NewCT_Dialogsheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074", NewCT_Worksheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061", NewCT_SheetData)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072", NewCT_SheetCalcPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072", NewCT_SheetFormatPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u0073", NewCT_Cols)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c", NewCT_Col)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u006f\u0077", NewCT_Row)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c", NewCT_Cell)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_SheetPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_SheetDimension)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_SheetViews)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_SheetView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u006e\u0065", NewCT_Pane)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_PivotSelection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Selection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_PageBreak)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b", NewCT_Break)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072", NewCT_OutlinePr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072", NewCT_PageSetUpPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065", NewCT_DataConsolidate)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073", NewCT_DataRefs)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066", NewCT_DataRef)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073", NewCT_MergeCells)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c", NewCT_MergeCell)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_CellSmartTags)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067", NewCT_CellSmartTag)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072", NewCT_CellSmartTagPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_LegacyDrawing)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046", NewCT_DrawingHF)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomSheetViews)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077", NewCT_CustomSheetView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073", NewCT_DataValidations)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e", NewCT_DataValidation)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_ConditionalFormatting)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce", NewCT_CfRule)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073", NewCT_Hyperlinks)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061", NewCT_CellFormula)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065", NewCT_ColorScale)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072", NewCT_DataBar)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074", NewCT_IconSet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0076\u006f", NewCT_Cfvo)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073", NewCT_PageMargins)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073", NewCT_PrintOptions)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070", NewCT_PageSetup)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073", NewCT_Scenarios)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e", NewCT_SheetProtection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073", NewCT_ProtectedRanges)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065", NewCT_ProtectedRange)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f", NewCT_Scenario)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073", NewCT_InputCells)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073", NewCT_CellWatches)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068", NewCT_CellWatch)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewCT_Chartsheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_ChartsheetPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073", NewCT_ChartsheetViews)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077", NewCT_ChartsheetView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_ChartsheetProtection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070", NewCT_CsPageSetup)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomChartsheetViews)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_CustomChartsheetView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CustomProperties)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_CustomProperty)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073", NewCT_OleObjects)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072", NewCT_ObjectPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073", NewCT_WebPublishItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d", NewCT_WebPublishItem)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073", NewCT_Controls)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072", NewCT_ControlPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073", NewCT_IgnoredErrors)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072", NewCT_IgnoredError)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073", NewCT_TableParts)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074", NewCT_TablePart)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewCT_Metadata)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073", NewCT_MetadataTypes)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065", NewCT_MetadataType)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073", NewCT_MetadataBlocks)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b", NewCT_MetadataBlock)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064", NewCT_MetadataRecord)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_FutureMetadata)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b", NewCT_FutureMetadataBlock)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_MdxMetadata)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078", NewCT_Mdx)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065", NewCT_MdxTuple)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t", NewCT_MdxSet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070", NewCT_MdxMemeberProp)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I", NewCT_MdxKPI)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078", NewCT_MetadataStringIndex)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073", NewCT_MetadataStrings)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewCT_SingleXmlCells)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c", NewCT_SingleXmlCell)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072", NewCT_XmlCellPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072", NewCT_XmlPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074", NewCT_Stylesheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074", NewCT_CellAlignment)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073", NewCT_Borders)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r", NewCT_Border)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072", NewCT_BorderPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e", NewCT_CellProtection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073", NewCT_Fonts)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073", NewCT_Fills)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u006c", NewCT_Fill)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c", NewCT_PatternFill)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c", NewCT_GradientFill)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073", NewCT_NumFmts)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt", NewCT_NumFmt)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073", NewCT_CellStyleXfs)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073", NewCT_CellXfs)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u0066", NewCT_Xf)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_CellStyles)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065", NewCT_CellStyle)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0078\u0066\u0073", NewCT_Dxfs)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0078\u0066", NewCT_Dxf)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s", NewCT_Colors)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_IndexedColors)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_MRUColors)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_RgbColor)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073", NewCT_TableStyles)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074", NewCT_TableStyleElement)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079", NewCT_BooleanProperty)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065", NewCT_FontSize)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_IntProperty)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065", NewCT_FontName)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079", NewCT_VerticalAlignFontProperty)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079", NewCT_UnderlineProperty)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u006e\u0074", NewCT_Font)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079", NewCT_FontFamily)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewCT_ExternalLink)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b", NewCT_ExternalBook)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalSheetNames)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065", NewCT_ExternalSheetName)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalDefinedNames)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_ExternalDefinedName)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074", NewCT_ExternalSheetDataSet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061", NewCT_ExternalSheetData)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077", NewCT_ExternalRow)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c", NewCT_ExternalCell)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b", NewCT_DdeLink)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_DdeItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d", NewCT_DdeItem)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073", NewCT_DdeValues)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_DdeValue)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b", NewCT_OleLink)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_OleItems)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d", NewCT_OleItem)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f", NewCT_TableStyleInfo)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewCT_TableColumns)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e", NewCT_TableColumn)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061", NewCT_TableFormula)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072", NewCT_XmlColumnPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewCT_VolTypes)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065", NewCT_VolType)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e", NewCT_VolMain)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063", NewCT_VolTopic)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066", NewCT_VolTopicRef)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewCT_Workbook)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e", NewCT_FileVersion)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073", NewCT_BookViews)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_BookView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073", NewCT_CustomWorkbookViews)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_CustomWorkbookView)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s", NewCT_Sheets)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074", NewCT_Sheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072", NewCT_WorkbookPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072", NewCT_SmartTagPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073", NewCT_SmartTagTypes)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065", NewCT_SmartTagType)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072", NewCT_FileRecoveryPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r", NewCT_CalcPr)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_DefinedNames)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065", NewCT_DefinedName)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073", NewCT_ExternalReferences)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065", NewCT_ExternalReference)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e", NewCT_SheetBackgroundPicture)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073", NewCT_PivotCaches)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065", NewCT_PivotCache)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067", NewCT_FileSharing)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065", NewCT_OleSize)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_WorkbookProtection)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067", NewCT_WebPublishing)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073", NewCT_FunctionGroups)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070", NewCT_FunctionGroup)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073", NewCT_WebPublishObjects)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_WebPublishObject)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063a\u006c\u0063\u0043\u0068\u0061\u0069n", NewCalcChain)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewComments)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u004da\u0070\u0049\u006e\u0066\u006f", NewMapInfo)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "c\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073", NewConnections)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotCacheDefinition)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073", NewPivotCacheRecords)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotTableDefinition)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewQueryTable)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0073\u0074", NewSst)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0068e\u0061\u0064\u0065\u0072\u0073", NewHeaders)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0072e\u0076\u0069\u0073\u0069\u006f\u006es", NewRevisions)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0075\u0073\u0065r\u0073", NewUsers)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t", NewWorksheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewChartsheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "d\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074", NewDialogsheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewMetadata)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewSingleXmlCells)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewStyleSheet)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewExternalLink)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0061\u0062l\u0065", NewTable)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewVolTypes)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewWorkbook)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061", NewAG_RevData)
	_d.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074", NewAG_AutoFormat)
}
func NewPivotTableDefinition() *PivotTableDefinition {
	_afbee := &PivotTableDefinition{}
	_afbee.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	return _afbee
}

type CT_Dialogsheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Dialog Sheet Views
	SheetViews *CT_SheetViews

	// Dialog Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header & Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF
	OleObjects      *CT_OleObjects
	Controls        *CT_Controls

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
