//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pml

import (
	_e "encoding/xml"
	_d "fmt"
	_f "github.com/unidoc/unioffice"
	_da "github.com/unidoc/unioffice/schema/soo/dml"
	_ef "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes"
	_a "strconv"
	_g "time"
)

func (_eabcg *CT_TLAnimateRotationBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eabcg.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _feacf := range start.Attr {
		if _feacf.Name.Local == "\u0062\u0079" {
			_acadd, _ecggd := _a.ParseInt(_feacf.Value, 10, 32)
			if _ecggd != nil {
				return _ecggd
			}
			_cefea := int32(_acadd)
			_eabcg.ByAttr = &_cefea
			continue
		}
		if _feacf.Name.Local == "\u0066\u0072\u006f\u006d" {
			_fbad, _gddba := _a.ParseInt(_feacf.Value, 10, 32)
			if _gddba != nil {
				return _gddba
			}
			_daaaa := int32(_fbad)
			_eabcg.FromAttr = &_daaaa
			continue
		}
		if _feacf.Name.Local == "\u0074\u006f" {
			_ffbaf, _gccf := _a.ParseInt(_feacf.Value, 10, 32)
			if _gccf != nil {
				return _gccf
			}
			_bbeb := int32(_ffbaf)
			_eabcg.ToAttr = &_bbeb
			continue
		}
	}
_agdfa:
	for {
		_afff, _egdcg := d.Token()
		if _egdcg != nil {
			return _egdcg
		}
		switch _egdca := _afff.(type) {
		case _e.StartElement:
			switch _egdca.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fbddff := d.DecodeElement(_eabcg.CBhvr, &_egdca); _fbddff != nil {
					return _fbddff
				}
			default:
				_f.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074\u0061\u0074i\u006f\u006eBe\u0068\u0061\u0076i\u006f\u0072\u0020\u0025\u0076", _egdca.Name)
				if _gadd := d.Skip(); _gadd != nil {
					return _gadd
				}
			}
		case _e.EndElement:
			break _agdfa
		case _e.CharData:
		}
	}
	return nil
}

type CT_OutlineViewProperties struct {

	// Common View Properties
	CViewPr *CT_CommonViewProperties

	// List of Presentation Slides
	SldLst *CT_OutlineViewSlideList
	ExtLst *CT_ExtensionList
}

func (_bgag *CT_Background) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bgag.BwModeAttr != _da.ST_BlackWhiteModeUnset {
		_bef, _dbeg := _bgag.BwModeAttr.MarshalXMLAttr(_e.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _dbeg != nil {
			return _dbeg
		}
		start.Attr = append(start.Attr, _bef)
	}
	e.EncodeToken(start)
	if _bgag.BgPr != nil {
		_eae := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_bgag.BgPr, _eae)
	}
	if _bgag.BgRef != nil {
		_acd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_bgag.BgRef, _acd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the PresentationPr and its children, prefixing error messages with path
func (_eeae *PresentationPr) ValidateWithPath(path string) error {
	if _cgeea := _eeae.CT_PresentationProperties.ValidateWithPath(path); _cgeea != nil {
		return _cgeea
	}
	return nil
}

type CT_SlideLayoutIdList struct {

	// Slide Layout Id
	SldLayoutId []*CT_SlideLayoutIdListEntry
}

func NewCT_HtmlPublishProperties() *CT_HtmlPublishProperties {
	_dgcg := &CT_HtmlPublishProperties{}
	return _dgcg
}
func NewCT_OleObjectChoice() *CT_OleObjectChoice { _eedcg := &CT_OleObjectChoice{}; return _eedcg }
func (_bdgaf *ST_TransitionEightDirectionType) ValidateWithPath(path string) error {
	_cadbf := []string{}
	if _bdgaf.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		_cadbf = append(_cadbf, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u0069\u0064\u0065\u0044i\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if _bdgaf.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		_cadbf = append(_cadbf, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u006fr\u006ee\u0072\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if len(_cadbf) > 1 {
		return _d.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cadbf)
	}
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
	ContentPart  []*CT_Rel
}

func (_gefee *CT_TLAnimVariant) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gacce:
	for {
		_ddbeab, _cbcf := d.Token()
		if _cbcf != nil {
			return _cbcf
		}
		switch _gbbe := _ddbeab.(type) {
		case _e.StartElement:
			switch _gbbe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
				_gefee.BoolVal = NewCT_TLAnimVariantBooleanVal()
				if _cddac := d.DecodeElement(_gefee.BoolVal, &_gbbe); _cddac != nil {
					return _cddac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
				_gefee.IntVal = NewCT_TLAnimVariantIntegerVal()
				if _beef := d.DecodeElement(_gefee.IntVal, &_gbbe); _beef != nil {
					return _beef
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
				_gefee.FltVal = NewCT_TLAnimVariantFloatVal()
				if _bfbdg := d.DecodeElement(_gefee.FltVal, &_gbbe); _bfbdg != nil {
					return _bfbdg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
				_gefee.StrVal = NewCT_TLAnimVariantStringVal()
				if _gbccc := d.DecodeElement(_gefee.StrVal, &_gbbe); _gbccc != nil {
					return _gbccc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
				_gefee.ClrVal = _da.NewCT_Color()
				if _dbcd := d.DecodeElement(_gefee.ClrVal, &_gbbe); _dbcd != nil {
					return _dbcd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0020\u0025v", _gbbe.Name)
				if _ecaeb := d.Skip(); _ecaeb != nil {
					return _ecaeb
				}
			}
		case _e.EndElement:
			break _gacce
		case _e.CharData:
		}
	}
	return nil
}

type CT_ShowInfoKiosk struct {

	// Restart Show
	RestartAttr *uint32
}

// Validate validates the CT_HandoutMaster and its children
func (_fceab *CT_HandoutMaster) Validate() error {
	return _fceab.ValidateWithPath("\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_ccdcd *ST_Direction) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gdccd, _afad := d.Token()
	if _afad != nil {
		return _afad
	}
	if _ddgga, _gfdda := _gdccd.(_e.EndElement); _gfdda && _ddgga.Name == start.Name {
		*_ccdcd = 1
		return nil
	}
	if _cacdbdb, _eabd := _gdccd.(_e.CharData); !_eabd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdccd)
	} else {
		switch string(_cacdbdb) {
		case "":
			*_ccdcd = 0
		case "\u0068\u006f\u0072\u007a":
			*_ccdcd = 1
		case "\u0076\u0065\u0072\u0074":
			*_ccdcd = 2
		}
	}
	_gdccd, _afad = d.Token()
	if _afad != nil {
		return _afad
	}
	if _fdbcef, _dddde := _gdccd.(_e.EndElement); _dddde && _fdbcef.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdccd)
}
func NewCT_TLAnimateBehavior() *CT_TLAnimateBehavior {
	_bcfb := &CT_TLAnimateBehavior{}
	_bcfb.CBhvr = NewCT_TLCommonBehaviorData()
	return _bcfb
}
func (_bfbee ST_TLAnimateMotionPathEditMode) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bfbee.String(), start)
}

// Validate validates the CT_CustomerData and its children
func (_gbcf *CT_CustomerData) Validate() error {
	return _gbcf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061")
}

// ValidateWithPath validates the EG_ChildSlide and its children, prefixing error messages with path
func (_eeab *EG_ChildSlide) ValidateWithPath(path string) error {
	if _eeab.ClrMapOvr != nil {
		if _geegf := _eeab.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _geegf != nil {
			return _geegf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomShowId and its children, prefixing error messages with path
func (_ggfc *CT_CustomShowId) ValidateWithPath(path string) error { return nil }
func (_gaf *CT_IndexRange) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ffbc := range start.Attr {
		if _ffbc.Name.Local == "\u0073\u0074" {
			_cebc, _ggfa := _a.ParseUint(_ffbc.Value, 10, 32)
			if _ggfa != nil {
				return _ggfa
			}
			_gaf.StAttr = uint32(_cebc)
			continue
		}
		if _ffbc.Name.Local == "\u0065\u006e\u0064" {
			_bdc, _babd := _a.ParseUint(_ffbc.Value, 10, 32)
			if _babd != nil {
				return _babd
			}
			_gaf.EndAttr = uint32(_bdc)
			continue
		}
	}
	for {
		_efcad, _ebcb := d.Token()
		if _ebcb != nil {
			return _d.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0064e\u0078R\u0061\u006e\u0067\u0065\u003a\u0020\u0025s", _ebcb)
		}
		if _fdbeg, _bafge := _efcad.(_e.EndElement); _bafge && _fdbeg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SlideSize() *CT_SlideSize {
	_bbga := &CT_SlideSize{}
	_bbga.CxAttr = 914400
	_bbga.CyAttr = 914400
	return _bbga
}
func NewCT_NotesSlide() *CT_NotesSlide {
	_egbfa := &CT_NotesSlide{}
	_egbfa.CSld = NewCT_CommonSlideData()
	return _egbfa
}
func NewEG_SlideListChoice() *EG_SlideListChoice { _ddgdd := &EG_SlideListChoice{}; return _ddgdd }
func (_dbaed ST_TransitionSpeed) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fdaee := _e.Attr{}
	_fdaee.Name = name
	switch _dbaed {
	case ST_TransitionSpeedUnset:
		_fdaee.Value = ""
	case ST_TransitionSpeedSlow:
		_fdaee.Value = "\u0073\u006c\u006f\u0077"
	case ST_TransitionSpeedMed:
		_fdaee.Value = "\u006d\u0065\u0064"
	case ST_TransitionSpeedFast:
		_fdaee.Value = "\u0066\u0061\u0073\u0074"
	}
	return _fdaee, nil
}
func NewCT_Comment() *CT_Comment { _fff := &CT_Comment{}; _fff.Pos = _da.NewCT_Point2D(); return _fff }

// Validate validates the CT_IndexRange and its children
func (_egba *CT_IndexRange) Validate() error {
	return _egba.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065")
}
func NewCT_Control() *CT_Control { _ggaa := &CT_Control{}; return _ggaa }
func (_dad *CT_BackgroundProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dad.ShadeToTitleAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_dad.ShadeToTitleAttr))})
	}
	e.EncodeToken(start)
	if _dad.NoFill != nil {
		_dbege := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dad.NoFill, _dbege)
	}
	if _dad.SolidFill != nil {
		_ggg := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dad.SolidFill, _ggg)
	}
	if _dad.GradFill != nil {
		_fgf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dad.GradFill, _fgf)
	}
	if _dad.BlipFill != nil {
		_dce := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dad.BlipFill, _dce)
	}
	if _dad.PattFill != nil {
		_dba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dad.PattFill, _dba)
	}
	if _dad.GrpFill != nil {
		_dbec := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_dad.GrpFill, _dbec)
	}
	if _dad.EffectLst != nil {
		_dceb := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dad.EffectLst, _dceb)
	}
	if _dad.EffectDag != nil {
		_ebc := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dad.EffectDag, _ebc)
	}
	if _dad.ExtLst != nil {
		_aed := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dad.ExtLst, _aed)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_egff *CT_OleObjectChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_agde:
	for {
		_acdc, _cdga := d.Token()
		if _cdga != nil {
			return _cdga
		}
		switch _dadcd := _acdc.(type) {
		case _e.StartElement:
			switch _dadcd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_egff.Embed = NewCT_OleObjectEmbed()
				if _bbeab := d.DecodeElement(_egff.Embed, &_dadcd); _bbeab != nil {
					return _bbeab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_egff.Link = NewCT_OleObjectLink()
				if _cadb := d.DecodeElement(_egff.Link, &_dadcd); _cadb != nil {
					return _cadb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _dadcd.Name)
				if _facf := d.Skip(); _facf != nil {
					return _facf
				}
			}
		case _e.EndElement:
			break _agde
		case _e.CharData:
		}
	}
	return nil
}
func (_bdecd *ST_TLPreviousActionType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_adafd, _cdcdbf := d.Token()
	if _cdcdbf != nil {
		return _cdcdbf
	}
	if _bafaf, _edfdd := _adafd.(_e.EndElement); _edfdd && _bafaf.Name == start.Name {
		*_bdecd = 1
		return nil
	}
	if _fafc, _cagdg := _adafd.(_e.CharData); !_cagdg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adafd)
	} else {
		switch string(_fafc) {
		case "":
			*_bdecd = 0
		case "\u006e\u006f\u006e\u0065":
			*_bdecd = 1
		case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
			*_bdecd = 2
		}
	}
	_adafd, _cdcdbf = d.Token()
	if _cdcdbf != nil {
		return _cdcdbf
	}
	if _daddf, _dgfgb := _adafd.(_e.EndElement); _dgfgb && _daddf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adafd)
}

// Validate validates the CT_SmartTags and its children
func (_fcdb *CT_SmartTags) Validate() error {
	return _fcdb.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

type CT_TLTemplate struct {

	// Level
	LvlAttr *uint32

	// Time Node List
	TnLst *CT_TimeNodeList
}

func NewCT_CommonSlideViewProperties() *CT_CommonSlideViewProperties {
	_defa := &CT_CommonSlideViewProperties{}
	_defa.CViewPr = NewCT_CommonViewProperties()
	return _defa
}

// ValidateWithPath validates the SldSyncPr and its children, prefixing error messages with path
func (_abggc *SldSyncPr) ValidateWithPath(path string) error {
	if _debde := _abggc.CT_SlideSyncProperties.ValidateWithPath(path); _debde != nil {
		return _debde
	}
	return nil
}
func (_bdea *CT_TLTextTargetElement) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bdea.CharRg != nil {
		_cefdaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0068\u0061\u0072\u0052\u0067"}}
		e.EncodeElement(_bdea.CharRg, _cefdaf)
	}
	if _bdea.PRg != nil {
		_ccadg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070R\u0067"}}
		e.EncodeElement(_bdea.PRg, _ccadg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_agcbc *CT_TLShapeTargetElement) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _agcbc.SpidAttr)})
	e.EncodeToken(start)
	if _agcbc.Bg != nil {
		_ddceaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_agcbc.Bg, _ddceaf)
	}
	if _agcbc.SubSp != nil {
		_becedd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0075\u0062\u0053\u0070"}}
		e.EncodeElement(_agcbc.SubSp, _becedd)
	}
	if _agcbc.OleChartEl != nil {
		_abcda := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006fl\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}}
		e.EncodeElement(_agcbc.OleChartEl, _abcda)
	}
	if _agcbc.TxEl != nil {
		_ffdbc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0078\u0045\u006c"}}
		e.EncodeElement(_agcbc.TxEl, _ffdbc)
	}
	if _agcbc.GraphicEl != nil {
		_ffccd := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"}}
		e.EncodeElement(_agcbc.GraphicEl, _ffccd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_OutlineViewSlideList struct {

	// Presentation Slide
	Sld []*CT_OutlineViewSlideEntry
}

func (_bbbc ST_TLAnimateColorSpace) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bbbc.String(), start)
}

// ValidateWithPath validates the CT_BuildList and its children, prefixing error messages with path
func (_afc *CT_BuildList) ValidateWithPath(path string) error {
	for _fcbd, _bgg := range _afc.BldP {
		if _ffg := _bgg.ValidateWithPath(_d.Sprintf("%\u0073\u002f\u0042\u006c\u0064\u0050\u005b\u0025\u0064\u005d", path, _fcbd)); _ffg != nil {
			return _ffg
		}
	}
	for _ccc, _geb := range _afc.BldDgm {
		if _efg := _geb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0044\u0067\u006d\u005b\u0025\u0064\u005d", path, _ccc)); _efg != nil {
			return _efg
		}
	}
	for _bbe, _dged := range _afc.BldOleChart {
		if _eff := _dged.ValidateWithPath(_d.Sprintf("\u0025s\u002fB\u006c\u0064\u004f\u006c\u0065C\u0068\u0061r\u0074\u005b\u0025\u0064\u005d", path, _bbe)); _eff != nil {
			return _eff
		}
	}
	for _befa, _gfc := range _afc.BldGraphic {
		if _gaa := _gfc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069c\u005b\u0025\u0064\u005d", path, _befa)); _gaa != nil {
			return _gaa
		}
	}
	return nil
}
func (_gcac *CT_BuildList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fbd:
	for {
		_dcee, _eef := d.Token()
		if _eef != nil {
			return _eef
		}
		switch _gegee := _dcee.(type) {
		case _e.StartElement:
			switch _gegee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
				_cbba := NewCT_TLBuildParagraph()
				if _baea := d.DecodeElement(_cbba, &_gegee); _baea != nil {
					return _baea
				}
				_gcac.BldP = append(_gcac.BldP, _cbba)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_fgd := NewCT_TLBuildDiagram()
				if _egg := d.DecodeElement(_fgd, &_gegee); _egg != nil {
					return _egg
				}
				_gcac.BldDgm = append(_gcac.BldDgm, _fgd)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
				_bba := NewCT_TLOleBuildChart()
				if _bfg := d.DecodeElement(_bba, &_gegee); _bfg != nil {
					return _bfg
				}
				_gcac.BldOleChart = append(_gcac.BldOleChart, _bba)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
				_bcec := NewCT_TLGraphicalObjectBuild()
				if _dcec := d.DecodeElement(_bcec, &_gegee); _dcec != nil {
					return _dcec
				}
				_gcac.BldGraphic = append(_gcac.BldGraphic, _bcec)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u0075\u0069l\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gegee.Name)
				if _dgg := d.Skip(); _dgg != nil {
					return _dgg
				}
			}
		case _e.EndElement:
			break _fbd
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_ViewProperties() *CT_ViewProperties { _adcdg := &CT_ViewProperties{}; return _adcdg }
func (_gdfdd ST_TLChartSubelementType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_aacba := _e.Attr{}
	_aacba.Name = name
	switch _gdfdd {
	case ST_TLChartSubelementTypeUnset:
		_aacba.Value = ""
	case ST_TLChartSubelementTypeGridLegend:
		_aacba.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case ST_TLChartSubelementTypeSeries:
		_aacba.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypeCategory:
		_aacba.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLChartSubelementTypePtInSeries:
		_aacba.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypePtInCategory:
		_aacba.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return _aacba, nil
}
func (_becd *CT_OutlineViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_becd.CViewPr = NewCT_CommonViewProperties()
_cbgcb:
	for {
		_cfecc, _eebbd := d.Token()
		if _eebbd != nil {
			return _eebbd
		}
		switch _gede := _cfecc.(type) {
		case _e.StartElement:
			switch _gede.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _afgb := d.DecodeElement(_becd.CViewPr, &_gede); _afgb != nil {
					return _afgb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				_becd.SldLst = NewCT_OutlineViewSlideList()
				if _dgaa := d.DecodeElement(_becd.SldLst, &_gede); _dgaa != nil {
					return _dgaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_becd.ExtLst = NewCT_ExtensionList()
				if _ccaeg := d.DecodeElement(_becd.ExtLst, &_gede); _ccaeg != nil {
					return _ccaeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _gede.Name)
				if _aeea := d.Skip(); _aeea != nil {
					return _aeea
				}
			}
		case _e.EndElement:
			break _cbgcb
		case _e.CharData:
		}
	}
	return nil
}
func (_adbfg ST_SplitterBarState) String() string {
	switch _adbfg {
	case 0:
		return ""
	case 1:
		return "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case 2:
		return "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case 3:
		return "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return ""
}

// Validate validates the CT_CommentAuthorList and its children
func (_gbe *CT_CommentAuthorList) Validate() error {
	return _gbe.ValidateWithPath("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074")
}
func NewCT_HandoutMaster() *CT_HandoutMaster {
	_bcc := &CT_HandoutMaster{}
	_bcc.CSld = NewCT_CommonSlideData()
	_bcc.ClrMap = _da.NewCT_ColorMapping()
	return _bcc
}
func NewCT_TLAnimateMotionBehavior() *CT_TLAnimateMotionBehavior {
	_abfef := &CT_TLAnimateMotionBehavior{}
	_abfef.CBhvr = NewCT_TLCommonBehaviorData()
	return _abfef
}

const (
	ST_TLTimeIndefiniteUnset      ST_TLTimeIndefinite = 0
	ST_TLTimeIndefiniteIndefinite ST_TLTimeIndefinite = 1
)

func NewCT_TLTimeAnimateValue() *CT_TLTimeAnimateValue {
	_gffdf := &CT_TLTimeAnimateValue{}
	return _gffdf
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_gfcc *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _bfgbf := _gfcc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bfgbf != nil {
		return _bfgbf
	}
	if _faff := _gfcc.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _faff != nil {
		return _faff
	}
	if _affg := _gfcc.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _affg != nil {
		return _affg
	}
	return nil
}

// Validate validates the AG_Ole and its children
func (_ddc *AG_Ole) Validate() error {
	return _ddc.ValidateWithPath("\u0041\u0047\u005f\u004f\u006c\u0065")
}

// Validate validates the CT_EmbeddedFontList and its children
func (_fac *CT_EmbeddedFontList) Validate() error {
	return _fac.ValidateWithPath("\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074")
}
func NewCT_CornerDirectionTransition() *CT_CornerDirectionTransition {
	_abbc := &CT_CornerDirectionTransition{}
	return _abbc
}
func (_gdafb ST_TLTimeNodeFillType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_geab := _e.Attr{}
	_geab.Name = name
	switch _gdafb {
	case ST_TLTimeNodeFillTypeUnset:
		_geab.Value = ""
	case ST_TLTimeNodeFillTypeRemove:
		_geab.Value = "\u0072\u0065\u006d\u006f\u0076\u0065"
	case ST_TLTimeNodeFillTypeFreeze:
		_geab.Value = "\u0066\u0072\u0065\u0065\u007a\u0065"
	case ST_TLTimeNodeFillTypeHold:
		_geab.Value = "\u0068\u006f\u006c\u0064"
	case ST_TLTimeNodeFillTypeTransition:
		_geab.Value = "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return _geab, nil
}
func (_fdb *CT_BackgroundProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gef := range start.Attr {
		if _gef.Name.Local == "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065" {
			_dga, _ace := _a.ParseBool(_gef.Value)
			if _ace != nil {
				return _ace
			}
			_fdb.ShadeToTitleAttr = &_dga
			continue
		}
	}
_bc:
	for {
		_bbf, _deba := d.Token()
		if _deba != nil {
			return _deba
		}
		switch _cdb := _bbf.(type) {
		case _e.StartElement:
			switch _cdb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fdb.NoFill = _da.NewCT_NoFillProperties()
				if _adbe := d.DecodeElement(_fdb.NoFill, &_cdb); _adbe != nil {
					return _adbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fdb.SolidFill = _da.NewCT_SolidColorFillProperties()
				if _fcb := d.DecodeElement(_fdb.SolidFill, &_cdb); _fcb != nil {
					return _fcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fdb.GradFill = _da.NewCT_GradientFillProperties()
				if _gegg := d.DecodeElement(_fdb.GradFill, &_cdb); _gegg != nil {
					return _gegg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fdb.BlipFill = _da.NewCT_BlipFillProperties()
				if _gefa := d.DecodeElement(_fdb.BlipFill, &_cdb); _gefa != nil {
					return _gefa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fdb.PattFill = _da.NewCT_PatternFillProperties()
				if _befc := d.DecodeElement(_fdb.PattFill, &_cdb); _befc != nil {
					return _befc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fdb.GrpFill = _da.NewCT_GroupFillProperties()
				if _gee := d.DecodeElement(_fdb.GrpFill, &_cdb); _gee != nil {
					return _gee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fdb.EffectLst = _da.NewCT_EffectList()
				if _aa := d.DecodeElement(_fdb.EffectLst, &_cdb); _aa != nil {
					return _aa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fdb.EffectDag = _da.NewCT_EffectContainer()
				if _afe := d.DecodeElement(_fdb.EffectDag, &_cdb); _afe != nil {
					return _afe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdb.ExtLst = NewCT_ExtensionList()
				if _bfe := d.DecodeElement(_fdb.ExtLst, &_cdb); _bfe != nil {
					return _bfe
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _cdb.Name)
				if _bdb := d.Skip(); _bdb != nil {
					return _bdb
				}
			}
		case _e.EndElement:
			break _bc
		case _e.CharData:
		}
	}
	return nil
}
func (_gfaef *ST_TLTriggerEvent) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ddbbg, _efbb := d.Token()
	if _efbb != nil {
		return _efbb
	}
	if _bffbc, _fbca := _ddbbg.(_e.EndElement); _fbca && _bffbc.Name == start.Name {
		*_gfaef = 1
		return nil
	}
	if _cfebbb, _ebdge := _ddbbg.(_e.CharData); !_ebdge {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddbbg)
	} else {
		switch string(_cfebbb) {
		case "":
			*_gfaef = 0
		case "\u006fn\u0042\u0065\u0067\u0069\u006e":
			*_gfaef = 1
		case "\u006f\u006e\u0045n\u0064":
			*_gfaef = 2
		case "\u0062\u0065\u0067i\u006e":
			*_gfaef = 3
		case "\u0065\u006e\u0064":
			*_gfaef = 4
		case "\u006fn\u0043\u006c\u0069\u0063\u006b":
			*_gfaef = 5
		case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
			*_gfaef = 6
		case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
			*_gfaef = 7
		case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
			*_gfaef = 8
		case "\u006f\u006e\u004e\u0065\u0078\u0074":
			*_gfaef = 9
		case "\u006f\u006e\u0050\u0072\u0065\u0076":
			*_gfaef = 10
		case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
			*_gfaef = 11
		}
	}
	_ddbbg, _efbb = d.Token()
	if _efbb != nil {
		return _efbb
	}
	if _feccgg, _fdaed := _ddbbg.(_e.EndElement); _fdaed && _feccgg.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddbbg)
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_gcag *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _cabcdd := _gcag.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cabcdd != nil {
		return _cabcdd
	}
	if _ccaee := _gcag.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _ccaee != nil {
		return _ccaee
	}
	if _ageg := _gcag.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _ageg != nil {
		return _ageg
	}
	return nil
}

// ValidateWithPath validates the CT_CommonSlideViewProperties and its children, prefixing error messages with path
func (_fdd *CT_CommonSlideViewProperties) ValidateWithPath(path string) error {
	if _fec := _fdd.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _fec != nil {
		return _fec
	}
	if _fdd.GuideLst != nil {
		if _fgaff := _fdd.GuideLst.ValidateWithPath(path + "\u002fG\u0075\u0069\u0064\u0065\u004c\u0073t"); _fgaff != nil {
			return _fgaff
		}
	}
	return nil
}

// Validate validates the CT_ShowInfoBrowse and its children
func (_bedg *CT_ShowInfoBrowse) Validate() error {
	return _bedg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065")
}

const (
	ST_PhotoAlbumFrameShapeUnset       ST_PhotoAlbumFrameShape = 0
	ST_PhotoAlbumFrameShapeFrameStyle1 ST_PhotoAlbumFrameShape = 1
	ST_PhotoAlbumFrameShapeFrameStyle2 ST_PhotoAlbumFrameShape = 2
	ST_PhotoAlbumFrameShapeFrameStyle3 ST_PhotoAlbumFrameShape = 3
	ST_PhotoAlbumFrameShapeFrameStyle4 ST_PhotoAlbumFrameShape = 4
	ST_PhotoAlbumFrameShapeFrameStyle5 ST_PhotoAlbumFrameShape = 5
	ST_PhotoAlbumFrameShapeFrameStyle6 ST_PhotoAlbumFrameShape = 6
	ST_PhotoAlbumFrameShapeFrameStyle7 ST_PhotoAlbumFrameShape = 7
)

func (_agace *CT_TLByHslColorTransform) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fccge := range start.Attr {
		if _fccge.Name.Local == "\u0068" {
			_fbbac, _gfgbe := _a.ParseInt(_fccge.Value, 10, 32)
			if _gfgbe != nil {
				return _gfgbe
			}
			_agace.HAttr = int32(_fbbac)
			continue
		}
		if _fccge.Name.Local == "\u0073" {
			_ffeb, _bgda := ParseUnionST_FixedPercentage(_fccge.Value)
			if _bgda != nil {
				return _bgda
			}
			_agace.SAttr = _ffeb
			continue
		}
		if _fccge.Name.Local == "\u006c" {
			_abgb, _gfgag := ParseUnionST_FixedPercentage(_fccge.Value)
			if _gfgag != nil {
				return _gfgag
			}
			_agace.LAttr = _abgb
			continue
		}
	}
	for {
		_geebc, _agacee := d.Token()
		if _agacee != nil {
			return _d.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0048sl\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _agacee)
		}
		if _baga, _fdcf := _geebc.(_e.EndElement); _fdcf && _baga.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_TLCommandTypeUnset ST_TLCommandType = 0
	ST_TLCommandTypeEvt   ST_TLCommandType = 1
	ST_TLCommandTypeCall  ST_TLCommandType = 2
	ST_TLCommandTypeVerb  ST_TLCommandType = 3
)

func (_bbgb *CT_Kinsoku) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bbgb.LangAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _d.Sprintf("\u0025\u0076", *_bbgb.LangAttr)})
	}
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _d.Sprintf("\u0025\u0076", _bbgb.InvalStCharsAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073"}, Value: _d.Sprintf("\u0025\u0076", _bbgb.InvalEndCharsAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bfcea *CT_ViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bfcea.LastViewAttr != ST_ViewTypeUnset {
		_bdbg, _cfgcc := _bfcea.LastViewAttr.MarshalXMLAttr(_e.Name{Local: "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077"})
		if _cfgcc != nil {
			return _cfgcc
		}
		start.Attr = append(start.Attr, _bdbg)
	}
	if _bfcea.ShowCommentsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bfcea.ShowCommentsAttr))})
	}
	e.EncodeToken(start)
	if _bfcea.NormalViewPr != nil {
		_egfcg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u006f\u0072\u006d\u0061\u006c\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_bfcea.NormalViewPr, _egfcg)
	}
	if _bfcea.SlideViewPr != nil {
		_dgab := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_bfcea.SlideViewPr, _dgab)
	}
	if _bfcea.OutlineViewPr != nil {
		_cfbdc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006fu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_bfcea.OutlineViewPr, _cfbdc)
	}
	if _bfcea.NotesTextViewPr != nil {
		_cgcb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0054\u0065\u0078\u0074\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_bfcea.NotesTextViewPr, _cgcb)
	}
	if _bfcea.SorterViewPr != nil {
		_fagfg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006f\u0072\u0074\u0065\u0072\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_bfcea.SorterViewPr, _fagfg)
	}
	if _bfcea.NotesViewPr != nil {
		_dbbdf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_bfcea.NotesViewPr, _dbbdf)
	}
	if _bfcea.GridSpacing != nil {
		_cegc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_bfcea.GridSpacing, _cegc)
	}
	if _bfcea.ExtLst != nil {
		_cfebb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfcea.ExtLst, _cfebb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bfgbdf *ST_WebColorType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bfgbdf = 0
	case "\u006e\u006f\u006e\u0065":
		*_bfgbdf = 1
	case "\u0062r\u006f\u0077\u0073\u0065\u0072":
		*_bfgbdf = 2
	case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_bfgbdf = 3
	case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
		*_bfgbdf = 4
	case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
		*_bfgbdf = 5
	case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
		*_bfgbdf = 6
	}
	return nil
}
func (_ggaed ST_ViewType) Validate() error { return _ggaed.ValidateWithPath("") }
func (_bfbfd *ST_TLTimeIndefinite) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bfac, _fbfgd := d.Token()
	if _fbfgd != nil {
		return _fbfgd
	}
	if _befba, _aeded := _bfac.(_e.EndElement); _aeded && _befba.Name == start.Name {
		*_bfbfd = 1
		return nil
	}
	if _eegd, _ccfg := _bfac.(_e.CharData); !_ccfg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfac)
	} else {
		switch string(_eegd) {
		case "":
			*_bfbfd = 0
		case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
			*_bfbfd = 1
		}
	}
	_bfac, _fbfgd = d.Token()
	if _fbfgd != nil {
		return _fbfgd
	}
	if _egedb, _acfcb := _bfac.(_e.EndElement); _acfcb && _egedb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfac)
}
func (_ebefaf *ST_TLChartSubelementType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_adagf, _cbdbfc := d.Token()
	if _cbdbfc != nil {
		return _cbdbfc
	}
	if _bbagd, _dfdcf := _adagf.(_e.EndElement); _dfdcf && _bbagd.Name == start.Name {
		*_ebefaf = 1
		return nil
	}
	if _fgddef, _dccbd := _adagf.(_e.CharData); !_dccbd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adagf)
	} else {
		switch string(_fgddef) {
		case "":
			*_ebefaf = 0
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_ebefaf = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_ebefaf = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_ebefaf = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_ebefaf = 4
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_ebefaf = 5
		}
	}
	_adagf, _cbdbfc = d.Token()
	if _cbdbfc != nil {
		return _cbdbfc
	}
	if _bggbg, _fdgd := _adagf.(_e.EndElement); _fdgd && _bggbg.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adagf)
}
func (_afbfa ST_TLAnimateMotionPathEditMode) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_egafc := _e.Attr{}
	_egafc.Name = name
	switch _afbfa {
	case ST_TLAnimateMotionPathEditModeUnset:
		_egafc.Value = ""
	case ST_TLAnimateMotionPathEditModeRelative:
		_egafc.Value = "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case ST_TLAnimateMotionPathEditModeFixed:
		_egafc.Value = "\u0066\u0069\u0078e\u0064"
	}
	return _egafc, nil
}
func (_bgddec *ST_TLTimeNodePresetClassType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bgddec = 0
	case "\u0065\u006e\u0074\u0072":
		*_bgddec = 1
	case "\u0065\u0078\u0069\u0074":
		*_bgddec = 2
	case "\u0065\u006d\u0070\u0068":
		*_bgddec = 3
	case "\u0070\u0061\u0074\u0068":
		*_bgddec = 4
	case "\u0076\u0065\u0072\u0062":
		*_bgddec = 5
	case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
		*_bgddec = 6
	}
	return nil
}

// Validate validates the CT_CustomerDataList and its children
func (_fabba *CT_CustomerDataList) Validate() error {
	return _fabba.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074")
}
func (_acbbbc ST_TLDiagramBuildType) Validate() error { return _acbbbc.ValidateWithPath("") }

// ValidateWithPath validates the NotesMaster and its children, prefixing error messages with path
func (_degbe *NotesMaster) ValidateWithPath(path string) error {
	if _bedde := _degbe.CT_NotesMaster.ValidateWithPath(path); _bedde != nil {
		return _bedde
	}
	return nil
}

// ValidateWithPath validates the CT_NotesMasterIdList and its children, prefixing error messages with path
func (_gdad *CT_NotesMasterIdList) ValidateWithPath(path string) error {
	if _gdad.NotesMasterId != nil {
		if _cafc := _gdad.NotesMasterId.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"); _cafc != nil {
			return _cafc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TransitionStartSoundAction and its children, prefixing error messages with path
func (_adfbd *CT_TransitionStartSoundAction) ValidateWithPath(path string) error {
	if _dfcd := _adfbd.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _dfcd != nil {
		return _dfcd
	}
	return nil
}

type CT_SlideViewProperties struct {
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_eegeg *OleObj) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006f\u006c\u0065\u004f\u0062\u006a"
	return _eegeg.CT_OleObject.MarshalXML(e, start)
}
func (_gdfda *CT_SmartTags) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _gdfda.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewEG_TopLevelSlide() *EG_TopLevelSlide {
	_fgdbf := &EG_TopLevelSlide{}
	_fgdbf.ClrMap = _da.NewCT_ColorMapping()
	return _fgdbf
}
func (_abbce *CT_EightDirectionTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _abbce.DirAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064\u0069\u0072"}, Value: _d.Sprintf("\u0025\u0076", *_abbce.DirAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLPoint struct {

	// X coordinate
	XAttr _da.ST_Percentage

	// Y coordinate
	YAttr _da.ST_Percentage
}

func NewSldLayout() *SldLayout {
	_eccbdb := &SldLayout{}
	_eccbdb.CT_SlideLayout = *NewCT_SlideLayout()
	return _eccbdb
}

// Validate validates the CT_WheelTransition and its children
func (_gdfef *CT_WheelTransition) Validate() error {
	return _gdfef.ValidateWithPath("\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func (_bbbae *Notes) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u006e\u006f\u0074\u0065\u0073"
	return _bbbae.CT_NotesSlide.MarshalXML(e, start)
}

// Validate validates the CT_TLSetBehavior and its children
func (_afdgd *CT_TLSetBehavior) Validate() error {
	return _afdgd.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072")
}

// ValidateWithPath validates the CT_TLAnimateColorBehavior and its children, prefixing error messages with path
func (_beeb *CT_TLAnimateColorBehavior) ValidateWithPath(path string) error {
	if _gagb := _beeb.ClrSpcAttr.ValidateWithPath(path + "/\u0043\u006c\u0072\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _gagb != nil {
		return _gagb
	}
	if _gecbf := _beeb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _gecbf != nil {
		return _gecbf
	}
	if _ffcad := _beeb.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _ffcad != nil {
		return _ffcad
	}
	if _beeb.By != nil {
		if _ggef := _beeb.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _ggef != nil {
			return _ggef
		}
	}
	if _beeb.From != nil {
		if _faffg := _beeb.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _faffg != nil {
			return _faffg
		}
	}
	if _beeb.To != nil {
		if _efacg := _beeb.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _efacg != nil {
			return _efacg
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateRotationBehavior and its children
func (_faaae *CT_TLAnimateRotationBehavior) Validate() error {
	return _faaae.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072")
}
func (_fcbgg *ST_PlaceholderType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_fcbgg = 0
	case "\u0074\u0069\u0074l\u0065":
		*_fcbgg = 1
	case "\u0062\u006f\u0064\u0079":
		*_fcbgg = 2
	case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
		*_fcbgg = 3
	case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
		*_fcbgg = 4
	case "\u0064\u0074":
		*_fcbgg = 5
	case "\u0073\u006c\u0064\u004e\u0075\u006d":
		*_fcbgg = 6
	case "\u0066\u0074\u0072":
		*_fcbgg = 7
	case "\u0068\u0064\u0072":
		*_fcbgg = 8
	case "\u006f\u0062\u006a":
		*_fcbgg = 9
	case "\u0063\u0068\u0061r\u0074":
		*_fcbgg = 10
	case "\u0074\u0062\u006c":
		*_fcbgg = 11
	case "\u0063l\u0069\u0070\u0041\u0072\u0074":
		*_fcbgg = 12
	case "\u0064\u0067\u006d":
		*_fcbgg = 13
	case "\u006d\u0065\u0064i\u0061":
		*_fcbgg = 14
	case "\u0073\u006c\u0064\u0049\u006d\u0067":
		*_fcbgg = 15
	case "\u0070\u0069\u0063":
		*_fcbgg = 16
	}
	return nil
}
func (_bcfbe ST_TLTimeAnimateValueTime) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bcfbe.ST_PositiveFixedPercentage != nil {
		e.Encode(_bcfbe.ST_PositiveFixedPercentage)
	}
	if _bcfbe.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_e.CharData(_bcfbe.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_e.EndElement{Name: start.Name})
}
func (_dag *AG_ChildSlide) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _c := range start.Attr {
		if _c.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_ed, _dd := _a.ParseBool(_c.Value)
			if _dd != nil {
				return _dd
			}
			_dag.ShowMasterSpAttr = &_ed
			continue
		}
		if _c.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_cf, _ad := _a.ParseBool(_c.Value)
			if _ad != nil {
				return _ad
			}
			_dag.ShowMasterPhAnimAttr = &_cf
			continue
		}
	}
	for {
		_eg, _adc := d.Token()
		if _adc != nil {
			return _d.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0043h\u0069l\u0064S\u006c\u0069\u0064\u0065\u003a\u0020\u0025s", _adc)
		}
		if _ag, _cc := _eg.(_e.EndElement); _cc && _ag.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SlideSorterViewProperties struct {

	// Show Formatting
	ShowFormattingAttr *bool

	// Base properties for Slide Sorter View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}
type CT_TLTimeConditionList struct {

	// Condition
	Cond []*CT_TLTimeCondition
}

const (
	ST_TLTriggerEventUnset       ST_TLTriggerEvent = 0
	ST_TLTriggerEventOnBegin     ST_TLTriggerEvent = 1
	ST_TLTriggerEventOnEnd       ST_TLTriggerEvent = 2
	ST_TLTriggerEventBegin       ST_TLTriggerEvent = 3
	ST_TLTriggerEventEnd         ST_TLTriggerEvent = 4
	ST_TLTriggerEventOnClick     ST_TLTriggerEvent = 5
	ST_TLTriggerEventOnDblClick  ST_TLTriggerEvent = 6
	ST_TLTriggerEventOnMouseOver ST_TLTriggerEvent = 7
	ST_TLTriggerEventOnMouseOut  ST_TLTriggerEvent = 8
	ST_TLTriggerEventOnNext      ST_TLTriggerEvent = 9
	ST_TLTriggerEventOnPrev      ST_TLTriggerEvent = 10
	ST_TLTriggerEventOnStopAudio ST_TLTriggerEvent = 11
)

type ST_TLAnimateMotionPathEditMode byte

func (_eeagc *ST_PhotoAlbumLayout) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ebge, _bdggbc := d.Token()
	if _bdggbc != nil {
		return _bdggbc
	}
	if _ffbgg, _fddd := _ebge.(_e.EndElement); _fddd && _ffbgg.Name == start.Name {
		*_eeagc = 1
		return nil
	}
	if _cfdge, _decde := _ebge.(_e.CharData); !_decde {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebge)
	} else {
		switch string(_cfdge) {
		case "":
			*_eeagc = 0
		case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
			*_eeagc = 1
		case "\u0031\u0070\u0069\u0063":
			*_eeagc = 2
		case "\u0032\u0070\u0069\u0063":
			*_eeagc = 3
		case "\u0034\u0070\u0069\u0063":
			*_eeagc = 4
		case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_eeagc = 5
		case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_eeagc = 6
		case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_eeagc = 7
		}
	}
	_ebge, _bdggbc = d.Token()
	if _bdggbc != nil {
		return _bdggbc
	}
	if _eagfd, _bgefb := _ebge.(_e.EndElement); _bgefb && _eagfd.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebge)
}

type CT_NotesMaster struct {

	// Common Slide Data
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_da.CT_ColorMapping

	// Header/Footer Information for a Notes Master
	Hf *CT_HeaderFooter

	// Notes Text Style
	NotesStyle *_da.CT_TextListStyle
	ExtLst     *CT_ExtensionListModify
}

func (_decb *CT_GuideList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_efa:
	for {
		_cega, _gcdfe := d.Token()
		if _gcdfe != nil {
			return _gcdfe
		}
		switch _egeb := _cega.(type) {
		case _e.StartElement:
			switch _egeb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}:
				_acgg := NewCT_Guide()
				if _eafda := d.DecodeElement(_acgg, &_egeb); _eafda != nil {
					return _eafda
				}
				_decb.Guide = append(_decb.Guide, _acgg)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0075\u0069d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _egeb.Name)
				if _gdfb := d.Skip(); _gdfb != nil {
					return _gdfb
				}
			}
		case _e.EndElement:
			break _efa
		case _e.CharData:
		}
	}
	return nil
}

const (
	ST_TLTimeNodeMasterRelationUnset     ST_TLTimeNodeMasterRelation = 0
	ST_TLTimeNodeMasterRelationSameClick ST_TLTimeNodeMasterRelation = 1
	ST_TLTimeNodeMasterRelationLastClick ST_TLTimeNodeMasterRelation = 2
	ST_TLTimeNodeMasterRelationNextClick ST_TLTimeNodeMasterRelation = 3
)

func (_eegac ST_SplitterBarState) Validate() error { return _eegac.ValidateWithPath("") }
func NewCmLst() *CmLst                             { _eeef := &CmLst{}; _eeef.CT_CommentList = *NewCT_CommentList(); return _eeef }
func (_cdfg *SldLayout) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074"
	return _cdfg.CT_SlideLayout.MarshalXML(e, start)
}

// Validate validates the SldSyncPr and its children
func (_cgbe *SldSyncPr) Validate() error {
	return _cgbe.ValidateWithPath("\u0053l\u0064\u0053\u0079\u006e\u0063\u0050r")
}

type HandoutMaster struct{ CT_HandoutMaster }

// ValidateWithPath validates the CT_EmbeddedFontDataId and its children, prefixing error messages with path
func (_eaaf *CT_EmbeddedFontDataId) ValidateWithPath(path string) error { return nil }
func NewCT_Connector() *CT_Connector {
	_dgbc := &CT_Connector{}
	_dgbc.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_dgbc.SpPr = _da.NewCT_ShapeProperties()
	return _dgbc
}
func (_dfbgb *ST_TransitionSpeed) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_dfbgb = 0
	case "\u0073\u006c\u006f\u0077":
		*_dfbgb = 1
	case "\u006d\u0065\u0064":
		*_dfbgb = 2
	case "\u0066\u0061\u0073\u0074":
		*_dfbgb = 3
	}
	return nil
}

type ST_TLBehaviorOverrideType byte

func (_ggbff ST_Direction) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_ddbbd := _e.Attr{}
	_ddbbd.Name = name
	switch _ggbff {
	case ST_DirectionUnset:
		_ddbbd.Value = ""
	case ST_DirectionHorz:
		_ddbbd.Value = "\u0068\u006f\u0072\u007a"
	case ST_DirectionVert:
		_ddbbd.Value = "\u0076\u0065\u0072\u0074"
	}
	return _ddbbd, nil
}

type CT_CommentList struct {

	// Comment
	Cm []*CT_Comment
}

// Validate validates the Sld and its children
func (_gfee *Sld) Validate() error           { return _gfee.ValidateWithPath("\u0053\u006c\u0064") }
func NewCT_ExtensionList() *CT_ExtensionList { _gcdff := &CT_ExtensionList{}; return _gcdff }
func (_gbee *CT_InOutTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gbee.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_gdfe, _bfbd := _gbee.DirAttr.MarshalXMLAttr(_e.Name{Local: "\u0064\u0069\u0072"})
		if _bfbd != nil {
			return _bfbd
		}
		start.Attr = append(start.Attr, _gdfe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLCommonTimeNodeData and its children
func (_bddcd *CT_TLCommonTimeNodeData) Validate() error {
	return _bddcd.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}
func (_dbfag *CT_TLOleChartTargetElement) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dbfag.TypeAttr = ST_TLChartSubelementType(1)
	for _, _gcbg := range start.Attr {
		if _gcbg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dbfag.TypeAttr.UnmarshalXMLAttr(_gcbg)
			continue
		}
		if _gcbg.Name.Local == "\u006c\u0076\u006c" {
			_ebbac, _debbcc := _a.ParseUint(_gcbg.Value, 10, 32)
			if _debbcc != nil {
				return _debbcc
			}
			_gbcdd := uint32(_ebbac)
			_dbfag.LvlAttr = &_gbcdd
			continue
		}
	}
	for {
		_ddef, _effb := d.Token()
		if _effb != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0054\u0061\u0072g\u0065\u0074\u0045\u006c\u0065m\u0065\u006et\u003a\u0020\u0025\u0073", _effb)
		}
		if _dcabb, _cfdfc := _ddef.(_e.EndElement); _cfdfc && _dcabb.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLCommandType byte

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_caec := &CT_PictureNonVisual{}
	_caec.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_caec.CNvPicPr = _da.NewCT_NonVisualPictureProperties()
	_caec.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _caec
}
func NewCT_SlideMasterIdListEntry() *CT_SlideMasterIdListEntry {
	_bdcc := &CT_SlideMasterIdListEntry{}
	return _bdcc
}

type CT_Rel struct{ IdAttr string }

// ValidateWithPath validates the CT_EightDirectionTransition and its children, prefixing error messages with path
func (_beac *CT_EightDirectionTransition) ValidateWithPath(path string) error {
	if _beac.DirAttr != nil {
		if _geca := _beac.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _geca != nil {
			return _geca
		}
	}
	return nil
}

type CT_Comment struct {

	// Comment Author ID
	AuthorIdAttr uint32

	// Comment Date/Time
	DtAttr *_g.Time

	// Comment Index
	IdxAttr uint32

	// Comment Position
	Pos *_da.CT_Point2D

	// Comment's Text Content
	Text   string
	ExtLst *CT_ExtensionListModify
}

func (_gcafb ST_OleObjectFollowColorScheme) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_baaed := _e.Attr{}
	_baaed.Name = name
	switch _gcafb {
	case ST_OleObjectFollowColorSchemeUnset:
		_baaed.Value = ""
	case ST_OleObjectFollowColorSchemeNone:
		_baaed.Value = "\u006e\u006f\u006e\u0065"
	case ST_OleObjectFollowColorSchemeFull:
		_baaed.Value = "\u0066\u0075\u006c\u006c"
	case ST_OleObjectFollowColorSchemeTextAndBackground:
		_baaed.Value = "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return _baaed, nil
}

// ValidateWithPath validates the CT_ModifyVerifier and its children, prefixing error messages with path
func (_egaf *CT_ModifyVerifier) ValidateWithPath(path string) error {
	if _aggd := _egaf.CryptProviderTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072\u0079pt\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0054\u0079\u0070\u0065\u0041\u0074t\u0072"); _aggd != nil {
		return _aggd
	}
	if _gfda := _egaf.CryptAlgorithmClassAttr.ValidateWithPath(path + "\u002fC\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _gfda != nil {
		return _gfda
	}
	if _egfc := _egaf.CryptAlgorithmTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072yp\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _egfc != nil {
		return _egfc
	}
	return nil
}

type ST_IterateType byte

func (_bggfa ST_WebColorType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_beafg := _e.Attr{}
	_beafg.Name = name
	switch _bggfa {
	case ST_WebColorTypeUnset:
		_beafg.Value = ""
	case ST_WebColorTypeNone:
		_beafg.Value = "\u006e\u006f\u006e\u0065"
	case ST_WebColorTypeBrowser:
		_beafg.Value = "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case ST_WebColorTypePresentationText:
		_beafg.Value = "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_WebColorTypePresentationAccent:
		_beafg.Value = "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case ST_WebColorTypeWhiteTextOnBlack:
		_beafg.Value = "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case ST_WebColorTypeBlackTextOnWhite:
		_beafg.Value = "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return _beafg, nil
}
func (_dacfc ST_TLBehaviorAccumulateType) Validate() error { return _dacfc.ValidateWithPath("") }

type ST_TLBehaviorAdditiveType byte

func (_cfbda ST_TransitionSideDirectionType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cfbda.String(), start)
}
func (_dega ST_PhotoAlbumFrameShape) String() string {
	switch _dega {
	case 0:
		return ""
	case 1:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case 2:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case 3:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case 4:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case 5:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case 6:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case 7:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return ""
}
func (_eeebg ST_TLAnimateMotionPathEditMode) String() string {
	switch _eeebg {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case 2:
		return "\u0066\u0069\u0078e\u0064"
	}
	return ""
}

// Validate validates the CT_TLTriggerTimeNodeID and its children
func (_gedaa *CT_TLTriggerTimeNodeID) Validate() error {
	return _gedaa.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044")
}
func NewCT_Guide() *CT_Guide { _geebe := &CT_Guide{}; return _geebe }

// ValidateWithPath validates the CT_NotesMaster and its children, prefixing error messages with path
func (_cgce *CT_NotesMaster) ValidateWithPath(path string) error {
	if _beage := _cgce.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _beage != nil {
		return _beage
	}
	if _gcdcd := _cgce.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _gcdcd != nil {
		return _gcdcd
	}
	if _cgce.Hf != nil {
		if _eace := _cgce.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _eace != nil {
			return _eace
		}
	}
	if _cgce.NotesStyle != nil {
		if _gacc := _cgce.NotesStyle.ValidateWithPath(path + "/\u004e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"); _gacc != nil {
			return _gacc
		}
	}
	if _cgce.ExtLst != nil {
		if _dgbfd := _cgce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgbfd != nil {
			return _dgbfd
		}
	}
	return nil
}
func (_begf *CT_HtmlPublishProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _begf.ShowSpeakerNotesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_begf.ShowSpeakerNotesAttr))})
	}
	if _begf.TargetAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u0061\u0072\u0067\u0065\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_begf.TargetAttr)})
	}
	if _begf.TitleAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_begf.TitleAttr)})
	}
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _begf.IdAttr)})
	e.EncodeToken(start)
	if _begf.SldAll != nil {
		_adcc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_begf.SldAll, _adcc)
	}
	if _begf.SldRg != nil {
		_fdede := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_begf.SldRg, _fdede)
	}
	if _begf.CustShow != nil {
		_dbad := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_begf.CustShow, _dbad)
	}
	if _begf.ExtLst != nil {
		_dfbad := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_begf.ExtLst, _dfbad)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type ST_TLAnimateMotionBehaviorOrigin byte
type CT_Slide struct {

	// Show Slide in Slide Show
	ShowAttr *bool

	// Common slide data for slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_da.CT_ColorMappingOverride

	// Slide Transition
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide
	Timing               *CT_SlideTiming
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_cdab *CT_Control) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _edc := range start.Attr {
		if _edc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edc.Name.Local == "\u0069\u0064" {
			_dfdd, _bffd := _edc.Value, error(nil)
			if _bffd != nil {
				return _bffd
			}
			_cdab.IdAttr = &_dfdd
			continue
		}
		if _edc.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fcd, _ddcf := _edc.Value, error(nil)
			if _ddcf != nil {
				return _ddcf
			}
			_cdab.SpidAttr = &_fcd
			continue
		}
		if _edc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fffe, _ddgd := _edc.Value, error(nil)
			if _ddgd != nil {
				return _ddgd
			}
			_cdab.NameAttr = &_fffe
			continue
		}
		if _edc.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_cgd, _gcdf := _a.ParseBool(_edc.Value)
			if _gcdf != nil {
				return _gcdf
			}
			_cdab.ShowAsIconAttr = &_cgd
			continue
		}
		if _edc.Name.Local == "\u0069\u006d\u0067\u0057" {
			_ggc, _bacd := _a.ParseInt(_edc.Value, 10, 32)
			if _bacd != nil {
				return _bacd
			}
			_cbfb := int32(_ggc)
			_cdab.ImgWAttr = &_cbfb
			continue
		}
		if _edc.Name.Local == "\u0069\u006d\u0067\u0048" {
			_gedf, _cdg := _a.ParseInt(_edc.Value, 10, 32)
			if _cdg != nil {
				return _cdg
			}
			_feaf := int32(_gedf)
			_cdab.ImgHAttr = &_feaf
			continue
		}
	}
_cae:
	for {
		_dbfc, _baad := d.Token()
		if _baad != nil {
			return _baad
		}
		switch _eaee := _dbfc.(type) {
		case _e.StartElement:
			switch _eaee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdab.ExtLst = NewCT_ExtensionList()
				if _bfd := d.DecodeElement(_cdab.ExtLst, &_eaee); _bfd != nil {
					return _bfd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_cdab.Pic = NewCT_Picture()
				if _dgc := d.DecodeElement(_cdab.Pic, &_eaee); _dgc != nil {
					return _dgc
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _eaee.Name)
				if _bfde := d.Skip(); _bfde != nil {
					return _bfde
				}
			}
		case _e.EndElement:
			break _cae
		case _e.CharData:
		}
	}
	return nil
}
func (_dfgfb ST_TLChartSubelementType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_dfgfb.String(), start)
}

const (
	ST_WebScreenSizeUnset     ST_WebScreenSize = 0
	ST_WebScreenSize544x376   ST_WebScreenSize = 1
	ST_WebScreenSize640x480   ST_WebScreenSize = 2
	ST_WebScreenSize720x512   ST_WebScreenSize = 3
	ST_WebScreenSize800x600   ST_WebScreenSize = 4
	ST_WebScreenSize1024x768  ST_WebScreenSize = 5
	ST_WebScreenSize1152x882  ST_WebScreenSize = 6
	ST_WebScreenSize1152x900  ST_WebScreenSize = 7
	ST_WebScreenSize1280x1024 ST_WebScreenSize = 8
	ST_WebScreenSize1600x1200 ST_WebScreenSize = 9
	ST_WebScreenSize1800x1400 ST_WebScreenSize = 10
	ST_WebScreenSize1920x1200 ST_WebScreenSize = 11
)

func (_dbdf *CT_Extension) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0072\u0069"}, Value: _d.Sprintf("\u0025\u0076", _dbdf.UriAttr)})
	e.EncodeToken(start)
	if _dbdf.Any != nil {
		for _, _efec := range _dbdf.Any {
			_efec.MarshalXML(e, _e.StartElement{})
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bgabe *ST_TLTimeNodeSyncType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bgabe = 0
	case "\u0063a\u006e\u0053\u006c\u0069\u0070":
		*_bgabe = 1
	case "\u006c\u006f\u0063\u006b\u0065\u0064":
		*_bgabe = 2
	}
	return nil
}

type ST_WebColorType byte
type SldMaster struct{ CT_SlideMaster }

func (_cagd ST_TLTimeNodeSyncType) String() string {
	switch _cagd {
	case 0:
		return ""
	case 1:
		return "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case 2:
		return "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return ""
}
func (_edadd ST_TLBehaviorTransformType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dbddg := _e.Attr{}
	_dbddg.Name = name
	switch _edadd {
	case ST_TLBehaviorTransformTypeUnset:
		_dbddg.Value = ""
	case ST_TLBehaviorTransformTypePt:
		_dbddg.Value = "\u0070\u0074"
	case ST_TLBehaviorTransformTypeImg:
		_dbddg.Value = "\u0069\u006d\u0067"
	}
	return _dbddg, nil
}
func (_cbgegc *CT_TagList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cbgegc.Tag != nil {
		_eaebe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074a\u0067"}}
		for _, _ffcg := range _cbgegc.Tag {
			e.EncodeElement(_ffcg, _eaebe)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dbaae *CT_Shape) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dbaae.UseBgFillAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_dbaae.UseBgFillAttr))})
	}
	e.EncodeToken(start)
	_gdca := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dbaae.NvSpPr, _gdca)
	_edebg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_dbaae.SpPr, _edebg)
	if _dbaae.Style != nil {
		_febcf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_dbaae.Style, _febcf)
	}
	if _dbaae.TxBody != nil {
		_faagb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_dbaae.TxBody, _faagb)
	}
	if _dbaae.ExtLst != nil {
		_dfbg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbaae.ExtLst, _dfbg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PlaceholderTypeUnset    ST_PlaceholderType = 0
	ST_PlaceholderTypeTitle    ST_PlaceholderType = 1
	ST_PlaceholderTypeBody     ST_PlaceholderType = 2
	ST_PlaceholderTypeCtrTitle ST_PlaceholderType = 3
	ST_PlaceholderTypeSubTitle ST_PlaceholderType = 4
	ST_PlaceholderTypeDt       ST_PlaceholderType = 5
	ST_PlaceholderTypeSldNum   ST_PlaceholderType = 6
	ST_PlaceholderTypeFtr      ST_PlaceholderType = 7
	ST_PlaceholderTypeHdr      ST_PlaceholderType = 8
	ST_PlaceholderTypeObj      ST_PlaceholderType = 9
	ST_PlaceholderTypeChart    ST_PlaceholderType = 10
	ST_PlaceholderTypeTbl      ST_PlaceholderType = 11
	ST_PlaceholderTypeClipArt  ST_PlaceholderType = 12
	ST_PlaceholderTypeDgm      ST_PlaceholderType = 13
	ST_PlaceholderTypeMedia    ST_PlaceholderType = 14
	ST_PlaceholderTypeSldImg   ST_PlaceholderType = 15
	ST_PlaceholderTypePic      ST_PlaceholderType = 16
)
const (
	ST_TLTimeNodePresetClassTypeUnset     ST_TLTimeNodePresetClassType = 0
	ST_TLTimeNodePresetClassTypeEntr      ST_TLTimeNodePresetClassType = 1
	ST_TLTimeNodePresetClassTypeExit      ST_TLTimeNodePresetClassType = 2
	ST_TLTimeNodePresetClassTypeEmph      ST_TLTimeNodePresetClassType = 3
	ST_TLTimeNodePresetClassTypePath      ST_TLTimeNodePresetClassType = 4
	ST_TLTimeNodePresetClassTypeVerb      ST_TLTimeNodePresetClassType = 5
	ST_TLTimeNodePresetClassTypeMediacall ST_TLTimeNodePresetClassType = 6
)

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_aebac *CT_OleObject) ValidateWithPath(path string) error {
	if _dcgc := _aebac.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dcgc != nil {
		return _dcgc
	}
	if _aebac.Pic != nil {
		if _gdbb := _aebac.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _gdbb != nil {
			return _gdbb
		}
	}
	if _aebac.ImgWAttr != nil {
		if *_aebac.ImgWAttr < 0 {
			return _d.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_aebac.ImgWAttr)
		}
	}
	if _aebac.ImgHAttr != nil {
		if *_aebac.ImgHAttr < 0 {
			return _d.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_aebac.ImgHAttr)
		}
	}
	return nil
}
func (_baafb ST_OleObjectFollowColorScheme) ValidateWithPath(path string) error {
	switch _baafb {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baafb))
	}
	return nil
}
func (_bafdd ST_TLTimeIndefinite) String() string {
	switch _bafdd {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return ""
}
func (_cdfec ST_SlideSizeType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dgagb := _e.Attr{}
	_dgagb.Name = name
	switch _cdfec {
	case ST_SlideSizeTypeUnset:
		_dgagb.Value = ""
	case ST_SlideSizeTypeScreen4x3:
		_dgagb.Value = "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case ST_SlideSizeTypeLetter:
		_dgagb.Value = "\u006c\u0065\u0074\u0074\u0065\u0072"
	case ST_SlideSizeTypeA4:
		_dgagb.Value = "\u0041\u0034"
	case ST_SlideSizeType35mm:
		_dgagb.Value = "\u0033\u0035\u006d\u006d"
	case ST_SlideSizeTypeOverhead:
		_dgagb.Value = "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case ST_SlideSizeTypeBanner:
		_dgagb.Value = "\u0062\u0061\u006e\u006e\u0065\u0072"
	case ST_SlideSizeTypeCustom:
		_dgagb.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	case ST_SlideSizeTypeLedger:
		_dgagb.Value = "\u006c\u0065\u0064\u0067\u0065\u0072"
	case ST_SlideSizeTypeA3:
		_dgagb.Value = "\u0041\u0033"
	case ST_SlideSizeTypeB4ISO:
		_dgagb.Value = "\u0042\u0034\u0049S\u004f"
	case ST_SlideSizeTypeB5ISO:
		_dgagb.Value = "\u0042\u0035\u0049S\u004f"
	case ST_SlideSizeTypeB4JIS:
		_dgagb.Value = "\u0042\u0034\u004aI\u0053"
	case ST_SlideSizeTypeB5JIS:
		_dgagb.Value = "\u0042\u0035\u004aI\u0053"
	case ST_SlideSizeTypeHagakiCard:
		_dgagb.Value = "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case ST_SlideSizeTypeScreen16x9:
		_dgagb.Value = "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case ST_SlideSizeTypeScreen16x10:
		_dgagb.Value = "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return _dgagb, nil
}

// ValidateWithPath validates the CT_NormalViewPortion and its children, prefixing error messages with path
func (_feea *CT_NormalViewPortion) ValidateWithPath(path string) error {
	if _abcd := _feea.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _abcd != nil {
		return _abcd
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateRotationBehavior and its children, prefixing error messages with path
func (_ggbd *CT_TLAnimateRotationBehavior) ValidateWithPath(path string) error {
	if _efeee := _ggbd.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _efeee != nil {
		return _efeee
	}
	return nil
}
func (_bga *CT_ApplicationNonVisualDrawingProps) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bga.IsPhotoAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069s\u0050\u0068\u006f\u0074\u006f"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bga.IsPhotoAttr))})
	}
	if _bga.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bga.UserDrawnAttr))})
	}
	e.EncodeToken(start)
	if _bga.Ph != nil {
		_gd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0068"}}
		e.EncodeElement(_bga.Ph, _gd)
	}
	if _bga.AudioCd != nil {
		_ce := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_bga.AudioCd, _ce)
	}
	if _bga.WavAudioFile != nil {
		_db := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bga.WavAudioFile, _db)
	}
	if _bga.AudioFile != nil {
		_eb := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bga.AudioFile, _eb)
	}
	if _bga.VideoFile != nil {
		_efef := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bga.VideoFile, _efef)
	}
	if _bga.QuickTimeFile != nil {
		_dae := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_bga.QuickTimeFile, _dae)
	}
	if _bga.CustDataLst != nil {
		_beg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_bga.CustDataLst, _beg)
	}
	if _bga.ExtLst != nil {
		_ced := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bga.ExtLst, _ced)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLAnimateBehavior struct {

	// By
	ByAttr *string

	// From
	FromAttr *string

	// To
	ToAttr *string

	// Calculation Mode
	CalcmodeAttr ST_TLAnimateBehaviorCalcMode

	// Value Type
	ValueTypeAttr ST_TLAnimateBehaviorValueType
	CBhvr         *CT_TLCommonBehaviorData

	// Time Animated Value List
	TavLst *CT_TLTimeAnimateValueList
}
type CT_BuildList struct {

	// Build Paragraph
	BldP []*CT_TLBuildParagraph

	// Build Diagram
	BldDgm []*CT_TLBuildDiagram

	// Build Embedded Chart
	BldOleChart []*CT_TLOleBuildChart

	// Build Graphics
	BldGraphic []*CT_TLGraphicalObjectBuild
}
type AG_ChildSlide struct {
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func NewCT_EmbeddedFontList() *CT_EmbeddedFontList { _cbbg := &CT_EmbeddedFontList{}; return _cbbg }

// ST_TLTimeAnimateValueTime is a union type
type ST_TLTimeAnimateValueTime struct {
	ST_PositiveFixedPercentage *_da.ST_PositiveFixedPercentage
	ST_TLTimeIndefinite        ST_TLTimeIndefinite
}

func NewCT_PrintProperties() *CT_PrintProperties { _ddbe := &CT_PrintProperties{}; return _ddbe }
func (_afda ST_TLCommandType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cacda := _e.Attr{}
	_cacda.Name = name
	switch _afda {
	case ST_TLCommandTypeUnset:
		_cacda.Value = ""
	case ST_TLCommandTypeEvt:
		_cacda.Value = "\u0065\u0076\u0074"
	case ST_TLCommandTypeCall:
		_cacda.Value = "\u0063\u0061\u006c\u006c"
	case ST_TLCommandTypeVerb:
		_cacda.Value = "\u0076\u0065\u0072\u0062"
	}
	return _cacda, nil
}

type CT_TLOleChartTargetElement struct {

	// Type
	TypeAttr ST_TLChartSubelementType

	// Level
	LvlAttr *uint32
}

func (_decbg ST_IterateType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dfedb := _e.Attr{}
	_dfedb.Name = name
	switch _decbg {
	case ST_IterateTypeUnset:
		_dfedb.Value = ""
	case ST_IterateTypeEl:
		_dfedb.Value = "\u0065\u006c"
	case ST_IterateTypeWd:
		_dfedb.Value = "\u0077\u0064"
	case ST_IterateTypeLt:
		_dfedb.Value = "\u006c\u0074"
	}
	return _dfedb, nil
}
func (_ccdabc ST_TLBehaviorTransformType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ccdabc.String(), start)
}
func (_dgfce ST_TLTimeNodeMasterRelation) String() string {
	switch _dgfce {
	case 0:
		return ""
	case 1:
		return "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case 2:
		return "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case 3:
		return "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return ""
}

// ValidateWithPath validates the CT_TLTimeNodeParallel and its children, prefixing error messages with path
func (_ccdba *CT_TLTimeNodeParallel) ValidateWithPath(path string) error {
	if _ddge := _ccdba.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _ddge != nil {
		return _ddge
	}
	return nil
}

// ValidateWithPath validates the CT_TLTextTargetElement and its children, prefixing error messages with path
func (_egffd *CT_TLTextTargetElement) ValidateWithPath(path string) error {
	if _egffd.CharRg != nil {
		if _gdgba := _egffd.CharRg.ValidateWithPath(path + "\u002fC\u0068\u0061\u0072\u0052\u0067"); _gdgba != nil {
			return _gdgba
		}
	}
	if _egffd.PRg != nil {
		if _dgfg := _egffd.PRg.ValidateWithPath(path + "\u002f\u0050\u0052\u0067"); _dgfg != nil {
			return _dgfg
		}
	}
	return nil
}

const (
	ST_TransitionSpeedUnset ST_TransitionSpeed = 0
	ST_TransitionSpeedSlow  ST_TransitionSpeed = 1
	ST_TransitionSpeedMed   ST_TransitionSpeed = 2
	ST_TransitionSpeedFast  ST_TransitionSpeed = 3
)

type CT_WebProperties struct {

	// Show animation in HTML output
	ShowAnimationAttr *bool

	// Resize graphics in HTML output
	ResizeGraphicsAttr *bool

	// Allow PNG in HTML output
	AllowPngAttr *bool

	// Rely on VML for HTML output
	RelyOnVmlAttr *bool

	// Organize HTML output in folders
	OrganizeInFoldersAttr *bool

	// Use long file names in HTML output
	UseLongFilenamesAttr *bool

	// Image size for HTML output
	ImgSzAttr ST_WebScreenSize

	// Encoding for HTML output
	EncodingAttr *string

	// Slide Navigation Colors for HTML output
	ClrAttr ST_WebColorType
	ExtLst  *CT_ExtensionList
}

func (_gfg *CT_CommentList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gfg.Cm != nil {
		_gbb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006d"}}
		for _, _cba := range _gfg.Cm {
			e.EncodeElement(_cba, _gbb)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_egdae *ST_TLAnimateColorSpace) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_egdae = 0
	case "\u0072\u0067\u0062":
		*_egdae = 1
	case "\u0068\u0073\u006c":
		*_egdae = 2
	}
	return nil
}
func (_gdead ST_PrintWhat) ValidateWithPath(path string) error {
	switch _gdead {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdead))
	}
	return nil
}
func (_caba *CT_EmbeddedFontDataId) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ggbf := range start.Attr {
		if _ggbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggbf.Name.Local == "\u0069\u0064" || _ggbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ggbf.Name.Local == "\u0069\u0064" {
			_ccd, _cefbg := _ggbf.Value, error(nil)
			if _cefbg != nil {
				return _cefbg
			}
			_caba.IdAttr = _ccd
			continue
		}
	}
	for {
		_eag, _eaga := d.Token()
		if _eaga != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046o\u006e\u0074\u0044\u0061\u0074\u0061\u0049d\u003a\u0020\u0025\u0073", _eaga)
		}
		if _ggcb, _ebgd := _eag.(_e.EndElement); _ebgd && _ggcb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterIdList and its children, prefixing error messages with path
func (_eceg *CT_SlideMasterIdList) ValidateWithPath(path string) error {
	for _fbfed, _eagb := range _eceg.SldMasterId {
		if _aeeb := _eagb.ValidateWithPath(_d.Sprintf("\u0025s\u002fS\u006c\u0064\u004d\u0061\u0073t\u0065\u0072I\u0064\u005b\u0025\u0064\u005d", path, _fbfed)); _aeeb != nil {
			return _aeeb
		}
	}
	return nil
}
func (_gfce *CT_NotesSlide) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gfce.CSld = NewCT_CommonSlideData()
	for _, _ccfa := range start.Attr {
		if _ccfa.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_agbb, _bebc := _a.ParseBool(_ccfa.Value)
			if _bebc != nil {
				return _bebc
			}
			_gfce.ShowMasterSpAttr = &_agbb
			continue
		}
		if _ccfa.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_agfg, _aggdb := _a.ParseBool(_ccfa.Value)
			if _aggdb != nil {
				return _aggdb
			}
			_gfce.ShowMasterPhAnimAttr = &_agfg
			continue
		}
	}
_bccg:
	for {
		_fbaf, _fbde := d.Token()
		if _fbde != nil {
			return _fbde
		}
		switch _bdcg := _fbaf.(type) {
		case _e.StartElement:
			switch _bdcg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ddaae := d.DecodeElement(_gfce.CSld, &_bdcg); _ddaae != nil {
					return _ddaae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gfce.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _gfed := d.DecodeElement(_gfce.ClrMapOvr, &_bdcg); _gfed != nil {
					return _gfed
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfce.ExtLst = NewCT_ExtensionListModify()
				if _fbfba := d.DecodeElement(_gfce.ExtLst, &_bdcg); _fbfba != nil {
					return _fbfba
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004eo\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _bdcg.Name)
				if _bbb := d.Skip(); _bbb != nil {
					return _bbb
				}
			}
		case _e.EndElement:
			break _bccg
		case _e.CharData:
		}
	}
	return nil
}
func (_bdffe *CT_TLTemplateList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bdffe.Tmpl != nil {
		_ecggf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u006d\u0070\u006c"}}
		for _, _aeabf := range _bdffe.Tmpl {
			e.EncodeElement(_aeabf, _ecggf)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_efcfg ST_TLBehaviorOverrideType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_efcfg.String(), start)
}
func NewCT_TransitionSoundAction() *CT_TransitionSoundAction {
	_aaebf := &CT_TransitionSoundAction{}
	return _aaebf
}

// Validate validates the CT_TLCommonMediaNodeData and its children
func (_dbae *CT_TLCommonMediaNodeData) Validate() error {
	return _dbae.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}
func (_dgbad *ST_TLTimeAnimateValueTime) Validate() error { return _dgbad.ValidateWithPath("") }
func (_cbaf *CT_TLBuildParagraph) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cbaf.BuildAttr != ST_TLParaBuildTypeUnset {
		_bbcg, _gdba := _cbaf.BuildAttr.MarshalXMLAttr(_e.Name{Local: "\u0062\u0075\u0069l\u0064"})
		if _gdba != nil {
			return _gdba
		}
		start.Attr = append(start.Attr, _bbcg)
	}
	if _cbaf.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_cbaf.BldLvlAttr)})
	}
	if _cbaf.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cbaf.AnimBgAttr))})
	}
	if _cbaf.AutoUpdateAnimBgAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cbaf.AutoUpdateAnimBgAttr))})
	}
	if _cbaf.RevAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u0065\u0076"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cbaf.RevAttr))})
	}
	if _cbaf.AdvAutoAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061d\u0076\u0041\u0075\u0074\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_cbaf.AdvAutoAttr)})
	}
	if _cbaf.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_cbaf.SpidAttr)})
	}
	if _cbaf.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_cbaf.GrpIdAttr)})
	}
	if _cbaf.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cbaf.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _cbaf.TmplLst != nil {
		_ecdc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u006d\u0070\u006c\u004c\u0073t"}}
		e.EncodeElement(_cbaf.TmplLst, _ecdc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_abfgf ST_TLBehaviorAdditiveType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_abfgf.String(), start)
}
func NewCT_CommentList() *CT_CommentList { _fbdc := &CT_CommentList{}; return _fbdc }
func (_gbda *CT_HandoutMaster) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_egfb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gbda.CSld, _egfb)
	_agcgb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_gbda.ClrMap, _agcgb)
	if _gbda.Hf != nil {
		_ebcd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_gbda.Hf, _ebcd)
	}
	if _gbda.ExtLst != nil {
		_afdb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbda.ExtLst, _afdb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_OutlineViewSlideEntry struct {
	IdAttr string

	// Collapsed
	CollapseAttr *bool
}

func NewCT_TLByAnimateColorTransform() *CT_TLByAnimateColorTransform {
	_cdec := &CT_TLByAnimateColorTransform{}
	return _cdec
}

type CT_Empty struct{}
type CT_PrintProperties struct {

	// Print Output
	PrnWhatAttr ST_PrintWhat

	// Print Color Mode
	ClrModeAttr ST_PrintColorMode

	// Print Hidden Slides
	HiddenSlidesAttr *bool

	// Scale to Fit Paper when printing
	ScaleToFitPaperAttr *bool

	// Frame slides when printing
	FrameSlidesAttr *bool
	ExtLst          *CT_ExtensionList
}

func NewNotes() *Notes { _gebed := &Notes{}; _gebed.CT_NotesSlide = *NewCT_NotesSlide(); return _gebed }
func (_fffca *CT_TLMediaNodeVideo) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fffca.FullScrnAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_fffca.FullScrnAttr))})
	}
	e.EncodeToken(start)
	_cddgg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_fffca.CMediaNode, _cddgg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bgdaf ST_PlaceholderType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cdefe := _e.Attr{}
	_cdefe.Name = name
	switch _bgdaf {
	case ST_PlaceholderTypeUnset:
		_cdefe.Value = ""
	case ST_PlaceholderTypeTitle:
		_cdefe.Value = "\u0074\u0069\u0074l\u0065"
	case ST_PlaceholderTypeBody:
		_cdefe.Value = "\u0062\u006f\u0064\u0079"
	case ST_PlaceholderTypeCtrTitle:
		_cdefe.Value = "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeSubTitle:
		_cdefe.Value = "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeDt:
		_cdefe.Value = "\u0064\u0074"
	case ST_PlaceholderTypeSldNum:
		_cdefe.Value = "\u0073\u006c\u0064\u004e\u0075\u006d"
	case ST_PlaceholderTypeFtr:
		_cdefe.Value = "\u0066\u0074\u0072"
	case ST_PlaceholderTypeHdr:
		_cdefe.Value = "\u0068\u0064\u0072"
	case ST_PlaceholderTypeObj:
		_cdefe.Value = "\u006f\u0062\u006a"
	case ST_PlaceholderTypeChart:
		_cdefe.Value = "\u0063\u0068\u0061r\u0074"
	case ST_PlaceholderTypeTbl:
		_cdefe.Value = "\u0074\u0062\u006c"
	case ST_PlaceholderTypeClipArt:
		_cdefe.Value = "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case ST_PlaceholderTypeDgm:
		_cdefe.Value = "\u0064\u0067\u006d"
	case ST_PlaceholderTypeMedia:
		_cdefe.Value = "\u006d\u0065\u0064i\u0061"
	case ST_PlaceholderTypeSldImg:
		_cdefe.Value = "\u0073\u006c\u0064\u0049\u006d\u0067"
	case ST_PlaceholderTypePic:
		_cdefe.Value = "\u0070\u0069\u0063"
	}
	return _cdefe, nil
}

// Validate validates the Notes and its children
func (_gdfab *Notes) Validate() error { return _gdfab.ValidateWithPath("\u004e\u006f\u0074e\u0073") }

// ValidateWithPath validates the CT_OleObjectEmbed and its children, prefixing error messages with path
func (_ffda *CT_OleObjectEmbed) ValidateWithPath(path string) error {
	if _cgggc := _ffda.FollowColorSchemeAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006clo\u0077\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u0074t\u0072"); _cgggc != nil {
		return _cgggc
	}
	if _ffda.ExtLst != nil {
		if _degc := _ffda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _degc != nil {
			return _degc
		}
	}
	return nil
}
func NewCT_SlideTiming() *CT_SlideTiming { _dbega := &CT_SlideTiming{}; return _dbega }

// ValidateWithPath validates the CT_TLCommonTimeNodeData and its children, prefixing error messages with path
func (_fbda *CT_TLCommonTimeNodeData) ValidateWithPath(path string) error {
	if _efcg := _fbda.PresetClassAttr.ValidateWithPath(path + "\u002f\u0050r\u0065\u0073\u0065t\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _efcg != nil {
		return _efcg
	}
	if _fbda.DurAttr != nil {
		if _abeg := _fbda.DurAttr.ValidateWithPath(path + "\u002f\u0044\u0075\u0072\u0041\u0074\u0074\u0072"); _abeg != nil {
			return _abeg
		}
	}
	if _fbda.RepeatCountAttr != nil {
		if _adcd := _fbda.RepeatCountAttr.ValidateWithPath(path + "\u002f\u0052e\u0070\u0065\u0061t\u0043\u006f\u0075\u006e\u0074\u0041\u0074\u0074\u0072"); _adcd != nil {
			return _adcd
		}
	}
	if _fbda.RepeatDurAttr != nil {
		if _abegg := _fbda.RepeatDurAttr.ValidateWithPath(path + "\u002f\u0052\u0065\u0070\u0065\u0061\u0074\u0044\u0075r\u0041\u0074\u0074\u0072"); _abegg != nil {
			return _abegg
		}
	}
	if _fbda.SpdAttr != nil {
		if _gadab := _fbda.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _gadab != nil {
			return _gadab
		}
	}
	if _fbda.AccelAttr != nil {
		if _ccgcd := _fbda.AccelAttr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _ccgcd != nil {
			return _ccgcd
		}
	}
	if _fbda.DecelAttr != nil {
		if _bacbe := _fbda.DecelAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _bacbe != nil {
			return _bacbe
		}
	}
	if _bdfce := _fbda.RestartAttr.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u0061\u0072\u0074\u0041\u0074\u0074\u0072"); _bdfce != nil {
		return _bdfce
	}
	if _fbfeg := _fbda.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _fbfeg != nil {
		return _fbfeg
	}
	if _cfbc := _fbda.SyncBehaviorAttr.ValidateWithPath(path + "\u002f\u0053\u0079\u006e\u0063\u0042\u0065\u0068\u0061\u0076\u0069\u006fr\u0041\u0074\u0074\u0072"); _cfbc != nil {
		return _cfbc
	}
	if _daag := _fbda.MasterRelAttr.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0052\u0065l\u0041\u0074\u0074\u0072"); _daag != nil {
		return _daag
	}
	if _fegeff := _fbda.NodeTypeAttr.ValidateWithPath(path + "\u002f\u004e\u006f\u0064\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fegeff != nil {
		return _fegeff
	}
	if _fbda.StCondLst != nil {
		if _aefa := _fbda.StCondLst.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _aefa != nil {
			return _aefa
		}
	}
	if _fbda.EndCondLst != nil {
		if _egfcf := _fbda.EndCondLst.ValidateWithPath(path + "/\u0045\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _egfcf != nil {
			return _egfcf
		}
	}
	if _fbda.EndSync != nil {
		if _edbc := _fbda.EndSync.ValidateWithPath(path + "\u002f\u0045\u006e\u0064\u0053\u0079\u006e\u0063"); _edbc != nil {
			return _edbc
		}
	}
	if _fbda.Iterate != nil {
		if _bfbde := _fbda.Iterate.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u0072\u0061\u0074\u0065"); _bfbde != nil {
			return _bfbde
		}
	}
	if _fbda.ChildTnLst != nil {
		if _egdgg := _fbda.ChildTnLst.ValidateWithPath(path + "/\u0043\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"); _egdgg != nil {
			return _egdgg
		}
	}
	if _fbda.SubTnLst != nil {
		if _eaeb := _fbda.SubTnLst.ValidateWithPath(path + "\u002fS\u0075\u0062\u0054\u006e\u004c\u0073t"); _eaeb != nil {
			return _eaeb
		}
	}
	return nil
}
func (_beffg ST_TLParaBuildType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_beffg.String(), start)
}

// Validate validates the CT_ShowProperties and its children
func (_gebg *CT_ShowProperties) Validate() error {
	return _gebg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_SlideLayoutIdListEntry and its children
func (_eegg *CT_SlideLayoutIdListEntry) Validate() error {
	return _eegg.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func (_febb *CT_SlideRelationshipListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fbfdd := range start.Attr {
		if _fbfdd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbfdd.Name.Local == "\u0069\u0064" || _fbfdd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbfdd.Name.Local == "\u0069\u0064" {
			_ceggb, _gbfaf := _fbfdd.Value, error(nil)
			if _gbfaf != nil {
				return _gbfaf
			}
			_febb.IdAttr = _ceggb
			continue
		}
	}
	for {
		_bfdba, _adef := d.Token()
		if _adef != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u003a\u0020\u0025\u0073", _adef)
		}
		if _adfcb, _fgdaf := _bfdba.(_e.EndElement); _fgdaf && _adfcb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateMotionBehavior and its children, prefixing error messages with path
func (_abccg *CT_TLAnimateMotionBehavior) ValidateWithPath(path string) error {
	if _bfgbg := _abccg.OriginAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0067\u0069\u006e\u0041\u0074\u0074\u0072"); _bfgbg != nil {
		return _bfgbg
	}
	if _bgf := _abccg.PathEditModeAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u0045\u0064\u0069\u0074\u004d\u006f\u0064e\u0041\u0074\u0074\u0072"); _bgf != nil {
		return _bgf
	}
	if _afabd := _abccg.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _afabd != nil {
		return _afabd
	}
	if _abccg.By != nil {
		if _cgggg := _abccg.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _cgggg != nil {
			return _cgggg
		}
	}
	if _abccg.From != nil {
		if _edbac := _abccg.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _edbac != nil {
			return _edbac
		}
	}
	if _abccg.To != nil {
		if _fabc := _abccg.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _fabc != nil {
			return _fabc
		}
	}
	if _abccg.RCtr != nil {
		if _geee := _abccg.RCtr.ValidateWithPath(path + "\u002f\u0052\u0043t\u0072"); _geee != nil {
			return _geee
		}
	}
	return nil
}

// Validate validates the CT_PhotoAlbum and its children
func (_adgf *CT_PhotoAlbum) Validate() error {
	return _adgf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d")
}

// Validate validates the CT_TLTimeTargetElement and its children
func (_begfb *CT_TLTimeTargetElement) Validate() error {
	return _begfb.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func (_gdggg *CT_NotesMaster) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gdggg.CSld = NewCT_CommonSlideData()
	_gdggg.ClrMap = _da.NewCT_ColorMapping()
_agab:
	for {
		_edeb, _cfge := d.Token()
		if _cfge != nil {
			return _cfge
		}
		switch _eab := _edeb.(type) {
		case _e.StartElement:
			switch _eab.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ebfd := d.DecodeElement(_gdggg.CSld, &_eab); _ebfd != nil {
					return _ebfd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _cfab := d.DecodeElement(_gdggg.ClrMap, &_eab); _cfab != nil {
					return _cfab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_gdggg.Hf = NewCT_HeaderFooter()
				if _bffcd := d.DecodeElement(_gdggg.Hf, &_eab); _bffcd != nil {
					return _bffcd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_gdggg.NotesStyle = _da.NewCT_TextListStyle()
				if _dddg := d.DecodeElement(_gdggg.NotesStyle, &_eab); _dddg != nil {
					return _dddg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdggg.ExtLst = NewCT_ExtensionListModify()
				if _efcag := d.DecodeElement(_gdggg.ExtLst, &_eab); _efcag != nil {
					return _efcag
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _eab.Name)
				if _ggfdb := d.Skip(); _ggfdb != nil {
					return _ggfdb
				}
			}
		case _e.EndElement:
			break _agab
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_OleObjectEmbed() *CT_OleObjectEmbed { _gbbfe := &CT_OleObjectEmbed{}; return _gbbfe }
func NewCT_TLAnimVariantStringVal() *CT_TLAnimVariantStringVal {
	_bafgd := &CT_TLAnimVariantStringVal{}
	return _bafgd
}
func (_ecfae *CT_TLTimeNodeSequence) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ecfae.CTn = NewCT_TLCommonTimeNodeData()
	for _, _fcefg := range start.Attr {
		if _fcefg.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074" {
			_gfbbf, _edbcgd := _a.ParseBool(_fcefg.Value)
			if _edbcgd != nil {
				return _edbcgd
			}
			_ecfae.ConcurrentAttr = &_gfbbf
			continue
		}
		if _fcefg.Name.Local == "\u0070\u0072\u0065\u0076\u0041\u0063" {
			_ecfae.PrevAcAttr.UnmarshalXMLAttr(_fcefg)
			continue
		}
		if _fcefg.Name.Local == "\u006e\u0065\u0078\u0074\u0041\u0063" {
			_ecfae.NextAcAttr.UnmarshalXMLAttr(_fcefg)
			continue
		}
	}
_aafec:
	for {
		_ecfca, _cbdbg := d.Token()
		if _cbdbg != nil {
			return _cbdbg
		}
		switch _acdb := _ecfca.(type) {
		case _e.StartElement:
			switch _acdb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _cfea := d.DecodeElement(_ecfae.CTn, &_acdb); _cfea != nil {
					return _cfea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_ecfae.PrevCondLst = NewCT_TLTimeConditionList()
				if _agcde := d.DecodeElement(_ecfae.PrevCondLst, &_acdb); _agcde != nil {
					return _agcde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_ecfae.NextCondLst = NewCT_TLTimeConditionList()
				if _gabcf := d.DecodeElement(_ecfae.NextCondLst, &_acdb); _gabcf != nil {
					return _gabcf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _acdb.Name)
				if _fcbgf := d.Skip(); _fcbgf != nil {
					return _fcbgf
				}
			}
		case _e.EndElement:
			break _aafec
		case _e.CharData:
		}
	}
	return nil
}

type CT_TLAnimateColorBehavior struct {

	// Color Space
	ClrSpcAttr ST_TLAnimateColorSpace

	// Direction
	DirAttr ST_TLAnimateColorDirection
	CBhvr   *CT_TLCommonBehaviorData

	// By
	By *CT_TLByAnimateColorTransform

	// From
	From *_da.CT_Color

	// To
	To *_da.CT_Color
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuild and its children, prefixing error messages with path
func (_cbgf *CT_TLGraphicalObjectBuild) ValidateWithPath(path string) error {
	if _cbgf.BldAsOne != nil {
		if _egaba := _cbgf.BldAsOne.ValidateWithPath(path + "\u002fB\u006c\u0064\u0041\u0073\u004f\u006ee"); _egaba != nil {
			return _egaba
		}
	}
	if _cbgf.BldSub != nil {
		if _addbef := _cbgf.BldSub.ValidateWithPath(path + "\u002fB\u006c\u0064\u0053\u0075\u0062"); _addbef != nil {
			return _addbef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_dafab *CT_Shape) ValidateWithPath(path string) error {
	if _dcbdd := _dafab.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _dcbdd != nil {
		return _dcbdd
	}
	if _dfbc := _dafab.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dfbc != nil {
		return _dfbc
	}
	if _dafab.Style != nil {
		if _egfe := _dafab.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _egfe != nil {
			return _egfe
		}
	}
	if _dafab.TxBody != nil {
		if _adafg := _dafab.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _adafg != nil {
			return _adafg
		}
	}
	if _dafab.ExtLst != nil {
		if _ecdeb := _dafab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecdeb != nil {
			return _ecdeb
		}
	}
	return nil
}
func (_gcd *CT_CommentAuthorList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gcd.CmAuthor != nil {
		_ccad := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}}
		for _, _efgg := range _gcd.CmAuthor {
			e.EncodeElement(_efgg, _ccad)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLAnimateScaleBehavior struct {

	// Zoom Content
	ZoomContentsAttr *bool
	CBhvr            *CT_TLCommonBehaviorData

	// By
	By   *CT_TLPoint
	From *CT_TLPoint

	// To
	To *CT_TLPoint
}

func (_ceedc ST_TransitionSpeed) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ceedc.String(), start)
}
func (_fdg *CT_ExtensionList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_egb:
	for {
		_caaad, _cdeg := d.Token()
		if _cdeg != nil {
			return _cdeg
		}
		switch _fdeb := _caaad.(type) {
		case _e.StartElement:
			switch _fdeb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_ddffg := NewCT_Extension()
				if _bdbd := d.DecodeElement(_ddffg, &_fdeb); _bdbd != nil {
					return _bdbd
				}
				_fdg.Ext = append(_fdg.Ext, _ddffg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _fdeb.Name)
				if _ccbea := d.Skip(); _ccbea != nil {
					return _ccbea
				}
			}
		case _e.EndElement:
			break _egb
		case _e.CharData:
		}
	}
	return nil
}
func (_gebec ST_TLPreviousActionType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_gebec.String(), start)
}

// ValidateWithPath validates the CT_HandoutMaster and its children, prefixing error messages with path
func (_gcdc *CT_HandoutMaster) ValidateWithPath(path string) error {
	if _cbff := _gcdc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _cbff != nil {
		return _cbff
	}
	if _cfdg := _gcdc.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _cfdg != nil {
		return _cfdg
	}
	if _gcdc.Hf != nil {
		if _fbeag := _gcdc.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _fbeag != nil {
			return _fbeag
		}
	}
	if _gcdc.ExtLst != nil {
		if _daaa := _gcdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daaa != nil {
			return _daaa
		}
	}
	return nil
}
func (_dbdfc *CT_OleObjectChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dbdfc.Embed != nil {
		_degb := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0065\u006d\u0062\u0065\u0064"}}
		e.EncodeElement(_dbdfc.Embed, _degb)
	}
	if _dbdfc.Link != nil {
		_defad := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006c\u0069\u006e\u006b"}}
		e.EncodeElement(_dbdfc.Link, _defad)
	}
	return nil
}
func (_abaef *CT_TLAnimVariant) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _abaef.BoolVal != nil {
		_aaaa := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0062\u006f\u006f\u006c\u0056\u0061l"}}
		e.EncodeElement(_abaef.BoolVal, _aaaa)
	}
	if _abaef.IntVal != nil {
		_fdaeb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0069\u006e\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_abaef.IntVal, _fdaeb)
	}
	if _abaef.FltVal != nil {
		_efcf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0066\u006c\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_abaef.FltVal, _efcf)
	}
	if _abaef.StrVal != nil {
		_fcba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_abaef.StrVal, _fcba)
	}
	if _abaef.ClrVal != nil {
		_bagg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_abaef.ClrVal, _bagg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_WebProperties() *CT_WebProperties { _egdf := &CT_WebProperties{}; return _egdf }

// ValidateWithPath validates the CT_TLTimeAnimateValue and its children, prefixing error messages with path
func (_cegag *CT_TLTimeAnimateValue) ValidateWithPath(path string) error {
	if _cegag.TmAttr != nil {
		if _dfbgf := _cegag.TmAttr.ValidateWithPath(path + "\u002fT\u006d\u0041\u0074\u0074\u0072"); _dfbgf != nil {
			return _dfbgf
		}
	}
	if _cegag.Val != nil {
		if _dgcde := _cegag.Val.ValidateWithPath(path + "\u002f\u0056\u0061\u006c"); _dgcde != nil {
			return _dgcde
		}
	}
	return nil
}
func (_efgec *CT_SlideIdListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _efgec.IdAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _efgec.RIdAttr)})
	e.EncodeToken(start)
	if _efgec.ExtLst != nil {
		_ccgacb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efgec.ExtLst, _ccgacb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_geedg ST_PlaceholderType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_geedg.String(), start)
}

// ValidateWithPath validates the OleObj and its children, prefixing error messages with path
func (_gafdc *OleObj) ValidateWithPath(path string) error {
	if _cffcf := _gafdc.CT_OleObject.ValidateWithPath(path); _cffcf != nil {
		return _cffcf
	}
	return nil
}

// ValidateWithPath validates the CT_CommonViewProperties and its children, prefixing error messages with path
func (_dfe *CT_CommonViewProperties) ValidateWithPath(path string) error {
	if _bggc := _dfe.Scale.ValidateWithPath(path + "\u002f\u0053\u0063\u0061\u006c\u0065"); _bggc != nil {
		return _bggc
	}
	if _dfa := _dfe.Origin.ValidateWithPath(path + "\u002fO\u0072\u0069\u0067\u0069\u006e"); _dfa != nil {
		return _dfa
	}
	return nil
}
func NewCT_StringTag() *CT_StringTag { _degf := &CT_StringTag{}; return _degf }

// Validate validates the CT_PrintProperties and its children
func (_afdea *CT_PrintProperties) Validate() error {
	return _afdea.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func (_bdfc *CT_GraphicalObjectFrame) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bdfc.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_bdfc.Xfrm = _da.NewCT_Transform2D()
	_bdfc.Graphic = _da.NewGraphic()
	for _, _fbcd := range start.Attr {
		if _fbcd.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_bdfc.BwModeAttr.UnmarshalXMLAttr(_fbcd)
			continue
		}
	}
_cfdf:
	for {
		_ffaa, _decd := d.Token()
		if _decd != nil {
			return _decd
		}
		switch _ffba := _ffaa.(type) {
		case _e.StartElement:
			switch _ffba.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _becff := d.DecodeElement(_bdfc.NvGraphicFramePr, &_ffba); _becff != nil {
					return _becff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _bece := d.DecodeElement(_bdfc.Xfrm, &_ffba); _bece != nil {
					return _bece
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _gcgc := d.DecodeElement(_bdfc.Graphic, &_ffba); _gcgc != nil {
					return _gcgc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdfc.ExtLst = NewCT_ExtensionListModify()
				if _cead := d.DecodeElement(_bdfc.ExtLst, &_ffba); _cead != nil {
					return _cead
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _ffba.Name)
				if _cdaa := d.Skip(); _cdaa != nil {
					return _cdaa
				}
			}
		case _e.EndElement:
			break _cfdf
		case _e.CharData:
		}
	}
	return nil
}
func (_fdgg *CT_Kinsoku) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ccdae := range start.Attr {
		if _ccdae.Name.Local == "\u006c\u0061\u006e\u0067" {
			_ddcg, _bfgbd := _ccdae.Value, error(nil)
			if _bfgbd != nil {
				return _bfgbd
			}
			_fdgg.LangAttr = &_ddcg
			continue
		}
		if _ccdae.Name.Local == "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073" {
			_eccc, _eeed := _ccdae.Value, error(nil)
			if _eeed != nil {
				return _eeed
			}
			_fdgg.InvalStCharsAttr = _eccc
			continue
		}
		if _ccdae.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073" {
			_gebd, _aeec := _ccdae.Value, error(nil)
			if _aeec != nil {
				return _aeec
			}
			_fdgg.InvalEndCharsAttr = _gebd
			continue
		}
	}
	for {
		_dacf, _deda := d.Token()
		if _deda != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075\u003a\u0020%\u0073", _deda)
		}
		if _dee, _bdggd := _dacf.(_e.EndElement); _bdggd && _dee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bcbde ST_SlideSizeType) String() string {
	switch _bcbde {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case 2:
		return "\u006c\u0065\u0074\u0074\u0065\u0072"
	case 3:
		return "\u0041\u0034"
	case 4:
		return "\u0033\u0035\u006d\u006d"
	case 5:
		return "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case 6:
		return "\u0062\u0061\u006e\u006e\u0065\u0072"
	case 7:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	case 8:
		return "\u006c\u0065\u0064\u0067\u0065\u0072"
	case 9:
		return "\u0041\u0033"
	case 10:
		return "\u0042\u0034\u0049S\u004f"
	case 11:
		return "\u0042\u0035\u0049S\u004f"
	case 12:
		return "\u0042\u0034\u004aI\u0053"
	case 13:
		return "\u0042\u0035\u004aI\u0053"
	case 14:
		return "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case 15:
		return "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case 16:
		return "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return ""
}

// Validate validates the CT_SlideTiming and its children
func (_ccgada *CT_SlideTiming) Validate() error {
	return _ccgada.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_cfec *CT_Extension) ValidateWithPath(path string) error { return nil }

type ST_TLDiagramBuildType byte

func (_eacbb *ST_TLBehaviorTransformType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gaeca, _babcd := d.Token()
	if _babcd != nil {
		return _babcd
	}
	if _gcbaa, _ecdga := _gaeca.(_e.EndElement); _ecdga && _gcbaa.Name == start.Name {
		*_eacbb = 1
		return nil
	}
	if _gdgf, _gfccb := _gaeca.(_e.CharData); !_gfccb {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaeca)
	} else {
		switch string(_gdgf) {
		case "":
			*_eacbb = 0
		case "\u0070\u0074":
			*_eacbb = 1
		case "\u0069\u006d\u0067":
			*_eacbb = 2
		}
	}
	_gaeca, _babcd = d.Token()
	if _babcd != nil {
		return _babcd
	}
	if _edaae, _dcede := _gaeca.(_e.EndElement); _dcede && _edaae.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaeca)
}
func NewCT_TLBuildDiagram() *CT_TLBuildDiagram { _egefe := &CT_TLBuildDiagram{}; return _egefe }
func (_ceef *CT_SlideLayoutIdList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_cded:
	for {
		_fbee, _beagfa := d.Token()
		if _beagfa != nil {
			return _beagfa
		}
		switch _eggc := _fbee.(type) {
		case _e.StartElement:
			switch _eggc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}:
				_febgc := NewCT_SlideLayoutIdListEntry()
				if _gfeg := d.DecodeElement(_febgc, &_eggc); _gfeg != nil {
					return _gfeg
				}
				_ceef.SldLayoutId = append(_ceef.SldLayoutId, _febgc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _eggc.Name)
				if _aggf := d.Skip(); _aggf != nil {
					return _aggf
				}
			}
		case _e.EndElement:
			break _cded
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_TLGraphicalObjectBuild() *CT_TLGraphicalObjectBuild {
	_fcfcc := &CT_TLGraphicalObjectBuild{}
	return _fcfcc
}

// Validate validates the CT_CommonSlideViewProperties and its children
func (_ege *CT_CommonSlideViewProperties) Validate() error {
	return _ege.ValidateWithPath("\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}
func (_bffdc *ST_TLBehaviorAdditiveType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bffdc = 0
	case "\u0062\u0061\u0073\u0065":
		*_bffdc = 1
	case "\u0073\u0075\u006d":
		*_bffdc = 2
	case "\u0072\u0065\u0070\u006c":
		*_bffdc = 3
	case "\u006d\u0075\u006c\u0074":
		*_bffdc = 4
	case "\u006e\u006f\u006e\u0065":
		*_bffdc = 5
	}
	return nil
}
func NewCT_Shape() *CT_Shape {
	_feaab := &CT_Shape{}
	_feaab.NvSpPr = NewCT_ShapeNonVisual()
	_feaab.SpPr = _da.NewCT_ShapeProperties()
	return _feaab
}
func (_fdbe *CT_Connector) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fdbe.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_fdbe.SpPr = _da.NewCT_ShapeProperties()
_ddg:
	for {
		_abad, _aag := d.Token()
		if _aag != nil {
			return _aag
		}
		switch _fegf := _abad.(type) {
		case _e.StartElement:
			switch _fegf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _fdec := d.DecodeElement(_fdbe.NvCxnSpPr, &_fegf); _fdec != nil {
					return _fdec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _cbf := d.DecodeElement(_fdbe.SpPr, &_fegf); _cbf != nil {
					return _cbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fdbe.Style = _da.NewCT_ShapeStyle()
				if _bec := d.DecodeElement(_fdbe.Style, &_fegf); _bec != nil {
					return _bec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdbe.ExtLst = NewCT_ExtensionListModify()
				if _aega := d.DecodeElement(_fdbe.ExtLst, &_fegf); _aega != nil {
					return _aega
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _fegf.Name)
				if _fbf := d.Skip(); _fbf != nil {
					return _fbf
				}
			}
		case _e.EndElement:
			break _ddg
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_TLMediaNodeAudio() *CT_TLMediaNodeAudio {
	_gdbge := &CT_TLMediaNodeAudio{}
	_gdbge.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _gdbge
}
func (_edbgf *CT_ShowInfoBrowse) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _edbgf.ShowScrollbarAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_edbgf.ShowScrollbarAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dcebf *CT_Control) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dcebf.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_dcebf.SpidAttr)})
	}
	if _dcebf.NameAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_dcebf.NameAttr)})
	}
	if _dcebf.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_dcebf.ShowAsIconAttr))})
	}
	if _dcebf.IdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_dcebf.IdAttr)})
	}
	if _dcebf.ImgWAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _d.Sprintf("\u0025\u0076", *_dcebf.ImgWAttr)})
	}
	if _dcebf.ImgHAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _d.Sprintf("\u0025\u0076", *_dcebf.ImgHAttr)})
	}
	e.EncodeToken(start)
	if _dcebf.ExtLst != nil {
		_caaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcebf.ExtLst, _caaf)
	}
	if _dcebf.Pic != nil {
		_cabe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_dcebf.Pic, _cabe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLByAnimateColorTransform and its children, prefixing error messages with path
func (_accca *CT_TLByAnimateColorTransform) ValidateWithPath(path string) error {
	if _accca.Rgb != nil {
		if _gedc := _accca.Rgb.ValidateWithPath(path + "\u002f\u0052\u0067\u0062"); _gedc != nil {
			return _gedc
		}
	}
	if _accca.Hsl != nil {
		if _dgdaa := _accca.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _dgdaa != nil {
			return _dgdaa
		}
	}
	return nil
}

// Validate validates the CmAuthorLst and its children
func (_abefa *CmAuthorLst) Validate() error {
	return _abefa.ValidateWithPath("C\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074")
}
func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_eddb := &CT_GraphicalObjectFrame{}
	_eddb.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_eddb.Xfrm = _da.NewCT_Transform2D()
	_eddb.Graphic = _da.NewGraphic()
	return _eddb
}

type CT_HeaderFooter struct {

	// Slide Number Placeholder
	SldNumAttr *bool

	// Header Placeholder
	HdrAttr *bool

	// Footer Placeholder
	FtrAttr *bool

	// Date/Time Placeholder
	DtAttr *bool
	ExtLst *CT_ExtensionListModify
}

func NewCT_HandoutMasterIdListEntry() *CT_HandoutMasterIdListEntry {
	_agda := &CT_HandoutMasterIdListEntry{}
	return _agda
}
func (_faab *CT_Guide) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fbfa := range start.Attr {
		if _fbfa.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_faab.OrientAttr.UnmarshalXMLAttr(_fbfa)
			continue
		}
		if _fbfa.Name.Local == "\u0070\u006f\u0073" {
			_fegab, _bgcg := ParseUnionST_Coordinate32(_fbfa.Value)
			if _bgcg != nil {
				return _bgcg
			}
			_faab.PosAttr = &_fegab
			continue
		}
	}
	for {
		_aaf, _cfcd := d.Token()
		if _cfcd != nil {
			return _d.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0075\u0069\u0064\u0065: \u0025\u0073", _cfcd)
		}
		if _eacd, _egcg := _aaf.(_e.EndElement); _egcg && _eacd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_aba *CT_Comment) ValidateWithPath(path string) error {
	if _ecbc := _aba.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _ecbc != nil {
		return _ecbc
	}
	if _aba.ExtLst != nil {
		if _bee := _aba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bee != nil {
			return _bee
		}
	}
	return nil
}

type CT_TLBuildParagraph struct {

	// Build Types
	BuildAttr ST_TLParaBuildType

	// Build Level
	BldLvlAttr *uint32

	// Animate Background
	AnimBgAttr *bool

	// Auto Update Animation Background
	AutoUpdateAnimBgAttr *bool

	// Reverse
	RevAttr *bool

	// Auto Advance Time
	AdvAutoAttr *ST_TLTime

	// Template effects
	TmplLst      *CT_TLTemplateList
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}
type CT_TLShapeTargetElement struct {

	// Shape ID
	SpidAttr uint32

	// Background
	Bg *CT_Empty

	// Subshape
	SubSp *CT_TLSubShapeId

	// Embedded Chart Element
	OleChartEl *CT_TLOleChartTargetElement

	// Text Element
	TxEl *CT_TLTextTargetElement

	// Graphic Element
	GraphicEl *_da.CT_AnimationElementChoice
}

func (_feebb *CT_HeaderFooter) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _feebb.SldNumAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u006c\u0064\u004e\u0075\u006d"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_feebb.SldNumAttr))})
	}
	if _feebb.HdrAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0068\u0064\u0072"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_feebb.HdrAttr))})
	}
	if _feebb.FtrAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0074\u0072"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_feebb.FtrAttr))})
	}
	if _feebb.DtAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064\u0074"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_feebb.DtAttr))})
	}
	e.EncodeToken(start)
	if _feebb.ExtLst != nil {
		_bbed := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_feebb.ExtLst, _bbed)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_eeg *CT_CommentAuthor) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bbea := range start.Attr {
		if _bbea.Name.Local == "\u0069\u0064" {
			_eefb, _agc := _a.ParseUint(_bbea.Value, 10, 32)
			if _agc != nil {
				return _agc
			}
			_eeg.IdAttr = uint32(_eefb)
			continue
		}
		if _bbea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abaa, _eaa := _bbea.Value, error(nil)
			if _eaa != nil {
				return _eaa
			}
			_eeg.NameAttr = _abaa
			continue
		}
		if _bbea.Name.Local == "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073" {
			_cdc, _ddcb := _bbea.Value, error(nil)
			if _ddcb != nil {
				return _ddcb
			}
			_eeg.InitialsAttr = _cdc
			continue
		}
		if _bbea.Name.Local == "\u006ca\u0073\u0074\u0049\u0064\u0078" {
			_aded, _edfa := _a.ParseUint(_bbea.Value, 10, 32)
			if _edfa != nil {
				return _edfa
			}
			_eeg.LastIdxAttr = uint32(_aded)
			continue
		}
		if _bbea.Name.Local == "\u0063\u006c\u0072\u0049\u0064\u0078" {
			_fggg, _ddce := _a.ParseUint(_bbea.Value, 10, 32)
			if _ddce != nil {
				return _ddce
			}
			_eeg.ClrIdxAttr = uint32(_fggg)
			continue
		}
	}
_cfad:
	for {
		_cccc, _bfcd := d.Token()
		if _bfcd != nil {
			return _bfcd
		}
		switch _dbd := _cccc.(type) {
		case _e.StartElement:
			switch _dbd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eeg.ExtLst = NewCT_ExtensionList()
				if _ega := d.DecodeElement(_eeg.ExtLst, &_dbd); _ega != nil {
					return _ega
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u0020\u0025v", _dbd.Name)
				if _cefb := d.Skip(); _cefb != nil {
					return _cefb
				}
			}
		case _e.EndElement:
			break _cfad
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideTransition and its children, prefixing error messages with path
func (_ceede *CT_SlideTransition) ValidateWithPath(path string) error {
	if _ccadf := _ceede.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _ccadf != nil {
		return _ccadf
	}
	if _ceede.Choice != nil {
		if _cefcg := _ceede.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _cefcg != nil {
			return _cefcg
		}
	}
	if _ceede.SndAc != nil {
		if _bcaa := _ceede.SndAc.ValidateWithPath(path + "\u002f\u0053\u006e\u0064\u0041\u0063"); _bcaa != nil {
			return _bcaa
		}
	}
	if _ceede.ExtLst != nil {
		if _bffab := _ceede.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bffab != nil {
			return _bffab
		}
	}
	return nil
}
func (_ceceg ST_TLAnimateBehaviorCalcMode) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ceceg.String(), start)
}
func (_ceb *CT_CornerDirectionTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ceb.DirAttr != ST_TransitionCornerDirectionTypeUnset {
		_ccec, _gbgb := _ceb.DirAttr.MarshalXMLAttr(_e.Name{Local: "\u0064\u0069\u0072"})
		if _gbgb != nil {
			return _gbgb
		}
		start.Attr = append(start.Attr, _ccec)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ged *CT_ConnectorNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ged.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_ged.CNvCxnSpPr = _da.NewCT_NonVisualConnectorProperties()
	_ged.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_ggfe:
	for {
		_fded, _dfec := d.Token()
		if _dfec != nil {
			return _dfec
		}
		switch _feab := _fded.(type) {
		case _e.StartElement:
			switch _feab.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gbd := d.DecodeElement(_ged.CNvPr, &_feab); _gbd != nil {
					return _gbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _fbcb := d.DecodeElement(_ged.CNvCxnSpPr, &_feab); _fbcb != nil {
					return _fbcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _fdbf := d.DecodeElement(_ged.NvPr, &_feab); _fdbf != nil {
					return _fdbf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _feab.Name)
				if _acc := d.Skip(); _acc != nil {
					return _acc
				}
			}
		case _e.EndElement:
			break _ggfe
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_StringTag and its children
func (_bgee *CT_StringTag) Validate() error {
	return _bgee.ValidateWithPath("\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067")
}
func (_gddb *CT_TLAnimateBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gddb.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _fgedg := range start.Attr {
		if _fgedg.Name.Local == "\u0062\u0079" {
			_caada, _dffde := _fgedg.Value, error(nil)
			if _dffde != nil {
				return _dffde
			}
			_gddb.ByAttr = &_caada
			continue
		}
		if _fgedg.Name.Local == "\u0066\u0072\u006f\u006d" {
			_effg, _gfbfe := _fgedg.Value, error(nil)
			if _gfbfe != nil {
				return _gfbfe
			}
			_gddb.FromAttr = &_effg
			continue
		}
		if _fgedg.Name.Local == "\u0074\u006f" {
			_dddef, _gdaaa := _fgedg.Value, error(nil)
			if _gdaaa != nil {
				return _gdaaa
			}
			_gddb.ToAttr = &_dddef
			continue
		}
		if _fgedg.Name.Local == "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065" {
			_gddb.CalcmodeAttr.UnmarshalXMLAttr(_fgedg)
			continue
		}
		if _fgedg.Name.Local == "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e" {
			_gddb.ValueTypeAttr.UnmarshalXMLAttr(_fgedg)
			continue
		}
	}
_ccbd:
	for {
		_dadcf, _dfee := d.Token()
		if _dfee != nil {
			return _dfee
		}
		switch _dabeb := _dadcf.(type) {
		case _e.StartElement:
			switch _dabeb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _eadec := d.DecodeElement(_gddb.CBhvr, &_dabeb); _eadec != nil {
					return _eadec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}:
				_gddb.TavLst = NewCT_TLTimeAnimateValueList()
				if _ddfc := d.DecodeElement(_gddb.TavLst, &_dabeb); _ddfc != nil {
					return _ddfc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _dabeb.Name)
				if _ecga := d.Skip(); _ecga != nil {
					return _ecga
				}
			}
		case _e.EndElement:
			break _ccbd
		case _e.CharData:
		}
	}
	return nil
}
func (_ccbdg ST_TLBehaviorTransformType) String() string {
	switch _ccbdg {
	case 0:
		return ""
	case 1:
		return "\u0070\u0074"
	case 2:
		return "\u0069\u006d\u0067"
	}
	return ""
}

// ValidateWithPath validates the CT_SlideMasterTextStyles and its children, prefixing error messages with path
func (_bbef *CT_SlideMasterTextStyles) ValidateWithPath(path string) error {
	if _bbef.TitleStyle != nil {
		if _bbgbc := _bbef.TitleStyle.ValidateWithPath(path + "/\u0054\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _bbgbc != nil {
			return _bbgbc
		}
	}
	if _bbef.BodyStyle != nil {
		if _bbbb := _bbef.BodyStyle.ValidateWithPath(path + "\u002f\u0042\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"); _bbbb != nil {
			return _bbbb
		}
	}
	if _bbef.OtherStyle != nil {
		if _dbdce := _bbef.OtherStyle.ValidateWithPath(path + "/\u004f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"); _dbdce != nil {
			return _dbdce
		}
	}
	if _bbef.ExtLst != nil {
		if _ccff := _bbef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccff != nil {
			return _ccff
		}
	}
	return nil
}
func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _eegf := &CT_GroupShapeChoice{}; return _eegf }

type CT_StringTag struct {

	// Name
	NameAttr string

	// Value
	ValAttr string
}

func NewCT_TLSubShapeId() *CT_TLSubShapeId { _egda := &CT_TLSubShapeId{}; return _egda }

type CT_NormalViewProperties struct {

	// Show Outline Icons in Normal View
	ShowOutlineIconsAttr *bool

	// Snap Vertical Splitter
	SnapVertSplitterAttr *bool

	// State of the Vertical Splitter Bar
	VertBarStateAttr ST_SplitterBarState

	// State of the Horizontal Splitter Bar
	HorzBarStateAttr ST_SplitterBarState

	// Prefer Single View
	PreferSingleViewAttr *bool

	// Normal View Restored Left Properties
	RestoredLeft *CT_NormalViewPortion

	// Normal View Restored Top Properties
	RestoredTop *CT_NormalViewPortion
	ExtLst      *CT_ExtensionList
}

func (_eebf *OleObj) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eebf.CT_OleObject = *NewCT_OleObject()
	for _, _gcbab := range start.Attr {
		if _gcbab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcbab.Name.Local == "\u0069\u0064" {
			_bebf, _fgae := _gcbab.Value, error(nil)
			if _fgae != nil {
				return _fgae
			}
			_eebf.IdAttr = &_bebf
			continue
		}
		if _gcbab.Name.Local == "\u0073\u0070\u0069\u0064" {
			_eeddc, _edge := _gcbab.Value, error(nil)
			if _edge != nil {
				return _edge
			}
			_eebf.SpidAttr = &_eeddc
			continue
		}
		if _gcbab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cdfce, _ebgbg := _gcbab.Value, error(nil)
			if _ebgbg != nil {
				return _ebgbg
			}
			_eebf.NameAttr = &_cdfce
			continue
		}
		if _gcbab.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_deff, _gfgad := _a.ParseBool(_gcbab.Value)
			if _gfgad != nil {
				return _gfgad
			}
			_eebf.ShowAsIconAttr = &_deff
			continue
		}
		if _gcbab.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_cabea, _fcgf := _gcbab.Value, error(nil)
			if _fcgf != nil {
				return _fcgf
			}
			_eebf.ProgIdAttr = &_cabea
			continue
		}
		if _gcbab.Name.Local == "\u0069\u006d\u0067\u0057" {
			_gbcbd, _fcdef := _a.ParseInt(_gcbab.Value, 10, 32)
			if _fcdef != nil {
				return _fcdef
			}
			_efcd := int32(_gbcbd)
			_eebf.ImgWAttr = &_efcd
			continue
		}
		if _gcbab.Name.Local == "\u0069\u006d\u0067\u0048" {
			_fgdge, _gcgaf := _a.ParseInt(_gcbab.Value, 10, 32)
			if _gcgaf != nil {
				return _gcgaf
			}
			_aeffb := int32(_fgdge)
			_eebf.ImgHAttr = &_aeffb
			continue
		}
	}
_bcbabb:
	for {
		_ecbfg, _efcfe := d.Token()
		if _efcfe != nil {
			return _efcfe
		}
		switch _aafca := _ecbfg.(type) {
		case _e.StartElement:
			switch _aafca.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_eebf.Choice = NewCT_OleObjectChoice()
				if _eeefb := d.DecodeElement(&_eebf.Choice.Embed, &_aafca); _eeefb != nil {
					return _eeefb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_eebf.Choice = NewCT_OleObjectChoice()
				if _ebdfb := d.DecodeElement(&_eebf.Choice.Link, &_aafca); _ebdfb != nil {
					return _ebdfb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_eebf.Pic = NewCT_Picture()
				if _efgbd := d.DecodeElement(_eebf.Pic, &_aafca); _efgbd != nil {
					return _efgbd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004f\u006c\u0065\u004f\u0062\u006a\u0020\u0025\u0076", _aafca.Name)
				if _bccgba := d.Skip(); _bccgba != nil {
					return _bccgba
				}
			}
		case _e.EndElement:
			break _bcbabb
		case _e.CharData:
		}
	}
	return nil
}
func (_acba *CT_NormalViewPortion) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u007a"}, Value: _d.Sprintf("\u0025\u0076", _acba.SzAttr)})
	if _acba.AutoAdjustAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_acba.AutoAdjustAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fgegf ST_TLOleChartBuildType) Validate() error { return _fgegf.ValidateWithPath("") }
func (_dafbc ST_Direction) Validate() error           { return _dafbc.ValidateWithPath("") }
func (_cgda *CT_TLTimeAnimateValueList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fdcgb:
	for {
		_ecgff, _abfce := d.Token()
		if _abfce != nil {
			return _abfce
		}
		switch _fcef := _ecgff.(type) {
		case _e.StartElement:
			switch _fcef.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076"}:
				_dcbfe := NewCT_TLTimeAnimateValue()
				if _debaag := d.DecodeElement(_dcbfe, &_fcef); _debaag != nil {
					return _debaag
				}
				_cgda.Tav = append(_cgda.Tav, _dcbfe)
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006ei\u006da\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u004ci\u0073t\u0020\u0025v", _fcef.Name)
				if _agccg := d.Skip(); _agccg != nil {
					return _agccg
				}
			}
		case _e.EndElement:
			break _fdcgb
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTriggerRuntimeNode and its children, prefixing error messages with path
func (_gecbb *CT_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	if _gecbb.ValAttr == ST_TLTriggerRuntimeNodeUnset {
		return _d.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cgcde := _gecbb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cgcde != nil {
		return _cgcde
	}
	return nil
}
func (_cfee *CT_TLAnimateMotionBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cfee.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dafge := range start.Attr {
		if _dafge.Name.Local == "\u006f\u0072\u0069\u0067\u0069\u006e" {
			_cfee.OriginAttr.UnmarshalXMLAttr(_dafge)
			continue
		}
		if _dafge.Name.Local == "\u0070\u0061\u0074\u0068" {
			_ecea, _fgdf := _dafge.Value, error(nil)
			if _fgdf != nil {
				return _fgdf
			}
			_cfee.PathAttr = &_ecea
			continue
		}
		if _dafge.Name.Local == "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065" {
			_cfee.PathEditModeAttr.UnmarshalXMLAttr(_dafge)
			continue
		}
		if _dafge.Name.Local == "\u0072\u0041\u006e\u0067" {
			_begeg, _fggae := _a.ParseInt(_dafge.Value, 10, 32)
			if _fggae != nil {
				return _fggae
			}
			_egcce := int32(_begeg)
			_cfee.RAngAttr = &_egcce
			continue
		}
		if _dafge.Name.Local == "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073" {
			_cccgc, _cefed := _dafge.Value, error(nil)
			if _cefed != nil {
				return _cefed
			}
			_cfee.PtsTypesAttr = &_cccgc
			continue
		}
	}
_cefg:
	for {
		_afbcc, _deebg := d.Token()
		if _deebg != nil {
			return _deebg
		}
		switch _bddf := _afbcc.(type) {
		case _e.StartElement:
			switch _bddf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _bgggd := d.DecodeElement(_cfee.CBhvr, &_bddf); _bgggd != nil {
					return _bgggd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_cfee.By = NewCT_TLPoint()
				if _eddcg := d.DecodeElement(_cfee.By, &_bddf); _eddcg != nil {
					return _eddcg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_cfee.From = NewCT_TLPoint()
				if _caeg := d.DecodeElement(_cfee.From, &_bddf); _caeg != nil {
					return _caeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_cfee.To = NewCT_TLPoint()
				if _bafcc := d.DecodeElement(_cfee.To, &_bddf); _bafcc != nil {
					return _bafcc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}:
				_cfee.RCtr = NewCT_TLPoint()
				if _ffce := d.DecodeElement(_cfee.RCtr, &_bddf); _ffce != nil {
					return _ffce
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _bddf.Name)
				if _aaffa := d.Skip(); _aaffa != nil {
					return _aaffa
				}
			}
		case _e.EndElement:
			break _cefg
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_SlideMaster() *CT_SlideMaster {
	_feedf := &CT_SlideMaster{}
	_feedf.CSld = NewCT_CommonSlideData()
	_feedf.ClrMap = _da.NewCT_ColorMapping()
	return _feedf
}

type CT_SlideLayoutIdListEntry struct {

	// ID Tag
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}
type CT_TLSubShapeId struct {

	// Shape ID
	SpidAttr string
}

func (_bfag *CT_TLTimeAnimateValue) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bfag.TmAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_bfag.TmAttr)})
	}
	if _bfag.FmlaAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _d.Sprintf("\u0025\u0076", *_bfag.FmlaAttr)})
	}
	e.EncodeToken(start)
	if _bfag.Val != nil {
		_gbgd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0076a\u006c"}}
		e.EncodeElement(_bfag.Val, _gbgd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cefecf *ST_PrintColorMode) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_cefecf = 0
	case "\u0062\u0077":
		*_cefecf = 1
	case "\u0067\u0072\u0061\u0079":
		*_cefecf = 2
	case "\u0063\u006c\u0072":
		*_cefecf = 3
	}
	return nil
}

const (
	ST_TLTimeNodeRestartTypeUnset         ST_TLTimeNodeRestartType = 0
	ST_TLTimeNodeRestartTypeAlways        ST_TLTimeNodeRestartType = 1
	ST_TLTimeNodeRestartTypeWhenNotActive ST_TLTimeNodeRestartType = 2
	ST_TLTimeNodeRestartTypeNever         ST_TLTimeNodeRestartType = 3
)

func NewCT_OptionalBlackTransition() *CT_OptionalBlackTransition {
	_cbed := &CT_OptionalBlackTransition{}
	return _cbed
}

// ValidateWithPath validates the CT_ShowInfoKiosk and its children, prefixing error messages with path
func (_dbdd *CT_ShowInfoKiosk) ValidateWithPath(path string) error { return nil }
func (_faee *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_faee.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_faee.CNvGraphicFramePr = _da.NewCT_NonVisualGraphicFrameProperties()
	_faee.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_fdea:
	for {
		_bgc, _bcac := d.Token()
		if _bcac != nil {
			return _bcac
		}
		switch _febf := _bgc.(type) {
		case _e.StartElement:
			switch _febf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _edg := d.DecodeElement(_faee.CNvPr, &_febf); _edg != nil {
					return _edg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _gfdd := d.DecodeElement(_faee.CNvGraphicFramePr, &_febf); _gfdd != nil {
					return _gfdd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _bdbfb := d.DecodeElement(_faee.NvPr, &_febf); _bdbfb != nil {
					return _bdbfb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _febf.Name)
				if _ccda := d.Skip(); _ccda != nil {
					return _ccda
				}
			}
		case _e.EndElement:
			break _fdea
		case _e.CharData:
		}
	}
	return nil
}
func (_ecdg *CT_TLCommonMediaNodeData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ecdg.CTn = NewCT_TLCommonTimeNodeData()
	_ecdg.TgtEl = NewCT_TLTimeTargetElement()
	for _, _dfaaf := range start.Attr {
		if _dfaaf.Name.Local == "\u0076\u006f\u006c" {
			_gcfaf, _ceebe := ParseUnionST_PositiveFixedPercentage(_dfaaf.Value)
			if _ceebe != nil {
				return _ceebe
			}
			_ecdg.VolAttr = &_gcfaf
			continue
		}
		if _dfaaf.Name.Local == "\u006d\u0075\u0074\u0065" {
			_cede, _ebef := _a.ParseBool(_dfaaf.Value)
			if _ebef != nil {
				return _ebef
			}
			_ecdg.MuteAttr = &_cede
			continue
		}
		if _dfaaf.Name.Local == "\u006e\u0075\u006d\u0053\u006c\u0064" {
			_ddcbf, _abgde := _a.ParseUint(_dfaaf.Value, 10, 32)
			if _abgde != nil {
				return _abgde
			}
			_ecaa := uint32(_ddcbf)
			_ecdg.NumSldAttr = &_ecaa
			continue
		}
		if _dfaaf.Name.Local == "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064" {
			_dcggc, _aegff := _a.ParseBool(_dfaaf.Value)
			if _aegff != nil {
				return _aegff
			}
			_ecdg.ShowWhenStoppedAttr = &_dcggc
			continue
		}
	}
_gfgaa:
	for {
		_babg, _fcaga := d.Token()
		if _fcaga != nil {
			return _fcaga
		}
		switch _egaag := _babg.(type) {
		case _e.StartElement:
			switch _egaag.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bcfa := d.DecodeElement(_ecdg.CTn, &_egaag); _bcfa != nil {
					return _bcfa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _cdgeg := d.DecodeElement(_ecdg.TgtEl, &_egaag); _cdgeg != nil {
					return _cdgeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064e\u0044\u0061\u0074\u0061\u0020%\u0076", _egaag.Name)
				if _feeab := d.Skip(); _feeab != nil {
					return _feeab
				}
			}
		case _e.EndElement:
			break _gfgaa
		case _e.CharData:
		}
	}
	return nil
}
func (_bbgfc *CmAuthorLst) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074"
	return _bbgfc.CT_CommentAuthorList.MarshalXML(e, start)
}
func (_gdgaf *ST_SlideLayoutType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_egfea, _bcgde := d.Token()
	if _bcgde != nil {
		return _bcgde
	}
	if _adeee, _aedbf := _egfea.(_e.EndElement); _aedbf && _adeee.Name == start.Name {
		*_gdgaf = 1
		return nil
	}
	if _bgce, _ceggeg := _egfea.(_e.CharData); !_ceggeg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egfea)
	} else {
		switch string(_bgce) {
		case "":
			*_gdgaf = 0
		case "\u0074\u0069\u0074l\u0065":
			*_gdgaf = 1
		case "\u0074\u0078":
			*_gdgaf = 2
		case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
			*_gdgaf = 3
		case "\u0074\u0062\u006c":
			*_gdgaf = 4
		case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
			*_gdgaf = 5
		case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_gdgaf = 6
		case "\u0064\u0067\u006d":
			*_gdgaf = 7
		case "\u0063\u0068\u0061r\u0074":
			*_gdgaf = 8
		case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
			*_gdgaf = 9
		case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_gdgaf = 10
		case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
			*_gdgaf = 11
		case "\u0062\u006c\u0061n\u006b":
			*_gdgaf = 12
		case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
			*_gdgaf = 13
		case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_gdgaf = 14
		case "\u006fb\u006a\u004f\u006e\u006c\u0079":
			*_gdgaf = 15
		case "\u006f\u0062\u006a":
			*_gdgaf = 16
		case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
			*_gdgaf = 17
		case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
			*_gdgaf = 18
		case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
			*_gdgaf = 19
		case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
			*_gdgaf = 20
		case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_gdgaf = 21
		case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_gdgaf = 22
		case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
			*_gdgaf = 23
		case "\u0066o\u0075\u0072\u004f\u0062\u006a":
			*_gdgaf = 24
		case "\u0076\u0065\u0072\u0074\u0054\u0078":
			*_gdgaf = 25
		case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
			*_gdgaf = 26
		case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
			*_gdgaf = 27
		case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
			*_gdgaf = 28
		case "\u0074\u0077\u006f\u004f\u0062\u006a":
			*_gdgaf = 29
		case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_gdgaf = 30
		case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
			*_gdgaf = 31
		case "\u0063\u0075\u0073\u0074":
			*_gdgaf = 32
		case "\u0073e\u0063\u0048\u0065\u0061\u0064":
			*_gdgaf = 33
		case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
			*_gdgaf = 34
		case "\u006f\u0062\u006aT\u0078":
			*_gdgaf = 35
		case "\u0070\u0069\u0063T\u0078":
			*_gdgaf = 36
		}
	}
	_egfea, _bcgde = d.Token()
	if _bcgde != nil {
		return _bcgde
	}
	if _gbbaa, _bfged := _egfea.(_e.EndElement); _bfged && _gbbaa.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egfea)
}
func (_dac *CT_CommonSlideData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dac.NameAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_dac.NameAttr)})
	}
	e.EncodeToken(start)
	if _dac.Bg != nil {
		_eca := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_dac.Bg, _eca)
	}
	_eega := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0070\u0054\u0072\u0065\u0065"}}
	e.EncodeElement(_dac.SpTree, _eega)
	if _dac.CustDataLst != nil {
		_bbd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_dac.CustDataLst, _bbd)
	}
	if _dac.Controls != nil {
		_gdg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_dac.Controls, _gdg)
	}
	if _dac.ExtLst != nil {
		_bbg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dac.ExtLst, _bbg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TopLevelSlide and its children
func (_dgfda *EG_TopLevelSlide) Validate() error {
	return _dgfda.ValidateWithPath("\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065")
}

// Validate validates the CT_SlideMaster and its children
func (_gfgbd *CT_SlideMaster) Validate() error {
	return _gfgbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072")
}

type CT_NotesMasterIdList struct {

	// Notes Master ID
	NotesMasterId *CT_NotesMasterIdListEntry
}

func NewEG_ChildSlide() *EG_ChildSlide { _fdfadd := &EG_ChildSlide{}; return _fdfadd }

type CT_SlideSyncProperties struct {

	// Server's Slide File ID
	ServerSldIdAttr string

	// Server's Slide File's modification date/time
	ServerSldModifiedTimeAttr _g.Time

	// Client Slide Insertion date/time
	ClientInsertedTimeAttr _g.Time
	ExtLst                 *CT_ExtensionList
}

func (_cgfbe *CT_TLAnimateScaleBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cgfbe.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _becb := range start.Attr {
		if _becb.Name.Local == "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_ecfea, _agcgf := _a.ParseBool(_becb.Value)
			if _agcgf != nil {
				return _agcgf
			}
			_cgfbe.ZoomContentsAttr = &_ecfea
			continue
		}
	}
_fbafa:
	for {
		_eggfc, _fabcg := d.Token()
		if _fabcg != nil {
			return _fabcg
		}
		switch _dfbge := _eggfc.(type) {
		case _e.StartElement:
			switch _dfbge.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _becbe := d.DecodeElement(_cgfbe.CBhvr, &_dfbge); _becbe != nil {
					return _becbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_cgfbe.By = NewCT_TLPoint()
				if _adee := d.DecodeElement(_cgfbe.By, &_dfbge); _adee != nil {
					return _adee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_cgfbe.From = NewCT_TLPoint()
				if _debfe := d.DecodeElement(_cgfbe.From, &_dfbge); _debfe != nil {
					return _debfe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_cgfbe.To = NewCT_TLPoint()
				if _gfcd := d.DecodeElement(_cgfbe.To, &_dfbge); _gfcd != nil {
					return _gfcd
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0053c\u0061\u006c\u0065\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _dfbge.Name)
				if _agdg := d.Skip(); _agdg != nil {
					return _agdg
				}
			}
		case _e.EndElement:
			break _fbafa
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMaster and its children, prefixing error messages with path
func (_abefd *CT_SlideMaster) ValidateWithPath(path string) error {
	if _cgggf := _abefd.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _cgggf != nil {
		return _cgggf
	}
	if _acad := _abefd.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _acad != nil {
		return _acad
	}
	if _abefd.SldLayoutIdLst != nil {
		if _abfe := _abefd.SldLayoutIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"); _abfe != nil {
			return _abfe
		}
	}
	if _abefd.Transition != nil {
		if _gfgea := _abefd.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _gfgea != nil {
			return _gfgea
		}
	}
	if _abefd.Timing != nil {
		if _cbea := _abefd.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _cbea != nil {
			return _cbea
		}
	}
	if _abefd.Hf != nil {
		if _ggbe := _abefd.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _ggbe != nil {
			return _ggbe
		}
	}
	if _abefd.TxStyles != nil {
		if _deae := _abefd.TxStyles.ValidateWithPath(path + "\u002fT\u0078\u0053\u0074\u0079\u006c\u0065s"); _deae != nil {
			return _deae
		}
	}
	if _abefd.ExtLst != nil {
		if _ceddb := _abefd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceddb != nil {
			return _ceddb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_StringTag and its children, prefixing error messages with path
func (_dbdfd *CT_StringTag) ValidateWithPath(path string) error { return nil }
func (_begb ST_TLTimeNodeRestartType) Validate() error          { return _begb.ValidateWithPath("") }
func (_afed *CT_TLCommandBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_afed.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _aacdd := range start.Attr {
		if _aacdd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_afed.TypeAttr.UnmarshalXMLAttr(_aacdd)
			continue
		}
		if _aacdd.Name.Local == "\u0063\u006d\u0064" {
			_ccde, _dbbbd := _aacdd.Value, error(nil)
			if _dbbbd != nil {
				return _dbbbd
			}
			_afed.CmdAttr = &_ccde
			continue
		}
	}
_bgaca:
	for {
		_eeege, _cebde := d.Token()
		if _cebde != nil {
			return _cebde
		}
		switch _eceff := _eeege.(type) {
		case _e.StartElement:
			switch _eceff.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fagb := d.DecodeElement(_afed.CBhvr, &_eceff); _fagb != nil {
					return _fagb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _eceff.Name)
				if _dbgea := d.Skip(); _dbgea != nil {
					return _dbgea
				}
			}
		case _e.EndElement:
			break _bgaca
		case _e.CharData:
		}
	}
	return nil
}

type CT_TransitionSoundAction struct {

	// Start Sound Action
	StSnd *CT_TransitionStartSoundAction

	// Stop Sound Action
	EndSnd *CT_Empty
}

const (
	ST_TLTimeNodeSyncTypeUnset   ST_TLTimeNodeSyncType = 0
	ST_TLTimeNodeSyncTypeCanSlip ST_TLTimeNodeSyncType = 1
	ST_TLTimeNodeSyncTypeLocked  ST_TLTimeNodeSyncType = 2
)

func (_fcbb *CT_OleObjectEmbed) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cagb := range start.Attr {
		if _cagb.Name.Local == "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065" {
			_fcbb.FollowColorSchemeAttr.UnmarshalXMLAttr(_cagb)
			continue
		}
	}
_cbdd:
	for {
		_gfcf, _fecc := d.Token()
		if _fecc != nil {
			return _fecc
		}
		switch _edcb := _gfcf.(type) {
		case _e.StartElement:
			switch _edcb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcbb.ExtLst = NewCT_ExtensionList()
				if _ccfc := d.DecodeElement(_fcbb.ExtLst, &_edcb); _ccfc != nil {
					return _ccfc
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0045\u006d\u0062\u0065\u0064\u0020\u0025\u0076", _edcb.Name)
				if _afbgd := d.Skip(); _afbgd != nil {
					return _afbgd
				}
			}
		case _e.EndElement:
			break _cbdd
		case _e.CharData:
		}
	}
	return nil
}
func (_fbgec *CT_TLByHslColorTransform) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0068"}, Value: _d.Sprintf("\u0025\u0076", _fbgec.HAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073"}, Value: _d.Sprintf("\u0025\u0076", _fbgec.SAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006c"}, Value: _d.Sprintf("\u0025\u0076", _fbgec.LAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTextTargetElement and its children
func (_edefe *CT_TLTextTargetElement) Validate() error {
	return _edefe.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

// ValidateWithPath validates the AG_ChildSlide and its children, prefixing error messages with path
func (_fe *AG_ChildSlide) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_OleObjectEmbed and its children
func (_geac *CT_OleObjectEmbed) Validate() error {
	return _geac.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064")
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_dadd *CT_ConnectorNonVisual) Validate() error {
	return _dadd.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_gefac *CT_SlideMasterIdList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gefac.SldMasterId != nil {
		_ddcfa := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		for _, _efeda := range _gefac.SldMasterId {
			e.EncodeElement(_efeda, _ddcfa)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_GuideList struct {

	// A Guide
	Guide []*CT_Guide
}

func (_aede *CT_CommonSlideViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _aede.SnapToGridAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_aede.SnapToGridAttr))})
	}
	if _aede.SnapToObjectsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_aede.SnapToObjectsAttr))})
	}
	if _aede.ShowGuidesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_aede.ShowGuidesAttr))})
	}
	e.EncodeToken(start)
	_dfd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_aede.CViewPr, _dfd)
	if _aede.GuideLst != nil {
		_bfgb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_aede.GuideLst, _bfgb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bfbdb *CT_TLIterateIntervalPercentage) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bacec := range start.Attr {
		if _bacec.Name.Local == "\u0076\u0061\u006c" {
			_gcae, _bafd := ParseUnionST_PositivePercentage(_bacec.Value)
			if _bafd != nil {
				return _bafd
			}
			_bfbdb.ValAttr = _gcae
			continue
		}
	}
	for {
		_dcege, _cabb := d.Token()
		if _cabb != nil {
			return _d.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0050\u0065\u0072\u0063\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _cabb)
		}
		if _cefecb, _bbbgg := _dcege.(_e.EndElement); _bbbgg && _cefecb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbeaa *Sld) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dbeaa.CT_Slide = *NewCT_Slide()
	for _, _eggdb := range start.Attr {
		if _eggdb.Name.Local == "\u0073\u0068\u006f\u0077" {
			_efbea, _adbeb := _a.ParseBool(_eggdb.Value)
			if _adbeb != nil {
				return _adbeb
			}
			_dbeaa.ShowAttr = &_efbea
			continue
		}
		if _eggdb.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_beegc, _fcbede := _a.ParseBool(_eggdb.Value)
			if _fcbede != nil {
				return _fcbede
			}
			_dbeaa.ShowMasterSpAttr = &_beegc
			continue
		}
		if _eggdb.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_cdgef, _cfdd := _a.ParseBool(_eggdb.Value)
			if _cfdd != nil {
				return _cfdd
			}
			_dbeaa.ShowMasterPhAnimAttr = &_cdgef
			continue
		}
	}
_edbce:
	for {
		_bbefe, _gaeeg := d.Token()
		if _gaeeg != nil {
			return _gaeeg
		}
		switch _afaa := _bbefe.(type) {
		case _e.StartElement:
			switch _afaa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ggbgf := d.DecodeElement(_dbeaa.CSld, &_afaa); _ggbgf != nil {
					return _ggbgf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_dbeaa.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _aaffg := d.DecodeElement(_dbeaa.ClrMapOvr, &_afaa); _aaffg != nil {
					return _aaffg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_dbeaa.Transition = NewCT_SlideTransition()
				if _gcfbd := d.DecodeElement(_dbeaa.Transition, &_afaa); _gcfbd != nil {
					return _gcfbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_dbeaa.Timing = NewCT_SlideTiming()
				if _bgdde := d.DecodeElement(_dbeaa.Timing, &_afaa); _bgdde != nil {
					return _bgdde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbeaa.ExtLst = NewCT_ExtensionListModify()
				if _fgbca := d.DecodeElement(_dbeaa.ExtLst, &_afaa); _fgbca != nil {
					return _fgbca
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053l\u0064\u0020\u0025\u0076", _afaa.Name)
				if _acgge := d.Skip(); _acgge != nil {
					return _acgge
				}
			}
		case _e.EndElement:
			break _edbce
		case _e.CharData:
		}
	}
	return nil
}
func (_acbc ST_TLTimeNodeFillType) ValidateWithPath(path string) error {
	switch _acbc {
	case 0, 1, 2, 3, 4:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acbc))
	}
	return nil
}

// Validate validates the CT_TLAnimateMotionBehavior and its children
func (_dfdbg *CT_TLAnimateMotionBehavior) Validate() error {
	return _dfdbg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}
func (_dacgg ST_TLNextActionType) Validate() error { return _dacgg.ValidateWithPath("") }
func (_dbg *CT_BuildList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dbg.BldP != nil {
		_abb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0050"}}
		for _, _gff := range _dbg.BldP {
			e.EncodeElement(_gff, _abb)
		}
	}
	if _dbg.BldDgm != nil {
		_fge := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		for _, _ffe := range _dbg.BldDgm {
			e.EncodeElement(_ffe, _fge)
		}
	}
	if _dbg.BldOleChart != nil {
		_fcg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}}
		for _, _dgf := range _dbg.BldOleChart {
			e.EncodeElement(_dgf, _fcg)
		}
	}
	if _dbg.BldGraphic != nil {
		_fdc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062l\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}}
		for _, _cac := range _dbg.BldGraphic {
			e.EncodeElement(_cac, _fdc)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TransitionSideDirectionTypeUnset ST_TransitionSideDirectionType = 0
	ST_TransitionSideDirectionTypeL     ST_TransitionSideDirectionType = 1
	ST_TransitionSideDirectionTypeU     ST_TransitionSideDirectionType = 2
	ST_TransitionSideDirectionTypeR     ST_TransitionSideDirectionType = 3
	ST_TransitionSideDirectionTypeD     ST_TransitionSideDirectionType = 4
)

type CT_GraphicalObjectFrame struct {
	BwModeAttr _da.ST_BlackWhiteMode

	// Non-Visual Properties for a Graphic Frame
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual

	// 2D Transform for Graphic Frame
	Xfrm    *_da.CT_Transform2D
	Graphic *_da.Graphic

	// Extension List with Modification Flag
	ExtLst *CT_ExtensionListModify
}

func (_dfgdb *CT_TransitionSoundAction) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dfgdb.StSnd != nil {
		_ebcdf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0074\u0053\u006e\u0064"}}
		e.EncodeElement(_dfgdb.StSnd, _ebcdf)
	}
	if _dfgdb.EndSnd != nil {
		_adaag := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u006e\u0064\u0053\u006e\u0064"}}
		e.EncodeElement(_dfgdb.EndSnd, _adaag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gdbag ST_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	switch _gdbag {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdbag))
	}
	return nil
}
func (_efcec *CT_TLTimeNodeExclusive) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_efcec.CTn = NewCT_TLCommonTimeNodeData()
_faeag:
	for {
		_bgfa, _egaea := d.Token()
		if _egaea != nil {
			return _egaea
		}
		switch _bfbfc := _bgfa.(type) {
		case _e.StartElement:
			switch _bfbfc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _ffacb := d.DecodeElement(_efcec.CTn, &_bfbfc); _ffacb != nil {
					return _ffacb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069\u0076\u0065\u0020\u0025\u0076", _bfbfc.Name)
				if _eacdge := d.Skip(); _eacdge != nil {
					return _eacdge
				}
			}
		case _e.EndElement:
			break _faeag
		case _e.CharData:
		}
	}
	return nil
}
func (_beca *CT_CustomerData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cbgc := range start.Attr {
		if _cbgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cbgc.Name.Local == "\u0069\u0064" || _cbgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cbgc.Name.Local == "\u0069\u0064" {
			_aeda, _eggfd := _cbgc.Value, error(nil)
			if _eggfd != nil {
				return _eggfd
			}
			_beca.IdAttr = _aeda
			continue
		}
	}
	for {
		_fdaf, _efcb := d.Token()
		if _efcb != nil {
			return _d.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006de\u0072\u0044\u0061t\u0061:\u0020\u0025\u0073", _efcb)
		}
		if _ffc, _ece := _fdaf.(_e.EndElement); _ece && _ffc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariantBooleanVal and its children
func (_dbefg *CT_TLAnimVariantBooleanVal) Validate() error {
	return _dbefg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c")
}

type CT_HtmlPublishProperties struct {

	// Show Speaker Notes
	ShowSpeakerNotesAttr *bool

	// Target Output Profile
	TargetAttr *string

	// HTML Output Title
	TitleAttr *string
	IdAttr    string

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
	ExtLst   *CT_ExtensionList
}

func (_gdded ST_TLDiagramBuildType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_defde := _e.Attr{}
	_defde.Name = name
	switch _gdded {
	case ST_TLDiagramBuildTypeUnset:
		_defde.Value = ""
	case ST_TLDiagramBuildTypeWhole:
		_defde.Value = "\u0077\u0068\u006fl\u0065"
	case ST_TLDiagramBuildTypeDepthByNode:
		_defde.Value = "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeDepthByBranch:
		_defde.Value = "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case ST_TLDiagramBuildTypeBreadthByNode:
		_defde.Value = "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeBreadthByLvl:
		_defde.Value = "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case ST_TLDiagramBuildTypeCw:
		_defde.Value = "\u0063\u0077"
	case ST_TLDiagramBuildTypeCwIn:
		_defde.Value = "\u0063\u0077\u0049\u006e"
	case ST_TLDiagramBuildTypeCwOut:
		_defde.Value = "\u0063\u0077\u004fu\u0074"
	case ST_TLDiagramBuildTypeCcw:
		_defde.Value = "\u0063\u0063\u0077"
	case ST_TLDiagramBuildTypeCcwIn:
		_defde.Value = "\u0063\u0063\u0077I\u006e"
	case ST_TLDiagramBuildTypeCcwOut:
		_defde.Value = "\u0063\u0063\u0077\u004f\u0075\u0074"
	case ST_TLDiagramBuildTypeInByRing:
		_defde.Value = "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case ST_TLDiagramBuildTypeOutByRing:
		_defde.Value = "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case ST_TLDiagramBuildTypeUp:
		_defde.Value = "\u0075\u0070"
	case ST_TLDiagramBuildTypeDown:
		_defde.Value = "\u0064\u006f\u0077\u006e"
	case ST_TLDiagramBuildTypeAllAtOnce:
		_defde.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLDiagramBuildTypeCust:
		_defde.Value = "\u0063\u0075\u0073\u0074"
	}
	return _defde, nil
}

// Validate validates the CT_CommentList and its children
func (_dddb *CT_CommentList) Validate() error {
	return _dddb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}
func (_afbca *CT_WebProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _afbca.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbca.ShowAnimationAttr))})
	}
	if _afbca.ResizeGraphicsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbca.ResizeGraphicsAttr))})
	}
	if _afbca.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbca.AllowPngAttr))})
	}
	if _afbca.RelyOnVmlAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbca.RelyOnVmlAttr))})
	}
	if _afbca.OrganizeInFoldersAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbca.OrganizeInFoldersAttr))})
	}
	if _afbca.UseLongFilenamesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbca.UseLongFilenamesAttr))})
	}
	if _afbca.ImgSzAttr != ST_WebScreenSizeUnset {
		_dgcca, _fgeb := _afbca.ImgSzAttr.MarshalXMLAttr(_e.Name{Local: "\u0069\u006d\u0067S\u007a"})
		if _fgeb != nil {
			return _fgeb
		}
		start.Attr = append(start.Attr, _dgcca)
	}
	if _afbca.EncodingAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067"}, Value: _d.Sprintf("\u0025\u0076", *_afbca.EncodingAttr)})
	}
	if _afbca.ClrAttr != ST_WebColorTypeUnset {
		_dbag, _gffdd := _afbca.ClrAttr.MarshalXMLAttr(_e.Name{Local: "\u0063\u006c\u0072"})
		if _gffdd != nil {
			return _gffdd
		}
		start.Attr = append(start.Attr, _dbag)
	}
	e.EncodeToken(start)
	if _afbca.ExtLst != nil {
		_ddacb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afbca.ExtLst, _ddacb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_acafd *CT_TLTemplate) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_acafd.TnLst = NewCT_TimeNodeList()
	for _, _eddga := range start.Attr {
		if _eddga.Name.Local == "\u006c\u0076\u006c" {
			_eecag, _fdgag := _a.ParseUint(_eddga.Value, 10, 32)
			if _fdgag != nil {
				return _fdgag
			}
			_bdcab := uint32(_eecag)
			_acafd.LvlAttr = &_bdcab
			continue
		}
	}
_bdgc:
	for {
		_fcaff, _cbce := d.Token()
		if _cbce != nil {
			return _cbce
		}
		switch _dgbfda := _fcaff.(type) {
		case _e.StartElement:
			switch _dgbfda.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				if _bgeda := d.DecodeElement(_acafd.TnLst, &_dgbfda); _bgeda != nil {
					return _bgeda
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054L\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065 \u0025\u0076", _dgbfda.Name)
				if _fgdfb := d.Skip(); _fgdfb != nil {
					return _fgdfb
				}
			}
		case _e.EndElement:
			break _bdgc
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommonMediaNodeData and its children, prefixing error messages with path
func (_bdcf *CT_TLCommonMediaNodeData) ValidateWithPath(path string) error {
	if _bdcf.VolAttr != nil {
		if _dcgb := _bdcf.VolAttr.ValidateWithPath(path + "\u002f\u0056\u006f\u006c\u0041\u0074\u0074\u0072"); _dcgb != nil {
			return _dcgb
		}
	}
	if _gaaba := _bdcf.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _gaaba != nil {
		return _gaaba
	}
	if _dggfb := _bdcf.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _dggfb != nil {
		return _dggfb
	}
	return nil
}
func (_dcfgd ST_TLTimeNodeRestartType) ValidateWithPath(path string) error {
	switch _dcfgd {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcfgd))
	}
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipList and its children, prefixing error messages with path
func (_daba *CT_SlideRelationshipList) ValidateWithPath(path string) error {
	for _facfg, _aefbf := range _daba.Sld {
		if _ccecd := _aefbf.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _facfg)); _ccecd != nil {
			return _ccecd
		}
	}
	return nil
}

// Validate validates the CT_ShowInfoKiosk and its children
func (_cfaae *CT_ShowInfoKiosk) Validate() error {
	return _cfaae.ValidateWithPath("\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b")
}
func (_dggcb ST_TLTimeIndefinite) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_dggcb.String(), start)
}
func (_gface ST_SlideSizeType) Validate() error { return _gface.ValidateWithPath("") }

type ST_OleObjectFollowColorScheme byte

func (_bebdb *ST_OleObjectFollowColorScheme) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bebdb = 0
	case "\u006e\u006f\u006e\u0065":
		*_bebdb = 1
	case "\u0066\u0075\u006c\u006c":
		*_bebdb = 2
	case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
		*_bebdb = 3
	}
	return nil
}
func (_dbdbea *EG_ShowType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_daebb:
	for {
		_gebge, _aacf := d.Token()
		if _aacf != nil {
			return _aacf
		}
		switch _cbdbgb := _gebge.(type) {
		case _e.StartElement:
			switch _cbdbgb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_dbdbea.Present = NewCT_Empty()
				if _baefd := d.DecodeElement(_dbdbea.Present, &_cbdbgb); _baefd != nil {
					return _baefd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_dbdbea.Browse = NewCT_ShowInfoBrowse()
				if _caccb := d.DecodeElement(_dbdbea.Browse, &_cbdbgb); _caccb != nil {
					return _caccb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_dbdbea.Kiosk = NewCT_ShowInfoKiosk()
				if _ebdcg := d.DecodeElement(_dbdbea.Kiosk, &_cbdbgb); _ebdcg != nil {
					return _ebdcg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _cbdbgb.Name)
				if _ggbcfa := d.Skip(); _ggbcfa != nil {
					return _ggbcfa
				}
			}
		case _e.EndElement:
			break _daebb
		case _e.CharData:
		}
	}
	return nil
}
func (_decdg *ViewPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_decdg.CT_ViewProperties = *NewCT_ViewProperties()
	for _, _abdef := range start.Attr {
		if _abdef.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_decdg.LastViewAttr.UnmarshalXMLAttr(_abdef)
			continue
		}
		if _abdef.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_cfecd, _ebdg := _a.ParseBool(_abdef.Value)
			if _ebdg != nil {
				return _ebdg
			}
			_decdg.ShowCommentsAttr = &_cfecd
			continue
		}
	}
_eebga:
	for {
		_bcdaf, _ebagdc := d.Token()
		if _ebagdc != nil {
			return _ebagdc
		}
		switch _aacddf := _bcdaf.(type) {
		case _e.StartElement:
			switch _aacddf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_decdg.NormalViewPr = NewCT_NormalViewProperties()
				if _agefg := d.DecodeElement(_decdg.NormalViewPr, &_aacddf); _agefg != nil {
					return _agefg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_decdg.SlideViewPr = NewCT_SlideViewProperties()
				if _baeda := d.DecodeElement(_decdg.SlideViewPr, &_aacddf); _baeda != nil {
					return _baeda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_decdg.OutlineViewPr = NewCT_OutlineViewProperties()
				if _aafg := d.DecodeElement(_decdg.OutlineViewPr, &_aacddf); _aafg != nil {
					return _aafg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_decdg.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _fbaea := d.DecodeElement(_decdg.NotesTextViewPr, &_aacddf); _fbaea != nil {
					return _fbaea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_decdg.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _fegcd := d.DecodeElement(_decdg.SorterViewPr, &_aacddf); _fegcd != nil {
					return _fegcd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_decdg.NotesViewPr = NewCT_NotesViewProperties()
				if _ebede := d.DecodeElement(_decdg.NotesViewPr, &_aacddf); _ebede != nil {
					return _ebede
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_decdg.GridSpacing = _da.NewCT_PositiveSize2D()
				if _bfda := d.DecodeElement(_decdg.GridSpacing, &_aacddf); _bfda != nil {
					return _bfda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_decdg.ExtLst = NewCT_ExtensionList()
				if _gfcae := d.DecodeElement(_decdg.ExtLst, &_aacddf); _gfcae != nil {
					return _gfcae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u0069\u0065\u0077\u0050\u0072\u0020\u0025\u0076", _aacddf.Name)
				if _adefb := d.Skip(); _adefb != nil {
					return _adefb
				}
			}
		case _e.EndElement:
			break _eebga
		case _e.CharData:
		}
	}
	return nil
}
func (_bbbd *CT_SmartTags) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _egef := range start.Attr {
		if _egef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egef.Name.Local == "\u0069\u0064" || _egef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egef.Name.Local == "\u0069\u0064" {
			_efbff, _adgb := _egef.Value, error(nil)
			if _adgb != nil {
				return _adgb
			}
			_bbbd.IdAttr = _efbff
			continue
		}
	}
	for {
		_ggfge, _egfbe := d.Token()
		if _egfbe != nil {
			return _d.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006da\u0072\u0074\u0054\u0061\u0067\u0073\u003a\u0020\u0025\u0073", _egfbe)
		}
		if _bbegf, _efgf := _ggfge.(_e.EndElement); _efgf && _bbegf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dfdded ST_PhotoAlbumFrameShape) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_dfdded.String(), start)
}
func (_dbc *CT_ApplicationNonVisualDrawingProps) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fga := range start.Attr {
		if _fga.Name.Local == "\u0069s\u0050\u0068\u006f\u0074\u006f" {
			_ecb, _aea := _a.ParseBool(_fga.Value)
			if _aea != nil {
				return _aea
			}
			_dbc.IsPhotoAttr = &_ecb
			continue
		}
		if _fga.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_dge, _ga := _a.ParseBool(_fga.Value)
			if _ga != nil {
				return _ga
			}
			_dbc.UserDrawnAttr = &_dge
			continue
		}
	}
_fbe:
	for {
		_cce, _dcf := d.Token()
		if _dcf != nil {
			return _dcf
		}
		switch _cfa := _cce.(type) {
		case _e.StartElement:
			switch _cfa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068"}:
				_dbc.Ph = NewCT_Placeholder()
				if _fgg := d.DecodeElement(_dbc.Ph, &_cfa); _fgg != nil {
					return _fgg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_dbc.AudioCd = _da.NewCT_AudioCD()
				if _fa := d.DecodeElement(_dbc.AudioCd, &_cfa); _fa != nil {
					return _fa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_dbc.WavAudioFile = _da.NewCT_EmbeddedWAVAudioFile()
				if _eda := d.DecodeElement(_dbc.WavAudioFile, &_cfa); _eda != nil {
					return _eda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_dbc.AudioFile = _da.NewCT_AudioFile()
				if _gag := d.DecodeElement(_dbc.AudioFile, &_cfa); _gag != nil {
					return _gag
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_dbc.VideoFile = _da.NewCT_VideoFile()
				if _bae := d.DecodeElement(_dbc.VideoFile, &_cfa); _bae != nil {
					return _bae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_dbc.QuickTimeFile = _da.NewCT_QuickTimeFile()
				if _ee := d.DecodeElement(_dbc.QuickTimeFile, &_cfa); _ee != nil {
					return _ee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_dbc.CustDataLst = NewCT_CustomerDataList()
				if _gege := d.DecodeElement(_dbc.CustDataLst, &_cfa); _gege != nil {
					return _gege
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbc.ExtLst = NewCT_ExtensionList()
				if _bac := d.DecodeElement(_dbc.ExtLst, &_cfa); _bac != nil {
					return _bac
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041p\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006eg\u0050\u0072\u006f\u0070\u0073 \u0025\u0076", _cfa.Name)
				if _baef := d.Skip(); _baef != nil {
					return _baef
				}
			}
		case _e.EndElement:
			break _fbe
		case _e.CharData:
		}
	}
	return nil
}
func (_aebd *ST_TransitionSideDirectionType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dacea, _gfgcac := d.Token()
	if _gfgcac != nil {
		return _gfgcac
	}
	if _cggeg, _egeff := _dacea.(_e.EndElement); _egeff && _cggeg.Name == start.Name {
		*_aebd = 1
		return nil
	}
	if _fcfb, _cgbbe := _dacea.(_e.CharData); !_cgbbe {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dacea)
	} else {
		switch string(_fcfb) {
		case "":
			*_aebd = 0
		case "\u006c":
			*_aebd = 1
		case "\u0075":
			*_aebd = 2
		case "\u0072":
			*_aebd = 3
		case "\u0064":
			*_aebd = 4
		}
	}
	_dacea, _gfgcac = d.Token()
	if _gfgcac != nil {
		return _gfgcac
	}
	if _aabca, _bedgd := _dacea.(_e.EndElement); _bedgd && _aabca.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dacea)
}
func (_becg *CT_TLIterateData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _becg.TypeAttr != ST_IterateTypeUnset {
		_abdge, _afffa := _becg.TypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _afffa != nil {
			return _afffa
		}
		start.Attr = append(start.Attr, _abdge)
	}
	if _becg.BackwardsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_becg.BackwardsAttr))})
	}
	e.EncodeToken(start)
	if _becg.TmAbs != nil {
		_acab := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u006d\u0041\u0062\u0073"}}
		e.EncodeElement(_becg.TmAbs, _acab)
	}
	if _becg.TmPct != nil {
		_bdebe := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u006d\u0050\u0063\u0074"}}
		e.EncodeElement(_becg.TmPct, _bdebe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cedg *CT_PictureNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cedg.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_cedg.CNvPicPr = _da.NewCT_NonVisualPictureProperties()
	_cedg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_bfdcc:
	for {
		_bebg, _fafge := d.Token()
		if _fafge != nil {
			return _fafge
		}
		switch _cbbfb := _bebg.(type) {
		case _e.StartElement:
			switch _cbbfb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gcaa := d.DecodeElement(_cedg.CNvPr, &_cbbfb); _gcaa != nil {
					return _gcaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _gbga := d.DecodeElement(_cedg.CNvPicPr, &_cbbfb); _gbga != nil {
					return _gbga
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _daff := d.DecodeElement(_cedg.NvPr, &_cbbfb); _daff != nil {
					return _daff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _cbbfb.Name)
				if _afae := d.Skip(); _afae != nil {
					return _afae
				}
			}
		case _e.EndElement:
			break _bfdcc
		case _e.CharData:
		}
	}
	return nil
}
func (_eeaf *CT_StringTag) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fdaea := range start.Attr {
		if _fdaea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcdeg, _cdaeg := _fdaea.Value, error(nil)
			if _cdaeg != nil {
				return _cdaeg
			}
			_eeaf.NameAttr = _dcdeg
			continue
		}
		if _fdaea.Name.Local == "\u0076\u0061\u006c" {
			_gggac, _dcdee := _fdaea.Value, error(nil)
			if _dcdee != nil {
				return _dcdee
			}
			_eeaf.ValAttr = _gggac
			continue
		}
	}
	for {
		_gdcab, _ccecdg := d.Token()
		if _ccecdg != nil {
			return _d.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074r\u0069\u006e\u0067\u0054\u0061\u0067\u003a\u0020\u0025\u0073", _ccecdg)
		}
		if _gaae, _cegaf := _gdcab.(_e.EndElement); _cegaf && _gaae.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PhotoAlbum() *CT_PhotoAlbum { _gcff := &CT_PhotoAlbum{}; return _gcff }
func (_egbd *CT_GroupShapeNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_egbd.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_egbd.CNvGrpSpPr = _da.NewCT_NonVisualGroupDrawingShapeProps()
	_egbd.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_eaagf:
	for {
		_egab, _fcga := d.Token()
		if _fcga != nil {
			return _fcga
		}
		switch _bffg := _egab.(type) {
		case _e.StartElement:
			switch _bffg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gfe := d.DecodeElement(_egbd.CNvPr, &_bffg); _gfe != nil {
					return _gfe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _fffd := d.DecodeElement(_egbd.CNvGrpSpPr, &_bffg); _fffd != nil {
					return _fffd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _cbge := d.DecodeElement(_egbd.NvPr, &_bffg); _cbge != nil {
					return _cbge
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bffg.Name)
				if _gdgg := d.Skip(); _gdgg != nil {
					return _gdgg
				}
			}
		case _e.EndElement:
			break _eaagf
		case _e.CharData:
		}
	}
	return nil
}
func (_ecbbf ST_TLAnimateMotionBehaviorOrigin) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_bfdee := _e.Attr{}
	_bfdee.Name = name
	switch _ecbbf {
	case ST_TLAnimateMotionBehaviorOriginUnset:
		_bfdee.Value = ""
	case ST_TLAnimateMotionBehaviorOriginParent:
		_bfdee.Value = "\u0070\u0061\u0072\u0065\u006e\u0074"
	case ST_TLAnimateMotionBehaviorOriginLayout:
		_bfdee.Value = "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return _bfdee, nil
}

// Validate validates the CT_TLTimeCondition and its children
func (_bedac *CT_TLTimeCondition) Validate() error {
	return _bedac.ValidateWithPath("\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e")
}
func (_gabe *CT_Placeholder) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gabe.TypeAttr != ST_PlaceholderTypeUnset {
		_defd, _acfd := _gabe.TypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _acfd != nil {
			return _acfd
		}
		start.Attr = append(start.Attr, _defd)
	}
	if _gabe.OrientAttr != ST_DirectionUnset {
		_bceed, _bded := _gabe.OrientAttr.MarshalXMLAttr(_e.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _bded != nil {
			return _bded
		}
		start.Attr = append(start.Attr, _bceed)
	}
	if _gabe.SzAttr != ST_PlaceholderSizeUnset {
		_ggbfc, _cbaa := _gabe.SzAttr.MarshalXMLAttr(_e.Name{Local: "\u0073\u007a"})
		if _cbaa != nil {
			return _cbaa
		}
		start.Attr = append(start.Attr, _ggbfc)
	}
	if _gabe.IdxAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064\u0078"}, Value: _d.Sprintf("\u0025\u0076", *_gabe.IdxAttr)})
	}
	if _gabe.HasCustomPromptAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gabe.HasCustomPromptAttr))})
	}
	e.EncodeToken(start)
	if _gabe.ExtLst != nil {
		_dcbf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabe.ExtLst, _dcbf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TransitionStartSoundAction and its children
func (_dffb *CT_TransitionStartSoundAction) Validate() error {
	return _dffb.ValidateWithPath("\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e")
}
func NewCT_SlideIdList() *CT_SlideIdList { _efge := &CT_SlideIdList{}; return _efge }
func ParseUnionST_PositiveFixedPercentage(s string) (_da.ST_PositiveFixedPercentage, error) {
	return _da.ParseUnionST_PositiveFixedPercentage(s)
}
func (_cfebd ST_TLOleChartBuildType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_abbdf := _e.Attr{}
	_abbdf.Name = name
	switch _cfebd {
	case ST_TLOleChartBuildTypeUnset:
		_abbdf.Value = ""
	case ST_TLOleChartBuildTypeAllAtOnce:
		_abbdf.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLOleChartBuildTypeSeries:
		_abbdf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLOleChartBuildTypeCategory:
		_abbdf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLOleChartBuildTypeSeriesEl:
		_abbdf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_TLOleChartBuildTypeCategoryEl:
		_abbdf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _abbdf, nil
}
func (_ecbg ST_SplitterBarState) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ecbg.String(), start)
}
func ParseUnionST_FixedPercentage(s string) (_da.ST_FixedPercentage, error) {
	return _da.ParseUnionST_FixedPercentage(s)
}

// Validate validates the CT_BackgroundProperties and its children
func (_afg *CT_BackgroundProperties) Validate() error {
	return _afg.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type ST_TLTriggerRuntimeNode byte

func NewCT_TLTimeAnimateValueList() *CT_TLTimeAnimateValueList {
	_ddbb := &CT_TLTimeAnimateValueList{}
	return _ddbb
}
func (_agbgc ST_TLAnimateColorDirection) String() string {
	switch _agbgc {
	case 0:
		return ""
	case 1:
		return "\u0063\u0077"
	case 2:
		return "\u0063\u0063\u0077"
	}
	return ""
}

type CT_GraphicalObjectFrameNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_da.CT_NonVisualDrawingProps

	// Non-Visual Graphic Frame Drawing Properties
	CNvGraphicFramePr *_da.CT_NonVisualGraphicFrameProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

// ValidateWithPath validates the CT_NotesTextViewProperties and its children, prefixing error messages with path
func (_efaa *CT_NotesTextViewProperties) ValidateWithPath(path string) error {
	if _eafg := _efaa.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _eafg != nil {
		return _eafg
	}
	if _efaa.ExtLst != nil {
		if _dcdfc := _efaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcdfc != nil {
			return _dcdfc
		}
	}
	return nil
}
func NewCT_OrientationTransition() *CT_OrientationTransition {
	_adgc := &CT_OrientationTransition{}
	return _adgc
}
func NewCT_TLTemplate() *CT_TLTemplate {
	_cddda := &CT_TLTemplate{}
	_cddda.TnLst = NewCT_TimeNodeList()
	return _cddda
}
func (_dda *AG_Ole) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gb := range start.Attr {
		if _gb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gb.Name.Local == "\u0069\u0064" {
			_dde, _efe := _gb.Value, error(nil)
			if _efe != nil {
				return _efe
			}
			_dda.IdAttr = &_dde
			continue
		}
		if _gb.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ff, _gc := _gb.Value, error(nil)
			if _gc != nil {
				return _gc
			}
			_dda.SpidAttr = &_ff
			continue
		}
		if _gb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ba, _edd := _gb.Value, error(nil)
			if _edd != nil {
				return _edd
			}
			_dda.NameAttr = &_ba
			continue
		}
		if _gb.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_de, _dc := _a.ParseBool(_gb.Value)
			if _dc != nil {
				return _dc
			}
			_dda.ShowAsIconAttr = &_de
			continue
		}
		if _gb.Name.Local == "\u0069\u006d\u0067\u0057" {
			_fd, _ca := _a.ParseInt(_gb.Value, 10, 32)
			if _ca != nil {
				return _ca
			}
			_dg := int32(_fd)
			_dda.ImgWAttr = &_dg
			continue
		}
		if _gb.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bf, _ecd := _a.ParseInt(_gb.Value, 10, 32)
			if _ecd != nil {
				return _ecd
			}
			_ae := int32(_bf)
			_dda.ImgHAttr = &_ae
			continue
		}
	}
	for {
		_ac, _cb := d.Token()
		if _cb != nil {
			return _d.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041G\u005f\u004fl\u0065\u003a\u0020\u0025\u0073", _cb)
		}
		if _dgb, _bfc := _ac.(_e.EndElement); _bfc && _dgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efceba ST_TLDiagramBuildType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_efceba.String(), start)
}

// Validate validates the CT_TLAnimateColorBehavior and its children
func (_edecc *CT_TLAnimateColorBehavior) Validate() error {
	return _edecc.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}
func (_gacae *CT_NotesMasterIdListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _gacae.IdAttr)})
	e.EncodeToken(start)
	if _gacae.ExtLst != nil {
		_dfdde := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gacae.ExtLst, _dfdde)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bbegfe ST_PlaceholderSize) ValidateWithPath(path string) error {
	switch _bbegfe {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbegfe))
	}
	return nil
}

// ValidateWithPath validates the CT_BackgroundProperties and its children, prefixing error messages with path
func (_efb *CT_BackgroundProperties) ValidateWithPath(path string) error {
	if _efb.NoFill != nil {
		if _fde := _efb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fde != nil {
			return _fde
		}
	}
	if _efb.SolidFill != nil {
		if _dbf := _efb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dbf != nil {
			return _dbf
		}
	}
	if _efb.GradFill != nil {
		if _afdd := _efb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _afdd != nil {
			return _afdd
		}
	}
	if _efb.BlipFill != nil {
		if _dfb := _efb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _dfb != nil {
			return _dfb
		}
	}
	if _efb.PattFill != nil {
		if _faa := _efb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _faa != nil {
			return _faa
		}
	}
	if _efb.GrpFill != nil {
		if _gbg := _efb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gbg != nil {
			return _gbg
		}
	}
	if _efb.EffectLst != nil {
		if _bce := _efb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _bce != nil {
			return _bce
		}
	}
	if _efb.EffectDag != nil {
		if _ab := _efb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ab != nil {
			return _ab
		}
	}
	if _efb.ExtLst != nil {
		if _adec := _efb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adec != nil {
			return _adec
		}
	}
	return nil
}
func (_acca *CT_SlideSize) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_acca.CxAttr = 914400
	_acca.CyAttr = 914400
	for _, _cbaae := range start.Attr {
		if _cbaae.Name.Local == "\u0063\u0078" {
			_ccecad, _bcaf := _a.ParseInt(_cbaae.Value, 10, 32)
			if _bcaf != nil {
				return _bcaf
			}
			_acca.CxAttr = int32(_ccecad)
			continue
		}
		if _cbaae.Name.Local == "\u0063\u0079" {
			_bfbc, _aeae := _a.ParseInt(_cbaae.Value, 10, 32)
			if _aeae != nil {
				return _aeae
			}
			_acca.CyAttr = int32(_bfbc)
			continue
		}
		if _cbaae.Name.Local == "\u0074\u0079\u0070\u0065" {
			_acca.TypeAttr.UnmarshalXMLAttr(_cbaae)
			continue
		}
	}
	for {
		_eggcd, _accg := d.Token()
		if _accg != nil {
			return _d.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006ci\u0064\u0065\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _accg)
		}
		if _afbaa, _ecbbb := _eggcd.(_e.EndElement); _ecbbb && _afbaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aacd *CT_SlideTiming) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _aacd.TnLst != nil {
		_eeff := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_aacd.TnLst, _eeff)
	}
	if _aacd.BldLst != nil {
		_gdgae := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_aacd.BldLst, _gdgae)
	}
	if _aacd.ExtLst != nil {
		_abaee := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aacd.ExtLst, _abaee)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_faced ST_TLPreviousActionType) ValidateWithPath(path string) error {
	switch _faced {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faced))
	}
	return nil
}
func (_ggcbc ST_TLTimeAnimateValueTime) String() string {
	if _ggcbc.ST_PositiveFixedPercentage != nil {
		return _ggcbc.ST_PositiveFixedPercentage.String()
	}
	if _ggcbc.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _ggcbc.ST_TLTimeIndefinite.String()
	}
	return ""
}
func (_feged ST_PlaceholderSize) Validate() error { return _feged.ValidateWithPath("") }
func (_abaae *CT_IndexRange) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0074"}, Value: _d.Sprintf("\u0025\u0076", _abaae.StAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0065\u006e\u0064"}, Value: _d.Sprintf("\u0025\u0076", _abaae.EndAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideLayout and its children
func (_agbae *CT_SlideLayout) Validate() error {
	return _agbae.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074")
}
func (_eedbc *CT_SlideIdList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_ecdd:
	for {
		_ecce, _bfddb := d.Token()
		if _bfddb != nil {
			return _bfddb
		}
		switch _acee := _ecce.(type) {
		case _e.StartElement:
			switch _acee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}:
				_bddd := NewCT_SlideIdListEntry()
				if _ddcgb := d.DecodeElement(_bddd, &_acee); _ddcgb != nil {
					return _ddcgb
				}
				_eedbc.SldId = append(_eedbc.SldId, _bddd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064L\u0069s\u0074\u0020\u0025\u0076", _acee.Name)
				if _gcfa := d.Skip(); _gcfa != nil {
					return _gcfa
				}
			}
		case _e.EndElement:
			break _ecdd
		case _e.CharData:
		}
	}
	return nil
}
func NewOleObj() *OleObj {
	_abddg := &OleObj{}
	_abddg.CT_OleObject = *NewCT_OleObject()
	return _abddg
}
func NewCT_SlideRelationshipList() *CT_SlideRelationshipList {
	_dffc := &CT_SlideRelationshipList{}
	return _dffc
}

// Validate validates the EG_ChildSlide and its children
func (_gedd *EG_ChildSlide) Validate() error {
	return _gedd.ValidateWithPath("\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}
func NewCT_SlideTransition() *CT_SlideTransition { _deab := &CT_SlideTransition{}; return _deab }

type CT_EmbeddedFontDataId struct{ IdAttr string }

func (_ggbbec ST_TLTriggerRuntimeNode) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ggbbec.String(), start)
}
func (_ffadg ST_PrintWhat) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gdbca := _e.Attr{}
	_gdbca.Name = name
	switch _ffadg {
	case ST_PrintWhatUnset:
		_gdbca.Value = ""
	case ST_PrintWhatSlides:
		_gdbca.Value = "\u0073\u006c\u0069\u0064\u0065\u0073"
	case ST_PrintWhatHandouts1:
		_gdbca.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case ST_PrintWhatHandouts2:
		_gdbca.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case ST_PrintWhatHandouts3:
		_gdbca.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case ST_PrintWhatHandouts4:
		_gdbca.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case ST_PrintWhatHandouts6:
		_gdbca.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case ST_PrintWhatHandouts9:
		_gdbca.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case ST_PrintWhatNotes:
		_gdbca.Value = "\u006e\u006f\u0074e\u0073"
	case ST_PrintWhatOutline:
		_gdbca.Value = "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return _gdbca, nil
}
func NewCT_Presentation() *CT_Presentation {
	_eafdd := &CT_Presentation{}
	_eafdd.NotesSz = _da.NewCT_PositiveSize2D()
	return _eafdd
}
func NewCT_SlideMasterTextStyles() *CT_SlideMasterTextStyles {
	_fafgc := &CT_SlideMasterTextStyles{}
	return _fafgc
}
func NewCT_SlideMasterIdList() *CT_SlideMasterIdList { _dfgd := &CT_SlideMasterIdList{}; return _dfgd }
func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_aec := &CT_ConnectorNonVisual{}
	_aec.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_aec.CNvCxnSpPr = _da.NewCT_NonVisualConnectorProperties()
	_aec.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _aec
}

// Validate validates the CT_Picture and its children
func (_gfbb *CT_Picture) Validate() error {
	return _gfbb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}
func (_acbgd ST_Direction) String() string {
	switch _acbgd {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_SlideLayoutIdListEntry and its children, prefixing error messages with path
func (_bcge *CT_SlideLayoutIdListEntry) ValidateWithPath(path string) error {
	if _bcge.IdAttr != nil {
		if *_bcge.IdAttr < 2147483648 {
			return _d.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bcge.IdAttr)
		}
	}
	if _bcge.ExtLst != nil {
		if _gfbe := _bcge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfbe != nil {
			return _gfbe
		}
	}
	return nil
}
func (_bea *CT_CustomShow) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bea.SldLst = NewCT_SlideRelationshipList()
	for _, _fabb := range start.Attr {
		if _fabb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_geeb, _cccce := _fabb.Value, error(nil)
			if _cccce != nil {
				return _cccce
			}
			_bea.NameAttr = _geeb
			continue
		}
		if _fabb.Name.Local == "\u0069\u0064" {
			_cabed, _agfc := _a.ParseUint(_fabb.Value, 10, 32)
			if _agfc != nil {
				return _agfc
			}
			_bea.IdAttr = uint32(_cabed)
			continue
		}
	}
_aefd:
	for {
		_fcge, _adff := d.Token()
		if _adff != nil {
			return _adff
		}
		switch _fdaa := _fcge.(type) {
		case _e.StartElement:
			switch _fdaa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				if _bdd := d.DecodeElement(_bea.SldLst, &_fdaa); _bdd != nil {
					return _bdd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bea.ExtLst = NewCT_ExtensionList()
				if _cgdc := d.DecodeElement(_bea.ExtLst, &_fdaa); _cgdc != nil {
					return _cgdc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043u\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077 \u0025\u0076", _fdaa.Name)
				if _agcd := d.Skip(); _agcd != nil {
					return _agcd
				}
			}
		case _e.EndElement:
			break _aefd
		case _e.CharData:
		}
	}
	return nil
}
func (_gagd *ST_TLBehaviorAccumulateType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bbdge, _becdf := d.Token()
	if _becdf != nil {
		return _becdf
	}
	if _aeaec, _eeagg := _bbdge.(_e.EndElement); _eeagg && _aeaec.Name == start.Name {
		*_gagd = 1
		return nil
	}
	if _acga, _ccgca := _bbdge.(_e.CharData); !_ccgca {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbdge)
	} else {
		switch string(_acga) {
		case "":
			*_gagd = 0
		case "\u006e\u006f\u006e\u0065":
			*_gagd = 1
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_gagd = 2
		}
	}
	_bbdge, _becdf = d.Token()
	if _becdf != nil {
		return _becdf
	}
	if _deca, _bbfabd := _bbdge.(_e.EndElement); _bbfabd && _deca.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbdge)
}
func (_gdeg *ST_WebScreenSize) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eebag, _gbcfg := d.Token()
	if _gbcfg != nil {
		return _gbcfg
	}
	if _eadbg, _befdgb := _eebag.(_e.EndElement); _befdgb && _eadbg.Name == start.Name {
		*_gdeg = 1
		return nil
	}
	if _ecaf, _bdbb := _eebag.(_e.CharData); !_bdbb {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eebag)
	} else {
		switch string(_ecaf) {
		case "":
			*_gdeg = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_gdeg = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_gdeg = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_gdeg = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_gdeg = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_gdeg = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_gdeg = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_gdeg = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_gdeg = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_gdeg = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
			*_gdeg = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_gdeg = 11
		}
	}
	_eebag, _gbcfg = d.Token()
	if _gbcfg != nil {
		return _gbcfg
	}
	if _gacbd, _acfcf := _eebag.(_e.EndElement); _acfcf && _gacbd.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eebag)
}
func (_ggfac ST_TLParaBuildType) ValidateWithPath(path string) error {
	switch _ggfac {
	case 0, 1, 2, 3, 4:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggfac))
	}
	return nil
}
func (_dccc ST_SlideLayoutType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_ccead := _e.Attr{}
	_ccead.Name = name
	switch _dccc {
	case ST_SlideLayoutTypeUnset:
		_ccead.Value = ""
	case ST_SlideLayoutTypeTitle:
		_ccead.Value = "\u0074\u0069\u0074l\u0065"
	case ST_SlideLayoutTypeTx:
		_ccead.Value = "\u0074\u0078"
	case ST_SlideLayoutTypeTwoColTx:
		_ccead.Value = "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case ST_SlideLayoutTypeTbl:
		_ccead.Value = "\u0074\u0062\u006c"
	case ST_SlideLayoutTypeTxAndChart:
		_ccead.Value = "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeChartAndTx:
		_ccead.Value = "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeDgm:
		_ccead.Value = "\u0064\u0067\u006d"
	case ST_SlideLayoutTypeChart:
		_ccead.Value = "\u0063\u0068\u0061r\u0074"
	case ST_SlideLayoutTypeTxAndClipArt:
		_ccead.Value = "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case ST_SlideLayoutTypeClipArtAndTx:
		_ccead.Value = "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTitleOnly:
		_ccead.Value = "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case ST_SlideLayoutTypeBlank:
		_ccead.Value = "\u0062\u006c\u0061n\u006b"
	case ST_SlideLayoutTypeTxAndObj:
		_ccead.Value = "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTx:
		_ccead.Value = "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOnly:
		_ccead.Value = "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case ST_SlideLayoutTypeObj:
		_ccead.Value = "\u006f\u0062\u006a"
	case ST_SlideLayoutTypeTxAndMedia:
		_ccead.Value = "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case ST_SlideLayoutTypeMediaAndTx:
		_ccead.Value = "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOverTx:
		_ccead.Value = "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case ST_SlideLayoutTypeTxOverObj:
		_ccead.Value = "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case ST_SlideLayoutTypeTxAndTwoObj:
		_ccead.Value = "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndTx:
		_ccead.Value = "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTwoObjOverTx:
		_ccead.Value = "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case ST_SlideLayoutTypeFourObj:
		_ccead.Value = "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case ST_SlideLayoutTypeVertTx:
		_ccead.Value = "\u0076\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeClipArtAndVertTx:
		_ccead.Value = "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTx:
		_ccead.Value = "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTxOverChart:
		_ccead.Value = "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeTwoObj:
		_ccead.Value = "\u0074\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTwoObj:
		_ccead.Value = "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndObj:
		_ccead.Value = "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeCust:
		_ccead.Value = "\u0063\u0075\u0073\u0074"
	case ST_SlideLayoutTypeSecHead:
		_ccead.Value = "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case ST_SlideLayoutTypeTwoTxTwoObj:
		_ccead.Value = "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjTx:
		_ccead.Value = "\u006f\u0062\u006aT\u0078"
	case ST_SlideLayoutTypePicTx:
		_ccead.Value = "\u0070\u0069\u0063T\u0078"
	}
	return _ccead, nil
}
func ParseUnionST_TransitionEightDirectionType(s string) (ST_TransitionEightDirectionType, error) {
	return ST_TransitionEightDirectionType{}, nil
}
func (_fgdd *CT_HeaderFooter) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _eebba := range start.Attr {
		if _eebba.Name.Local == "\u0073\u006c\u0064\u004e\u0075\u006d" {
			_afbg, _ggag := _a.ParseBool(_eebba.Value)
			if _ggag != nil {
				return _ggag
			}
			_fgdd.SldNumAttr = &_afbg
			continue
		}
		if _eebba.Name.Local == "\u0068\u0064\u0072" {
			_cdbg, _acfa := _a.ParseBool(_eebba.Value)
			if _acfa != nil {
				return _acfa
			}
			_fgdd.HdrAttr = &_cdbg
			continue
		}
		if _eebba.Name.Local == "\u0066\u0074\u0072" {
			_aacb, _fgb := _a.ParseBool(_eebba.Value)
			if _fgb != nil {
				return _fgb
			}
			_fgdd.FtrAttr = &_aacb
			continue
		}
		if _eebba.Name.Local == "\u0064\u0074" {
			_eed, _bda := _a.ParseBool(_eebba.Value)
			if _bda != nil {
				return _bda
			}
			_fgdd.DtAttr = &_eed
			continue
		}
	}
_cfb:
	for {
		_efcbd, _cbbb := d.Token()
		if _cbbb != nil {
			return _cbbb
		}
		switch _dbb := _efcbd.(type) {
		case _e.StartElement:
			switch _dbb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgdd.ExtLst = NewCT_ExtensionListModify()
				if _fccab := d.DecodeElement(_fgdd.ExtLst, &_dbb); _fccab != nil {
					return _fccab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _dbb.Name)
				if _bebe := d.Skip(); _bebe != nil {
					return _bebe
				}
			}
		case _e.EndElement:
			break _cfb
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_bdg *CT_CommentList) ValidateWithPath(path string) error {
	for _fed, _bace := range _bdg.Cm {
		if _caf := _bace.ValidateWithPath(_d.Sprintf("\u0025s\u002f\u0043\u006d\u005b\u0025\u0064]", path, _fed)); _caf != nil {
			return _caf
		}
	}
	return nil
}
func (_cbfff *CT_HandoutMasterIdListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _edef := range start.Attr {
		if _edef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edef.Name.Local == "\u0069\u0064" || _edef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edef.Name.Local == "\u0069\u0064" {
			_gedb, _fbge := _edef.Value, error(nil)
			if _fbge != nil {
				return _fbge
			}
			_cbfff.IdAttr = _gedb
			continue
		}
	}
_fafee:
	for {
		_gadca, _cefc := d.Token()
		if _cefc != nil {
			return _cefc
		}
		switch _cbc := _gadca.(type) {
		case _e.StartElement:
			switch _cbc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbfff.ExtLst = NewCT_ExtensionList()
				if _bead := d.DecodeElement(_cbfff.ExtLst, &_cbc); _bead != nil {
					return _bead
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _cbc.Name)
				if _ebag := d.Skip(); _ebag != nil {
					return _ebag
				}
			}
		case _e.EndElement:
			break _fafee
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLTimeAnimateValue and its children
func (_dgcfb *CT_TLTimeAnimateValue) Validate() error {
	return _dgcfb.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065")
}
func (_edbe *CT_TLAnimateRotationBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _edbe.ByAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u0079"}, Value: _d.Sprintf("\u0025\u0076", *_edbe.ByAttr)})
	}
	if _edbe.FromAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_edbe.FromAttr)})
	}
	if _edbe.ToAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_edbe.ToAttr)})
	}
	e.EncodeToken(start)
	_bdec := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_edbe.CBhvr, _bdec)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bfcfgf ST_PhotoAlbumLayout) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cgdb := _e.Attr{}
	_cgdb.Name = name
	switch _bfcfgf {
	case ST_PhotoAlbumLayoutUnset:
		_cgdb.Value = ""
	case ST_PhotoAlbumLayoutFitToSlide:
		_cgdb.Value = "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case ST_PhotoAlbumLayout1pic:
		_cgdb.Value = "\u0031\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout2pic:
		_cgdb.Value = "\u0032\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout4pic:
		_cgdb.Value = "\u0034\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout1picTitle:
		_cgdb.Value = "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout2picTitle:
		_cgdb.Value = "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout4picTitle:
		_cgdb.Value = "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return _cgdb, nil
}
func (_ddace ST_TLAnimateMotionBehaviorOrigin) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ddace.String(), start)
}
func (_gagge ST_TLAnimateMotionBehaviorOrigin) String() string {
	switch _gagge {
	case 0:
		return ""
	case 1:
		return "\u0070\u0061\u0072\u0065\u006e\u0074"
	case 2:
		return "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_IndexRange and its children, prefixing error messages with path
func (_cgea *CT_IndexRange) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_EmbeddedFontDataId and its children
func (_eba *CT_EmbeddedFontDataId) Validate() error {
	return _eba.ValidateWithPath("C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064")
}
func (_eced *CT_OutlineViewSlideEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _eced.IdAttr)})
	if _eced.CollapseAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_eced.CollapseAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLMediaNodeAudio and its children, prefixing error messages with path
func (_bcff *CT_TLMediaNodeAudio) ValidateWithPath(path string) error {
	if _bbab := _bcff.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _bbab != nil {
		return _bbab
	}
	return nil
}
func (_efded *CT_TLCommonBehaviorData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _efded.AdditiveAttr != ST_TLBehaviorAdditiveTypeUnset {
		_fceb, _cdca := _efded.AdditiveAttr.MarshalXMLAttr(_e.Name{Local: "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065"})
		if _cdca != nil {
			return _cdca
		}
		start.Attr = append(start.Attr, _fceb)
	}
	if _efded.AccumulateAttr != ST_TLBehaviorAccumulateTypeUnset {
		_aaec, _dddfa := _efded.AccumulateAttr.MarshalXMLAttr(_e.Name{Local: "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065"})
		if _dddfa != nil {
			return _dddfa
		}
		start.Attr = append(start.Attr, _aaec)
	}
	if _efded.XfrmTypeAttr != ST_TLBehaviorTransformTypeUnset {
		_eagbb, _fcag := _efded.XfrmTypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065"})
		if _fcag != nil {
			return _fcag
		}
		start.Attr = append(start.Attr, _eagbb)
	}
	if _efded.FromAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_efded.FromAttr)})
	}
	if _efded.ToAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_efded.ToAttr)})
	}
	if _efded.ByAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u0079"}, Value: _d.Sprintf("\u0025\u0076", *_efded.ByAttr)})
	}
	if _efded.RctxAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u0063\u0074\u0078"}, Value: _d.Sprintf("\u0025\u0076", *_efded.RctxAttr)})
	}
	if _efded.OverrideAttr != ST_TLBehaviorOverrideTypeUnset {
		_faeaa, _fcgb := _efded.OverrideAttr.MarshalXMLAttr(_e.Name{Local: "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"})
		if _fcgb != nil {
			return _fcgb
		}
		start.Attr = append(start.Attr, _faeaa)
	}
	e.EncodeToken(start)
	_gaeda := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_efded.CTn, _gaeda)
	_gcfd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_efded.TgtEl, _gcfd)
	if _efded.AttrNameLst != nil {
		_adbge := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_efded.AttrNameLst, _adbge)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLAnimateEffectBehavior and its children
func (_bacbc *CT_TLAnimateEffectBehavior) Validate() error {
	return _bacbc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

type CT_EmbeddedFontListEntry struct {

	// Embedded Font Name
	Font *_da.CT_TextFont

	// Regular Embedded Font
	Regular *CT_EmbeddedFontDataId

	// Bold Embedded Font
	Bold *CT_EmbeddedFontDataId

	// Italic Embedded Font
	Italic *CT_EmbeddedFontDataId

	// Bold Italic Embedded Font
	BoldItalic *CT_EmbeddedFontDataId
}

// ValidateWithPath validates the SldLayout and its children, prefixing error messages with path
func (_dbead *SldLayout) ValidateWithPath(path string) error {
	if _gcdb := _dbead.CT_SlideLayout.ValidateWithPath(path); _gcdb != nil {
		return _gcdb
	}
	return nil
}
func (_dcgd ST_TLAnimateBehaviorValueType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_dcgd.String(), start)
}

// ValidateWithPath validates the ViewPr and its children, prefixing error messages with path
func (_ffgeg *ViewPr) ValidateWithPath(path string) error {
	if _ccab := _ffgeg.CT_ViewProperties.ValidateWithPath(path); _ccab != nil {
		return _ccab
	}
	return nil
}
func (_fbdca ST_TLTriggerEvent) Validate() error { return _fbdca.ValidateWithPath("") }

// Validate validates the CT_Control and its children
func (_gdga *CT_Control) Validate() error {
	return _gdga.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}
func NewCT_SlideSyncProperties() *CT_SlideSyncProperties {
	_cbec := &CT_SlideSyncProperties{}
	return _cbec
}
func (_dceefg ST_TransitionCornerDirectionType) Validate() error { return _dceefg.ValidateWithPath("") }

// ValidateWithPath validates the TagLst and its children, prefixing error messages with path
func (_ageee *TagLst) ValidateWithPath(path string) error {
	if _ffed := _ageee.CT_TagList.ValidateWithPath(path); _ffed != nil {
		return _ffed
	}
	return nil
}
func (_ecaac ST_TLAnimateMotionPathEditMode) ValidateWithPath(path string) error {
	switch _ecaac {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecaac))
	}
	return nil
}

type CT_TLTimeAnimateValueList struct {

	// Time Animate Value
	Tav []*CT_TLTimeAnimateValue
}

func (_cdaed *CT_TLTriggerTimeNodeID) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fabcgd := range start.Attr {
		if _fabcgd.Name.Local == "\u0076\u0061\u006c" {
			_adgfbc, _cgeba := _a.ParseUint(_fabcgd.Value, 10, 32)
			if _cgeba != nil {
				return _cgeba
			}
			_cdaed.ValAttr = uint32(_adgfbc)
			continue
		}
	}
	for {
		_ggaag, _gdcgb := d.Token()
		if _gdcgb != nil {
			return _d.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0054r\u0069g\u0067e\u0072T\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0049\u0044\u003a\u0020\u0025\u0073", _gdcgb)
		}
		if _aeadd, _begcg := _ggaag.(_e.EndElement); _begcg && _aeadd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdac *CT_SlideMasterTextStyles) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gacg:
	for {
		_ecbcf, _ggecf := d.Token()
		if _ggecf != nil {
			return _ggecf
		}
		switch _efbga := _ecbcf.(type) {
		case _e.StartElement:
			switch _efbga.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_bdac.TitleStyle = _da.NewCT_TextListStyle()
				if _fbbcg := d.DecodeElement(_bdac.TitleStyle, &_efbga); _fbbcg != nil {
					return _fbbcg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}:
				_bdac.BodyStyle = _da.NewCT_TextListStyle()
				if _fcbe := d.DecodeElement(_bdac.BodyStyle, &_efbga); _fcbe != nil {
					return _fcbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}:
				_bdac.OtherStyle = _da.NewCT_TextListStyle()
				if _fdbgg := d.DecodeElement(_bdac.OtherStyle, &_efbga); _fdbgg != nil {
					return _fdbgg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdac.ExtLst = NewCT_ExtensionList()
				if _bgdd := d.DecodeElement(_bdac.ExtLst, &_efbga); _bgdd != nil {
					return _bgdd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0054\u0065\u0078\u0074\u0053t\u0079\u006c\u0065\u0073\u0020%\u0076", _efbga.Name)
				if _bgae := d.Skip(); _bgae != nil {
					return _bgae
				}
			}
		case _e.EndElement:
			break _gacg
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SplitTransition and its children, prefixing error messages with path
func (_abag *CT_SplitTransition) ValidateWithPath(path string) error {
	if _bcead := _abag.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _bcead != nil {
		return _bcead
	}
	if _fcde := _abag.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _fcde != nil {
		return _fcde
	}
	return nil
}
func (_abdb *CT_ControlList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_dbgf:
	for {
		_eaag, _gfd := d.Token()
		if _gfd != nil {
			return _gfd
		}
		switch _efgb := _eaag.(type) {
		case _e.StartElement:
			switch _efgb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_ggfd := NewCT_Control()
				if _agb := d.DecodeElement(_ggfd, &_efgb); _agb != nil {
					return _agb
				}
				_abdb.Control = append(_abdb.Control, _ggfd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006cL\u0069s\u0074\u0020\u0025\u0076", _efgb.Name)
				if _decg := d.Skip(); _decg != nil {
					return _decg
				}
			}
		case _e.EndElement:
			break _dbgf
		case _e.CharData:
		}
	}
	return nil
}
func (_feffc ST_WebScreenSize) Validate() error { return _feffc.ValidateWithPath("") }
func (_cadeg *ST_TLAnimateMotionPathEditMode) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cafbf, _gdfgc := d.Token()
	if _gdfgc != nil {
		return _gdfgc
	}
	if _agbab, _cgcfe := _cafbf.(_e.EndElement); _cgcfe && _agbab.Name == start.Name {
		*_cadeg = 1
		return nil
	}
	if _cabf, _efefc := _cafbf.(_e.CharData); !_efefc {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cafbf)
	} else {
		switch string(_cabf) {
		case "":
			*_cadeg = 0
		case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
			*_cadeg = 1
		case "\u0066\u0069\u0078e\u0064":
			*_cadeg = 2
		}
	}
	_cafbf, _gdfgc = d.Token()
	if _gdfgc != nil {
		return _gdfgc
	}
	if _fbbfd, _bgfcb := _cafbf.(_e.EndElement); _bgfcb && _fbbfd.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cafbf)
}

type CT_CustomShow struct {

	// Custom Show Name
	NameAttr string

	// Custom Show ID
	IdAttr uint32

	// List of Presentation Slides
	SldLst *CT_SlideRelationshipList
	ExtLst *CT_ExtensionList
}
type EG_ShowType struct {

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk
}

// Validate validates the AG_ChildSlide and its children
func (_ge *AG_ChildSlide) Validate() error {
	return _ge.ValidateWithPath("\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

type SldSyncPr struct{ CT_SlideSyncProperties }

func NewCT_TLByHslColorTransform() *CT_TLByHslColorTransform {
	_ggfdc := &CT_TLByHslColorTransform{}
	return _ggfdc
}
func (_gddd *CT_TLAnimVariantIntegerVal) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _gddd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Background and its children, prefixing error messages with path
func (_gec *CT_Background) ValidateWithPath(path string) error {
	if _fc := _gec.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fc != nil {
		return _fc
	}
	if _gec.BgPr != nil {
		if _fbg := _gec.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _fbg != nil {
			return _fbg
		}
	}
	if _gec.BgRef != nil {
		if _befd := _gec.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _befd != nil {
			return _befd
		}
	}
	return nil
}
func (_ddb *CT_NotesMasterIdList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_acda:
	for {
		_egbff, _dfea := d.Token()
		if _dfea != nil {
			return _dfea
		}
		switch _fad := _egbff.(type) {
		case _e.StartElement:
			switch _fad.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_ddb.NotesMasterId = NewCT_NotesMasterIdListEntry()
				if _fadd := d.DecodeElement(_ddb.NotesMasterId, &_fad); _fadd != nil {
					return _fadd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fad.Name)
				if _daed := d.Skip(); _daed != nil {
					return _daed
				}
			}
		case _e.EndElement:
			break _acda
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLIterateIntervalPercentage and its children, prefixing error messages with path
func (_abaefb *CT_TLIterateIntervalPercentage) ValidateWithPath(path string) error {
	if _gfdc := _abaefb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gfdc != nil {
		return _gfdc
	}
	return nil
}

// ValidateWithPath validates the CT_HtmlPublishProperties and its children, prefixing error messages with path
func (_dcc *CT_HtmlPublishProperties) ValidateWithPath(path string) error {
	if _dcc.SldAll != nil {
		if _bccb := _dcc.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _bccb != nil {
			return _bccb
		}
	}
	if _dcc.SldRg != nil {
		if _cfaad := _dcc.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _cfaad != nil {
			return _cfaad
		}
	}
	if _dcc.CustShow != nil {
		if _bgga := _dcc.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _bgga != nil {
			return _bgga
		}
	}
	if _dcc.ExtLst != nil {
		if _cdeac := _dcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdeac != nil {
			return _cdeac
		}
	}
	return nil
}
func (_fffg *ST_TransitionCornerDirectionType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_fffg = 0
	case "\u006c\u0075":
		*_fffg = 1
	case "\u0072\u0075":
		*_fffg = 2
	case "\u006c\u0064":
		*_fffg = 3
	case "\u0072\u0064":
		*_fffg = 4
	}
	return nil
}
func NewCT_TLOleBuildChart() *CT_TLOleBuildChart { _dfefa := &CT_TLOleBuildChart{}; return _dfefa }
func (_ddccg ST_TransitionInOutDirectionType) ValidateWithPath(path string) error {
	switch _ddccg {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddccg))
	}
	return nil
}

// Validate validates the AG_TLBuild and its children
func (_adb *AG_TLBuild) Validate() error {
	return _adb.ValidateWithPath("\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064")
}
func NewCT_PresentationProperties() *CT_PresentationProperties {
	_dbffg := &CT_PresentationProperties{}
	return _dbffg
}

// Validate validates the CT_TLTimeNodeExclusive and its children
func (_aeadc *CT_TLTimeNodeExclusive) Validate() error {
	return _aeadc.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065")
}

type ST_TLBehaviorTransformType byte

// ValidateWithPath validates the CT_SlideLayout and its children, prefixing error messages with path
func (_gfgcf *CT_SlideLayout) ValidateWithPath(path string) error {
	if _feed := _gfgcf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _feed != nil {
		return _feed
	}
	if _beggf := _gfgcf.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _beggf != nil {
		return _beggf
	}
	if _gfgcf.ClrMapOvr != nil {
		if _aebacd := _gfgcf.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _aebacd != nil {
			return _aebacd
		}
	}
	if _gfgcf.Transition != nil {
		if _cfged := _gfgcf.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _cfged != nil {
			return _cfged
		}
	}
	if _gfgcf.Timing != nil {
		if _gfgb := _gfgcf.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _gfgb != nil {
			return _gfgb
		}
	}
	if _gfgcf.Hf != nil {
		if _fbcde := _gfgcf.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _fbcde != nil {
			return _fbcde
		}
	}
	if _gfgcf.ExtLst != nil {
		if _afec := _gfgcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afec != nil {
			return _afec
		}
	}
	return nil
}
func (_fcecff *ST_TLCommandType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_fcecff = 0
	case "\u0065\u0076\u0074":
		*_fcecff = 1
	case "\u0063\u0061\u006c\u006c":
		*_fcecff = 2
	case "\u0076\u0065\u0072\u0062":
		*_fcecff = 3
	}
	return nil
}

// Validate validates the CT_TLTemplate and its children
func (_fccd *CT_TLTemplate) Validate() error {
	return _fccd.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065")
}
func NewCT_ShowInfoKiosk() *CT_ShowInfoKiosk { _gcacg := &CT_ShowInfoKiosk{}; return _gcacg }
func (_cdce *CT_OleObject) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cdce.Choice = NewCT_OleObjectChoice()
	for _, _ebga := range start.Attr {
		if _ebga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebga.Name.Local == "\u0069\u0064" {
			_bfee, _eaac := _ebga.Value, error(nil)
			if _eaac != nil {
				return _eaac
			}
			_cdce.IdAttr = &_bfee
			continue
		}
		if _ebga.Name.Local == "\u0073\u0070\u0069\u0064" {
			_dafa, _gdaa := _ebga.Value, error(nil)
			if _gdaa != nil {
				return _gdaa
			}
			_cdce.SpidAttr = &_dafa
			continue
		}
		if _ebga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gedbg, _bfbg := _ebga.Value, error(nil)
			if _bfbg != nil {
				return _bfbg
			}
			_cdce.NameAttr = &_gedbg
			continue
		}
		if _ebga.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_daec, _gbde := _a.ParseBool(_ebga.Value)
			if _gbde != nil {
				return _gbde
			}
			_cdce.ShowAsIconAttr = &_daec
			continue
		}
		if _ebga.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_adfb, _bdag := _ebga.Value, error(nil)
			if _bdag != nil {
				return _bdag
			}
			_cdce.ProgIdAttr = &_adfb
			continue
		}
		if _ebga.Name.Local == "\u0069\u006d\u0067\u0057" {
			_cafa, _ffbb := _a.ParseInt(_ebga.Value, 10, 32)
			if _ffbb != nil {
				return _ffbb
			}
			_cgged := int32(_cafa)
			_cdce.ImgWAttr = &_cgged
			continue
		}
		if _ebga.Name.Local == "\u0069\u006d\u0067\u0048" {
			_fabgb, _adafb := _a.ParseInt(_ebga.Value, 10, 32)
			if _adafb != nil {
				return _adafb
			}
			_eaeg := int32(_fabgb)
			_cdce.ImgHAttr = &_eaeg
			continue
		}
	}
_fdccg:
	for {
		_badf, _acfc := d.Token()
		if _acfc != nil {
			return _acfc
		}
		switch _bbee := _badf.(type) {
		case _e.StartElement:
			switch _bbee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_cdce.Choice = NewCT_OleObjectChoice()
				if _afabb := d.DecodeElement(&_cdce.Choice.Embed, &_bbee); _afabb != nil {
					return _afabb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_cdce.Choice = NewCT_OleObjectChoice()
				if _ddba := d.DecodeElement(&_cdce.Choice.Link, &_bbee); _ddba != nil {
					return _ddba
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_cdce.Pic = NewCT_Picture()
				if _aabb := d.DecodeElement(_cdce.Pic, &_bbee); _aabb != nil {
					return _aabb
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _bbee.Name)
				if _eegb := d.Skip(); _eegb != nil {
					return _eegb
				}
			}
		case _e.EndElement:
			break _fdccg
		case _e.CharData:
		}
	}
	return nil
}
func (_bdfg *CT_TLAnimVariantBooleanVal) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gbcd := range start.Attr {
		if _gbcd.Name.Local == "\u0076\u0061\u006c" {
			_gafb, _eedee := _a.ParseBool(_gbcd.Value)
			if _eedee != nil {
				return _eedee
			}
			_bdfg.ValAttr = _gafb
			continue
		}
	}
	for {
		_agbee, _bgef := d.Token()
		if _bgef != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074B\u006f\u006f\u006c\u0065\u0061n\u0056\u0061l\u003a\u0020\u0025\u0073", _bgef)
		}
		if _dbea, _debg := _agbee.(_e.EndElement); _debg && _dbea.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_ViewType byte

func (_cbfbb *CT_SlideSorterViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cbfbb.ShowFormattingAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cbfbb.ShowFormattingAttr))})
	}
	e.EncodeToken(start)
	_gfad := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cbfbb.CViewPr, _gfad)
	if _cbfbb.ExtLst != nil {
		_faeg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbfbb.ExtLst, _faeg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type ST_PhotoAlbumLayout byte

func NewCT_TLOleChartTargetElement() *CT_TLOleChartTargetElement {
	_eaagc := &CT_TLOleChartTargetElement{}
	_eaagc.TypeAttr = ST_TLChartSubelementType(1)
	return _eaagc
}
func (_bggb *CT_PrintProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _edga := range start.Attr {
		if _edga.Name.Local == "\u0070r\u006e\u0057\u0068\u0061\u0074" {
			_bggb.PrnWhatAttr.UnmarshalXMLAttr(_edga)
			continue
		}
		if _edga.Name.Local == "\u0063l\u0072\u004d\u006f\u0064\u0065" {
			_bggb.ClrModeAttr.UnmarshalXMLAttr(_edga)
			continue
		}
		if _edga.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073" {
			_geaf, _cddf := _a.ParseBool(_edga.Value)
			if _cddf != nil {
				return _cddf
			}
			_bggb.HiddenSlidesAttr = &_geaf
			continue
		}
		if _edga.Name.Local == "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072" {
			_fgea, _bgdc := _a.ParseBool(_edga.Value)
			if _bgdc != nil {
				return _bgdc
			}
			_bggb.ScaleToFitPaperAttr = &_fgea
			continue
		}
		if _edga.Name.Local == "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073" {
			_eefd, _ggbc := _a.ParseBool(_edga.Value)
			if _ggbc != nil {
				return _ggbc
			}
			_bggb.FrameSlidesAttr = &_eefd
			continue
		}
	}
_efee:
	for {
		_feff, _aeab := d.Token()
		if _aeab != nil {
			return _aeab
		}
		switch _gdgb := _feff.(type) {
		case _e.StartElement:
			switch _gdgb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bggb.ExtLst = NewCT_ExtensionList()
				if _edfe := d.DecodeElement(_bggb.ExtLst, &_gdgb); _edfe != nil {
					return _edfe
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gdgb.Name)
				if _fbcba := d.Skip(); _fbcba != nil {
					return _fbcba
				}
			}
		case _e.EndElement:
			break _efee
		case _e.CharData:
		}
	}
	return nil
}
func (_afbccd *CT_TLAnimateScaleBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _afbccd.ZoomContentsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_afbccd.ZoomContentsAttr))})
	}
	e.EncodeToken(start)
	_cbbd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_afbccd.CBhvr, _cbbd)
	if _afbccd.By != nil {
		_dgcf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_afbccd.By, _dgcf)
	}
	if _afbccd.From != nil {
		_gfcab := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_afbccd.From, _gfcab)
	}
	if _afbccd.To != nil {
		_geegc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_afbccd.To, _geegc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NormalViewPortion and its children
func (_fbbb *CT_NormalViewPortion) Validate() error {
	return _fbbb.ValidateWithPath("C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e")
}

type CT_TLOleBuildChart struct {

	// Build
	BldAttr ST_TLOleChartBuildType

	// Animate Background
	AnimBgAttr   *bool
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func NewAG_ChildSlide() *AG_ChildSlide { _bb := &AG_ChildSlide{}; return _bb }

type CT_CommentAuthorList struct {

	// Comment Author
	CmAuthor []*CT_CommentAuthor
}
type CT_SlideMasterIdList struct {

	// Slide Master ID
	SldMasterId []*CT_SlideMasterIdListEntry
}

func NewCT_BackgroundProperties() *CT_BackgroundProperties {
	_afa := &CT_BackgroundProperties{}
	return _afa
}
func (_dfaef *CT_WheelTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dfeee := range start.Attr {
		if _dfeee.Name.Local == "\u0073\u0070\u006f\u006b\u0065\u0073" {
			_agbgg, _bddec := _a.ParseUint(_dfeee.Value, 10, 32)
			if _bddec != nil {
				return _bddec
			}
			_fcage := uint32(_agbgg)
			_dfaef.SpokesAttr = &_fcage
			continue
		}
	}
	for {
		_aggfb, _aggg := d.Token()
		if _aggg != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u0068\u0065\u0065\u006c\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _aggg)
		}
		if _gdea, _caffd := _aggfb.(_e.EndElement); _caffd && _gdea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbedf ST_TLTimeNodeRestartType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_ceac := _e.Attr{}
	_ceac.Name = name
	switch _dbedf {
	case ST_TLTimeNodeRestartTypeUnset:
		_ceac.Value = ""
	case ST_TLTimeNodeRestartTypeAlways:
		_ceac.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	case ST_TLTimeNodeRestartTypeWhenNotActive:
		_ceac.Value = "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case ST_TLTimeNodeRestartTypeNever:
		_ceac.Value = "\u006e\u0065\u0076e\u0072"
	}
	return _ceac, nil
}

type CT_TLTimeNodeParallel struct {

	// Parallel TimeNode
	CTn *CT_TLCommonTimeNodeData
}

func (_cedge *CmLst) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0063\u006d\u004c\u0073\u0074"
	return _cedge.CT_CommentList.MarshalXML(e, start)
}

// Validate validates the CT_NotesViewProperties and its children
func (_ecbb *CT_NotesViewProperties) Validate() error {
	return _ecbb.ValidateWithPath("\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// Validate validates the CT_SlideViewProperties and its children
func (_gaacb *CT_SlideViewProperties) Validate() error {
	return _gaacb.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

type CT_TLTemplateList struct {

	// Template Effects
	Tmpl []*CT_TLTemplate
}

// Validate validates the CT_Kinsoku and its children
func (_gbgbe *CT_Kinsoku) Validate() error {
	return _gbgbe.ValidateWithPath("\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075")
}

type CT_TLAnimateMotionBehavior struct {

	// Origin
	OriginAttr ST_TLAnimateMotionBehaviorOrigin

	// Path
	PathAttr *string

	// Path Edit Mode
	PathEditModeAttr ST_TLAnimateMotionPathEditMode

	// Relative Angle
	RAngAttr *int32

	// Points Types
	PtsTypesAttr *string
	CBhvr        *CT_TLCommonBehaviorData
	By           *CT_TLPoint

	// From
	From *CT_TLPoint
	To   *CT_TLPoint

	// Rotation Center
	RCtr *CT_TLPoint
}

func (_egcgb *CT_TLAnimVariantFloatVal) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _egcgb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLOleBuildChart and its children
func (_eead *CT_TLOleBuildChart) Validate() error {
	return _eead.ValidateWithPath("\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074")
}

type CT_TLByRgbColorTransform struct {

	// Red
	RAttr _da.ST_FixedPercentage

	// Green
	GAttr _da.ST_FixedPercentage

	// Blue
	BAttr _da.ST_FixedPercentage
}

func (_efbde *HandoutMaster) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_efbde.CT_HandoutMaster = *NewCT_HandoutMaster()
_gdbe:
	for {
		_afcdd, _bcga := d.Token()
		if _bcga != nil {
			return _bcga
		}
		switch _ggfce := _afcdd.(type) {
		case _e.StartElement:
			switch _ggfce.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eacgf := d.DecodeElement(_efbde.CSld, &_ggfce); _eacgf != nil {
					return _eacgf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _fgebe := d.DecodeElement(_efbde.ClrMap, &_ggfce); _fgebe != nil {
					return _fgebe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_efbde.Hf = NewCT_HeaderFooter()
				if _cdcf := d.DecodeElement(_efbde.Hf, &_ggfce); _cdcf != nil {
					return _cdcf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efbde.ExtLst = NewCT_ExtensionListModify()
				if _cdff := d.DecodeElement(_efbde.ExtLst, &_ggfce); _cdff != nil {
					return _cdff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072 \u0025\u0076", _ggfce.Name)
				if _aegaba := d.Skip(); _aegaba != nil {
					return _aegaba
				}
			}
		case _e.EndElement:
			break _gdbe
		case _e.CharData:
		}
	}
	return nil
}
func (_ccgac *CT_Placeholder) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _adfe := range start.Attr {
		if _adfe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ccgac.TypeAttr.UnmarshalXMLAttr(_adfe)
			continue
		}
		if _adfe.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_ccgac.OrientAttr.UnmarshalXMLAttr(_adfe)
			continue
		}
		if _adfe.Name.Local == "\u0073\u007a" {
			_ccgac.SzAttr.UnmarshalXMLAttr(_adfe)
			continue
		}
		if _adfe.Name.Local == "\u0069\u0064\u0078" {
			_fbfbe, _fadb := _a.ParseUint(_adfe.Value, 10, 32)
			if _fadb != nil {
				return _fadb
			}
			_deef := uint32(_fbfbe)
			_ccgac.IdxAttr = &_deef
			continue
		}
		if _adfe.Name.Local == "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074" {
			_dgaaf, _egged := _a.ParseBool(_adfe.Value)
			if _egged != nil {
				return _egged
			}
			_ccgac.HasCustomPromptAttr = &_dgaaf
			continue
		}
	}
_efce:
	for {
		_degce, _dabg := d.Token()
		if _dabg != nil {
			return _dabg
		}
		switch _aegd := _degce.(type) {
		case _e.StartElement:
			switch _aegd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccgac.ExtLst = NewCT_ExtensionListModify()
				if _edbd := d.DecodeElement(_ccgac.ExtLst, &_aegd); _edbd != nil {
					return _edbd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068\u006fl\u0064e\u0072\u0020\u0025\u0076", _aegd.Name)
				if _eaafb := d.Skip(); _eaafb != nil {
					return _eaafb
				}
			}
		case _e.EndElement:
			break _efce
		case _e.CharData:
		}
	}
	return nil
}
func (_beeeg *ST_TLNextActionType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gcgdg, _gadb := d.Token()
	if _gadb != nil {
		return _gadb
	}
	if _caggg, _cfcfe := _gcgdg.(_e.EndElement); _cfcfe && _caggg.Name == start.Name {
		*_beeeg = 1
		return nil
	}
	if _egcf, _dgbga := _gcgdg.(_e.CharData); !_dgbga {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcgdg)
	} else {
		switch string(_egcf) {
		case "":
			*_beeeg = 0
		case "\u006e\u006f\u006e\u0065":
			*_beeeg = 1
		case "\u0073\u0065\u0065\u006b":
			*_beeeg = 2
		}
	}
	_gcgdg, _gadb = d.Token()
	if _gadb != nil {
		return _gadb
	}
	if _befdf, _eedceb := _gcgdg.(_e.EndElement); _eedceb && _befdf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcgdg)
}
func (_abbdb ST_TLAnimateMotionBehaviorOrigin) Validate() error { return _abbdb.ValidateWithPath("") }
func (_ccgeb *CT_TLTriggerRuntimeNode) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ccgeb.ValAttr = ST_TLTriggerRuntimeNode(1)
	for _, _fced := range start.Attr {
		if _fced.Name.Local == "\u0076\u0061\u006c" {
			_ccgeb.ValAttr.UnmarshalXMLAttr(_fced)
			continue
		}
	}
	for {
		_afffe, _deede := d.Token()
		if _deede != nil {
			return _d.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0054r\u0069\u0067\u0067\u0065\u0072\u0052\u0075n\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u003a\u0020%\u0073", _deede)
		}
		if _afbed, _cagfea := _afffe.(_e.EndElement); _cagfea && _afbed.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the AG_TLBuild and its children, prefixing error messages with path
func (_afdg *AG_TLBuild) ValidateWithPath(path string) error { return nil }

const (
	ST_TLParaBuildTypeUnset     ST_TLParaBuildType = 0
	ST_TLParaBuildTypeAllAtOnce ST_TLParaBuildType = 1
	ST_TLParaBuildTypeP         ST_TLParaBuildType = 2
	ST_TLParaBuildTypeCust      ST_TLParaBuildType = 3
	ST_TLParaBuildTypeWhole     ST_TLParaBuildType = 4
)

// Validate validates the CT_GroupShapeNonVisual and its children
func (_fcae *CT_GroupShapeNonVisual) Validate() error {
	return _fcae.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}
func (_gaee *CT_TLGraphicalObjectBuild) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dgca := range start.Attr {
		if _dgca.Name.Local == "\u0073\u0070\u0069\u0064" {
			_aggag, _gfdde := _a.ParseUint(_dgca.Value, 10, 32)
			if _gfdde != nil {
				return _gfdde
			}
			_abgab := uint32(_aggag)
			_gaee.SpidAttr = &_abgab
			continue
		}
		if _dgca.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_eggeg, _dccg := _a.ParseUint(_dgca.Value, 10, 32)
			if _dccg != nil {
				return _dccg
			}
			_dbfcbe := uint32(_eggeg)
			_gaee.GrpIdAttr = &_dbfcbe
			continue
		}
		if _dgca.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_ceddbc, _cgbab := _a.ParseBool(_dgca.Value)
			if _cgbab != nil {
				return _cgbab
			}
			_gaee.UiExpandAttr = &_ceddbc
			continue
		}
	}
_bade:
	for {
		_eeaab, _gfbee := d.Token()
		if _gfbee != nil {
			return _gfbee
		}
		switch _efgff := _eeaab.(type) {
		case _e.StartElement:
			switch _efgff.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
				_gaee.BldAsOne = NewCT_Empty()
				if _fgafc := d.DecodeElement(_gaee.BldAsOne, &_efgff); _fgafc != nil {
					return _fgafc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
				_gaee.BldSub = _da.NewCT_AnimationGraphicalObjectBuildProperties()
				if _bfcf := d.DecodeElement(_gaee.BldSub, &_efgff); _bfcf != nil {
					return _bfcf
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069c\u0061l\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075i\u006cd\u0020\u0025v", _efgff.Name)
				if _bdcd := d.Skip(); _bdcd != nil {
					return _bdcd
				}
			}
		case _e.EndElement:
			break _bade
		case _e.CharData:
		}
	}
	return nil
}

type CT_TLAnimateEffectBehavior struct {

	// Transition
	TransitionAttr ST_TLAnimateEffectTransition

	// Filter
	FilterAttr *string

	// Property List
	PrLstAttr *string
	CBhvr     *CT_TLCommonBehaviorData

	// Progress
	Progress *CT_TLAnimVariant
}

// Validate validates the CT_SlideIdList and its children
func (_fdebg *CT_SlideIdList) Validate() error {
	return _fdebg.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_TLTriggerRuntimeNode and its children
func (_ecfbb *CT_TLTriggerRuntimeNode) Validate() error {
	return _ecfbb.ValidateWithPath("\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065")
}
func (_gegdc ST_TLChartSubelementType) ValidateWithPath(path string) error {
	switch _gegdc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gegdc))
	}
	return nil
}
func (_bbccd ST_Direction) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bbccd.String(), start)
}
func (_aaa *CT_CommonViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _aaa.VarScaleAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_aaa.VarScaleAttr))})
	}
	e.EncodeToken(start)
	_abbf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0063\u0061\u006c\u0065"}}
	e.EncodeElement(_aaa.Scale, _abbf)
	_fecb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006f\u0072\u0069\u0067\u0069\u006e"}}
	e.EncodeElement(_aaa.Origin, _fecb)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gbgad ST_TLTimeNodeFillType) String() string {
	switch _gbgad {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006d\u006f\u0076\u0065"
	case 2:
		return "\u0066\u0072\u0065\u0065\u007a\u0065"
	case 3:
		return "\u0068\u006f\u006c\u0064"
	case 4:
		return "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return ""
}
func (_fgca *CT_SlideMasterIdListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fgca.IdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_fgca.IdAttr)})
	}
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _fgca.RIdAttr)})
	e.EncodeToken(start)
	if _fgca.ExtLst != nil {
		_fagd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgca.ExtLst, _fagd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeNodeExclusive() *CT_TLTimeNodeExclusive {
	_egdd := &CT_TLTimeNodeExclusive{}
	_egdd.CTn = NewCT_TLCommonTimeNodeData()
	return _egdd
}

// ValidateWithPath validates the CT_TLTriggerTimeNodeID and its children, prefixing error messages with path
func (_acaddb *CT_TLTriggerTimeNodeID) ValidateWithPath(path string) error { return nil }
func (_dbba *EG_SlideListChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_edgc:
	for {
		_dgeaa, _abcea := d.Token()
		if _abcea != nil {
			return _abcea
		}
		switch _dgbffe := _dgeaa.(type) {
		case _e.StartElement:
			switch _dgbffe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_dbba.SldAll = NewCT_Empty()
				if _cabbf := d.DecodeElement(_dbba.SldAll, &_dgbffe); _cabbf != nil {
					return _cabbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_dbba.SldRg = NewCT_IndexRange()
				if _dfaab := d.DecodeElement(_dbba.SldRg, &_dgbffe); _dfaab != nil {
					return _dfaab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_dbba.CustShow = NewCT_CustomShowId()
				if _cfff := d.DecodeElement(_dbba.CustShow, &_dgbffe); _cfff != nil {
					return _cfff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u006c\u0069\u0064\u0065\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _dgbffe.Name)
				if _gdccb := d.Skip(); _gdccb != nil {
					return _gdccb
				}
			}
		case _e.EndElement:
			break _edgc
		case _e.CharData:
		}
	}
	return nil
}

type CT_ShapeNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_da.CT_NonVisualDrawingProps

	// Non-Visual Drawing Properties for a Shape
	CNvSpPr *_da.CT_NonVisualDrawingShapeProps

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func NewCT_ModifyVerifier() *CT_ModifyVerifier { _bgada := &CT_ModifyVerifier{}; return _bgada }
func NewCT_TLTimeTargetElement() *CT_TLTimeTargetElement {
	_fddef := &CT_TLTimeTargetElement{}
	return _fddef
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_abbg *CT_GroupShape) ValidateWithPath(path string) error {
	if _cgad := _abbg.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cgad != nil {
		return _cgad
	}
	if _acec := _abbg.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _acec != nil {
		return _acec
	}
	for _eecda, _aebad := range _abbg.Choice {
		if _gffb := _aebad.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _eecda)); _gffb != nil {
			return _gffb
		}
	}
	if _abbg.ExtLst != nil {
		if _cfaa := _abbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfaa != nil {
			return _cfaa
		}
	}
	return nil
}
func (_afaf *CT_PictureNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gdcd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_afaf.CNvPr, _gdcd)
	_fecg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_afaf.CNvPicPr, _fecg)
	_fabgf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_afaf.NvPr, _fabgf)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_febc *CT_OleObject) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _febc.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_febc.ProgIdAttr)})
	}
	if _febc.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_febc.SpidAttr)})
	}
	if _febc.NameAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_febc.NameAttr)})
	}
	if _febc.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_febc.ShowAsIconAttr))})
	}
	if _febc.IdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_febc.IdAttr)})
	}
	if _febc.ImgWAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _d.Sprintf("\u0025\u0076", *_febc.ImgWAttr)})
	}
	if _febc.ImgHAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _d.Sprintf("\u0025\u0076", *_febc.ImgHAttr)})
	}
	e.EncodeToken(start)
	_febc.Choice.MarshalXML(e, _e.StartElement{})
	if _febc.Pic != nil {
		_fddcd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_febc.Pic, _fddcd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cec *CT_SlideLayout) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cec.MatchingNameAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_cec.MatchingNameAttr)})
	}
	if _cec.TypeAttr != ST_SlideLayoutTypeUnset {
		_gdggb, _eaaba := _cec.TypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _eaaba != nil {
			return _eaaba
		}
		start.Attr = append(start.Attr, _gdggb)
	}
	if _cec.PreserveAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cec.PreserveAttr))})
	}
	if _cec.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cec.UserDrawnAttr))})
	}
	if _cec.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cec.ShowMasterSpAttr))})
	}
	if _cec.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_cec.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_bcea := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_cec.CSld, _bcea)
	if _cec.ClrMapOvr != nil {
		_gbeb := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_cec.ClrMapOvr, _gbeb)
	}
	if _cec.Transition != nil {
		_fdcb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cec.Transition, _fdcb)
	}
	if _cec.Timing != nil {
		_aceg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_cec.Timing, _aceg)
	}
	if _cec.Hf != nil {
		_bddc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_cec.Hf, _bddc)
	}
	if _cec.ExtLst != nil {
		_cfgb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cec.ExtLst, _cfgb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fgdbg *CT_TLTextTargetElement) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eddbb:
	for {
		_fafa, _abcb := d.Token()
		if _abcb != nil {
			return _abcb
		}
		switch _babef := _fafa.(type) {
		case _e.StartElement:
			switch _babef.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
				_fgdbg.CharRg = NewCT_IndexRange()
				if _dfcfa := d.DecodeElement(_fgdbg.CharRg, &_babef); _dfcfa != nil {
					return _dfcfa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
				_fgdbg.PRg = NewCT_IndexRange()
				if _bbeddf := d.DecodeElement(_fgdbg.PRg, &_babef); _bbeddf != nil {
					return _bbeddf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0065x\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _babef.Name)
				if _adfce := d.Skip(); _adfce != nil {
					return _adfce
				}
			}
		case _e.EndElement:
			break _eddbb
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_TLIterateIntervalTime() *CT_TLIterateIntervalTime {
	_gfdad := &CT_TLIterateIntervalTime{}
	return _gfdad
}
func (_dbcef ST_TLTimeNodeSyncType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_dbcef.String(), start)
}
func (_dcffg ST_TLPreviousActionType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fagc := _e.Attr{}
	_fagc.Name = name
	switch _dcffg {
	case ST_TLPreviousActionTypeUnset:
		_fagc.Value = ""
	case ST_TLPreviousActionTypeNone:
		_fagc.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLPreviousActionTypeSkipTimed:
		_fagc.Value = "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return _fagc, nil
}

// Validate validates the CT_TLCommandBehavior and its children
func (_ebeg *CT_TLCommandBehavior) Validate() error {
	return _ebeg.ValidateWithPath("C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072")
}
func (_gbgec ST_OleObjectFollowColorScheme) String() string {
	switch _gbgec {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0066\u0075\u006c\u006c"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return ""
}

type ST_TLAnimateColorSpace byte

func (_befb *CT_SlideSize) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u0078"}, Value: _d.Sprintf("\u0025\u0076", _befb.CxAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u0079"}, Value: _d.Sprintf("\u0025\u0076", _befb.CyAttr)})
	if _befb.TypeAttr != ST_SlideSizeTypeUnset {
		_ceaa, _ebfab := _befb.TypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ebfab != nil {
			return _ebfab
		}
		start.Attr = append(start.Attr, _ceaa)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_aaebb *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_befdg, _fabeb := d.Token()
	if _fabeb != nil {
		return _fabeb
	}
	if _adgfe, _cedfb := _befdg.(_e.EndElement); _cedfb && _adgfe.Name == start.Name {
		*_aaebb = 1
		return nil
	}
	if _bcaagc, _gcddf := _befdg.(_e.CharData); !_gcddf {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _befdg)
	} else {
		switch string(_bcaagc) {
		case "":
			*_aaebb = 0
		case "\u0070\u0061\u0072\u0065\u006e\u0074":
			*_aaebb = 1
		case "\u006c\u0061\u0079\u006f\u0075\u0074":
			*_aaebb = 2
		}
	}
	_befdg, _fabeb = d.Token()
	if _fabeb != nil {
		return _fabeb
	}
	if _eeddce, _adbdc := _befdg.(_e.EndElement); _adbdc && _eeddce.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _befdg)
}
func (_cgbbg *CT_ModifyVerifier) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cgbbg.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.AlgorithmNameAttr)})
	}
	if _cgbbg.HashValueAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.HashValueAttr)})
	}
	if _cgbbg.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.SaltValueAttr)})
	}
	if _cgbbg.SpinValueAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.SpinValueAttr)})
	}
	if _cgbbg.CryptProviderTypeAttr != _ef.ST_CryptProvUnset {
		_bgadd, _dgccd := _cgbbg.CryptProviderTypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065"})
		if _dgccd != nil {
			return _dgccd
		}
		start.Attr = append(start.Attr, _bgadd)
	}
	if _cgbbg.CryptAlgorithmClassAttr != _ef.ST_AlgClassUnset {
		_ggfab, _dcdg := _cgbbg.CryptAlgorithmClassAttr.MarshalXMLAttr(_e.Name{Local: "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073"})
		if _dcdg != nil {
			return _dcdg
		}
		start.Attr = append(start.Attr, _ggfab)
	}
	if _cgbbg.CryptAlgorithmTypeAttr != _ef.ST_AlgTypeUnset {
		_gfa, _gabc := _cgbbg.CryptAlgorithmTypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065"})
		if _gabc != nil {
			return _gabc
		}
		start.Attr = append(start.Attr, _gfa)
	}
	if _cgbbg.CryptAlgorithmSidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.CryptAlgorithmSidAttr)})
	}
	if _cgbbg.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.SpinCountAttr)})
	}
	if _cgbbg.SaltDataAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.SaltDataAttr)})
	}
	if _cgbbg.HashDataAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.HashDataAttr)})
	}
	if _cgbbg.CryptProviderAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.CryptProviderAttr)})
	}
	if _cgbbg.AlgIdExtAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.AlgIdExtAttr)})
	}
	if _cgbbg.AlgIdExtSourceAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.AlgIdExtSourceAttr)})
	}
	if _cgbbg.CryptProviderTypeExtAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.CryptProviderTypeExtAttr)})
	}
	if _cgbbg.CryptProviderTypeExtSourceAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_cgbbg.CryptProviderTypeExtSourceAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_abfc *CT_ShapeNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_aacc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_abfc.CNvPr, _aacc)
	_adgg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_abfc.CNvSpPr, _adgg)
	_gbaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_abfc.NvPr, _gbaf)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_BuildList() *CT_BuildList { _def := &CT_BuildList{}; return _def }
func (_cgeac *EG_ChildSlide) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bbedb:
	for {
		_agcdc, _dbbed := d.Token()
		if _dbbed != nil {
			return _dbbed
		}
		switch _fafbe := _agcdc.(type) {
		case _e.StartElement:
			switch _fafbe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_cgeac.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _bcbd := d.DecodeElement(_cgeac.ClrMapOvr, &_fafbe); _bcbd != nil {
					return _bcbd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043h\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _fafbe.Name)
				if _dedca := d.Skip(); _dedca != nil {
					return _dedca
				}
			}
		case _e.EndElement:
			break _bbedb
		case _e.CharData:
		}
	}
	return nil
}
func (_fbfe *CT_ShowInfoBrowse) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _acfbg := range start.Attr {
		if _acfbg.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072" {
			_afbe, _fcaaa := _a.ParseBool(_acfbg.Value)
			if _fcaaa != nil {
				return _fcaaa
			}
			_fbfe.ShowScrollbarAttr = &_afbe
			continue
		}
	}
	for {
		_eddc, _cgbad := d.Token()
		if _cgbad != nil {
			return _d.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042\u0072\u006f\u0077\u0073\u0065: \u0025\u0073", _cgbad)
		}
		if _faac, _baeb := _eddc.(_e.EndElement); _baeb && _faac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dagaa ST_TLTimeNodeSyncType) ValidateWithPath(path string) error {
	switch _dagaa {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dagaa))
	}
	return nil
}

// Validate validates the CT_HtmlPublishProperties and its children
func (_bagc *CT_HtmlPublishProperties) Validate() error {
	return _bagc.ValidateWithPath("\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_bdbf *CT_ExtensionList) ValidateWithPath(path string) error {
	for _feda, _ddgc := range _bdbf.Ext {
		if _dece := _ddgc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _feda)); _dece != nil {
			return _dece
		}
	}
	return nil
}
func (_ddgff ST_TLTimeNodePresetClassType) Validate() error { return _ddgff.ValidateWithPath("") }
func (_bcbcb *CT_TLAnimateEffectBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bcbcb.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _deag := range start.Attr {
		if _deag.Name.Local == "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e" {
			_bcbcb.TransitionAttr.UnmarshalXMLAttr(_deag)
			continue
		}
		if _deag.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_gbgbf, _cecc := _deag.Value, error(nil)
			if _cecc != nil {
				return _cecc
			}
			_bcbcb.FilterAttr = &_gbgbf
			continue
		}
		if _deag.Name.Local == "\u0070\u0072\u004cs\u0074" {
			_egag, _cacdbd := _deag.Value, error(nil)
			if _cacdbd != nil {
				return _cacdbd
			}
			_bcbcb.PrLstAttr = &_egag
			continue
		}
	}
_fbfbeb:
	for {
		_cacag, _fdecc := d.Token()
		if _fdecc != nil {
			return _fdecc
		}
		switch _dfgeg := _cacag.(type) {
		case _e.StartElement:
			switch _dfgeg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _acag := d.DecodeElement(_bcbcb.CBhvr, &_dfgeg); _acag != nil {
					return _acag
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}:
				_bcbcb.Progress = NewCT_TLAnimVariant()
				if _cgeab := d.DecodeElement(_bcbcb.Progress, &_dfgeg); _cgeab != nil {
					return _cgeab
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _dfgeg.Name)
				if _fdbb := d.Skip(); _fdbb != nil {
					return _fdbb
				}
			}
		case _e.EndElement:
			break _fbfbeb
		case _e.CharData:
		}
	}
	return nil
}
func (_abefc ST_TLBehaviorAdditiveType) ValidateWithPath(path string) error {
	switch _abefc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abefc))
	}
	return nil
}

const (
	ST_TLBehaviorTransformTypeUnset ST_TLBehaviorTransformType = 0
	ST_TLBehaviorTransformTypePt    ST_TLBehaviorTransformType = 1
	ST_TLBehaviorTransformTypeImg   ST_TLBehaviorTransformType = 2
)

func NewCT_GuideList() *CT_GuideList { _cfda := &CT_GuideList{}; return _cfda }
func NewCT_TLPoint() *CT_TLPoint     { _cfbae := &CT_TLPoint{}; return _cfbae }

type CT_TLSetBehavior struct {

	// Common Behavior
	CBhvr *CT_TLCommonBehaviorData

	// To
	To *CT_TLAnimVariant
}

// Validate validates the CT_Extension and its children
func (_gce *CT_Extension) Validate() error {
	return _gce.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_Empty and its children
func (_cgge *CT_Empty) Validate() error {
	return _cgge.ValidateWithPath("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079")
}
func (_ecgf *CT_OptionalBlackTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _egebf := range start.Attr {
		if _egebf.Name.Local == "\u0074h\u0072\u0075\u0042\u006c\u006b" {
			_eagg, _begd := _a.ParseBool(_egebf.Value)
			if _begd != nil {
				return _begd
			}
			_ecgf.ThruBlkAttr = &_eagg
			continue
		}
	}
	for {
		_fedf, _bdgb := d.Token()
		if _bdgb != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006c\u0042\u006c\u0061\u0063\u006bT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _bdgb)
		}
		if _cfgc, _cbgeg := _fedf.(_e.EndElement); _cbgeg && _cfgc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gagee *CT_TLCommonTimeNodeData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ffbfe := range start.Attr {
		if _ffbfe.Name.Local == "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072" {
			_babf, _ddbeb := _ffbfe.Value, error(nil)
			if _ddbeb != nil {
				return _ddbeb
			}
			_gagee.TmFilterAttr = &_babf
			continue
		}
		if _ffbfe.Name.Local == "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r" {
			_abbe, _aceec := _ffbfe.Value, error(nil)
			if _aceec != nil {
				return _aceec
			}
			_gagee.EvtFilterAttr = &_abbe
			continue
		}
		if _ffbfe.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044" {
			_dbgcd, _gafeg := _a.ParseInt(_ffbfe.Value, 10, 32)
			if _gafeg != nil {
				return _gafeg
			}
			_gaabd := int32(_dbgcd)
			_gagee.PresetIDAttr = &_gaabd
			continue
		}
		if _ffbfe.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_gadea, _bfaeb := _a.ParseBool(_ffbfe.Value)
			if _bfaeb != nil {
				return _bfaeb
			}
			_gagee.DisplayAttr = &_gadea
			continue
		}
		if _ffbfe.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065" {
			_bfbdc, _gegcc := _a.ParseInt(_ffbfe.Value, 10, 32)
			if _gegcc != nil {
				return _gegcc
			}
			_bceef := int32(_bfbdc)
			_gagee.PresetSubtypeAttr = &_bceef
			continue
		}
		if _ffbfe.Name.Local == "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l" {
			_gagee.MasterRelAttr.UnmarshalXMLAttr(_ffbfe)
			continue
		}
		if _ffbfe.Name.Local == "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074" {
			_cegad, _bfbf := ParseUnionST_TLTime(_ffbfe.Value)
			if _bfbf != nil {
				return _bfbf
			}
			_gagee.RepeatCountAttr = &_cegad
			continue
		}
		if _ffbfe.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_dbga, _fdecf := _a.ParseInt(_ffbfe.Value, 10, 32)
			if _fdecf != nil {
				return _fdecf
			}
			_fgbag := int32(_dbga)
			_gagee.BldLvlAttr = &_fgbag
			continue
		}
		if _ffbfe.Name.Local == "\u0073\u0070\u0064" {
			_fdbcda, _bbacf := ParseUnionST_Percentage(_ffbfe.Value)
			if _bbacf != nil {
				return _bbacf
			}
			_gagee.SpdAttr = &_fdbcda
			continue
		}
		if _ffbfe.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_gfgcaa, _eeaa := _a.ParseUint(_ffbfe.Value, 10, 32)
			if _eeaa != nil {
				return _eeaa
			}
			_gfaaa := uint32(_gfgcaa)
			_gagee.GrpIdAttr = &_gfaaa
			continue
		}
		if _ffbfe.Name.Local == "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074" {
			_ddege, _defe := _a.ParseBool(_ffbfe.Value)
			if _defe != nil {
				return _defe
			}
			_gagee.AfterEffectAttr = &_ddege
			continue
		}
		if _ffbfe.Name.Local == "\u0069\u0064" {
			_ggba, _abgc := _a.ParseUint(_ffbfe.Value, 10, 32)
			if _abgc != nil {
				return _abgc
			}
			_cddge := uint32(_ggba)
			_gagee.IdAttr = &_cddge
			continue
		}
		if _ffbfe.Name.Local == "\u006e\u006f\u0064\u0065\u0050\u0068" {
			_fgbe, _fcggd := _a.ParseBool(_ffbfe.Value)
			if _fcggd != nil {
				return _fcggd
			}
			_gagee.NodePhAttr = &_fgbe
			continue
		}
		if _ffbfe.Name.Local == "\u0061\u0063\u0063e\u006c" {
			_bddde, _bbcef := ParseUnionST_PositiveFixedPercentage(_ffbfe.Value)
			if _bbcef != nil {
				return _bbcef
			}
			_gagee.AccelAttr = &_bddde
			continue
		}
		if _ffbfe.Name.Local == "\u0064\u0065\u0063e\u006c" {
			_dfada, _fgfbe := ParseUnionST_PositiveFixedPercentage(_ffbfe.Value)
			if _fgfbe != nil {
				return _fgfbe
			}
			_gagee.DecelAttr = &_dfada
			continue
		}
		if _ffbfe.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_gagee.RestartAttr.UnmarshalXMLAttr(_ffbfe)
			continue
		}
		if _ffbfe.Name.Local == "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065" {
			_gagee.NodeTypeAttr.UnmarshalXMLAttr(_ffbfe)
			continue
		}
		if _ffbfe.Name.Local == "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073" {
			_gagee.PresetClassAttr.UnmarshalXMLAttr(_ffbfe)
			continue
		}
		if _ffbfe.Name.Local == "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r" {
			_dgdfe, _badfc := ParseUnionST_TLTime(_ffbfe.Value)
			if _badfc != nil {
				return _badfc
			}
			_gagee.RepeatDurAttr = &_dgdfe
			continue
		}
		if _ffbfe.Name.Local == "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072" {
			_gagee.SyncBehaviorAttr.UnmarshalXMLAttr(_ffbfe)
			continue
		}
		if _ffbfe.Name.Local == "\u0061u\u0074\u006f\u0052\u0065\u0076" {
			_eeedc, _dcfga := _a.ParseBool(_ffbfe.Value)
			if _dcfga != nil {
				return _dcfga
			}
			_gagee.AutoRevAttr = &_eeedc
			continue
		}
		if _ffbfe.Name.Local == "\u0066\u0069\u006c\u006c" {
			_gagee.FillAttr.UnmarshalXMLAttr(_ffbfe)
			continue
		}
		if _ffbfe.Name.Local == "\u0064\u0075\u0072" {
			_bbba, _dbefb := ParseUnionST_TLTime(_ffbfe.Value)
			if _dbefb != nil {
				return _dbefb
			}
			_gagee.DurAttr = &_bbba
			continue
		}
	}
_ddfaa:
	for {
		_fcbed, _eedce := d.Token()
		if _eedce != nil {
			return _eedce
		}
		switch _dbfa := _fcbed.(type) {
		case _e.StartElement:
			switch _dbfa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}:
				_gagee.StCondLst = NewCT_TLTimeConditionList()
				if _abfb := d.DecodeElement(_gagee.StCondLst, &_dbfa); _abfb != nil {
					return _abfb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_gagee.EndCondLst = NewCT_TLTimeConditionList()
				if _dbee := d.DecodeElement(_gagee.EndCondLst, &_dbfa); _dbee != nil {
					return _dbee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}:
				_gagee.EndSync = NewCT_TLTimeCondition()
				if _eddf := d.DecodeElement(_gagee.EndSync, &_dbfa); _eddf != nil {
					return _eddf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}:
				_gagee.Iterate = NewCT_TLIterateData()
				if _ggbg := d.DecodeElement(_gagee.Iterate, &_dbfa); _ggbg != nil {
					return _ggbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}:
				_gagee.ChildTnLst = NewCT_TimeNodeList()
				if _fafgd := d.DecodeElement(_gagee.ChildTnLst, &_dbfa); _fafgd != nil {
					return _fafgd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}:
				_gagee.SubTnLst = NewCT_TimeNodeList()
				if _bbdad := d.DecodeElement(_gagee.SubTnLst, &_dbfa); _bbdad != nil {
					return _bbdad
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0054i\u006d\u0065\u004e\u006f\u0064\u0065D\u0061\u0074\u0061 \u0025\u0076", _dbfa.Name)
				if _fdfg := d.Skip(); _fdfg != nil {
					return _fdfg
				}
			}
		case _e.EndElement:
			break _ddfaa
		case _e.CharData:
		}
	}
	return nil
}
func (_babgc ST_TLTimeNodeType) ValidateWithPath(path string) error {
	switch _babgc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_babgc))
	}
	return nil
}
func NewCT_TLTextTargetElement() *CT_TLTextTargetElement {
	_eabf := &CT_TLTextTargetElement{}
	return _eabf
}

type NotesMaster struct{ CT_NotesMaster }

func (_cgbbc ST_TLBehaviorAccumulateType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cgbbc.String(), start)
}
func (_dedaa *ST_TLTimeAnimateValueTime) ValidateWithPath(path string) error {
	_gcda := []string{}
	if _dedaa.ST_PositiveFixedPercentage != nil {
		if _degfe := _dedaa.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _degfe != nil {
			return _degfe
		}
		_gcda = append(_gcda, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if _dedaa.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_gcda = append(_gcda, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_gcda) > 1 {
		return _d.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gcda)
	}
	return nil
}

// ValidateWithPath validates the CT_SlideTiming and its children, prefixing error messages with path
func (_ddgb *CT_SlideTiming) ValidateWithPath(path string) error {
	if _ddgb.TnLst != nil {
		if _ebgbd := _ddgb.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _ebgbd != nil {
			return _ebgbd
		}
	}
	if _ddgb.BldLst != nil {
		if _dfaae := _ddgb.BldLst.ValidateWithPath(path + "\u002fB\u006c\u0064\u004c\u0073\u0074"); _dfaae != nil {
			return _dfaae
		}
	}
	if _ddgb.ExtLst != nil {
		if _cecd := _ddgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cecd != nil {
			return _cecd
		}
	}
	return nil
}
func (_cbbf *CT_CommentAuthor) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _cbbf.IdAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", _cbbf.NameAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073"}, Value: _d.Sprintf("\u0025\u0076", _cbbf.InitialsAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006ca\u0073\u0074\u0049\u0064\u0078"}, Value: _d.Sprintf("\u0025\u0076", _cbbf.LastIdxAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u006c\u0072\u0049\u0064\u0078"}, Value: _d.Sprintf("\u0025\u0076", _cbbf.ClrIdxAttr)})
	e.EncodeToken(start)
	if _cbbf.ExtLst != nil {
		_cge := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbbf.ExtLst, _cge)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cgcd *CT_TLAnimVariantStringVal) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _efag := range start.Attr {
		if _efag.Name.Local == "\u0076\u0061\u006c" {
			_acfg, _ffcc := _efag.Value, error(nil)
			if _ffcc != nil {
				return _ffcc
			}
			_cgcd.ValAttr = _acfg
			continue
		}
	}
	for {
		_eedaa, _adda := d.Token()
		if _adda != nil {
			return _d.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0053\u0074\u0072\u0069\u006e\u0067\u0056\u0061l\u003a\u0020\u0025\u0073", _adda)
		}
		if _adgaa, _fbeg := _eedaa.(_e.EndElement); _fbeg && _adgaa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ShowType and its children, prefixing error messages with path
func (_fcecf *EG_ShowType) ValidateWithPath(path string) error {
	if _fcecf.Present != nil {
		if _gggbc := _fcecf.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _gggbc != nil {
			return _gggbc
		}
	}
	if _fcecf.Browse != nil {
		if _daga := _fcecf.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _daga != nil {
			return _daga
		}
	}
	if _fcecf.Kiosk != nil {
		if _eafgd := _fcecf.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _eafgd != nil {
			return _eafgd
		}
	}
	return nil
}

// Validate validates the CT_CommentAuthor and its children
func (_egae *CT_CommentAuthor) Validate() error {
	return _egae.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072")
}

type CT_TagList struct {

	// Programmable Extensibility Tag
	Tag []*CT_StringTag
}

func (_dbegb *CT_WebProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gaeb := range start.Attr {
		if _gaeb.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_gaefd, _beefg := _a.ParseBool(_gaeb.Value)
			if _beefg != nil {
				return _beefg
			}
			_dbegb.ShowAnimationAttr = &_gaefd
			continue
		}
		if _gaeb.Name.Local == "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073" {
			_gdgbd, _cgdce := _a.ParseBool(_gaeb.Value)
			if _cgdce != nil {
				return _cgdce
			}
			_dbegb.ResizeGraphicsAttr = &_gdgbd
			continue
		}
		if _gaeb.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_ceage, _eabae := _a.ParseBool(_gaeb.Value)
			if _eabae != nil {
				return _eabae
			}
			_dbegb.AllowPngAttr = &_ceage
			continue
		}
		if _gaeb.Name.Local == "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl" {
			_bfbb, _gadcb := _a.ParseBool(_gaeb.Value)
			if _gadcb != nil {
				return _gadcb
			}
			_dbegb.RelyOnVmlAttr = &_bfbb
			continue
		}
		if _gaeb.Name.Local == "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073" {
			_cdecc, _ddddc := _a.ParseBool(_gaeb.Value)
			if _ddddc != nil {
				return _ddddc
			}
			_dbegb.OrganizeInFoldersAttr = &_cdecc
			continue
		}
		if _gaeb.Name.Local == "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073" {
			_gdcafe, _ggdf := _a.ParseBool(_gaeb.Value)
			if _ggdf != nil {
				return _ggdf
			}
			_dbegb.UseLongFilenamesAttr = &_gdcafe
			continue
		}
		if _gaeb.Name.Local == "\u0069\u006d\u0067S\u007a" {
			_dbegb.ImgSzAttr.UnmarshalXMLAttr(_gaeb)
			continue
		}
		if _gaeb.Name.Local == "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067" {
			_feec, _eddbd := _gaeb.Value, error(nil)
			if _eddbd != nil {
				return _eddbd
			}
			_dbegb.EncodingAttr = &_feec
			continue
		}
		if _gaeb.Name.Local == "\u0063\u006c\u0072" {
			_dbegb.ClrAttr.UnmarshalXMLAttr(_gaeb)
			continue
		}
	}
_cefff:
	for {
		_gaebb, _egfef := d.Token()
		if _egfef != nil {
			return _egfef
		}
		switch _bbgae := _gaebb.(type) {
		case _e.StartElement:
			switch _bbgae.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbegb.ExtLst = NewCT_ExtensionList()
				if _gfaaab := d.DecodeElement(_dbegb.ExtLst, &_bbgae); _gfaaab != nil {
					return _gfaaab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025v", _bbgae.Name)
				if _aggc := d.Skip(); _aggc != nil {
					return _aggc
				}
			}
		case _e.EndElement:
			break _cefff
		case _e.CharData:
		}
	}
	return nil
}
func (_ddage ST_TLAnimateBehaviorValueType) String() string {
	switch _ddage {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072"
	case 2:
		return "\u006e\u0075\u006d"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_TLOleChartTargetElement and its children, prefixing error messages with path
func (_beda *CT_TLOleChartTargetElement) ValidateWithPath(path string) error {
	if _beda.TypeAttr == ST_TLChartSubelementTypeUnset {
		return _d.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _abbdc := _beda.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _abbdc != nil {
		return _abbdc
	}
	return nil
}

const (
	ST_TLAnimateColorSpaceUnset ST_TLAnimateColorSpace = 0
	ST_TLAnimateColorSpaceRgb   ST_TLAnimateColorSpace = 1
	ST_TLAnimateColorSpaceHsl   ST_TLAnimateColorSpace = 2
)

func (_cfcf *CT_CustomShowList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cfcf.CustShow != nil {
		_bbda := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		for _, _debf := range _cfcf.CustShow {
			e.EncodeElement(_debf, _bbda)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NotesMasterIdList and its children
func (_ddaa *CT_NotesMasterIdList) Validate() error {
	return _ddaa.ValidateWithPath("C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}
func ParseUnionST_Percentage(s string) (_da.ST_Percentage, error) {
	return _da.ParseUnionST_Percentage(s)
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func NewCT_CustomerDataList() *CT_CustomerDataList { _fgeg := &CT_CustomerDataList{}; return _fgeg }

// Validate validates the CT_WebProperties and its children
func (_ebeag *CT_WebProperties) Validate() error {
	return _ebeag.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_bfegd ST_TransitionSideDirectionType) Validate() error { return _bfegd.ValidateWithPath("") }

// Validate validates the CT_TLCommonBehaviorData and its children
func (_gagg *CT_TLCommonBehaviorData) Validate() error {
	return _gagg.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061")
}

type CT_NormalViewPortion struct {

	// Normal View Dimension Size
	SzAttr _da.ST_PositiveFixedPercentage

	// Auto Adjust Normal View
	AutoAdjustAttr *bool
}

func NewEG_Background() *EG_Background { _gdfgb := &EG_Background{}; return _gdfgb }
func (_dgfcf *CT_TLIterateIntervalTime) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _dgfcf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HandoutMasterIdListEntry and its children
func (_egbf *CT_HandoutMasterIdListEntry) Validate() error {
	return _egbf.ValidateWithPath("C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079")
}
func (_gbaba ST_TLAnimateEffectTransition) ValidateWithPath(path string) error {
	switch _gbaba {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbaba))
	}
	return nil
}
func NewSldSyncPr() *SldSyncPr {
	_fgdag := &SldSyncPr{}
	_fgdag.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	return _fgdag
}
func (_bgdca *CT_SlideTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bbff := range start.Attr {
		if _bbff.Name.Local == "\u0073\u0070\u0064" {
			_bgdca.SpdAttr.UnmarshalXMLAttr(_bbff)
			continue
		}
		if _bbff.Name.Local == "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b" {
			_acge, _dgfd := _a.ParseBool(_bbff.Value)
			if _dgfd != nil {
				return _dgfd
			}
			_bgdca.AdvClickAttr = &_acge
			continue
		}
		if _bbff.Name.Local == "\u0061\u0064\u0076T\u006d" {
			_ebaba, _cdcdb := _a.ParseUint(_bbff.Value, 10, 32)
			if _cdcdb != nil {
				return _cdcdb
			}
			_caafb := uint32(_ebaba)
			_bgdca.AdvTmAttr = &_caafb
			continue
		}
	}
_adeaa:
	for {
		_edagg, _ggffg := d.Token()
		if _ggffg != nil {
			return _ggffg
		}
		switch _afggd := _edagg.(type) {
		case _e.StartElement:
			switch _afggd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _ggfg := d.DecodeElement(&_bgdca.Choice.Blinds, &_afggd); _ggfg != nil {
					return _ggfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _acfbb := d.DecodeElement(&_bgdca.Choice.Checker, &_afggd); _acfbb != nil {
					return _acfbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _bcbab := d.DecodeElement(&_bgdca.Choice.Circle, &_afggd); _bcbab != nil {
					return _bcbab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _gaec := d.DecodeElement(&_bgdca.Choice.Dissolve, &_afggd); _gaec != nil {
					return _gaec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _cgeaf := d.DecodeElement(&_bgdca.Choice.Comb, &_afggd); _cgeaf != nil {
					return _cgeaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _abbfee := d.DecodeElement(&_bgdca.Choice.Cover, &_afggd); _abbfee != nil {
					return _abbfee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _dgde := d.DecodeElement(&_bgdca.Choice.Cut, &_afggd); _dgde != nil {
					return _dgde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _aedcfb := d.DecodeElement(&_bgdca.Choice.Diamond, &_afggd); _aedcfb != nil {
					return _aedcfb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _cfgea := d.DecodeElement(&_bgdca.Choice.Fade, &_afggd); _cfgea != nil {
					return _cfgea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _cffc := d.DecodeElement(&_bgdca.Choice.Newsflash, &_afggd); _cffc != nil {
					return _cffc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _aacbcb := d.DecodeElement(&_bgdca.Choice.Plus, &_afggd); _aacbcb != nil {
					return _aacbcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _daafc := d.DecodeElement(&_bgdca.Choice.Pull, &_afggd); _daafc != nil {
					return _daafc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _dbecbb := d.DecodeElement(&_bgdca.Choice.Push, &_afggd); _dbecbb != nil {
					return _dbecbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _baffcc := d.DecodeElement(&_bgdca.Choice.Random, &_afggd); _baffcc != nil {
					return _baffcc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _aege := d.DecodeElement(&_bgdca.Choice.RandomBar, &_afggd); _aege != nil {
					return _aege
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _aabbf := d.DecodeElement(&_bgdca.Choice.Split, &_afggd); _aabbf != nil {
					return _aabbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _dbcee := d.DecodeElement(&_bgdca.Choice.Strips, &_afggd); _dbcee != nil {
					return _dbcee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _gbdgc := d.DecodeElement(&_bgdca.Choice.Wedge, &_afggd); _gbdgc != nil {
					return _gbdgc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _agcad := d.DecodeElement(&_bgdca.Choice.Wheel, &_afggd); _agcad != nil {
					return _agcad
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _fegea := d.DecodeElement(&_bgdca.Choice.Wipe, &_afggd); _fegea != nil {
					return _fegea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_bgdca.Choice = NewCT_SlideTransitionChoice()
				if _gbbfee := d.DecodeElement(&_bgdca.Choice.Zoom, &_afggd); _gbbfee != nil {
					return _gbbfee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}:
				_bgdca.SndAc = NewCT_TransitionSoundAction()
				if _dddcc := d.DecodeElement(_bgdca.SndAc, &_afggd); _dddcc != nil {
					return _dddcc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgdca.ExtLst = NewCT_ExtensionListModify()
				if _gfga := d.DecodeElement(_bgdca.ExtLst, &_afggd); _gfga != nil {
					return _gfga
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _afggd.Name)
				if _addb := d.Skip(); _addb != nil {
					return _addb
				}
			}
		case _e.EndElement:
			break _adeaa
		case _e.CharData:
		}
	}
	return nil
}
func (_gace *ST_TLNextActionType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gace = 0
	case "\u006e\u006f\u006e\u0065":
		*_gace = 1
	case "\u0073\u0065\u0065\u006b":
		*_gace = 2
	}
	return nil
}
func (_dcbba *CT_SlideLayoutIdList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dcbba.SldLayoutId != nil {
		_badbf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}}
		for _, _bfgbc := range _dcbba.SldLayoutId {
			e.EncodeElement(_bfgbc, _badbf)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ModifyVerifier and its children
func (_fdef *CT_ModifyVerifier) Validate() error {
	return _fdef.ValidateWithPath("\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072")
}
func (_ebefa *CT_TLPoint) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fbddfff := range start.Attr {
		if _fbddfff.Name.Local == "\u0078" {
			_gaeee, _cgdcg := ParseUnionST_Percentage(_fbddfff.Value)
			if _cgdcg != nil {
				return _cgdcg
			}
			_ebefa.XAttr = _gaeee
			continue
		}
		if _fbddfff.Name.Local == "\u0079" {
			_ddcea, _dgdgb := ParseUnionST_Percentage(_fbddfff.Value)
			if _dgdgb != nil {
				return _dgdgb
			}
			_ebefa.YAttr = _ddcea
			continue
		}
	}
	for {
		_dgafa, _gaaca := d.Token()
		if _gaaca != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074\u003a\u0020%\u0073", _gaaca)
		}
		if _bbeace, _eagec := _dgafa.(_e.EndElement); _eagec && _bbeace.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TLAnimateScaleBehavior() *CT_TLAnimateScaleBehavior {
	_daggb := &CT_TLAnimateScaleBehavior{}
	_daggb.CBhvr = NewCT_TLCommonBehaviorData()
	return _daggb
}

// Validate validates the CT_SlideMasterIdListEntry and its children
func (_gfba *CT_SlideMasterIdListEntry) Validate() error {
	return _gfba.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func (_acae *CT_SlideSyncProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cgfbd := range start.Attr {
		if _cgfbd.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_abaf, _gbgfd := _cgfbd.Value, error(nil)
			if _gbgfd != nil {
				return _gbgfd
			}
			_acae.ServerSldIdAttr = _abaf
			continue
		}
		if _cgfbd.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_gacf, _aafcb := ParseStdlibTime(_cgfbd.Value)
			if _aafcb != nil {
				return _aafcb
			}
			_acae.ServerSldModifiedTimeAttr = _gacf
			continue
		}
		if _cgfbd.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_eade, _baecb := ParseStdlibTime(_cgfbd.Value)
			if _baecb != nil {
				return _baecb
			}
			_acae.ClientInsertedTimeAttr = _eade
			continue
		}
	}
_ffae:
	for {
		_gbdcgf, _fefd := d.Token()
		if _fefd != nil {
			return _fefd
		}
		switch _afaed := _gbdcgf.(type) {
		case _e.StartElement:
			switch _afaed.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acae.ExtLst = NewCT_ExtensionList()
				if _dggd := d.DecodeElement(_acae.ExtLst, &_afaed); _dggd != nil {
					return _dggd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _afaed.Name)
				if _ccdgc := d.Skip(); _ccdgc != nil {
					return _ccdgc
				}
			}
		case _e.EndElement:
			break _ffae
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Background and its children
func (_bd *CT_Background) Validate() error {
	return _bd.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}
func (_fagbc ST_TLCommandType) Validate() error { return _fagbc.ValidateWithPath("") }

// ValidateWithPath validates the CT_SlideTransitionChoice and its children, prefixing error messages with path
func (_ffabc *CT_SlideTransitionChoice) ValidateWithPath(path string) error {
	if _ffabc.Blinds != nil {
		if _gded := _ffabc.Blinds.ValidateWithPath(path + "\u002fB\u006c\u0069\u006e\u0064\u0073"); _gded != nil {
			return _gded
		}
	}
	if _ffabc.Checker != nil {
		if _gdaf := _ffabc.Checker.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0072"); _gdaf != nil {
			return _gdaf
		}
	}
	if _ffabc.Circle != nil {
		if _gbca := _ffabc.Circle.ValidateWithPath(path + "\u002fC\u0069\u0072\u0063\u006c\u0065"); _gbca != nil {
			return _gbca
		}
	}
	if _ffabc.Dissolve != nil {
		if _ebba := _ffabc.Dissolve.ValidateWithPath(path + "\u002fD\u0069\u0073\u0073\u006f\u006c\u0076e"); _ebba != nil {
			return _ebba
		}
	}
	if _ffabc.Comb != nil {
		if _egdga := _ffabc.Comb.ValidateWithPath(path + "\u002f\u0043\u006fm\u0062"); _egdga != nil {
			return _egdga
		}
	}
	if _ffabc.Cover != nil {
		if _cbebg := _ffabc.Cover.ValidateWithPath(path + "\u002f\u0043\u006f\u0076\u0065\u0072"); _cbebg != nil {
			return _cbebg
		}
	}
	if _ffabc.Cut != nil {
		if _cddg := _ffabc.Cut.ValidateWithPath(path + "\u002f\u0043\u0075\u0074"); _cddg != nil {
			return _cddg
		}
	}
	if _ffabc.Diamond != nil {
		if _adggg := _ffabc.Diamond.ValidateWithPath(path + "\u002f\u0044\u0069\u0061\u006d\u006f\u006e\u0064"); _adggg != nil {
			return _adggg
		}
	}
	if _ffabc.Fade != nil {
		if _ddde := _ffabc.Fade.ValidateWithPath(path + "\u002f\u0046\u0061d\u0065"); _ddde != nil {
			return _ddde
		}
	}
	if _ffabc.Newsflash != nil {
		if _fdbcd := _ffabc.Newsflash.ValidateWithPath(path + "\u002f\u004e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"); _fdbcd != nil {
			return _fdbcd
		}
	}
	if _ffabc.Plus != nil {
		if _fgaa := _ffabc.Plus.ValidateWithPath(path + "\u002f\u0050\u006cu\u0073"); _fgaa != nil {
			return _fgaa
		}
	}
	if _ffabc.Pull != nil {
		if _ggdaa := _ffabc.Pull.ValidateWithPath(path + "\u002f\u0050\u0075l\u006c"); _ggdaa != nil {
			return _ggdaa
		}
	}
	if _ffabc.Push != nil {
		if _gbge := _ffabc.Push.ValidateWithPath(path + "\u002f\u0050\u0075s\u0068"); _gbge != nil {
			return _gbge
		}
	}
	if _ffabc.Random != nil {
		if _cfga := _ffabc.Random.ValidateWithPath(path + "\u002fR\u0061\u006e\u0064\u006f\u006d"); _cfga != nil {
			return _cfga
		}
	}
	if _ffabc.RandomBar != nil {
		if _bceac := _ffabc.RandomBar.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"); _bceac != nil {
			return _bceac
		}
	}
	if _ffabc.Split != nil {
		if _bdgab := _ffabc.Split.ValidateWithPath(path + "\u002f\u0053\u0070\u006c\u0069\u0074"); _bdgab != nil {
			return _bdgab
		}
	}
	if _ffabc.Strips != nil {
		if _dcggd := _ffabc.Strips.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u0070\u0073"); _dcggd != nil {
			return _dcggd
		}
	}
	if _ffabc.Wedge != nil {
		if _ebdf := _ffabc.Wedge.ValidateWithPath(path + "\u002f\u0057\u0065\u0064\u0067\u0065"); _ebdf != nil {
			return _ebdf
		}
	}
	if _ffabc.Wheel != nil {
		if _ebfdg := _ffabc.Wheel.ValidateWithPath(path + "\u002f\u0057\u0068\u0065\u0065\u006c"); _ebfdg != nil {
			return _ebfdg
		}
	}
	if _ffabc.Wipe != nil {
		if _abgf := _ffabc.Wipe.ValidateWithPath(path + "\u002f\u0057\u0069p\u0065"); _abgf != nil {
			return _abgf
		}
	}
	if _ffabc.Zoom != nil {
		if _aaea := _ffabc.Zoom.ValidateWithPath(path + "\u002f\u005a\u006fo\u006d"); _aaea != nil {
			return _aaea
		}
	}
	return nil
}
func (_edebf *CT_TLSubShapeId) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _edebf.SpidAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dffd *CT_PresentationProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dffd.HtmlPubPr != nil {
		_age := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0068\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_dffd.HtmlPubPr, _age)
	}
	if _dffd.WebPr != nil {
		_fdfd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_dffd.WebPr, _fdfd)
	}
	if _dffd.PrnPr != nil {
		_gcbe := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0070\u0072\u006e\u0050\u0072"}}
		e.EncodeElement(_dffd.PrnPr, _gcbe)
	}
	if _dffd.ShowPr != nil {
		_fgcba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0068\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_dffd.ShowPr, _fgcba)
	}
	if _dffd.ClrMru != nil {
		_cabde := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0072\u0075"}}
		e.EncodeElement(_dffd.ClrMru, _cabde)
	}
	if _dffd.ExtLst != nil {
		_fddb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dffd.ExtLst, _fddb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_deaa ST_WebColorType) ValidateWithPath(path string) error {
	switch _deaa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deaa))
	}
	return nil
}
func NewCT_SplitTransition() *CT_SplitTransition { _aagc := &CT_SplitTransition{}; return _aagc }

// Validate validates the EG_SlideListChoice and its children
func (_eabbf *EG_SlideListChoice) Validate() error {
	return _eabbf.ValidateWithPath("\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}
func ParseUnionST_TLTime(s string) (ST_TLTime, error) { return ST_TLTime{}, nil }

// ValidateWithPath validates the CT_TLAnimVariantIntegerVal and its children, prefixing error messages with path
func (_beced *CT_TLAnimVariantIntegerVal) ValidateWithPath(path string) error { return nil }
func (_df *AG_Ole) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _df.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_df.SpidAttr)})
	}
	if _df.NameAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_df.NameAttr)})
	}
	if _df.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_df.ShowAsIconAttr))})
	}
	if _df.IdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_df.IdAttr)})
	}
	if _df.ImgWAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _d.Sprintf("\u0025\u0076", *_df.ImgWAttr)})
	}
	if _df.ImgHAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _d.Sprintf("\u0025\u0076", *_df.ImgHAttr)})
	}
	return nil
}
func (_ggeg *CT_WheelTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ggeg.SpokesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u006f\u006b\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0076", *_ggeg.SpokesAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_SlideTransitionChoice struct {
	Blinds    *CT_OrientationTransition
	Checker   *CT_OrientationTransition
	Circle    *CT_Empty
	Dissolve  *CT_Empty
	Comb      *CT_OrientationTransition
	Cover     *CT_EightDirectionTransition
	Cut       *CT_OptionalBlackTransition
	Diamond   *CT_Empty
	Fade      *CT_OptionalBlackTransition
	Newsflash *CT_Empty
	Plus      *CT_Empty
	Pull      *CT_EightDirectionTransition
	Push      *CT_SideDirectionTransition
	Random    *CT_Empty
	RandomBar *CT_OrientationTransition
	Split     *CT_SplitTransition
	Strips    *CT_CornerDirectionTransition
	Wedge     *CT_Empty
	Wheel     *CT_WheelTransition
	Wipe      *CT_SideDirectionTransition
	Zoom      *CT_InOutTransition
}

const (
	ST_TransitionInOutDirectionTypeUnset ST_TransitionInOutDirectionType = 0
	ST_TransitionInOutDirectionTypeOut   ST_TransitionInOutDirectionType = 1
	ST_TransitionInOutDirectionTypeIn    ST_TransitionInOutDirectionType = 2
)

func NewCT_TLAnimVariantFloatVal() *CT_TLAnimVariantFloatVal {
	_dfge := &CT_TLAnimVariantFloatVal{}
	return _dfge
}

type CT_Presentation struct {

	// Server Zoom
	ServerZoomAttr *_da.ST_Percentage

	// First Slide Number
	FirstSlideNumAttr *int32

	// Show Header and Footer Placeholders on Titles
	ShowSpecialPlsOnTitleSldAttr *bool

	// Right-To-Left Views
	RtlAttr *bool

	// Remove Personal Information on Save
	RemovePersonalInfoOnSaveAttr *bool

	// Compatibility Mode
	CompatModeAttr *bool

	// Strict First and Last Characters
	StrictFirstAndLastCharsAttr *bool

	// Embed True Type Fonts
	EmbedTrueTypeFontsAttr *bool

	// Save Subset Fonts
	SaveSubsetFontsAttr *bool

	// Automatically Compress Pictures
	AutoCompressPicturesAttr *bool

	// Bookmark ID Seed
	BookmarkIdSeedAttr *uint32

	// Document Conformance Class
	ConformanceAttr _ef.ST_ConformanceClass

	// List of Slide Master IDs
	SldMasterIdLst *CT_SlideMasterIdList

	// List of Notes Master IDs
	NotesMasterIdLst *CT_NotesMasterIdList

	// List of Handout Master IDs
	HandoutMasterIdLst *CT_HandoutMasterIdList

	// List of Slide IDs
	SldIdLst *CT_SlideIdList

	// Presentation Slide Size
	SldSz *CT_SlideSize

	// Notes Slide Size
	NotesSz *_da.CT_PositiveSize2D

	// Smart Tags
	SmartTags *CT_SmartTags

	// Embedded Font List
	EmbeddedFontLst *CT_EmbeddedFontList

	// List of Custom Shows
	CustShowLst *CT_CustomShowList

	// Photo Album Information
	PhotoAlbum *CT_PhotoAlbum

	// List of Customer Data Buckets
	CustDataLst *CT_CustomerDataList

	// Kinsoku Settings
	Kinsoku *CT_Kinsoku

	// Presentation Default Text Style
	DefaultTextStyle *_da.CT_TextListStyle

	// Modification Verifier
	ModifyVerifier *CT_ModifyVerifier

	// Extension List
	ExtLst *CT_ExtensionList
}

func (_bcffa *ST_TLPreviousActionType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bcffa = 0
	case "\u006e\u006f\u006e\u0065":
		*_bcffa = 1
	case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
		*_bcffa = 2
	}
	return nil
}
func (_cdeae ST_PlaceholderType) ValidateWithPath(path string) error {
	switch _cdeae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdeae))
	}
	return nil
}

const (
	ST_TLAnimateBehaviorValueTypeUnset ST_TLAnimateBehaviorValueType = 0
	ST_TLAnimateBehaviorValueTypeStr   ST_TLAnimateBehaviorValueType = 1
	ST_TLAnimateBehaviorValueTypeNum   ST_TLAnimateBehaviorValueType = 2
	ST_TLAnimateBehaviorValueTypeClr   ST_TLAnimateBehaviorValueType = 3
)

type ST_TLNextActionType byte

func (_cfdbg ST_TLAnimateColorDirection) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gbdfe := _e.Attr{}
	_gbdfe.Name = name
	switch _cfdbg {
	case ST_TLAnimateColorDirectionUnset:
		_gbdfe.Value = ""
	case ST_TLAnimateColorDirectionCw:
		_gbdfe.Value = "\u0063\u0077"
	case ST_TLAnimateColorDirectionCcw:
		_gbdfe.Value = "\u0063\u0063\u0077"
	}
	return _gbdfe, nil
}
func (_ddcbfa *CT_ViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dcbc := range start.Attr {
		if _dcbc.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_ddcbfa.LastViewAttr.UnmarshalXMLAttr(_dcbc)
			continue
		}
		if _dcbc.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_ceefd, _dabba := _a.ParseBool(_dcbc.Value)
			if _dabba != nil {
				return _dabba
			}
			_ddcbfa.ShowCommentsAttr = &_ceefd
			continue
		}
	}
_fdfce:
	for {
		_eaacbf, _acef := d.Token()
		if _acef != nil {
			return _acef
		}
		switch _cagbb := _eaacbf.(type) {
		case _e.StartElement:
			switch _cagbb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_ddcbfa.NormalViewPr = NewCT_NormalViewProperties()
				if _bddea := d.DecodeElement(_ddcbfa.NormalViewPr, &_cagbb); _bddea != nil {
					return _bddea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_ddcbfa.SlideViewPr = NewCT_SlideViewProperties()
				if _fbdae := d.DecodeElement(_ddcbfa.SlideViewPr, &_cagbb); _fbdae != nil {
					return _fbdae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_ddcbfa.OutlineViewPr = NewCT_OutlineViewProperties()
				if _gcge := d.DecodeElement(_ddcbfa.OutlineViewPr, &_cagbb); _gcge != nil {
					return _gcge
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_ddcbfa.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _ddbf := d.DecodeElement(_ddcbfa.NotesTextViewPr, &_cagbb); _ddbf != nil {
					return _ddbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_ddcbfa.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _cegfg := d.DecodeElement(_ddcbfa.SorterViewPr, &_cagbb); _cegfg != nil {
					return _cegfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_ddcbfa.NotesViewPr = NewCT_NotesViewProperties()
				if _egcdc := d.DecodeElement(_ddcbfa.NotesViewPr, &_cagbb); _egcdc != nil {
					return _egcdc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_ddcbfa.GridSpacing = _da.NewCT_PositiveSize2D()
				if _dgdda := d.DecodeElement(_ddcbfa.GridSpacing, &_cagbb); _dgdda != nil {
					return _dgdda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddcbfa.ExtLst = NewCT_ExtensionList()
				if _cbebff := d.DecodeElement(_ddcbfa.ExtLst, &_cagbb); _cbebff != nil {
					return _cbebff
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cagbb.Name)
				if _adacc := d.Skip(); _adacc != nil {
					return _adacc
				}
			}
		case _e.EndElement:
			break _fdfce
		case _e.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantBooleanVal struct {

	// Value
	ValAttr bool
}

// Validate validates the CT_NotesMasterIdListEntry and its children
func (_fafed *CT_NotesMasterIdListEntry) Validate() error {
	return _fafed.ValidateWithPath("\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func (_gbbg *ST_TLTimeNodeRestartType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gbbg = 0
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_gbbg = 1
	case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
		*_gbbg = 2
	case "\u006e\u0065\u0076e\u0072":
		*_gbbg = 3
	}
	return nil
}
func (_dbdbeae ST_PlaceholderSize) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dfbce := _e.Attr{}
	_dfbce.Name = name
	switch _dbdbeae {
	case ST_PlaceholderSizeUnset:
		_dfbce.Value = ""
	case ST_PlaceholderSizeFull:
		_dfbce.Value = "\u0066\u0075\u006c\u006c"
	case ST_PlaceholderSizeHalf:
		_dfbce.Value = "\u0068\u0061\u006c\u0066"
	case ST_PlaceholderSizeQuarter:
		_dfbce.Value = "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return _dfbce, nil
}
func (_cbcef ST_TLTriggerRuntimeNode) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dgbbc := _e.Attr{}
	_dgbbc.Name = name
	switch _cbcef {
	case ST_TLTriggerRuntimeNodeUnset:
		_dgbbc.Value = ""
	case ST_TLTriggerRuntimeNodeFirst:
		_dgbbc.Value = "\u0066\u0069\u0072s\u0074"
	case ST_TLTriggerRuntimeNodeLast:
		_dgbbc.Value = "\u006c\u0061\u0073\u0074"
	case ST_TLTriggerRuntimeNodeAll:
		_dgbbc.Value = "\u0061\u006c\u006c"
	}
	return _dgbbc, nil
}
func (_ccefd *ST_PlaceholderSize) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cgaa, _cdecba := d.Token()
	if _cdecba != nil {
		return _cdecba
	}
	if _cafaf, _gdbeb := _cgaa.(_e.EndElement); _gdbeb && _cafaf.Name == start.Name {
		*_ccefd = 1
		return nil
	}
	if _decba, _efbba := _cgaa.(_e.CharData); !_efbba {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgaa)
	} else {
		switch string(_decba) {
		case "":
			*_ccefd = 0
		case "\u0066\u0075\u006c\u006c":
			*_ccefd = 1
		case "\u0068\u0061\u006c\u0066":
			*_ccefd = 2
		case "\u0071u\u0061\u0072\u0074\u0065\u0072":
			*_ccefd = 3
		}
	}
	_cgaa, _cdecba = d.Token()
	if _cdecba != nil {
		return _cdecba
	}
	if _ccgfb, _eafdb := _cgaa.(_e.EndElement); _eafdb && _ccgfb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgaa)
}
func NewCT_Rel() *CT_Rel { _eagc := &CT_Rel{}; return _eagc }
func (_gafad *ST_TLAnimateColorDirection) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gafad = 0
	case "\u0063\u0077":
		*_gafad = 1
	case "\u0063\u0063\u0077":
		*_gafad = 2
	}
	return nil
}
func (_dgfea *CT_TLPoint) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078"}, Value: _d.Sprintf("\u0025\u0076", _dgfea.XAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0079"}, Value: _d.Sprintf("\u0025\u0076", _dgfea.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gbeaa ST_TLCommandType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_gbeaa.String(), start)
}

// Validate validates the CT_TLIterateData and its children
func (_agfgb *CT_TLIterateData) Validate() error {
	return _agfgb.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061")
}
func (_febd ST_TransitionSideDirectionType) ValidateWithPath(path string) error {
	switch _febd {
	case 0, 1, 2, 3, 4:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_febd))
	}
	return nil
}
func (_fbcfe *CT_TLTriggerTimeNodeID) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _fbcfe.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fddee ST_TLTimeNodeMasterRelation) ValidateWithPath(path string) error {
	switch _fddee {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fddee))
	}
	return nil
}

type CT_ConnectorNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_da.CT_NonVisualDrawingProps

	// Non-Visual Connector Shape Drawing Properties
	CNvCxnSpPr *_da.CT_NonVisualConnectorProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_gaca *CT_CustomerData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _gaca.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_beff *CT_CustomShowId) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _beff.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ccaae *CT_SplitTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ccaae.OrientAttr != ST_DirectionUnset {
		_dfab, _gafc := _ccaae.OrientAttr.MarshalXMLAttr(_e.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _gafc != nil {
			return _gafc
		}
		start.Attr = append(start.Attr, _dfab)
	}
	if _ccaae.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_bbgeb, _aegfe := _ccaae.DirAttr.MarshalXMLAttr(_e.Name{Local: "\u0064\u0069\u0072"})
		if _aegfe != nil {
			return _aegfe
		}
		start.Attr = append(start.Attr, _bbgeb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cbfe ST_TLAnimateEffectTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cbfe.String(), start)
}
func (_fdcad ST_TLAnimateColorSpace) String() string {
	switch _fdcad {
	case 0:
		return ""
	case 1:
		return "\u0072\u0067\u0062"
	case 2:
		return "\u0068\u0073\u006c"
	}
	return ""
}

type CT_NotesViewProperties struct {

	// Common Slide View Properties
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func NewTagLst() *TagLst { _ddgdb := &TagLst{}; _ddgdb.CT_TagList = *NewCT_TagList(); return _ddgdb }

// ValidateWithPath validates the CT_TLAnimVariantStringVal and its children, prefixing error messages with path
func (_faaa *CT_TLAnimVariantStringVal) ValidateWithPath(path string) error { return nil }
func (_faaec *CT_Picture) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_afdba := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_faaec.NvPicPr, _afdba)
	_fagac := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_faaec.BlipFill, _fagac)
	_cgdcd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_faaec.SpPr, _cgdcd)
	if _faaec.Style != nil {
		_bgac := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_faaec.Style, _bgac)
	}
	if _faaec.ExtLst != nil {
		_dafg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faaec.ExtLst, _dafg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CommonSlideData and its children
func (_eeac *CT_CommonSlideData) Validate() error {
	return _eeac.ValidateWithPath("\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061")
}
func (_fcgfa *ST_TLAnimateColorDirection) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gdcdga, _dafdg := d.Token()
	if _dafdg != nil {
		return _dafdg
	}
	if _dbdeb, _gdgd := _gdcdga.(_e.EndElement); _gdgd && _dbdeb.Name == start.Name {
		*_fcgfa = 1
		return nil
	}
	if _bfbe, _cdeda := _gdcdga.(_e.CharData); !_cdeda {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdcdga)
	} else {
		switch string(_bfbe) {
		case "":
			*_fcgfa = 0
		case "\u0063\u0077":
			*_fcgfa = 1
		case "\u0063\u0063\u0077":
			*_fcgfa = 2
		}
	}
	_gdcdga, _dafdg = d.Token()
	if _dafdg != nil {
		return _dafdg
	}
	if _dgeb, _degbc := _gdcdga.(_e.EndElement); _degbc && _dgeb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdcdga)
}

// ValidateWithPath validates the CT_TLAnimVariant and its children, prefixing error messages with path
func (_aaca *CT_TLAnimVariant) ValidateWithPath(path string) error {
	if _aaca.BoolVal != nil {
		if _gaea := _aaca.BoolVal.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006c\u0056\u0061\u006c"); _gaea != nil {
			return _gaea
		}
	}
	if _aaca.IntVal != nil {
		if _gcffe := _aaca.IntVal.ValidateWithPath(path + "\u002fI\u006e\u0074\u0056\u0061\u006c"); _gcffe != nil {
			return _gcffe
		}
	}
	if _aaca.FltVal != nil {
		if _bdgde := _aaca.FltVal.ValidateWithPath(path + "\u002fF\u006c\u0074\u0056\u0061\u006c"); _bdgde != nil {
			return _bdgde
		}
	}
	if _aaca.StrVal != nil {
		if _aafeb := _aaca.StrVal.ValidateWithPath(path + "\u002fS\u0074\u0072\u0056\u0061\u006c"); _aafeb != nil {
			return _aafeb
		}
	}
	if _aaca.ClrVal != nil {
		if _ccefa := _aaca.ClrVal.ValidateWithPath(path + "\u002fC\u006c\u0072\u0056\u0061\u006c"); _ccefa != nil {
			return _ccefa
		}
	}
	return nil
}
func (_gdeea *ST_SlideLayoutType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gdeea = 0
	case "\u0074\u0069\u0074l\u0065":
		*_gdeea = 1
	case "\u0074\u0078":
		*_gdeea = 2
	case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
		*_gdeea = 3
	case "\u0074\u0062\u006c":
		*_gdeea = 4
	case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
		*_gdeea = 5
	case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_gdeea = 6
	case "\u0064\u0067\u006d":
		*_gdeea = 7
	case "\u0063\u0068\u0061r\u0074":
		*_gdeea = 8
	case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
		*_gdeea = 9
	case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_gdeea = 10
	case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
		*_gdeea = 11
	case "\u0062\u006c\u0061n\u006b":
		*_gdeea = 12
	case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
		*_gdeea = 13
	case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_gdeea = 14
	case "\u006fb\u006a\u004f\u006e\u006c\u0079":
		*_gdeea = 15
	case "\u006f\u0062\u006a":
		*_gdeea = 16
	case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
		*_gdeea = 17
	case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
		*_gdeea = 18
	case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
		*_gdeea = 19
	case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
		*_gdeea = 20
	case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_gdeea = 21
	case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_gdeea = 22
	case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
		*_gdeea = 23
	case "\u0066o\u0075\u0072\u004f\u0062\u006a":
		*_gdeea = 24
	case "\u0076\u0065\u0072\u0074\u0054\u0078":
		*_gdeea = 25
	case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
		*_gdeea = 26
	case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
		*_gdeea = 27
	case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
		*_gdeea = 28
	case "\u0074\u0077\u006f\u004f\u0062\u006a":
		*_gdeea = 29
	case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_gdeea = 30
	case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
		*_gdeea = 31
	case "\u0063\u0075\u0073\u0074":
		*_gdeea = 32
	case "\u0073e\u0063\u0048\u0065\u0061\u0064":
		*_gdeea = 33
	case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
		*_gdeea = 34
	case "\u006f\u0062\u006aT\u0078":
		*_gdeea = 35
	case "\u0070\u0069\u0063T\u0078":
		*_gdeea = 36
	}
	return nil
}

type CT_TLAnimVariantFloatVal struct {

	// Value
	ValAttr float32
}

func (_ecdcg ST_TLTimeNodeFillType) Validate() error { return _ecdcg.ValidateWithPath("") }
func (_cgdg *CT_Guide) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cgdg.OrientAttr != ST_DirectionUnset {
		_cgf, _effd := _cgdg.OrientAttr.MarshalXMLAttr(_e.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _effd != nil {
			return _effd
		}
		start.Attr = append(start.Attr, _cgf)
	}
	if _cgdg.PosAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u006f\u0073"}, Value: _d.Sprintf("\u0025\u0076", *_cgdg.PosAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTimeConditionList and its children
func (_eaagce *CT_TLTimeConditionList) Validate() error {
	return _eaagce.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074")
}
func (_eea *CT_CommentAuthorList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_cfg:
	for {
		_ceda, _bfcda := d.Token()
		if _bfcda != nil {
			return _bfcda
		}
		switch _cgee := _ceda.(type) {
		case _e.StartElement:
			switch _cgee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_cda := NewCT_CommentAuthor()
				if _efbg := d.DecodeElement(_cda, &_cgee); _efbg != nil {
					return _efbg
				}
				_eea.CmAuthor = append(_eea.CmAuthor, _cda)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cgee.Name)
				if _efffa := d.Skip(); _efffa != nil {
					return _efffa
				}
			}
		case _e.EndElement:
			break _cfg
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ApplicationNonVisualDrawingProps and its children, prefixing error messages with path
func (_dbe *CT_ApplicationNonVisualDrawingProps) ValidateWithPath(path string) error {
	if _dbe.Ph != nil {
		if _fag := _dbe.Ph.ValidateWithPath(path + "\u002f\u0050\u0068"); _fag != nil {
			return _fag
		}
	}
	if _dbe.AudioCd != nil {
		if _ddec := _dbe.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _ddec != nil {
			return _ddec
		}
	}
	if _dbe.WavAudioFile != nil {
		if _fbc := _dbe.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _fbc != nil {
			return _fbc
		}
	}
	if _dbe.AudioFile != nil {
		if _cd := _dbe.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _cd != nil {
			return _cd
		}
	}
	if _dbe.VideoFile != nil {
		if _fea := _dbe.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _fea != nil {
			return _fea
		}
	}
	if _dbe.QuickTimeFile != nil {
		if _agff := _dbe.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _agff != nil {
			return _agff
		}
	}
	if _dbe.CustDataLst != nil {
		if _acb := _dbe.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _acb != nil {
			return _acb
		}
	}
	if _dbe.ExtLst != nil {
		if _ggd := _dbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggd != nil {
			return _ggd
		}
	}
	return nil
}

// Validate validates the Presentation and its children
func (_ggfad *Presentation) Validate() error {
	return _ggfad.ValidateWithPath("\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}
func NewCT_SlideViewProperties() *CT_SlideViewProperties {
	_begde := &CT_SlideViewProperties{}
	_begde.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _begde
}

type CT_TLMediaNodeAudio struct {

	// Is Narration
	IsNarrationAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}
type CT_SlideTiming struct {
	TnLst *CT_TimeNodeList

	// Build List
	BldLst *CT_BuildList
	ExtLst *CT_ExtensionListModify
}

func NewCT_TLAnimateColorBehavior() *CT_TLAnimateColorBehavior {
	_gagc := &CT_TLAnimateColorBehavior{}
	_gagc.CBhvr = NewCT_TLCommonBehaviorData()
	return _gagc
}
func NewCT_SlideIdListEntry() *CT_SlideIdListEntry {
	_bedb := &CT_SlideIdListEntry{}
	_bedb.IdAttr = 256
	return _bedb
}
func (_dbdgf *ST_TLTimeNodeType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fcfff, _gffec := d.Token()
	if _gffec != nil {
		return _gffec
	}
	if _cbbgb, _ebead := _fcfff.(_e.EndElement); _ebead && _cbbgb.Name == start.Name {
		*_dbdgf = 1
		return nil
	}
	if _gfede, _gccbd := _fcfff.(_e.CharData); !_gccbd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcfff)
	} else {
		switch string(_gfede) {
		case "":
			*_dbdgf = 0
		case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
			*_dbdgf = 1
		case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
			*_dbdgf = 2
		case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
			*_dbdgf = 3
		case "\u006da\u0069\u006e\u0053\u0065\u0071":
			*_dbdgf = 4
		case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
			*_dbdgf = 5
		case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
			*_dbdgf = 6
		case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
			*_dbdgf = 7
		case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_dbdgf = 8
		case "\u0074\u006d\u0052\u006f\u006f\u0074":
			*_dbdgf = 9
		}
	}
	_fcfff, _gffec = d.Token()
	if _gffec != nil {
		return _gffec
	}
	if _bacdc, _gcaeg := _fcfff.(_e.EndElement); _gcaeg && _bacdc.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcfff)
}
func (_cg *CT_Background) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _eac := range start.Attr {
		if _eac.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_cg.BwModeAttr.UnmarshalXMLAttr(_eac)
			continue
		}
	}
_gba:
	for {
		_ddd, _dgbf := d.Token()
		if _dgbf != nil {
			return _dgbf
		}
		switch _ggda := _ddd.(type) {
		case _e.StartElement:
			switch _ggda.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_cg.BgPr = NewCT_BackgroundProperties()
				if _gdf := d.DecodeElement(_cg.BgPr, &_ggda); _gdf != nil {
					return _gdf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_cg.BgRef = _da.NewCT_StyleMatrixReference()
				if _agdf := d.DecodeElement(_cg.BgRef, &_ggda); _agdf != nil {
					return _agdf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _ggda.Name)
				if _deb := d.Skip(); _deb != nil {
					return _deb
				}
			}
		case _e.EndElement:
			break _gba
		case _e.CharData:
		}
	}
	return nil
}
func (_fbfec ST_TLAnimateColorDirection) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fbfec.String(), start)
}
func (_fedg *CT_OptionalBlackTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fedg.ThruBlkAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074h\u0072\u0075\u0042\u006c\u006b"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_fedg.ThruBlkAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_eeca *CT_TLIterateIntervalPercentage) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _eeca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLCommonBehaviorData and its children, prefixing error messages with path
func (_gfega *CT_TLCommonBehaviorData) ValidateWithPath(path string) error {
	if _cgfa := _gfega.AdditiveAttr.ValidateWithPath(path + "\u002f\u0041\u0064\u0064\u0069\u0074\u0069\u0076\u0065\u0041\u0074\u0074\u0072"); _cgfa != nil {
		return _cgfa
	}
	if _eaabf := _gfega.AccumulateAttr.ValidateWithPath(path + "\u002fA\u0063c\u0075\u006d\u0075\u006c\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _eaabf != nil {
		return _eaabf
	}
	if _cddaf := _gfega.XfrmTypeAttr.ValidateWithPath(path + "\u002f\u0058\u0066\u0072\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _cddaf != nil {
		return _cddaf
	}
	if _bfbdd := _gfega.OverrideAttr.ValidateWithPath(path + "\u002f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0041\u0074\u0074\u0072"); _bfbdd != nil {
		return _bfbdd
	}
	if _gbfc := _gfega.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _gbfc != nil {
		return _gbfc
	}
	if _aaaaf := _gfega.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _aaaaf != nil {
		return _aaaaf
	}
	if _gfega.AttrNameLst != nil {
		if _eebca := _gfega.AttrNameLst.ValidateWithPath(path + "\u002f\u0041\u0074t\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"); _eebca != nil {
			return _eebca
		}
	}
	return nil
}

type CT_NotesSlide struct {

	// Common slide data for notes slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr            *_da.CT_ColorMappingOverride
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func NewCT_TLCommonMediaNodeData() *CT_TLCommonMediaNodeData {
	_fadaf := &CT_TLCommonMediaNodeData{}
	_fadaf.CTn = NewCT_TLCommonTimeNodeData()
	_fadaf.TgtEl = NewCT_TLTimeTargetElement()
	return _fadaf
}
func (_ebbg *CT_TLTimeAnimateValueList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ebbg.Tav != nil {
		_bgcgg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074a\u0076"}}
		for _, _dfeae := range _ebbg.Tav {
			e.EncodeElement(_dfeae, _bgcgg)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_ExtensionListModify struct {

	// Modify
	ModAttr *bool

	// Extension
	Ext []*CT_Extension
}

const (
	ST_TransitionCornerDirectionTypeUnset ST_TransitionCornerDirectionType = 0
	ST_TransitionCornerDirectionTypeLu    ST_TransitionCornerDirectionType = 1
	ST_TransitionCornerDirectionTypeRu    ST_TransitionCornerDirectionType = 2
	ST_TransitionCornerDirectionTypeLd    ST_TransitionCornerDirectionType = 3
	ST_TransitionCornerDirectionTypeRd    ST_TransitionCornerDirectionType = 4
)

// Validate validates the EG_Background and its children
func (_gdcce *EG_Background) Validate() error {
	return _gdcce.ValidateWithPath("\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

type EG_SlideListChoice struct {

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
}
type ST_Direction byte

// ValidateWithPath validates the HandoutMaster and its children, prefixing error messages with path
func (_bbfbc *HandoutMaster) ValidateWithPath(path string) error {
	if _eadf := _bbfbc.CT_HandoutMaster.ValidateWithPath(path); _eadf != nil {
		return _eadf
	}
	return nil
}

type OleObj struct{ CT_OleObject }

// ValidateWithPath validates the CT_Placeholder and its children, prefixing error messages with path
func (_afdc *CT_Placeholder) ValidateWithPath(path string) error {
	if _dfeg := _afdc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dfeg != nil {
		return _dfeg
	}
	if _cagf := _afdc.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _cagf != nil {
		return _cagf
	}
	if _dfdb := _afdc.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _dfdb != nil {
		return _dfdb
	}
	if _afdc.ExtLst != nil {
		if _gdcb := _afdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdcb != nil {
			return _gdcb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommandBehavior and its children, prefixing error messages with path
func (_dcbg *CT_TLCommandBehavior) ValidateWithPath(path string) error {
	if _aegfc := _dcbg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _aegfc != nil {
		return _aegfc
	}
	if _addbe := _dcbg.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _addbe != nil {
		return _addbe
	}
	return nil
}
func (_ageef *PresentationPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003ap\u0072\u0065\u0073e\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0050\u0072"
	return _ageef.CT_PresentationProperties.MarshalXML(e, start)
}

type CT_TLTriggerRuntimeNode struct {

	// Value
	ValAttr ST_TLTriggerRuntimeNode
}
type SldLayout struct{ CT_SlideLayout }

func (_cacae *EG_Background) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cacae.BgPr != nil {
		_fbfedd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_cacae.BgPr, _fbfedd)
	}
	if _cacae.BgRef != nil {
		_dgfdd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_cacae.BgRef, _dgfdd)
	}
	return nil
}
func NewEG_ExtensionList() *EG_ExtensionList { _dceef := &EG_ExtensionList{}; return _dceef }
func (_cad *CT_GroupShapeChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cad.Sp != nil {
		_dcfgc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0070"}}
		for _, _dab := range _cad.Sp {
			e.EncodeElement(_dab, _dcfgc)
		}
	}
	if _cad.GrpSp != nil {
		_faga := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _bfb := range _cad.GrpSp {
			e.EncodeElement(_bfb, _faga)
		}
	}
	if _cad.GraphicFrame != nil {
		_aeac := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _ebbc := range _cad.GraphicFrame {
			e.EncodeElement(_ebbc, _aeac)
		}
	}
	if _cad.CxnSp != nil {
		_ddcd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _ddee := range _cad.CxnSp {
			e.EncodeElement(_ddee, _ddcd)
		}
	}
	if _cad.Pic != nil {
		_fafd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		for _, _adfc := range _cad.Pic {
			e.EncodeElement(_adfc, _fafd)
		}
	}
	if _cad.ContentPart != nil {
		_dfc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		for _, _cbd := range _cad.ContentPart {
			e.EncodeElement(_cbd, _dfc)
		}
	}
	return nil
}
func (_fddff *EG_SlideListChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fddff.SldAll != nil {
		_cfbg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_fddff.SldAll, _cfbg)
	}
	if _fddff.SldRg != nil {
		_ceeaf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_fddff.SldRg, _ceeaf)
	}
	if _fddff.CustShow != nil {
		_bgcae := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_fddff.CustShow, _bgcae)
	}
	return nil
}

// Validate validates the CT_ApplicationNonVisualDrawingProps and its children
func (_adg *CT_ApplicationNonVisualDrawingProps) Validate() error {
	return _adg.ValidateWithPath("C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073")
}
func (_fageb ST_WebColorType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fageb.String(), start)
}

// Validate validates the CT_EightDirectionTransition and its children
func (_baac *CT_EightDirectionTransition) Validate() error {
	return _baac.ValidateWithPath("C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e")
}
func (_eacdd ST_TLTimeNodeFillType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_eacdd.String(), start)
}

type CT_SlideMasterTextStyles struct {

	// Slide Master Title Text Style
	TitleStyle *_da.CT_TextListStyle

	// Slide Master Body Text Style
	BodyStyle *_da.CT_TextListStyle

	// Slide Master Other Text Style
	OtherStyle *_da.CT_TextListStyle
	ExtLst     *CT_ExtensionList
}

// ValidateWithPath validates the EG_TopLevelSlide and its children, prefixing error messages with path
func (_egac *EG_TopLevelSlide) ValidateWithPath(path string) error {
	if _ecddb := _egac.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _ecddb != nil {
		return _ecddb
	}
	return nil
}
func NewCT_CustomShowId() *CT_CustomShowId { _gcga := &CT_CustomShowId{}; return _gcga }
func NewCT_TLCommonTimeNodeData() *CT_TLCommonTimeNodeData {
	_aceb := &CT_TLCommonTimeNodeData{}
	return _aceb
}
func NewCT_TLTemplateList() *CT_TLTemplateList          { _beebg := &CT_TLTemplateList{}; return _beebg }
func (_cbgd ST_TLBehaviorOverrideType) Validate() error { return _cbgd.ValidateWithPath("") }

// Validate validates the CT_TLMediaNodeVideo and its children
func (_efddd *CT_TLMediaNodeVideo) Validate() error {
	return _efddd.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f")
}

type CT_Connector struct {

	// Non-Visual Properties for a Connection Shape
	NvCxnSpPr *CT_ConnectorNonVisual

	// Shape Properties
	SpPr *_da.CT_ShapeProperties

	// Connector Shape Style
	Style  *_da.CT_ShapeStyle
	ExtLst *CT_ExtensionListModify
}

func (_efcbb *ST_TransitionInOutDirectionType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_efcbb = 0
	case "\u006f\u0075\u0074":
		*_efcbb = 1
	case "\u0069\u006e":
		*_efcbb = 2
	}
	return nil
}
func NewCT_NotesMasterIdListEntry() *CT_NotesMasterIdListEntry {
	_ceeg := &CT_NotesMasterIdListEntry{}
	return _ceeg
}

// ValidateWithPath validates the CT_OutlineViewSlideEntry and its children, prefixing error messages with path
func (_gfbdg *CT_OutlineViewSlideEntry) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TLBehaviorAttributeNameList and its children, prefixing error messages with path
func (_effgb *CT_TLBehaviorAttributeNameList) ValidateWithPath(path string) error { return nil }
func (_ebfc *CT_TLAnimateEffectBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ebfc.TransitionAttr != ST_TLAnimateEffectTransitionUnset {
		_bbbda, _aebg := _ebfc.TransitionAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"})
		if _aebg != nil {
			return _aebg
		}
		start.Attr = append(start.Attr, _bbbda)
	}
	if _ebfc.FilterAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _d.Sprintf("\u0025\u0076", *_ebfc.FilterAttr)})
	}
	if _ebfc.PrLstAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072\u004cs\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_ebfc.PrLstAttr)})
	}
	e.EncodeToken(start)
	_dabf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ebfc.CBhvr, _dabf)
	if _ebfc.Progress != nil {
		_cegbd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}}
		e.EncodeElement(_ebfc.Progress, _cegbd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gdbd *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_abbd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdbd.CNvPr, _abbd)
	_bcb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gdbd.CNvGraphicFramePr, _bcb)
	_fdafd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdbd.NvPr, _fdafd)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_Shape struct {

	// Use Background Fill
	UseBgFillAttr *bool

	// Non-Visual Properties for a Shape
	NvSpPr *CT_ShapeNonVisual
	SpPr   *_da.CT_ShapeProperties

	// Shape Style
	Style *_da.CT_ShapeStyle

	// Shape Text Body
	TxBody *_da.CT_TextBody
	ExtLst *CT_ExtensionListModify
}
type ST_TLTimeNodeType byte

func (_abdfc *ST_SlideSizeType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_abdfc = 0
	case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
		*_abdfc = 1
	case "\u006c\u0065\u0074\u0074\u0065\u0072":
		*_abdfc = 2
	case "\u0041\u0034":
		*_abdfc = 3
	case "\u0033\u0035\u006d\u006d":
		*_abdfc = 4
	case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
		*_abdfc = 5
	case "\u0062\u0061\u006e\u006e\u0065\u0072":
		*_abdfc = 6
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_abdfc = 7
	case "\u006c\u0065\u0064\u0067\u0065\u0072":
		*_abdfc = 8
	case "\u0041\u0033":
		*_abdfc = 9
	case "\u0042\u0034\u0049S\u004f":
		*_abdfc = 10
	case "\u0042\u0035\u0049S\u004f":
		*_abdfc = 11
	case "\u0042\u0034\u004aI\u0053":
		*_abdfc = 12
	case "\u0042\u0035\u004aI\u0053":
		*_abdfc = 13
	case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
		*_abdfc = 14
	case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
		*_abdfc = 15
	case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
		*_abdfc = 16
	}
	return nil
}
func (_abaab *CT_TLByRgbColorTransform) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072"}, Value: _d.Sprintf("\u0025\u0076", _abaab.RAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067"}, Value: _d.Sprintf("\u0025\u0076", _abaab.GAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062"}, Value: _d.Sprintf("\u0025\u0076", _abaab.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gegdb *CT_TLMediaNodeAudio) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gegdb.IsNarrationAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gegdb.IsNarrationAttr))})
	}
	e.EncodeToken(start)
	_fcdf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_gegdb.CMediaNode, _fcdf)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_Background and its children, prefixing error messages with path
func (_gbgfa *EG_Background) ValidateWithPath(path string) error {
	if _gbgfa.BgPr != nil {
		if _dffcd := _gbgfa.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _dffcd != nil {
			return _dffcd
		}
	}
	if _gbgfa.BgRef != nil {
		if _dfcfg := _gbgfa.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _dfcfg != nil {
			return _dfcfg
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariant and its children
func (_gcgd *CT_TLAnimVariant) Validate() error {
	return _gcgd.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074")
}
func NewCT_TLShapeTargetElement() *CT_TLShapeTargetElement {
	_gcca := &CT_TLShapeTargetElement{}
	return _gcca
}
func (_gcgcf *CT_SlideRelationshipList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_egad:
	for {
		_fecd, _bebac := d.Token()
		if _bebac != nil {
			return _bebac
		}
		switch _dada := _fecd.(type) {
		case _e.StartElement:
			switch _dada.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_gbfac := NewCT_SlideRelationshipListEntry()
				if _gfefd := d.DecodeElement(_gbfac, &_dada); _gfefd != nil {
					return _gfefd
				}
				_gcgcf.Sld = append(_gcgcf.Sld, _gbfac)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069p\u004c\u0069\u0073\u0074\u0020%\u0076", _dada.Name)
				if _gggg := d.Skip(); _gggg != nil {
					return _gggg
				}
			}
		case _e.EndElement:
			break _egad
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTemplate and its children, prefixing error messages with path
func (_caccf *CT_TLTemplate) ValidateWithPath(path string) error {
	if _ddcgf := _caccf.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _ddcgf != nil {
		return _ddcgf
	}
	return nil
}

type CT_TLAnimVariant struct {

	// Boolean Variant
	BoolVal *CT_TLAnimVariantBooleanVal

	// Integer
	IntVal *CT_TLAnimVariantIntegerVal

	// Float Value
	FltVal *CT_TLAnimVariantFloatVal

	// String Value
	StrVal *CT_TLAnimVariantStringVal

	// Color Value
	ClrVal *_da.CT_Color
}

func (_gcbb *CT_HtmlPublishProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _adecc := range start.Attr {
		if _adecc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _adecc.Name.Local == "\u0069\u0064" || _adecc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _adecc.Name.Local == "\u0069\u0064" {
			_eede, _fegg := _adecc.Value, error(nil)
			if _fegg != nil {
				return _fegg
			}
			_gcbb.IdAttr = _eede
			continue
		}
		if _adecc.Name.Local == "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073" {
			_afba, _fcec := _a.ParseBool(_adecc.Value)
			if _fcec != nil {
				return _fcec
			}
			_gcbb.ShowSpeakerNotesAttr = &_afba
			continue
		}
		if _adecc.Name.Local == "\u0074\u0061\u0072\u0067\u0065\u0074" {
			_abcc, _cdea := _adecc.Value, error(nil)
			if _cdea != nil {
				return _cdea
			}
			_gcbb.TargetAttr = &_abcc
			continue
		}
		if _adecc.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_ffef, _cefag := _adecc.Value, error(nil)
			if _cefag != nil {
				return _cefag
			}
			_gcbb.TitleAttr = &_ffef
			continue
		}
	}
_ddea:
	for {
		_aaab, _fbae := d.Token()
		if _fbae != nil {
			return _fbae
		}
		switch _fcgac := _aaab.(type) {
		case _e.StartElement:
			switch _fcgac.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_gcbb.SldAll = NewCT_Empty()
				if _bdab := d.DecodeElement(_gcbb.SldAll, &_fcgac); _bdab != nil {
					return _bdab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_gcbb.SldRg = NewCT_IndexRange()
				if _cged := d.DecodeElement(_gcbb.SldRg, &_fcgac); _cged != nil {
					return _cged
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gcbb.CustShow = NewCT_CustomShowId()
				if _gcdd := d.DecodeElement(_gcbb.CustShow, &_fcgac); _gcdd != nil {
					return _gcdd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcbb.ExtLst = NewCT_ExtensionList()
				if _cadc := d.DecodeElement(_gcbb.ExtLst, &_fcgac); _cadc != nil {
					return _cadc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _fcgac.Name)
				if _fdbee := d.Skip(); _fdbee != nil {
					return _fdbee
				}
			}
		case _e.EndElement:
			break _ddea
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariantFloatVal and its children
func (_fcbg *CT_TLAnimVariantFloatVal) Validate() error {
	return _fcbg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c")
}
func (_cebg *ST_TLAnimateBehaviorValueType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_cebg = 0
	case "\u0073\u0074\u0072":
		*_cebg = 1
	case "\u006e\u0075\u006d":
		*_cebg = 2
	case "\u0063\u006c\u0072":
		*_cebg = 3
	}
	return nil
}

type CT_SlideSize struct {

	// Extent Length
	CxAttr int32

	// Extent Width
	CyAttr int32

	// Type of Size
	TypeAttr ST_SlideSizeType
}
type CT_TLAnimVariantStringVal struct {

	// Value
	ValAttr string
}

func NewCT_TLAnimVariantIntegerVal() *CT_TLAnimVariantIntegerVal {
	_afeb := &CT_TLAnimVariantIntegerVal{}
	return _afeb
}
func (_afaba *CT_TLAnimateColorBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _afaba.ClrSpcAttr != ST_TLAnimateColorSpaceUnset {
		_gcad, _cagaa := _afaba.ClrSpcAttr.MarshalXMLAttr(_e.Name{Local: "\u0063\u006c\u0072\u0053\u0070\u0063"})
		if _cagaa != nil {
			return _cagaa
		}
		start.Attr = append(start.Attr, _gcad)
	}
	if _afaba.DirAttr != ST_TLAnimateColorDirectionUnset {
		_gcffb, _agcaf := _afaba.DirAttr.MarshalXMLAttr(_e.Name{Local: "\u0064\u0069\u0072"})
		if _agcaf != nil {
			return _agcaf
		}
		start.Attr = append(start.Attr, _gcffb)
	}
	e.EncodeToken(start)
	_acaec := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_afaba.CBhvr, _acaec)
	if _afaba.By != nil {
		_dbgd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_afaba.By, _dbgd)
	}
	if _afaba.From != nil {
		_dbfbb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_afaba.From, _dbfbb)
	}
	if _afaba.To != nil {
		_cefcgf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_afaba.To, _cefcgf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ViewProperties and its children
func (_bgca *CT_ViewProperties) Validate() error {
	return _bgca.ValidateWithPath("\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_NotesTextViewProperties and its children
func (_dfafd *CT_NotesTextViewProperties) Validate() error {
	return _dfafd.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}
func (_edfbaf ST_IterateType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_edfbaf.String(), start)
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_degd *ST_PhotoAlbumFrameShape) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_degd = 0
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
		*_degd = 1
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
		*_degd = 2
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
		*_degd = 3
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
		*_degd = 4
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
		*_degd = 5
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
		*_degd = 6
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
		*_degd = 7
	}
	return nil
}

type CT_Picture struct {

	// Non-Visual Properties for a Picture
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_da.CT_BlipFillProperties
	SpPr     *_da.CT_ShapeProperties
	Style    *_da.CT_ShapeStyle
	ExtLst   *CT_ExtensionListModify
}

// Validate validates the CT_SlideRelationshipList and its children
func (_bafe *CT_SlideRelationshipList) Validate() error {
	return _bafe.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074")
}
func (_ffff *NotesMaster) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072"
	return _ffff.CT_NotesMaster.MarshalXML(e, start)
}
func (_dfgdba *CT_TransitionSoundAction) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_aefgd:
	for {
		_aefe, _gbdaf := d.Token()
		if _gbdaf != nil {
			return _gbdaf
		}
		switch _fgcaa := _aefe.(type) {
		case _e.StartElement:
			switch _fgcaa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
				_dfgdba.StSnd = NewCT_TransitionStartSoundAction()
				if _acbbb := d.DecodeElement(_dfgdba.StSnd, &_fgcaa); _acbbb != nil {
					return _acbbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
				_dfgdba.EndSnd = NewCT_Empty()
				if _cbefb := d.DecodeElement(_dfgdba.EndSnd, &_fgcaa); _cbefb != nil {
					return _cbefb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041c\u0074\u0069\u006f\u006e\u0020%\u0076", _fgcaa.Name)
				if _ebacd := d.Skip(); _ebacd != nil {
					return _ebacd
				}
			}
		case _e.EndElement:
			break _aefgd
		case _e.CharData:
		}
	}
	return nil
}
func (_aagga ST_TLCommandType) String() string {
	switch _aagga {
	case 0:
		return ""
	case 1:
		return "\u0065\u0076\u0074"
	case 2:
		return "\u0063\u0061\u006c\u006c"
	case 3:
		return "\u0076\u0065\u0072\u0062"
	}
	return ""
}

// ValidateWithPath validates the CT_TLAnimVariantBooleanVal and its children, prefixing error messages with path
func (_fdga *CT_TLAnimVariantBooleanVal) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_HandoutMasterIdList and its children, prefixing error messages with path
func (_agffb *CT_HandoutMasterIdList) ValidateWithPath(path string) error {
	if _agffb.HandoutMasterId != nil {
		if _bad := _agffb.HandoutMasterId.ValidateWithPath(path + "\u002f\u0048a\u006e\u0064\u006fu\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"); _bad != nil {
			return _bad
		}
	}
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter { _aafc := &CT_HeaderFooter{}; return _aafc }
func NewCT_TimeNodeList() *CT_TimeNodeList { _gdee := &CT_TimeNodeList{}; return _gdee }
func (_eabg *ST_ViewType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_eabg = 0
	case "\u0073l\u0064\u0056\u0069\u0065\u0077":
		*_eabg = 1
	case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_eabg = 2
	case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
		*_eabg = 3
	case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
		*_eabg = 4
	case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_eabg = 5
	case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
		*_eabg = 6
	case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_eabg = 7
	case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
		*_eabg = 8
	}
	return nil
}
func (_aefgf *CT_Rel) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _abg := range start.Attr {
		if _abg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _abg.Name.Local == "\u0069\u0064" || _abg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _abg.Name.Local == "\u0069\u0064" {
			_cgdf, _cagfb := _abg.Value, error(nil)
			if _cagfb != nil {
				return _cagfb
			}
			_aefgf.IdAttr = _cgdf
			continue
		}
	}
	for {
		_cadaf, _cegg := d.Token()
		if _cegg != nil {
			return _d.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _cegg)
		}
		if _dcbd, _fedba := _cadaf.(_e.EndElement); _fedba && _dcbd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_dgbg *CT_Connector) ValidateWithPath(path string) error {
	if _fgda := _dgbg.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _fgda != nil {
		return _fgda
	}
	if _cea := _dgbg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cea != nil {
		return _cea
	}
	if _dgbg.Style != nil {
		if _eaf := _dgbg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _eaf != nil {
			return _eaf
		}
	}
	if _dgbg.ExtLst != nil {
		if _dacg := _dgbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dacg != nil {
			return _dacg
		}
	}
	return nil
}

type CT_WheelTransition struct {

	// Spokes
	SpokesAttr *uint32
}

// Validate validates the CT_SlideRelationshipListEntry and its children
func (_aeee *CT_SlideRelationshipListEntry) Validate() error {
	return _aeee.ValidateWithPath("\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079")
}

// ValidateWithPath validates the CT_OptionalBlackTransition and its children, prefixing error messages with path
func (_acbd *CT_OptionalBlackTransition) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TLTimeNodeExclusive and its children, prefixing error messages with path
func (_fcgae *CT_TLTimeNodeExclusive) ValidateWithPath(path string) error {
	if _gaba := _fcgae.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _gaba != nil {
		return _gaba
	}
	return nil
}

type CT_TLCommandBehavior struct {

	// Command Type
	TypeAttr ST_TLCommandType

	// Command
	CmdAttr *string
	CBhvr   *CT_TLCommonBehaviorData
}
type EG_TopLevelSlide struct {

	// Color Scheme Map
	ClrMap *_da.CT_ColorMapping
}
type CT_TLIterateData struct {

	// Iterate Type
	TypeAttr ST_IterateType

	// Backwards
	BackwardsAttr *bool

	// Time Absolute
	TmAbs *CT_TLIterateIntervalTime

	// Time Percentage
	TmPct *CT_TLIterateIntervalPercentage
}

func (_aegf *CT_SlideTransitionChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fgce:
	for {
		_aceeg, _abgd := d.Token()
		if _abgd != nil {
			return _abgd
		}
		switch _gada := _aceeg.(type) {
		case _e.StartElement:
			switch _gada.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_aegf.Blinds = NewCT_OrientationTransition()
				if _cgbc := d.DecodeElement(_aegf.Blinds, &_gada); _cgbc != nil {
					return _cgbc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_aegf.Checker = NewCT_OrientationTransition()
				if _dggf := d.DecodeElement(_aegf.Checker, &_gada); _dggf != nil {
					return _dggf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_aegf.Circle = NewCT_Empty()
				if _eafgb := d.DecodeElement(_aegf.Circle, &_gada); _eafgb != nil {
					return _eafgb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_aegf.Dissolve = NewCT_Empty()
				if _bcbc := d.DecodeElement(_aegf.Dissolve, &_gada); _bcbc != nil {
					return _bcbc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_aegf.Comb = NewCT_OrientationTransition()
				if _eegba := d.DecodeElement(_aegf.Comb, &_gada); _eegba != nil {
					return _eegba
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_aegf.Cover = NewCT_EightDirectionTransition()
				if _efdd := d.DecodeElement(_aegf.Cover, &_gada); _efdd != nil {
					return _efdd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_aegf.Cut = NewCT_OptionalBlackTransition()
				if _cafe := d.DecodeElement(_aegf.Cut, &_gada); _cafe != nil {
					return _cafe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_aegf.Diamond = NewCT_Empty()
				if _fgggf := d.DecodeElement(_aegf.Diamond, &_gada); _fgggf != nil {
					return _fgggf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_aegf.Fade = NewCT_OptionalBlackTransition()
				if _badd := d.DecodeElement(_aegf.Fade, &_gada); _badd != nil {
					return _badd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_aegf.Newsflash = NewCT_Empty()
				if _acbba := d.DecodeElement(_aegf.Newsflash, &_gada); _acbba != nil {
					return _acbba
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_aegf.Plus = NewCT_Empty()
				if _fgbaa := d.DecodeElement(_aegf.Plus, &_gada); _fgbaa != nil {
					return _fgbaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_aegf.Pull = NewCT_EightDirectionTransition()
				if _eabc := d.DecodeElement(_aegf.Pull, &_gada); _eabc != nil {
					return _eabc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_aegf.Push = NewCT_SideDirectionTransition()
				if _babe := d.DecodeElement(_aegf.Push, &_gada); _babe != nil {
					return _babe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_aegf.Random = NewCT_Empty()
				if _eeagb := d.DecodeElement(_aegf.Random, &_gada); _eeagb != nil {
					return _eeagb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_aegf.RandomBar = NewCT_OrientationTransition()
				if _cfbb := d.DecodeElement(_aegf.RandomBar, &_gada); _cfbb != nil {
					return _cfbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_aegf.Split = NewCT_SplitTransition()
				if _cgff := d.DecodeElement(_aegf.Split, &_gada); _cgff != nil {
					return _cgff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_aegf.Strips = NewCT_CornerDirectionTransition()
				if _fdfad := d.DecodeElement(_aegf.Strips, &_gada); _fdfad != nil {
					return _fdfad
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_aegf.Wedge = NewCT_Empty()
				if _bbbf := d.DecodeElement(_aegf.Wedge, &_gada); _bbbf != nil {
					return _bbbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_aegf.Wheel = NewCT_WheelTransition()
				if _fbfdg := d.DecodeElement(_aegf.Wheel, &_gada); _fbfdg != nil {
					return _fbfdg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_aegf.Wipe = NewCT_SideDirectionTransition()
				if _fgcee := d.DecodeElement(_aegf.Wipe, &_gada); _fgcee != nil {
					return _fgcee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_aegf.Zoom = NewCT_InOutTransition()
				if _egebc := d.DecodeElement(_aegf.Zoom, &_gada); _egebc != nil {
					return _egebc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _gada.Name)
				if _aaafd := d.Skip(); _aaafd != nil {
					return _aaafd
				}
			}
		case _e.EndElement:
			break _fgce
		case _e.CharData:
		}
	}
	return nil
}

const (
	ST_TLDiagramBuildTypeUnset         ST_TLDiagramBuildType = 0
	ST_TLDiagramBuildTypeWhole         ST_TLDiagramBuildType = 1
	ST_TLDiagramBuildTypeDepthByNode   ST_TLDiagramBuildType = 2
	ST_TLDiagramBuildTypeDepthByBranch ST_TLDiagramBuildType = 3
	ST_TLDiagramBuildTypeBreadthByNode ST_TLDiagramBuildType = 4
	ST_TLDiagramBuildTypeBreadthByLvl  ST_TLDiagramBuildType = 5
	ST_TLDiagramBuildTypeCw            ST_TLDiagramBuildType = 6
	ST_TLDiagramBuildTypeCwIn          ST_TLDiagramBuildType = 7
	ST_TLDiagramBuildTypeCwOut         ST_TLDiagramBuildType = 8
	ST_TLDiagramBuildTypeCcw           ST_TLDiagramBuildType = 9
	ST_TLDiagramBuildTypeCcwIn         ST_TLDiagramBuildType = 10
	ST_TLDiagramBuildTypeCcwOut        ST_TLDiagramBuildType = 11
	ST_TLDiagramBuildTypeInByRing      ST_TLDiagramBuildType = 12
	ST_TLDiagramBuildTypeOutByRing     ST_TLDiagramBuildType = 13
	ST_TLDiagramBuildTypeUp            ST_TLDiagramBuildType = 14
	ST_TLDiagramBuildTypeDown          ST_TLDiagramBuildType = 15
	ST_TLDiagramBuildTypeAllAtOnce     ST_TLDiagramBuildType = 16
	ST_TLDiagramBuildTypeCust          ST_TLDiagramBuildType = 17
)

func (_eefbd *SldMaster) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eefbd.CT_SlideMaster = *NewCT_SlideMaster()
	for _, _abfca := range start.Attr {
		if _abfca.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_gdbf, _aged := _a.ParseBool(_abfca.Value)
			if _aged != nil {
				return _aged
			}
			_eefbd.PreserveAttr = &_gdbf
			continue
		}
	}
_gedfa:
	for {
		_aafdc, _fbbgd := d.Token()
		if _fbbgd != nil {
			return _fbbgd
		}
		switch _bbdf := _aafdc.(type) {
		case _e.StartElement:
			switch _bbdf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bdeag := d.DecodeElement(_eefbd.CSld, &_bbdf); _bdeag != nil {
					return _bdeag
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _ggcdf := d.DecodeElement(_eefbd.ClrMap, &_bbdf); _ggcdf != nil {
					return _ggcdf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_eefbd.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _gbdafa := d.DecodeElement(_eefbd.SldLayoutIdLst, &_bbdf); _gbdafa != nil {
					return _gbdafa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_eefbd.Transition = NewCT_SlideTransition()
				if _ddcge := d.DecodeElement(_eefbd.Transition, &_bbdf); _ddcge != nil {
					return _ddcge
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_eefbd.Timing = NewCT_SlideTiming()
				if _ceccc := d.DecodeElement(_eefbd.Timing, &_bbdf); _ceccc != nil {
					return _ceccc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_eefbd.Hf = NewCT_HeaderFooter()
				if _gddde := d.DecodeElement(_eefbd.Hf, &_bbdf); _gddde != nil {
					return _gddde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_eefbd.TxStyles = NewCT_SlideMasterTextStyles()
				if _dadcb := d.DecodeElement(_eefbd.TxStyles, &_bbdf); _dadcb != nil {
					return _dadcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eefbd.ExtLst = NewCT_ExtensionListModify()
				if _cbcfc := d.DecodeElement(_eefbd.ExtLst, &_bbdf); _cbcfc != nil {
					return _cbcfc
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004d\u0061\u0073t\u0065\u0072 \u0025\u0076", _bbdf.Name)
				if _gfdg := d.Skip(); _gfdg != nil {
					return _gfdg
				}
			}
		case _e.EndElement:
			break _gedfa
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideTransitionChoice and its children
func (_gfbf *CT_SlideTransitionChoice) Validate() error {
	return _gfbf.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_cbac *ST_TransitionInOutDirectionType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_face, _bcdgg := d.Token()
	if _bcdgg != nil {
		return _bcdgg
	}
	if _aagg, _eacb := _face.(_e.EndElement); _eacb && _aagg.Name == start.Name {
		*_cbac = 1
		return nil
	}
	if _bdged, _afbeg := _face.(_e.CharData); !_afbeg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _face)
	} else {
		switch string(_bdged) {
		case "":
			*_cbac = 0
		case "\u006f\u0075\u0074":
			*_cbac = 1
		case "\u0069\u006e":
			*_cbac = 2
		}
	}
	_face, _bcdgg = d.Token()
	if _bcdgg != nil {
		return _bcdgg
	}
	if _agbbf, _dedfb := _face.(_e.EndElement); _dedfb && _agbbf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _face)
}
func (_bbae ST_SlideLayoutType) Validate() error { return _bbae.ValidateWithPath("") }
func (_aacef ST_PrintColorMode) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_aacef.String(), start)
}

// Validate validates the CT_TLBuildDiagram and its children
func (_accc *CT_TLBuildDiagram) Validate() error {
	return _accc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d")
}

// ValidateWithPath validates the SldMaster and its children, prefixing error messages with path
func (_cbgad *SldMaster) ValidateWithPath(path string) error {
	if _edeeg := _cbgad.CT_SlideMaster.ValidateWithPath(path); _edeeg != nil {
		return _edeeg
	}
	return nil
}
func (_aedc *CT_Comment) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _d.Sprintf("\u0025\u0076", _aedc.AuthorIdAttr)})
	if _aedc.DtAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_aedc.DtAttr)})
	}
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064\u0078"}, Value: _d.Sprintf("\u0025\u0076", _aedc.IdxAttr)})
	e.EncodeToken(start)
	_beb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070o\u0073"}}
	e.EncodeElement(_aedc.Pos, _beb)
	_aef := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0065\u0078\u0074"}}
	_f.AddPreserveSpaceAttr(&_aef, _aedc.Text)
	e.EncodeElement(_aedc.Text, _aef)
	if _aedc.ExtLst != nil {
		_bcf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aedc.ExtLst, _bcf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExtensionListModify and its children, prefixing error messages with path
func (_edac *CT_ExtensionListModify) ValidateWithPath(path string) error {
	for _cga, _cgec := range _edac.Ext {
		if _geae := _cgec.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cga)); _geae != nil {
			return _geae
		}
	}
	return nil
}
func NewCT_TransitionStartSoundAction() *CT_TransitionStartSoundAction {
	_bgdac := &CT_TransitionStartSoundAction{}
	_bgdac.Snd = _da.NewCT_EmbeddedWAVAudioFile()
	return _bgdac
}
func (_ggge *ST_TransitionEightDirectionType) Validate() error { return _ggge.ValidateWithPath("") }
func (_bdddg *CT_SplitTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _abade := range start.Attr {
		if _abade.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_bdddg.OrientAttr.UnmarshalXMLAttr(_abade)
			continue
		}
		if _abade.Name.Local == "\u0064\u0069\u0072" {
			_bdddg.DirAttr.UnmarshalXMLAttr(_abade)
			continue
		}
	}
	for {
		_gdde, _gfaa := d.Token()
		if _gfaa != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0070\u006c\u0069\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _gfaa)
		}
		if _gdbba, _bgabc := _gdde.(_e.EndElement); _bgabc && _gdbba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afgfb ST_PlaceholderSize) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_afgfb.String(), start)
}

const (
	ST_TLBehaviorOverrideTypeUnset      ST_TLBehaviorOverrideType = 0
	ST_TLBehaviorOverrideTypeNormal     ST_TLBehaviorOverrideType = 1
	ST_TLBehaviorOverrideTypeChildStyle ST_TLBehaviorOverrideType = 2
)

// Validate validates the CT_TagsData and its children
func (_ggefe *CT_TagsData) Validate() error {
	return _ggefe.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061")
}

type CT_TLGraphicalObjectBuild struct {

	// Build As One
	BldAsOne *CT_Empty

	// Build Sub Elements
	BldSub       *_da.CT_AnimationGraphicalObjectBuildProperties
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}
type AG_TLBuild struct {
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}
type CT_SideDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionSideDirectionType
}

// Validate validates the CT_Rel and its children
func (_dabe *CT_Rel) Validate() error {
	return _dabe.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}

// Validate validates the SldLayout and its children
func (_fgbea *SldLayout) Validate() error {
	return _fgbea.ValidateWithPath("\u0053l\u0064\u004c\u0061\u0079\u006f\u0075t")
}
func (_gagaf ST_TLChartSubelementType) Validate() error { return _gagaf.ValidateWithPath("") }
func (_beaga ST_TLChartSubelementType) String() string {
	switch _beaga {
	case 0:
		return ""
	case 1:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return ""
}
func NewCT_TLTimeConditionList() *CT_TLTimeConditionList {
	_agaf := &CT_TLTimeConditionList{}
	return _agaf
}

type ST_TLTimeIndefinite byte
type Presentation struct{ CT_Presentation }

func (_eacab ST_SlideSizeType) ValidateWithPath(path string) error {
	switch _eacab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eacab))
	}
	return nil
}

const (
	ST_TLBehaviorAccumulateTypeUnset  ST_TLBehaviorAccumulateType = 0
	ST_TLBehaviorAccumulateTypeNone   ST_TLBehaviorAccumulateType = 1
	ST_TLBehaviorAccumulateTypeAlways ST_TLBehaviorAccumulateType = 2
)

func (_bccc ST_TLBehaviorOverrideType) ValidateWithPath(path string) error {
	switch _bccc {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bccc))
	}
	return nil
}
func (_aaceec *CT_TLTimeConditionList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gbafe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0064"}}
	for _, _dfcb := range _aaceec.Cond {
		e.EncodeElement(_dfcb, _gbafe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomShowList and its children, prefixing error messages with path
func (_dgfe *CT_CustomShowList) ValidateWithPath(path string) error {
	for _gea, _cfca := range _dgfe.CustShow {
		if _fcee := _cfca.ValidateWithPath(_d.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u005b\u0025\u0064\u005d", path, _gea)); _fcee != nil {
			return _fcee
		}
	}
	return nil
}

// Validate validates the CT_OleObjectLink and its children
func (_dedad *CT_OleObjectLink) Validate() error {
	return _dedad.ValidateWithPath("\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b")
}
func (_fcffc ST_ViewType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fcffc.String(), start)
}
func (_dfda *CT_NotesViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dfda.CSldViewPr = NewCT_CommonSlideViewProperties()
_cfcae:
	for {
		_geaea, _daad := d.Token()
		if _daad != nil {
			return _daad
		}
		switch _fcda := _geaea.(type) {
		case _e.StartElement:
			switch _fcda.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _gecbg := d.DecodeElement(_dfda.CSldViewPr, &_fcda); _gecbg != nil {
					return _gecbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfda.ExtLst = NewCT_ExtensionList()
				if _ffbad := d.DecodeElement(_dfda.ExtLst, &_fcda); _ffbad != nil {
					return _ffbad
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u006f\u0074\u0065s\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fcda.Name)
				if _afab := d.Skip(); _afab != nil {
					return _afab
				}
			}
		case _e.EndElement:
			break _cfcae
		case _e.CharData:
		}
	}
	return nil
}
func (_ffdb *CT_TLAnimateBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ffdb.ByAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u0079"}, Value: _d.Sprintf("\u0025\u0076", *_ffdb.ByAttr)})
	}
	if _ffdb.FromAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_ffdb.FromAttr)})
	}
	if _ffdb.ToAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_ffdb.ToAttr)})
	}
	if _ffdb.CalcmodeAttr != ST_TLAnimateBehaviorCalcModeUnset {
		_bbgbe, _caed := _ffdb.CalcmodeAttr.MarshalXMLAttr(_e.Name{Local: "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065"})
		if _caed != nil {
			return _caed
		}
		start.Attr = append(start.Attr, _bbgbe)
	}
	if _ffdb.ValueTypeAttr != ST_TLAnimateBehaviorValueTypeUnset {
		_eefdd, _fdda := _ffdb.ValueTypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e"})
		if _fdda != nil {
			return _fdda
		}
		start.Attr = append(start.Attr, _eefdd)
	}
	e.EncodeToken(start)
	_dfbag := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ffdb.CBhvr, _dfbag)
	if _ffdb.TavLst != nil {
		_gbcb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_ffdb.TavLst, _gbcb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLIterateIntervalPercentage struct {

	// Value
	ValAttr _da.ST_PositivePercentage
}

func (_eeage *ST_TLTimeNodeMasterRelation) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bfacb, _fbbbd := d.Token()
	if _fbbbd != nil {
		return _fbbbd
	}
	if _adebg, _eabfg := _bfacb.(_e.EndElement); _eabfg && _adebg.Name == start.Name {
		*_eeage = 1
		return nil
	}
	if _daecd, _dccabe := _bfacb.(_e.CharData); !_dccabe {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfacb)
	} else {
		switch string(_daecd) {
		case "":
			*_eeage = 0
		case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
			*_eeage = 1
		case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
			*_eeage = 2
		case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
			*_eeage = 3
		}
	}
	_bfacb, _fbbbd = d.Token()
	if _fbbbd != nil {
		return _fbbbd
	}
	if _gceg, _ffged := _bfacb.(_e.EndElement); _ffged && _gceg.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfacb)
}
func (_dcdfa *EG_Background) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_dagf:
	for {
		_gbdgg, _dccab := d.Token()
		if _dccab != nil {
			return _dccab
		}
		switch _fbfede := _gbdgg.(type) {
		case _e.StartElement:
			switch _fbfede.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_dcdfa.BgPr = NewCT_BackgroundProperties()
				if _begfg := d.DecodeElement(_dcdfa.BgPr, &_fbfede); _begfg != nil {
					return _begfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_dcdfa.BgRef = _da.NewCT_StyleMatrixReference()
				if _dgdc := d.DecodeElement(_dcdfa.BgRef, &_fbfede); _dgdc != nil {
					return _dgdc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _fbfede.Name)
				if _bfbga := d.Skip(); _bfbga != nil {
					return _bfbga
				}
			}
		case _e.EndElement:
			break _dagf
		case _e.CharData:
		}
	}
	return nil
}
func (_ecdf *CT_Presentation) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ecdf.ServerZoomAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_ecdf.ServerZoomAttr)})
	}
	if _ecdf.FirstSlideNumAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_ecdf.FirstSlideNumAttr)})
	}
	if _ecdf.ShowSpecialPlsOnTitleSldAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.ShowSpecialPlsOnTitleSldAttr))})
	}
	if _ecdf.RtlAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u0074\u006c"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.RtlAttr))})
	}
	if _ecdf.RemovePersonalInfoOnSaveAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.RemovePersonalInfoOnSaveAttr))})
	}
	if _ecdf.CompatModeAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.CompatModeAttr))})
	}
	if _ecdf.StrictFirstAndLastCharsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.StrictFirstAndLastCharsAttr))})
	}
	if _ecdf.EmbedTrueTypeFontsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.EmbedTrueTypeFontsAttr))})
	}
	if _ecdf.SaveSubsetFontsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.SaveSubsetFontsAttr))})
	}
	if _ecdf.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ecdf.AutoCompressPicturesAttr))})
	}
	if _ecdf.BookmarkIdSeedAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_ecdf.BookmarkIdSeedAttr)})
	}
	if _ecdf.ConformanceAttr != _ef.ST_ConformanceClassUnset {
		_gfdfe, _gedbgb := _ecdf.ConformanceAttr.MarshalXMLAttr(_e.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _gedbgb != nil {
			return _gedbgb
		}
		start.Attr = append(start.Attr, _gfdfe)
	}
	e.EncodeToken(start)
	if _ecdf.SldMasterIdLst != nil {
		_fdfa := _e.StartElement{Name: _e.Name{Local: "\u0070\u003as\u006c\u0064\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.SldMasterIdLst, _fdfa)
	}
	if _ecdf.NotesMasterIdLst != nil {
		_gabea := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.NotesMasterIdLst, _gabea)
	}
	if _ecdf.HandoutMasterIdLst != nil {
		_ebd := _e.StartElement{Name: _e.Name{Local: "p\u003ah\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061s\u0074\u0065\u0072\u0049dL\u0073\u0074"}}
		e.EncodeElement(_ecdf.HandoutMasterIdLst, _ebd)
	}
	if _ecdf.SldIdLst != nil {
		_gafe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.SldIdLst, _gafe)
	}
	if _ecdf.SldSz != nil {
		_dedc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u006c\u0064\u0053\u007a"}}
		e.EncodeElement(_ecdf.SldSz, _dedc)
	}
	_aefcg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006e\u006f\u0074\u0065\u0073\u0053z"}}
	e.EncodeElement(_ecdf.NotesSz, _aefcg)
	if _ecdf.SmartTags != nil {
		_dcbb := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_ecdf.SmartTags, _dcbb)
	}
	if _ecdf.EmbeddedFontLst != nil {
		_dbbc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.EmbeddedFontLst, _dbbc)
	}
	if _ecdf.CustShowLst != nil {
		_bbcec := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.CustShowLst, _bbcec)
	}
	if _ecdf.PhotoAlbum != nil {
		_dbbf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}}
		e.EncodeElement(_ecdf.PhotoAlbum, _dbbf)
	}
	if _ecdf.CustDataLst != nil {
		_acfb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.CustDataLst, _acfb)
	}
	if _ecdf.Kinsoku != nil {
		_feaad := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006b\u0069\u006e\u0073\u006f\u006bu"}}
		e.EncodeElement(_ecdf.Kinsoku, _feaad)
	}
	if _ecdf.DefaultTextStyle != nil {
		_cddc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0064e\u0066\u0061\u0075\u006c\u0074T\u0065\u0078t\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ecdf.DefaultTextStyle, _cddc)
	}
	if _ecdf.ModifyVerifier != nil {
		_edec := _e.StartElement{Name: _e.Name{Local: "\u0070\u003am\u006f\u0064\u0069f\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_ecdf.ModifyVerifier, _edec)
	}
	if _ecdf.ExtLst != nil {
		_cegf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdf.ExtLst, _cegf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLCommonTimeNodeData struct {

	// ID
	IdAttr *uint32

	// Preset ID
	PresetIDAttr *int32

	// Preset Types
	PresetClassAttr ST_TLTimeNodePresetClassType

	// Preset SubType
	PresetSubtypeAttr *int32

	// Duration
	DurAttr *ST_TLTime

	// Repeat Count
	RepeatCountAttr *ST_TLTime

	// Repeat Duration
	RepeatDurAttr *ST_TLTime

	// Speed
	SpdAttr *_da.ST_Percentage

	// Acceleration
	AccelAttr *_da.ST_PositiveFixedPercentage

	// Deceleration
	DecelAttr *_da.ST_PositiveFixedPercentage

	// Auto Reverse
	AutoRevAttr *bool

	// Restart
	RestartAttr ST_TLTimeNodeRestartType

	// Fill
	FillAttr ST_TLTimeNodeFillType

	// Synchronization Behavior
	SyncBehaviorAttr ST_TLTimeNodeSyncType

	// Time Filter
	TmFilterAttr *string

	// Event Filter
	EvtFilterAttr *string

	// Display
	DisplayAttr *bool

	// Master Relation
	MasterRelAttr ST_TLTimeNodeMasterRelation

	// Build level
	BldLvlAttr *int32

	// Group ID
	GrpIdAttr *uint32

	// After Effect
	AfterEffectAttr *bool

	// Node Type
	NodeTypeAttr ST_TLTimeNodeType

	// Node Placeholder
	NodePhAttr *bool

	// Start Conditions List
	StCondLst *CT_TLTimeConditionList

	// End Conditions List
	EndCondLst *CT_TLTimeConditionList

	// EndSync
	EndSync *CT_TLTimeCondition

	// Iterate
	Iterate *CT_TLIterateData

	// Children Time Node List
	ChildTnLst *CT_TimeNodeList

	// Sub-TimeNodes List
	SubTnLst *CT_TimeNodeList
}
type CT_CornerDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionCornerDirectionType
}

// ValidateWithPath validates the CT_CustomShow and its children, prefixing error messages with path
func (_gbea *CT_CustomShow) ValidateWithPath(path string) error {
	if _ddac := _gbea.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _ddac != nil {
		return _ddac
	}
	if _gbea.ExtLst != nil {
		if _cfc := _gbea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfc != nil {
			return _cfc
		}
	}
	return nil
}
func (_cgca ST_TLTriggerEvent) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cgca.String(), start)
}

// ValidateWithPath validates the CT_CustomerData and its children, prefixing error messages with path
func (_gdc *CT_CustomerData) ValidateWithPath(path string) error { return nil }
func (_cgaff ST_TransitionCornerDirectionType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dgacf := _e.Attr{}
	_dgacf.Name = name
	switch _cgaff {
	case ST_TransitionCornerDirectionTypeUnset:
		_dgacf.Value = ""
	case ST_TransitionCornerDirectionTypeLu:
		_dgacf.Value = "\u006c\u0075"
	case ST_TransitionCornerDirectionTypeRu:
		_dgacf.Value = "\u0072\u0075"
	case ST_TransitionCornerDirectionTypeLd:
		_dgacf.Value = "\u006c\u0064"
	case ST_TransitionCornerDirectionTypeRd:
		_dgacf.Value = "\u0072\u0064"
	}
	return _dgacf, nil
}
func (_gffca *ST_TLAnimateBehaviorValueType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dcfc, _abbea := d.Token()
	if _abbea != nil {
		return _abbea
	}
	if _gdbbg, _abgbg := _dcfc.(_e.EndElement); _abgbg && _gdbbg.Name == start.Name {
		*_gffca = 1
		return nil
	}
	if _dfcff, _fggbb := _dcfc.(_e.CharData); !_fggbb {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcfc)
	} else {
		switch string(_dfcff) {
		case "":
			*_gffca = 0
		case "\u0073\u0074\u0072":
			*_gffca = 1
		case "\u006e\u0075\u006d":
			*_gffca = 2
		case "\u0063\u006c\u0072":
			*_gffca = 3
		}
	}
	_dcfc, _abbea = d.Token()
	if _abbea != nil {
		return _abbea
	}
	if _ccbc, _bbfbe := _dcfc.(_e.EndElement); _bbfbe && _ccbc.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcfc)
}
func (_bffae ST_TLPreviousActionType) String() string {
	switch _bffae {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return ""
}

// Validate validates the CT_TLBuildParagraph and its children
func (_ddeg *CT_TLBuildParagraph) Validate() error {
	return _ddeg.ValidateWithPath("\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}
func (_bdaf *CT_TransitionStartSoundAction) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bdaf.LoopAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bdaf.LoopAttr))})
	}
	e.EncodeToken(start)
	_bagcd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073n\u0064"}}
	e.EncodeElement(_bdaf.Snd, _bagcd)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLTimeNodeTypeUnset          ST_TLTimeNodeType = 0
	ST_TLTimeNodeTypeClickEffect    ST_TLTimeNodeType = 1
	ST_TLTimeNodeTypeWithEffect     ST_TLTimeNodeType = 2
	ST_TLTimeNodeTypeAfterEffect    ST_TLTimeNodeType = 3
	ST_TLTimeNodeTypeMainSeq        ST_TLTimeNodeType = 4
	ST_TLTimeNodeTypeInteractiveSeq ST_TLTimeNodeType = 5
	ST_TLTimeNodeTypeClickPar       ST_TLTimeNodeType = 6
	ST_TLTimeNodeTypeWithGroup      ST_TLTimeNodeType = 7
	ST_TLTimeNodeTypeAfterGroup     ST_TLTimeNodeType = 8
	ST_TLTimeNodeTypeTmRoot         ST_TLTimeNodeType = 9
)

func (_fgebb *TagLst) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fgebb.CT_TagList = *NewCT_TagList()
_egddd:
	for {
		_gaefc, _agage := d.Token()
		if _agage != nil {
			return _agage
		}
		switch _cggf := _gaefc.(type) {
		case _e.StartElement:
			switch _cggf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_ebedc := NewCT_StringTag()
				if _fgfgc := d.DecodeElement(_ebedc, &_cggf); _fgfgc != nil {
					return _fgfgc
				}
				_fgebb.Tag = append(_fgebb.Tag, _ebedc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0061\u0067\u004c\u0073\u0074\u0020\u0025\u0076", _cggf.Name)
				if _ecfcf := d.Skip(); _ecfcf != nil {
					return _ecfcf
				}
			}
		case _e.EndElement:
			break _egddd
		case _e.CharData:
		}
	}
	return nil
}
func (_fdbfd ST_TLTimeNodePresetClassType) String() string {
	switch _fdbfd {
	case 0:
		return ""
	case 1:
		return "\u0065\u006e\u0074\u0072"
	case 2:
		return "\u0065\u0078\u0069\u0074"
	case 3:
		return "\u0065\u006d\u0070\u0068"
	case 4:
		return "\u0070\u0061\u0074\u0068"
	case 5:
		return "\u0076\u0065\u0072\u0062"
	case 6:
		return "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return ""
}
func (_feffa *CT_SlideIdList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _feffa.SldId != nil {
		_eefbcg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u006c\u0064\u0049\u0064"}}
		for _, _bcfc := range _feffa.SldId {
			e.EncodeElement(_bcfc, _eefbcg)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLIterateIntervalTime struct {

	// Time
	ValAttr ST_TLTime
}

func NewCT_TLTimeNodeSequence() *CT_TLTimeNodeSequence {
	_acege := &CT_TLTimeNodeSequence{}
	_acege.CTn = NewCT_TLCommonTimeNodeData()
	return _acege
}
func (_afcb *CT_ShowInfoKiosk) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _afcb.RestartAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_afcb.RestartAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_afag *CT_SlideMasterIdList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fabe:
	for {
		_bcba, _abfdg := d.Token()
		if _abfdg != nil {
			return _abfdg
		}
		switch _gade := _bcba.(type) {
		case _e.StartElement:
			switch _gade.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_befcf := NewCT_SlideMasterIdListEntry()
				if _fbab := d.DecodeElement(_befcf, &_gade); _fbab != nil {
					return _fbab
				}
				_afag.SldMasterId = append(_afag.SldMasterId, _befcf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gade.Name)
				if _adbbe := d.Skip(); _adbbe != nil {
					return _adbbe
				}
			}
		case _e.EndElement:
			break _fabe
		case _e.CharData:
		}
	}
	return nil
}
func (_ecfcd *ST_TLBehaviorOverrideType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_ecfcd = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_ecfcd = 1
	case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_ecfcd = 2
	}
	return nil
}
func (_eafddc *CT_TLSubShapeId) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _edded := range start.Attr {
		if _edded.Name.Local == "\u0073\u0070\u0069\u0064" {
			_cdag, _eeccd := _edded.Value, error(nil)
			if _eeccd != nil {
				return _eeccd
			}
			_eafddc.SpidAttr = _cdag
			continue
		}
	}
	for {
		_eaed, _caaag := d.Token()
		if _caaag != nil {
			return _d.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0053\u0075\u0062\u0053h\u0061\u0070\u0065I\u0064:\u0020\u0025\u0073", _caaag)
		}
		if _ffgc, _bbcf := _eaed.(_e.EndElement); _bbcf && _ffgc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gaeac *CT_TLTimeTargetElement) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eaba:
	for {
		_dccd, _ccbdb := d.Token()
		if _ccbdb != nil {
			return _ccbdb
		}
		switch _facaa := _dccd.(type) {
		case _e.StartElement:
			switch _facaa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
				_gaeac.SldTgt = NewCT_Empty()
				if _bbgfa := d.DecodeElement(_gaeac.SldTgt, &_facaa); _bbgfa != nil {
					return _bbgfa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
				_gaeac.SndTgt = _da.NewCT_EmbeddedWAVAudioFile()
				if _ebdcf := d.DecodeElement(_gaeac.SndTgt, &_facaa); _ebdcf != nil {
					return _ebdcf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
				_gaeac.SpTgt = NewCT_TLShapeTargetElement()
				if _gaafd := d.DecodeElement(_gaeac.SpTgt, &_facaa); _gaafd != nil {
					return _gaafd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
				_gaeac.InkTgt = NewCT_TLSubShapeId()
				if _eacgd := d.DecodeElement(_gaeac.InkTgt, &_facaa); _eacgd != nil {
					return _eacgd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _facaa.Name)
				if _ccefe := d.Skip(); _ccefe != nil {
					return _ccefe
				}
			}
		case _e.EndElement:
			break _eaba
		case _e.CharData:
		}
	}
	return nil
}
func (_gdaaf *ST_SplitterBarState) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_feeg, _fbebe := d.Token()
	if _fbebe != nil {
		return _fbebe
	}
	if _ccba, _egdcf := _feeg.(_e.EndElement); _egdcf && _ccba.Name == start.Name {
		*_gdaaf = 1
		return nil
	}
	if _bcab, _ggdag := _feeg.(_e.CharData); !_ggdag {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feeg)
	} else {
		switch string(_bcab) {
		case "":
			*_gdaaf = 0
		case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
			*_gdaaf = 1
		case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
			*_gdaaf = 2
		case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
			*_gdaaf = 3
		}
	}
	_feeg, _fbebe = d.Token()
	if _fbebe != nil {
		return _fbebe
	}
	if _bfgbbc, _bbgfb := _feeg.(_e.EndElement); _bbgfb && _bfgbbc.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feeg)
}
func NewCT_TLSetBehavior() *CT_TLSetBehavior {
	_gaeaa := &CT_TLSetBehavior{}
	_gaeaa.CBhvr = NewCT_TLCommonBehaviorData()
	return _gaeaa
}
func (_dbgbe ST_TLAnimateBehaviorCalcMode) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cfdb := _e.Attr{}
	_cfdb.Name = name
	switch _dbgbe {
	case ST_TLAnimateBehaviorCalcModeUnset:
		_cfdb.Value = ""
	case ST_TLAnimateBehaviorCalcModeDiscrete:
		_cfdb.Value = "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case ST_TLAnimateBehaviorCalcModeLin:
		_cfdb.Value = "\u006c\u0069\u006e"
	case ST_TLAnimateBehaviorCalcModeFmla:
		_cfdb.Value = "\u0066\u006d\u006c\u0061"
	}
	return _cfdb, nil
}
func (_ddagc ST_TLDiagramBuildType) String() string {
	switch _ddagc {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006fl\u0065"
	case 2:
		return "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 3:
		return "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case 4:
		return "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 5:
		return "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case 6:
		return "\u0063\u0077"
	case 7:
		return "\u0063\u0077\u0049\u006e"
	case 8:
		return "\u0063\u0077\u004fu\u0074"
	case 9:
		return "\u0063\u0063\u0077"
	case 10:
		return "\u0063\u0063\u0077I\u006e"
	case 11:
		return "\u0063\u0063\u0077\u004f\u0075\u0074"
	case 12:
		return "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case 13:
		return "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case 14:
		return "\u0075\u0070"
	case 15:
		return "\u0064\u006f\u0077\u006e"
	case 16:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 17:
		return "\u0063\u0075\u0073\u0074"
	}
	return ""
}

type ST_PrintWhat byte

func (_gced *CT_ExtensionListModify) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cgbb := range start.Attr {
		if _cgbb.Name.Local == "\u006d\u006f\u0064" {
			_beaca, _dadc := _a.ParseBool(_cgbb.Value)
			if _dadc != nil {
				return _dadc
			}
			_gced.ModAttr = &_beaca
			continue
		}
	}
_ccae:
	for {
		_cdbb, _ceg := d.Token()
		if _ceg != nil {
			return _ceg
		}
		switch _ccbg := _cdbb.(type) {
		case _e.StartElement:
			switch _ccbg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fgfc := NewCT_Extension()
				if _ebce := d.DecodeElement(_fgfc, &_ccbg); _ebce != nil {
					return _ebce
				}
				_gced.Ext = append(_gced.Ext, _fgfc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0045\u0078\u0074\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069\u0066\u0079\u0020\u0025\u0076", _ccbg.Name)
				if _eebc := d.Skip(); _eebc != nil {
					return _eebc
				}
			}
		case _e.EndElement:
			break _ccae
		case _e.CharData:
		}
	}
	return nil
}

type CT_ControlList struct {

	// Embedded Control
	Control []*CT_Control
}

func (_fead *CT_CornerDirectionTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _debe := range start.Attr {
		if _debe.Name.Local == "\u0064\u0069\u0072" {
			_fead.DirAttr.UnmarshalXMLAttr(_debe)
			continue
		}
	}
	for {
		_dgcb, _eaef := d.Token()
		if _eaef != nil {
			return _d.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u006e\u0065\u0072\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006esi\u0074\u0069\u006fn\u003a \u0025\u0073", _eaef)
		}
		if _fbfb, _fae := _dgcb.(_e.EndElement); _fae && _fbfb.Name == start.Name {
			break
		}
	}
	return nil
}

type Notes struct{ CT_NotesSlide }

func (_dfbcg *CT_SlideViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_aafef := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_dfbcg.CSldViewPr, _aafef)
	if _dfbcg.ExtLst != nil {
		_cefd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfbcg.ExtLst, _cefd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gf *AG_ChildSlide) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gf.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gf.ShowMasterSpAttr))})
	}
	if _gf.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gf.ShowMasterPhAnimAttr))})
	}
	return nil
}
func (_ecbce *CT_GroupShapeChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bbfb:
	for {
		_gda, _beeg := d.Token()
		if _beeg != nil {
			return _beeg
		}
		switch _fca := _gda.(type) {
		case _e.StartElement:
			switch _fca.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_bbac := NewCT_Shape()
				if _dabd := d.DecodeElement(_bbac, &_fca); _dabd != nil {
					return _dabd
				}
				_ecbce.Sp = append(_ecbce.Sp, _bbac)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_bcgg := NewCT_GroupShape()
				if _gead := d.DecodeElement(_bcgg, &_fca); _gead != nil {
					return _gead
				}
				_ecbce.GrpSp = append(_ecbce.GrpSp, _bcgg)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_cddb := NewCT_GraphicalObjectFrame()
				if _egfg := d.DecodeElement(_cddb, &_fca); _egfg != nil {
					return _egfg
				}
				_ecbce.GraphicFrame = append(_ecbce.GraphicFrame, _cddb)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_aga := NewCT_Connector()
				if _gefbg := d.DecodeElement(_aga, &_fca); _gefbg != nil {
					return _gefbg
				}
				_ecbce.CxnSp = append(_ecbce.CxnSp, _aga)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_dgdg := NewCT_Picture()
				if _gdfd := d.DecodeElement(_dgdg, &_fca); _gdfd != nil {
					return _gdfd
				}
				_ecbce.Pic = append(_ecbce.Pic, _dgdg)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_dfaf := NewCT_Rel()
				if _cbfg := d.DecodeElement(_dfaf, &_fca); _cbfg != nil {
					return _cbfg
				}
				_ecbce.ContentPart = append(_ecbce.ContentPart, _dfaf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fca.Name)
				if _cggg := d.Skip(); _cggg != nil {
					return _cggg
				}
			}
		case _e.EndElement:
			break _bbfb
		case _e.CharData:
		}
	}
	return nil
}
func (_bcacc *CT_ShapeNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bcacc.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_bcacc.CNvSpPr = _da.NewCT_NonVisualDrawingShapeProps()
	_bcacc.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_eceda:
	for {
		_cbga, _ebaga := d.Token()
		if _ebaga != nil {
			return _ebaga
		}
		switch _ccdbc := _cbga.(type) {
		case _e.StartElement:
			switch _ccdbc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _befe := d.DecodeElement(_bcacc.CNvPr, &_ccdbc); _befe != nil {
					return _befe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _dgaf := d.DecodeElement(_bcacc.CNvSpPr, &_ccdbc); _dgaf != nil {
					return _dgaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _efeeg := d.DecodeElement(_bcacc.NvPr, &_ccdbc); _efeeg != nil {
					return _efeeg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ccdbc.Name)
				if _gbaa := d.Skip(); _gbaa != nil {
					return _gbaa
				}
			}
		case _e.EndElement:
			break _eceda
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLSubShapeId and its children
func (_gabg *CT_TLSubShapeId) Validate() error {
	return _gabg.ValidateWithPath("\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064")
}

// Validate validates the CT_SlideTransition and its children
func (_acfe *CT_SlideTransition) Validate() error {
	return _acfe.ValidateWithPath("\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

const (
	ST_OleObjectFollowColorSchemeUnset             ST_OleObjectFollowColorScheme = 0
	ST_OleObjectFollowColorSchemeNone              ST_OleObjectFollowColorScheme = 1
	ST_OleObjectFollowColorSchemeFull              ST_OleObjectFollowColorScheme = 2
	ST_OleObjectFollowColorSchemeTextAndBackground ST_OleObjectFollowColorScheme = 3
)

func (_afgc *CT_TLBuildParagraph) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bcaag := range start.Attr {
		if _bcaag.Name.Local == "\u0062\u0075\u0069l\u0064" {
			_afgc.BuildAttr.UnmarshalXMLAttr(_bcaag)
			continue
		}
		if _bcaag.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_fgcd, _fegc := _a.ParseUint(_bcaag.Value, 10, 32)
			if _fegc != nil {
				return _fegc
			}
			_facc := uint32(_fgcd)
			_afgc.BldLvlAttr = &_facc
			continue
		}
		if _bcaag.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_agcc, _fdcef := _a.ParseBool(_bcaag.Value)
			if _fdcef != nil {
				return _fdcef
			}
			_afgc.AnimBgAttr = &_agcc
			continue
		}
		if _bcaag.Name.Local == "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067" {
			_beade, _dfecd := _a.ParseBool(_bcaag.Value)
			if _dfecd != nil {
				return _dfecd
			}
			_afgc.AutoUpdateAnimBgAttr = &_beade
			continue
		}
		if _bcaag.Name.Local == "\u0072\u0065\u0076" {
			_baadc, _cabcc := _a.ParseBool(_bcaag.Value)
			if _cabcc != nil {
				return _cabcc
			}
			_afgc.RevAttr = &_baadc
			continue
		}
		if _bcaag.Name.Local == "\u0061d\u0076\u0041\u0075\u0074\u006f" {
			_cbbbc, _efcfc := ParseUnionST_TLTime(_bcaag.Value)
			if _efcfc != nil {
				return _efcfc
			}
			_afgc.AdvAutoAttr = &_cbbbc
			continue
		}
		if _bcaag.Name.Local == "\u0073\u0070\u0069\u0064" {
			_egeba, _gfgca := _a.ParseUint(_bcaag.Value, 10, 32)
			if _gfgca != nil {
				return _gfgca
			}
			_fdaef := uint32(_egeba)
			_afgc.SpidAttr = &_fdaef
			continue
		}
		if _bcaag.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_cafae, _acff := _a.ParseUint(_bcaag.Value, 10, 32)
			if _acff != nil {
				return _acff
			}
			_dbfcb := uint32(_cafae)
			_afgc.GrpIdAttr = &_dbfcb
			continue
		}
		if _bcaag.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_fadfa, _ecgef := _a.ParseBool(_bcaag.Value)
			if _ecgef != nil {
				return _ecgef
			}
			_afgc.UiExpandAttr = &_fadfa
			continue
		}
	}
_fbcfd:
	for {
		_ecbee, _cbbe := d.Token()
		if _cbbe != nil {
			return _cbbe
		}
		switch _ffad := _ecbee.(type) {
		case _e.StartElement:
			switch _ffad.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}:
				_afgc.TmplLst = NewCT_TLTemplateList()
				if _aadb := d.DecodeElement(_afgc.TmplLst, &_ffad); _aadb != nil {
					return _aadb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064Pa\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025\u0076", _ffad.Name)
				if _aacee := d.Skip(); _aacee != nil {
					return _aacee
				}
			}
		case _e.EndElement:
			break _fbcfd
		case _e.CharData:
		}
	}
	return nil
}
func (_aaeg *CT_TLMediaNodeAudio) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_aaeg.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _dgefd := range start.Attr {
		if _dgefd.Name.Local == "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_gcffef, _agcb := _a.ParseBool(_dgefd.Value)
			if _agcb != nil {
				return _agcb
			}
			_aaeg.IsNarrationAttr = &_gcffef
			continue
		}
	}
_eebad:
	for {
		_dbecbc, _ddca := d.Token()
		if _ddca != nil {
			return _ddca
		}
		switch _fdcce := _dbecbc.(type) {
		case _e.StartElement:
			switch _fdcce.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _aeaca := d.DecodeElement(_aaeg.CMediaNode, &_fdcce); _aeaca != nil {
					return _aeaca
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0041\u0075\u0064\u0069\u006f\u0020\u0025\u0076", _fdcce.Name)
				if _ffde := d.Skip(); _ffde != nil {
					return _ffde
				}
			}
		case _e.EndElement:
			break _eebad
		case _e.CharData:
		}
	}
	return nil
}
func (_beeag ST_TLAnimateEffectTransition) Validate() error { return _beeag.ValidateWithPath("") }

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_gab *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _defg, _gdfa := range _gab.Sp {
		if _cffb := _gdfa.ValidateWithPath(_d.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _defg)); _cffb != nil {
			return _cffb
		}
	}
	for _bdfd, _gbag := range _gab.GrpSp {
		if _defb := _gbag.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _bdfd)); _defb != nil {
			return _defb
		}
	}
	for _gbcfe, _fdgc := range _gab.GraphicFrame {
		if _edfab := _fdgc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _gbcfe)); _edfab != nil {
			return _edfab
		}
	}
	for _fcea, _dbac := range _gab.CxnSp {
		if _agaa := _dbac.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _fcea)); _agaa != nil {
			return _agaa
		}
	}
	for _dgga, _fffc := range _gab.Pic {
		if _egbg := _fffc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _dgga)); _egbg != nil {
			return _egbg
		}
	}
	for _fbfc, _egfd := range _gab.ContentPart {
		if _bbca := _egfd.ValidateWithPath(_d.Sprintf("\u0025s\u002fC\u006f\u006e\u0074\u0065\u006et\u0050\u0061r\u0074\u005b\u0025\u0064\u005d", path, _fbfc)); _bbca != nil {
			return _bbca
		}
	}
	return nil
}
func (_bccef *CT_TLTimeNodeExclusive) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_agfgg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_bccef.CTn, _agfgg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type ST_TLChartSubelementType byte

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_eefbg *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _ecfb := _eefbg.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _ecfb != nil {
		return _ecfb
	}
	if _agffd := _eefbg.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _agffd != nil {
		return _agffd
	}
	if _beag := _eefbg.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _beag != nil {
		return _beag
	}
	if _cdba := _eefbg.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _cdba != nil {
		return _cdba
	}
	if _eefbg.ExtLst != nil {
		if _faef := _eefbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faef != nil {
			return _faef
		}
	}
	return nil
}
func (_ecdgc *CmLst) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ecdgc.CT_CommentList = *NewCT_CommentList()
_ddggg:
	for {
		_caacd, _fgfd := d.Token()
		if _fgfd != nil {
			return _fgfd
		}
		switch _gega := _caacd.(type) {
		case _e.StartElement:
			switch _gega.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_cdcc := NewCT_Comment()
				if _gdcdg := d.DecodeElement(_cdcc, &_gega); _gdcdg != nil {
					return _gdcdg
				}
				_ecdgc.Cm = append(_ecdgc.Cm, _cdcc)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u006d\u004cs\u0074 \u0025\u0076", _gega.Name)
				if _ecdgce := d.Skip(); _ecdgce != nil {
					return _ecdgce
				}
			}
		case _e.EndElement:
			break _ddggg
		case _e.CharData:
		}
	}
	return nil
}
func (_gdfca ST_Direction) ValidateWithPath(path string) error {
	switch _gdfca {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdfca))
	}
	return nil
}

type CT_GroupShape struct {

	// Non-Visual Properties for a Group Shape
	NvGrpSpPr *CT_GroupShapeNonVisual

	// Group Shape Properties
	GrpSpPr *_da.CT_GroupShapeProperties
	Choice  []*CT_GroupShapeChoice
	ExtLst  *CT_ExtensionListModify
}

func (_bfecc ST_TLTimeNodeMasterRelation) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bfecc.String(), start)
}

// ValidateWithPath validates the CT_TLIterateIntervalTime and its children, prefixing error messages with path
func (_ebfcd *CT_TLIterateIntervalTime) ValidateWithPath(path string) error {
	if _fgcdg := _ebfcd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fgcdg != nil {
		return _fgcdg
	}
	return nil
}

// Validate validates the CT_TLAnimVariantIntegerVal and its children
func (_gdgaea *CT_TLAnimVariantIntegerVal) Validate() error {
	return _gdgaea.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c")
}

// ValidateWithPath validates the CT_WebProperties and its children, prefixing error messages with path
func (_ecfd *CT_WebProperties) ValidateWithPath(path string) error {
	if _ffbage := _ecfd.ImgSzAttr.ValidateWithPath(path + "\u002f\u0049\u006d\u0067\u0053\u007a\u0041\u0074\u0074\u0072"); _ffbage != nil {
		return _ffbage
	}
	if _addeg := _ecfd.ClrAttr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0041\u0074\u0074\u0072"); _addeg != nil {
		return _addeg
	}
	if _ecfd.ExtLst != nil {
		if _ecgd := _ecfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecgd != nil {
			return _ecgd
		}
	}
	return nil
}
func NewCT_TLIterateIntervalPercentage() *CT_TLIterateIntervalPercentage {
	_dedf := &CT_TLIterateIntervalPercentage{}
	return _dedf
}

type CT_Control struct {
	ExtLst         *CT_ExtensionList
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}
type ST_SlideSizeType byte

func (_dbdfde ST_TLTimeIndefinite) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dfca := _e.Attr{}
	_dfca.Name = name
	switch _dbdfde {
	case ST_TLTimeIndefiniteUnset:
		_dfca.Value = ""
	case ST_TLTimeIndefiniteIndefinite:
		_dfca.Value = "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return _dfca, nil
}
func (_bgfg ST_TLTimeNodeMasterRelation) Validate() error { return _bgfg.ValidateWithPath("") }

// Validate validates the CT_EmbeddedFontListEntry and its children
func (_ddff *CT_EmbeddedFontListEntry) Validate() error {
	return _ddff.ValidateWithPath("\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}
func (_fcege *CT_TransitionStartSoundAction) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fcege.Snd = _da.NewCT_EmbeddedWAVAudioFile()
	for _, _bcgc := range start.Attr {
		if _bcgc.Name.Local == "\u006c\u006f\u006f\u0070" {
			_dfbfd, _gdcgg := _a.ParseBool(_bcgc.Value)
			if _gdcgg != nil {
				return _gdcgg
			}
			_fcege.LoopAttr = &_dfbfd
			continue
		}
	}
_egaff:
	for {
		_cbeg, _becc := d.Token()
		if _becc != nil {
			return _becc
		}
		switch _ggae := _cbeg.(type) {
		case _e.StartElement:
			switch _ggae.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				if _eccec := d.DecodeElement(_fcege.Snd, &_ggae); _eccec != nil {
					return _eccec
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074a\u0072\u0074\u0053\u006f\u0075\u006ed\u0041\u0063t\u0069\u006fn\u0020%\u0076", _ggae.Name)
				if _ceeag := d.Skip(); _ceeag != nil {
					return _ceeag
				}
			}
		case _e.EndElement:
			break _egaff
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_TLMediaNodeVideo() *CT_TLMediaNodeVideo {
	_cgfab := &CT_TLMediaNodeVideo{}
	_cgfab.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _cgfab
}
func NewCmAuthorLst() *CmAuthorLst {
	_bdbgf := &CmAuthorLst{}
	_bdbgf.CT_CommentAuthorList = *NewCT_CommentAuthorList()
	return _bdbgf
}

type ST_TransitionInOutDirectionType byte

func NewCT_EightDirectionTransition() *CT_EightDirectionTransition {
	_eecg := &CT_EightDirectionTransition{}
	return _eecg
}

// Validate validates the CmLst and its children
func (_cffe *CmLst) Validate() error { return _cffe.ValidateWithPath("\u0043\u006d\u004cs\u0074") }

type CT_PictureNonVisual struct {
	CNvPr *_da.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_da.CT_NonVisualPictureProperties
	NvPr     *CT_ApplicationNonVisualDrawingProps
}

// ValidateWithPath validates the Sld and its children, prefixing error messages with path
func (_cdfee *Sld) ValidateWithPath(path string) error {
	if _eecf := _cdfee.CT_Slide.ValidateWithPath(path); _eecf != nil {
		return _eecf
	}
	return nil
}

// Validate validates the ViewPr and its children
func (_bfcdgd *ViewPr) Validate() error {
	return _bfcdgd.ValidateWithPath("\u0056\u0069\u0065\u0077\u0050\u0072")
}
func (_cfbdde *ST_PrintWhat) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dccf, _cbeaf := d.Token()
	if _cbeaf != nil {
		return _cbeaf
	}
	if _eeeec, _dcaebc := _dccf.(_e.EndElement); _dcaebc && _eeeec.Name == start.Name {
		*_cfbdde = 1
		return nil
	}
	if _dbdfgd, _daegg := _dccf.(_e.CharData); !_daegg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dccf)
	} else {
		switch string(_dbdfgd) {
		case "":
			*_cfbdde = 0
		case "\u0073\u006c\u0069\u0064\u0065\u0073":
			*_cfbdde = 1
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
			*_cfbdde = 2
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
			*_cfbdde = 3
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
			*_cfbdde = 4
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
			*_cfbdde = 5
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
			*_cfbdde = 6
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
			*_cfbdde = 7
		case "\u006e\u006f\u0074e\u0073":
			*_cfbdde = 8
		case "\u006fu\u0074\u006c\u0069\u006e\u0065":
			*_cfbdde = 9
		}
	}
	_dccf, _cbeaf = d.Token()
	if _cbeaf != nil {
		return _cbeaf
	}
	if _dbgfd, _cfbdcg := _dccf.(_e.EndElement); _cfbdcg && _dbgfd.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dccf)
}

// Validate validates the CT_TLOleChartTargetElement and its children
func (_cbcg *CT_TLOleChartTargetElement) Validate() error {
	return _cbcg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074")
}
func (_eedfd *CT_SlideTransitionChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _eedfd.Blinds != nil {
		_caga := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u006e\u0064\u0073"}}
		e.EncodeElement(_eedfd.Blinds, _caga)
	}
	if _eedfd.Checker != nil {
		_fdggb := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0068\u0065\u0063\u006b\u0065r"}}
		e.EncodeElement(_eedfd.Checker, _fdggb)
	}
	if _eedfd.Circle != nil {
		_eeacb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0069\u0072\u0063\u006c\u0065"}}
		e.EncodeElement(_eedfd.Circle, _eeacb)
	}
	if _eedfd.Dissolve != nil {
		_cceg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}}
		e.EncodeElement(_eedfd.Dissolve, _cceg)
	}
	if _eedfd.Comb != nil {
		_aegdd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006f\u006d\u0062"}}
		e.EncodeElement(_eedfd.Comb, _aegdd)
	}
	if _eedfd.Cover != nil {
		_fgff := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_eedfd.Cover, _fgff)
	}
	if _eedfd.Cut != nil {
		_fgbf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063u\u0074"}}
		e.EncodeElement(_eedfd.Cut, _fgbf)
	}
	if _eedfd.Diamond != nil {
		_ebfe := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0064\u0069\u0061\u006d\u006f\u006ed"}}
		e.EncodeElement(_eedfd.Diamond, _ebfe)
	}
	if _eedfd.Fade != nil {
		_bgbdd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0066\u0061\u0064\u0065"}}
		e.EncodeElement(_eedfd.Fade, _bgbdd)
	}
	if _eedfd.Newsflash != nil {
		_aeecd := _e.StartElement{Name: _e.Name{Local: "p\u003a\u006e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"}}
		e.EncodeElement(_eedfd.Newsflash, _aeecd)
	}
	if _eedfd.Plus != nil {
		_ebdc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u006c\u0075\u0073"}}
		e.EncodeElement(_eedfd.Plus, _ebdc)
	}
	if _eedfd.Pull != nil {
		_adcfc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0075\u006c\u006c"}}
		e.EncodeElement(_eedfd.Pull, _adcfc)
	}
	if _eedfd.Push != nil {
		_gbeg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0075\u0073\u0068"}}
		e.EncodeElement(_eedfd.Push, _gbeg)
	}
	if _eedfd.Random != nil {
		_aace := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0072\u0061\u006e\u0064\u006f\u006d"}}
		e.EncodeElement(_eedfd.Random, _aace)
	}
	if _eedfd.RandomBar != nil {
		_ecge := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0072\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"}}
		e.EncodeElement(_eedfd.RandomBar, _ecge)
	}
	if _eedfd.Split != nil {
		_babc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0070\u006c\u0069\u0074"}}
		e.EncodeElement(_eedfd.Split, _babc)
	}
	if _eedfd.Strips != nil {
		_eddgc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0069\u0070\u0073"}}
		e.EncodeElement(_eedfd.Strips, _eddgc)
	}
	if _eedfd.Wedge != nil {
		_fcfc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0077\u0065\u0064\u0067\u0065"}}
		e.EncodeElement(_eedfd.Wedge, _fcfc)
	}
	if _eedfd.Wheel != nil {
		_ecgg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0077\u0068\u0065\u0065\u006c"}}
		e.EncodeElement(_eedfd.Wheel, _ecgg)
	}
	if _eedfd.Wipe != nil {
		_gcfc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0077\u0069\u0070\u0065"}}
		e.EncodeElement(_eedfd.Wipe, _gcfc)
	}
	if _eedfd.Zoom != nil {
		_bacf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u007a\u006f\u006f\u006d"}}
		e.EncodeElement(_eedfd.Zoom, _bacf)
	}
	return nil
}
func (_fbgbd *ST_PlaceholderType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_edgeb, _abfee := d.Token()
	if _abfee != nil {
		return _abfee
	}
	if _ecfgf, _begec := _edgeb.(_e.EndElement); _begec && _ecfgf.Name == start.Name {
		*_fbgbd = 1
		return nil
	}
	if _dcaaf, _bbfcd := _edgeb.(_e.CharData); !_bbfcd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edgeb)
	} else {
		switch string(_dcaaf) {
		case "":
			*_fbgbd = 0
		case "\u0074\u0069\u0074l\u0065":
			*_fbgbd = 1
		case "\u0062\u006f\u0064\u0079":
			*_fbgbd = 2
		case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
			*_fbgbd = 3
		case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
			*_fbgbd = 4
		case "\u0064\u0074":
			*_fbgbd = 5
		case "\u0073\u006c\u0064\u004e\u0075\u006d":
			*_fbgbd = 6
		case "\u0066\u0074\u0072":
			*_fbgbd = 7
		case "\u0068\u0064\u0072":
			*_fbgbd = 8
		case "\u006f\u0062\u006a":
			*_fbgbd = 9
		case "\u0063\u0068\u0061r\u0074":
			*_fbgbd = 10
		case "\u0074\u0062\u006c":
			*_fbgbd = 11
		case "\u0063l\u0069\u0070\u0041\u0072\u0074":
			*_fbgbd = 12
		case "\u0064\u0067\u006d":
			*_fbgbd = 13
		case "\u006d\u0065\u0064i\u0061":
			*_fbgbd = 14
		case "\u0073\u006c\u0064\u0049\u006d\u0067":
			*_fbgbd = 15
		case "\u0070\u0069\u0063":
			*_fbgbd = 16
		}
	}
	_edgeb, _abfee = d.Token()
	if _abfee != nil {
		return _abfee
	}
	if _eggge, _agcfd := _edgeb.(_e.EndElement); _agcfd && _eggge.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edgeb)
}
func (_acdcc *CT_TagList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_ebaad:
	for {
		_befdb, _fgced := d.Token()
		if _fgced != nil {
			return _fgced
		}
		switch _dcag := _befdb.(type) {
		case _e.StartElement:
			switch _dcag.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_feggb := NewCT_StringTag()
				if _debc := d.DecodeElement(_feggb, &_dcag); _debc != nil {
					return _debc
				}
				_acdcc.Tag = append(_acdcc.Tag, _feggb)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fT\u0061\u0067\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dcag.Name)
				if _gdbdd := d.Skip(); _gdbdd != nil {
					return _gdbdd
				}
			}
		case _e.EndElement:
			break _ebaad
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_TLIterateData() *CT_TLIterateData { _gfccf := &CT_TLIterateData{}; return _gfccf }

type CT_IndexRange struct {

	// Start
	StAttr uint32

	// End
	EndAttr uint32
}
type CT_TLAnimVariantIntegerVal struct {

	// Value
	ValAttr int32
}

// ValidateWithPath validates the CT_SlideViewProperties and its children, prefixing error messages with path
func (_dbebf *CT_SlideViewProperties) ValidateWithPath(path string) error {
	if _aabc := _dbebf.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _aabc != nil {
		return _aabc
	}
	if _dbebf.ExtLst != nil {
		if _cafg := _dbebf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafg != nil {
			return _cafg
		}
	}
	return nil
}
func (_adafbe *CT_SlideTiming) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bfae:
	for {
		_abeb, _cadag := d.Token()
		if _cadag != nil {
			return _cadag
		}
		switch _ffac := _abeb.(type) {
		case _e.StartElement:
			switch _ffac.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				_adafbe.TnLst = NewCT_TimeNodeList()
				if _bgdg := d.DecodeElement(_adafbe.TnLst, &_ffac); _bgdg != nil {
					return _bgdg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}:
				_adafbe.BldLst = NewCT_BuildList()
				if _gfbg := d.DecodeElement(_adafbe.BldLst, &_ffac); _gfbg != nil {
					return _gfbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adafbe.ExtLst = NewCT_ExtensionListModify()
				if _cbbae := d.DecodeElement(_adafbe.ExtLst, &_ffac); _cbbae != nil {
					return _cbbae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0069m\u0069n\u0067\u0020\u0025\u0076", _ffac.Name)
				if _ebgg := d.Skip(); _ebgg != nil {
					return _ebgg
				}
			}
		case _e.EndElement:
			break _bfae
		case _e.CharData:
		}
	}
	return nil
}
func (_eageg *CT_TimeNodeList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _eageg.Par != nil {
		_fgfcb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070a\u0072"}}
		for _, _bbdc := range _eageg.Par {
			e.EncodeElement(_bbdc, _fgfcb)
		}
	}
	if _eageg.Seq != nil {
		_abdc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073e\u0071"}}
		for _, _dabdc := range _eageg.Seq {
			e.EncodeElement(_dabdc, _abdc)
		}
	}
	if _eageg.Excl != nil {
		_edabc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0063\u006c"}}
		for _, _cefae := range _eageg.Excl {
			e.EncodeElement(_cefae, _edabc)
		}
	}
	if _eageg.Anim != nil {
		_ceeec := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0061\u006e\u0069\u006d"}}
		for _, _dbde := range _eageg.Anim {
			e.EncodeElement(_dbde, _ceeec)
		}
	}
	if _eageg.AnimClr != nil {
		_aedcaf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0043\u006cr"}}
		for _, _aeabd := range _eageg.AnimClr {
			e.EncodeElement(_aeabd, _aedcaf)
		}
	}
	if _eageg.AnimEffect != nil {
		_fdge := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}}
		for _, _ccfag := range _eageg.AnimEffect {
			e.EncodeElement(_ccfag, _fdge)
		}
	}
	if _eageg.AnimMotion != nil {
		_gacgc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}}
		for _, _bbcaf := range _eageg.AnimMotion {
			e.EncodeElement(_bbcaf, _gacgc)
		}
	}
	if _eageg.AnimRot != nil {
		_cfeee := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0052\u006ft"}}
		for _, _eaaef := range _eageg.AnimRot {
			e.EncodeElement(_eaaef, _cfeee)
		}
	}
	if _eageg.AnimScale != nil {
		_efefa := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0061\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"}}
		for _, _agcda := range _eageg.AnimScale {
			e.EncodeElement(_agcda, _efefa)
		}
	}
	if _eageg.Cmd != nil {
		_ggbeg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063m\u0064"}}
		for _, _fcfgb := range _eageg.Cmd {
			e.EncodeElement(_fcfgb, _ggbeg)
		}
	}
	if _eageg.Set != nil {
		_gfdb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073e\u0074"}}
		for _, _gfbc := range _eageg.Set {
			e.EncodeElement(_gfbc, _gfdb)
		}
	}
	if _eageg.Audio != nil {
		_gcfg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f"}}
		for _, _agfcb := range _eageg.Audio {
			e.EncodeElement(_agfcb, _gcfg)
		}
	}
	if _eageg.Video != nil {
		_dbgbc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0076\u0069\u0064\u0065\u006f"}}
		for _, _acbef := range _eageg.Video {
			e.EncodeElement(_acbef, _dbgbc)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bcgfg ST_TLBehaviorAccumulateType) ValidateWithPath(path string) error {
	switch _bcgfg {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcgfg))
	}
	return nil
}
func (_bgfd ST_TLBehaviorAdditiveType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fcbba := _e.Attr{}
	_fcbba.Name = name
	switch _bgfd {
	case ST_TLBehaviorAdditiveTypeUnset:
		_fcbba.Value = ""
	case ST_TLBehaviorAdditiveTypeBase:
		_fcbba.Value = "\u0062\u0061\u0073\u0065"
	case ST_TLBehaviorAdditiveTypeSum:
		_fcbba.Value = "\u0073\u0075\u006d"
	case ST_TLBehaviorAdditiveTypeRepl:
		_fcbba.Value = "\u0072\u0065\u0070\u006c"
	case ST_TLBehaviorAdditiveTypeMult:
		_fcbba.Value = "\u006d\u0075\u006c\u0074"
	case ST_TLBehaviorAdditiveTypeNone:
		_fcbba.Value = "\u006e\u006f\u006e\u0065"
	}
	return _fcbba, nil
}
func (_ccgb *CT_GraphicalObjectFrame) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ccgb.BwModeAttr != _da.ST_BlackWhiteModeUnset {
		_cgaf, _dff := _ccgb.BwModeAttr.MarshalXMLAttr(_e.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _dff != nil {
			return _dff
		}
		start.Attr = append(start.Attr, _cgaf)
	}
	e.EncodeToken(start)
	_caac := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_ccgb.NvGraphicFramePr, _caac)
	_egea := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_ccgb.Xfrm, _egea)
	_bfdc := _e.StartElement{Name: _e.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_ccgb.Graphic, _bfdc)
	if _ccgb.ExtLst != nil {
		_gbce := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccgb.ExtLst, _gbce)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the HandoutMaster and its children
func (_egefd *HandoutMaster) Validate() error {
	return _egefd.ValidateWithPath("\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_gca *AG_TLBuild) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gca.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_gca.SpidAttr)})
	}
	if _gca.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_gca.GrpIdAttr)})
	}
	if _gca.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gca.UiExpandAttr))})
	}
	return nil
}

type ST_PrintColorMode byte

func (_bafc *CT_HandoutMaster) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bafc.CSld = NewCT_CommonSlideData()
	_bafc.ClrMap = _da.NewCT_ColorMapping()
_ddcc:
	for {
		_facg, _ede := d.Token()
		if _ede != nil {
			return _ede
		}
		switch _ddaef := _facg.(type) {
		case _e.StartElement:
			switch _ddaef.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _dfdc := d.DecodeElement(_bafc.CSld, &_ddaef); _dfdc != nil {
					return _dfdc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _fecf := d.DecodeElement(_bafc.ClrMap, &_ddaef); _fecf != nil {
					return _fecf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_bafc.Hf = NewCT_HeaderFooter()
				if _agbe := d.DecodeElement(_bafc.Hf, &_ddaef); _agbe != nil {
					return _agbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bafc.ExtLst = NewCT_ExtensionListModify()
				if _bebb := d.DecodeElement(_bafc.ExtLst, &_ddaef); _bebb != nil {
					return _bebb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025v", _ddaef.Name)
				if _edgf := d.Skip(); _edgf != nil {
					return _edgf
				}
			}
		case _e.EndElement:
			break _ddcc
		case _e.CharData:
		}
	}
	return nil
}

type ST_TLTimeNodeFillType byte

func NewCT_NormalViewPortion() *CT_NormalViewPortion { _fcaa := &CT_NormalViewPortion{}; return _fcaa }
func NewCT_SlideRelationshipListEntry() *CT_SlideRelationshipListEntry {
	_bedbd := &CT_SlideRelationshipListEntry{}
	return _bedbd
}

// Validate validates the CT_TLAnimateBehavior and its children
func (_gage *CT_TLAnimateBehavior) Validate() error {
	return _gage.ValidateWithPath("C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072")
}

const (
	ST_IterateTypeUnset ST_IterateType = 0
	ST_IterateTypeEl    ST_IterateType = 1
	ST_IterateTypeWd    ST_IterateType = 2
	ST_IterateTypeLt    ST_IterateType = 3
)
const (
	ST_TLAnimateEffectTransitionUnset ST_TLAnimateEffectTransition = 0
	ST_TLAnimateEffectTransitionIn    ST_TLAnimateEffectTransition = 1
	ST_TLAnimateEffectTransitionOut   ST_TLAnimateEffectTransition = 2
	ST_TLAnimateEffectTransitionNone  ST_TLAnimateEffectTransition = 3
)

func (_fadc ST_PrintColorMode) String() string {
	switch _fadc {
	case 0:
		return ""
	case 1:
		return "\u0062\u0077"
	case 2:
		return "\u0067\u0072\u0061\u0079"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}
func (_gffa *CT_SlideTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gffa.SpdAttr != ST_TransitionSpeedUnset {
		_dgbb, _cbfac := _gffa.SpdAttr.MarshalXMLAttr(_e.Name{Local: "\u0073\u0070\u0064"})
		if _cbfac != nil {
			return _cbfac
		}
		start.Attr = append(start.Attr, _dgbb)
	}
	if _gffa.AdvClickAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gffa.AdvClickAttr))})
	}
	if _gffa.AdvTmAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u0064\u0076T\u006d"}, Value: _d.Sprintf("\u0025\u0076", *_gffa.AdvTmAttr)})
	}
	e.EncodeToken(start)
	if _gffa.Choice != nil {
		_gffa.Choice.MarshalXML(e, _e.StartElement{})
	}
	if _gffa.SndAc != nil {
		_aaeec := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u006e\u0064\u0041\u0063"}}
		e.EncodeElement(_gffa.SndAc, _aaeec)
	}
	if _gffa.ExtLst != nil {
		_gaga := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gffa.ExtLst, _gaga)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTimeAnimateValueList and its children, prefixing error messages with path
func (_geede *CT_TLTimeAnimateValueList) ValidateWithPath(path string) error {
	for _cagac, _dbbbb := range _geede.Tav {
		if _gefbb := _dbbbb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0076\u005b\u0025\u0064\u005d", path, _cagac)); _gefbb != nil {
			return _gefbb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesViewProperties and its children, prefixing error messages with path
func (_bggg *CT_NotesViewProperties) ValidateWithPath(path string) error {
	if _ebgf := _bggg.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _ebgf != nil {
		return _ebgf
	}
	if _bggg.ExtLst != nil {
		if _dcde := _bggg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcde != nil {
			return _dcde
		}
	}
	return nil
}
func (_gcgec *ST_TLOleChartBuildType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bggcb, _abefe := d.Token()
	if _abefe != nil {
		return _abefe
	}
	if _fbbbf, _cabafg := _bggcb.(_e.EndElement); _cabafg && _fbbbf.Name == start.Name {
		*_gcgec = 1
		return nil
	}
	if _aggab, _gdede := _bggcb.(_e.CharData); !_gdede {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bggcb)
	} else {
		switch string(_aggab) {
		case "":
			*_gcgec = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_gcgec = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_gcgec = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gcgec = 3
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_gcgec = 4
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_gcgec = 5
		}
	}
	_bggcb, _abefe = d.Token()
	if _abefe != nil {
		return _abefe
	}
	if _affded, _agcgd := _bggcb.(_e.EndElement); _agcgd && _affded.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bggcb)
}
func (_aedef *CT_SlideIdListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_aedef.IdAttr = 256
	for _, _dafc := range start.Attr {
		if _dafc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dafc.Name.Local == "\u0069\u0064" || _dafc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dafc.Name.Local == "\u0069\u0064" {
			_aeag, _aaee := _dafc.Value, error(nil)
			if _aaee != nil {
				return _aaee
			}
			_aedef.RIdAttr = _aeag
			continue
		}
		if _dafc.Name.Local == "\u0069\u0064" {
			_gaeg, _daae := _a.ParseUint(_dafc.Value, 10, 32)
			if _daae != nil {
				return _daae
			}
			_aedef.IdAttr = uint32(_gaeg)
			continue
		}
	}
_aabfc:
	for {
		_ccaeb, _ddcec := d.Token()
		if _ddcec != nil {
			return _ddcec
		}
		switch _eacg := _ccaeb.(type) {
		case _e.StartElement:
			switch _eacg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aedef.ExtLst = NewCT_ExtensionList()
				if _fada := d.DecodeElement(_aedef.ExtLst, &_eacg); _fada != nil {
					return _fada
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064Li\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _eacg.Name)
				if _facb := d.Skip(); _facb != nil {
					return _facb
				}
			}
		case _e.EndElement:
			break _aabfc
		case _e.CharData:
		}
	}
	return nil
}
func (_cdfea *ST_TLDiagramBuildType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dfcfga, _eccgd := d.Token()
	if _eccgd != nil {
		return _eccgd
	}
	if _egeae, _cccff := _dfcfga.(_e.EndElement); _cccff && _egeae.Name == start.Name {
		*_cdfea = 1
		return nil
	}
	if _deeg, _ggdd := _dfcfga.(_e.CharData); !_ggdd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfcfga)
	} else {
		switch string(_deeg) {
		case "":
			*_cdfea = 0
		case "\u0077\u0068\u006fl\u0065":
			*_cdfea = 1
		case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_cdfea = 2
		case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
			*_cdfea = 3
		case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_cdfea = 4
		case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
			*_cdfea = 5
		case "\u0063\u0077":
			*_cdfea = 6
		case "\u0063\u0077\u0049\u006e":
			*_cdfea = 7
		case "\u0063\u0077\u004fu\u0074":
			*_cdfea = 8
		case "\u0063\u0063\u0077":
			*_cdfea = 9
		case "\u0063\u0063\u0077I\u006e":
			*_cdfea = 10
		case "\u0063\u0063\u0077\u004f\u0075\u0074":
			*_cdfea = 11
		case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
			*_cdfea = 12
		case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
			*_cdfea = 13
		case "\u0075\u0070":
			*_cdfea = 14
		case "\u0064\u006f\u0077\u006e":
			*_cdfea = 15
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_cdfea = 16
		case "\u0063\u0075\u0073\u0074":
			*_cdfea = 17
		}
	}
	_dfcfga, _eccgd = d.Token()
	if _eccgd != nil {
		return _eccgd
	}
	if _bcfga, _adfg := _dfcfga.(_e.EndElement); _adfg && _bcfga.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfcfga)
}
func (_dbfb *CT_HandoutMasterIdList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dbfb.HandoutMasterId != nil {
		_bafg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_dbfb.HandoutMasterId, _bafg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CommonSlideData and its children, prefixing error messages with path
func (_bcee *CT_CommonSlideData) ValidateWithPath(path string) error {
	if _bcee.Bg != nil {
		if _baae := _bcee.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _baae != nil {
			return _baae
		}
	}
	if _fcc := _bcee.SpTree.ValidateWithPath(path + "\u002fS\u0070\u0054\u0072\u0065\u0065"); _fcc != nil {
		return _fcc
	}
	if _bcee.CustDataLst != nil {
		if _geeg := _bcee.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _geeg != nil {
			return _geeg
		}
	}
	if _bcee.Controls != nil {
		if _fgab := _bcee.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _fgab != nil {
			return _fgab
		}
	}
	if _bcee.ExtLst != nil {
		if _aefb := _bcee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aefb != nil {
			return _aefb
		}
	}
	return nil
}
func (_fafdd *CT_SlideRelationshipList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _fafdd.Sld != nil {
		_dgagd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _adfd := range _fafdd.Sld {
			e.EncodeElement(_adfd, _dgagd)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeCondition() *CT_TLTimeCondition { _ddbc := &CT_TLTimeCondition{}; return _ddbc }

type CT_ApplicationNonVisualDrawingProps struct {

	// Is a Photo Album
	IsPhotoAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Placeholder Shape
	Ph            *CT_Placeholder
	AudioCd       *_da.CT_AudioCD
	WavAudioFile  *_da.CT_EmbeddedWAVAudioFile
	AudioFile     *_da.CT_AudioFile
	VideoFile     *_da.CT_VideoFile
	QuickTimeFile *_da.CT_QuickTimeFile

	// Customer Data List
	CustDataLst *CT_CustomerDataList
	ExtLst      *CT_ExtensionList
}

// ValidateWithPath validates the AG_Ole and its children, prefixing error messages with path
func (_edf *AG_Ole) ValidateWithPath(path string) error {
	if _edf.ImgWAttr != nil {
		if *_edf.ImgWAttr < 0 {
			return _d.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edf.ImgWAttr)
		}
	}
	if _edf.ImgHAttr != nil {
		if *_edf.ImgHAttr < 0 {
			return _d.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edf.ImgHAttr)
		}
	}
	return nil
}
func (_agf *AG_TLBuild) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _geg := range start.Attr {
		if _geg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ade, _ea := _a.ParseUint(_geg.Value, 10, 32)
			if _ea != nil {
				return _ea
			}
			_cca := uint32(_ade)
			_agf.SpidAttr = &_cca
			continue
		}
		if _geg.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_gg, _cbb := _a.ParseUint(_geg.Value, 10, 32)
			if _cbb != nil {
				return _cbb
			}
			_afd := uint32(_gg)
			_agf.GrpIdAttr = &_afd
			continue
		}
		if _geg.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_ded, _cab := _a.ParseBool(_geg.Value)
			if _cab != nil {
				return _cab
			}
			_agf.UiExpandAttr = &_ded
			continue
		}
	}
	for {
		_baf, _bff := d.Token()
		if _bff != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u003a\u0020%\u0073", _bff)
		}
		if _fg, _ecf := _baf.(_e.EndElement); _ecf && _fg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_PlaceholderSize byte

// Validate validates the CT_InOutTransition and its children
func (_egd *CT_InOutTransition) Validate() error {
	return _egd.ValidateWithPath("\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func (_bcca *CT_TLTimeNodeParallel) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_fgdgge := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_bcca.CTn, _fgdgge)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gedbb ST_TLTimeNodeRestartType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_gedbb.String(), start)
}
func (_fccga *CT_TLIterateData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cegfd := range start.Attr {
		if _cegfd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fccga.TypeAttr.UnmarshalXMLAttr(_cegfd)
			continue
		}
		if _cegfd.Name.Local == "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s" {
			_bdca, _dgadba := _a.ParseBool(_cegfd.Value)
			if _dgadba != nil {
				return _dgadba
			}
			_fccga.BackwardsAttr = &_bdca
			continue
		}
	}
_gcfb:
	for {
		_gggaa, _facd := d.Token()
		if _facd != nil {
			return _facd
		}
		switch _dffg := _gggaa.(type) {
		case _e.StartElement:
			switch _dffg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
				_fccga.TmAbs = NewCT_TLIterateIntervalTime()
				if _afaca := d.DecodeElement(_fccga.TmAbs, &_dffg); _afaca != nil {
					return _afaca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
				_fccga.TmPct = NewCT_TLIterateIntervalPercentage()
				if _ceefb := d.DecodeElement(_fccga.TmPct, &_dffg); _ceefb != nil {
					return _ceefb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0020\u0025v", _dffg.Name)
				if _bfbaa := d.Skip(); _bfbaa != nil {
					return _bfbaa
				}
			}
		case _e.EndElement:
			break _gcfb
		case _e.CharData:
		}
	}
	return nil
}
func (_defdb ST_TransitionInOutDirectionType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_bedef := _e.Attr{}
	_bedef.Name = name
	switch _defdb {
	case ST_TransitionInOutDirectionTypeUnset:
		_bedef.Value = ""
	case ST_TransitionInOutDirectionTypeOut:
		_bedef.Value = "\u006f\u0075\u0074"
	case ST_TransitionInOutDirectionTypeIn:
		_bedef.Value = "\u0069\u006e"
	}
	return _bedef, nil
}
func NewCT_SlideLayout() *CT_SlideLayout {
	_dgdd := &CT_SlideLayout{}
	_dgdd.CSld = NewCT_CommonSlideData()
	return _dgdd
}
func NewCT_EmbeddedFontListEntry() *CT_EmbeddedFontListEntry {
	_dea := &CT_EmbeddedFontListEntry{}
	_dea.Font = _da.NewCT_TextFont()
	return _dea
}
func NewCT_OutlineViewSlideList() *CT_OutlineViewSlideList {
	_dcff := &CT_OutlineViewSlideList{}
	return _dcff
}

// ValidateWithPath validates the CT_Slide and its children, prefixing error messages with path
func (_baffa *CT_Slide) ValidateWithPath(path string) error {
	if _cbab := _baffa.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _cbab != nil {
		return _cbab
	}
	if _baffa.ClrMapOvr != nil {
		if _ecfa := _baffa.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _ecfa != nil {
			return _ecfa
		}
	}
	if _baffa.Transition != nil {
		if _gcaf := _baffa.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _gcaf != nil {
			return _gcaf
		}
	}
	if _baffa.Timing != nil {
		if _ceab := _baffa.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _ceab != nil {
			return _ceab
		}
	}
	if _baffa.ExtLst != nil {
		if _abba := _baffa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abba != nil {
			return _abba
		}
	}
	return nil
}
func NewCT_TLTriggerRuntimeNode() *CT_TLTriggerRuntimeNode {
	_bgefd := &CT_TLTriggerRuntimeNode{}
	_bgefd.ValAttr = ST_TLTriggerRuntimeNode(1)
	return _bgefd
}

// Validate validates the CT_Guide and its children
func (_faefc *CT_Guide) Validate() error {
	return _faefc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065")
}
func (_eeaeg ST_TLTimeNodeType) Validate() error { return _eeaeg.ValidateWithPath("") }
func (_cfbdd ST_TLBehaviorOverrideType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dffdg := _e.Attr{}
	_dffdg.Name = name
	switch _cfbdd {
	case ST_TLBehaviorOverrideTypeUnset:
		_dffdg.Value = ""
	case ST_TLBehaviorOverrideTypeNormal:
		_dffdg.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_TLBehaviorOverrideTypeChildStyle:
		_dffdg.Value = "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _dffdg, nil
}
func (_edgb *ST_PrintWhat) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_edgb = 0
	case "\u0073\u006c\u0069\u0064\u0065\u0073":
		*_edgb = 1
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
		*_edgb = 2
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
		*_edgb = 3
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
		*_edgb = 4
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
		*_edgb = 5
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
		*_edgb = 6
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
		*_edgb = 7
	case "\u006e\u006f\u0074e\u0073":
		*_edgb = 8
	case "\u006fu\u0074\u006c\u0069\u006e\u0065":
		*_edgb = 9
	}
	return nil
}

type CT_CommonSlideData struct {

	// Name
	NameAttr *string

	// Slide Background
	Bg *CT_Background

	// Shape Tree
	SpTree *CT_GroupShape

	// Customer Data List
	CustDataLst *CT_CustomerDataList

	// List of controls
	Controls *CT_ControlList
	ExtLst   *CT_ExtensionList
}
type Sld struct{ CT_Slide }

// Validate validates the CT_TLIterateIntervalPercentage and its children
func (_addc *CT_TLIterateIntervalPercentage) Validate() error {
	return _addc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_SlideMasterIdListEntry and its children, prefixing error messages with path
func (_baab *CT_SlideMasterIdListEntry) ValidateWithPath(path string) error {
	if _baab.IdAttr != nil {
		if *_baab.IdAttr < 2147483648 {
			return _d.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_baab.IdAttr)
		}
	}
	if _baab.ExtLst != nil {
		if _efaf := _baab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efaf != nil {
			return _efaf
		}
	}
	return nil
}
func (_dgbbd ST_TransitionInOutDirectionType) Validate() error { return _dgbbd.ValidateWithPath("") }
func (_ffccec *ST_Direction) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_ffccec = 0
	case "\u0068\u006f\u0072\u007a":
		*_ffccec = 1
	case "\u0076\u0065\u0072\u0074":
		*_ffccec = 2
	}
	return nil
}
func (_fabfc *CT_TagsData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gaacd := range start.Attr {
		if _gaacd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gaacd.Name.Local == "\u0069\u0064" || _gaacd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gaacd.Name.Local == "\u0069\u0064" {
			_eecdb, _cffag := _gaacd.Value, error(nil)
			if _cffag != nil {
				return _cffag
			}
			_fabfc.IdAttr = _eecdb
			continue
		}
	}
	for {
		_dcdff, _bccge := d.Token()
		if _bccge != nil {
			return _d.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _bccge)
		}
		if _eedced, _gbdga := _dcdff.(_e.EndElement); _gbdga && _eedced.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ExtensionList and its children
func (_egaa *CT_ExtensionList) Validate() error {
	return _egaa.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

type CmAuthorLst struct{ CT_CommentAuthorList }

func (_gaef *CT_SlideViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gaef.CSldViewPr = NewCT_CommonSlideViewProperties()
_dggg:
	for {
		_bbag, _dbef := d.Token()
		if _dbef != nil {
			return _dbef
		}
		switch _ddbae := _bbag.(type) {
		case _e.StartElement:
			switch _ddbae.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _ageb := d.DecodeElement(_gaef.CSldViewPr, &_ddbae); _ageb != nil {
					return _ageb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaef.ExtLst = NewCT_ExtensionList()
				if _faagf := d.DecodeElement(_gaef.ExtLst, &_ddbae); _faagf != nil {
					return _faagf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ddbae.Name)
				if _abffa := d.Skip(); _abffa != nil {
					return _abffa
				}
			}
		case _e.EndElement:
			break _dggg
		case _e.CharData:
		}
	}
	return nil
}
func (_bdddb *ST_TLParaBuildType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bdddb = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_bdddb = 1
	case "\u0070":
		*_bdddb = 2
	case "\u0063\u0075\u0073\u0074":
		*_bdddb = 3
	case "\u0077\u0068\u006fl\u0065":
		*_bdddb = 4
	}
	return nil
}
func (_gdbff *ST_TLTriggerRuntimeNode) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ccgf, _bgcc := d.Token()
	if _bgcc != nil {
		return _bgcc
	}
	if _fecda, _gfdcb := _ccgf.(_e.EndElement); _gfdcb && _fecda.Name == start.Name {
		*_gdbff = 1
		return nil
	}
	if _fbcbe, _eagbg := _ccgf.(_e.CharData); !_eagbg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccgf)
	} else {
		switch string(_fbcbe) {
		case "":
			*_gdbff = 0
		case "\u0066\u0069\u0072s\u0074":
			*_gdbff = 1
		case "\u006c\u0061\u0073\u0074":
			*_gdbff = 2
		case "\u0061\u006c\u006c":
			*_gdbff = 3
		}
	}
	_ccgf, _bgcc = d.Token()
	if _bgcc != nil {
		return _bgcc
	}
	if _fbbdf, _eaaccc := _ccgf.(_e.EndElement); _eaaccc && _fbbdf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccgf)
}

type ST_PhotoAlbumFrameShape byte

func (_dgdaf ST_TLAnimateEffectTransition) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gbecd := _e.Attr{}
	_gbecd.Name = name
	switch _dgdaf {
	case ST_TLAnimateEffectTransitionUnset:
		_gbecd.Value = ""
	case ST_TLAnimateEffectTransitionIn:
		_gbecd.Value = "\u0069\u006e"
	case ST_TLAnimateEffectTransitionOut:
		_gbecd.Value = "\u006f\u0075\u0074"
	case ST_TLAnimateEffectTransitionNone:
		_gbecd.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gbecd, nil
}
func NewCT_Kinsoku() *CT_Kinsoku { _eefbc := &CT_Kinsoku{}; return _eefbc }

// Validate validates the CT_OutlineViewProperties and its children
func (_abdbb *CT_OutlineViewProperties) Validate() error {
	return _abdbb.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_dagd *CT_TLAnimateColorBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dagd.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _cfgba := range start.Attr {
		if _cfgba.Name.Local == "\u0063\u006c\u0072\u0053\u0070\u0063" {
			_dagd.ClrSpcAttr.UnmarshalXMLAttr(_cfgba)
			continue
		}
		if _cfgba.Name.Local == "\u0064\u0069\u0072" {
			_dagd.DirAttr.UnmarshalXMLAttr(_cfgba)
			continue
		}
	}
_eedd:
	for {
		_cgbaa, _agbeef := d.Token()
		if _agbeef != nil {
			return _agbeef
		}
		switch _ccbb := _cgbaa.(type) {
		case _e.StartElement:
			switch _ccbb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fbddf := d.DecodeElement(_dagd.CBhvr, &_ccbb); _fbddf != nil {
					return _fbddf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_dagd.By = NewCT_TLByAnimateColorTransform()
				if _bdcgb := d.DecodeElement(_dagd.By, &_ccbb); _bdcgb != nil {
					return _bdcgb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_dagd.From = _da.NewCT_Color()
				if _gaaec := d.DecodeElement(_dagd.From, &_ccbb); _gaaec != nil {
					return _gaaec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dagd.To = _da.NewCT_Color()
				if _defgc := d.DecodeElement(_dagd.To, &_ccbb); _defgc != nil {
					return _defgc
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0043o\u006c\u006f\u0072\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _ccbb.Name)
				if _ddddf := d.Skip(); _ddddf != nil {
					return _ddddf
				}
			}
		case _e.EndElement:
			break _eedd
		case _e.CharData:
		}
	}
	return nil
}
func (_cegge *ST_TLAnimateColorSpace) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bcafe, _fdff := d.Token()
	if _fdff != nil {
		return _fdff
	}
	if _dacdc, _aeaea := _bcafe.(_e.EndElement); _aeaea && _dacdc.Name == start.Name {
		*_cegge = 1
		return nil
	}
	if _gdbcb, _fgbcc := _bcafe.(_e.CharData); !_fgbcc {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcafe)
	} else {
		switch string(_gdbcb) {
		case "":
			*_cegge = 0
		case "\u0072\u0067\u0062":
			*_cegge = 1
		case "\u0068\u0073\u006c":
			*_cegge = 2
		}
	}
	_bcafe, _fdff = d.Token()
	if _fdff != nil {
		return _fdff
	}
	if _gaecd, _gfgd := _bcafe.(_e.EndElement); _gfgd && _gaecd.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcafe)
}
func (_bdbc ST_TLTriggerRuntimeNode) String() string {
	switch _bdbc {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0072s\u0074"
	case 2:
		return "\u006c\u0061\u0073\u0074"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

type ST_TLTimeNodePresetClassType byte
type CT_GroupShapeNonVisual struct {

	// Non-visual Drawing Properties
	CNvPr *_da.CT_NonVisualDrawingProps

	// Non-Visual Group Shape Drawing Properties
	CNvGrpSpPr *_da.CT_NonVisualGroupDrawingShapeProps

	// Non-Visual Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_adgcf ST_SlideLayoutType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_adgcf.String(), start)
}
func NewSldMaster() *SldMaster {
	_acbg := &SldMaster{}
	_acbg.CT_SlideMaster = *NewCT_SlideMaster()
	return _acbg
}

// ValidateWithPath validates the CT_CommentAuthorList and its children, prefixing error messages with path
func (_ecde *CT_CommentAuthorList) ValidateWithPath(path string) error {
	for _faf, _fee := range _ecde.CmAuthor {
		if _fcf := _fee.ValidateWithPath(_d.Sprintf("\u0025s\u002fC\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _faf)); _fcf != nil {
			return _fcf
		}
	}
	return nil
}
func (_cfcafc *ST_TLTimeNodeRestartType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cgfe, _egbfc := d.Token()
	if _egbfc != nil {
		return _egbfc
	}
	if _bbdb, _edfd := _cgfe.(_e.EndElement); _edfd && _bbdb.Name == start.Name {
		*_cfcafc = 1
		return nil
	}
	if _egcdg, _eegc := _cgfe.(_e.CharData); !_eegc {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgfe)
	} else {
		switch string(_egcdg) {
		case "":
			*_cfcafc = 0
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_cfcafc = 1
		case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
			*_cfcafc = 2
		case "\u006e\u0065\u0076e\u0072":
			*_cfcafc = 3
		}
	}
	_cgfe, _egbfc = d.Token()
	if _egbfc != nil {
		return _egbfc
	}
	if _dbdfg, _efgga := _cgfe.(_e.EndElement); _efgga && _dbdfg.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgfe)
}
func (_efgdc ST_PrintColorMode) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_bdbgg := _e.Attr{}
	_bdbgg.Name = name
	switch _efgdc {
	case ST_PrintColorModeUnset:
		_bdbgg.Value = ""
	case ST_PrintColorModeBw:
		_bdbgg.Value = "\u0062\u0077"
	case ST_PrintColorModeGray:
		_bdbgg.Value = "\u0067\u0072\u0061\u0079"
	case ST_PrintColorModeClr:
		_bdbgg.Value = "\u0063\u006c\u0072"
	}
	return _bdbgg, nil
}
func NewCT_CommentAuthorList() *CT_CommentAuthorList { _dec := &CT_CommentAuthorList{}; return _dec }
func (_caca *CT_ShowInfoKiosk) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gecfc := range start.Attr {
		if _gecfc.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_cbdf, _fbbf := _a.ParseUint(_gecfc.Value, 10, 32)
			if _fbbf != nil {
				return _fbbf
			}
			_cggeda := uint32(_cbdf)
			_caca.RestartAttr = &_cggeda
			continue
		}
	}
	for {
		_cfeb, _ecaeg := d.Token()
		if _ecaeg != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077I\u006ef\u006f\u004b\u0069\u006f\u0073\u006b\u003a \u0025\u0073", _ecaeg)
		}
		if _fdfdc, _ggaf := _cfeb.(_e.EndElement); _ggaf && _fdfdc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgcb *CT_Extension) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bdggb := range start.Attr {
		if _bdggb.Name.Local == "\u0075\u0072\u0069" {
			_cace, _bgad := _bdggb.Value, error(nil)
			if _bgad != nil {
				return _bgad
			}
			_fgcb.UriAttr = _cace
			continue
		}
	}
_fedb:
	for {
		_dcb, _fdae := d.Token()
		if _fdae != nil {
			return _fdae
		}
		switch _acac := _dcb.(type) {
		case _e.StartElement:
			switch _acac.Name {
			default:
				if _gbdf, _dgd := _f.CreateElement(_acac); _dgd != nil {
					return _dgd
				} else {
					if _egf := d.DecodeElement(_gbdf, &_acac); _egf != nil {
						return _egf
					}
					_fgcb.Any = append(_fgcb.Any, _gbdf)
				}
			}
		case _e.EndElement:
			break _fedb
		case _e.CharData:
		}
	}
	return nil
}
func (_eeafb *SldMaster) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072"
	return _eeafb.CT_SlideMaster.MarshalXML(e, start)
}
func (_fafgad *ST_TLTime) ValidateWithPath(path string) error {
	_ccbbg := []string{}
	if _fafgad.Uint32 != nil {
		_ccbbg = append(_ccbbg, "\u0055\u0069\u006e\u0074\u0033\u0032")
	}
	if _fafgad.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_ccbbg = append(_ccbbg, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_ccbbg) > 1 {
		return _d.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ccbbg)
	}
	return nil
}

// ValidateWithPath validates the CT_ShowProperties and its children, prefixing error messages with path
func (_bgge *CT_ShowProperties) ValidateWithPath(path string) error {
	if _bgge.Present != nil {
		if _acecg := _bgge.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _acecg != nil {
			return _acecg
		}
	}
	if _bgge.Browse != nil {
		if _cefe := _bgge.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _cefe != nil {
			return _cefe
		}
	}
	if _bgge.Kiosk != nil {
		if _aegc := _bgge.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _aegc != nil {
			return _aegc
		}
	}
	if _bgge.SldAll != nil {
		if _ccag := _bgge.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _ccag != nil {
			return _ccag
		}
	}
	if _bgge.SldRg != nil {
		if _agec := _bgge.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _agec != nil {
			return _agec
		}
	}
	if _bgge.CustShow != nil {
		if _cdda := _bgge.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _cdda != nil {
			return _cdda
		}
	}
	if _bgge.PenClr != nil {
		if _ccfce := _bgge.PenClr.ValidateWithPath(path + "\u002fP\u0065\u006e\u0043\u006c\u0072"); _ccfce != nil {
			return _ccfce
		}
	}
	if _bgge.ExtLst != nil {
		if _bdga := _bgge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdga != nil {
			return _bdga
		}
	}
	return nil
}
func (_gebeb *CT_StringTag) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", _gebeb.NameAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _gebeb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gcbdd ST_TLBehaviorTransformType) ValidateWithPath(path string) error {
	switch _gcbdd {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcbdd))
	}
	return nil
}

// ValidateWithPath validates the CT_TLIterateData and its children, prefixing error messages with path
func (_fdfc *CT_TLIterateData) ValidateWithPath(path string) error {
	if _fdcg := _fdfc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fdcg != nil {
		return _fdcg
	}
	if _fdfc.TmAbs != nil {
		if _aedg := _fdfc.TmAbs.ValidateWithPath(path + "\u002f\u0054\u006d\u0041\u0062\u0073"); _aedg != nil {
			return _aedg
		}
	}
	if _fdfc.TmPct != nil {
		if _caae := _fdfc.TmPct.ValidateWithPath(path + "\u002f\u0054\u006d\u0050\u0063\u0074"); _caae != nil {
			return _caae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PrintProperties and its children, prefixing error messages with path
func (_fabd *CT_PrintProperties) ValidateWithPath(path string) error {
	if _cagbe := _fabd.PrnWhatAttr.ValidateWithPath(path + "\u002f\u0050\u0072n\u0057\u0068\u0061\u0074\u0041\u0074\u0074\u0072"); _cagbe != nil {
		return _cagbe
	}
	if _fefff := _fabd.ClrModeAttr.ValidateWithPath(path + "\u002f\u0043\u006cr\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fefff != nil {
		return _fefff
	}
	if _fabd.ExtLst != nil {
		if _ecda := _fabd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecda != nil {
			return _ecda
		}
	}
	return nil
}
func (_facga ST_IterateType) Validate() error { return _facga.ValidateWithPath("") }
func (_gebedf ST_TLParaBuildType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gabd := _e.Attr{}
	_gabd.Name = name
	switch _gebedf {
	case ST_TLParaBuildTypeUnset:
		_gabd.Value = ""
	case ST_TLParaBuildTypeAllAtOnce:
		_gabd.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLParaBuildTypeP:
		_gabd.Value = "\u0070"
	case ST_TLParaBuildTypeCust:
		_gabd.Value = "\u0063\u0075\u0073\u0074"
	case ST_TLParaBuildTypeWhole:
		_gabd.Value = "\u0077\u0068\u006fl\u0065"
	}
	return _gabd, nil
}
func (_bgfcf ST_TLAnimateColorSpace) ValidateWithPath(path string) error {
	switch _bgfcf {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgfcf))
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdList and its children, prefixing error messages with path
func (_aadf *CT_SlideLayoutIdList) ValidateWithPath(path string) error {
	for _dcda, _fcdc := range _aadf.SldLayoutId {
		if _bcgd := _fcdc.ValidateWithPath(_d.Sprintf("\u0025s\u002fS\u006c\u0064\u004c\u0061\u0079o\u0075\u0074I\u0064\u005b\u0025\u0064\u005d", path, _dcda)); _bcgd != nil {
			return _bcgd
		}
	}
	return nil
}

const (
	ST_SlideSizeTypeUnset       ST_SlideSizeType = 0
	ST_SlideSizeTypeScreen4x3   ST_SlideSizeType = 1
	ST_SlideSizeTypeLetter      ST_SlideSizeType = 2
	ST_SlideSizeTypeA4          ST_SlideSizeType = 3
	ST_SlideSizeType35mm        ST_SlideSizeType = 4
	ST_SlideSizeTypeOverhead    ST_SlideSizeType = 5
	ST_SlideSizeTypeBanner      ST_SlideSizeType = 6
	ST_SlideSizeTypeCustom      ST_SlideSizeType = 7
	ST_SlideSizeTypeLedger      ST_SlideSizeType = 8
	ST_SlideSizeTypeA3          ST_SlideSizeType = 9
	ST_SlideSizeTypeB4ISO       ST_SlideSizeType = 10
	ST_SlideSizeTypeB5ISO       ST_SlideSizeType = 11
	ST_SlideSizeTypeB4JIS       ST_SlideSizeType = 12
	ST_SlideSizeTypeB5JIS       ST_SlideSizeType = 13
	ST_SlideSizeTypeHagakiCard  ST_SlideSizeType = 14
	ST_SlideSizeTypeScreen16x9  ST_SlideSizeType = 15
	ST_SlideSizeTypeScreen16x10 ST_SlideSizeType = 16
)

type ST_TransitionSpeed byte

// ValidateWithPath validates the CT_TLByRgbColorTransform and its children, prefixing error messages with path
func (_dfbcf *CT_TLByRgbColorTransform) ValidateWithPath(path string) error {
	if _agbce := _dfbcf.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _agbce != nil {
		return _agbce
	}
	if _dafdd := _dfbcf.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _dafdd != nil {
		return _dafdd
	}
	if _gcfca := _dfbcf.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _gcfca != nil {
		return _gcfca
	}
	return nil
}

// Validate validates the CT_OleObjectChoice and its children
func (_edbg *CT_OleObjectChoice) Validate() error {
	return _edbg.ValidateWithPath("\u0043T\u005fO\u006c\u0065\u004f\u0062\u006ae\u0063\u0074C\u0068\u006f\u0069\u0063\u0065")
}
func (_ggcc ST_TLNextActionType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_baggf := _e.Attr{}
	_baggf.Name = name
	switch _ggcc {
	case ST_TLNextActionTypeUnset:
		_baggf.Value = ""
	case ST_TLNextActionTypeNone:
		_baggf.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLNextActionTypeSeek:
		_baggf.Value = "\u0073\u0065\u0065\u006b"
	}
	return _baggf, nil
}

// ValidateWithPath validates the CT_TLAnimateScaleBehavior and its children, prefixing error messages with path
func (_efedb *CT_TLAnimateScaleBehavior) ValidateWithPath(path string) error {
	if _cbddc := _efedb.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cbddc != nil {
		return _cbddc
	}
	if _efedb.By != nil {
		if _dgae := _efedb.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _dgae != nil {
			return _dgae
		}
	}
	if _efedb.From != nil {
		if _bdcca := _efedb.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _bdcca != nil {
			return _bdcca
		}
	}
	if _efedb.To != nil {
		if _beeca := _efedb.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _beeca != nil {
			return _beeca
		}
	}
	return nil
}
func (_cgfg *ST_TLBehaviorAccumulateType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_cgfg = 0
	case "\u006e\u006f\u006e\u0065":
		*_cgfg = 1
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_cgfg = 2
	}
	return nil
}

// ValidateWithPath validates the CT_Kinsoku and its children, prefixing error messages with path
func (_bdfff *CT_Kinsoku) ValidateWithPath(path string) error { return nil }
func (_fba *CT_CommonSlideData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fba.SpTree = NewCT_GroupShape()
	for _, _aad := range start.Attr {
		if _aad.Name.Local == "\u006e\u0061\u006d\u0065" {
			_adf, _cee := _aad.Value, error(nil)
			if _cee != nil {
				return _cee
			}
			_fba.NameAttr = &_adf
			continue
		}
	}
_bgaa:
	for {
		_bfgd, _cabg := d.Token()
		if _cabg != nil {
			return _cabg
		}
		switch _fbcg := _bfgd.(type) {
		case _e.StartElement:
			switch _fbcg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_fba.Bg = NewCT_Background()
				if _ebe := d.DecodeElement(_fba.Bg, &_fbcg); _ebe != nil {
					return _ebe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}:
				if _feg := d.DecodeElement(_fba.SpTree, &_fbcg); _feg != nil {
					return _feg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_fba.CustDataLst = NewCT_CustomerDataList()
				if _abac := d.DecodeElement(_fba.CustDataLst, &_fbcg); _abac != nil {
					return _abac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_fba.Controls = NewCT_ControlList()
				if _dbeb := d.DecodeElement(_fba.Controls, &_fbcg); _dbeb != nil {
					return _dbeb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fba.ExtLst = NewCT_ExtensionList()
				if _adbb := d.DecodeElement(_fba.ExtLst, &_fbcg); _adbb != nil {
					return _adbb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006eS\u006c\u0069\u0064\u0065\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _fbcg.Name)
				if _cdd := d.Skip(); _cdd != nil {
					return _cdd
				}
			}
		case _e.EndElement:
			break _bgaa
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the NotesMaster and its children
func (_afbfe *NotesMaster) Validate() error {
	return _afbfe.ValidateWithPath("N\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_dbaaa *EG_TopLevelSlide) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_ddfd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_dbaaa.ClrMap, _ddfd)
	return nil
}
func (_bafb *CT_TLTimeNodeParallel) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bafb.CTn = NewCT_TLCommonTimeNodeData()
_agafg:
	for {
		_cfdag, _fbbaa := d.Token()
		if _fbbaa != nil {
			return _fbbaa
		}
		switch _acfae := _cfdag.(type) {
		case _e.StartElement:
			switch _acfae.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bcggb := d.DecodeElement(_bafb.CTn, &_acfae); _bcggb != nil {
					return _bcggb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0050\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u0020\u0025\u0076", _acfae.Name)
				if _faecf := d.Skip(); _faecf != nil {
					return _faecf
				}
			}
		case _e.EndElement:
			break _agafg
		case _e.CharData:
		}
	}
	return nil
}
func (_gecge ST_TLBehaviorAdditiveType) String() string {
	switch _gecge {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0073\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u0072\u0065\u0070\u006c"
	case 4:
		return "\u006d\u0075\u006c\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_bddg *ST_TLDiagramBuildType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bddg = 0
	case "\u0077\u0068\u006fl\u0065":
		*_bddg = 1
	case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_bddg = 2
	case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
		*_bddg = 3
	case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_bddg = 4
	case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
		*_bddg = 5
	case "\u0063\u0077":
		*_bddg = 6
	case "\u0063\u0077\u0049\u006e":
		*_bddg = 7
	case "\u0063\u0077\u004fu\u0074":
		*_bddg = 8
	case "\u0063\u0063\u0077":
		*_bddg = 9
	case "\u0063\u0063\u0077I\u006e":
		*_bddg = 10
	case "\u0063\u0063\u0077\u004f\u0075\u0074":
		*_bddg = 11
	case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
		*_bddg = 12
	case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
		*_bddg = 13
	case "\u0075\u0070":
		*_bddg = 14
	case "\u0064\u006f\u0077\u006e":
		*_bddg = 15
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_bddg = 16
	case "\u0063\u0075\u0073\u0074":
		*_bddg = 17
	}
	return nil
}

// Validate validates the CT_GraphicalObjectFrame and its children
func (_cggbb *CT_GraphicalObjectFrame) Validate() error {
	return _cggbb.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}
func NewCT_TLTimeNodeParallel() *CT_TLTimeNodeParallel {
	_ccdf := &CT_TLTimeNodeParallel{}
	_ccdf.CTn = NewCT_TLCommonTimeNodeData()
	return _ccdf
}
func (_afgfd *ST_TLAnimateEffectTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fgdfbb, _cbfgg := d.Token()
	if _cbfgg != nil {
		return _cbfgg
	}
	if _acagd, _gbdb := _fgdfbb.(_e.EndElement); _gbdb && _acagd.Name == start.Name {
		*_afgfd = 1
		return nil
	}
	if _aedfc, _badac := _fgdfbb.(_e.CharData); !_badac {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgdfbb)
	} else {
		switch string(_aedfc) {
		case "":
			*_afgfd = 0
		case "\u0069\u006e":
			*_afgfd = 1
		case "\u006f\u0075\u0074":
			*_afgfd = 2
		case "\u006e\u006f\u006e\u0065":
			*_afgfd = 3
		}
	}
	_fgdfbb, _cbfgg = d.Token()
	if _cbfgg != nil {
		return _cbfgg
	}
	if _dcaae, _cbefe := _fgdfbb.(_e.EndElement); _cbefe && _dcaae.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgdfbb)
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_aefg *CT_Control) ValidateWithPath(path string) error {
	if _aefg.ExtLst != nil {
		if _ceeb := _aefg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceeb != nil {
			return _ceeb
		}
	}
	if _aefg.Pic != nil {
		if _adag := _aefg.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _adag != nil {
			return _adag
		}
	}
	if _aefg.ImgWAttr != nil {
		if *_aefg.ImgWAttr < 0 {
			return _d.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_aefg.ImgWAttr)
		}
	}
	if _aefg.ImgHAttr != nil {
		if *_aefg.ImgHAttr < 0 {
			return _d.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_aefg.ImgHAttr)
		}
	}
	return nil
}

type CT_Placeholder struct {

	// Placeholder Type
	TypeAttr ST_PlaceholderType

	// Placeholder Orientation
	OrientAttr ST_Direction

	// Placeholder Size
	SzAttr ST_PlaceholderSize

	// Placeholder Index
	IdxAttr *uint32

	// Placeholder has custom prompt
	HasCustomPromptAttr *bool
	ExtLst              *CT_ExtensionListModify
}

// Validate validates the CT_BuildList and its children
func (_cgg *CT_BuildList) Validate() error {
	return _cgg.ValidateWithPath("\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074")
}
func (_dbffa *CT_ExtensionListModify) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dbffa.ModAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u006f\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_dbffa.ModAttr))})
	}
	e.EncodeToken(start)
	if _dbffa.Ext != nil {
		_eagaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _dded := range _dbffa.Ext {
			e.EncodeElement(_dded, _eagaf)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_PresentationProperties struct {

	// HTML Publishing Properties
	HtmlPubPr *CT_HtmlPublishProperties

	// Web Properties
	WebPr *CT_WebProperties

	// Printing Properties
	PrnPr *CT_PrintProperties

	// Presentation-wide Show Properties
	ShowPr *CT_ShowProperties

	// Color MRU
	ClrMru *_da.CT_ColorMRU
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Presentation and its children, prefixing error messages with path
func (_dcaeb *CT_Presentation) ValidateWithPath(path string) error {
	if _dcaeb.ServerZoomAttr != nil {
		if _efga := _dcaeb.ServerZoomAttr.ValidateWithPath(path + "\u002fS\u0065r\u0076\u0065\u0072\u005a\u006f\u006f\u006d\u0041\u0074\u0074\u0072"); _efga != nil {
			return _efga
		}
	}
	if _dcaeb.BookmarkIdSeedAttr != nil {
		if *_dcaeb.BookmarkIdSeedAttr < 1 {
			return _d.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064\u0053\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dcaeb.BookmarkIdSeedAttr)
		}
		if *_dcaeb.BookmarkIdSeedAttr >= 2147483648 {
			return _d.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064S\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u003648\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dcaeb.BookmarkIdSeedAttr)
		}
	}
	if _bfea := _dcaeb.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _bfea != nil {
		return _bfea
	}
	if _dcaeb.SldMasterIdLst != nil {
		if _abdd := _dcaeb.SldMasterIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _abdd != nil {
			return _abdd
		}
	}
	if _dcaeb.NotesMasterIdLst != nil {
		if _cdfcf := _dcaeb.NotesMasterIdLst.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"); _cdfcf != nil {
			return _cdfcf
		}
	}
	if _dcaeb.HandoutMasterIdLst != nil {
		if _aaff := _dcaeb.HandoutMasterIdLst.ValidateWithPath(path + "\u002f\u0048\u0061\u006edo\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _aaff != nil {
			return _aaff
		}
	}
	if _dcaeb.SldIdLst != nil {
		if _cdbf := _dcaeb.SldIdLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u0049\u0064\u004c\u0073t"); _cdbf != nil {
			return _cdbf
		}
	}
	if _dcaeb.SldSz != nil {
		if _cffa := _dcaeb.SldSz.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0053\u007a"); _cffa != nil {
			return _cffa
		}
	}
	if _bgab := _dcaeb.NotesSz.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u0053\u007a"); _bgab != nil {
		return _bgab
	}
	if _dcaeb.SmartTags != nil {
		if _ggec := _dcaeb.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _ggec != nil {
			return _ggec
		}
	}
	if _dcaeb.EmbeddedFontLst != nil {
		if _dgdge := _dcaeb.EmbeddedFontLst.ValidateWithPath(path + "\u002f\u0045m\u0062\u0065\u0064d\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"); _dgdge != nil {
			return _dgdge
		}
	}
	if _dcaeb.CustShowLst != nil {
		if _bdfa := _dcaeb.CustShowLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"); _bdfa != nil {
			return _bdfa
		}
	}
	if _dcaeb.PhotoAlbum != nil {
		if _fcfg := _dcaeb.PhotoAlbum.ValidateWithPath(path + "/\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"); _fcfg != nil {
			return _fcfg
		}
	}
	if _dcaeb.CustDataLst != nil {
		if _ebgc := _dcaeb.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _ebgc != nil {
			return _ebgc
		}
	}
	if _dcaeb.Kinsoku != nil {
		if _dgba := _dcaeb.Kinsoku.ValidateWithPath(path + "\u002f\u004b\u0069\u006e\u0073\u006f\u006b\u0075"); _dgba != nil {
			return _dgba
		}
	}
	if _dcaeb.DefaultTextStyle != nil {
		if _gbbb := _dcaeb.DefaultTextStyle.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0065\u0078\u0074S\u0074\u0079\u006c\u0065"); _gbbb != nil {
			return _gbbb
		}
	}
	if _dcaeb.ModifyVerifier != nil {
		if _dbce := _dcaeb.ModifyVerifier.ValidateWithPath(path + "\u002fM\u006fd\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"); _dbce != nil {
			return _dbce
		}
	}
	if _dcaeb.ExtLst != nil {
		if _egaef := _dcaeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egaef != nil {
			return _egaef
		}
	}
	return nil
}
func NewCT_TagsData() *CT_TagsData     { _gdaef := &CT_TagsData{}; return _gdaef }
func NewCT_Background() *CT_Background { _cdf := &CT_Background{}; return _cdf }
func (_gecd *CT_TLCommonBehaviorData) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gecd.CTn = NewCT_TLCommonTimeNodeData()
	_gecd.TgtEl = NewCT_TLTimeTargetElement()
	for _, _ebbf := range start.Attr {
		if _ebbf.Name.Local == "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065" {
			_gecd.AdditiveAttr.UnmarshalXMLAttr(_ebbf)
			continue
		}
		if _ebbf.Name.Local == "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065" {
			_gecd.AccumulateAttr.UnmarshalXMLAttr(_ebbf)
			continue
		}
		if _ebbf.Name.Local == "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065" {
			_gecd.XfrmTypeAttr.UnmarshalXMLAttr(_ebbf)
			continue
		}
		if _ebbf.Name.Local == "\u0066\u0072\u006f\u006d" {
			_aefbg, _bedd := _ebbf.Value, error(nil)
			if _bedd != nil {
				return _bedd
			}
			_gecd.FromAttr = &_aefbg
			continue
		}
		if _ebbf.Name.Local == "\u0074\u006f" {
			_beea, _cagfe := _ebbf.Value, error(nil)
			if _cagfe != nil {
				return _cagfe
			}
			_gecd.ToAttr = &_beea
			continue
		}
		if _ebbf.Name.Local == "\u0062\u0079" {
			_bcgf, _abaaeb := _ebbf.Value, error(nil)
			if _abaaeb != nil {
				return _abaaeb
			}
			_gecd.ByAttr = &_bcgf
			continue
		}
		if _ebbf.Name.Local == "\u0072\u0063\u0074\u0078" {
			_fgdgg, _gcba := _ebbf.Value, error(nil)
			if _gcba != nil {
				return _gcba
			}
			_gecd.RctxAttr = &_fgdgg
			continue
		}
		if _ebbf.Name.Local == "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065" {
			_gecd.OverrideAttr.UnmarshalXMLAttr(_ebbf)
			continue
		}
	}
_bfbcf:
	for {
		_aeeag, _gcfag := d.Token()
		if _gcfag != nil {
			return _gcfag
		}
		switch _fbdg := _aeeag.(type) {
		case _e.StartElement:
			switch _fbdg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _afaec := d.DecodeElement(_gecd.CTn, &_fbdg); _afaec != nil {
					return _afaec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _edggg := d.DecodeElement(_gecd.TgtEl, &_fbdg); _edggg != nil {
					return _edggg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}:
				_gecd.AttrNameLst = NewCT_TLBehaviorAttributeNameList()
				if _fedfg := d.DecodeElement(_gecd.AttrNameLst, &_fbdg); _fedfg != nil {
					return _fedfg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0042e\u0068\u0061\u0076\u0069\u006f\u0072D\u0061\u0074\u0061 \u0025\u0076", _fbdg.Name)
				if _ecbfc := d.Skip(); _ecbfc != nil {
					return _ecbfc
				}
			}
		case _e.EndElement:
			break _bfbcf
		case _e.CharData:
		}
	}
	return nil
}
func (_geegd *ST_TLBehaviorOverrideType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gbad, _fcaca := d.Token()
	if _fcaca != nil {
		return _fcaca
	}
	if _cbebd, _ecbbg := _gbad.(_e.EndElement); _ecbbg && _cbebd.Name == start.Name {
		*_geegd = 1
		return nil
	}
	if _acebg, _bgedf := _gbad.(_e.CharData); !_bgedf {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbad)
	} else {
		switch string(_acebg) {
		case "":
			*_geegd = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_geegd = 1
		case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_geegd = 2
		}
	}
	_gbad, _fcaca = d.Token()
	if _fcaca != nil {
		return _fcaca
	}
	if _gafbc, _edggc := _gbad.(_e.EndElement); _edggc && _gafbc.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbad)
}
func NewCT_TLTriggerTimeNodeID() *CT_TLTriggerTimeNodeID {
	_egcbc := &CT_TLTriggerTimeNodeID{}
	return _egcbc
}

// ValidateWithPath validates the CT_TLAnimVariantFloatVal and its children, prefixing error messages with path
func (_fdafa *CT_TLAnimVariantFloatVal) ValidateWithPath(path string) error { return nil }

// Validate validates the TagLst and its children
func (_cbfdg *TagLst) Validate() error {
	return _cbfdg.ValidateWithPath("\u0054\u0061\u0067\u004c\u0073\u0074")
}
func NewCT_TLCommandBehavior() *CT_TLCommandBehavior {
	_cdaab := &CT_TLCommandBehavior{}
	_cdaab.CBhvr = NewCT_TLCommonBehaviorData()
	return _cdaab
}
func (_eeaeb *ST_TLOleChartBuildType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_eeaeb = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_eeaeb = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_eeaeb = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_eeaeb = 3
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_eeaeb = 4
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_eeaeb = 5
	}
	return nil
}
func (_fgffa ST_PrintColorMode) ValidateWithPath(path string) error {
	switch _fgffa {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgffa))
	}
	return nil
}

type EG_ChildSlide struct {

	// Color Scheme Map Override
	ClrMapOvr *_da.CT_ColorMappingOverride
}

// Validate validates the CT_CustomShow and its children
func (_dbdb *CT_CustomShow) Validate() error {
	return _dbdb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077")
}
func NewCT_Extension() *CT_Extension { _aaaf := &CT_Extension{}; return _aaaf }
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_fdce := &CT_ShapeNonVisual{}
	_fdce.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_fdce.CNvSpPr = _da.NewCT_NonVisualDrawingShapeProps()
	_fdce.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _fdce
}

type ST_TLTriggerEvent byte
type CT_EmbeddedFontList struct {

	// Embedded Font
	EmbeddedFont []*CT_EmbeddedFontListEntry
}

func (_agdd *CT_ConnectorNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gfge := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_agdd.CNvPr, _gfge)
	_bde := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_agdd.CNvCxnSpPr, _bde)
	_gbf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_agdd.NvPr, _gbf)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type ST_TLOleChartBuildType byte

func (_acbf *CT_SlideRelationshipListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _acbf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dgce *Sld) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0073l\u0064"
	return _dgce.CT_Slide.MarshalXML(e, start)
}
func (_feb *CT_EmbeddedFontList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gbed:
	for {
		_bdff, _eaab := d.Token()
		if _eaab != nil {
			return _eaab
		}
		switch _ccbe := _bdff.(type) {
		case _e.StartElement:
			switch _ccbe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}:
				_feeb := NewCT_EmbeddedFontListEntry()
				if _feee := d.DecodeElement(_feeb, &_ccbe); _feee != nil {
					return _feee
				}
				_feb.EmbeddedFont = append(_feb.EmbeddedFont, _feeb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065dF\u006f\u006e\u0074\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ccbe.Name)
				if _abf := d.Skip(); _abf != nil {
					return _abf
				}
			}
		case _e.EndElement:
			break _gbed
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLGraphicalObjectBuild and its children
func (_fecgd *CT_TLGraphicalObjectBuild) Validate() error {
	return _fecgd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd")
}

type CT_Background struct {

	// Black and White Mode
	BwModeAttr _da.ST_BlackWhiteMode

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_da.CT_StyleMatrixReference
}

const (
	ST_TLPreviousActionTypeUnset     ST_TLPreviousActionType = 0
	ST_TLPreviousActionTypeNone      ST_TLPreviousActionType = 1
	ST_TLPreviousActionTypeSkipTimed ST_TLPreviousActionType = 2
)

type CT_TLAnimateRotationBehavior struct {

	// By
	ByAttr *int32

	// From
	FromAttr *int32

	// To
	ToAttr *int32
	CBhvr  *CT_TLCommonBehaviorData
}

// Validate validates the CT_SlideSize and its children
func (_gadeb *CT_SlideSize) Validate() error {
	return _gadeb.ValidateWithPath("\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065")
}
func (_dcfgf *CT_NotesMasterIdListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _beagf := range start.Attr {
		if _beagf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _beagf.Name.Local == "\u0069\u0064" || _beagf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _beagf.Name.Local == "\u0069\u0064" {
			_fbac, _cbffb := _beagf.Value, error(nil)
			if _cbffb != nil {
				return _cbffb
			}
			_dcfgf.IdAttr = _fbac
			continue
		}
	}
_gfcce:
	for {
		_eecb, _dgeag := d.Token()
		if _dgeag != nil {
			return _dgeag
		}
		switch _adaf := _eecb.(type) {
		case _e.StartElement:
			switch _adaf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcfgf.ExtLst = NewCT_ExtensionList()
				if _aegac := d.DecodeElement(_dcfgf.ExtLst, &_adaf); _aegac != nil {
					return _aegac
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _adaf.Name)
				if _gbdg := d.Skip(); _gbdg != nil {
					return _gbdg
				}
			}
		case _e.EndElement:
			break _gfcce
		case _e.CharData:
		}
	}
	return nil
}

const (
	ST_TLTriggerRuntimeNodeUnset ST_TLTriggerRuntimeNode = 0
	ST_TLTriggerRuntimeNodeFirst ST_TLTriggerRuntimeNode = 1
	ST_TLTriggerRuntimeNodeLast  ST_TLTriggerRuntimeNode = 2
	ST_TLTriggerRuntimeNodeAll   ST_TLTriggerRuntimeNode = 3
)

func (_edcda ST_TLParaBuildType) Validate() error { return _edcda.ValidateWithPath("") }
func (_baddda *ViewPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0076\u0069\u0065\u0077\u0050\u0072"
	return _baddda.CT_ViewProperties.MarshalXML(e, start)
}
func NewCT_EmbeddedFontDataId() *CT_EmbeddedFontDataId { _bca := &CT_EmbeddedFontDataId{}; return _bca }
func (_eaff *ST_TLTimeNodePresetClassType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gacgd, _faaca := d.Token()
	if _faaca != nil {
		return _faaca
	}
	if _bgbbf, _fgffe := _gacgd.(_e.EndElement); _fgffe && _bgbbf.Name == start.Name {
		*_eaff = 1
		return nil
	}
	if _ddagb, _eafac := _gacgd.(_e.CharData); !_eafac {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gacgd)
	} else {
		switch string(_ddagb) {
		case "":
			*_eaff = 0
		case "\u0065\u006e\u0074\u0072":
			*_eaff = 1
		case "\u0065\u0078\u0069\u0074":
			*_eaff = 2
		case "\u0065\u006d\u0070\u0068":
			*_eaff = 3
		case "\u0070\u0061\u0074\u0068":
			*_eaff = 4
		case "\u0076\u0065\u0072\u0062":
			*_eaff = 5
		case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
			*_eaff = 6
		}
	}
	_gacgd, _faaca = d.Token()
	if _faaca != nil {
		return _faaca
	}
	if _gafa, _addg := _gacgd.(_e.EndElement); _addg && _gafa.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gacgd)
}
func (_cbbab *CT_GroupShape) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cbbab.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_cbbab.GrpSpPr = _da.NewCT_GroupShapeProperties()
_fdag:
	for {
		_efde, _egbe := d.Token()
		if _egbe != nil {
			return _egbe
		}
		switch _gecf := _efde.(type) {
		case _e.StartElement:
			switch _gecf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _ecc := d.DecodeElement(_cbbab.NvGrpSpPr, &_gecf); _ecc != nil {
					return _ecc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _abae := d.DecodeElement(_cbbab.GrpSpPr, &_gecf); _abae != nil {
					return _abae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_gedfc := NewCT_GroupShapeChoice()
				if _fega := d.DecodeElement(&_gedfc.Sp, &_gecf); _fega != nil {
					return _fega
				}
				_cbbab.Choice = append(_cbbab.Choice, _gedfc)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_baacb := NewCT_GroupShapeChoice()
				if _dgcbc := d.DecodeElement(&_baacb.GrpSp, &_gecf); _dgcbc != nil {
					return _dgcbc
				}
				_cbbab.Choice = append(_cbbab.Choice, _baacb)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_cff := NewCT_GroupShapeChoice()
				if _cgc := d.DecodeElement(&_cff.GraphicFrame, &_gecf); _cgc != nil {
					return _cgc
				}
				_cbbab.Choice = append(_cbbab.Choice, _cff)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_adea := NewCT_GroupShapeChoice()
				if _fbdd := d.DecodeElement(&_adea.CxnSp, &_gecf); _fbdd != nil {
					return _fbdd
				}
				_cbbab.Choice = append(_cbbab.Choice, _adea)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fdf := NewCT_GroupShapeChoice()
				if _ffab := d.DecodeElement(&_fdf.Pic, &_gecf); _ffab != nil {
					return _ffab
				}
				_cbbab.Choice = append(_cbbab.Choice, _fdf)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_bed := NewCT_GroupShapeChoice()
				if _gefc := d.DecodeElement(&_bed.ContentPart, &_gecf); _gefc != nil {
					return _gefc
				}
				_cbbab.Choice = append(_cbbab.Choice, _bed)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbbab.ExtLst = NewCT_ExtensionListModify()
				if _bfdd := d.DecodeElement(_cbbab.ExtLst, &_gecf); _bfdd != nil {
					return _bfdd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _gecf.Name)
				if _gcc := d.Skip(); _gcc != nil {
					return _gcc
				}
			}
		case _e.EndElement:
			break _fdag
		case _e.CharData:
		}
	}
	return nil
}

const (
	ST_TLAnimateBehaviorCalcModeUnset    ST_TLAnimateBehaviorCalcMode = 0
	ST_TLAnimateBehaviorCalcModeDiscrete ST_TLAnimateBehaviorCalcMode = 1
	ST_TLAnimateBehaviorCalcModeLin      ST_TLAnimateBehaviorCalcMode = 2
	ST_TLAnimateBehaviorCalcModeFmla     ST_TLAnimateBehaviorCalcMode = 3
)

func (_adgfa *CT_TLCommonTimeNodeData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _adgfa.IdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.IdAttr)})
	}
	if _adgfa.PresetIDAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.PresetIDAttr)})
	}
	if _adgfa.PresetClassAttr != ST_TLTimeNodePresetClassTypeUnset {
		_fabf, _decge := _adgfa.PresetClassAttr.MarshalXMLAttr(_e.Name{Local: "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073"})
		if _decge != nil {
			return _decge
		}
		start.Attr = append(start.Attr, _fabf)
	}
	if _adgfa.PresetSubtypeAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.PresetSubtypeAttr)})
	}
	if _adgfa.DurAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064\u0075\u0072"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.DurAttr)})
	}
	if _adgfa.RepeatCountAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.RepeatCountAttr)})
	}
	if _adgfa.RepeatDurAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.RepeatDurAttr)})
	}
	if _adgfa.SpdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.SpdAttr)})
	}
	if _adgfa.AccelAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u0063\u0063e\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.AccelAttr)})
	}
	if _adgfa.DecelAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064\u0065\u0063e\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.DecelAttr)})
	}
	if _adgfa.AutoRevAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061u\u0074\u006f\u0052\u0065\u0076"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgfa.AutoRevAttr))})
	}
	if _adgfa.RestartAttr != ST_TLTimeNodeRestartTypeUnset {
		_baacc, _fgcae := _adgfa.RestartAttr.MarshalXMLAttr(_e.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"})
		if _fgcae != nil {
			return _fgcae
		}
		start.Attr = append(start.Attr, _baacc)
	}
	if _adgfa.FillAttr != ST_TLTimeNodeFillTypeUnset {
		_ddcfe, _cggbc := _adgfa.FillAttr.MarshalXMLAttr(_e.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _cggbc != nil {
			return _cggbc
		}
		start.Attr = append(start.Attr, _ddcfe)
	}
	if _adgfa.SyncBehaviorAttr != ST_TLTimeNodeSyncTypeUnset {
		_agea, _bfca := _adgfa.SyncBehaviorAttr.MarshalXMLAttr(_e.Name{Local: "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072"})
		if _bfca != nil {
			return _bfca
		}
		start.Attr = append(start.Attr, _agea)
	}
	if _adgfa.TmFilterAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.TmFilterAttr)})
	}
	if _adgfa.EvtFilterAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.EvtFilterAttr)})
	}
	if _adgfa.DisplayAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgfa.DisplayAttr))})
	}
	if _adgfa.MasterRelAttr != ST_TLTimeNodeMasterRelationUnset {
		_cbeeg, _agecf := _adgfa.MasterRelAttr.MarshalXMLAttr(_e.Name{Local: "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l"})
		if _agecf != nil {
			return _agecf
		}
		start.Attr = append(start.Attr, _cbeeg)
	}
	if _adgfa.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.BldLvlAttr)})
	}
	if _adgfa.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_adgfa.GrpIdAttr)})
	}
	if _adgfa.AfterEffectAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgfa.AfterEffectAttr))})
	}
	if _adgfa.NodeTypeAttr != ST_TLTimeNodeTypeUnset {
		_aefbfa, _fbacg := _adgfa.NodeTypeAttr.MarshalXMLAttr(_e.Name{Local: "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065"})
		if _fbacg != nil {
			return _fbacg
		}
		start.Attr = append(start.Attr, _aefbfa)
	}
	if _adgfa.NodePhAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u006f\u0064\u0065\u0050\u0068"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgfa.NodePhAttr))})
	}
	e.EncodeToken(start)
	if _adgfa.StCondLst != nil {
		_egde := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0073\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_adgfa.StCondLst, _egde)
	}
	if _adgfa.EndCondLst != nil {
		_eabb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065n\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_adgfa.EndCondLst, _eabb)
	}
	if _adgfa.EndSync != nil {
		_fabdg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0065\u006e\u0064\u0053\u0079\u006ec"}}
		e.EncodeElement(_adgfa.EndSync, _fabdg)
	}
	if _adgfa.Iterate != nil {
		_eeagf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0069\u0074\u0065\u0072\u0061\u0074e"}}
		e.EncodeElement(_adgfa.Iterate, _eeagf)
	}
	if _adgfa.ChildTnLst != nil {
		_gffdb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063h\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_adgfa.ChildTnLst, _gffdb)
	}
	if _adgfa.SubTnLst != nil {
		_cefec := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_adgfa.SubTnLst, _cefec)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bfce *CT_Empty) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for {
		_bfeb, _fgabe := d.Token()
		if _fgabe != nil {
			return _d.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073", _fgabe)
		}
		if _affa, _efba := _bfeb.(_e.EndElement); _efba && _affa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adcgc *Presentation) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e"
	return _adcgc.CT_Presentation.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_dfef *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _cafb := _dfef.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cafb != nil {
		return _cafb
	}
	if _bbbg := _dfef.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _bbbg != nil {
		return _bbbg
	}
	if _gfac := _dfef.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _gfac != nil {
		return _gfac
	}
	return nil
}
func NewCT_SideDirectionTransition() *CT_SideDirectionTransition {
	_afbc := &CT_SideDirectionTransition{}
	return _afbc
}

// Validate validates the CT_SlideSyncProperties and its children
func (_bbeg *CT_SlideSyncProperties) Validate() error {
	return _bbeg.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// Validate validates the CT_OptionalBlackTransition and its children
func (_dccb *CT_OptionalBlackTransition) Validate() error {
	return _dccb.ValidateWithPath("\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

const (
	ST_WebColorTypeUnset              ST_WebColorType = 0
	ST_WebColorTypeNone               ST_WebColorType = 1
	ST_WebColorTypeBrowser            ST_WebColorType = 2
	ST_WebColorTypePresentationText   ST_WebColorType = 3
	ST_WebColorTypePresentationAccent ST_WebColorType = 4
	ST_WebColorTypeWhiteTextOnBlack   ST_WebColorType = 5
	ST_WebColorTypeBlackTextOnWhite   ST_WebColorType = 6
)

func ParseUnionST_Coordinate32(s string) (_da.ST_Coordinate32, error) {
	return _da.ParseUnionST_Coordinate32(s)
}
func NewCT_Slide() *CT_Slide {
	_baec := &CT_Slide{}
	_baec.CSld = NewCT_CommonSlideData()
	return _baec
}
func (_ccaf *CT_NotesMaster) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_ggcgg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_ccaf.CSld, _ggcgg)
	_deed := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_ccaf.ClrMap, _deed)
	if _ccaf.Hf != nil {
		_cgcg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_ccaf.Hf, _cgcg)
	}
	if _ccaf.NotesStyle != nil {
		_fefb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006eo\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ccaf.NotesStyle, _fefb)
	}
	if _ccaf.ExtLst != nil {
		_bdaa := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccaf.ExtLst, _bdaa)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type ST_TLBehaviorAccumulateType byte

const (
	ST_TLChartSubelementTypeUnset        ST_TLChartSubelementType = 0
	ST_TLChartSubelementTypeGridLegend   ST_TLChartSubelementType = 1
	ST_TLChartSubelementTypeSeries       ST_TLChartSubelementType = 2
	ST_TLChartSubelementTypeCategory     ST_TLChartSubelementType = 3
	ST_TLChartSubelementTypePtInSeries   ST_TLChartSubelementType = 4
	ST_TLChartSubelementTypePtInCategory ST_TLChartSubelementType = 5
)

func NewNotesMaster() *NotesMaster {
	_dffcce := &NotesMaster{}
	_dffcce.CT_NotesMaster = *NewCT_NotesMaster()
	return _dffcce
}

// ValidateWithPath validates the CT_OutlineViewSlideList and its children, prefixing error messages with path
func (_dgfb *CT_OutlineViewSlideList) ValidateWithPath(path string) error {
	for _cbgef, _ccbga := range _dgfb.Sld {
		if _eedag := _ccbga.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _cbgef)); _eedag != nil {
			return _eedag
		}
	}
	return nil
}

// Validate validates the EG_ExtensionList and its children
func (_bgfbb *EG_ExtensionList) Validate() error {
	return _bgfbb.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

type CT_CustomerData struct{ IdAttr string }

const (
	ST_TLBehaviorAdditiveTypeUnset ST_TLBehaviorAdditiveType = 0
	ST_TLBehaviorAdditiveTypeBase  ST_TLBehaviorAdditiveType = 1
	ST_TLBehaviorAdditiveTypeSum   ST_TLBehaviorAdditiveType = 2
	ST_TLBehaviorAdditiveTypeRepl  ST_TLBehaviorAdditiveType = 3
	ST_TLBehaviorAdditiveTypeMult  ST_TLBehaviorAdditiveType = 4
	ST_TLBehaviorAdditiveTypeNone  ST_TLBehaviorAdditiveType = 5
)
const (
	ST_SplitterBarStateUnset     ST_SplitterBarState = 0
	ST_SplitterBarStateMinimized ST_SplitterBarState = 1
	ST_SplitterBarStateRestored  ST_SplitterBarState = 2
	ST_SplitterBarStateMaximized ST_SplitterBarState = 3
)

func (_geaa *ST_IterateType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_geaa = 0
	case "\u0065\u006c":
		*_geaa = 1
	case "\u0077\u0064":
		*_geaa = 2
	case "\u006c\u0074":
		*_geaa = 3
	}
	return nil
}
func (_fddab *CT_TLBuildDiagram) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fddab.BldAttr != ST_TLDiagramBuildTypeUnset {
		_abccf, _gcbd := _fddab.BldAttr.MarshalXMLAttr(_e.Name{Local: "\u0062\u006c\u0064"})
		if _gcbd != nil {
			return _gcbd
		}
		start.Attr = append(start.Attr, _abccf)
	}
	if _fddab.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_fddab.SpidAttr)})
	}
	if _fddab.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_fddab.GrpIdAttr)})
	}
	if _fddab.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_fddab.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_eeccb *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _gecb := _eeccb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gecb != nil {
		return _gecb
	}
	if _eafb := _eeccb.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _eafb != nil {
		return _eafb
	}
	if _aefgb := _eeccb.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _aefgb != nil {
		return _aefgb
	}
	return nil
}
func NewCT_WheelTransition() *CT_WheelTransition { _gabb := &CT_WheelTransition{}; return _gabb }
func (_ccdfb *ST_TransitionCornerDirectionType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gaebe, _dcad := d.Token()
	if _dcad != nil {
		return _dcad
	}
	if _bfafg, _befeg := _gaebe.(_e.EndElement); _befeg && _bfafg.Name == start.Name {
		*_ccdfb = 1
		return nil
	}
	if _dcgba, _abcbe := _gaebe.(_e.CharData); !_abcbe {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaebe)
	} else {
		switch string(_dcgba) {
		case "":
			*_ccdfb = 0
		case "\u006c\u0075":
			*_ccdfb = 1
		case "\u0072\u0075":
			*_ccdfb = 2
		case "\u006c\u0064":
			*_ccdfb = 3
		case "\u0072\u0064":
			*_ccdfb = 4
		}
	}
	_gaebe, _dcad = d.Token()
	if _dcad != nil {
		return _dcad
	}
	if _efegf, _ebace := _gaebe.(_e.EndElement); _ebace && _efegf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaebe)
}
func (_accaa ST_TLAnimateBehaviorValueType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cfgg := _e.Attr{}
	_cfgg.Name = name
	switch _accaa {
	case ST_TLAnimateBehaviorValueTypeUnset:
		_cfgg.Value = ""
	case ST_TLAnimateBehaviorValueTypeStr:
		_cfgg.Value = "\u0073\u0074\u0072"
	case ST_TLAnimateBehaviorValueTypeNum:
		_cfgg.Value = "\u006e\u0075\u006d"
	case ST_TLAnimateBehaviorValueTypeClr:
		_cfgg.Value = "\u0063\u006c\u0072"
	}
	return _cfgg, nil
}

type CT_SlideMaster struct {

	// Preserve Slide Master
	PreserveAttr *bool

	// Common slide data for slide masters
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_da.CT_ColorMapping

	// List of Slide Layouts
	SldLayoutIdLst *CT_SlideLayoutIdList

	// Slide Transition for a Slide Master
	Transition *CT_SlideTransition

	// Slide Timing Information for Slide Masters
	Timing *CT_SlideTiming

	// Header/Footer information for a slide master
	Hf *CT_HeaderFooter

	// Slide Master Text Styles
	TxStyles *CT_SlideMasterTextStyles
	ExtLst   *CT_ExtensionListModify
}

func (_bgade *EG_ChildSlide) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bgade.ClrMapOvr != nil {
		_ccffa := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_bgade.ClrMapOvr, _ccffa)
	}
	return nil
}
func (_dcdac ST_TLAnimateEffectTransition) String() string {
	switch _dcdac {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e"
	case 2:
		return "\u006f\u0075\u0074"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_becbb ST_SlideLayoutType) ValidateWithPath(path string) error {
	switch _becbb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_becbb))
	}
	return nil
}
func (_dgadb *CT_PresentationProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_aaad:
	for {
		_dgfbd, _edfba := d.Token()
		if _edfba != nil {
			return _edfba
		}
		switch _bdce := _dgfbd.(type) {
		case _e.StartElement:
			switch _bdce.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_dgadb.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _eebe := d.DecodeElement(_dgadb.HtmlPubPr, &_bdce); _eebe != nil {
					return _eebe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_dgadb.WebPr = NewCT_WebProperties()
				if _afgd := d.DecodeElement(_dgadb.WebPr, &_bdce); _afgd != nil {
					return _afgd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_dgadb.PrnPr = NewCT_PrintProperties()
				if _gdac := d.DecodeElement(_dgadb.PrnPr, &_bdce); _gdac != nil {
					return _gdac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_dgadb.ShowPr = NewCT_ShowProperties()
				if _dabb := d.DecodeElement(_dgadb.ShowPr, &_bdce); _dabb != nil {
					return _dabb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_dgadb.ClrMru = _da.NewCT_ColorMRU()
				if _bccgd := d.DecodeElement(_dgadb.ClrMru, &_bdce); _bccgd != nil {
					return _bccgd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgadb.ExtLst = NewCT_ExtensionList()
				if _gbdd := d.DecodeElement(_dgadb.ExtLst, &_bdce); _gbdd != nil {
					return _gbdd
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061t\u0069o\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _bdce.Name)
				if _egdc := d.Skip(); _egdc != nil {
					return _egdc
				}
			}
		case _e.EndElement:
			break _aaad
		case _e.CharData:
		}
	}
	return nil
}

type CT_EightDirectionTransition struct {

	// Direction
	DirAttr *ST_TransitionEightDirectionType
}

func NewCT_TLAnimVariantBooleanVal() *CT_TLAnimVariantBooleanVal {
	_gbcaa := &CT_TLAnimVariantBooleanVal{}
	return _gbcaa
}

// Validate validates the CT_TLPoint and its children
func (_deeef *CT_TLPoint) Validate() error {
	return _deeef.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074")
}

// Validate validates the CT_CustomShowList and its children
func (_caaa *CT_CustomShowList) Validate() error {
	return _caaa.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074")
}
func (_ebda *CT_TLCommandBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ebda.TypeAttr != ST_TLCommandTypeUnset {
		_agdb, _ccgef := _ebda.TypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ccgef != nil {
			return _ccgef
		}
		start.Attr = append(start.Attr, _agdb)
	}
	if _ebda.CmdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u006d\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_ebda.CmdAttr)})
	}
	e.EncodeToken(start)
	_bdffa := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ebda.CBhvr, _bdffa)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideSorterViewProperties and its children
func (_edab *CT_SlideSorterViewProperties) Validate() error {
	return _edab.ValidateWithPath("\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

// ValidateWithPath validates the CT_TLShapeTargetElement and its children, prefixing error messages with path
func (_ccdaf *CT_TLShapeTargetElement) ValidateWithPath(path string) error {
	if _ccdaf.Bg != nil {
		if _cece := _ccdaf.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _cece != nil {
			return _cece
		}
	}
	if _ccdaf.SubSp != nil {
		if _ggecd := _ccdaf.SubSp.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0053\u0070"); _ggecd != nil {
			return _ggecd
		}
	}
	if _ccdaf.OleChartEl != nil {
		if _cedfa := _ccdaf.OleChartEl.ValidateWithPath(path + "/\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"); _cedfa != nil {
			return _cedfa
		}
	}
	if _ccdaf.TxEl != nil {
		if _bbfe := _ccdaf.TxEl.ValidateWithPath(path + "\u002f\u0054\u0078E\u006c"); _bbfe != nil {
			return _bbfe
		}
	}
	if _ccdaf.GraphicEl != nil {
		if _gcbga := _ccdaf.GraphicEl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"); _gcbga != nil {
			return _gcbga
		}
	}
	return nil
}

// Validate validates the CT_CommonViewProperties and its children
func (_egga *CT_CommonViewProperties) Validate() error {
	return _egga.ValidateWithPath("\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_TLByHslColorTransform and its children, prefixing error messages with path
func (_geff *CT_TLByHslColorTransform) ValidateWithPath(path string) error {
	if _gafd := _geff.SAttr.ValidateWithPath(path + "\u002f\u0053\u0041\u0074\u0074\u0072"); _gafd != nil {
		return _gafd
	}
	if _cacg := _geff.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _cacg != nil {
		return _cacg
	}
	return nil
}

type CT_TLTimeNodeSequence struct {

	// Concurrent
	ConcurrentAttr *bool

	// Previous Action
	PrevAcAttr ST_TLPreviousActionType

	// Next Action
	NextAcAttr ST_TLNextActionType

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData

	// Previous Conditions List
	PrevCondLst *CT_TLTimeConditionList

	// Next Conditions List
	NextCondLst *CT_TLTimeConditionList
}

func (_fccdd ST_TLTimeIndefinite) Validate() error { return _fccdd.ValidateWithPath("") }

// Validate validates the CT_HeaderFooter and its children
func (_ceea *CT_HeaderFooter) Validate() error {
	return _ceea.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_TLPoint and its children, prefixing error messages with path
func (_dcaec *CT_TLPoint) ValidateWithPath(path string) error {
	if _feae := _dcaec.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _feae != nil {
		return _feae
	}
	if _gaccb := _dcaec.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _gaccb != nil {
		return _gaccb
	}
	return nil
}
func (_daa *CT_CustomerDataList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _daa.CustData != nil {
		_abc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}}
		for _, _bcg := range _daa.CustData {
			e.EncodeElement(_bcg, _abc)
		}
	}
	if _daa.Tags != nil {
		_ccb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0061\u0067\u0073"}}
		e.EncodeElement(_daa.Tags, _ccb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Slide and its children
func (_fffcg *CT_Slide) Validate() error {
	return _fffcg.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065")
}
func (_aaaeb ST_TransitionEightDirectionType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _aaaeb.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		e.EncodeToken(_e.CharData(_aaaeb.ST_TransitionSideDirectionType.String()))
	}
	if _aaaeb.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		e.EncodeToken(_e.CharData(_aaaeb.ST_TransitionCornerDirectionType.String()))
	}
	return e.EncodeToken(_e.EndElement{Name: start.Name})
}

// Validate validates the CT_GroupShapeChoice and its children
func (_gaab *CT_GroupShapeChoice) Validate() error {
	return _gaab.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewEG_ShowType() *EG_ShowType { _gggfe := &EG_ShowType{}; return _gggfe }

// Validate validates the CT_GuideList and its children
func (_ddae *CT_GuideList) Validate() error {
	return _ddae.ValidateWithPath("\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

type ST_TransitionSideDirectionType byte

// Validate validates the CT_SlideMasterIdList and its children
func (_gaed *CT_SlideMasterIdList) Validate() error {
	return _gaed.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}
func (_acdbc ST_WebScreenSize) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_acdbc.String(), start)
}
func (_ggeca *CT_TagsData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _ggeca.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dcbgc *CT_TLTimeAnimateValue) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _babb := range start.Attr {
		if _babb.Name.Local == "\u0074\u006d" {
			_gaacbb, _aage := ParseUnionST_TLTimeAnimateValueTime(_babb.Value)
			if _aage != nil {
				return _aage
			}
			_dcbgc.TmAttr = &_gaacbb
			continue
		}
		if _babb.Name.Local == "\u0066\u006d\u006c\u0061" {
			_aaaag, _bceeb := _babb.Value, error(nil)
			if _bceeb != nil {
				return _bceeb
			}
			_dcbgc.FmlaAttr = &_aaaag
			continue
		}
	}
_fggfc:
	for {
		_babded, _fcfa := d.Token()
		if _fcfa != nil {
			return _fcfa
		}
		switch _eegfg := _babded.(type) {
		case _e.StartElement:
			switch _eegfg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0061\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				_dcbgc.Val = NewCT_TLAnimVariant()
				if _eeaaf := d.DecodeElement(_dcbgc.Val, &_eegfg); _eeaaf != nil {
					return _eeaaf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _eegfg.Name)
				if _fcbc := d.Skip(); _fcbc != nil {
					return _fcbc
				}
			}
		case _e.EndElement:
			break _fggfc
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_TLAnimateEffectBehavior() *CT_TLAnimateEffectBehavior {
	_cfagd := &CT_TLAnimateEffectBehavior{}
	_cfagd.CBhvr = NewCT_TLCommonBehaviorData()
	return _cfagd
}
func (_agac *CT_Rel) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _agac.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fbdgc ST_OleObjectFollowColorScheme) Validate() error { return _fbdgc.ValidateWithPath("") }

type ST_TLPreviousActionType byte

// Validate validates the CT_TLTimeNodeSequence and its children
func (_cabag *CT_TLTimeNodeSequence) Validate() error {
	return _cabag.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065")
}
func (_cefcc ST_SlideSizeType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cefcc.String(), start)
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_gfag *CT_Picture) ValidateWithPath(path string) error {
	if _ead := _gfag.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _ead != nil {
		return _ead
	}
	if _eeacd := _gfag.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _eeacd != nil {
		return _eeacd
	}
	if _eadb := _gfag.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _eadb != nil {
		return _eadb
	}
	if _gfag.Style != nil {
		if _fagf := _gfag.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _fagf != nil {
			return _fagf
		}
	}
	if _gfag.ExtLst != nil {
		if _bdgeb := _gfag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdgeb != nil {
			return _bdgeb
		}
	}
	return nil
}

// Validate validates the EG_ShowType and its children
func (_bcde *EG_ShowType) Validate() error {
	return _bcde.ValidateWithPath("E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065")
}
func (_gbbbd ST_TLAnimateColorSpace) Validate() error { return _gbbbd.ValidateWithPath("") }

type CT_OleObjectEmbed struct {

	// Color Scheme Properties for Embedded object
	FollowColorSchemeAttr ST_OleObjectFollowColorScheme
	ExtLst                *CT_ExtensionList
}

func (_dbdca *CT_TLBehaviorAttributeNameList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_fbag := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}}
	for _, _gccc := range _dbdca.AttrName {
		e.EncodeElement(_gccc, _fbag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PhotoAlbum and its children, prefixing error messages with path
func (_ddag *CT_PhotoAlbum) ValidateWithPath(path string) error {
	if _abccd := _ddag.LayoutAttr.ValidateWithPath(path + "/\u004c\u0061\u0079\u006f\u0075\u0074\u0041\u0074\u0074\u0072"); _abccd != nil {
		return _abccd
	}
	if _aafd := _ddag.FrameAttr.ValidateWithPath(path + "\u002f\u0046\u0072\u0061\u006d\u0065\u0041\u0074\u0074\u0072"); _aafd != nil {
		return _aafd
	}
	if _ddag.ExtLst != nil {
		if _faae := _ddag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faae != nil {
			return _faae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TagList and its children, prefixing error messages with path
func (_gefbbg *CT_TagList) ValidateWithPath(path string) error {
	for _dgbcc, _afcg := range _gefbbg.Tag {
		if _adeca := _afcg.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _dgbcc)); _adeca != nil {
			return _adeca
		}
	}
	return nil
}
func (_fgcdf ST_ViewType) ValidateWithPath(path string) error {
	switch _fgcdf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgcdf))
	}
	return nil
}
func (_accf *ST_PhotoAlbumFrameShape) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bccbd, _caedc := d.Token()
	if _caedc != nil {
		return _caedc
	}
	if _bbcd, _dadcdd := _bccbd.(_e.EndElement); _dadcdd && _bbcd.Name == start.Name {
		*_accf = 1
		return nil
	}
	if _baafa, _cfaf := _bccbd.(_e.CharData); !_cfaf {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bccbd)
	} else {
		switch string(_baafa) {
		case "":
			*_accf = 0
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
			*_accf = 1
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
			*_accf = 2
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
			*_accf = 3
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
			*_accf = 4
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
			*_accf = 5
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
			*_accf = 6
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
			*_accf = 7
		}
	}
	_bccbd, _caedc = d.Token()
	if _caedc != nil {
		return _caedc
	}
	if _dcfd, _fgeaf := _bccbd.(_e.EndElement); _fgeaf && _dcfd.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bccbd)
}
func (_efdaf *ST_TLTriggerEvent) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_efdaf = 0
	case "\u006fn\u0042\u0065\u0067\u0069\u006e":
		*_efdaf = 1
	case "\u006f\u006e\u0045n\u0064":
		*_efdaf = 2
	case "\u0062\u0065\u0067i\u006e":
		*_efdaf = 3
	case "\u0065\u006e\u0064":
		*_efdaf = 4
	case "\u006fn\u0043\u006c\u0069\u0063\u006b":
		*_efdaf = 5
	case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
		*_efdaf = 6
	case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
		*_efdaf = 7
	case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
		*_efdaf = 8
	case "\u006f\u006e\u004e\u0065\u0078\u0074":
		*_efdaf = 9
	case "\u006f\u006e\u0050\u0072\u0065\u0076":
		*_efdaf = 10
	case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
		*_efdaf = 11
	}
	return nil
}

type CT_InOutTransition struct {

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func (_cbege ST_TransitionCornerDirectionType) String() string {
	switch _cbege {
	case 0:
		return ""
	case 1:
		return "\u006c\u0075"
	case 2:
		return "\u0072\u0075"
	case 3:
		return "\u006c\u0064"
	case 4:
		return "\u0072\u0064"
	}
	return ""
}
func (_daee *CT_CustomerDataList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_cdac:
	for {
		_eeb, _aca := d.Token()
		if _aca != nil {
			return _aca
		}
		switch _abbb := _eeb.(type) {
		case _e.StartElement:
			switch _abbb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}:
				_agcg := NewCT_CustomerData()
				if _fege := d.DecodeElement(_agcg, &_abbb); _fege != nil {
					return _fege
				}
				_daee.CustData = append(_daee.CustData, _agcg)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}:
				_daee.Tags = NewCT_TagsData()
				if _ecae := d.DecodeElement(_daee.Tags, &_abbb); _ecae != nil {
					return _ecae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0065rD\u0061\u0074\u0061\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _abbb.Name)
				if _dcgg := d.Skip(); _dcgg != nil {
					return _dcgg
				}
			}
		case _e.EndElement:
			break _cdac
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Shape and its children
func (_dcfa *CT_Shape) Validate() error {
	return _dcfa.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_HandoutMasterIdList and its children
func (_fbfg *CT_HandoutMasterIdList) Validate() error {
	return _fbfg.ValidateWithPath("\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074")
}

// Validate validates the CT_TransitionSoundAction and its children
func (_cdafe *CT_TransitionSoundAction) Validate() error {
	return _cdafe.ValidateWithPath("\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e")
}
func NewCT_ApplicationNonVisualDrawingProps() *CT_ApplicationNonVisualDrawingProps {
	_efc := &CT_ApplicationNonVisualDrawingProps{}
	return _efc
}
func (_daeeaa ST_TLTimeNodeType) String() string {
	switch _daeeaa {
	case 0:
		return ""
	case 1:
		return "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case 2:
		return "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case 3:
		return "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case 4:
		return "\u006da\u0069\u006e\u0053\u0065\u0071"
	case 5:
		return "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case 6:
		return "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case 7:
		return "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case 8:
		return "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case 9:
		return "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return ""
}

type CT_TransitionStartSoundAction struct {

	// Loop Sound
	LoopAttr *bool

	// Sound
	Snd *_da.CT_EmbeddedWAVAudioFile
}

func (_fddcad *ST_IterateType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_caag, _dfbbf := d.Token()
	if _dfbbf != nil {
		return _dfbbf
	}
	if _aggcg, _gbfg := _caag.(_e.EndElement); _gbfg && _aggcg.Name == start.Name {
		*_fddcad = 1
		return nil
	}
	if _eeaae, _cbccb := _caag.(_e.CharData); !_cbccb {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caag)
	} else {
		switch string(_eeaae) {
		case "":
			*_fddcad = 0
		case "\u0065\u006c":
			*_fddcad = 1
		case "\u0077\u0064":
			*_fddcad = 2
		case "\u006c\u0074":
			*_fddcad = 3
		}
	}
	_caag, _dfbbf = d.Token()
	if _dfbbf != nil {
		return _dfbbf
	}
	if _ecad, _eeega := _caag.(_e.EndElement); _eeega && _ecad.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caag)
}

type ST_SplitterBarState byte

func (_acfag ST_TLTimeIndefinite) ValidateWithPath(path string) error {
	switch _acfag {
	case 0, 1:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acfag))
	}
	return nil
}
func NewCT_TLByRgbColorTransform() *CT_TLByRgbColorTransform {
	_baceg := &CT_TLByRgbColorTransform{}
	return _baceg
}
func (_gfdca ST_TLAnimateBehaviorCalcMode) Validate() error { return _gfdca.ValidateWithPath("") }
func (_gggb *CT_TLTimeTargetElement) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gggb.SldTgt != nil {
		_eebd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_gggb.SldTgt, _eebd)
	}
	if _gggb.SndTgt != nil {
		_ebac := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006e\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_gggb.SndTgt, _ebac)
	}
	if _gggb.SpTgt != nil {
		_fbcda := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0070\u0054\u0067\u0074"}}
		e.EncodeElement(_gggb.SpTgt, _fbcda)
	}
	if _gggb.InkTgt != nil {
		_bgba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0069\u006e\u006b\u0054\u0067\u0074"}}
		e.EncodeElement(_gggb.InkTgt, _bgba)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_CommonSlideData() *CT_CommonSlideData {
	_gbbd := &CT_CommonSlideData{}
	_gbbd.SpTree = NewCT_GroupShape()
	return _gbbd
}

type CT_CommonViewProperties struct {

	// Variable Scale
	VarScaleAttr *bool

	// View Scale
	Scale *_da.CT_Scale2D

	// View Origin
	Origin *_da.CT_Point2D
}

func (_cbecf *EG_ExtensionList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_cbfag:
	for {
		_ddadac, _dbggb := d.Token()
		if _dbggb != nil {
			return _dbggb
		}
		switch _eebea := _ddadac.(type) {
		case _e.StartElement:
			switch _eebea.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_bacac := NewCT_Extension()
				if _fdfcef := d.DecodeElement(_bacac, &_eebea); _fdfcef != nil {
					return _fdfcef
				}
				_cbecf.Ext = append(_cbecf.Ext, _bacac)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _eebea.Name)
				if _gaaa := d.Skip(); _gaaa != nil {
					return _gaaa
				}
			}
		case _e.EndElement:
			break _cbfag
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_CustomShowList() *CT_CustomShowList { _gegc := &CT_CustomShowList{}; return _gegc }
func (_ccdccg *ST_TLTimeIndefinite) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_ccdccg = 0
	case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
		*_ccdccg = 1
	}
	return nil
}
func NewCT_GroupShape() *CT_GroupShape {
	_acaf := &CT_GroupShape{}
	_acaf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_acaf.GrpSpPr = _da.NewCT_GroupShapeProperties()
	return _acaf
}

// ValidateWithPath validates the CT_TLBuildParagraph and its children, prefixing error messages with path
func (_edcee *CT_TLBuildParagraph) ValidateWithPath(path string) error {
	if _aeff := _edcee.BuildAttr.ValidateWithPath(path + "\u002f\u0042\u0075\u0069\u006c\u0064\u0041\u0074\u0074\u0072"); _aeff != nil {
		return _aeff
	}
	if _edcee.AdvAutoAttr != nil {
		if _cefda := _edcee.AdvAutoAttr.ValidateWithPath(path + "\u002f\u0041\u0064v\u0041\u0075\u0074\u006f\u0041\u0074\u0074\u0072"); _cefda != nil {
			return _cefda
		}
	}
	if _edcee.TmplLst != nil {
		if _geacf := _edcee.TmplLst.ValidateWithPath(path + "\u002f\u0054\u006d\u0070\u006c\u004c\u0073\u0074"); _geacf != nil {
			return _geacf
		}
	}
	return nil
}
func (_afdggf ST_TransitionSpeed) Validate() error { return _afdggf.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLOleBuildChart and its children, prefixing error messages with path
func (_dcca *CT_TLOleBuildChart) ValidateWithPath(path string) error {
	if _cccgb := _dcca.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _cccgb != nil {
		return _cccgb
	}
	return nil
}
func (_ggde *CT_InOutTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cacdb := range start.Attr {
		if _cacdb.Name.Local == "\u0064\u0069\u0072" {
			_ggde.DirAttr.UnmarshalXMLAttr(_cacdb)
			continue
		}
	}
	for {
		_bbeac, _gdfed := d.Token()
		if _gdfed != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0049\u006e\u004f\u0075\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _gdfed)
		}
		if _gbgf, _aaag := _bbeac.(_e.EndElement); _aaag && _gbgf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdge *CT_OrientationTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fbcdd := range start.Attr {
		if _fbcdd.Name.Local == "\u0064\u0069\u0072" {
			_bdge.DirAttr.UnmarshalXMLAttr(_fbcdd)
			continue
		}
	}
	for {
		_bfdb, _eaagd := d.Token()
		if _eaagd != nil {
			return _d.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004frie\u006eta\u0074\u0069\u006f\u006e\u0054\u0072\u0061ns\u0069\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _eaagd)
		}
		if _fceg, _fcac := _bfdb.(_e.EndElement); _fcac && _fceg.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_TLTimeNodeFillTypeUnset      ST_TLTimeNodeFillType = 0
	ST_TLTimeNodeFillTypeRemove     ST_TLTimeNodeFillType = 1
	ST_TLTimeNodeFillTypeFreeze     ST_TLTimeNodeFillType = 2
	ST_TLTimeNodeFillTypeHold       ST_TLTimeNodeFillType = 3
	ST_TLTimeNodeFillTypeTransition ST_TLTimeNodeFillType = 4
)

func (_ebca ST_TLNextActionType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_ebca.String(), start)
}
func (_dbfdf ST_TLTimeNodePresetClassType) ValidateWithPath(path string) error {
	switch _dbfdf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbfdf))
	}
	return nil
}

type CT_TLMediaNodeVideo struct {

	// Full Screen
	FullScrnAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}
type CT_SlideRelationshipList struct {

	// Presentation Slide
	Sld []*CT_SlideRelationshipListEntry
}

func (_cffcgf ST_TLPreviousActionType) Validate() error { return _cffcgf.ValidateWithPath("") }

type CT_SlideRelationshipListEntry struct{ IdAttr string }

func (_facfd *CT_TLCommonMediaNodeData) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _facfd.VolAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u006f\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_facfd.VolAttr)})
	}
	if _facfd.MuteAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u0075\u0074\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_facfd.MuteAttr))})
	}
	if _facfd.NumSldAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0075\u006d\u0053\u006c\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_facfd.NumSldAttr)})
	}
	if _facfd.ShowWhenStoppedAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_facfd.ShowWhenStoppedAttr))})
	}
	e.EncodeToken(start)
	_cfae := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_facfd.CTn, _cfae)
	_bafa := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_facfd.TgtEl, _bafa)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLTextTargetElement struct {

	// Character Range
	CharRg *CT_IndexRange

	// Paragraph Text Range
	PRg *CT_IndexRange
}

func (_eded *CT_NormalViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _eded.ShowOutlineIconsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_eded.ShowOutlineIconsAttr))})
	}
	if _eded.SnapVertSplitterAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_eded.SnapVertSplitterAttr))})
	}
	if _eded.VertBarStateAttr != ST_SplitterBarStateUnset {
		_dbca, _abff := _eded.VertBarStateAttr.MarshalXMLAttr(_e.Name{Local: "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _abff != nil {
			return _abff
		}
		start.Attr = append(start.Attr, _dbca)
	}
	if _eded.HorzBarStateAttr != ST_SplitterBarStateUnset {
		_gefe, _baffc := _eded.HorzBarStateAttr.MarshalXMLAttr(_e.Name{Local: "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _baffc != nil {
			return _baffc
		}
		start.Attr = append(start.Attr, _gefe)
	}
	if _eded.PreferSingleViewAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_eded.PreferSingleViewAttr))})
	}
	e.EncodeToken(start)
	_eagf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065d\u004c\u0065\u0066\u0074"}}
	e.EncodeElement(_eded.RestoredLeft, _eagf)
	_aefdf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}}
	e.EncodeElement(_eded.RestoredTop, _aefdf)
	if _eded.ExtLst != nil {
		_bggag := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eded.ExtLst, _bggag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ggece *ST_TLAnimateMotionPathEditMode) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_ggece = 0
	case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
		*_ggece = 1
	case "\u0066\u0069\u0078e\u0064":
		*_ggece = 2
	}
	return nil
}
func (_gbdca *CT_TLAnimVariantStringVal) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0076", _gbdca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_edee *SldLayout) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_edee.CT_SlideLayout = *NewCT_SlideLayout()
	for _, _faedf := range start.Attr {
		if _faedf.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_gfcdg, _afbcce := _faedf.Value, error(nil)
			if _afbcce != nil {
				return _afbcce
			}
			_edee.MatchingNameAttr = &_gfcdg
			continue
		}
		if _faedf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_edee.TypeAttr.UnmarshalXMLAttr(_faedf)
			continue
		}
		if _faedf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_eebee, _ggede := _a.ParseBool(_faedf.Value)
			if _ggede != nil {
				return _ggede
			}
			_edee.PreserveAttr = &_eebee
			continue
		}
		if _faedf.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_ecbd, _cebbf := _a.ParseBool(_faedf.Value)
			if _cebbf != nil {
				return _cebbf
			}
			_edee.UserDrawnAttr = &_ecbd
			continue
		}
		if _faedf.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_fbdcd, _ebaeb := _a.ParseBool(_faedf.Value)
			if _ebaeb != nil {
				return _ebaeb
			}
			_edee.ShowMasterSpAttr = &_fbdcd
			continue
		}
		if _faedf.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_bfbff, _baadf := _a.ParseBool(_faedf.Value)
			if _baadf != nil {
				return _baadf
			}
			_edee.ShowMasterPhAnimAttr = &_bfbff
			continue
		}
	}
_afbcb:
	for {
		_bafgg, _edbae := d.Token()
		if _edbae != nil {
			return _edbae
		}
		switch _fccac := _bafgg.(type) {
		case _e.StartElement:
			switch _fccac.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gcfec := d.DecodeElement(_edee.CSld, &_fccac); _gcfec != nil {
					return _gcfec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_edee.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _cabec := d.DecodeElement(_edee.ClrMapOvr, &_fccac); _cabec != nil {
					return _cabec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_edee.Transition = NewCT_SlideTransition()
				if _fgeba := d.DecodeElement(_edee.Transition, &_fccac); _fgeba != nil {
					return _fgeba
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_edee.Timing = NewCT_SlideTiming()
				if _gcee := d.DecodeElement(_edee.Timing, &_fccac); _gcee != nil {
					return _gcee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_edee.Hf = NewCT_HeaderFooter()
				if _deagc := d.DecodeElement(_edee.Hf, &_fccac); _deagc != nil {
					return _deagc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edee.ExtLst = NewCT_ExtensionListModify()
				if _cfcadf := d.DecodeElement(_edee.ExtLst, &_fccac); _cfcadf != nil {
					return _cfcadf
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004c\u0061\u0079o\u0075\u0074 \u0025\u0076", _fccac.Name)
				if _gabeg := d.Skip(); _gabeg != nil {
					return _gabeg
				}
			}
		case _e.EndElement:
			break _afbcb
		case _e.CharData:
		}
	}
	return nil
}

const (
	ST_PhotoAlbumLayoutUnset      ST_PhotoAlbumLayout = 0
	ST_PhotoAlbumLayoutFitToSlide ST_PhotoAlbumLayout = 1
	ST_PhotoAlbumLayout1pic       ST_PhotoAlbumLayout = 2
	ST_PhotoAlbumLayout2pic       ST_PhotoAlbumLayout = 3
	ST_PhotoAlbumLayout4pic       ST_PhotoAlbumLayout = 4
	ST_PhotoAlbumLayout1picTitle  ST_PhotoAlbumLayout = 5
	ST_PhotoAlbumLayout2picTitle  ST_PhotoAlbumLayout = 6
	ST_PhotoAlbumLayout4picTitle  ST_PhotoAlbumLayout = 7
)

func (_bcbee *SldSyncPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bcbee.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	for _, _badfd := range start.Attr {
		if _badfd.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_abaeg, _eadg := _badfd.Value, error(nil)
			if _eadg != nil {
				return _eadg
			}
			_bcbee.ServerSldIdAttr = _abaeg
			continue
		}
		if _badfd.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_gdec, _fdfegb := ParseStdlibTime(_badfd.Value)
			if _fdfegb != nil {
				return _fdfegb
			}
			_bcbee.ServerSldModifiedTimeAttr = _gdec
			continue
		}
		if _badfd.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_bbbfc, _bdfceg := ParseStdlibTime(_badfd.Value)
			if _bdfceg != nil {
				return _bdfceg
			}
			_bcbee.ClientInsertedTimeAttr = _bbbfc
			continue
		}
	}
_adccf:
	for {
		_egacb, _cddec := d.Token()
		if _cddec != nil {
			return _cddec
		}
		switch _ddbdc := _egacb.(type) {
		case _e.StartElement:
			switch _ddbdc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcbee.ExtLst = NewCT_ExtensionList()
				if _aadbb := d.DecodeElement(_bcbee.ExtLst, &_ddbdc); _aadbb != nil {
					return _aadbb
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u0053\u0079\u006ec\u0050\u0072 \u0025\u0076", _ddbdc.Name)
				if _cfead := d.Skip(); _cfead != nil {
					return _cfead
				}
			}
		case _e.EndElement:
			break _adccf
		case _e.CharData:
		}
	}
	return nil
}
func (_gaacaa *CT_TLSetBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_fgdb := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_gaacaa.CBhvr, _fgdb)
	if _gaacaa.To != nil {
		_ecdag := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_gaacaa.To, _ecdag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dfabb ST_TransitionSpeed) ValidateWithPath(path string) error {
	switch _dfabb {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfabb))
	}
	return nil
}
func (_decee *CT_PhotoAlbum) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _agddb := range start.Attr {
		if _agddb.Name.Local == "\u0062\u0077" {
			_ccdab, _cadcc := _a.ParseBool(_agddb.Value)
			if _cadcc != nil {
				return _cadcc
			}
			_decee.BwAttr = &_ccdab
			continue
		}
		if _agddb.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073" {
			_dbgef, _ddcdb := _a.ParseBool(_agddb.Value)
			if _ddcdb != nil {
				return _ddcdb
			}
			_decee.ShowCaptionsAttr = &_dbgef
			continue
		}
		if _agddb.Name.Local == "\u006c\u0061\u0079\u006f\u0075\u0074" {
			_decee.LayoutAttr.UnmarshalXMLAttr(_agddb)
			continue
		}
		if _agddb.Name.Local == "\u0066\u0072\u0061m\u0065" {
			_decee.FrameAttr.UnmarshalXMLAttr(_agddb)
			continue
		}
	}
_fgfb:
	for {
		_ffcb, _gefae := d.Token()
		if _gefae != nil {
			return _gefae
		}
		switch _dgef := _ffcb.(type) {
		case _e.StartElement:
			switch _dgef.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_decee.ExtLst = NewCT_ExtensionList()
				if _defbb := d.DecodeElement(_decee.ExtLst, &_dgef); _defbb != nil {
					return _defbb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d \u0025\u0076", _dgef.Name)
				if _edce := d.Skip(); _edce != nil {
					return _edce
				}
			}
		case _e.EndElement:
			break _fgfb
		case _e.CharData:
		}
	}
	return nil
}

type CT_TLTimeNodeExclusive struct {

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData
}

// ValidateWithPath validates the CT_TagsData and its children, prefixing error messages with path
func (_fcagg *CT_TagsData) ValidateWithPath(path string) error { return nil }
func NewCT_OleObjectLink() *CT_OleObjectLink                   { _dbfbc := &CT_OleObjectLink{}; return _dbfbc }
func (_eefda *CT_TLTimeCondition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _eefda.EvtAttr != ST_TLTriggerEventUnset {
		_dgac, _agegg := _eefda.EvtAttr.MarshalXMLAttr(_e.Name{Local: "\u0065\u0076\u0074"})
		if _agegg != nil {
			return _agegg
		}
		start.Attr = append(start.Attr, _dgac)
	}
	if _eefda.DelayAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0064\u0065\u006ca\u0079"}, Value: _d.Sprintf("\u0025\u0076", *_eefda.DelayAttr)})
	}
	e.EncodeToken(start)
	if _eefda.TgtEl != nil {
		_gefd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
		e.EncodeElement(_eefda.TgtEl, _gefd)
	}
	if _eefda.Tn != nil {
		_aaabd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u006e"}}
		e.EncodeElement(_eefda.Tn, _aaabd)
	}
	if _eefda.Rtn != nil {
		_bcacf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0072t\u006e"}}
		e.EncodeElement(_eefda.Rtn, _bcacf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fbcded ST_PlaceholderType) Validate() error { return _fbcded.ValidateWithPath("") }
func (_cffcg *ST_TransitionSideDirectionType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_cffcg = 0
	case "\u006c":
		*_cffcg = 1
	case "\u0075":
		*_cffcg = 2
	case "\u0072":
		*_cffcg = 3
	case "\u0064":
		*_cffcg = 4
	}
	return nil
}

type CT_HandoutMasterIdList struct {

	// Handout Master ID
	HandoutMasterId *CT_HandoutMasterIdListEntry
}

func (_cbef *CT_SideDirectionTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _adfbc := range start.Attr {
		if _adfbc.Name.Local == "\u0064\u0069\u0072" {
			_cbef.DirAttr.UnmarshalXMLAttr(_adfbc)
			continue
		}
	}
	for {
		_bedf, _efdc := d.Token()
		if _efdc != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _efdc)
		}
		if _dgefb, _gbdge := _bedf.(_e.EndElement); _gbdge && _dgefb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_addaf ST_PhotoAlbumFrameShape) ValidateWithPath(path string) error {
	switch _addaf {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_addaf))
	}
	return nil
}
func (_agfcd ST_TransitionSpeed) String() string {
	switch _agfcd {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u006f\u0077"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u0066\u0061\u0073\u0074"
	}
	return ""
}
func (_adfcf ST_TransitionEightDirectionType) String() string {
	if _adfcf.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		return _adfcf.ST_TransitionSideDirectionType.String()
	}
	if _adfcf.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		return _adfcf.ST_TransitionCornerDirectionType.String()
	}
	return ""
}
func (_aafed ST_TransitionInOutDirectionType) String() string {
	switch _aafed {
	case 0:
		return ""
	case 1:
		return "\u006f\u0075\u0074"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

// Validate validates the CT_SplitTransition and its children
func (_cbeae *CT_SplitTransition) Validate() error {
	return _cbeae.ValidateWithPath("\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func (_cfagc *HandoutMaster) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0068a\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072"
	return _cfagc.CT_HandoutMaster.MarshalXML(e, start)
}

// ValidateWithPath validates the CmLst and its children, prefixing error messages with path
func (_ecfag *CmLst) ValidateWithPath(path string) error {
	if _gacd := _ecfag.CT_CommentList.ValidateWithPath(path); _gacd != nil {
		return _gacd
	}
	return nil
}
func NewHandoutMaster() *HandoutMaster {
	_cadd := &HandoutMaster{}
	_cadd.CT_HandoutMaster = *NewCT_HandoutMaster()
	return _cadd
}
func (_ffdba ST_TLOleChartBuildType) ValidateWithPath(path string) error {
	switch _ffdba {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffdba))
	}
	return nil
}
func (_efbf *CT_SideDirectionTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _efbf.DirAttr != ST_TransitionSideDirectionTypeUnset {
		_eadc, _aebce := _efbf.DirAttr.MarshalXMLAttr(_e.Name{Local: "\u0064\u0069\u0072"})
		if _aebce != nil {
			return _aebce
		}
		start.Attr = append(start.Attr, _eadc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_CommonSlideViewProperties struct {

	// Snap Objects to Grid
	SnapToGridAttr *bool

	// Snap Objects to Objects
	SnapToObjectsAttr *bool

	// Show Guides in View
	ShowGuidesAttr *bool

	// Base properties for Slide View
	CViewPr *CT_CommonViewProperties

	// List of Guides
	GuideLst *CT_GuideList
}
type EG_Background struct {

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_da.CT_StyleMatrixReference
}
type CT_Guide struct {

	// Guide Orientation
	OrientAttr ST_Direction

	// Guide Position
	PosAttr *_da.ST_Coordinate32
}

func (_ffcce *ST_TransitionSpeed) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_feabe, _bdfced := d.Token()
	if _bdfced != nil {
		return _bdfced
	}
	if _acfbd, _eeafd := _feabe.(_e.EndElement); _eeafd && _acfbd.Name == start.Name {
		*_ffcce = 1
		return nil
	}
	if _egbcfe, _gfgagg := _feabe.(_e.CharData); !_gfgagg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feabe)
	} else {
		switch string(_egbcfe) {
		case "":
			*_ffcce = 0
		case "\u0073\u006c\u006f\u0077":
			*_ffcce = 1
		case "\u006d\u0065\u0064":
			*_ffcce = 2
		case "\u0066\u0061\u0073\u0074":
			*_ffcce = 3
		}
	}
	_feabe, _bdfced = d.Token()
	if _bdfced != nil {
		return _bdfced
	}
	if _faade, _cfcda := _feabe.(_e.EndElement); _cfcda && _faade.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feabe)
}

// Validate validates the CT_TLTemplateList and its children
func (_daaef *CT_TLTemplateList) Validate() error {
	return _daaef.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074")
}
func (_eecfd ST_TLBehaviorAccumulateType) String() string {
	switch _eecfd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}
func (_cege *CT_Presentation) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cege.NotesSz = _da.NewCT_PositiveSize2D()
	for _, _dbed := range start.Attr {
		if _dbed.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_bbgc, _bfaf := _a.ParseInt(_dbed.Value, 10, 32)
			if _bfaf != nil {
				return _bfaf
			}
			_dddf := int32(_bbgc)
			_cege.FirstSlideNumAttr = &_dddf
			continue
		}
		if _dbed.Name.Local == "\u0072\u0074\u006c" {
			_bffgb, _eddbc := _a.ParseBool(_dbed.Value)
			if _eddbc != nil {
				return _eddbc
			}
			_cege.RtlAttr = &_bffgb
			continue
		}
		if _dbed.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_caad, _bdfe := _a.ParseBool(_dbed.Value)
			if _bdfe != nil {
				return _bdfe
			}
			_cege.CompatModeAttr = &_caad
			continue
		}
		if _dbed.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_eefg, _cbfa := _a.ParseBool(_dbed.Value)
			if _cbfa != nil {
				return _cbfa
			}
			_cege.EmbedTrueTypeFontsAttr = &_eefg
			continue
		}
		if _dbed.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_debbd, _beec := _a.ParseBool(_dbed.Value)
			if _beec != nil {
				return _beec
			}
			_cege.AutoCompressPicturesAttr = &_debbd
			continue
		}
		if _dbed.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_aeeca, _aefbc := _a.ParseBool(_dbed.Value)
			if _aefbc != nil {
				return _aefbc
			}
			_cege.ShowSpecialPlsOnTitleSldAttr = &_aeeca
			continue
		}
		if _dbed.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_afcf, _edfb := ParseUnionST_Percentage(_dbed.Value)
			if _edfb != nil {
				return _edfb
			}
			_cege.ServerZoomAttr = &_afcf
			continue
		}
		if _dbed.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_cege.ConformanceAttr.UnmarshalXMLAttr(_dbed)
			continue
		}
		if _dbed.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_decf, _fbbe := _a.ParseBool(_dbed.Value)
			if _fbbe != nil {
				return _fbbe
			}
			_cege.RemovePersonalInfoOnSaveAttr = &_decf
			continue
		}
		if _dbed.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_faca, _ccac := _a.ParseBool(_dbed.Value)
			if _ccac != nil {
				return _ccac
			}
			_cege.SaveSubsetFontsAttr = &_faca
			continue
		}
		if _dbed.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_dagg, _cfcad := _a.ParseUint(_dbed.Value, 10, 32)
			if _cfcad != nil {
				return _cfcad
			}
			_cfecf := uint32(_dagg)
			_cege.BookmarkIdSeedAttr = &_cfecf
			continue
		}
		if _dbed.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_gcdg, _fdbd := _a.ParseBool(_dbed.Value)
			if _fdbd != nil {
				return _fdbd
			}
			_cege.StrictFirstAndLastCharsAttr = &_gcdg
			continue
		}
	}
_fccf:
	for {
		_fgbc, _eaacc := d.Token()
		if _eaacc != nil {
			return _eaacc
		}
		switch _agca := _fgbc.(type) {
		case _e.StartElement:
			switch _agca.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_cege.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _caea := d.DecodeElement(_cege.SldMasterIdLst, &_agca); _caea != nil {
					return _caea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_cege.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _bdde := d.DecodeElement(_cege.NotesMasterIdLst, &_agca); _bdde != nil {
					return _bdde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_cege.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _cdef := d.DecodeElement(_cege.HandoutMasterIdLst, &_agca); _cdef != nil {
					return _cdef
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_cege.SldIdLst = NewCT_SlideIdList()
				if _gcdfef := d.DecodeElement(_cege.SldIdLst, &_agca); _gcdfef != nil {
					return _gcdfef
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_cege.SldSz = NewCT_SlideSize()
				if _ebaa := d.DecodeElement(_cege.SldSz, &_agca); _ebaa != nil {
					return _ebaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _adbbf := d.DecodeElement(_cege.NotesSz, &_agca); _adbbf != nil {
					return _adbbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_cege.SmartTags = NewCT_SmartTags()
				if _agcac := d.DecodeElement(_cege.SmartTags, &_agca); _agcac != nil {
					return _agcac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_cege.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _gfca := d.DecodeElement(_cege.EmbeddedFontLst, &_agca); _gfca != nil {
					return _gfca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_cege.CustShowLst = NewCT_CustomShowList()
				if _aebcb := d.DecodeElement(_cege.CustShowLst, &_agca); _aebcb != nil {
					return _aebcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_cege.PhotoAlbum = NewCT_PhotoAlbum()
				if _adage := d.DecodeElement(_cege.PhotoAlbum, &_agca); _adage != nil {
					return _adage
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_cege.CustDataLst = NewCT_CustomerDataList()
				if _ggdac := d.DecodeElement(_cege.CustDataLst, &_agca); _ggdac != nil {
					return _ggdac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_cege.Kinsoku = NewCT_Kinsoku()
				if _gcddd := d.DecodeElement(_cege.Kinsoku, &_agca); _gcddd != nil {
					return _gcddd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_cege.DefaultTextStyle = _da.NewCT_TextListStyle()
				if _eaae := d.DecodeElement(_cege.DefaultTextStyle, &_agca); _eaae != nil {
					return _eaae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_cege.ModifyVerifier = NewCT_ModifyVerifier()
				if _dfad := d.DecodeElement(_cege.ModifyVerifier, &_agca); _dfad != nil {
					return _dfad
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cege.ExtLst = NewCT_ExtensionList()
				if _bbgba := d.DecodeElement(_cege.ExtLst, &_agca); _bbgba != nil {
					return _bbgba
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _agca.Name)
				if _aecc := d.Skip(); _aecc != nil {
					return _aecc
				}
			}
		case _e.EndElement:
			break _fccf
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLSetBehavior and its children, prefixing error messages with path
func (_debgc *CT_TLSetBehavior) ValidateWithPath(path string) error {
	if _efbaf := _debgc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _efbaf != nil {
		return _efbaf
	}
	if _debgc.To != nil {
		if _egbac := _debgc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _egbac != nil {
			return _egbac
		}
	}
	return nil
}
func (_ccece *CT_TLBuildDiagram) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gfbef := range start.Attr {
		if _gfbef.Name.Local == "\u0062\u006c\u0064" {
			_ccece.BldAttr.UnmarshalXMLAttr(_gfbef)
			continue
		}
		if _gfbef.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ceeef, _aecef := _a.ParseUint(_gfbef.Value, 10, 32)
			if _aecef != nil {
				return _aecef
			}
			_ebgag := uint32(_ceeef)
			_ccece.SpidAttr = &_ebgag
			continue
		}
		if _gfbef.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_adcg, _eaca := _a.ParseUint(_gfbef.Value, 10, 32)
			if _eaca != nil {
				return _eaca
			}
			_aecec := uint32(_adcg)
			_ccece.GrpIdAttr = &_aecec
			continue
		}
		if _gfbef.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_bddfd, _cfeda := _a.ParseBool(_gfbef.Value)
			if _cfeda != nil {
				return _cfeda
			}
			_ccece.UiExpandAttr = &_bddfd
			continue
		}
	}
	for {
		_dbebe, _ecee := d.Token()
		if _ecee != nil {
			return _d.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069\u0061\u0067\u0072\u0061\u006d: \u0025\u0073", _ecee)
		}
		if _cfece, _cbda := _dbebe.(_e.EndElement); _cbda && _cfece.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_TransitionEightDirectionType is a union type
type ST_TransitionEightDirectionType struct {
	ST_TransitionSideDirectionType   ST_TransitionSideDirectionType
	ST_TransitionCornerDirectionType ST_TransitionCornerDirectionType
}

func NewSld() *Sld { _feabb := &Sld{}; _feabb.CT_Slide = *NewCT_Slide(); return _feabb }

// Validate validates the CT_TLIterateIntervalTime and its children
func (_agabd *CT_TLIterateIntervalTime) Validate() error {
	return _agabd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065")
}
func (_fafad ST_TLTimeNodeSyncType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gbbbf := _e.Attr{}
	_gbbbf.Name = name
	switch _fafad {
	case ST_TLTimeNodeSyncTypeUnset:
		_gbbbf.Value = ""
	case ST_TLTimeNodeSyncTypeCanSlip:
		_gbbbf.Value = "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case ST_TLTimeNodeSyncTypeLocked:
		_gbbbf.Value = "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return _gbbbf, nil
}
func (_cbgea *EG_ShowType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cbgea.Present != nil {
		_ggagc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_cbgea.Present, _ggagc)
	}
	if _cbgea.Browse != nil {
		_fecfb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_cbgea.Browse, _fecfb)
	}
	if _cbgea.Kiosk != nil {
		_ebcdg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_cbgea.Kiosk, _ebcdg)
	}
	return nil
}
func NewCT_OutlineViewProperties() *CT_OutlineViewProperties {
	_abdg := &CT_OutlineViewProperties{}
	_abdg.CViewPr = NewCT_CommonViewProperties()
	return _abdg
}
func (_ddgf *CT_SlideMasterTextStyles) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ddgf.TitleStyle != nil {
		_gbace := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074i\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ddgf.TitleStyle, _gbace)
	}
	if _ddgf.BodyStyle != nil {
		_aaga := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0062\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ddgf.BodyStyle, _aaga)
	}
	if _ddgf.OtherStyle != nil {
		_dade := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006ft\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ddgf.OtherStyle, _dade)
	}
	if _ddgf.ExtLst != nil {
		_gged := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ddgf.ExtLst, _gged)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TLTriggerTimeNodeID struct {

	// Value
	ValAttr uint32
}

func NewCT_TLCommonBehaviorData() *CT_TLCommonBehaviorData {
	_egcb := &CT_TLCommonBehaviorData{}
	_egcb.CTn = NewCT_TLCommonTimeNodeData()
	_egcb.TgtEl = NewCT_TLTimeTargetElement()
	return _egcb
}
func (_dgbab ST_TLNextActionType) String() string {
	switch _dgbab {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0065\u0065\u006b"
	}
	return ""
}
func NewCT_IndexRange() *CT_IndexRange { _egbcf := &CT_IndexRange{}; return _egbcf }
func (_cfgd *EG_TopLevelSlide) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cfgd.ClrMap = _da.NewCT_ColorMapping()
_fage:
	for {
		_cdeccd, _badg := d.Token()
		if _badg != nil {
			return _badg
		}
		switch _bfcdg := _cdeccd.(type) {
		case _e.StartElement:
			switch _bfcdg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _dacdd := d.DecodeElement(_cfgd.ClrMap, &_bfcdg); _dacdd != nil {
					return _dacdd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u006f\u0070\u004c\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065\u0020\u0025v", _bfcdg.Name)
				if _gedda := d.Skip(); _gedda != nil {
					return _gedda
				}
			}
		case _e.EndElement:
			break _fage
		case _e.CharData:
		}
	}
	return nil
}

const (
	ST_ViewTypeUnset            ST_ViewType = 0
	ST_ViewTypeSldView          ST_ViewType = 1
	ST_ViewTypeSldMasterView    ST_ViewType = 2
	ST_ViewTypeNotesView        ST_ViewType = 3
	ST_ViewTypeHandoutView      ST_ViewType = 4
	ST_ViewTypeNotesMasterView  ST_ViewType = 5
	ST_ViewTypeOutlineView      ST_ViewType = 6
	ST_ViewTypeSldSorterView    ST_ViewType = 7
	ST_ViewTypeSldThumbnailView ST_ViewType = 8
)
const (
	ST_PlaceholderSizeUnset   ST_PlaceholderSize = 0
	ST_PlaceholderSizeFull    ST_PlaceholderSize = 1
	ST_PlaceholderSizeHalf    ST_PlaceholderSize = 2
	ST_PlaceholderSizeQuarter ST_PlaceholderSize = 3
)

func NewCT_SmartTags() *CT_SmartTags { _cddcd := &CT_SmartTags{}; return _cddcd }
func (_efbdf *PresentationPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_efbdf.CT_PresentationProperties = *NewCT_PresentationProperties()
_egefa:
	for {
		_dceeb, _deedd := d.Token()
		if _deedd != nil {
			return _deedd
		}
		switch _bgbdc := _dceeb.(type) {
		case _e.StartElement:
			switch _bgbdc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_efbdf.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _affde := d.DecodeElement(_efbdf.HtmlPubPr, &_bgbdc); _affde != nil {
					return _affde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_efbdf.WebPr = NewCT_WebProperties()
				if _aadbc := d.DecodeElement(_efbdf.WebPr, &_bgbdc); _aadbc != nil {
					return _aadbc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_efbdf.PrnPr = NewCT_PrintProperties()
				if _bbcaff := d.DecodeElement(_efbdf.PrnPr, &_bgbdc); _bbcaff != nil {
					return _bbcaff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_efbdf.ShowPr = NewCT_ShowProperties()
				if _fegb := d.DecodeElement(_efbdf.ShowPr, &_bgbdc); _fegb != nil {
					return _fegb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_efbdf.ClrMru = _da.NewCT_ColorMRU()
				if _bbegg := d.DecodeElement(_efbdf.ClrMru, &_bgbdc); _bbegg != nil {
					return _bbegg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efbdf.ExtLst = NewCT_ExtensionList()
				if _bebd := d.DecodeElement(_efbdf.ExtLst, &_bgbdc); _bebd != nil {
					return _bebd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006eP\u0072\u0020\u0025\u0076", _bgbdc.Name)
				if _gfafe := d.Skip(); _gfafe != nil {
					return _gfafe
				}
			}
		case _e.EndElement:
			break _egefa
		case _e.CharData:
		}
	}
	return nil
}
func (_gecg *CT_TLIterateIntervalTime) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ggafg := range start.Attr {
		if _ggafg.Name.Local == "\u0076\u0061\u006c" {
			_gcea, _aebca := ParseUnionST_TLTime(_ggafg.Value)
			if _aebca != nil {
				return _aebca
			}
			_gecg.ValAttr = _gcea
			continue
		}
	}
	for {
		_egbae, _fcaf := d.Token()
		if _fcaf != nil {
			return _d.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LIt\u0065ra\u0074\u0065\u0049\u006e\u0074\u0065\u0072va\u006c\u0054\u0069\u006d\u0065\u003a\u0020%\u0073", _fcaf)
		}
		if _bgea, _eccd := _egbae.(_e.EndElement); _eccd && _bgea.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ViewProperties and its children, prefixing error messages with path
func (_gdbc *CT_ViewProperties) ValidateWithPath(path string) error {
	if _ffded := _gdbc.LastViewAttr.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0056\u0069\u0065\u0077\u0041\u0074\u0074\u0072"); _ffded != nil {
		return _ffded
	}
	if _gdbc.NormalViewPr != nil {
		if _ffea := _gdbc.NormalViewPr.ValidateWithPath(path + "\u002f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"); _ffea != nil {
			return _ffea
		}
	}
	if _gdbc.SlideViewPr != nil {
		if _fdbcc := _gdbc.SlideViewPr.ValidateWithPath(path + "\u002f\u0053\u006ci\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"); _fdbcc != nil {
			return _fdbcc
		}
	}
	if _gdbc.OutlineViewPr != nil {
		if _bcbabg := _gdbc.OutlineViewPr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056i\u0065\u0077\u0050\u0072"); _bcbabg != nil {
			return _bcbabg
		}
	}
	if _gdbc.NotesTextViewPr != nil {
		if _bdbfg := _gdbc.NotesTextViewPr.ValidateWithPath(path + "\u002f\u004eo\u0074\u0065\u0073T\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"); _bdbfg != nil {
			return _bdbfg
		}
	}
	if _gdbc.SorterViewPr != nil {
		if _cbdbf := _gdbc.SorterViewPr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"); _cbdbf != nil {
			return _cbdbf
		}
	}
	if _gdbc.NotesViewPr != nil {
		if _fcaef := _gdbc.NotesViewPr.ValidateWithPath(path + "\u002f\u004e\u006ft\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"); _fcaef != nil {
			return _fcaef
		}
	}
	if _gdbc.GridSpacing != nil {
		if _fafga := _gdbc.GridSpacing.ValidateWithPath(path + "\u002f\u0047\u0072i\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _fafga != nil {
			return _fafga
		}
	}
	if _gdbc.ExtLst != nil {
		if _efad := _gdbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efad != nil {
			return _efad
		}
	}
	return nil
}

type CT_HandoutMaster struct {

	// Common slide data for handout master
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_da.CT_ColorMapping

	// Header/Footer information for a handout master
	Hf     *CT_HeaderFooter
	ExtLst *CT_ExtensionListModify
}

// Validate validates the CT_TagList and its children
func (_abcde *CT_TagList) Validate() error {
	return _abcde.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_InOutTransition and its children, prefixing error messages with path
func (_beacg *CT_InOutTransition) ValidateWithPath(path string) error {
	if _eebg := _beacg.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _eebg != nil {
		return _eebg
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjectLink and its children, prefixing error messages with path
func (_cabcd *CT_OleObjectLink) ValidateWithPath(path string) error {
	if _cabcd.ExtLst != nil {
		if _cegb := _cabcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cegb != nil {
			return _cegb
		}
	}
	return nil
}
func NewPresentationPr() *PresentationPr {
	_adbf := &PresentationPr{}
	_adbf.CT_PresentationProperties = *NewCT_PresentationProperties()
	return _adbf
}
func (_ffeg *CT_TLShapeTargetElement) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _cdded := range start.Attr {
		if _cdded.Name.Local == "\u0073\u0070\u0069\u0064" {
			_dede, _geed := _a.ParseUint(_cdded.Value, 10, 32)
			if _geed != nil {
				return _geed
			}
			_ffeg.SpidAttr = uint32(_dede)
			continue
		}
	}
_efcadc:
	for {
		_dgeaf, _egbaf := d.Token()
		if _egbaf != nil {
			return _egbaf
		}
		switch _gfcee := _dgeaf.(type) {
		case _e.StartElement:
			switch _gfcee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_ffeg.Bg = NewCT_Empty()
				if _ccfab := d.DecodeElement(_ffeg.Bg, &_gfcee); _ccfab != nil {
					return _ccfab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
				_ffeg.SubSp = NewCT_TLSubShapeId()
				if _aeage := d.DecodeElement(_ffeg.SubSp, &_gfcee); _aeage != nil {
					return _aeage
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
				_ffeg.OleChartEl = NewCT_TLOleChartTargetElement()
				if _egeg := d.DecodeElement(_ffeg.OleChartEl, &_gfcee); _egeg != nil {
					return _egeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
				_ffeg.TxEl = NewCT_TLTextTargetElement()
				if _ecac := d.DecodeElement(_ffeg.TxEl, &_gfcee); _ecac != nil {
					return _ecac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
				_ffeg.GraphicEl = _da.NewCT_AnimationElementChoice()
				if _bgcb := d.DecodeElement(_ffeg.GraphicEl, &_gfcee); _bgcb != nil {
					return _bgcb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061r\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074 \u0025\u0076", _gfcee.Name)
				if _ffced := d.Skip(); _ffced != nil {
					return _ffced
				}
			}
		case _e.EndElement:
			break _efcadc
		case _e.CharData:
		}
	}
	return nil
}
func (_cadaga *ST_TLAnimateBehaviorCalcMode) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_cadaga = 0
	case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
		*_cadaga = 1
	case "\u006c\u0069\u006e":
		*_cadaga = 2
	case "\u0066\u006d\u006c\u0061":
		*_cadaga = 3
	}
	return nil
}

type CT_HandoutMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

func (_begge *Presentation) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_begge.CT_Presentation = *NewCT_Presentation()
	for _, _cgdfa := range start.Attr {
		if _cgdfa.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_dgfbdc, _dcgga := _a.ParseInt(_cgdfa.Value, 10, 32)
			if _dcgga != nil {
				return _dcgga
			}
			_acfcd := int32(_dgfbdc)
			_begge.FirstSlideNumAttr = &_acfcd
			continue
		}
		if _cgdfa.Name.Local == "\u0072\u0074\u006c" {
			_dbbab, _eeebd := _a.ParseBool(_cgdfa.Value)
			if _eeebd != nil {
				return _eeebd
			}
			_begge.RtlAttr = &_dbbab
			continue
		}
		if _cgdfa.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_fgcbea, _cdecb := _a.ParseBool(_cgdfa.Value)
			if _cdecb != nil {
				return _cdecb
			}
			_begge.CompatModeAttr = &_fgcbea
			continue
		}
		if _cgdfa.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_ccffb, _gffc := _a.ParseBool(_cgdfa.Value)
			if _gffc != nil {
				return _gffc
			}
			_begge.EmbedTrueTypeFontsAttr = &_ccffb
			continue
		}
		if _cgdfa.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_bbdd, _defc := _a.ParseBool(_cgdfa.Value)
			if _defc != nil {
				return _defc
			}
			_begge.AutoCompressPicturesAttr = &_bbdd
			continue
		}
		if _cgdfa.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_agfdd, _eagee := _a.ParseBool(_cgdfa.Value)
			if _eagee != nil {
				return _eagee
			}
			_begge.ShowSpecialPlsOnTitleSldAttr = &_agfdd
			continue
		}
		if _cgdfa.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_eegff, _agfgc := ParseUnionST_Percentage(_cgdfa.Value)
			if _agfgc != nil {
				return _agfgc
			}
			_begge.ServerZoomAttr = &_eegff
			continue
		}
		if _cgdfa.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_begge.ConformanceAttr.UnmarshalXMLAttr(_cgdfa)
			continue
		}
		if _cgdfa.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_bgaef, _gbegc := _a.ParseBool(_cgdfa.Value)
			if _gbegc != nil {
				return _gbegc
			}
			_begge.RemovePersonalInfoOnSaveAttr = &_bgaef
			continue
		}
		if _cgdfa.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_fgaee, _bgbfa := _a.ParseBool(_cgdfa.Value)
			if _bgbfa != nil {
				return _bgbfa
			}
			_begge.SaveSubsetFontsAttr = &_fgaee
			continue
		}
		if _cgdfa.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_ddaefe, _cecba := _a.ParseUint(_cgdfa.Value, 10, 32)
			if _cecba != nil {
				return _cecba
			}
			_fafaf := uint32(_ddaefe)
			_begge.BookmarkIdSeedAttr = &_fafaf
			continue
		}
		if _cgdfa.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_babfd, _acaee := _a.ParseBool(_cgdfa.Value)
			if _acaee != nil {
				return _acaee
			}
			_begge.StrictFirstAndLastCharsAttr = &_babfd
			continue
		}
	}
_cdffg:
	for {
		_daeea, _ecaaf := d.Token()
		if _ecaaf != nil {
			return _ecaaf
		}
		switch _aagb := _daeea.(type) {
		case _e.StartElement:
			switch _aagb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_begge.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _beabb := d.DecodeElement(_begge.SldMasterIdLst, &_aagb); _beabb != nil {
					return _beabb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_begge.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _ggab := d.DecodeElement(_begge.NotesMasterIdLst, &_aagb); _ggab != nil {
					return _ggab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_begge.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _bbbff := d.DecodeElement(_begge.HandoutMasterIdLst, &_aagb); _bbbff != nil {
					return _bbbff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_begge.SldIdLst = NewCT_SlideIdList()
				if _cgeacf := d.DecodeElement(_begge.SldIdLst, &_aagb); _cgeacf != nil {
					return _cgeacf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_begge.SldSz = NewCT_SlideSize()
				if _dgfaf := d.DecodeElement(_begge.SldSz, &_aagb); _dgfaf != nil {
					return _dgfaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _gefg := d.DecodeElement(_begge.NotesSz, &_aagb); _gefg != nil {
					return _gefg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_begge.SmartTags = NewCT_SmartTags()
				if _agdeg := d.DecodeElement(_begge.SmartTags, &_aagb); _agdeg != nil {
					return _agdeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_begge.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _eacec := d.DecodeElement(_begge.EmbeddedFontLst, &_aagb); _eacec != nil {
					return _eacec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_begge.CustShowLst = NewCT_CustomShowList()
				if _bbfab := d.DecodeElement(_begge.CustShowLst, &_aagb); _bbfab != nil {
					return _bbfab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_begge.PhotoAlbum = NewCT_PhotoAlbum()
				if _afbd := d.DecodeElement(_begge.PhotoAlbum, &_aagb); _afbd != nil {
					return _afbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_begge.CustDataLst = NewCT_CustomerDataList()
				if _feef := d.DecodeElement(_begge.CustDataLst, &_aagb); _feef != nil {
					return _feef
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_begge.Kinsoku = NewCT_Kinsoku()
				if _bfecd := d.DecodeElement(_begge.Kinsoku, &_aagb); _bfecd != nil {
					return _bfecd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_begge.DefaultTextStyle = _da.NewCT_TextListStyle()
				if _ecdab := d.DecodeElement(_begge.DefaultTextStyle, &_aagb); _ecdab != nil {
					return _ecdab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_begge.ModifyVerifier = NewCT_ModifyVerifier()
				if _fdfeg := d.DecodeElement(_begge.ModifyVerifier, &_aagb); _fdfeg != nil {
					return _fdfeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_begge.ExtLst = NewCT_ExtensionList()
				if _ddega := d.DecodeElement(_begge.ExtLst, &_aagb); _ddega != nil {
					return _ddega
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0072es\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _aagb.Name)
				if _abgac := d.Skip(); _abgac != nil {
					return _abgac
				}
			}
		case _e.EndElement:
			break _cdffg
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeConditionList and its children, prefixing error messages with path
func (_deggb *CT_TLTimeConditionList) ValidateWithPath(path string) error {
	for _aedb, _gedcd := range _deggb.Cond {
		if _dcded := _gedcd.ValidateWithPath(_d.Sprintf("%\u0073\u002f\u0043\u006f\u006e\u0064\u005b\u0025\u0064\u005d", path, _aedb)); _dcded != nil {
			return _dcded
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSyncProperties and its children, prefixing error messages with path
func (_efdag *CT_SlideSyncProperties) ValidateWithPath(path string) error {
	if _efdag.ExtLst != nil {
		if _edba := _efdag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edba != nil {
			return _edba
		}
	}
	return nil
}
func (_fce *CT_ControlList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _fce.Control != nil {
		_dcfg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u006f\u006e\u0074\u0072\u006fl"}}
		for _, _fgc := range _fce.Control {
			e.EncodeElement(_fgc, _dcfg)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLAnimateColorDirectionUnset ST_TLAnimateColorDirection = 0
	ST_TLAnimateColorDirectionCw    ST_TLAnimateColorDirection = 1
	ST_TLAnimateColorDirectionCcw   ST_TLAnimateColorDirection = 2
)

func (_egge *CT_OrientationTransition) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _egge.DirAttr != ST_DirectionUnset {
		_efed, _dbbb := _egge.DirAttr.MarshalXMLAttr(_e.Name{Local: "\u0064\u0069\u0072"})
		if _dbbb != nil {
			return _dbbb
		}
		start.Attr = append(start.Attr, _efed)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ShapeNonVisual and its children
func (_cbeb *CT_ShapeNonVisual) Validate() error {
	return _cbeb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}
func (_becec *CmAuthorLst) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_becec.CT_CommentAuthorList = *NewCT_CommentAuthorList()
_cbffe:
	for {
		_cdefc, _bbeda := d.Token()
		if _bbeda != nil {
			return _bbeda
		}
		switch _ebgfg := _cdefc.(type) {
		case _e.StartElement:
			switch _ebgfg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_fffa := NewCT_CommentAuthor()
				if _gedba := d.DecodeElement(_fffa, &_ebgfg); _gedba != nil {
					return _gedba
				}
				_becec.CmAuthor = append(_becec.CmAuthor, _fffa)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074\u0020\u0025\u0076", _ebgfg.Name)
				if _ebgfb := d.Skip(); _ebgfb != nil {
					return _ebgfb
				}
			}
		case _e.EndElement:
			break _cbffe
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WheelTransition and its children, prefixing error messages with path
func (_eccbd *CT_WheelTransition) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CornerDirectionTransition and its children, prefixing error messages with path
func (_cbg *CT_CornerDirectionTransition) ValidateWithPath(path string) error {
	if _daf := _cbg.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _daf != nil {
		return _daf
	}
	return nil
}

type CT_SlideIdList struct {

	// Slide ID
	SldId []*CT_SlideIdListEntry
}

// ValidateWithPath validates the Notes and its children, prefixing error messages with path
func (_cbcb *Notes) ValidateWithPath(path string) error {
	if _dgge := _cbcb.CT_NotesSlide.ValidateWithPath(path); _dgge != nil {
		return _dgge
	}
	return nil
}
func (_bdgbb ST_TLNextActionType) ValidateWithPath(path string) error {
	switch _bdgbb {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdgbb))
	}
	return nil
}

type CT_TLBuildDiagram struct {

	// Diagram Build Types
	BldAttr      ST_TLDiagramBuildType
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_abefcb ST_TLDiagramBuildType) ValidateWithPath(path string) error {
	switch _abefcb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abefcb))
	}
	return nil
}

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_afdgc *CT_Empty) ValidateWithPath(path string) error { return nil }

const (
	ST_DirectionUnset ST_Direction = 0
	ST_DirectionHorz  ST_Direction = 1
	ST_DirectionVert  ST_Direction = 2
)

// ValidateWithPath validates the CmAuthorLst and its children, prefixing error messages with path
func (_ffdee *CmAuthorLst) ValidateWithPath(path string) error {
	if _ddbff := _ffdee.CT_CommentAuthorList.ValidateWithPath(path); _ddbff != nil {
		return _ddbff
	}
	return nil
}

// Validate validates the CT_SlideIdListEntry and its children
func (_cgfb *CT_SlideIdListEntry) Validate() error {
	return _cgfb.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}
func (_bbdbc ST_PhotoAlbumFrameShape) Validate() error { return _bbdbc.ValidateWithPath("") }
func (_ccbed ST_ViewType) String() string {
	switch _ccbed {
	case 0:
		return ""
	case 1:
		return "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case 2:
		return "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 3:
		return "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case 4:
		return "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case 5:
		return "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 6:
		return "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case 7:
		return "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 8:
		return "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return ""
}
func NewCT_NotesMasterIdList() *CT_NotesMasterIdList { _aeed := &CT_NotesMasterIdList{}; return _aeed }
func (_dfeb *CT_NormalViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dfeb.RestoredLeft = NewCT_NormalViewPortion()
	_dfeb.RestoredTop = NewCT_NormalViewPortion()
	for _, _abcf := range start.Attr {
		if _abcf.Name.Local == "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073" {
			_dgea, _badc := _a.ParseBool(_abcf.Value)
			if _badc != nil {
				return _badc
			}
			_dfeb.ShowOutlineIconsAttr = &_dgea
			continue
		}
		if _abcf.Name.Local == "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072" {
			_bfeg, _fbbc := _a.ParseBool(_abcf.Value)
			if _fbbc != nil {
				return _fbbc
			}
			_dfeb.SnapVertSplitterAttr = &_bfeg
			continue
		}
		if _abcf.Name.Local == "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_dfeb.VertBarStateAttr.UnmarshalXMLAttr(_abcf)
			continue
		}
		if _abcf.Name.Local == "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_dfeb.HorzBarStateAttr.UnmarshalXMLAttr(_abcf)
			continue
		}
		if _abcf.Name.Local == "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077" {
			_cfef, _bbced := _a.ParseBool(_abcf.Value)
			if _bbced != nil {
				return _bbced
			}
			_dfeb.PreferSingleViewAttr = &_cfef
			continue
		}
	}
_ccea:
	for {
		_gcfe, _gccd := d.Token()
		if _gccd != nil {
			return _gccd
		}
		switch _bafcd := _gcfe.(type) {
		case _e.StartElement:
			switch _bafcd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}:
				if _aae := d.DecodeElement(_dfeb.RestoredLeft, &_bafcd); _aae != nil {
					return _aae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}:
				if _cccb := d.DecodeElement(_dfeb.RestoredTop, &_bafcd); _cccb != nil {
					return _cccb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfeb.ExtLst = NewCT_ExtensionList()
				if _cddd := d.DecodeElement(_dfeb.ExtLst, &_bafcd); _cddd != nil {
					return _cddd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _bafcd.Name)
				if _cfede := d.Skip(); _cfede != nil {
					return _cfede
				}
			}
		case _e.EndElement:
			break _ccea
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeCondition and its children, prefixing error messages with path
func (_bdcfe *CT_TLTimeCondition) ValidateWithPath(path string) error {
	if _ebfeg := _bdcfe.EvtAttr.ValidateWithPath(path + "\u002f\u0045\u0076\u0074\u0041\u0074\u0074\u0072"); _ebfeg != nil {
		return _ebfeg
	}
	if _bdcfe.DelayAttr != nil {
		if _gdag := _bdcfe.DelayAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u006c\u0061\u0079\u0041\u0074\u0074\u0072"); _gdag != nil {
			return _gdag
		}
	}
	if _bdcfe.TgtEl != nil {
		if _dfbb := _bdcfe.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _dfbb != nil {
			return _dfbb
		}
	}
	if _bdcfe.Tn != nil {
		if _gbec := _bdcfe.Tn.ValidateWithPath(path + "\u002f\u0054\u006e"); _gbec != nil {
			return _gbec
		}
	}
	if _bdcfe.Rtn != nil {
		if _gfaec := _bdcfe.Rtn.ValidateWithPath(path + "\u002f\u0052\u0074\u006e"); _gfaec != nil {
			return _gfaec
		}
	}
	return nil
}

// ValidateWithPath validates the Presentation and its children, prefixing error messages with path
func (_acfec *Presentation) ValidateWithPath(path string) error {
	if _eebeb := _acfec.CT_Presentation.ValidateWithPath(path); _eebeb != nil {
		return _eebeb
	}
	return nil
}
func (_feac *CT_CommonViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_feac.Scale = _da.NewCT_Scale2D()
	_feac.Origin = _da.NewCT_Point2D()
	for _, _gfbd := range start.Attr {
		if _gfbd.Name.Local == "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065" {
			_dbgb, _fbed := _a.ParseBool(_gfbd.Value)
			if _fbed != nil {
				return _fbed
			}
			_feac.VarScaleAttr = &_dbgb
			continue
		}
	}
_bcd:
	for {
		_dgfc, _fab := d.Token()
		if _fab != nil {
			return _fab
		}
		switch _gbba := _dgfc.(type) {
		case _e.StartElement:
			switch _gbba.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}:
				if _ddad := d.DecodeElement(_feac.Scale, &_gbba); _ddad != nil {
					return _ddad
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}:
				if _cde := d.DecodeElement(_feac.Origin, &_gbba); _cde != nil {
					return _cde
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _gbba.Name)
				if _ddade := d.Skip(); _ddade != nil {
					return _ddade
				}
			}
		case _e.EndElement:
			break _bcd
		case _e.CharData:
		}
	}
	return nil
}
func (_bcbag ST_TLTimeNodePresetClassType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bcbag.String(), start)
}

const (
	ST_TLAnimateMotionBehaviorOriginUnset  ST_TLAnimateMotionBehaviorOrigin = 0
	ST_TLAnimateMotionBehaviorOriginParent ST_TLAnimateMotionBehaviorOrigin = 1
	ST_TLAnimateMotionBehaviorOriginLayout ST_TLAnimateMotionBehaviorOrigin = 2
)

type ViewPr struct{ CT_ViewProperties }

func NewCT_Empty() *CT_Empty { _dbebd := &CT_Empty{}; return _dbebd }

// Validate validates the CT_CustomShowId and its children
func (_bbce *CT_CustomShowId) Validate() error {
	return _bbce.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064")
}

// ValidateWithPath validates the CT_NormalViewProperties and its children, prefixing error messages with path
func (_gfdf *CT_NormalViewProperties) ValidateWithPath(path string) error {
	if _cdcd := _gfdf.VertBarStateAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _cdcd != nil {
		return _cdcd
	}
	if _efbe := _gfdf.HorzBarStateAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _efbe != nil {
		return _efbe
	}
	if _fbba := _gfdf.RestoredLeft.ValidateWithPath(path + "\u002f\u0052\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"); _fbba != nil {
		return _fbba
	}
	if _gdfec := _gfdf.RestoredTop.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"); _gdfec != nil {
		return _gdfec
	}
	if _gfdf.ExtLst != nil {
		if _gdgga := _gfdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdgga != nil {
			return _gdgga
		}
	}
	return nil
}
func (_dfgc *ST_TLTimeNodeMasterRelation) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_dfgc = 0
	case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
		*_dfgc = 1
	case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
		*_dfgc = 2
	case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
		*_dfgc = 3
	}
	return nil
}

type CT_OleObjectChoice struct {
	Embed *CT_OleObjectEmbed
	Link  *CT_OleObjectLink
}

func (_effc ST_PrintWhat) String() string {
	switch _effc {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u0069\u0064\u0065\u0073"
	case 2:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case 3:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case 4:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case 5:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case 6:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case 7:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case 8:
		return "\u006e\u006f\u0074e\u0073"
	case 9:
		return "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return ""
}

type ST_WebScreenSize byte

func (_dcab *CT_OleObjectLink) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dcab.UpdateAutomaticAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_dcab.UpdateAutomaticAttr))})
	}
	e.EncodeToken(start)
	if _dcab.ExtLst != nil {
		_edgg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcab.ExtLst, _edgg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bafbc *TagLst) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0074\u0061\u0067\u004c\u0073\u0074"
	return _bafbc.CT_TagList.MarshalXML(e, start)
}

type CT_TLTimeTargetElement struct {

	// Slide Target
	SldTgt *CT_Empty

	// Sound Target
	SndTgt *_da.CT_EmbeddedWAVAudioFile

	// Shape Target
	SpTgt *CT_TLShapeTargetElement

	// Ink Target
	InkTgt *CT_TLSubShapeId
}
type CT_OleObjectLink struct {

	// Update Linked Embedded Objects Automatically
	UpdateAutomaticAttr *bool
	ExtLst              *CT_ExtensionList
}

func NewViewPr() *ViewPr {
	_beae := &ViewPr{}
	_beae.CT_ViewProperties = *NewCT_ViewProperties()
	return _beae
}

type PresentationPr struct{ CT_PresentationProperties }

// ValidateWithPath validates the CT_CustomerDataList and its children, prefixing error messages with path
func (_aac *CT_CustomerDataList) ValidateWithPath(path string) error {
	for _adcf, _agfb := range _aac.CustData {
		if _egc := _agfb.ValidateWithPath(_d.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _adcf)); _egc != nil {
			return _egc
		}
	}
	if _aac.Tags != nil {
		if _cag := _aac.Tags.ValidateWithPath(path + "\u002f\u0054\u0061g\u0073"); _cag != nil {
			return _cag
		}
	}
	return nil
}

type ST_TLParaBuildType byte

// ValidateWithPath validates the CT_NotesMasterIdListEntry and its children, prefixing error messages with path
func (_eecbd *CT_NotesMasterIdListEntry) ValidateWithPath(path string) error {
	if _eecbd.ExtLst != nil {
		if _dbge := _eecbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbge != nil {
			return _dbge
		}
	}
	return nil
}
func (_ggeff ST_TLCommandType) ValidateWithPath(path string) error {
	switch _ggeff {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggeff))
	}
	return nil
}

type CT_TLBehaviorAttributeNameList struct {

	// Attribute Name
	AttrName []string
}

func NewCT_ShowProperties() *CT_ShowProperties { _edaf := &CT_ShowProperties{}; return _edaf }
func (_bfaae *CT_TLByRgbColorTransform) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bddfe := range start.Attr {
		if _bddfe.Name.Local == "\u0072" {
			_eceee, _ebagd := ParseUnionST_FixedPercentage(_bddfe.Value)
			if _ebagd != nil {
				return _ebagd
			}
			_bfaae.RAttr = _eceee
			continue
		}
		if _bddfe.Name.Local == "\u0067" {
			_bacc, _ddgbf := ParseUnionST_FixedPercentage(_bddfe.Value)
			if _ddgbf != nil {
				return _ddgbf
			}
			_bfaae.GAttr = _bacc
			continue
		}
		if _bddfe.Name.Local == "\u0062" {
			_gdda, _beafe := ParseUnionST_FixedPercentage(_bddfe.Value)
			if _beafe != nil {
				return _beafe
			}
			_bfaae.BAttr = _gdda
			continue
		}
	}
	for {
		_geec, _dggcg := d.Token()
		if _dggcg != nil {
			return _d.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0052gb\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _dggcg)
		}
		if _caff, _aadg := _geec.(_e.EndElement); _aadg && _caff.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLTimeNodeMasterRelation byte
type CT_TLTimeCondition struct {

	// Trigger Event
	EvtAttr ST_TLTriggerEvent

	// Trigger Delay
	DelayAttr *ST_TLTime

	// Target Element Trigger Choice
	TgtEl *CT_TLTimeTargetElement

	// Time Node
	Tn *CT_TLTriggerTimeNodeID

	// Runtime Node Trigger Choice
	Rtn *CT_TLTriggerRuntimeNode
}

// ValidateWithPath validates the CT_Guide and its children, prefixing error messages with path
func (_faaf *CT_Guide) ValidateWithPath(path string) error {
	if _cfagb := _faaf.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _cfagb != nil {
		return _cfagb
	}
	if _faaf.PosAttr != nil {
		if _aabf := _faaf.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _aabf != nil {
			return _aabf
		}
	}
	return nil
}
func (_eege *CT_Connector) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_dcg := _e.StartElement{Name: _e.Name{Local: "p\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_eege.NvCxnSpPr, _dcg)
	_bcdg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_eege.SpPr, _bcdg)
	if _eege.Style != nil {
		_dca := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_eege.Style, _dca)
	}
	if _eege.ExtLst != nil {
		_feaa := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eege.ExtLst, _feaa)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_SlideTransition struct {

	// Transition Speed
	SpdAttr ST_TransitionSpeed

	// Advance on Click
	AdvClickAttr *bool

	// Advance after time
	AdvTmAttr *uint32
	Choice    *CT_SlideTransitionChoice

	// Sound Action
	SndAc  *CT_TransitionSoundAction
	ExtLst *CT_ExtensionListModify
}
type ST_TLTimeNodeSyncType byte

func (_adeda *CT_SlideLayoutIdListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gbac := range start.Attr {
		if _gbac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gbac.Name.Local == "\u0069\u0064" || _gbac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gbac.Name.Local == "\u0069\u0064" {
			_gafg, _ebae := _gbac.Value, error(nil)
			if _ebae != nil {
				return _ebae
			}
			_adeda.RIdAttr = _gafg
			continue
		}
		if _gbac.Name.Local == "\u0069\u0064" {
			_cdde, _abbac := _a.ParseUint(_gbac.Value, 10, 32)
			if _abbac != nil {
				return _abbac
			}
			_baed := uint32(_cdde)
			_adeda.IdAttr = &_baed
			continue
		}
	}
_dddgf:
	for {
		_befce, _fadf := d.Token()
		if _fadf != nil {
			return _fadf
		}
		switch _bgbf := _befce.(type) {
		case _e.StartElement:
			switch _bgbf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adeda.ExtLst = NewCT_ExtensionList()
				if _dbcfa := d.DecodeElement(_adeda.ExtLst, &_bgbf); _dbcfa != nil {
					return _dbcfa
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075t\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _bgbf.Name)
				if _cfcfb := d.Skip(); _cfcfb != nil {
					return _cfcfb
				}
			}
		case _e.EndElement:
			break _dddgf
		case _e.CharData:
		}
	}
	return nil
}
func (_afca *CT_Comment) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_afca.Pos = _da.NewCT_Point2D()
	for _, _fdbc := range start.Attr {
		if _fdbc.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_bge, _baa := _a.ParseUint(_fdbc.Value, 10, 32)
			if _baa != nil {
				return _baa
			}
			_afca.AuthorIdAttr = uint32(_bge)
			continue
		}
		if _fdbc.Name.Local == "\u0064\u0074" {
			_cdfc, _aeg := ParseStdlibTime(_fdbc.Value)
			if _aeg != nil {
				return _aeg
			}
			_afca.DtAttr = &_cdfc
			continue
		}
		if _fdbc.Name.Local == "\u0069\u0064\u0078" {
			_dgeda, _bag := _a.ParseUint(_fdbc.Value, 10, 32)
			if _bag != nil {
				return _bag
			}
			_afca.IdxAttr = uint32(_dgeda)
			continue
		}
	}
_efff:
	for {
		_begg, _ggf := d.Token()
		if _ggf != nil {
			return _ggf
		}
		switch _cceb := _begg.(type) {
		case _e.StartElement:
			switch _cceb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006f\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _acg := d.DecodeElement(_afca.Pos, &_cceb); _acg != nil {
					return _acg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _ccg := d.DecodeElement(&_afca.Text, &_cceb); _ccg != nil {
					return _ccg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afca.ExtLst = NewCT_ExtensionListModify()
				if _gga := d.DecodeElement(_afca.ExtLst, &_cceb); _gga != nil {
					return _gga
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _cceb.Name)
				if _bfge := d.Skip(); _bfge != nil {
					return _bfge
				}
			}
		case _e.EndElement:
			break _efff
		case _e.CharData:
		}
	}
	return nil
}
func (_ebaf *ST_TLAnimateEffectTransition) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_ebaf = 0
	case "\u0069\u006e":
		*_ebaf = 1
	case "\u006f\u0075\u0074":
		*_ebaf = 2
	case "\u006e\u006f\u006e\u0065":
		*_ebaf = 3
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjectChoice and its children, prefixing error messages with path
func (_fdgf *CT_OleObjectChoice) ValidateWithPath(path string) error {
	if _fdgf.Embed != nil {
		if _afddb := _fdgf.Embed.ValidateWithPath(path + "\u002f\u0045\u006d\u0062\u0065\u0064"); _afddb != nil {
			return _afddb
		}
	}
	if _fdgf.Link != nil {
		if _agbc := _fdgf.Link.ValidateWithPath(path + "\u002f\u004c\u0069n\u006b"); _agbc != nil {
			return _agbc
		}
	}
	return nil
}

type CT_ModifyVerifier struct {

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinValueAttr *uint32

	// Cryptographic Provider Type
	CryptProviderTypeAttr _ef.ST_CryptProv

	// Cryptographic Algorithm Class
	CryptAlgorithmClassAttr _ef.ST_AlgClass

	// Cryptographic Algorithm Type
	CryptAlgorithmTypeAttr _ef.ST_AlgType

	// Cryptographic Hashing Algorithm
	CryptAlgorithmSidAttr *uint32

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Salt for Password Verifier
	SaltDataAttr *string

	// Password Hash
	HashDataAttr *string

	// Cryptographic Provider
	CryptProviderAttr *string

	// Cryptographic Algorithm Extensibility
	AlgIdExtAttr *uint32

	// Algorithm Extensibility Source
	AlgIdExtSourceAttr *string

	// Cryptographic Provider Type Extensibility
	CryptProviderTypeExtAttr *uint32

	// Provider Type Extensibility Source
	CryptProviderTypeExtSourceAttr *string
}

// ValidateWithPath validates the CT_CommentAuthor and its children, prefixing error messages with path
func (_fgaf *CT_CommentAuthor) ValidateWithPath(path string) error {
	if _fgaf.ExtLst != nil {
		if _cceba := _fgaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cceba != nil {
			return _cceba
		}
	}
	return nil
}
func (_bagbe *CT_TLTemplate) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bagbe.LvlAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006c\u0076\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_bagbe.LvlAttr)})
	}
	e.EncodeToken(start)
	_ggfgf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
	e.EncodeElement(_bagbe.TnLst, _ggfgf)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ebbdf *ST_ViewType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_deegf, _dbbad := d.Token()
	if _dbbad != nil {
		return _dbbad
	}
	if _gcbbb, _efdf := _deegf.(_e.EndElement); _efdf && _gcbbb.Name == start.Name {
		*_ebbdf = 1
		return nil
	}
	if _ecebe, _cbbbe := _deegf.(_e.CharData); !_cbbbe {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deegf)
	} else {
		switch string(_ecebe) {
		case "":
			*_ebbdf = 0
		case "\u0073l\u0064\u0056\u0069\u0065\u0077":
			*_ebbdf = 1
		case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_ebbdf = 2
		case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
			*_ebbdf = 3
		case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
			*_ebbdf = 4
		case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_ebbdf = 5
		case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
			*_ebbdf = 6
		case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_ebbdf = 7
		case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
			*_ebbdf = 8
		}
	}
	_deegf, _dbbad = d.Token()
	if _dbbad != nil {
		return _dbbad
	}
	if _defga, _eeegef := _deegf.(_e.EndElement); _eeegef && _defga.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deegf)
}
func (_ddfb ST_TLTime) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ddfb.Uint32 != nil {
		e.EncodeToken(_e.CharData(_d.Sprintf("\u0025\u0064", *_ddfb.Uint32)))
	}
	if _ddfb.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_e.CharData(_ddfb.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_e.EndElement{Name: start.Name})
}

const (
	ST_TLNextActionTypeUnset ST_TLNextActionType = 0
	ST_TLNextActionTypeNone  ST_TLNextActionType = 1
	ST_TLNextActionTypeSeek  ST_TLNextActionType = 2
)

func (_bdddgf *ST_TLBehaviorAdditiveType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fdbcb, _baadcd := d.Token()
	if _baadcd != nil {
		return _baadcd
	}
	if _afgf, _eeffd := _fdbcb.(_e.EndElement); _eeffd && _afgf.Name == start.Name {
		*_bdddgf = 1
		return nil
	}
	if _fgfa, _cafgg := _fdbcb.(_e.CharData); !_cafgg {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdbcb)
	} else {
		switch string(_fgfa) {
		case "":
			*_bdddgf = 0
		case "\u0062\u0061\u0073\u0065":
			*_bdddgf = 1
		case "\u0073\u0075\u006d":
			*_bdddgf = 2
		case "\u0072\u0065\u0070\u006c":
			*_bdddgf = 3
		case "\u006d\u0075\u006c\u0074":
			*_bdddgf = 4
		case "\u006e\u006f\u006e\u0065":
			*_bdddgf = 5
		}
	}
	_fdbcb, _baadcd = d.Token()
	if _baadcd != nil {
		return _baadcd
	}
	if _ffcf, _gdfefe := _fdbcb.(_e.EndElement); _gdfefe && _ffcf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdbcb)
}
func (_dbbbg ST_PhotoAlbumLayout) Validate() error { return _dbbbg.ValidateWithPath("") }

// Validate validates the CT_TLMediaNodeAudio and its children
func (_daeb *CT_TLMediaNodeAudio) Validate() error {
	return _daeb.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f")
}

// Validate validates the CT_TLTimeNodeParallel and its children
func (_edbca *CT_TLTimeNodeParallel) Validate() error {
	return _edbca.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c")
}

type CT_Extension struct {

	// Uniform Resource Identifier
	UriAttr string
	Any     []_f.Any
}

// ValidateWithPath validates the CT_TLMediaNodeVideo and its children, prefixing error messages with path
func (_cbgfa *CT_TLMediaNodeVideo) ValidateWithPath(path string) error {
	if _caacg := _cbgfa.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _caacg != nil {
		return _caacg
	}
	return nil
}
func (_egfge *CT_Picture) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_egfge.NvPicPr = NewCT_PictureNonVisual()
	_egfge.BlipFill = _da.NewCT_BlipFillProperties()
	_egfge.SpPr = _da.NewCT_ShapeProperties()
_edfc:
	for {
		_efac, _ecbe := d.Token()
		if _ecbe != nil {
			return _ecbe
		}
		switch _ccgbd := _efac.(type) {
		case _e.StartElement:
			switch _ccgbd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _dgeac := d.DecodeElement(_egfge.NvPicPr, &_ccgbd); _dgeac != nil {
					return _dgeac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _ggcbg := d.DecodeElement(_egfge.BlipFill, &_ccgbd); _ggcbg != nil {
					return _ggcbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fbff := d.DecodeElement(_egfge.SpPr, &_ccgbd); _fbff != nil {
					return _fbff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_egfge.Style = _da.NewCT_ShapeStyle()
				if _eece := d.DecodeElement(_egfge.Style, &_ccgbd); _eece != nil {
					return _eece
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egfge.ExtLst = NewCT_ExtensionListModify()
				if _gbcc := d.DecodeElement(_egfge.ExtLst, &_ccgbd); _gbcc != nil {
					return _gbcc
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _ccgbd.Name)
				if _gbfa := d.Skip(); _gbfa != nil {
					return _gbfa
				}
			}
		case _e.EndElement:
			break _edfc
		case _e.CharData:
		}
	}
	return nil
}

type CT_TLTimeAnimateValue struct {

	// Time
	TmAttr *ST_TLTimeAnimateValueTime

	// Formula
	FmlaAttr *string

	// Value
	Val *CT_TLAnimVariant
}

func (_ebdga ST_TLBehaviorTransformType) Validate() error { return _ebdga.ValidateWithPath("") }
func NewCT_SlideTransitionChoice() *CT_SlideTransitionChoice {
	_bbcaa := &CT_SlideTransitionChoice{}
	return _bbcaa
}
func (_eeddf ST_TLBehaviorAdditiveType) Validate() error  { return _eeddf.ValidateWithPath("") }
func (_aageg ST_TLAnimateColorDirection) Validate() error { return _aageg.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLTimeNodeSequence and its children, prefixing error messages with path
func (_fgeff *CT_TLTimeNodeSequence) ValidateWithPath(path string) error {
	if _edbfb := _fgeff.PrevAcAttr.ValidateWithPath(path + "/\u0050\u0072\u0065\u0076\u0041\u0063\u0041\u0074\u0074\u0072"); _edbfb != nil {
		return _edbfb
	}
	if _agdca := _fgeff.NextAcAttr.ValidateWithPath(path + "/\u004e\u0065\u0078\u0074\u0041\u0063\u0041\u0074\u0074\u0072"); _agdca != nil {
		return _agdca
	}
	if _gecee := _fgeff.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _gecee != nil {
		return _gecee
	}
	if _fgeff.PrevCondLst != nil {
		if _fdca := _fgeff.PrevCondLst.ValidateWithPath(path + "\u002f\u0050\u0072e\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _fdca != nil {
			return _fdca
		}
	}
	if _fgeff.NextCondLst != nil {
		if _gcdfg := _fgeff.NextCondLst.ValidateWithPath(path + "\u002f\u004e\u0065x\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _gcdfg != nil {
			return _gcdfg
		}
	}
	return nil
}
func (_cfedd ST_SlideLayoutType) String() string {
	switch _cfedd {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0074\u0078"
	case 3:
		return "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case 4:
		return "\u0074\u0062\u006c"
	case 5:
		return "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case 6:
		return "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 7:
		return "\u0064\u0067\u006d"
	case 8:
		return "\u0063\u0068\u0061r\u0074"
	case 9:
		return "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case 10:
		return "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 11:
		return "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case 12:
		return "\u0062\u006c\u0061n\u006b"
	case 13:
		return "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case 14:
		return "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 15:
		return "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case 16:
		return "\u006f\u0062\u006a"
	case 17:
		return "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case 18:
		return "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case 19:
		return "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case 20:
		return "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case 21:
		return "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 22:
		return "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 23:
		return "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case 24:
		return "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case 25:
		return "\u0076\u0065\u0072\u0074\u0054\u0078"
	case 26:
		return "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case 27:
		return "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case 28:
		return "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case 29:
		return "\u0074\u0077\u006f\u004f\u0062\u006a"
	case 30:
		return "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 31:
		return "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case 32:
		return "\u0063\u0075\u0073\u0074"
	case 33:
		return "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case 34:
		return "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case 35:
		return "\u006f\u0062\u006aT\u0078"
	case 36:
		return "\u0070\u0069\u0063T\u0078"
	}
	return ""
}
func (_ecag ST_PhotoAlbumLayout) String() string {
	switch _ecag {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case 2:
		return "\u0031\u0070\u0069\u0063"
	case 3:
		return "\u0032\u0070\u0069\u0063"
	case 4:
		return "\u0034\u0070\u0069\u0063"
	case 5:
		return "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 6:
		return "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 7:
		return "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return ""
}
func (_cbee *CT_TLAnimateMotionBehavior) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cbee.OriginAttr != ST_TLAnimateMotionBehaviorOriginUnset {
		_beafc, _gffe := _cbee.OriginAttr.MarshalXMLAttr(_e.Name{Local: "\u006f\u0072\u0069\u0067\u0069\u006e"})
		if _gffe != nil {
			return _gffe
		}
		start.Attr = append(start.Attr, _beafc)
	}
	if _cbee.PathAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0061\u0074\u0068"}, Value: _d.Sprintf("\u0025\u0076", *_cbee.PathAttr)})
	}
	if _cbee.PathEditModeAttr != ST_TLAnimateMotionPathEditModeUnset {
		_gcdfd, _egadc := _cbee.PathEditModeAttr.MarshalXMLAttr(_e.Name{Local: "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065"})
		if _egadc != nil {
			return _egadc
		}
		start.Attr = append(start.Attr, _gcdfd)
	}
	if _cbee.RAngAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u0041\u006e\u0067"}, Value: _d.Sprintf("\u0025\u0076", *_cbee.RAngAttr)})
	}
	if _cbee.PtsTypesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0076", *_cbee.PtsTypesAttr)})
	}
	e.EncodeToken(start)
	_eggd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_cbee.CBhvr, _eggd)
	if _cbee.By != nil {
		_fcgege := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_cbee.By, _fcgege)
	}
	if _cbee.From != nil {
		_accac := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_cbee.From, _accac)
	}
	if _cbee.To != nil {
		_cfbd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_cbee.To, _cfbd)
	}
	if _cbee.RCtr != nil {
		_adagg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0072\u0043\u0074\u0072"}}
		e.EncodeElement(_cbee.RCtr, _adagg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ecagf ST_PlaceholderSize) String() string {
	switch _ecagf {
	case 0:
		return ""
	case 1:
		return "\u0066\u0075\u006c\u006c"
	case 2:
		return "\u0068\u0061\u006c\u0066"
	case 3:
		return "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return ""
}
func (_faggg ST_IterateType) String() string {
	switch _faggg {
	case 0:
		return ""
	case 1:
		return "\u0065\u006c"
	case 2:
		return "\u0077\u0064"
	case 3:
		return "\u006c\u0074"
	}
	return ""
}
func (_ebb *CT_CommonSlideViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ebb.CViewPr = NewCT_CommonViewProperties()
	for _, _gece := range start.Attr {
		if _gece.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064" {
			_cacd, _abd := _a.ParseBool(_gece.Value)
			if _abd != nil {
				return _abd
			}
			_ebb.SnapToGridAttr = &_cacd
			continue
		}
		if _gece.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_fede, _abe := _a.ParseBool(_gece.Value)
			if _abe != nil {
				return _abe
			}
			_ebb.SnapToObjectsAttr = &_fede
			continue
		}
		if _gece.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073" {
			_caa, _bdgg := _a.ParseBool(_gece.Value)
			if _bdgg != nil {
				return _bdgg
			}
			_ebb.ShowGuidesAttr = &_caa
			continue
		}
	}
_cgb:
	for {
		_ebg, _ccga := d.Token()
		if _ccga != nil {
			return _ccga
		}
		switch _fafg := _ebg.(type) {
		case _e.StartElement:
			switch _fafg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _efd := d.DecodeElement(_ebb.CViewPr, &_fafg); _efd != nil {
					return _efd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}:
				_ebb.GuideLst = NewCT_GuideList()
				if _fbb := d.DecodeElement(_ebb.GuideLst, &_fafg); _fbb != nil {
					return _fbb
				}
			default:
				_f.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _fafg.Name)
				if _dfba := d.Skip(); _dfba != nil {
					return _dfba
				}
			}
		case _e.EndElement:
			break _cgb
		case _e.CharData:
		}
	}
	return nil
}
func (_cabaf ST_TLTimeNodeMasterRelation) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_bccf := _e.Attr{}
	_bccf.Name = name
	switch _cabaf {
	case ST_TLTimeNodeMasterRelationUnset:
		_bccf.Value = ""
	case ST_TLTimeNodeMasterRelationSameClick:
		_bccf.Value = "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationLastClick:
		_bccf.Value = "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationNextClick:
		_bccf.Value = "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return _bccf, nil
}
func (_cafgb ST_WebColorType) Validate() error { return _cafgb.ValidateWithPath("") }
func NewCT_CustomerData() *CT_CustomerData     { _dbaa := &CT_CustomerData{}; return _dbaa }
func NewCT_CustomShow() *CT_CustomShow {
	_gcf := &CT_CustomShow{}
	_gcf.SldLst = NewCT_SlideRelationshipList()
	return _gcf
}
func (_acedd *CT_TLBehaviorAttributeNameList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_ebgae:
	for {
		_aabg, _fafb := d.Token()
		if _fafb != nil {
			return _fafb
		}
		switch _efddc := _aabg.(type) {
		case _e.StartElement:
			switch _efddc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}:
				var _degg string
				if _gbbfea := d.DecodeElement(&_degg, &_efddc); _gbbfea != nil {
					return _gbbfea
				}
				_acedd.AttrName = append(_acedd.AttrName, _degg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0041\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u004e\u0061\u006d\u0065L\u0069\u0073\u0074\u0020\u0025\u0076", _efddc.Name)
				if _bfbag := d.Skip(); _bfbag != nil {
					return _bfbag
				}
			}
		case _e.EndElement:
			break _ebgae
		case _e.CharData:
		}
	}
	return nil
}
func (_fcfe *CT_NotesTextViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_beffb := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_fcfe.CViewPr, _beffb)
	if _fcfe.ExtLst != nil {
		_fgba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcfe.ExtLst, _fgba)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bfebe ST_PlaceholderType) String() string {
	switch _bfebe {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0062\u006f\u0064\u0079"
	case 3:
		return "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case 4:
		return "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case 5:
		return "\u0064\u0074"
	case 6:
		return "\u0073\u006c\u0064\u004e\u0075\u006d"
	case 7:
		return "\u0066\u0074\u0072"
	case 8:
		return "\u0068\u0064\u0072"
	case 9:
		return "\u006f\u0062\u006a"
	case 10:
		return "\u0063\u0068\u0061r\u0074"
	case 11:
		return "\u0074\u0062\u006c"
	case 12:
		return "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case 13:
		return "\u0064\u0067\u006d"
	case 14:
		return "\u006d\u0065\u0064i\u0061"
	case 15:
		return "\u0073\u006c\u0064\u0049\u006d\u0067"
	case 16:
		return "\u0070\u0069\u0063"
	}
	return ""
}
func (_becaf *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_becaf = 0
	case "\u0070\u0061\u0072\u0065\u006e\u0074":
		*_becaf = 1
	case "\u006c\u0061\u0079\u006f\u0075\u0074":
		*_becaf = 2
	}
	return nil
}
func (_befg *CT_PhotoAlbum) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _befg.BwAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0062\u0077"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_befg.BwAttr))})
	}
	if _befg.ShowCaptionsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_befg.ShowCaptionsAttr))})
	}
	if _befg.LayoutAttr != ST_PhotoAlbumLayoutUnset {
		_cada, _cgecg := _befg.LayoutAttr.MarshalXMLAttr(_e.Name{Local: "\u006c\u0061\u0079\u006f\u0075\u0074"})
		if _cgecg != nil {
			return _cgecg
		}
		start.Attr = append(start.Attr, _cada)
	}
	if _befg.FrameAttr != ST_PhotoAlbumFrameShapeUnset {
		_dagb, _fddf := _befg.FrameAttr.MarshalXMLAttr(_e.Name{Local: "\u0066\u0072\u0061m\u0065"})
		if _fddf != nil {
			return _fddf
		}
		start.Attr = append(start.Attr, _dagb)
	}
	e.EncodeToken(start)
	if _befg.ExtLst != nil {
		_dead := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_befg.ExtLst, _dead)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TimeNodeList and its children, prefixing error messages with path
func (_dgbff *CT_TimeNodeList) ValidateWithPath(path string) error {
	for _dcdffg, _accag := range _dgbff.Par {
		if _affad := _accag.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0050\u0061\u0072\u005b\u0025\u0064\u005d", path, _dcdffg)); _affad != nil {
			return _affad
		}
	}
	for _dbdcc, _aafb := range _dgbff.Seq {
		if _adeg := _aafb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0071\u005b\u0025\u0064\u005d", path, _dbdcc)); _adeg != nil {
			return _adeg
		}
	}
	for _ffdg, _fcdcc := range _dgbff.Excl {
		if _cgcf := _fcdcc.ValidateWithPath(_d.Sprintf("%\u0073\u002f\u0045\u0078\u0063\u006c\u005b\u0025\u0064\u005d", path, _ffdg)); _cgcf != nil {
			return _cgcf
		}
	}
	for _dced, _gbae := range _dgbff.Anim {
		if _egcd := _gbae.ValidateWithPath(_d.Sprintf("%\u0073\u002f\u0041\u006e\u0069\u006d\u005b\u0025\u0064\u005d", path, _dced)); _egcd != nil {
			return _egcd
		}
	}
	for _agbceg, _egagb := range _dgbff.AnimClr {
		if _ddeaf := _egagb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0043\u006cr\u005b\u0025\u0064\u005d", path, _agbceg)); _ddeaf != nil {
			return _ddeaf
		}
	}
	for _cabbb, _dabfc := range _dgbff.AnimEffect {
		if _cdege := _dabfc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063t\u005b\u0025\u0064\u005d", path, _cabbb)); _cdege != nil {
			return _cdege
		}
	}
	for _facda, _caaab := range _dgbff.AnimMotion {
		if _gbff := _caaab.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _facda)); _gbff != nil {
			return _gbff
		}
	}
	for _fffed, _aggb := range _dgbff.AnimRot {
		if _gdcc := _aggb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0052\u006ft\u005b\u0025\u0064\u005d", path, _fffed)); _gdcc != nil {
			return _gdcc
		}
	}
	for _aggdf, _fgcg := range _dgbff.AnimScale {
		if _gddg := _fgcg.ValidateWithPath(_d.Sprintf("\u0025\u0073/\u0041\u006e\u0069m\u0053\u0063\u0061\u006c\u0065\u005b\u0025\u0064\u005d", path, _aggdf)); _gddg != nil {
			return _gddg
		}
	}
	for _cfeea, _fggc := range _dgbff.Cmd {
		if _febce := _fggc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0043\u006d\u0064\u005b\u0025\u0064\u005d", path, _cfeea)); _febce != nil {
			return _febce
		}
	}
	for _dfbbda, _ddeab := range _dgbff.Set {
		if _gfffd := _ddeab.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _dfbbda)); _gfffd != nil {
			return _gfffd
		}
	}
	for _gebef, _aefgg := range _dgbff.Audio {
		if _cfgbg := _aefgg.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fA\u0075\u0064\u0069\u006f\u005b\u0025\u0064\u005d", path, _gebef)); _cfgbg != nil {
			return _cfgbg
		}
	}
	for _fcff, _dbfbd := range _dgbff.Video {
		if _ccefc := _dbfbd.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fV\u0069\u0064\u0065\u006f\u005b\u0025\u0064\u005d", path, _fcff)); _ccefc != nil {
			return _ccefc
		}
	}
	return nil
}
func (_ggedg *CT_TLAnimVariantBooleanVal) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0076\u0061\u006c"}, Value: _d.Sprintf("\u0025\u0064", _efaca(_ggedg.ValAttr))})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_eafde *CT_OleObjectEmbed) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _eafde.FollowColorSchemeAttr != ST_OleObjectFollowColorSchemeUnset {
		_faefcf, _fggbg := _eafde.FollowColorSchemeAttr.MarshalXMLAttr(_e.Name{Local: "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065"})
		if _fggbg != nil {
			return _fggbg
		}
		start.Attr = append(start.Attr, _faefcf)
	}
	e.EncodeToken(start)
	if _eafde.ExtLst != nil {
		_bfed := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eafde.ExtLst, _bfed)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bacgc ST_SplitterBarState) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fagbf := _e.Attr{}
	_fagbf.Name = name
	switch _bacgc {
	case ST_SplitterBarStateUnset:
		_fagbf.Value = ""
	case ST_SplitterBarStateMinimized:
		_fagbf.Value = "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case ST_SplitterBarStateRestored:
		_fagbf.Value = "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_SplitterBarStateMaximized:
		_fagbf.Value = "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return _fagbf, nil
}
func (_cccf *CT_NotesMasterIdList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cccf.NotesMasterId != nil {
		_cedf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_cccf.NotesMasterId, _cedf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bgbd *CT_ShowProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bgbd.LoopAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bgbd.LoopAttr))})
	}
	if _bgbd.ShowNarrationAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bgbd.ShowNarrationAttr))})
	}
	if _bgbd.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bgbd.ShowAnimationAttr))})
	}
	if _bgbd.UseTimingsAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_bgbd.UseTimingsAttr))})
	}
	e.EncodeToken(start)
	if _bgbd.Present != nil {
		_ebgde := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_bgbd.Present, _ebgde)
	}
	if _bgbd.Browse != nil {
		_bccgb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_bgbd.Browse, _bccgb)
	}
	if _bgbd.Kiosk != nil {
		_fgcbe := _e.StartElement{Name: _e.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_bgbd.Kiosk, _fgcbe)
	}
	if _bgbd.SldAll != nil {
		_gdcaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_bgbd.SldAll, _gdcaf)
	}
	if _bgbd.SldRg != nil {
		_cebd := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_bgbd.SldRg, _cebd)
	}
	if _bgbd.CustShow != nil {
		_dfbd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_bgbd.CustShow, _dfbd)
	}
	if _bgbd.PenClr != nil {
		_adgd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0065\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_bgbd.PenClr, _adgd)
	}
	if _bgbd.ExtLst != nil {
		_ecbfe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgbd.ExtLst, _ecbfe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_SlideLayoutIdList() *CT_SlideLayoutIdList {
	_fccada := &CT_SlideLayoutIdList{}
	return _fccada
}

const (
	ST_PrintWhatUnset     ST_PrintWhat = 0
	ST_PrintWhatSlides    ST_PrintWhat = 1
	ST_PrintWhatHandouts1 ST_PrintWhat = 2
	ST_PrintWhatHandouts2 ST_PrintWhat = 3
	ST_PrintWhatHandouts3 ST_PrintWhat = 4
	ST_PrintWhatHandouts4 ST_PrintWhat = 5
	ST_PrintWhatHandouts6 ST_PrintWhat = 6
	ST_PrintWhatHandouts9 ST_PrintWhat = 7
	ST_PrintWhatNotes     ST_PrintWhat = 8
	ST_PrintWhatOutline   ST_PrintWhat = 9
)

// Validate validates the CT_TLByRgbColorTransform and its children
func (_fdacf *CT_TLByRgbColorTransform) Validate() error {
	return _fdacf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

// Validate validates the CT_PresentationProperties and its children
func (_badb *CT_PresentationProperties) Validate() error {
	return _badb.ValidateWithPath("\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}
func NewCT_ControlList() *CT_ControlList         { _dfg := &CT_ControlList{}; return _dfg }
func NewCT_InOutTransition() *CT_InOutTransition { _eefbgd := &CT_InOutTransition{}; return _eefbgd }
func (_efefb *CT_PrintProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _efefb.PrnWhatAttr != ST_PrintWhatUnset {
		_gggc, _faea := _efefb.PrnWhatAttr.MarshalXMLAttr(_e.Name{Local: "\u0070r\u006e\u0057\u0068\u0061\u0074"})
		if _faea != nil {
			return _faea
		}
		start.Attr = append(start.Attr, _gggc)
	}
	if _efefb.ClrModeAttr != ST_PrintColorModeUnset {
		_bbge, _cgdcb := _efefb.ClrModeAttr.MarshalXMLAttr(_e.Name{Local: "\u0063l\u0072\u004d\u006f\u0064\u0065"})
		if _cgdcb != nil {
			return _cgdcb
		}
		start.Attr = append(start.Attr, _bbge)
	}
	if _efefb.HiddenSlidesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_efefb.HiddenSlidesAttr))})
	}
	if _efefb.ScaleToFitPaperAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_efefb.ScaleToFitPaperAttr))})
	}
	if _efefb.FrameSlidesAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_efefb.FrameSlidesAttr))})
	}
	e.EncodeToken(start)
	if _efefb.ExtLst != nil {
		_ffaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efefb.ExtLst, _ffaf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_SlideListChoice and its children, prefixing error messages with path
func (_gddeg *EG_SlideListChoice) ValidateWithPath(path string) error {
	if _gddeg.SldAll != nil {
		if _edbdc := _gddeg.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _edbdc != nil {
			return _edbdc
		}
	}
	if _gddeg.SldRg != nil {
		if _edeccd := _gddeg.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _edeccd != nil {
			return _edeccd
		}
	}
	if _gddeg.CustShow != nil {
		if _acfff := _gddeg.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _acfff != nil {
			return _acfff
		}
	}
	return nil
}
func (_febca *CT_Shape) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_febca.NvSpPr = NewCT_ShapeNonVisual()
	_febca.SpPr = _da.NewCT_ShapeProperties()
	for _, _affd := range start.Attr {
		if _affd.Name.Local == "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl" {
			_fagg, _abcfb := _a.ParseBool(_affd.Value)
			if _abcfb != nil {
				return _abcfb
			}
			_febca.UseBgFillAttr = &_fagg
			continue
		}
	}
_abede:
	for {
		_eeeg, _bdad := d.Token()
		if _bdad != nil {
			return _bdad
		}
		switch _cagg := _eeeg.(type) {
		case _e.StartElement:
			switch _cagg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _fafeb := d.DecodeElement(_febca.NvSpPr, &_cagg); _fafeb != nil {
					return _fafeb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _ddbea := d.DecodeElement(_febca.SpPr, &_cagg); _ddbea != nil {
					return _ddbea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_febca.Style = _da.NewCT_ShapeStyle()
				if _aabfg := d.DecodeElement(_febca.Style, &_cagg); _aabfg != nil {
					return _aabfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_febca.TxBody = _da.NewCT_TextBody()
				if _abfd := d.DecodeElement(_febca.TxBody, &_cagg); _abfd != nil {
					return _abfd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_febca.ExtLst = NewCT_ExtensionListModify()
				if _edebc := d.DecodeElement(_febca.ExtLst, &_cagg); _edebc != nil {
					return _edebc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _cagg.Name)
				if _bfeae := d.Skip(); _bfeae != nil {
					return _bfeae
				}
			}
		case _e.EndElement:
			break _abede
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLSubShapeId and its children, prefixing error messages with path
func (_fddbe *CT_TLSubShapeId) ValidateWithPath(path string) error { return nil }
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_ecfg := &CT_GroupShapeNonVisual{}
	_ecfg.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_ecfg.CNvGrpSpPr = _da.NewCT_NonVisualGroupDrawingShapeProps()
	_ecfg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _ecfg
}
func NewCT_TagList() *CT_TagList { _cggc := &CT_TagList{}; return _cggc }
func (_adaeg *CT_NormalViewPortion) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bffc := range start.Attr {
		if _bffc.Name.Local == "\u0073\u007a" {
			_agfd, _gbedc := ParseUnionST_PositiveFixedPercentage(_bffc.Value)
			if _gbedc != nil {
				return _gbedc
			}
			_adaeg.SzAttr = _agfd
			continue
		}
		if _bffc.Name.Local == "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074" {
			_cdae, _dfddf := _a.ParseBool(_bffc.Value)
			if _dfddf != nil {
				return _dfddf
			}
			_adaeg.AutoAdjustAttr = &_cdae
			continue
		}
	}
	for {
		_dddd, _bfcg := d.Token()
		if _bfcg != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006da\u006cV\u0069\u0065\u0077\u0050\u006f\u0072\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _bfcg)
		}
		if _ddgda, _afde := _dddd.(_e.EndElement); _afde && _ddgda.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbbc *CT_TLOleBuildChart) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bbgbd := range start.Attr {
		if _bbgbd.Name.Local == "\u0062\u006c\u0064" {
			_cbbc.BldAttr.UnmarshalXMLAttr(_bbgbd)
			continue
		}
		if _bbgbd.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_ffdfg, _aegeb := _a.ParseBool(_bbgbd.Value)
			if _aegeb != nil {
				return _aegeb
			}
			_cbbc.AnimBgAttr = &_ffdfg
			continue
		}
		if _bbgbd.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gfbbc, _bcfbf := _a.ParseUint(_bbgbd.Value, 10, 32)
			if _bcfbf != nil {
				return _bcfbf
			}
			_cgeb := uint32(_gfbbc)
			_cbbc.SpidAttr = &_cgeb
			continue
		}
		if _bbgbd.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_beggd, _daab := _a.ParseUint(_bbgbd.Value, 10, 32)
			if _daab != nil {
				return _daab
			}
			_cdfd := uint32(_beggd)
			_cbbc.GrpIdAttr = &_cdfd
			continue
		}
		if _bbgbd.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_bdabe, _bfdde := _a.ParseBool(_bbgbd.Value)
			if _bfdde != nil {
				return _bfdde
			}
			_cbbc.UiExpandAttr = &_bdabe
			continue
		}
	}
	for {
		_debaa, _cfgab := d.Token()
		if _cfgab != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u004c\u004f\u006c\u0065\u0042\u0075i\u006c\u0064\u0043\u0068\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _cfgab)
		}
		if _edea, _aadfd := _debaa.(_e.EndElement); _aadfd && _edea.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SideDirectionTransition and its children
func (_bacb *CT_SideDirectionTransition) Validate() error {
	return _bacb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}
func (_decgg ST_PrintWhat) Validate() error { return _decgg.ValidateWithPath("") }
func (_acegf *ST_TLTriggerRuntimeNode) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_acegf = 0
	case "\u0066\u0069\u0072s\u0074":
		*_acegf = 1
	case "\u006c\u0061\u0073\u0074":
		*_acegf = 2
	case "\u0061\u006c\u006c":
		*_acegf = 3
	}
	return nil
}
func (_ddgg *CT_OutlineViewSlideList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ddgg.Sld != nil {
		_fbcf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _cbgcbe := range _ddgg.Sld {
			e.EncodeElement(_cbgcbe, _fbcf)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_adaac *ST_TLAnimateBehaviorCalcMode) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cbbfe, _dccad := d.Token()
	if _dccad != nil {
		return _dccad
	}
	if _bfgbb, _dcfeg := _cbbfe.(_e.EndElement); _dcfeg && _bfgbb.Name == start.Name {
		*_adaac = 1
		return nil
	}
	if _faeff, _fcdd := _cbbfe.(_e.CharData); !_fcdd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbbfe)
	} else {
		switch string(_faeff) {
		case "":
			*_adaac = 0
		case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
			*_adaac = 1
		case "\u006c\u0069\u006e":
			*_adaac = 2
		case "\u0066\u006d\u006c\u0061":
			*_adaac = 3
		}
	}
	_cbbfe, _dccad = d.Token()
	if _dccad != nil {
		return _dccad
	}
	if _cffaa, _fbbga := _cbbfe.(_e.EndElement); _fbbga && _cffaa.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbbfe)
}
func (_cebcg ST_TLAnimateMotionBehaviorOrigin) ValidateWithPath(path string) error {
	switch _cebcg {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cebcg))
	}
	return nil
}

type CT_TLByHslColorTransform struct {

	// Hue
	HAttr int32

	// Saturation
	SAttr _da.ST_FixedPercentage

	// Lightness
	LAttr _da.ST_FixedPercentage
}

func (_dddee ST_TransitionInOutDirectionType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_dddee.String(), start)
}

// ValidateWithPath validates the CT_ControlList and its children, prefixing error messages with path
func (_efca *CT_ControlList) ValidateWithPath(path string) error {
	for _dbff, _afcd := range _efca.Control {
		if _cfe := _afcd.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _dbff)); _cfe != nil {
			return _cfe
		}
	}
	return nil
}

type ST_TLAnimateEffectTransition byte
type ST_TLTimeNodeRestartType byte

// ValidateWithPath validates the CT_TLAnimateBehavior and its children, prefixing error messages with path
func (_ffgf *CT_TLAnimateBehavior) ValidateWithPath(path string) error {
	if _dacdf := _ffgf.CalcmodeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u006d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _dacdf != nil {
		return _dacdf
	}
	if _cbbgc := _ffgf.ValueTypeAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _cbbgc != nil {
		return _cbbgc
	}
	if _bfaa := _ffgf.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _bfaa != nil {
		return _bfaa
	}
	if _ffgf.TavLst != nil {
		if _cbffd := _ffgf.TavLst.ValidateWithPath(path + "\u002fT\u0061\u0076\u004c\u0073\u0074"); _cbffd != nil {
			return _cbffd
		}
	}
	return nil
}
func (_bdeb *CT_OutlineViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gabf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_bdeb.CViewPr, _gabf)
	if _bdeb.SldLst != nil {
		_cdaf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_bdeb.SldLst, _cdaf)
	}
	if _bdeb.ExtLst != nil {
		_abca := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdeb.ExtLst, _abca)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresentationProperties and its children, prefixing error messages with path
func (_dbcg *CT_PresentationProperties) ValidateWithPath(path string) error {
	if _dbcg.HtmlPubPr != nil {
		if _eaea := _dbcg.HtmlPubPr.ValidateWithPath(path + "\u002f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"); _eaea != nil {
			return _eaea
		}
	}
	if _dbcg.WebPr != nil {
		if _bbfa := _dbcg.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _bbfa != nil {
			return _bbfa
		}
	}
	if _dbcg.PrnPr != nil {
		if _fgfcf := _dbcg.PrnPr.ValidateWithPath(path + "\u002f\u0050\u0072\u006e\u0050\u0072"); _fgfcf != nil {
			return _fgfcf
		}
	}
	if _dbcg.ShowPr != nil {
		if _fgag := _dbcg.ShowPr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0050\u0072"); _fgag != nil {
			return _fgag
		}
	}
	if _dbcg.ClrMru != nil {
		if _dfce := _dbcg.ClrMru.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0072\u0075"); _dfce != nil {
			return _dfce
		}
	}
	if _dbcg.ExtLst != nil {
		if _feccg := _dbcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _feccg != nil {
			return _feccg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipListEntry and its children, prefixing error messages with path
func (_cdge *CT_SlideRelationshipListEntry) ValidateWithPath(path string) error { return nil }
func (_aeb *CT_CommentList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_debb:
	for {
		_eggf, _cefa := d.Token()
		if _cefa != nil {
			return _cefa
		}
		switch _fcgd := _eggf.(type) {
		case _e.StartElement:
			switch _fcgd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_dcd := NewCT_Comment()
				if _agg := d.DecodeElement(_dcd, &_fcgd); _agg != nil {
					return _agg
				}
				_aeb.Cm = append(_aeb.Cm, _dcd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _fcgd.Name)
				if _baff := d.Skip(); _baff != nil {
					return _baff
				}
			}
		case _e.EndElement:
			break _debb
		case _e.CharData:
		}
	}
	return nil
}
func (_agdfe *CT_ModifyVerifier) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fabg := range start.Attr {
		if _fabg.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_gbbad, _dcdf := _a.ParseUint(_fabg.Value, 10, 32)
			if _dcdf != nil {
				return _dcdf
			}
			_eedc := uint32(_gbbad)
			_agdfe.SpinCountAttr = &_eedc
			continue
		}
		if _fabg.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_cgbg, _egcc := _fabg.Value, error(nil)
			if _egcc != nil {
				return _egcc
			}
			_agdfe.AlgorithmNameAttr = &_cgbg
			continue
		}
		if _fabg.Name.Local == "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061" {
			_dacc, _geada := _fabg.Value, error(nil)
			if _geada != nil {
				return _geada
			}
			_agdfe.SaltDataAttr = &_dacc
			continue
		}
		if _fabg.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_dfed, _dbfd := _fabg.Value, error(nil)
			if _dbfd != nil {
				return _dbfd
			}
			_agdfe.SaltValueAttr = &_dfed
			continue
		}
		if _fabg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065" {
			_agdfe.CryptProviderTypeAttr.UnmarshalXMLAttr(_fabg)
			continue
		}
		if _fabg.Name.Local == "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073" {
			_agdfe.CryptAlgorithmClassAttr.UnmarshalXMLAttr(_fabg)
			continue
		}
		if _fabg.Name.Local == "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065" {
			_agdfe.CryptAlgorithmTypeAttr.UnmarshalXMLAttr(_fabg)
			continue
		}
		if _fabg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064" {
			_aagf, _ffca := _a.ParseUint(_fabg.Value, 10, 32)
			if _ffca != nil {
				return _ffca
			}
			_aacbc := uint32(_aagf)
			_agdfe.CryptAlgorithmSidAttr = &_aacbc
			continue
		}
		if _fabg.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_fbbgg, _ggga := _fabg.Value, error(nil)
			if _ggga != nil {
				return _ggga
			}
			_agdfe.HashValueAttr = &_fbbgg
			continue
		}
		if _fabg.Name.Local == "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e" {
			_ddcbc, _cdace := _a.ParseUint(_fabg.Value, 10, 32)
			if _cdace != nil {
				return _cdace
			}
			_ccdg := uint32(_ddcbc)
			_agdfe.SpinValueAttr = &_ccdg
			continue
		}
		if _fabg.Name.Local == "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061" {
			_agga, _egbca := _fabg.Value, error(nil)
			if _egbca != nil {
				return _egbca
			}
			_agdfe.HashDataAttr = &_agga
			continue
		}
		if _fabg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072" {
			_ecbf, _fdeg := _fabg.Value, error(nil)
			if _fdeg != nil {
				return _fdeg
			}
			_agdfe.CryptProviderAttr = &_ecbf
			continue
		}
		if _fabg.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074" {
			_dgfa, _ggcg := _a.ParseUint(_fabg.Value, 10, 32)
			if _ggcg != nil {
				return _ggcg
			}
			_ebf := uint32(_dgfa)
			_agdfe.AlgIdExtAttr = &_ebf
			continue
		}
		if _fabg.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065" {
			_beaf, _aeacc := _fabg.Value, error(nil)
			if _aeacc != nil {
				return _aeacc
			}
			_agdfe.AlgIdExtSourceAttr = &_beaf
			continue
		}
		if _fabg.Name.Local == "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074" {
			_fcfd, _eddg := _a.ParseUint(_fabg.Value, 10, 32)
			if _eddg != nil {
				return _eddg
			}
			_cfed := uint32(_fcfd)
			_agdfe.CryptProviderTypeExtAttr = &_cfed
			continue
		}
		if _fabg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065" {
			_gbdc, _gdd := _fabg.Value, error(nil)
			if _gdd != nil {
				return _gdd
			}
			_agdfe.CryptProviderTypeExtSourceAttr = &_gbdc
			continue
		}
	}
	for {
		_agdc, _bagec := d.Token()
		if _bagec != nil {
			return _d.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072: \u0025\u0073", _bagec)
		}
		if _adga, _fbbd := _agdc.(_e.EndElement); _fbbd && _adga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgagg *CT_TLAnimVariantFloatVal) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _debbc := range start.Attr {
		if _debbc.Name.Local == "\u0076\u0061\u006c" {
			_bbfc, _bbefc := _a.ParseFloat(_debbc.Value, 64)
			if _bbefc != nil {
				return _bbefc
			}
			_bgagg.ValAttr = float32(_bbfc)
			continue
		}
	}
	for {
		_gaeff, _fgad := d.Token()
		if _fgad != nil {
			return _d.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LAn\u0069mV\u0061\u0072\u0069\u0061\u006e\u0074\u0046lo\u0061\u0074\u0056\u0061\u006c\u003a\u0020%\u0073", _fgad)
		}
		if _ebdb, _ecaed := _gaeff.(_e.EndElement); _ecaed && _ebdb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fccfc ST_TransitionCornerDirectionType) ValidateWithPath(path string) error {
	switch _fccfc {
	case 0, 1, 2, 3, 4:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fccfc))
	}
	return nil
}
func NewCT_NotesMaster() *CT_NotesMaster {
	_deeb := &CT_NotesMaster{}
	_deeb.CSld = NewCT_CommonSlideData()
	_deeb.ClrMap = _da.NewCT_ColorMapping()
	return _deeb
}

// Validate validates the CT_TLTimeAnimateValueList and its children
func (_daef *CT_TLTimeAnimateValueList) Validate() error {
	return _daef.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t")
}
func (_edfcc ST_TLTimeNodeType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_edfcc.String(), start)
}

// ValidateWithPath validates the CT_TLBuildDiagram and its children, prefixing error messages with path
func (_dfac *CT_TLBuildDiagram) ValidateWithPath(path string) error {
	if _bged := _dfac.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _bged != nil {
		return _bged
	}
	return nil
}

type CT_SlideIdListEntry struct {

	// Slide Identifier
	IdAttr  uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_SlideMasterTextStyles and its children
func (_ccgad *CT_SlideMasterTextStyles) Validate() error {
	return _ccgad.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073")
}
func (_fbga *CT_SlideLayoutIdListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fbga.IdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_fbga.IdAttr)})
	}
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _fbga.RIdAttr)})
	e.EncodeToken(start)
	if _fbga.ExtLst != nil {
		_caecc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbga.ExtLst, _caecc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_adde *CT_TLByAnimateColorTransform) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _adde.Rgb != nil {
		_agffg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0072g\u0062"}}
		e.EncodeElement(_adde.Rgb, _agffg)
	}
	if _adde.Hsl != nil {
		_efafd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0068s\u006c"}}
		e.EncodeElement(_adde.Hsl, _efafd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NormalViewProperties and its children
func (_beba *CT_NormalViewProperties) Validate() error {
	return _beba.ValidateWithPath("\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

const (
	ST_TLAnimateMotionPathEditModeUnset    ST_TLAnimateMotionPathEditMode = 0
	ST_TLAnimateMotionPathEditModeRelative ST_TLAnimateMotionPathEditMode = 1
	ST_TLAnimateMotionPathEditModeFixed    ST_TLAnimateMotionPathEditMode = 2
)

// Validate validates the CT_TLAnimateScaleBehavior and its children
func (_dafcd *CT_TLAnimateScaleBehavior) Validate() error {
	return _dafcd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}
func (_bab *CT_CustomShowList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bfa:
	for {
		_eecd, _ddada := d.Token()
		if _ddada != nil {
			return _ddada
		}
		switch _dacd := _eecd.(type) {
		case _e.StartElement:
			switch _dacd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gacb := NewCT_CustomShow()
				if _cggb := d.DecodeElement(_gacb, &_dacd); _cggb != nil {
					return _cggb
				}
				_bab.CustShow = append(_bab.CustShow, _gacb)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dacd.Name)
				if _aab := d.Skip(); _aab != nil {
					return _aab
				}
			}
		case _e.EndElement:
			break _bfa
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_NormalViewProperties() *CT_NormalViewProperties {
	_fbgb := &CT_NormalViewProperties{}
	_fbgb.RestoredLeft = NewCT_NormalViewPortion()
	_fbgb.RestoredTop = NewCT_NormalViewPortion()
	return _fbgb
}

// Validate validates the CT_ControlList and its children
func (_adca *CT_ControlList) Validate() error {
	return _adca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_aeba *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _aee := _aeba.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aee != nil {
		return _aee
	}
	if _fda := _aeba.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _fda != nil {
		return _fda
	}
	if _dedd := _aeba.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _dedd != nil {
		return _dedd
	}
	return nil
}
func (_afbf *CT_OutlineViewSlideList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bbdg:
	for {
		_afac, _fgdde := d.Token()
		if _fgdde != nil {
			return _fgdde
		}
		switch _fcgeg := _afac.(type) {
		case _e.StartElement:
			switch _fcgeg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_eaacb := NewCT_OutlineViewSlideEntry()
				if _ggaga := d.DecodeElement(_eaacb, &_fcgeg); _ggaga != nil {
					return _ggaga
				}
				_afbf.Sld = append(_afbf.Sld, _eaacb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069e\u0077\u0053\u006c\u0069\u0064\u0065L\u0069\u0073\u0074 \u0025\u0076", _fcgeg.Name)
				if _dcaba := d.Skip(); _dcaba != nil {
					return _dcaba
				}
			}
		case _e.EndElement:
			break _bbdg
		case _e.CharData:
		}
	}
	return nil
}

type CT_BackgroundProperties struct {

	// Shade to Title
	ShadeToTitleAttr *bool
	NoFill           *_da.CT_NoFillProperties
	SolidFill        *_da.CT_SolidColorFillProperties
	GradFill         *_da.CT_GradientFillProperties
	BlipFill         *_da.CT_BlipFillProperties
	PattFill         *_da.CT_PatternFillProperties
	GrpFill          *_da.CT_GroupFillProperties
	EffectLst        *_da.CT_EffectList
	EffectDag        *_da.CT_EffectContainer
	ExtLst           *CT_ExtensionList
}

func (_bgedc *CT_TimeNodeList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_efbgb:
	for {
		_baddd, _bbaca := d.Token()
		if _bbaca != nil {
			return _bbaca
		}
		switch _ccfe := _baddd.(type) {
		case _e.StartElement:
			switch _ccfe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
				_cbgcf := NewCT_TLTimeNodeParallel()
				if _aadbd := d.DecodeElement(_cbgcf, &_ccfe); _aadbd != nil {
					return _aadbd
				}
				_bgedc.Par = append(_bgedc.Par, _cbgcf)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
				_dfbbd := NewCT_TLTimeNodeSequence()
				if _afdbf := d.DecodeElement(_dfbbd, &_ccfe); _afdbf != nil {
					return _afdbf
				}
				_bgedc.Seq = append(_bgedc.Seq, _dfbbd)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
				_bfbge := NewCT_TLTimeNodeExclusive()
				if _bbegb := d.DecodeElement(_bfbge, &_ccfe); _bbegb != nil {
					return _bbegb
				}
				_bgedc.Excl = append(_bgedc.Excl, _bfbge)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
				_ffge := NewCT_TLAnimateBehavior()
				if _gfbga := d.DecodeElement(_ffge, &_ccfe); _gfbga != nil {
					return _gfbga
				}
				_bgedc.Anim = append(_bgedc.Anim, _ffge)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
				_agef := NewCT_TLAnimateColorBehavior()
				if _bfabc := d.DecodeElement(_agef, &_ccfe); _bfabc != nil {
					return _bfabc
				}
				_bgedc.AnimClr = append(_bgedc.AnimClr, _agef)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
				_acccd := NewCT_TLAnimateEffectBehavior()
				if _bced := d.DecodeElement(_acccd, &_ccfe); _bced != nil {
					return _bced
				}
				_bgedc.AnimEffect = append(_bgedc.AnimEffect, _acccd)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
				_ccafd := NewCT_TLAnimateMotionBehavior()
				if _fdgae := d.DecodeElement(_ccafd, &_ccfe); _fdgae != nil {
					return _fdgae
				}
				_bgedc.AnimMotion = append(_bgedc.AnimMotion, _ccafd)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
				_aedae := NewCT_TLAnimateRotationBehavior()
				if _fcgdd := d.DecodeElement(_aedae, &_ccfe); _fcgdd != nil {
					return _fcgdd
				}
				_bgedc.AnimRot = append(_bgedc.AnimRot, _aedae)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
				_fbfag := NewCT_TLAnimateScaleBehavior()
				if _fbfda := d.DecodeElement(_fbfag, &_ccfe); _fbfda != nil {
					return _fbfda
				}
				_bgedc.AnimScale = append(_bgedc.AnimScale, _fbfag)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
				_eebac := NewCT_TLCommandBehavior()
				if _gegca := d.DecodeElement(_eebac, &_ccfe); _gegca != nil {
					return _gegca
				}
				_bgedc.Cmd = append(_bgedc.Cmd, _eebac)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_aedf := NewCT_TLSetBehavior()
				if _bggf := d.DecodeElement(_aedf, &_ccfe); _bggf != nil {
					return _bggf
				}
				_bgedc.Set = append(_bgedc.Set, _aedf)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
				_gfbdd := NewCT_TLMediaNodeAudio()
				if _ecec := d.DecodeElement(_gfbdd, &_ccfe); _ecec != nil {
					return _ecec
				}
				_bgedc.Audio = append(_bgedc.Audio, _gfbdd)
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
				_gabgb := NewCT_TLMediaNodeVideo()
				if _bfcb := d.DecodeElement(_gabgb, &_ccfe); _bfcb != nil {
					return _bfcb
				}
				_bgedc.Video = append(_bgedc.Video, _gabgb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ccfe.Name)
				if _ccdbcd := d.Skip(); _ccdbcd != nil {
					return _ccdbcd
				}
			}
		case _e.EndElement:
			break _efbgb
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesSlide and its children, prefixing error messages with path
func (_dcae *CT_NotesSlide) ValidateWithPath(path string) error {
	if _gae := _dcae.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _gae != nil {
		return _gae
	}
	if _dcae.ClrMapOvr != nil {
		if _gfae := _dcae.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _gfae != nil {
			return _gfae
		}
	}
	if _dcae.ExtLst != nil {
		if _aead := _dcae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aead != nil {
			return _aead
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideIdListEntry and its children, prefixing error messages with path
func (_ccgbb *CT_SlideIdListEntry) ValidateWithPath(path string) error {
	if _ccgbb.IdAttr < 256 {
		return _d.Errorf("\u0025\u0073/m\u002e\u0049\u0064A\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0032\u00356 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ccgbb.IdAttr)
	}
	if _ccgbb.IdAttr >= 2147483648 {
		return _d.Errorf("\u0025\u0073\u002fm\u002e\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ccgbb.IdAttr)
	}
	if _ccgbb.ExtLst != nil {
		if _dcbfg := _ccgbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcbfg != nil {
			return _dcbfg
		}
	}
	return nil
}

// Validate validates the CT_Connector and its children
func (_gcb *CT_Connector) Validate() error {
	return _gcb.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func (_abda *CT_CustomShowId) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dfae := range start.Attr {
		if _dfae.Name.Local == "\u0069\u0064" {
			_acf, _bage := _a.ParseUint(_dfae.Value, 10, 32)
			if _bage != nil {
				return _bage
			}
			_abda.IdAttr = uint32(_acf)
			continue
		}
	}
	for {
		_fafe, _gefb := d.Token()
		if _gefb != nil {
			return _d.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u006f\u0077I\u0064:\u0020\u0025\u0073", _gefb)
		}
		if _daeg, _faag := _fafe.(_e.EndElement); _faag && _daeg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bffb *CT_SlideSorterViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bffb.CViewPr = NewCT_CommonViewProperties()
	for _, _ebbbc := range start.Attr {
		if _ebbbc.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_efegg, _gebf := _a.ParseBool(_ebbbc.Value)
			if _gebf != nil {
				return _gebf
			}
			_bffb.ShowFormattingAttr = &_efegg
			continue
		}
	}
_dfgf:
	for {
		_ebed, _fggf := d.Token()
		if _fggf != nil {
			return _fggf
		}
		switch _dffcc := _ebed.(type) {
		case _e.StartElement:
			switch _dffcc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _cgbaf := d.DecodeElement(_bffb.CViewPr, &_dffcc); _cgbaf != nil {
					return _cgbaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bffb.ExtLst = NewCT_ExtensionList()
				if _ggbcf := d.DecodeElement(_bffb.ExtLst, &_dffcc); _ggbcf != nil {
					return _ggbcf
				}
			default:
				_f.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _dffcc.Name)
				if _bdabb := d.Skip(); _bdabb != nil {
					return _bdabb
				}
			}
		case _e.EndElement:
			break _dfgf
		case _e.CharData:
		}
	}
	return nil
}
func (_efcc ST_TLAnimateBehaviorValueType) ValidateWithPath(path string) error {
	switch _efcc {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efcc))
	}
	return nil
}

// Validate validates the CT_PictureNonVisual and its children
func (_abce *CT_PictureNonVisual) Validate() error {
	return _abce.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func NewCT_TLAnimateRotationBehavior() *CT_TLAnimateRotationBehavior {
	_degfg := &CT_TLAnimateRotationBehavior{}
	_degfg.CBhvr = NewCT_TLCommonBehaviorData()
	return _degfg
}

// Validate validates the CT_OutlineViewSlideEntry and its children
func (_deee *CT_OutlineViewSlideEntry) Validate() error {
	return _deee.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079")
}

type CT_OleObject struct {

	// Embedded Object ProgID
	ProgIdAttr     *string
	Choice         *CT_OleObjectChoice
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func (_edbff ST_TLTriggerEvent) ValidateWithPath(path string) error {
	switch _edbff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edbff))
	}
	return nil
}

// Validate validates the CT_TLByHslColorTransform and its children
func (_bgbdb *CT_TLByHslColorTransform) Validate() error {
	return _bgbdb.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func NewAG_Ole() *AG_Ole { _ec := &AG_Ole{}; return _ec }
func NewCT_SlideSorterViewProperties() *CT_SlideSorterViewProperties {
	_bggge := &CT_SlideSorterViewProperties{}
	_bggge.CViewPr = NewCT_CommonViewProperties()
	return _bggge
}
func (_cfefd ST_TLTime) String() string {
	if _cfefd.Uint32 != nil {
		return _d.Sprintf("\u0025\u0076", *_cfefd.Uint32)
	}
	if _cfefd.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _cfefd.ST_TLTimeIndefinite.String()
	}
	return ""
}
func (_gcfcg *ST_TLBehaviorTransformType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gcfcg = 0
	case "\u0070\u0074":
		*_gcfcg = 1
	case "\u0069\u006d\u0067":
		*_gcfcg = 2
	}
	return nil
}
func (_egdg *CT_NotesViewProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_dege := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_egdg.CSldViewPr, _dege)
	if _egdg.ExtLst != nil {
		_bccbe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egdg.ExtLst, _bccbe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_SplitTransition struct {

	// Orientation
	OrientAttr ST_Direction

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func (_ddbg *CT_SlideMaster) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ddbg.CSld = NewCT_CommonSlideData()
	_ddbg.ClrMap = _da.NewCT_ColorMapping()
	for _, _egfgeg := range start.Attr {
		if _egfgeg.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_ebgb, _eage := _a.ParseBool(_egfgeg.Value)
			if _eage != nil {
				return _eage
			}
			_ddbg.PreserveAttr = &_ebgb
			continue
		}
	}
_edaff:
	for {
		_fcgec, _gffd := d.Token()
		if _gffd != nil {
			return _gffd
		}
		switch _fagfc := _fcgec.(type) {
		case _e.StartElement:
			switch _fagfc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ggbb := d.DecodeElement(_ddbg.CSld, &_fagfc); _ggbb != nil {
					return _ggbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gdce := d.DecodeElement(_ddbg.ClrMap, &_fagfc); _gdce != nil {
					return _gdce
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_ddbg.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _cbcc := d.DecodeElement(_ddbg.SldLayoutIdLst, &_fagfc); _cbcc != nil {
					return _cbcc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_ddbg.Transition = NewCT_SlideTransition()
				if _fged := d.DecodeElement(_ddbg.Transition, &_fagfc); _fged != nil {
					return _fged
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_ddbg.Timing = NewCT_SlideTiming()
				if _cbebf := d.DecodeElement(_ddbg.Timing, &_fagfc); _cbebf != nil {
					return _cbebf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_ddbg.Hf = NewCT_HeaderFooter()
				if _edacf := d.DecodeElement(_ddbg.Hf, &_fagfc); _edacf != nil {
					return _edacf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_ddbg.TxStyles = NewCT_SlideMasterTextStyles()
				if _dfde := d.DecodeElement(_ddbg.TxStyles, &_fagfc); _dfde != nil {
					return _dfde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddbg.ExtLst = NewCT_ExtensionListModify()
				if _ddfa := d.DecodeElement(_ddbg.ExtLst, &_fagfc); _ddfa != nil {
					return _ddfa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _fagfc.Name)
				if _gbdac := d.Skip(); _gbdac != nil {
					return _gbdac
				}
			}
		case _e.EndElement:
			break _edaff
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSize and its children, prefixing error messages with path
func (_gebe *CT_SlideSize) ValidateWithPath(path string) error {
	if _gebe.CxAttr < 914400 {
		return _d.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _gebe.CxAttr)
	}
	if _gebe.CxAttr > 51206400 {
		return _d.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gebe.CxAttr)
	}
	if _gebe.CxAttr < 0 {
		return _d.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gebe.CxAttr)
	}
	if _gebe.CyAttr < 914400 {
		return _d.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _gebe.CyAttr)
	}
	if _gebe.CyAttr > 51206400 {
		return _d.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gebe.CyAttr)
	}
	if _gebe.CyAttr < 0 {
		return _d.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gebe.CyAttr)
	}
	if _febbe := _gebe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _febbe != nil {
		return _febbe
	}
	return nil
}
func (_gcfef ST_OleObjectFollowColorScheme) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_gcfef.String(), start)
}

// Validate validates the CT_GroupShape and its children
func (_dcfe *CT_GroupShape) Validate() error {
	return _dcfe.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}
func (_gfbgc ST_ViewType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_ceffd := _e.Attr{}
	_ceffd.Name = name
	switch _gfbgc {
	case ST_ViewTypeUnset:
		_ceffd.Value = ""
	case ST_ViewTypeSldView:
		_ceffd.Value = "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldMasterView:
		_ceffd.Value = "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesView:
		_ceffd.Value = "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case ST_ViewTypeHandoutView:
		_ceffd.Value = "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesMasterView:
		_ceffd.Value = "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeOutlineView:
		_ceffd.Value = "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldSorterView:
		_ceffd.Value = "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldThumbnailView:
		_ceffd.Value = "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return _ceffd, nil
}
func (_cdad *CT_CustomShow) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", _cdad.NameAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _cdad.IdAttr)})
	e.EncodeToken(start)
	_aaae := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
	e.EncodeElement(_cdad.SldLst, _aaae)
	if _cdad.ExtLst != nil {
		_abbfe := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdad.ExtLst, _abbfe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PrintColorModeUnset ST_PrintColorMode = 0
	ST_PrintColorModeBw    ST_PrintColorMode = 1
	ST_PrintColorModeGray  ST_PrintColorMode = 2
	ST_PrintColorModeClr   ST_PrintColorMode = 3
)

func (_aebcd ST_PrintColorMode) Validate() error { return _aebcd.ValidateWithPath("") }
func (_edcdb ST_TLTimeNodePresetClassType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_edcf := _e.Attr{}
	_edcf.Name = name
	switch _edcdb {
	case ST_TLTimeNodePresetClassTypeUnset:
		_edcf.Value = ""
	case ST_TLTimeNodePresetClassTypeEntr:
		_edcf.Value = "\u0065\u006e\u0074\u0072"
	case ST_TLTimeNodePresetClassTypeExit:
		_edcf.Value = "\u0065\u0078\u0069\u0074"
	case ST_TLTimeNodePresetClassTypeEmph:
		_edcf.Value = "\u0065\u006d\u0070\u0068"
	case ST_TLTimeNodePresetClassTypePath:
		_edcf.Value = "\u0070\u0061\u0074\u0068"
	case ST_TLTimeNodePresetClassTypeVerb:
		_edcf.Value = "\u0076\u0065\u0072\u0062"
	case ST_TLTimeNodePresetClassTypeMediacall:
		_edcf.Value = "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return _edcf, nil
}
func (_fdfe *CT_TLAnimVariantIntegerVal) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _bfab := range start.Attr {
		if _bfab.Name.Local == "\u0076\u0061\u006c" {
			_acbed, _abgg := _a.ParseInt(_bfab.Value, 10, 32)
			if _abgg != nil {
				return _abgg
			}
			_fdfe.ValAttr = int32(_acbed)
			continue
		}
	}
	for {
		_cdaea, _agfcaf := d.Token()
		if _agfcaf != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074I\u006e\u0074\u0065\u0067\u0065r\u0056\u0061l\u003a\u0020\u0025\u0073", _agfcaf)
		}
		if _ebfaf, _ggcd := _cdaea.(_e.EndElement); _ggcd && _ebfaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agdbf ST_TLTriggerRuntimeNode) Validate() error { return _agdbf.ValidateWithPath("") }

// Validate validates the PresentationPr and its children
func (_baccf *PresentationPr) Validate() error {
	return _baccf.ValidateWithPath("\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072")
}

type ST_TLAnimateBehaviorValueType byte
type CT_CustomShowList struct {

	// Custom Show
	CustShow []*CT_CustomShow
}

func (_eefab ST_TLBehaviorAccumulateType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gcdffa := _e.Attr{}
	_gcdffa.Name = name
	switch _eefab {
	case ST_TLBehaviorAccumulateTypeUnset:
		_gcdffa.Value = ""
	case ST_TLBehaviorAccumulateTypeNone:
		_gcdffa.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLBehaviorAccumulateTypeAlways:
		_gcdffa.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _gcdffa, nil
}

type CT_ViewProperties struct {

	// Last View
	LastViewAttr ST_ViewType

	// Show Comments
	ShowCommentsAttr *bool

	// Normal View Properties
	NormalViewPr *CT_NormalViewProperties

	// Slide View Properties
	SlideViewPr *CT_SlideViewProperties

	// Outline View Properties
	OutlineViewPr *CT_OutlineViewProperties

	// Notes Text View Properties
	NotesTextViewPr *CT_NotesTextViewProperties

	// Slide Sorter View Properties
	SorterViewPr *CT_SlideSorterViewProperties

	// Notes View Properties
	NotesViewPr *CT_NotesViewProperties

	// Grid Spacing
	GridSpacing *_da.CT_PositiveSize2D
	ExtLst      *CT_ExtensionList
}

func (_cbbge ST_WebScreenSize) String() string {
	switch _cbbge {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}
func (_fegeg *ST_SlideSizeType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cgac, _afacc := d.Token()
	if _afacc != nil {
		return _afacc
	}
	if _ccdd, _fdcgf := _cgac.(_e.EndElement); _fdcgf && _ccdd.Name == start.Name {
		*_fegeg = 1
		return nil
	}
	if _aedfd, _becfa := _cgac.(_e.CharData); !_becfa {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgac)
	} else {
		switch string(_aedfd) {
		case "":
			*_fegeg = 0
		case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
			*_fegeg = 1
		case "\u006c\u0065\u0074\u0074\u0065\u0072":
			*_fegeg = 2
		case "\u0041\u0034":
			*_fegeg = 3
		case "\u0033\u0035\u006d\u006d":
			*_fegeg = 4
		case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
			*_fegeg = 5
		case "\u0062\u0061\u006e\u006e\u0065\u0072":
			*_fegeg = 6
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_fegeg = 7
		case "\u006c\u0065\u0064\u0067\u0065\u0072":
			*_fegeg = 8
		case "\u0041\u0033":
			*_fegeg = 9
		case "\u0042\u0034\u0049S\u004f":
			*_fegeg = 10
		case "\u0042\u0035\u0049S\u004f":
			*_fegeg = 11
		case "\u0042\u0034\u004aI\u0053":
			*_fegeg = 12
		case "\u0042\u0035\u004aI\u0053":
			*_fegeg = 13
		case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
			*_fegeg = 14
		case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
			*_fegeg = 15
		case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
			*_fegeg = 16
		}
	}
	_cgac, _afacc = d.Token()
	if _afacc != nil {
		return _afacc
	}
	if _bbadb, _dcdgg := _cgac.(_e.EndElement); _dcdgg && _bbadb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgac)
}

type ST_TLAnimateBehaviorCalcMode byte

// Validate validates the CT_Comment and its children
func (_ada *CT_Comment) Validate() error {
	return _ada.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

type ST_TLAnimateColorDirection byte

// Validate validates the CT_NotesSlide and its children
func (_gccda *CT_NotesSlide) Validate() error {
	return _gccda.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065")
}
func (_aaaba *ST_TLTimeNodeSyncType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_acafa, _gaabda := d.Token()
	if _gaabda != nil {
		return _gaabda
	}
	if _gafgb, _eafaa := _acafa.(_e.EndElement); _eafaa && _gafgb.Name == start.Name {
		*_aaaba = 1
		return nil
	}
	if _fedbc, _aecd := _acafa.(_e.CharData); !_aecd {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acafa)
	} else {
		switch string(_fedbc) {
		case "":
			*_aaaba = 0
		case "\u0063a\u006e\u0053\u006c\u0069\u0070":
			*_aaaba = 1
		case "\u006c\u006f\u0063\u006b\u0065\u0064":
			*_aaaba = 2
		}
	}
	_acafa, _gaabda = d.Token()
	if _gaabda != nil {
		return _gaabda
	}
	if _affc, _cfdfb := _acafa.(_e.EndElement); _cfdfb && _affc.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acafa)
}
func (_cbad ST_TLTriggerEvent) String() string {
	switch _cbad {
	case 0:
		return ""
	case 1:
		return "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case 2:
		return "\u006f\u006e\u0045n\u0064"
	case 3:
		return "\u0062\u0065\u0067i\u006e"
	case 4:
		return "\u0065\u006e\u0064"
	case 5:
		return "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case 6:
		return "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case 7:
		return "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case 8:
		return "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case 9:
		return "\u006f\u006e\u004e\u0065\u0078\u0074"
	case 10:
		return "\u006f\u006e\u0050\u0072\u0065\u0076"
	case 11:
		return "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return ""
}

// ST_TLTime is a union type
type ST_TLTime struct {
	Uint32              *uint32
	ST_TLTimeIndefinite ST_TLTimeIndefinite
}

func (_dbcfe *CT_HandoutMasterIdListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _dbcfe.IdAttr)})
	e.EncodeToken(start)
	if _dbcfe.ExtLst != nil {
		_deg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbcfe.ExtLst, _deg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bede *CT_SlideSyncProperties) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064"}, Value: _d.Sprintf("\u0025\u0076", _bede.ServerSldIdAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", _bede.ServerSldModifiedTimeAttr)})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065"}, Value: _d.Sprintf("\u0025\u0076", _bede.ClientInsertedTimeAttr)})
	e.EncodeToken(start)
	if _bede.ExtLst != nil {
		_caef := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bede.ExtLst, _caef)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_HandoutMasterIdList() *CT_HandoutMasterIdList {
	_fcca := &CT_HandoutMasterIdList{}
	return _fcca
}
func (_dceg *CT_EightDirectionTransition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dggc := range start.Attr {
		if _dggc.Name.Local == "\u0064\u0069\u0072" {
			_adbed, _adaa := ParseUnionST_TransitionEightDirectionType(_dggc.Value)
			if _adaa != nil {
				return _adaa
			}
			_dceg.DirAttr = &_adbed
			continue
		}
	}
	for {
		_bdf, _adae := d.Token()
		if _adae != nil {
			return _d.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0069g\u0068\u0074\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _adae)
		}
		if _efgd, _gggf := _bdf.(_e.EndElement); _gggf && _efgd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CommentAuthor struct {

	// Comment Author ID
	IdAttr uint32

	// Comment Author Name
	NameAttr string

	// Comment Author Initials
	InitialsAttr string

	// Index of Comment Author's last comment
	LastIdxAttr uint32

	// Comment Author Color Index
	ClrIdxAttr uint32
	ExtLst     *CT_ExtensionList
}

func NewCT_CommonViewProperties() *CT_CommonViewProperties {
	_bbc := &CT_CommonViewProperties{}
	_bbc.Scale = _da.NewCT_Scale2D()
	_bbc.Origin = _da.NewCT_Point2D()
	return _bbc
}

const (
	ST_SlideLayoutTypeUnset                   ST_SlideLayoutType = 0
	ST_SlideLayoutTypeTitle                   ST_SlideLayoutType = 1
	ST_SlideLayoutTypeTx                      ST_SlideLayoutType = 2
	ST_SlideLayoutTypeTwoColTx                ST_SlideLayoutType = 3
	ST_SlideLayoutTypeTbl                     ST_SlideLayoutType = 4
	ST_SlideLayoutTypeTxAndChart              ST_SlideLayoutType = 5
	ST_SlideLayoutTypeChartAndTx              ST_SlideLayoutType = 6
	ST_SlideLayoutTypeDgm                     ST_SlideLayoutType = 7
	ST_SlideLayoutTypeChart                   ST_SlideLayoutType = 8
	ST_SlideLayoutTypeTxAndClipArt            ST_SlideLayoutType = 9
	ST_SlideLayoutTypeClipArtAndTx            ST_SlideLayoutType = 10
	ST_SlideLayoutTypeTitleOnly               ST_SlideLayoutType = 11
	ST_SlideLayoutTypeBlank                   ST_SlideLayoutType = 12
	ST_SlideLayoutTypeTxAndObj                ST_SlideLayoutType = 13
	ST_SlideLayoutTypeObjAndTx                ST_SlideLayoutType = 14
	ST_SlideLayoutTypeObjOnly                 ST_SlideLayoutType = 15
	ST_SlideLayoutTypeObj                     ST_SlideLayoutType = 16
	ST_SlideLayoutTypeTxAndMedia              ST_SlideLayoutType = 17
	ST_SlideLayoutTypeMediaAndTx              ST_SlideLayoutType = 18
	ST_SlideLayoutTypeObjOverTx               ST_SlideLayoutType = 19
	ST_SlideLayoutTypeTxOverObj               ST_SlideLayoutType = 20
	ST_SlideLayoutTypeTxAndTwoObj             ST_SlideLayoutType = 21
	ST_SlideLayoutTypeTwoObjAndTx             ST_SlideLayoutType = 22
	ST_SlideLayoutTypeTwoObjOverTx            ST_SlideLayoutType = 23
	ST_SlideLayoutTypeFourObj                 ST_SlideLayoutType = 24
	ST_SlideLayoutTypeVertTx                  ST_SlideLayoutType = 25
	ST_SlideLayoutTypeClipArtAndVertTx        ST_SlideLayoutType = 26
	ST_SlideLayoutTypeVertTitleAndTx          ST_SlideLayoutType = 27
	ST_SlideLayoutTypeVertTitleAndTxOverChart ST_SlideLayoutType = 28
	ST_SlideLayoutTypeTwoObj                  ST_SlideLayoutType = 29
	ST_SlideLayoutTypeObjAndTwoObj            ST_SlideLayoutType = 30
	ST_SlideLayoutTypeTwoObjAndObj            ST_SlideLayoutType = 31
	ST_SlideLayoutTypeCust                    ST_SlideLayoutType = 32
	ST_SlideLayoutTypeSecHead                 ST_SlideLayoutType = 33
	ST_SlideLayoutTypeTwoTxTwoObj             ST_SlideLayoutType = 34
	ST_SlideLayoutTypeObjTx                   ST_SlideLayoutType = 35
	ST_SlideLayoutTypePicTx                   ST_SlideLayoutType = 36
)

// Validate validates the CT_TLBehaviorAttributeNameList and its children
func (_efffc *CT_TLBehaviorAttributeNameList) Validate() error {
	return _efffc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074")
}

type CT_ShowInfoBrowse struct {

	// Show Scroll Bar in Window
	ShowScrollbarAttr *bool
}

func (_gdggd *CT_ShowProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _afgg := range start.Attr {
		if _afgg.Name.Local == "\u006c\u006f\u006f\u0070" {
			_gdbg, _bbgbg := _a.ParseBool(_afgg.Value)
			if _bbgbg != nil {
				return _bbgbg
			}
			_gdggd.LoopAttr = &_gdbg
			continue
		}
		if _afgg.Name.Local == "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_edag, _cbfd := _a.ParseBool(_afgg.Value)
			if _cbfd != nil {
				return _cbfd
			}
			_gdggd.ShowNarrationAttr = &_edag
			continue
		}
		if _afgg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_ebgda, _bfgce := _a.ParseBool(_afgg.Value)
			if _bfgce != nil {
				return _bfgce
			}
			_gdggd.ShowAnimationAttr = &_ebgda
			continue
		}
		if _afgg.Name.Local == "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073" {
			_fbbfe, _abga := _a.ParseBool(_afgg.Value)
			if _abga != nil {
				return _abga
			}
			_gdggd.UseTimingsAttr = &_fbbfe
			continue
		}
	}
_bcecc:
	for {
		_faefcd, _effa := d.Token()
		if _effa != nil {
			return _effa
		}
		switch _bffa := _faefcd.(type) {
		case _e.StartElement:
			switch _bffa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_gdggd.Present = NewCT_Empty()
				if _fffec := d.DecodeElement(_gdggd.Present, &_bffa); _fffec != nil {
					return _fffec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_gdggd.Browse = NewCT_ShowInfoBrowse()
				if _eccb := d.DecodeElement(_gdggd.Browse, &_bffa); _eccb != nil {
					return _eccb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_gdggd.Kiosk = NewCT_ShowInfoKiosk()
				if _adbd := d.DecodeElement(_gdggd.Kiosk, &_bffa); _adbd != nil {
					return _adbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_gdggd.SldAll = NewCT_Empty()
				if _agbg := d.DecodeElement(_gdggd.SldAll, &_bffa); _agbg != nil {
					return _agbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_gdggd.SldRg = NewCT_IndexRange()
				if _cceca := d.DecodeElement(_gdggd.SldRg, &_bffa); _cceca != nil {
					return _cceca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gdggd.CustShow = NewCT_CustomShowId()
				if _gdcde := d.DecodeElement(_gdggd.CustShow, &_bffa); _gdcde != nil {
					return _gdcde
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}:
				_gdggd.PenClr = _da.NewCT_Color()
				if _bgbb := d.DecodeElement(_gdggd.PenClr, &_bffa); _bgbb != nil {
					return _bgbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdggd.ExtLst = NewCT_ExtensionList()
				if _afbb := d.DecodeElement(_gdggd.ExtLst, &_bffa); _afbb != nil {
					return _afbb
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bffa.Name)
				if _dgda := d.Skip(); _dgda != nil {
					return _dgda
				}
			}
		case _e.EndElement:
			break _bcecc
		case _e.CharData:
		}
	}
	return nil
}
func (_eeea ST_WebScreenSize) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_acfee := _e.Attr{}
	_acfee.Name = name
	switch _eeea {
	case ST_WebScreenSizeUnset:
		_acfee.Value = ""
	case ST_WebScreenSize544x376:
		_acfee.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_WebScreenSize640x480:
		_acfee.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_WebScreenSize720x512:
		_acfee.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_WebScreenSize800x600:
		_acfee.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_WebScreenSize1024x768:
		_acfee.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_WebScreenSize1152x882:
		_acfee.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_WebScreenSize1152x900:
		_acfee.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_WebScreenSize1280x1024:
		_acfee.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_WebScreenSize1600x1200:
		_acfee.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_WebScreenSize1800x1400:
		_acfee.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case ST_WebScreenSize1920x1200:
		_acfee.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _acfee, nil
}
func (_egce *CT_GuideList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _egce.Guide != nil {
		_gadf := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0067\u0075\u0069\u0064\u0065"}}
		for _, _eeacf := range _egce.Guide {
			e.EncodeElement(_eeacf, _gadf)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fbebb ST_TLParaBuildType) String() string {
	switch _fbebb {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0070"
	case 3:
		return "\u0063\u0075\u0073\u0074"
	case 4:
		return "\u0077\u0068\u006fl\u0065"
	}
	return ""
}

type CT_PhotoAlbum struct {

	// Black and White
	BwAttr *bool

	// Show/Hide Captions
	ShowCaptionsAttr *bool

	// Photo Album Layout
	LayoutAttr ST_PhotoAlbumLayout

	// Frame Type
	FrameAttr ST_PhotoAlbumFrameShape
	ExtLst    *CT_ExtensionList
}
type CT_SlideLayout struct {

	// Matching Name
	MatchingNameAttr *string

	// Slide Layout Type
	TypeAttr ST_SlideLayoutType

	// Preserve Slide Layout
	PreserveAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Common slide data for slide layouts
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_da.CT_ColorMappingOverride

	// Slide Transition for a Slide Layout
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide Layout
	Timing *CT_SlideTiming

	// Header/Footer information for a slide layout
	Hf                   *CT_HeaderFooter
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_cbbdc *ST_PrintColorMode) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cdgg, _daggf := d.Token()
	if _daggf != nil {
		return _daggf
	}
	if _ebbe, _dfcfaa := _cdgg.(_e.EndElement); _dfcfaa && _ebbe.Name == start.Name {
		*_cbbdc = 1
		return nil
	}
	if _dfgege, _gbffe := _cdgg.(_e.CharData); !_gbffe {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdgg)
	} else {
		switch string(_dfgege) {
		case "":
			*_cbbdc = 0
		case "\u0062\u0077":
			*_cbbdc = 1
		case "\u0067\u0072\u0061\u0079":
			*_cbbdc = 2
		case "\u0063\u006c\u0072":
			*_cbbdc = 3
		}
	}
	_cdgg, _daggf = d.Token()
	if _daggf != nil {
		return _daggf
	}
	if _ggffe, _afebg := _cdgg.(_e.EndElement); _afebg && _ggffe.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdgg)
}

type CT_TagsData struct{ IdAttr string }

func (_gdcbb *ST_SplitterBarState) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gdcbb = 0
	case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
		*_gdcbb = 1
	case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
		*_gdcbb = 2
	case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
		*_gdcbb = 3
	}
	return nil
}
func (_fcdae ST_PrintWhat) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fcdae.String(), start)
}

// ValidateWithPath validates the CT_EmbeddedFontList and its children, prefixing error messages with path
func (_gdfc *CT_EmbeddedFontList) ValidateWithPath(path string) error {
	for _ccgd, _cebb := range _gdfc.EmbeddedFont {
		if _dbdc := _cebb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _ccgd)); _dbdc != nil {
			return _dbdc
		}
	}
	return nil
}

type CT_NotesMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

func (_bdcfc ST_TLAnimateColorSpace) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_bbcacd := _e.Attr{}
	_bbcacd.Name = name
	switch _bdcfc {
	case ST_TLAnimateColorSpaceUnset:
		_bbcacd.Value = ""
	case ST_TLAnimateColorSpaceRgb:
		_bbcacd.Value = "\u0072\u0067\u0062"
	case ST_TLAnimateColorSpaceHsl:
		_bbcacd.Value = "\u0068\u0073\u006c"
	}
	return _bbcacd, nil
}
func NewCT_TLBuildParagraph() *CT_TLBuildParagraph { _bbfba := &CT_TLBuildParagraph{}; return _bbfba }

// Validate validates the CT_Placeholder and its children
func (_cadcb *CT_Placeholder) Validate() error {
	return _cadcb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072")
}
func (_cbeee *SldSyncPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u0053\u0079\u006e\u0063\u0050\u0072"
	return _cbeee.CT_SlideSyncProperties.MarshalXML(e, start)
}
func (_bfaga ST_TLBehaviorOverrideType) String() string {
	switch _bfaga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_TransitionSoundAction and its children, prefixing error messages with path
func (_fbcbg *CT_TransitionSoundAction) ValidateWithPath(path string) error {
	if _fbcbg.StSnd != nil {
		if _dgbbb := _fbcbg.StSnd.ValidateWithPath(path + "\u002f\u0053\u0074\u0053\u006e\u0064"); _dgbbb != nil {
			return _dgbbb
		}
	}
	if _fbcbg.EndSnd != nil {
		if _aabgc := _fbcbg.EndSnd.ValidateWithPath(path + "\u002fE\u006e\u0064\u0053\u006e\u0064"); _aabgc != nil {
			return _aabgc
		}
	}
	return nil
}
func (_febg *CT_NotesSlide) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _febg.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_febg.ShowMasterSpAttr))})
	}
	if _febg.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_febg.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_aebc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_febg.CSld, _aebc)
	if _febg.ClrMapOvr != nil {
		_fggb := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_febg.ClrMapOvr, _fggb)
	}
	if _febg.ExtLst != nil {
		_agba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_febg.ExtLst, _agba)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewAG_TLBuild() *AG_TLBuild { _fb := &AG_TLBuild{}; return _fb }
func (_ddefb ST_IterateType) ValidateWithPath(path string) error {
	switch _ddefb {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddefb))
	}
	return nil
}

// Validate validates the CT_TimeNodeList and its children
func (_daccg *CT_TimeNodeList) Validate() error {
	return _daccg.ValidateWithPath("\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_gccdf ST_TLAnimateBehaviorCalcMode) String() string {
	switch _gccdf {
	case 0:
		return ""
	case 1:
		return "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case 2:
		return "\u006c\u0069\u006e"
	case 3:
		return "\u0066\u006d\u006c\u0061"
	}
	return ""
}
func (_eaecf *CT_TLTimeNodeSequence) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _eaecf.ConcurrentAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_eaecf.ConcurrentAttr))})
	}
	if _eaecf.PrevAcAttr != ST_TLPreviousActionTypeUnset {
		_gagab, _dfbe := _eaecf.PrevAcAttr.MarshalXMLAttr(_e.Name{Local: "\u0070\u0072\u0065\u0076\u0041\u0063"})
		if _dfbe != nil {
			return _dfbe
		}
		start.Attr = append(start.Attr, _gagab)
	}
	if _eaecf.NextAcAttr != ST_TLNextActionTypeUnset {
		_bgdab, _decc := _eaecf.NextAcAttr.MarshalXMLAttr(_e.Name{Local: "\u006e\u0065\u0078\u0074\u0041\u0063"})
		if _decc != nil {
			return _decc
		}
		start.Attr = append(start.Attr, _bgdab)
	}
	e.EncodeToken(start)
	_geda := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_eaecf.CTn, _geda)
	if _eaecf.PrevCondLst != nil {
		_abdf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0070\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_eaecf.PrevCondLst, _abdf)
	}
	if _eaecf.NextCondLst != nil {
		_deedb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_eaecf.NextCondLst, _deedb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_NotesTextViewProperties() *CT_NotesTextViewProperties {
	_ccdb := &CT_NotesTextViewProperties{}
	_ccdb.CViewPr = NewCT_CommonViewProperties()
	return _ccdb
}
func (_bbgce ST_TransitionCornerDirectionType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bbgce.String(), start)
}
func (_edebb *ST_TLParaBuildType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_efcef, _aeeg := d.Token()
	if _aeeg != nil {
		return _aeeg
	}
	if _ggcda, _edceb := _efcef.(_e.EndElement); _edceb && _ggcda.Name == start.Name {
		*_edebb = 1
		return nil
	}
	if _acde, _cbcfe := _efcef.(_e.CharData); !_cbcfe {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efcef)
	} else {
		switch string(_acde) {
		case "":
			*_edebb = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_edebb = 1
		case "\u0070":
			*_edebb = 2
		case "\u0063\u0075\u0073\u0074":
			*_edebb = 3
		case "\u0077\u0068\u006fl\u0065":
			*_edebb = 4
		}
	}
	_efcef, _aeeg = d.Token()
	if _aeeg != nil {
		return _aeeg
	}
	if _baaf, _abage := _efcef.(_e.EndElement); _abage && _baaf.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efcef)
}

// Validate validates the OleObj and its children
func (_cddfd *OleObj) Validate() error {
	return _cddfd.ValidateWithPath("\u004f\u006c\u0065\u004f\u0062\u006a")
}
func (_efadf ST_PhotoAlbumLayout) ValidateWithPath(path string) error {
	switch _efadf {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efadf))
	}
	return nil
}

type ST_SlideLayoutType byte

// Validate validates the CT_TLShapeTargetElement and its children
func (_feeba *CT_TLShapeTargetElement) Validate() error {
	return _feeba.ValidateWithPath("\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}
func (_agee *CT_TLTriggerRuntimeNode) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_aeafc, _dgafb := _agee.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u0076\u0061\u006c"})
	if _dgafb != nil {
		return _dgafb
	}
	start.Attr = append(start.Attr, _aeafc)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_SlideLayoutIdListEntry() *CT_SlideLayoutIdListEntry {
	_ffdf := &CT_SlideLayoutIdListEntry{}
	return _ffdf
}
func NewCT_CommentAuthor() *CT_CommentAuthor { _baag := &CT_CommentAuthor{}; return _baag }

// Validate validates the CT_TLByAnimateColorTransform and its children
func (_accgb *CT_TLByAnimateColorTransform) Validate() error {
	return _accgb.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d")
}
func NewCT_ShowInfoBrowse() *CT_ShowInfoBrowse { _eccg := &CT_ShowInfoBrowse{}; return _eccg }
func NewCT_ExtensionListModify() *CT_ExtensionListModify {
	_dbgcf := &CT_ExtensionListModify{}
	return _dbgcf
}
func NewCT_OutlineViewSlideEntry() *CT_OutlineViewSlideEntry {
	_edbf := &CT_OutlineViewSlideEntry{}
	return _edbf
}

type CT_NotesTextViewProperties struct {

	// Base properties for Notes View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

func (_gaagb *Notes) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gaagb.CT_NotesSlide = *NewCT_NotesSlide()
	for _, _eefa := range start.Attr {
		if _eefa.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_agbf, _fabcgc := _a.ParseBool(_eefa.Value)
			if _fabcgc != nil {
				return _fabcgc
			}
			_gaagb.ShowMasterSpAttr = &_agbf
			continue
		}
		if _eefa.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_bdcb, _ccdcc := _a.ParseBool(_eefa.Value)
			if _ccdcc != nil {
				return _ccdcc
			}
			_gaagb.ShowMasterPhAnimAttr = &_bdcb
			continue
		}
	}
_ddccc:
	for {
		_abde, _bdccad := d.Token()
		if _bdccad != nil {
			return _bdccad
		}
		switch _eefgc := _abde.(type) {
		case _e.StartElement:
			switch _eefgc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _acace := d.DecodeElement(_gaagb.CSld, &_eefgc); _acace != nil {
					return _acace
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gaagb.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _edddc := d.DecodeElement(_gaagb.ClrMapOvr, &_eefgc); _edddc != nil {
					return _edddc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaagb.ExtLst = NewCT_ExtensionListModify()
				if _gffee := d.DecodeElement(_gaagb.ExtLst, &_eefgc); _gffee != nil {
					return _gffee
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004e\u006f\u0074e\u0073 \u0025\u0076", _eefgc.Name)
				if _gedg := d.Skip(); _gedg != nil {
					return _gedg
				}
			}
		case _e.EndElement:
			break _ddccc
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OrientationTransition and its children
func (_dbgg *CT_OrientationTransition) Validate() error {
	return _dbgg.ValidateWithPath("\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e")
}
func NewCT_Placeholder() *CT_Placeholder { _edde := &CT_Placeholder{}; return _edde }

type CT_CustomShowId struct {

	// Custom Show Identifier
	IdAttr uint32
}

// ValidateWithPath validates the CT_TLTemplateList and its children, prefixing error messages with path
func (_afdeg *CT_TLTemplateList) ValidateWithPath(path string) error {
	for _bgaab, _bgcbf := range _afdeg.Tmpl {
		if _bcdab := _bgcbf.ValidateWithPath(_d.Sprintf("%\u0073\u002f\u0054\u006d\u0070\u006c\u005b\u0025\u0064\u005d", path, _bgaab)); _bcdab != nil {
			return _bcdab
		}
	}
	return nil
}
func (_cfdffe ST_PhotoAlbumLayout) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cfdffe.String(), start)
}
func (_ffd *CT_EmbeddedFontList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ffd.EmbeddedFont != nil {
		_ccee := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065d\u0046\u006f\u006e\u0074"}}
		for _, _fef := range _ffd.EmbeddedFont {
			e.EncodeElement(_fef, _ccee)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_SlideMasterIdListEntry struct {

	// Slide Master Identifier
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_CornerDirectionTransition and its children
func (_ggb *CT_CornerDirectionTransition) Validate() error {
	return _ggb.ValidateWithPath("\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e")
}
func (_dfbf *CT_TLOleChartTargetElement) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_bada, _aaeaf := _dfbf.TypeAttr.MarshalXMLAttr(_e.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _aaeaf != nil {
		return _aaeaf
	}
	start.Attr = append(start.Attr, _bada)
	if _dfbf.LvlAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006c\u0076\u006c"}, Value: _d.Sprintf("\u0025\u0076", *_dfbf.LvlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLAnimVariantStringVal and its children
func (_bfba *CT_TLAnimVariantStringVal) Validate() error {
	return _bfba.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l")
}

type CmLst struct{ CT_CommentList }

func (_dgcd *CT_GroupShapeNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gadc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_dgcd.CNvPr, _gadc)
	_bgb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dgcd.CNvGrpSpPr, _bgb)
	_abfg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_dgcd.NvPr, _abfg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_ShowProperties struct {

	// Loop Slide Show
	LoopAttr *bool

	// Show Narration in Slide Show
	ShowNarrationAttr *bool

	// Show Animation in Slide Show
	ShowAnimationAttr *bool

	// Use Timings in Slide Show
	UseTimingsAttr *bool

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId

	// Pen Color for Slide Show
	PenClr *_da.CT_Color
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_SlideIdList and its children, prefixing error messages with path
func (_feccb *CT_SlideIdList) ValidateWithPath(path string) error {
	for _bbfag, _eeee := range _feccb.SldId {
		if _dcegf := _eeee.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fS\u006c\u0064\u0049\u0064\u005b\u0025\u0064\u005d", path, _bbfag)); _dcegf != nil {
			return _dcegf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HandoutMasterIdListEntry and its children, prefixing error messages with path
func (_dbcfb *CT_HandoutMasterIdListEntry) ValidateWithPath(path string) error {
	if _dbcfb.ExtLst != nil {
		if _edad := _dbcfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edad != nil {
			return _edad
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_ebbb *CT_HeaderFooter) ValidateWithPath(path string) error {
	if _ebbb.ExtLst != nil {
		if _edca := _ebbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edca != nil {
			return _edca
		}
	}
	return nil
}
func ParseStdlibTime(s string) (_g.Time, error) { return _da.ParseStdlibTime(s) }

type CT_OrientationTransition struct {

	// Transition Direction
	DirAttr ST_Direction
}

func (_cbag *ST_WebColorType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gadebd, _bcad := d.Token()
	if _bcad != nil {
		return _bcad
	}
	if _acgf, _gaad := _gadebd.(_e.EndElement); _gaad && _acgf.Name == start.Name {
		*_cbag = 1
		return nil
	}
	if _dffa, _ggeb := _gadebd.(_e.CharData); !_ggeb {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gadebd)
	} else {
		switch string(_dffa) {
		case "":
			*_cbag = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbag = 1
		case "\u0062r\u006f\u0077\u0073\u0065\u0072":
			*_cbag = 2
		case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_cbag = 3
		case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
			*_cbag = 4
		case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
			*_cbag = 5
		case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
			*_cbag = 6
		}
	}
	_gadebd, _bcad = d.Token()
	if _bcad != nil {
		return _bcad
	}
	if _cbdc, _ggafc := _gadebd.(_e.EndElement); _ggafc && _cbdc.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gadebd)
}
func NewCT_TLBehaviorAttributeNameList() *CT_TLBehaviorAttributeNameList {
	_eefe := &CT_TLBehaviorAttributeNameList{}
	return _eefe
}

// ValidateWithPath validates the CT_SideDirectionTransition and its children, prefixing error messages with path
func (_aegdc *CT_SideDirectionTransition) ValidateWithPath(path string) error {
	if _cbebb := _aegdc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _cbebb != nil {
		return _cbebb
	}
	return nil
}
func (_adgge *CT_Slide) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _adgge.ShowAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgge.ShowAttr))})
	}
	if _adgge.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgge.ShowMasterSpAttr))})
	}
	if _adgge.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_adgge.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_gdfg := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_adgge.CSld, _gdfg)
	if _adgge.ClrMapOvr != nil {
		_aafe := _e.StartElement{Name: _e.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_adgge.ClrMapOvr, _aafe)
	}
	if _adgge.Transition != nil {
		_ffbag := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_adgge.Transition, _ffbag)
	}
	if _adgge.Timing != nil {
		_eeba := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_adgge.Timing, _eeba)
	}
	if _adgge.ExtLst != nil {
		_eggb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adgge.ExtLst, _eggb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bgbga *ST_TLTime) Validate() error { return _bgbga.ValidateWithPath("") }

// ValidateWithPath validates the CT_GuideList and its children, prefixing error messages with path
func (_edcd *CT_GuideList) ValidateWithPath(path string) error {
	for _fbea, _gfef := range _edcd.Guide {
		if _bege := _gfef.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fG\u0075\u0069\u0064\u0065\u005b\u0025\u0064\u005d", path, _fbea)); _bege != nil {
			return _bege
		}
	}
	return nil
}

type CT_TimeNodeList struct {

	// Parallel Time Node
	Par []*CT_TLTimeNodeParallel

	// Sequence Time Node
	Seq []*CT_TLTimeNodeSequence

	// Exclusive
	Excl []*CT_TLTimeNodeExclusive

	// Animate
	Anim []*CT_TLAnimateBehavior

	// Animate Color Behavior
	AnimClr []*CT_TLAnimateColorBehavior

	// Animate Effect
	AnimEffect []*CT_TLAnimateEffectBehavior

	// Animate Motion
	AnimMotion []*CT_TLAnimateMotionBehavior

	// Animate Rotation
	AnimRot []*CT_TLAnimateRotationBehavior

	// Animate Scale
	AnimScale []*CT_TLAnimateScaleBehavior

	// Command
	Cmd []*CT_TLCommandBehavior

	// Set Time Node Behavior
	Set []*CT_TLSetBehavior

	// Audio
	Audio []*CT_TLMediaNodeAudio

	// Video
	Video []*CT_TLMediaNodeVideo
}

func NewCT_TLAnimVariant() *CT_TLAnimVariant { _eafe := &CT_TLAnimVariant{}; return _eafe }
func (_cadda ST_TLTimeNodeRestartType) String() string {
	switch _cadda {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	case 2:
		return "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case 3:
		return "\u006e\u0065\u0076e\u0072"
	}
	return ""
}
func (_fbaba ST_TransitionSideDirectionType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_dbfad := _e.Attr{}
	_dbfad.Name = name
	switch _fbaba {
	case ST_TransitionSideDirectionTypeUnset:
		_dbfad.Value = ""
	case ST_TransitionSideDirectionTypeL:
		_dbfad.Value = "\u006c"
	case ST_TransitionSideDirectionTypeU:
		_dbfad.Value = "\u0075"
	case ST_TransitionSideDirectionTypeR:
		_dbfad.Value = "\u0072"
	case ST_TransitionSideDirectionTypeD:
		_dbfad.Value = "\u0064"
	}
	return _dbfad, nil
}
func (_cedd *CT_NotesTextViewProperties) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cedd.CViewPr = NewCT_CommonViewProperties()
_eged:
	for {
		_eeedd, _dbecb := d.Token()
		if _dbecb != nil {
			return _dbecb
		}
		switch _fffeg := _eeedd.(type) {
		case _e.StartElement:
			switch _fffeg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _fcgda := d.DecodeElement(_cedd.CViewPr, &_fffeg); _fcgda != nil {
					return _fcgda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cedd.ExtLst = NewCT_ExtensionList()
				if _faec := d.DecodeElement(_cedd.ExtLst, &_fffeg); _faec != nil {
					return _faec
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u004e\u006ft\u0065\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fffeg.Name)
				if _abef := d.Skip(); _abef != nil {
					return _abef
				}
			}
		case _e.EndElement:
			break _eged
		case _e.CharData:
		}
	}
	return nil
}
func (_baaa *CT_HandoutMasterIdList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_ecgb:
	for {
		_fgggg, _fffb := d.Token()
		if _fffb != nil {
			return _fffb
		}
		switch _gge := _fgggg.(type) {
		case _e.StartElement:
			switch _gge.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_baaa.HandoutMasterId = NewCT_HandoutMasterIdListEntry()
				if _eebb := d.DecodeElement(_baaa.HandoutMasterId, &_gge); _eebb != nil {
					return _eebb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gge.Name)
				if _bffgd := d.Skip(); _bffgd != nil {
					return _bffgd
				}
			}
		case _e.EndElement:
			break _ecgb
		case _e.CharData:
		}
	}
	return nil
}

type ST_TransitionCornerDirectionType byte

// ValidateWithPath validates the CT_EmbeddedFontListEntry and its children, prefixing error messages with path
func (_fgdg *CT_EmbeddedFontListEntry) ValidateWithPath(path string) error {
	if _acbb := _fgdg.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _acbb != nil {
		return _acbb
	}
	if _fgdg.Regular != nil {
		if _gdb := _fgdg.Regular.ValidateWithPath(path + "\u002f\u0052\u0065\u0067\u0075\u006c\u0061\u0072"); _gdb != nil {
			return _gdb
		}
	}
	if _fgdg.Bold != nil {
		if _fdac := _fgdg.Bold.ValidateWithPath(path + "\u002f\u0042\u006fl\u0064"); _fdac != nil {
			return _fdac
		}
	}
	if _fgdg.Italic != nil {
		if _cccg := _fgdg.Italic.ValidateWithPath(path + "\u002fI\u0074\u0061\u006c\u0069\u0063"); _cccg != nil {
			return _cccg
		}
	}
	if _fgdg.BoldItalic != nil {
		if _dbgc := _fgdg.BoldItalic.ValidateWithPath(path + "/\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"); _dbgc != nil {
			return _dbgc
		}
	}
	return nil
}

// Validate validates the CT_OleObject and its children
func (_daaf *CT_OleObject) Validate() error {
	return _daaf.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

const (
	ST_TLOleChartBuildTypeUnset      ST_TLOleChartBuildType = 0
	ST_TLOleChartBuildTypeAllAtOnce  ST_TLOleChartBuildType = 1
	ST_TLOleChartBuildTypeSeries     ST_TLOleChartBuildType = 2
	ST_TLOleChartBuildTypeCategory   ST_TLOleChartBuildType = 3
	ST_TLOleChartBuildTypeSeriesEl   ST_TLOleChartBuildType = 4
	ST_TLOleChartBuildTypeCategoryEl ST_TLOleChartBuildType = 5
)

// Validate validates the CT_ExtensionListModify and its children
func (_ffa *CT_ExtensionListModify) Validate() error {
	return _ffa.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079")
}
func NewPresentation() *Presentation {
	_feeag := &Presentation{}
	_feeag.CT_Presentation = *NewCT_Presentation()
	return _feeag
}
func (_adge *CT_EmbeddedFontListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_adge.Font = _da.NewCT_TextFont()
_edb:
	for {
		_aff, _ddf := d.Token()
		if _ddf != nil {
			return _ddf
		}
		switch _cdfb := _aff.(type) {
		case _e.StartElement:
			switch _cdfb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				if _bfec := d.DecodeElement(_adge.Font, &_cdfb); _bfec != nil {
					return _bfec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}:
				_adge.Regular = NewCT_EmbeddedFontDataId()
				if _cfag := d.DecodeElement(_adge.Regular, &_cdfb); _cfag != nil {
					return _cfag
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}:
				_adge.Bold = NewCT_EmbeddedFontDataId()
				if _cdacf := d.DecodeElement(_adge.Bold, &_cdfb); _cdacf != nil {
					return _cdacf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}:
				_adge.Italic = NewCT_EmbeddedFontDataId()
				if _cdabd := d.DecodeElement(_adge.Italic, &_cdfb); _cdabd != nil {
					return _cdabd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}:
				_adge.BoldItalic = NewCT_EmbeddedFontDataId()
				if _dcaa := d.DecodeElement(_adge.BoldItalic, &_cdfb); _dcaa != nil {
					return _dcaa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074E\u006e\u0074\u0072\u0079\u0020%\u0076", _cdfb.Name)
				if _eeeb := d.Skip(); _eeeb != nil {
					return _eeeb
				}
			}
		case _e.EndElement:
			break _edb
		case _e.CharData:
		}
	}
	return nil
}
func (_gbecf *ST_TLCommandType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eaedd, _aaef := d.Token()
	if _aaef != nil {
		return _aaef
	}
	if _aebgf, _cfac := _eaedd.(_e.EndElement); _cfac && _aebgf.Name == start.Name {
		*_gbecf = 1
		return nil
	}
	if _dgcgf, _ccbeag := _eaedd.(_e.CharData); !_ccbeag {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eaedd)
	} else {
		switch string(_dgcgf) {
		case "":
			*_gbecf = 0
		case "\u0065\u0076\u0074":
			*_gbecf = 1
		case "\u0063\u0061\u006c\u006c":
			*_gbecf = 2
		case "\u0076\u0065\u0072\u0062":
			*_gbecf = 3
		}
	}
	_eaedd, _aaef = d.Token()
	if _aaef != nil {
		return _aaef
	}
	if _afgbb, _edcfc := _eaedd.(_e.EndElement); _edcfc && _afgbb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eaedd)
}
func (_bfcfg ST_TLTimeNodeSyncType) Validate() error { return _bfcfg.ValidateWithPath("") }
func (_dddcb ST_WebScreenSize) ValidateWithPath(path string) error {
	switch _dddcb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dddcb))
	}
	return nil
}
func (_bfad *ST_PhotoAlbumLayout) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bfad = 0
	case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
		*_bfad = 1
	case "\u0031\u0070\u0069\u0063":
		*_bfad = 2
	case "\u0032\u0070\u0069\u0063":
		*_bfad = 3
	case "\u0034\u0070\u0069\u0063":
		*_bfad = 4
	case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bfad = 5
	case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bfad = 6
	case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bfad = 7
	}
	return nil
}

// Validate validates the CT_SlideLayoutIdList and its children
func (_faafa *CT_SlideLayoutIdList) Validate() error {
	return _faafa.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074")
}

// Validate validates the CT_NotesMaster and its children
func (_afdgg *CT_NotesMaster) Validate() error {
	return _afdgg.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072")
}
func ParseUnionST_TLTimeAnimateValueTime(s string) (ST_TLTimeAnimateValueTime, error) {
	return ST_TLTimeAnimateValueTime{}, nil
}

// Validate validates the CT_OutlineViewSlideList and its children
func (_dddc *CT_OutlineViewSlideList) Validate() error {
	return _dddc.ValidateWithPath("\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_beee *CT_TLByAnimateColorTransform) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_aedca:
	for {
		_bcef, _agcf := d.Token()
		if _agcf != nil {
			return _agcf
		}
		switch _ecfc := _bcef.(type) {
		case _e.StartElement:
			switch _ecfc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
				_beee.Rgb = NewCT_TLByRgbColorTransform()
				if _fgef := d.DecodeElement(_beee.Rgb, &_ecfc); _fgef != nil {
					return _fgef
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_beee.Hsl = NewCT_TLByHslColorTransform()
				if _gbdgb := d.DecodeElement(_beee.Hsl, &_ecfc); _gbdgb != nil {
					return _gbdgb
				}
			default:
				_f.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072\u0054ra\u006e\u0073\u0066o\u0072\u006d\u0020\u0025\u0076", _ecfc.Name)
				if _ceag := d.Skip(); _ceag != nil {
					return _ceag
				}
			}
		case _e.EndElement:
			break _aedca
		case _e.CharData:
		}
	}
	return nil
}
func (_bacg *CT_EmbeddedFontDataId) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", _bacg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bbbe ST_TransitionSideDirectionType) String() string {
	switch _bbbe {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0075"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064"
	}
	return ""
}
func (_fgde *CT_Empty) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ebggd ST_TLAnimateBehaviorValueType) Validate() error { return _ebggd.ValidateWithPath("") }

type ST_PlaceholderType byte
type CT_OptionalBlackTransition struct {

	// Transition Through Black
	ThruBlkAttr *bool
}

func (_gdcg *CT_SlideMaster) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gdcg.PreserveAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_gdcg.PreserveAttr))})
	}
	e.EncodeToken(start)
	_dage := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gdcg.CSld, _dage)
	_fcecb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_gdcg.ClrMap, _fcecb)
	if _gdcg.SldLayoutIdLst != nil {
		_faabc := _e.StartElement{Name: _e.Name{Local: "\u0070\u003as\u006c\u0064\u004ca\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gdcg.SldLayoutIdLst, _faabc)
	}
	if _gdcg.Transition != nil {
		_agge := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gdcg.Transition, _agge)
	}
	if _gdcg.Timing != nil {
		_ccaa := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_gdcg.Timing, _ccaa)
	}
	if _gdcg.Hf != nil {
		_adac := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_gdcg.Hf, _adac)
	}
	if _gdcg.TxStyles != nil {
		_faed := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_gdcg.TxStyles, _faed)
	}
	if _gdcg.ExtLst != nil {
		_ccfd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdcg.ExtLst, _ccfd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type TagLst struct{ CT_TagList }

func (_gcgac *CT_OleObjectLink) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fccad := range start.Attr {
		if _fccad.Name.Local == "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063" {
			_cabd, _eaceg := _a.ParseBool(_fccad.Value)
			if _eaceg != nil {
				return _eaceg
			}
			_gcgac.UpdateAutomaticAttr = &_cabd
			continue
		}
	}
_fgafe:
	for {
		_faba, _cbe := d.Token()
		if _cbe != nil {
			return _cbe
		}
		switch _gcef := _faba.(type) {
		case _e.StartElement:
			switch _gcef.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcgac.ExtLst = NewCT_ExtensionList()
				if _bbedd := d.DecodeElement(_gcgac.ExtLst, &_gcef); _bbedd != nil {
					return _bbedd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b\u0020\u0025v", _gcef.Name)
				if _bcbe := d.Skip(); _bcbe != nil {
					return _bcbe
				}
			}
		case _e.EndElement:
			break _fgafe
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_aefbd *CT_Rel) ValidateWithPath(path string) error { return nil }
func (_cgfbea ST_TLOleChartBuildType) String() string {
	switch _cgfbea {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 5:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

// Validate validates the CT_Presentation and its children
func (_bbaa *CT_Presentation) Validate() error {
	return _bbaa.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}
func ParseUnionST_PositivePercentage(s string) (_da.ST_PositivePercentage, error) {
	return _da.ParseUnionST_PositivePercentage(s)
}
func _efaca(_adeaaa bool) uint8 {
	if _adeaaa {
		return 1
	}
	return 0
}
func (_dgfdg ST_TLAnimateBehaviorCalcMode) ValidateWithPath(path string) error {
	switch _dgfdg {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfdg))
	}
	return nil
}

type CT_TLByAnimateColorTransform struct {

	// RGB
	Rgb *CT_TLByRgbColorTransform

	// HSL
	Hsl *CT_TLByHslColorTransform
}

func (_egfcc ST_PhotoAlbumFrameShape) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gecc := _e.Attr{}
	_gecc.Name = name
	switch _egfcc {
	case ST_PhotoAlbumFrameShapeUnset:
		_gecc.Value = ""
	case ST_PhotoAlbumFrameShapeFrameStyle1:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case ST_PhotoAlbumFrameShapeFrameStyle2:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case ST_PhotoAlbumFrameShapeFrameStyle3:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case ST_PhotoAlbumFrameShapeFrameStyle4:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case ST_PhotoAlbumFrameShapeFrameStyle5:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case ST_PhotoAlbumFrameShapeFrameStyle6:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case ST_PhotoAlbumFrameShapeFrameStyle7:
		_gecc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return _gecc, nil
}
func (_gcfafc *CT_TLTimeConditionList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fddg:
	for {
		_gccb, _cbdb := d.Token()
		if _cbdb != nil {
			return _cbdb
		}
		switch _bafee := _gccb.(type) {
		case _e.StartElement:
			switch _bafee.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}:
				_caaea := NewCT_TLTimeCondition()
				if _fdafda := d.DecodeElement(_caaea, &_bafee); _fdafda != nil {
					return _fdafda
				}
				_gcfafc.Cond = append(_gcfafc.Cond, _caaea)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bafee.Name)
				if _ggbbe := d.Skip(); _ggbbe != nil {
					return _ggbbe
				}
			}
		case _e.EndElement:
			break _fddg
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the SldMaster and its children
func (_aebe *SldMaster) Validate() error {
	return _aebe.ValidateWithPath("\u0053l\u0064\u004d\u0061\u0073\u0074\u0065r")
}
func (_cfdff *ST_TLTimeNodeFillType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_cfdff = 0
	case "\u0072\u0065\u006d\u006f\u0076\u0065":
		*_cfdff = 1
	case "\u0066\u0072\u0065\u0065\u007a\u0065":
		*_cfdff = 2
	case "\u0068\u006f\u006c\u0064":
		*_cfdff = 3
	case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
		*_cfdff = 4
	}
	return nil
}
func (_dabgd ST_TLTimeNodeType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fabdf := _e.Attr{}
	_fabdf.Name = name
	switch _dabgd {
	case ST_TLTimeNodeTypeUnset:
		_fabdf.Value = ""
	case ST_TLTimeNodeTypeClickEffect:
		_fabdf.Value = "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeWithEffect:
		_fabdf.Value = "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeAfterEffect:
		_fabdf.Value = "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeMainSeq:
		_fabdf.Value = "\u006da\u0069\u006e\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeInteractiveSeq:
		_fabdf.Value = "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeClickPar:
		_fabdf.Value = "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case ST_TLTimeNodeTypeWithGroup:
		_fabdf.Value = "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case ST_TLTimeNodeTypeAfterGroup:
		_fabdf.Value = "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case ST_TLTimeNodeTypeTmRoot:
		_fabdf.Value = "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return _fabdf, nil
}
func (_gfaga *NotesMaster) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gfaga.CT_NotesMaster = *NewCT_NotesMaster()
_gdcbc:
	for {
		_faad, _dfbaa := d.Token()
		if _dfbaa != nil {
			return _dfbaa
		}
		switch _daac := _faad.(type) {
		case _e.StartElement:
			switch _daac.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eedcec := d.DecodeElement(_gfaga.CSld, &_daac); _eedcec != nil {
					return _eedcec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bfgea := d.DecodeElement(_gfaga.ClrMap, &_daac); _bfgea != nil {
					return _bfgea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_gfaga.Hf = NewCT_HeaderFooter()
				if _ggefeg := d.DecodeElement(_gfaga.Hf, &_daac); _ggefeg != nil {
					return _ggefeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_gfaga.NotesStyle = _da.NewCT_TextListStyle()
				if _fgfg := d.DecodeElement(_gfaga.NotesStyle, &_daac); _fgfg != nil {
					return _fgfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfaga.ExtLst = NewCT_ExtensionListModify()
				if _dfadb := d.DecodeElement(_gfaga.ExtLst, &_daac); _dfadb != nil {
					return _dfadb
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025\u0076", _daac.Name)
				if _ddbee := d.Skip(); _ddbee != nil {
					return _ddbee
				}
			}
		case _e.EndElement:
			break _gdcbc
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSorterViewProperties and its children, prefixing error messages with path
func (_fccg *CT_SlideSorterViewProperties) ValidateWithPath(path string) error {
	if _faeeg := _fccg.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _faeeg != nil {
		return _faeeg
	}
	if _fccg.ExtLst != nil {
		if _ggca := _fccg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggca != nil {
			return _ggca
		}
	}
	return nil
}
func NewCT_NotesViewProperties() *CT_NotesViewProperties {
	_bagb := &CT_NotesViewProperties{}
	_bagb.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _bagb
}
func (_feafd *ST_TLTimeNodeType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_feafd = 0
	case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
		*_feafd = 1
	case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
		*_feafd = 2
	case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
		*_feafd = 3
	case "\u006da\u0069\u006e\u0053\u0065\u0071":
		*_feafd = 4
	case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
		*_feafd = 5
	case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
		*_feafd = 6
	case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
		*_feafd = 7
	case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_feafd = 8
	case "\u0074\u006d\u0052\u006f\u006f\u0074":
		*_feafd = 9
	}
	return nil
}
func NewCT_Picture() *CT_Picture {
	_eefc := &CT_Picture{}
	_eefc.NvPicPr = NewCT_PictureNonVisual()
	_eefc.BlipFill = _da.NewCT_BlipFillProperties()
	_eefc.SpPr = _da.NewCT_ShapeProperties()
	return _eefc
}

type AG_Ole struct {
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_ggff := &CT_GraphicalObjectFrameNonVisual{}
	_ggff.CNvPr = _da.NewCT_NonVisualDrawingProps()
	_ggff.CNvGraphicFramePr = _da.NewCT_NonVisualGraphicFrameProperties()
	_ggff.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _ggff
}
func (_aaedc ST_SplitterBarState) ValidateWithPath(path string) error {
	switch _aaedc {
	case 0, 1, 2, 3:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaedc))
	}
	return nil
}
func (_dace *CT_TLGraphicalObjectBuild) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dace.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_dace.SpidAttr)})
	}
	if _dace.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_dace.GrpIdAttr)})
	}
	if _dace.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_dace.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _dace.BldAsOne != nil {
		_deea := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}}
		e.EncodeElement(_dace.BldAsOne, _deea)
	}
	if _dace.BldSub != nil {
		_ggce := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0053\u0075\u0062"}}
		e.EncodeElement(_dace.BldSub, _ggce)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_agcaa *ST_TLTimeNodeFillType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gebdf, _eacbd := d.Token()
	if _eacbd != nil {
		return _eacbd
	}
	if _fgcaed, _acdag := _gebdf.(_e.EndElement); _acdag && _fgcaed.Name == start.Name {
		*_agcaa = 1
		return nil
	}
	if _egbea, _bfcbc := _gebdf.(_e.CharData); !_bfcbc {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gebdf)
	} else {
		switch string(_egbea) {
		case "":
			*_agcaa = 0
		case "\u0072\u0065\u006d\u006f\u0076\u0065":
			*_agcaa = 1
		case "\u0066\u0072\u0065\u0065\u007a\u0065":
			*_agcaa = 2
		case "\u0068\u006f\u006c\u0064":
			*_agcaa = 3
		case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
			*_agcaa = 4
		}
	}
	_gebdf, _eacbd = d.Token()
	if _eacbd != nil {
		return _eacbd
	}
	if _fbeb, _bgbe := _gebdf.(_e.EndElement); _bgbe && _fbeb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gebdf)
}

// ValidateWithPath validates the CT_TLTimeTargetElement and its children, prefixing error messages with path
func (_ddedc *CT_TLTimeTargetElement) ValidateWithPath(path string) error {
	if _ddedc.SldTgt != nil {
		if _bbgbb := _ddedc.SldTgt.ValidateWithPath(path + "\u002fS\u006c\u0064\u0054\u0067\u0074"); _bbgbb != nil {
			return _bbgbb
		}
	}
	if _ddedc.SndTgt != nil {
		if _ecaab := _ddedc.SndTgt.ValidateWithPath(path + "\u002fS\u006e\u0064\u0054\u0067\u0074"); _ecaab != nil {
			return _ecaab
		}
	}
	if _ddedc.SpTgt != nil {
		if _bdadg := _ddedc.SpTgt.ValidateWithPath(path + "\u002f\u0053\u0070\u0054\u0067\u0074"); _bdadg != nil {
			return _bdadg
		}
	}
	if _ddedc.InkTgt != nil {
		if _geafd := _ddedc.InkTgt.ValidateWithPath(path + "\u002fI\u006e\u006b\u0054\u0067\u0074"); _geafd != nil {
			return _geafd
		}
	}
	return nil
}
func (_fabdb *EG_ExtensionList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fabdb.Ext != nil {
		_ecdb := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _abegc := range _fabdb.Ext {
			e.EncodeElement(_abegc, _ecdb)
		}
	}
	return nil
}

type CT_CustomerDataList struct {

	// Customer Data
	CustData []*CT_CustomerData

	// Customer Data Tags
	Tags *CT_TagsData
}

func (_eebgc *ST_OleObjectFollowColorScheme) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_aaed, _ggafb := d.Token()
	if _ggafb != nil {
		return _ggafb
	}
	if _eagbbc, _cfde := _aaed.(_e.EndElement); _cfde && _eagbbc.Name == start.Name {
		*_eebgc = 1
		return nil
	}
	if _acebd, _gfab := _aaed.(_e.CharData); !_gfab {
		return _d.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaed)
	} else {
		switch string(_acebd) {
		case "":
			*_eebgc = 0
		case "\u006e\u006f\u006e\u0065":
			*_eebgc = 1
		case "\u0066\u0075\u006c\u006c":
			*_eebgc = 2
		case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
			*_eebgc = 3
		}
	}
	_aaed, _ggafb = d.Token()
	if _ggafb != nil {
		return _ggafb
	}
	if _fdedb, _adfee := _aaed.(_e.EndElement); _adfee && _fdedb.Name == start.Name {
		return nil
	}
	return _d.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaed)
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_ccagd *EG_ExtensionList) ValidateWithPath(path string) error {
	for _febge, _dagfc := range _ccagd.Ext {
		if _gecgd := _dagfc.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _febge)); _gecgd != nil {
			return _gecgd
		}
	}
	return nil
}
func (_dcfaa *CT_SlideMasterIdListEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dcga := range start.Attr {
		if _dcga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcga.Name.Local == "\u0069\u0064" || _dcga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dcga.Name.Local == "\u0069\u0064" {
			_cfadd, _bdgd := _dcga.Value, error(nil)
			if _bdgd != nil {
				return _bdgd
			}
			_dcfaa.RIdAttr = _cfadd
			continue
		}
		if _dcga.Name.Local == "\u0069\u0064" {
			_ddbdf, _aece := _a.ParseUint(_dcga.Value, 10, 32)
			if _aece != nil {
				return _aece
			}
			_gegcf := uint32(_ddbdf)
			_dcfaa.IdAttr = &_gegcf
			continue
		}
	}
_bcgda:
	for {
		_ebfa, _adbg := d.Token()
		if _adbg != nil {
			return _adbg
		}
		switch _fbfd := _ebfa.(type) {
		case _e.StartElement:
			switch _fbfd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcfaa.ExtLst = NewCT_ExtensionList()
				if _ebab := d.DecodeElement(_dcfaa.ExtLst, &_fbfd); _ebab != nil {
					return _ebab
				}
			default:
				_f.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _fbfd.Name)
				if _dbbe := d.Skip(); _dbbe != nil {
					return _dbbe
				}
			}
		case _e.EndElement:
			break _bcgda
		case _e.CharData:
		}
	}
	return nil
}
func (_ebbd *CT_TLOleBuildChart) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ebbd.BldAttr != ST_TLOleChartBuildTypeUnset {
		_gbaad, _eecdd := _ebbd.BldAttr.MarshalXMLAttr(_e.Name{Local: "\u0062\u006c\u0064"})
		if _eecdd != nil {
			return _eecdd
		}
		start.Attr = append(start.Attr, _gbaad)
	}
	if _ebbd.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ebbd.AnimBgAttr))})
	}
	if _ebbd.SpidAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_ebbd.SpidAttr)})
	}
	if _ebbd.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _d.Sprintf("\u0025\u0076", *_ebbd.GrpIdAttr)})
	}
	if _ebbd.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _d.Sprintf("\u0025\u0064", _efaca(*_ebbd.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bgde *ST_WebScreenSize) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bgde = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_bgde = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_bgde = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_bgde = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_bgde = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_bgde = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_bgde = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_bgde = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_bgde = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_bgde = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
		*_bgde = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_bgde = 11
	}
	return nil
}
func (_ecef *CT_OutlineViewSlideEntry) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _eaefd := range start.Attr {
		if _eaefd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eaefd.Name.Local == "\u0069\u0064" || _eaefd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eaefd.Name.Local == "\u0069\u0064" {
			_add, _abed := _eaefd.Value, error(nil)
			if _abed != nil {
				return _abed
			}
			_ecef.IdAttr = _add
			continue
		}
		if _eaefd.Name.Local == "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065" {
			_eedca, _cbbfa := _a.ParseBool(_eaefd.Value)
			if _cbbfa != nil {
				return _cbbfa
			}
			_ecef.CollapseAttr = &_eedca
			continue
		}
	}
	for {
		_dfeba, _badce := d.Token()
		if _badce != nil {
			return _d.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004futl\u0069ne\u0056\u0069\u0065\u0077\u0053\u006c\u0069de\u0045\u006e\u0074\u0072\u0079\u003a\u0020%\u0073", _badce)
		}
		if _gfff, _bgbg := _dfeba.(_e.EndElement); _bgbg && _gfff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aced *CT_GroupShape) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_dgcc := _e.StartElement{Name: _e.Name{Local: "p\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_aced.NvGrpSpPr, _dgcc)
	_fbbg := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_aced.GrpSpPr, _fbbg)
	if _aced.Choice != nil {
		for _, _fegef := range _aced.Choice {
			_fegef.MarshalXML(e, _e.StartElement{})
		}
	}
	if _aced.ExtLst != nil {
		_egfa := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aced.ExtLst, _egfa)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ShowInfoBrowse and its children, prefixing error messages with path
func (_gdae *CT_ShowInfoBrowse) ValidateWithPath(path string) error { return nil }
func (_acded ST_TLOleChartBuildType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_acded.String(), start)
}

type CT_TLCommonBehaviorData struct {

	// Additive
	AdditiveAttr ST_TLBehaviorAdditiveType

	// Accumulate
	AccumulateAttr ST_TLBehaviorAccumulateType

	// Transform Type
	XfrmTypeAttr ST_TLBehaviorTransformType

	// From
	FromAttr *string

	// To
	ToAttr *string

	// By
	ByAttr *string

	// Runtime Context
	RctxAttr *string

	// Override
	OverrideAttr ST_TLBehaviorOverrideType
	CTn          *CT_TLCommonTimeNodeData

	// Target Element
	TgtEl *CT_TLTimeTargetElement

	// Attribute Name List
	AttrNameLst *CT_TLBehaviorAttributeNameList
}

func (_gbbc *ST_TLChartSubelementType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_gbbc = 0
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_gbbc = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_gbbc = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_gbbc = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_gbbc = 4
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_gbbc = 5
	}
	return nil
}

type CT_TLCommonMediaNodeData struct {

	// Volume
	VolAttr *_da.ST_PositiveFixedPercentage

	// Mute
	MuteAttr *bool

	// Number of Slides
	NumSldAttr *uint32

	// Show When Stopped
	ShowWhenStoppedAttr *bool

	// Common Time Node Properties
	CTn   *CT_TLCommonTimeNodeData
	TgtEl *CT_TLTimeTargetElement
}

func (_gegd *CT_Slide) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gegd.CSld = NewCT_CommonSlideData()
	for _, _fefa := range start.Attr {
		if _fefa.Name.Local == "\u0073\u0068\u006f\u0077" {
			_eeeddg, _geba := _a.ParseBool(_fefa.Value)
			if _geba != nil {
				return _geba
			}
			_gegd.ShowAttr = &_eeeddg
			continue
		}
		if _fefa.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_aeaf, _edfec := _a.ParseBool(_fefa.Value)
			if _edfec != nil {
				return _edfec
			}
			_gegd.ShowMasterSpAttr = &_aeaf
			continue
		}
		if _fefa.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_ffbf, _ffbce := _a.ParseBool(_fefa.Value)
			if _ffbce != nil {
				return _ffbce
			}
			_gegd.ShowMasterPhAnimAttr = &_ffbf
			continue
		}
	}
_efbd:
	for {
		_cdbfb, _dcabe := d.Token()
		if _dcabe != nil {
			return _dcabe
		}
		switch _ccge := _cdbfb.(type) {
		case _e.StartElement:
			switch _ccge.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _adaff := d.DecodeElement(_gegd.CSld, &_ccge); _adaff != nil {
					return _adaff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gegd.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _deefa := d.DecodeElement(_gegd.ClrMapOvr, &_ccge); _deefa != nil {
					return _deefa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_gegd.Transition = NewCT_SlideTransition()
				if _gfgc := d.DecodeElement(_gegd.Transition, &_ccge); _gfgc != nil {
					return _gfgc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_gegd.Timing = NewCT_SlideTiming()
				if _aaeb := d.DecodeElement(_gegd.Timing, &_ccge); _aaeb != nil {
					return _aaeb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gegd.ExtLst = NewCT_ExtensionListModify()
				if _bdaac := d.DecodeElement(_gegd.ExtLst, &_ccge); _bdaac != nil {
					return _bdaac
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0020\u0025\u0076", _ccge.Name)
				if _eafa := d.Skip(); _eafa != nil {
					return _eafa
				}
			}
		case _e.EndElement:
			break _efbd
		case _e.CharData:
		}
	}
	return nil
}
func (_bgbdbb ST_TLAnimateColorDirection) ValidateWithPath(path string) error {
	switch _bgbdbb {
	case 0, 1, 2:
	default:
		return _d.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgbdbb))
	}
	return nil
}
func (_eecc *CT_ExtensionList) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _eecc.Ext != nil {
		_gacbf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _ceff := range _eecc.Ext {
			e.EncodeElement(_ceff, _gacbf)
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cbced *CT_TLTimeCondition) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ggdaag := range start.Attr {
		if _ggdaag.Name.Local == "\u0065\u0076\u0074" {
			_cbced.EvtAttr.UnmarshalXMLAttr(_ggdaag)
			continue
		}
		if _ggdaag.Name.Local == "\u0064\u0065\u006ca\u0079" {
			_ggfcg, _cdeb := ParseUnionST_TLTime(_ggdaag.Value)
			if _cdeb != nil {
				return _cdeb
			}
			_cbced.DelayAttr = &_ggfcg
			continue
		}
	}
_dfaba:
	for {
		_ffbd, _addef := d.Token()
		if _addef != nil {
			return _addef
		}
		switch _eecde := _ffbd.(type) {
		case _e.StartElement:
			switch _eecde.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				_cbced.TgtEl = NewCT_TLTimeTargetElement()
				if _dafb := d.DecodeElement(_cbced.TgtEl, &_eecde); _dafb != nil {
					return _dafb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
				_cbced.Tn = NewCT_TLTriggerTimeNodeID()
				if _gbab := d.DecodeElement(_cbced.Tn, &_eecde); _gbab != nil {
					return _gbab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
				_cbced.Rtn = NewCT_TLTriggerRuntimeNode()
				if _eedcge := d.DecodeElement(_cbced.Rtn, &_eecde); _eedcge != nil {
					return _eedcge
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065C\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _eecde.Name)
				if _bbcac := d.Skip(); _bbcac != nil {
					return _bbcac
				}
			}
		case _e.EndElement:
			break _dfaba
		case _e.CharData:
		}
	}
	return nil
}

type CT_SmartTags struct{ IdAttr string }

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_bfgc *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _bfgc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func NewCT_OleObject() *CT_OleObject {
	_eeda := &CT_OleObject{}
	_eeda.Choice = NewCT_OleObjectChoice()
	return _eeda
}
func (_eacddd *ST_PlaceholderSize) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_eacddd = 0
	case "\u0066\u0075\u006c\u006c":
		*_eacddd = 1
	case "\u0068\u0061\u006c\u0066":
		*_eacddd = 2
	case "\u0071u\u0061\u0072\u0074\u0065\u0072":
		*_eacddd = 3
	}
	return nil
}

// ValidateWithPath validates the CT_OrientationTransition and its children, prefixing error messages with path
func (_bfcc *CT_OrientationTransition) ValidateWithPath(path string) error {
	if _ebea := _bfcc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _ebea != nil {
		return _ebea
	}
	return nil
}
func (_eagce *CT_TLMediaNodeVideo) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eagce.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _efceg := range start.Attr {
		if _efceg.Name.Local == "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e" {
			_acffa, _agfdc := _a.ParseBool(_efceg.Value)
			if _agfdc != nil {
				return _agfdc
			}
			_eagce.FullScrnAttr = &_acffa
			continue
		}
	}
_cfcaf:
	for {
		_befced, _bbgf := d.Token()
		if _bbgf != nil {
			return _bbgf
		}
		switch _gdcaa := _befced.(type) {
		case _e.StartElement:
			switch _gdcaa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _eggg := d.DecodeElement(_eagce.CMediaNode, &_gdcaa); _eggg != nil {
					return _eggg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0056\u0069\u0064\u0065\u006f\u0020\u0025\u0076", _gdcaa.Name)
				if _baca := d.Skip(); _baca != nil {
					return _baca
				}
			}
		case _e.EndElement:
			break _cfcaf
		case _e.CharData:
		}
	}
	return nil
}

type CT_Kinsoku struct {

	// Language
	LangAttr *string

	// Invalid Kinsoku Start Characters
	InvalStCharsAttr string

	// Invalid Kinsoku End Characters
	InvalEndCharsAttr string
}

func (_debdg *CT_TLTemplateList) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_edbcg:
	for {
		_bcfg, _fdbce := d.Token()
		if _fdbce != nil {
			return _fdbce
		}
		switch _aggad := _bcfg.(type) {
		case _e.StartElement:
			switch _aggad.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}:
				_gbbef := NewCT_TLTemplate()
				if _eceb := d.DecodeElement(_gbbef, &_aggad); _eceb != nil {
					return _eceb
				}
				_debdg.Tmpl = append(_debdg.Tmpl, _gbbef)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aggad.Name)
				if _dbdfe := d.Skip(); _dbdfe != nil {
					return _dbdfe
				}
			}
		case _e.EndElement:
			break _edbcg
		case _e.CharData:
		}
	}
	return nil
}
func (_ffaeg ST_TLTriggerEvent) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_agfga := _e.Attr{}
	_agfga.Name = name
	switch _ffaeg {
	case ST_TLTriggerEventUnset:
		_agfga.Value = ""
	case ST_TLTriggerEventOnBegin:
		_agfga.Value = "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case ST_TLTriggerEventOnEnd:
		_agfga.Value = "\u006f\u006e\u0045n\u0064"
	case ST_TLTriggerEventBegin:
		_agfga.Value = "\u0062\u0065\u0067i\u006e"
	case ST_TLTriggerEventEnd:
		_agfga.Value = "\u0065\u006e\u0064"
	case ST_TLTriggerEventOnClick:
		_agfga.Value = "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnDblClick:
		_agfga.Value = "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnMouseOver:
		_agfga.Value = "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case ST_TLTriggerEventOnMouseOut:
		_agfga.Value = "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case ST_TLTriggerEventOnNext:
		_agfga.Value = "\u006f\u006e\u004e\u0065\u0078\u0074"
	case ST_TLTriggerEventOnPrev:
		_agfga.Value = "\u006f\u006e\u0050\u0072\u0065\u0076"
	case ST_TLTriggerEventOnStopAudio:
		_agfga.Value = "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return _agfga, nil
}

// ValidateWithPath validates the CT_OutlineViewProperties and its children, prefixing error messages with path
func (_eedb *CT_OutlineViewProperties) ValidateWithPath(path string) error {
	if _bgd := _eedb.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _bgd != nil {
		return _bgd
	}
	if _eedb.SldLst != nil {
		if _cade := _eedb.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _cade != nil {
			return _cade
		}
	}
	if _eedb.ExtLst != nil {
		if _dgead := _eedb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgead != nil {
			return _dgead
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateEffectBehavior and its children, prefixing error messages with path
func (_dafd *CT_TLAnimateEffectBehavior) ValidateWithPath(path string) error {
	if _daffe := _dafd.TransitionAttr.ValidateWithPath(path + "\u002fT\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _daffe != nil {
		return _daffe
	}
	if _dfag := _dafd.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _dfag != nil {
		return _dfag
	}
	if _dafd.Progress != nil {
		if _caefd := _dafd.Progress.ValidateWithPath(path + "\u002fP\u0072\u006f\u0067\u0072\u0065\u0073s"); _caefd != nil {
			return _caefd
		}
	}
	return nil
}
func (_bgadeb ST_WebColorType) String() string {
	switch _bgadeb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case 3:
		return "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 4:
		return "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case 5:
		return "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case 6:
		return "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return ""
}
func (_gcedg *CT_SlideLayout) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gcedg.CSld = NewCT_CommonSlideData()
	for _, _gbdcg := range start.Attr {
		if _gbdcg.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_cegeb, _bbad := _gbdcg.Value, error(nil)
			if _bbad != nil {
				return _bbad
			}
			_gcedg.MatchingNameAttr = &_cegeb
			continue
		}
		if _gbdcg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gcedg.TypeAttr.UnmarshalXMLAttr(_gbdcg)
			continue
		}
		if _gbdcg.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_gcab, _efda := _a.ParseBool(_gbdcg.Value)
			if _efda != nil {
				return _efda
			}
			_gcedg.PreserveAttr = &_gcab
			continue
		}
		if _gbdcg.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_gfgfa, _agag := _a.ParseBool(_gbdcg.Value)
			if _agag != nil {
				return _agag
			}
			_gcedg.UserDrawnAttr = &_gfgfa
			continue
		}
		if _gbdcg.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_bcda, _fdefg := _a.ParseBool(_gbdcg.Value)
			if _fdefg != nil {
				return _fdefg
			}
			_gcedg.ShowMasterSpAttr = &_bcda
			continue
		}
		if _gbdcg.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_agegf, _eedf := _a.ParseBool(_gbdcg.Value)
			if _eedf != nil {
				return _eedf
			}
			_gcedg.ShowMasterPhAnimAttr = &_agegf
			continue
		}
	}
_cgfc:
	for {
		_agce, _eaec := d.Token()
		if _eaec != nil {
			return _eaec
		}
		switch _ceed := _agce.(type) {
		case _e.StartElement:
			switch _ceed.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bacee := d.DecodeElement(_gcedg.CSld, &_ceed); _bacee != nil {
					return _bacee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gcedg.ClrMapOvr = _da.NewCT_ColorMappingOverride()
				if _agfca := d.DecodeElement(_gcedg.ClrMapOvr, &_ceed); _agfca != nil {
					return _agfca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_gcedg.Transition = NewCT_SlideTransition()
				if _gbbdc := d.DecodeElement(_gcedg.Transition, &_ceed); _gbbdc != nil {
					return _gbbdc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_gcedg.Timing = NewCT_SlideTiming()
				if _ccfaf := d.DecodeElement(_gcedg.Timing, &_ceed); _ccfaf != nil {
					return _ccfaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_gcedg.Hf = NewCT_HeaderFooter()
				if _fceef := d.DecodeElement(_gcedg.Hf, &_ceed); _fceef != nil {
					return _fceef
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcedg.ExtLst = NewCT_ExtensionListModify()
				if _fddbg := d.DecodeElement(_gcedg.ExtLst, &_ceed); _fddbg != nil {
					return _fddbg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061y\u006fu\u0074\u0020\u0025\u0076", _ceed.Name)
				if _bafce := d.Skip(); _bafce != nil {
					return _bafce
				}
			}
		case _e.EndElement:
			break _cgfc
		case _e.CharData:
		}
	}
	return nil
}
func (_gacbg ST_TLAnimateMotionPathEditMode) Validate() error { return _gacbg.ValidateWithPath("") }
func (_ccfcd *CT_TLSetBehavior) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ccfcd.CBhvr = NewCT_TLCommonBehaviorData()
_fdcbg:
	for {
		_cacdbc, _bgfb := d.Token()
		if _bgfb != nil {
			return _bgfb
		}
		switch _bgfc := _cacdbc.(type) {
		case _e.StartElement:
			switch _bgfc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _adgfb := d.DecodeElement(_ccfcd.CBhvr, &_bgfc); _adgfb != nil {
					return _adgfb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_ccfcd.To = NewCT_TLAnimVariant()
				if _gaag := d.DecodeElement(_ccfcd.To, &_bgfc); _gaag != nil {
					return _gaag
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0065\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025v", _bgfc.Name)
				if _cegd := d.Skip(); _cegd != nil {
					return _cegd
				}
			}
		case _e.EndElement:
			break _fdcbg
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_aaccb *CT_SmartTags) ValidateWithPath(path string) error { return nil }
func (_fcgg *CT_EmbeddedFontListEntry) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_dbcf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0066\u006f\u006e\u0074"}}
	e.EncodeElement(_fcgg.Font, _dbcf)
	if _fcgg.Regular != nil {
		_bcdc := _e.StartElement{Name: _e.Name{Local: "\u0070:\u0072\u0065\u0067\u0075\u006c\u0061r"}}
		e.EncodeElement(_fcgg.Regular, _bcdc)
	}
	if _fcgg.Bold != nil {
		_aedcf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062\u006f\u006c\u0064"}}
		e.EncodeElement(_fcgg.Bold, _aedcf)
	}
	if _fcgg.Italic != nil {
		_cfd := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0069\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_fcgg.Italic, _cfd)
	}
	if _fcgg.BoldItalic != nil {
		_becf := _e.StartElement{Name: _e.Name{Local: "\u0070\u003a\u0062o\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_fcgg.BoldItalic, _becf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func init() {
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_SideDirectionTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e", NewCT_CornerDirectionTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e", NewCT_EightDirectionTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e", NewCT_OrientationTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_InOutTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_OptionalBlackTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SplitTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_WheelTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e", NewCT_TransitionStartSoundAction)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e", NewCT_TransitionSoundAction)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SlideTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065", NewCT_TLIterateIntervalTime)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_TLIterateIntervalPercentage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061", NewCT_TLIterateData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064", NewCT_TLSubShapeId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTextTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074", NewCT_TLOleChartTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_TLShapeTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTimeTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044", NewCT_TLTriggerTimeNodeID)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065", NewCT_TLTriggerRuntimeNode)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e", NewCT_TLTimeCondition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074", NewCT_TLTimeConditionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_TimeNodeList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonTimeNodeData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c", NewCT_TLTimeNodeParallel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065", NewCT_TLTimeNodeSequence)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065", NewCT_TLTimeNodeExclusive)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074", NewCT_TLBehaviorAttributeNameList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061", NewCT_TLCommonBehaviorData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c", NewCT_TLAnimVariantBooleanVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c", NewCT_TLAnimVariantIntegerVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c", NewCT_TLAnimVariantFloatVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l", NewCT_TLAnimVariantStringVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074", NewCT_TLAnimVariant)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_TLTimeAnimateValue)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t", NewCT_TLTimeAnimateValueList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLAnimateBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByRgbColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByHslColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d", NewCT_TLByAnimateColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateColorBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateEffectBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074", NewCT_TLPoint)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateMotionBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072", NewCT_TLAnimateRotationBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateScaleBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLCommandBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072", NewCT_TLSetBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonMediaNodeData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f", NewCT_TLMediaNodeAudio)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f", NewCT_TLMediaNodeVideo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065", NewCT_TLTemplate)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074", NewCT_TLTemplateList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TLBuildParagraph)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d", NewCT_TLBuildDiagram)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074", NewCT_TLOleBuildChart)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd", NewCT_TLGraphicalObjectBuild)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074", NewCT_BuildList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067", NewCT_SlideTiming)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079", NewCT_Empty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065", NewCT_IndexRange)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079", NewCT_SlideRelationshipListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074", NewCT_SlideRelationshipList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064", NewCT_CustomShowId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061", NewCT_CustomerData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061", NewCT_TagsData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074", NewCT_CustomerDataList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079", NewCT_ExtensionListModify)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072", NewCT_CommentAuthor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074", NewCT_CommentAuthorList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064", NewCT_OleObjectEmbed)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b", NewCT_OleObjectLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074", NewCT_ControlList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_SlideIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074", NewCT_SlideIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideMasterIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_SlideMasterIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_NotesMasterIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_NotesMasterIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079", NewCT_HandoutMasterIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074", NewCT_HandoutMasterIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064", NewCT_EmbeddedFontDataId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_EmbeddedFontListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074", NewCT_EmbeddedFontList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077", NewCT_CustomShow)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074", NewCT_CustomShowList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d", NewCT_PhotoAlbum)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065", NewCT_SlideSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075", NewCT_Kinsoku)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072", NewCT_ModifyVerifier)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewCT_Presentation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_HtmlPublishProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_WebProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_PrintProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065", NewCT_ShowInfoBrowse)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b", NewCT_ShowInfoKiosk)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ShowProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_PresentationProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072", NewCT_Placeholder)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073", NewCT_ApplicationNonVisualDrawingProps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BackgroundProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewCT_Background)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061", NewCT_CommonSlideData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065", NewCT_Slide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074", NewCT_SlideLayout)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_SlideMasterTextStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideLayoutIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074", NewCT_SlideLayoutIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072", NewCT_SlideMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewCT_HandoutMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072", NewCT_NotesMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065", NewCT_NotesSlide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideSyncProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067", NewCT_StringTag)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074", NewCT_TagList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e", NewCT_NormalViewPortion)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NormalViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CommonViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_NotesTextViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079", NewCT_OutlineViewSlideEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_OutlineViewSlideList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_OutlineViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_SlideSorterViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065", NewCT_Guide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GuideList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_CommonSlideViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_NotesViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "c\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074", NewCmAuthorLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0063\u006d\u004cs\u0074", NewCmLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006f\u006c\u0065\u004f\u0062\u006a", NewOleObj)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewPresentation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072", NewPresentationPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073\u006c\u0064", NewSld)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004c\u0061\u0079\u006f\u0075t", NewSldLayout)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004d\u0061\u0073\u0074\u0065r", NewSldMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewHandoutMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "n\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072", NewNotesMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006e\u006f\u0074e\u0073", NewNotes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u0053\u0079\u006e\u0063\u0050r", NewSldSyncPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0074\u0061\u0067\u004c\u0073\u0074", NewTagLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0076\u0069\u0065\u0077\u0050\u0072", NewViewPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065", NewEG_SlideListChoice)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065", NewEG_ShowType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065", NewEG_TopLevelSlide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewEG_ChildSlide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewEG_Background)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064", NewAG_TLBuild)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u004f\u006c\u0065", NewAG_Ole)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewAG_ChildSlide)
}
